;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D3670D5E5A80B7C64DB1C07AE5CB4A47
; Input	CRC32 :	83EDAAA0

; File Name   :	D:\compspace\objfiles\firefox\gencnval\gencnval.obj
; Format      :	COFF (X386MAGIC)
; includelib "msvcprtd"
; includelib "MSVCRTD"
; includelib "OLDNAMES"

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		public ??_C@_05PMBAOCDH@quiet?$AA@
; `string'
??_C@_05PMBAOCDH@quiet?$AA@ db 'quiet',0 ; DATA XREF: .data:0025C000o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 8
		public ??_C@_09CMGPLHNH@sourcedir?$AA@
; `string'
??_C@_09CMGPLHNH@sourcedir?$AA@	db 'sourcedir',0 ; DATA XREF: .data:0025BFECo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14h
		public ??_C@_07HIFNFPHK@destdir?$AA@
; `string'
??_C@_07HIFNFPHK@destdir?$AA@ db 'destdir',0 ; DATA XREF: .data:0025BFD8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1Ch
		public ??_C@_09JHBDCMB@copyright?$AA@
; `string'
??_C@_09JHBDCMB@copyright?$AA@ db 'copyright',0 ; DATA XREF: .data:0025BFC4o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 28h
		public ??_C@_07KBAMPNJK@verbose?$AA@
; `string'
??_C@_07KBAMPNJK@verbose?$AA@ db 'verbose',0 ; DATA XREF: .data:0025BFB0o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 30h
		public ??_C@_04PCJFHION@help?$AA@
; `string'
??_C@_04PCJFHION@help?$AA@ db 'help',0  ; DATA XREF: .data:_optionso
					; .data:0025BF9Co
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 38h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing
_knownAliases	dw ?			; DATA XREF: _main+247o
					; _addToKnownAliases+92w ...
		align 4
dword_3C	dd 402Fh dup(?)
dword_100F8	dd 4 dup(?)		; DATA XREF: _parseFile+3o
					; _parseFile+339o
		db ?
byte_10109	db 3 dup(?)		; DATA XREF: _parseLine+3BBo
		dd 3EBCh dup(?)
		db 2 dup(?)
word_1FBFE	dw ?			; DATA XREF: .data:0025BF70o
					; _main:loc_25C1F0o
		dd 0FFh	dup(?)
		db 2 dup(?)
word_1FFFE	dw ?			; DATA XREF: _main+22Co _main+240o
		dd 0Eh dup(?)
_converters	dw ?			; DATA XREF: _main+20Bo _addAlias+143r ...
word_2003A	dw ?			; DATA XREF: _addAlias+590r
					; _addAlias+5A0w ...
		dd 0FFFh dup(?)
_tagStore	dd 100h	dup(?)		; DATA XREF: .data:_tagBlocko
					; _main+1F7o ...
_tags		dw ?			; DATA XREF: _main+21Fo
					; _getTagNumber+EAr ...
word_2443A	dw ?			; DATA XREF: _addAlias+5B2r
					; _addAlias+5C7w
word_2443C	dw ?			; DATA XREF: _parseLine+3D3r
					; _addAlias+D4o ...
		align 10h
dword_24440	dd ?			; DATA XREF: _main+428r _main+43Er ...
		dd 1FFCh dup(?)
word_2C434	dw ?			; DATA XREF: _writeAliasTable+293r
		align 4
		dd 72EB3h dup(?)
dword_1F7F04	dd 910Fh dup(?)		; DATA XREF: _main+218o
_aliasLists	dw ?			; DATA XREF: _main+233o
					; _writeAliasTable+33Do ...
		align 4
		dd 7FFFh dup(?)
; char stringStore[130046]
_stringStore	db 1FBFEh dup(?)	; DATA XREF: .data:_stringBlocko
					; _main+1E3o ...
_standardTagsUsed db ?			; DATA XREF: _parseFile+1E9r
					; _parseFile+265w ...
_verbose	db ?			; DATA XREF: _main+101w _addAlias+322r ...
_converterCount	dw ?			; DATA XREF: _addAlias:loc_25DAC2r
					; _addConverter+1Er ...
_quiet		db ?			; DATA XREF: _main+113w
					; _createOneAliasList+F2r
		align 4
_tagCount	dw ?			; DATA XREF: _getTagNumber+55r
					; _getTagNumber+D5r ...
		align 4
_knownAliasesCount dw ?			; DATA XREF: _addToKnownAliases+1Er
					; _addToKnownAliases+84r ...
		align 4
_aliasListsSize	dw ?			; DATA XREF: _writeAliasTable+B2w
					; _writeAliasTable+1A0r ...
		align 10h
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25BF50h
_dataInfo	dd 14h,	20000h,	6C417643h, 10003h, 20401h ; DATA XREF: _main+2EEo
; char `addOfficialTaggedStandards'::`2'::WHITESPACE[3]
?WHITESPACE@?1??addOfficialTaggedStandards@@9@9	db ' ',9,0
					; DATA XREF: _addOfficialTaggedStandards+155o
					; _addOfficialTaggedStandards+1BFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 25BF68h
; void *stringBlock
_stringBlock	dd offset _stringStore	; DATA XREF: _parseFile+76o
					; _parseLine+A2o ...
; size_t dword_25BF6C
dword_25BF6C	dd 0			; DATA XREF: _writeAliasTable+1CAr
					; _writeAliasTable+1EFr ...
		dd offset word_1FBFE
; void *tagBlock
_tagBlock	dd offset _tagStore	; DATA XREF: _getTagNumber+190o
					; _addOfficialTaggedStandards+17Do ...
; size_t Size
Size		dd 0			; DATA XREF: _writeAliasTable+1Er
					; _writeAliasTable+1C5r ...
		dd offset dword_3C+3C4h
_lineNum	dd 1			; DATA XREF: _parseFile+47w
					; _parseFile:loc_25C905r ...
_tableOptions	dw 1			; DATA XREF: _writeAliasTable:loc_25E3C5r
					; _writeAliasTable+1DFr ...
		dw 1
_options	dd offset ??_C@_04PCJFHION@help?$AA@ ; DATA XREF: _main+46o
					; "help"
		dd 3 dup(0)
		db 68h,	0
byte_25BF9A	db 0			; DATA XREF: _main+A2r
		align 4
		dd offset ??_C@_04PCJFHION@help?$AA@ ; "help"
		dd 3 dup(0)
		db 3Fh,	0
byte_25BFAE	db 0			; DATA XREF: _main+ADr
		align 10h
		dd offset ??_C@_07KBAMPNJK@verbose?$AA@	; "verbose"
		align 10h
		db 76h,	0
byte_25BFC2	db 0			; DATA XREF: _main:loc_25C10Ar
		align 4
		dd offset ??_C@_09JHBDCMB@copyright?$AA@ ; "copyright"
		dd 3 dup(0)
		db 63h,	0
byte_25BFD6	db 0			; DATA XREF: _main+2DCr
		align 4
		dd offset ??_C@_07HIFNFPHK@destdir?$AA@	; "destdir"
dword_25BFDC	dd 0			; DATA XREF: _main+41w	_main+2FDr
		dd 2 dup(0)
		dd offset dword_3C+128h
		dd offset ??_C@_09CMGPLHNH@sourcedir?$AA@ ; "sourcedir"
dword_25BFF0	dd 0			; DATA XREF: _main+37w	_main+3Cr ...
		dd 2 dup(0)
		dd offset dword_3C+137h
		dd offset ??_C@_05PMBAOCDH@quiet?$AA@ ;	"quiet"
		align 10h
		db 71h,	0
byte_25C012	db 0			; DATA XREF: _main:loc_25C11Cr
		align 4
_data		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25C014h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public _main
_main		proc near

var_314		= byte ptr -314h
var_250		= dword	ptr -250h
Code		= dword	ptr -244h
var_238		= dword	ptr -238h
var_22C		= dword	ptr -22Ch
Dest		= byte ptr -220h
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
argc		= dword	ptr  8
argv		= dword	ptr  0Ch
envp		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 314h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_314]
		mov	ecx, 0C5h ; 'Å'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	[ebp+Code], 0
		call	_u_getDataDirectory_56
		mov	ds:dword_25BFF0, eax
		mov	eax, ds:dword_25BFF0
		mov	ds:dword_25BFDC, eax
		push	offset _options
		push	7
		mov	eax, [ebp+argv]
		push	eax
		mov	ecx, [ebp+argc]
		push	ecx
		call	_u_parseArgs
		add	esp, 10h
		mov	[ebp+argc], eax
		cmp	[ebp+argc], 0
		jge	short loc_25C0B0
		mov	eax, [ebp+argc]
		neg	eax
		mov	esi, esp
		mov	ecx, [ebp+argv]
		mov	edx, [ecx+eax*4]
		push	edx
		push	offset ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; "error in	command	line argument \"%s\"\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25C0B0:				; CODE XREF: _main+64j
		cmp	[ebp+argc], 0
		jl	short loc_25C0CC
		movsx	eax, ds:byte_25BF9A
		test	eax, eax
		jnz	short loc_25C0CC
		movsx	eax, ds:byte_25BFAE
		test	eax, eax
		jz	short loc_25C10A

loc_25C0CC:				; CODE XREF: _main+A0j	_main+ABj
		mov	esi, esp
		mov	eax, [ebp+argv]
		mov	ecx, [eax]
		push	ecx
		push	offset ??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@ ; "usage: %s [-options] [convrtrs.txt]\n\t"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		xor	eax, eax
		cmp	[ebp+argc], 0
		setl	al
		jmp	loc_25C468
; ---------------------------------------------------------------------------

loc_25C10A:				; CODE XREF: _main+B6j
		movsx	eax, ds:byte_25BFC2
		test	eax, eax
		jz	short loc_25C11C
		mov	ds:_verbose, 1

loc_25C11C:				; CODE XREF: _main+FFj
		movsx	eax, ds:byte_25C012
		test	eax, eax
		jz	short loc_25C12E
		mov	ds:_quiet, 1

loc_25C12E:				; CODE XREF: _main+111j
		cmp	[ebp+argc], 2
		jl	short loc_25C145
		mov	eax, [ebp+argv]
		mov	ecx, [eax+4]
		mov	dword ptr ds:_path, ecx
		jmp	loc_25C1F0
; ---------------------------------------------------------------------------

loc_25C145:				; CODE XREF: _main+11Ej
		mov	eax, ds:dword_25BFF0
		mov	dword ptr ds:_path, eax
		cmp	dword ptr ds:_path, 0
		jz	loc_25C1E6
		mov	eax, dword ptr ds:_path
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jz	short loc_25C1E6
		mov	eax, dword ptr ds:_path
		push	eax		; Source
		lea	ecx, [ebp+Dest]
		push	ecx		; Dest
		call	_strcpy
		add	esp, 8
		mov	esi, esp
		push	0		; Val
		lea	eax, [ebp+Dest]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_250], eax
		mov	eax, [ebp+var_250]
		movsx	ecx, byte ptr [eax-1]
		cmp	ecx, 5Ch ; '\'
		jz	short loc_25C1C5
		mov	eax, [ebp+var_250]
		mov	byte ptr [eax],	5Ch ; '\'
		mov	ecx, [ebp+var_250]
		add	ecx, 1
		mov	[ebp+var_250], ecx

loc_25C1C5:				; CODE XREF: _main+197j
		push	offset ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@ ; "convrtrs.txt"
		mov	eax, [ebp+var_250]
		push	eax		; Dest
		call	_strcpy
		add	esp, 8
		lea	eax, [ebp+Dest]
		mov	dword ptr ds:_path, eax
		jmp	short loc_25C1F0
; ---------------------------------------------------------------------------

loc_25C1E6:				; CODE XREF: _main+142j _main+152j
		mov	dword ptr ds:_path, offset ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@	; "convrtrs.txt"

loc_25C1F0:				; CODE XREF: _main+12Cj _main+1D0j
		push	offset word_1FBFE ; Size
		push	0		; Val
		push	offset _stringStore ; Dst
		call	_memset
		add	esp, 0Ch
		push	400h		; Size
		push	0		; Val
		push	offset _tagStore ; Dst
		call	_memset
		add	esp, 0Ch
		push	3FFCh		; Size
		push	0		; Val
		push	offset _converters ; Dst
		call	_memset
		add	esp, 0Ch
		push	offset dword_1F7F04 ; Size
		push	0		; Val
		push	offset _tags	; Dst
		call	_memset
		add	esp, 0Ch
		push	offset word_1FFFE ; Size
		push	0		; Val
		push	offset _aliasLists ; Dst
		call	_memset
		add	esp, 0Ch
		push	offset word_1FFFE ; Size
		push	0		; Val
		push	offset _knownAliases ; Dst
		call	_memset
		add	esp, 0Ch
		push	offset ??_C@_01KDCPPGHE@r?$AA@ ; "r"
		mov	eax, dword ptr ds:_path
		push	eax
		call	_T_FileStream_open
		add	esp, 8
		mov	[ebp+var_22C], eax
		cmp	[ebp+var_22C], 0
		jnz	short loc_25C2CB
		mov	esi, esp
		mov	eax, dword ptr ds:_path
		push	eax
		push	offset ??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@ ; "gencnval: unable to open input file %s\"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	4		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25C2CB:				; CODE XREF: _main+274j
		mov	eax, [ebp+var_22C]
		push	eax
		call	_parseFile
		add	esp, 4
		mov	eax, [ebp+var_22C]
		push	eax
		call	_T_FileStream_close
		add	esp, 4
		lea	eax, [ebp+Code]
		push	eax
		movsx	ecx, ds:byte_25BFD6
		neg	ecx
		sbb	ecx, ecx
		and	ecx, offset ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; "	Copyright (C) 2015, International Busi"...
		push	ecx
		push	offset _dataInfo
		push	offset ??_C@_08KCICHELA@cnvalias?$AA@ ;	"cnvalias"
		push	offset ??_C@_03IAEMGAKA@icu?$AA@ ; `string'
		mov	edx, ds:dword_25BFDC
		push	edx
		call	_udata_create
		add	esp, 18h
		mov	[ebp+var_238], eax
		cmp	[ebp+Code], 0
		jle	short loc_25C37F
		mov	eax, [ebp+Code]
		push	eax
		call	_u_errorName_56
		add	esp, 4
		mov	esi, esp
		push	eax		; Format
		push	offset ??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@ ; "gencnval: unable to open output file - "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25C37F:				; CODE XREF: _main+319j
		mov	eax, [ebp+var_238]
		push	eax
		call	_writeAliasTable
		add	esp, 4
		lea	eax, [ebp+Code]
		push	eax
		mov	ecx, [ebp+var_238]
		push	ecx
		call	_udata_finish
		add	esp, 8
		cmp	[ebp+Code], 0
		jle	short loc_25C3FD
		mov	eax, [ebp+Code]
		push	eax
		call	_u_errorName_56
		add	esp, 4
		mov	esi, esp
		push	eax		; Format
		push	offset ??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@	; "gencnval: error finishing output file -"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		mov	eax, [ebp+Code]
		push	eax		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25C3FD:				; CODE XREF: _main+397j
		mov	[ebp+var_C], 0
		jmp	short loc_25C40F
; ---------------------------------------------------------------------------

loc_25C406:				; CODE XREF: _main:loc_25C464j
		mov	eax, [ebp+var_C]
		add	eax, 1
		mov	[ebp+var_C], eax

loc_25C40F:				; CODE XREF: _main+3F0j
		cmp	[ebp+var_C], 3Fh ; '?'
		jge	short loc_25C466
		mov	[ebp+var_18], 0
		jmp	short loc_25C427
; ---------------------------------------------------------------------------

loc_25C41E:				; CODE XREF: _main:loc_25C462j
		mov	eax, [ebp+var_18]
		add	eax, 1
		mov	[ebp+var_18], eax

loc_25C427:				; CODE XREF: _main+408j
		cmp	[ebp+var_18], 0FFFh
		jge	short loc_25C464
		mov	eax, [ebp+var_C]
		imul	eax, 7FFCh
		mov	ecx, [ebp+var_18]
		cmp	ds:dword_24440[eax+ecx*8], 0
		jz	short loc_25C462
		mov	eax, [ebp+var_C]
		imul	eax, 7FFCh
		mov	ecx, [ebp+var_18]
		mov	edx, ds:dword_24440[eax+ecx*8]
		push	edx
		call	_uprv_free_56
		add	esp, 4

loc_25C462:				; CODE XREF: _main+430j
		jmp	short loc_25C41E
; ---------------------------------------------------------------------------

loc_25C464:				; CODE XREF: _main+41Aj
		jmp	short loc_25C406
; ---------------------------------------------------------------------------

loc_25C466:				; CODE XREF: _main+3FFj
		xor	eax, eax

loc_25C468:				; CODE XREF: _main+F1j
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN26
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, 314h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_main		endp

; ---------------------------------------------------------------------------
		align 4
$LN26		dd 2			; DATA XREF: _main+458o
		dd offset $LN25
$LN25		dd 0FFFFFDE0h, 200h	; DATA XREF: .text:0025C49Co
		dd offset $LN23		; "pathBuf"
		dd 0FFFFFDBCh, 4
		dd offset $LN24		; "errorCode"
$LN24		db 'errorCode',0        ; DATA XREF: .text:0025C4B4o
$LN23		db 'pathBuf',0          ; DATA XREF: .text:0025C4A8o
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C4CCh
		public ??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@
; char `string'[]
??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@ db 'gencnval: error finishing output file - %s',0Ah,0
					; DATA XREF: _main+3ABo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C4F8h
		public ??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@
; char `string'[]
??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@ db 'gencnval: unable to open output file - error %s',0Ah,0
					; DATA XREF: _main+32Do
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C52Ch
		public ??_C@_03IAEMGAKA@icu?$AA@
; `string'
??_C@_03IAEMGAKA@icu?$AA@ dd 756369h	; DATA XREF: _main+2F8o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C530h
		public ??_C@_08KCICHELA@cnvalias?$AA@
; `string'
??_C@_08KCICHELA@cnvalias?$AA@ db 'cnvalias',0 ; DATA XREF: _main+2F3o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25C53Ch
		public ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
; `string'
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@	db ' Copyright (C) 2015, International Business Machines Corporation '
					; DATA XREF: _main+2E7o
		db 'and others. All Rights Reserved. ',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C5A0h
		public ??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@
; char `string'[]
??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@ db 'gencnval: unable to open input file %s',0Ah,0
					; DATA XREF: _main+27Eo
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C5C8h
		public ??_C@_01KDCPPGHE@r?$AA@
; `string'
??_C@_01KDCPPGHE@r?$AA@	db 'r',0        ; DATA XREF: _main+254o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C5CCh
		public ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@
; char `string'[]
??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@ db	'convrtrs.txt',0 ; DATA XREF: _main:loc_25C1C5o
					; _main:loc_25C1E6o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25C5DCh
		public ??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@
; char `string'[]
??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@	db 'usage: %s [-options] [convrtrs.txt]',0Ah
					; DATA XREF: _main+C0o
		db 9,'read convrtrs.txt and create icudt56l_cnvalias.icu',0Ah
		db 'options:',0Ah
		db 9,'-h or -? or --help  this usage text',0Ah
		db 9,'-v or --verbose     prints out extra information about the alias'
		db ' table',0Ah
		db 9,'-q or --quiet       do not display warnings and progress',0Ah
		db 9,'-c or --copyright   include a copyright notice',0Ah
		db 9,'-d or --destdir     destination directory, followed by the path',0Ah
		db 9,'-s or --sourcedir   source directory, followed by the path',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25C794h
		public ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
; char `string'[]
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ db	'error in command line argument "%s"',0Ah,0
					; DATA XREF: _main+74o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$TMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$TMZ
		;org 25C7BCh
__RTC_Shutdown_rtc$TMZ dd offset __RTC_Shutdown
_rtc$TMZ	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rtc$IMZ	segment	dword public 'DATA' use32
		assume cs:_rtc$IMZ
		;org 25C7C0h
__RTC_InitBase_rtc$IMZ dd offset __RTC_InitBase
_rtc$IMZ	ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25C7C4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_parseFile	proc near		; CODE XREF: _main+2BEp

var_100F8	= byte ptr -100F8h
var_10031	= byte ptr -10031h
var_10028	= dword	ptr -10028h
var_1001C	= dword	ptr -1001Ch
Source		= byte ptr -10010h
var_8009	= byte ptr -8009h
Dest		= byte ptr -8008h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, offset dword_100F8
		call	__chkstk
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_100F8]
		mov	ecx, 403Eh
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, dword ptr ds:___security_cookie
		xor	eax, ebp
		mov	[ebp+var_4], eax
		mov	[ebp+var_1001C], 0
		mov	[ebp+var_10028], 0
		mov	[ebp+var_10031], 1
		mov	ds:_lineNum, 0
		push	0		; __int16
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	Str1
		call	_getTagNumber
		add	esp, 8
		push	3		; __int16
		push	offset ??_C@_03NIFPGLBG@ALL?$AA@ ; "ALL"
		call	_getTagNumber
		add	esp, 8
		push	0		; Size
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	Str
		push	offset _stringBlock ; int
		call	_allocString
		add	esp, 0Ch

loc_25C847:				; CODE XREF: _parseFile+316j
		movsx	eax, [ebp+var_10031]
		test	eax, eax
		jz	loc_25CADF
		mov	[ebp+var_10031], 0

loc_25C85D:				; CODE XREF: _parseFile+14Ej
		push	7FFFh
		lea	eax, [ebp+Source]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_T_FileStream_readLine
		add	esp, 0Ch
		test	eax, eax
		jz	loc_25C917
		lea	eax, [ebp+Source]
		push	eax
		call	_chomp
		add	esp, 4
		mov	[ebp+var_10028], eax
		cmp	[ebp+var_1001C], 0
		jz	short loc_25C8C2
		cmp	[ebp+var_10028], 0
		jle	short loc_25C8F3
		movsx	eax, [ebp+Source]
		mov	esi, esp
		push	eax		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25C8F3

loc_25C8C2:				; CODE XREF: _parseFile+D5j
		lea	eax, [ebp+Source]
		push	eax		; Source
		mov	ecx, [ebp+var_1001C]
		lea	edx, [ebp+ecx+Dest]
		push	edx		; Dest
		call	_strcpy
		add	esp, 8
		mov	eax, [ebp+var_1001C]
		add	eax, [ebp+var_10028]
		mov	[ebp+var_1001C], eax
		jmp	short loc_25C905
; ---------------------------------------------------------------------------

loc_25C8F3:				; CODE XREF: _parseFile+DEj
					; _parseFile+FCj
		cmp	[ebp+var_1001C], 0
		jle	short loc_25C905
		mov	[ebp+var_10031], 1
		jmp	short loc_25C917
; ---------------------------------------------------------------------------

loc_25C905:				; CODE XREF: _parseFile+12Dj
					; _parseFile+136j
		mov	eax, ds:_lineNum
		add	eax, 1
		mov	ds:_lineNum, eax
		jmp	loc_25C85D
; ---------------------------------------------------------------------------

loc_25C917:				; CODE XREF: _parseFile+B3j
					; _parseFile+13Fj
		movsx	eax, [ebp+var_10031]
		test	eax, eax
		jnz	short loc_25C92F
		cmp	[ebp+var_1001C], 0
		jle	loc_25CACD

loc_25C92F:				; CODE XREF: _parseFile+15Cj
		movsx	eax, [ebp+Dest]
		mov	esi, esp
		push	eax		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25C99D
		mov	eax, ds:_lineNum
		sub	eax, 1
		mov	esi, esp
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@ ; "%s:%d: error: cannot start	an alias wit"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	loc_25CA96
; ---------------------------------------------------------------------------

loc_25C99D:				; CODE XREF: _parseFile+187j
		movsx	eax, [ebp+Dest]
		cmp	eax, 7Bh ; '{'
		jnz	loc_25CA32
		movsx	eax, ds:_standardTagsUsed
		test	eax, eax
		jnz	short loc_25CA13
		mov	eax, [ebp+var_1001C]
		movsx	ecx, [ebp+eax+var_8009]
		cmp	ecx, 7Dh ; '}'
		jz	short loc_25CA13
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@ ; "%s:%d: error: alias needs to start	with"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25CA13:				; CODE XREF: _parseFile+1F2j
					; _parseFile+205j
		mov	eax, [ebp+var_1001C]
		push	eax
		lea	ecx, [ebp+Dest]
		push	ecx		; Str
		call	_addOfficialTaggedStandards
		add	esp, 8
		mov	ds:_standardTagsUsed, 1
		jmp	short loc_25CA96
; ---------------------------------------------------------------------------

loc_25CA32:				; CODE XREF: _parseFile+1E3j
		movsx	eax, ds:_standardTagsUsed
		test	eax, eax
		jz	short loc_25CA4E
		lea	eax, [ebp+Dest]
		push	eax
		call	_parseLine
		add	esp, 4
		jmp	short loc_25CA96
; ---------------------------------------------------------------------------

loc_25CA4E:				; CODE XREF: _parseFile+277j
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@ ; "%s:%d: error: alias table needs to	star"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25CA96:				; CODE XREF: _parseFile+1D4j
					; _parseFile+26Cj ...
		cmp	[ebp+var_10028], 0
		jle	short loc_25CAC3
		lea	eax, [ebp+Source]
		push	eax		; Source
		lea	ecx, [ebp+Dest]
		push	ecx		; Dest
		call	_strcpy
		add	esp, 8
		mov	eax, [ebp+var_10028]
		mov	[ebp+var_1001C], eax
		jmp	short loc_25CACD
; ---------------------------------------------------------------------------

loc_25CAC3:				; CODE XREF: _parseFile+2D9j
		mov	[ebp+var_1001C], 0

loc_25CACD:				; CODE XREF: _parseFile+165j
					; _parseFile+2FDj
		mov	eax, ds:_lineNum
		add	eax, 1
		mov	ds:_lineNum, eax
		jmp	loc_25C847
; ---------------------------------------------------------------------------

loc_25CADF:				; CODE XREF: _parseFile+8Cj
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN25_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		mov	ecx, [ebp+var_4]
		xor	ecx, ebp
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		add	esp, offset dword_100F8
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_parseFile	endp

; ---------------------------------------------------------------------------
		align 10h
$LN25_0		dd 2			; DATA XREF: _parseFile+31Fo
		dd offset $LN24_0
$LN24_0		dd 0FFFF7FF8h, 7FFFh	; DATA XREF: .text:0025CB14o
		dd offset $LN22		; "line"
		dd 0FFFEFFF0h, 7FFFh
		dd offset $LN23_0	; "lastLine"
$LN23_0		db 'lastLine',0         ; DATA XREF: .text:0025CB2Co
$LN22		db 'line',0             ; DATA XREF: .text:0025CB20o
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25CB40h
		public ??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@
; char `string'[]
??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@ db '%s:%d: error: alias table needs to start a list of standard tags',0Ah
					; DATA XREF: _parseFile+299o
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25CB84h
		public ??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@
; char `string'[]
??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@ db '%s:%d: error: alias needs to start with a converter name',0Ah,0
					; DATA XREF: _parseFile+216o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25CBC0h
		public ??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@
; char `string'[]
??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@ db '%s:%d: error: cannot start an alias with a space',0Ah,0
					; DATA XREF: _parseFile+19Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25CBF4h
		public ??_C@_03NIFPGLBG@ALL?$AA@
; char `string'[4]
??_C@_03NIFPGLBG@ALL?$AA@ db 'ALL',0    ; DATA XREF: _parseFile+62o
					; _getTagNumber+202o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	byte public 'DATA' use32
		assume cs:_rdata
		;org 25CBF8h
		public ??_C@_00CNPNBAHC@?$AA@
; char `string'
??_C@_00CNPNBAHC@?$AA@ db 0		; DATA XREF: _parseFile+53o
					; _parseFile+71o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25CBFCh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_chomp		proc near		; CODE XREF: _parseFile+C0p

var_DC		= dword	ptr -0DCh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0DCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_DC]
		mov	ecx, 37h ; '7'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_14], eax

loc_25CC26:				; CODE XREF: _chomp+89j
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax]
		test	ecx, ecx
		jz	short loc_25CC87
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 0Dh
		jz	short loc_25CC51
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 0Ah
		jz	short loc_25CC51
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax]
		cmp	ecx, 23h ; '#'
		jnz	short loc_25CC59

loc_25CC51:				; CODE XREF: _chomp+3Dj _chomp+48j
		mov	eax, [ebp+var_8]
		mov	byte ptr [eax],	0
		jmp	short loc_25CC87
; ---------------------------------------------------------------------------

loc_25CC59:				; CODE XREF: _chomp+53j
		mov	eax, [ebp+var_8]
		movsx	ecx, byte ptr [eax]
		mov	esi, esp
		push	ecx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	short loc_25CC7C
		mov	eax, [ebp+var_8]
		mov	[ebp+var_14], eax

loc_25CC7C:				; CODE XREF: _chomp+78j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax
		jmp	short loc_25CC26
; ---------------------------------------------------------------------------

loc_25CC87:				; CODE XREF: _chomp+32j _chomp+5Bj
		mov	eax, [ebp+var_14]
		mov	ecx, [ebp+arg_0]
		mov	edx, [ebp+var_14]
		add	edx, 1
		mov	[ebp+var_14], edx
		cmp	eax, ecx
		jbe	short loc_25CCA6
		mov	[ebp+var_DC], 1
		jmp	short loc_25CCB0
; ---------------------------------------------------------------------------

loc_25CCA6:				; CODE XREF: _chomp+9Cj
		mov	[ebp+var_DC], 0

loc_25CCB0:				; CODE XREF: _chomp+A8j
		cmp	[ebp+var_DC], 0
		jz	short loc_25CCC5
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_14]
		mov	[ebp+var_8], eax

loc_25CCC5:				; CODE XREF: _chomp+BBj
		mov	eax, [ebp+var_8]
		sub	eax, [ebp+arg_0]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0DCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_chomp		endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25CCE0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_parseLine	proc near		; CODE XREF: _parseFile+280p

var_120		= byte ptr -120h
var_5C		= word ptr -5Ch
Str		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= word ptr -38h
var_2C		= word ptr -2Ch
var_20		= word ptr -20h
var_14		= word ptr -14h
var_8		= word ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 120h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_120]
		mov	ecx, 48h ; 'H'
		mov	eax, 0CCCCCCCCh
		rep stosd
		xor	eax, eax
		mov	[ebp+var_8], ax
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jnz	short loc_25CD18
		jmp	loc_25D0DC
; ---------------------------------------------------------------------------

loc_25CD18:				; CODE XREF: _parseLine+31j
		mov	ax, [ebp+var_8]
		mov	[ebp+var_14], ax

loc_25CD20:				; CODE XREF: _parseLine+7Dj
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25CD5F
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	short loc_25CD5F
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CD20
; ---------------------------------------------------------------------------

loc_25CD5F:				; CODE XREF: _parseLine+4Dj
					; _parseLine+6Fj
		mov	ax, [ebp+var_8]
		mov	[ebp+var_20], ax
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_14]
		sub	eax, ecx
		mov	[ebp+var_2C], ax
		movzx	eax, [ebp+var_2C]
		push	eax		; Size
		movzx	ecx, [ebp+var_14]
		add	ecx, [ebp+arg_0]
		push	ecx		; Str
		push	offset _stringBlock ; int
		call	_allocString
		add	esp, 0Ch
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		push	eax
		call	_addConverter
		add	esp, 4
		mov	[ebp+var_38], ax
		mov	ax, [ebp+var_14]
		mov	[ebp+var_8], ax

loc_25CDAA:				; CODE XREF: _parseLine+107j
					; _parseLine:loc_25D0D7j
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25CDE9
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25CDE9
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CDAA
; ---------------------------------------------------------------------------

loc_25CDE9:				; CODE XREF: _parseLine+D7j
					; _parseLine+F9j
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jnz	short loc_25CDFD
		jmp	loc_25D0DC
; ---------------------------------------------------------------------------

loc_25CDFD:				; CODE XREF: _parseLine+116j
		mov	ax, [ebp+var_8]
		mov	[ebp+var_14], ax

loc_25CE05:				; CODE XREF: _parseLine+172j
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25CE54
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		cmp	edx, 7Bh ; '{'
		jz	short loc_25CE54
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	short loc_25CE54
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CE05
; ---------------------------------------------------------------------------

loc_25CE54:				; CODE XREF: _parseLine+132j
					; _parseLine+142j ...
		mov	ax, [ebp+var_8]
		mov	[ebp+var_20], ax
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_14]
		sub	eax, ecx
		mov	[ebp+var_2C], ax
		movzx	eax, [ebp+var_14]
		test	eax, eax
		jnz	short loc_25CE8F
		mov	eax, [ebp+var_44]
		mov	[ebp+Str], eax
		push	1		; char
		movzx	eax, [ebp+var_38]
		push	eax		; __int16
		push	1		; __int16
		mov	ecx, [ebp+Str]
		push	ecx		; Str
		call	_addAlias
		add	esp, 10h
		jmp	short loc_25CEC1
; ---------------------------------------------------------------------------

loc_25CE8F:				; CODE XREF: _parseLine+190j
		movzx	eax, [ebp+var_2C]
		push	eax		; Size
		movzx	ecx, [ebp+var_14]
		add	ecx, [ebp+arg_0]
		push	ecx		; Str
		push	offset _stringBlock ; int
		call	_allocString
		add	esp, 0Ch
		mov	[ebp+Str], eax
		push	0		; char
		movzx	eax, [ebp+var_38]
		push	eax		; __int16
		push	1		; __int16
		mov	ecx, [ebp+Str]
		push	ecx		; Str
		call	_addAlias
		add	esp, 10h

loc_25CEC1:				; CODE XREF: _parseLine+1ADj
		mov	eax, [ebp+Str]
		push	eax
		call	_addToKnownAliases
		add	esp, 4

loc_25CECD:				; CODE XREF: _parseLine+22Aj
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25CF0C
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25CF0C
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CECD
; ---------------------------------------------------------------------------

loc_25CF0C:				; CODE XREF: _parseLine+1FAj
					; _parseLine+21Cj
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		cmp	edx, 7Bh ; '{'
		jnz	loc_25D0AF
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax

loc_25CF2C:				; CODE XREF: _parseLine+35Ej
		mov	ax, [ebp+var_8]
		mov	[ebp+var_14], ax

loc_25CF34:				; CODE XREF: _parseLine+2A1j
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25CF83
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		cmp	edx, 7Dh ; '}'
		jz	short loc_25CF83
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jnz	short loc_25CF83
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CF34
; ---------------------------------------------------------------------------

loc_25CF83:				; CODE XREF: _parseLine+261j
					; _parseLine+271j ...
		mov	ax, [ebp+var_8]
		mov	[ebp+var_20], ax
		movzx	eax, [ebp+var_14]
		movzx	ecx, [ebp+var_20]
		cmp	eax, ecx
		jz	short loc_25CFE2
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_14]
		sub	eax, ecx
		push	eax		; __int16
		movzx	edx, [ebp+var_14]
		add	edx, [ebp+arg_0]
		push	edx		; Str1
		call	_getTagNumber
		add	esp, 8
		mov	[ebp+var_5C], ax
		movzx	eax, [ebp+var_20]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax-1]
		cmp	edx, 2Ah ; '*'
		setz	al
		movzx	ecx, al
		push	ecx		; char
		movzx	edx, [ebp+var_38]
		push	edx		; __int16
		movzx	eax, [ebp+var_5C]
		push	eax		; __int16
		mov	ecx, [ebp+Str]
		push	ecx		; Str
		call	_addAlias
		add	esp, 10h

loc_25CFE2:				; CODE XREF: _parseLine+2B5j
					; _parseLine+33Fj
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25D021
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		mov	esi, esp
		push	edx		; C
		call	dword ptr ds:__imp__isspace
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25D021
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25CFE2
; ---------------------------------------------------------------------------

loc_25D021:				; CODE XREF: _parseLine+30Fj
					; _parseLine+331j
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		test	edx, edx
		jz	short loc_25D044
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		cmp	edx, 7Dh ; '}'
		jnz	loc_25CF2C

loc_25D044:				; CODE XREF: _parseLine+34Ej
		movzx	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		movsx	edx, byte ptr [ecx+eax]
		cmp	edx, 7Dh ; '}'
		jnz	short loc_25D062
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax
		jmp	short loc_25D0AD
; ---------------------------------------------------------------------------

loc_25D062:				; CODE XREF: _parseLine+372j
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@ ; "%s:%d: Unterminated	tag list\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	offset byte_10109 ; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D0AD:				; CODE XREF: _parseLine+380j
		jmp	short loc_25D0D7
; ---------------------------------------------------------------------------

loc_25D0AF:				; CODE XREF: _parseLine+23Aj
		movzx	eax, [ebp+var_38]
		movzx	ecx, ds:word_2443C[eax*8]
		test	ecx, ecx
		setz	dl
		movzx	eax, dl
		push	eax		; char
		movzx	ecx, [ebp+var_38]
		push	ecx		; __int16
		push	0		; __int16
		mov	edx, [ebp+Str]
		push	edx		; Str
		call	_addAlias
		add	esp, 10h

loc_25D0D7:				; CODE XREF: _parseLine:loc_25D0ADj
		jmp	loc_25CDAA
; ---------------------------------------------------------------------------

loc_25D0DC:				; CODE XREF: _parseLine+33j
					; _parseLine+118j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 120h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_parseLine	endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D0F0h
		public ??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@
; char `string'[]
??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@ db '%s:%d: Unterminated tag list',0Ah,0
					; DATA XREF: _parseLine+391o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25D110h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl getTagNumber(char	*Str1, __int16)
_getTagNumber	proc near		; CODE XREF: _parseFile+58p
					; _parseFile+67p ...

var_F4		= dword	ptr -0F4h
Str		= dword	ptr -2Ch
var_1D		= byte ptr -1Dh
var_14		= word ptr -14h
var_8		= dword	ptr -8
Str1		= dword	ptr  8
arg_4		= word ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0F4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_F4]
		mov	ecx, 3Dh ; '='
		mov	eax, 0CCCCCCCCh
		rep stosd
		movzx	eax, [ebp+arg_4]
		test	eax, eax
		jle	short loc_25D152
		movzx	ecx, [ebp+arg_4]
		mov	edx, [ebp+Str1]
		movsx	eax, byte ptr [edx+ecx-1]
		xor	ecx, ecx
		cmp	eax, 2Ah ; '*'
		setz	cl
		mov	[ebp+var_F4], ecx
		jmp	short loc_25D15C
; ---------------------------------------------------------------------------

loc_25D152:				; CODE XREF: _getTagNumber+24j
		mov	[ebp+var_F4], 0

loc_25D15C:				; CODE XREF: _getTagNumber+40j
		mov	dl, byte ptr [ebp+var_F4]
		mov	[ebp+var_1D], dl
		movzx	eax, ds:_tagCount
		cmp	eax, 3Fh ; '?'
		jl	short loc_25D1B9
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@ ; "%s:%d: too many tags\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D1B9:				; CODE XREF: _getTagNumber+5Fj
		movsx	eax, [ebp+var_1D]
		test	eax, eax
		jz	short loc_25D1CD
		mov	ax, [ebp+arg_4]
		sub	ax, 1
		mov	[ebp+arg_4], ax

loc_25D1CD:				; CODE XREF: _getTagNumber+AFj
		xor	eax, eax
		mov	[ebp+var_14], ax
		jmp	short loc_25D1E1
; ---------------------------------------------------------------------------

loc_25D1D5:				; CODE XREF: _getTagNumber:loc_25D241j
		mov	ax, [ebp+var_14]
		add	ax, 1
		mov	[ebp+var_14], ax

loc_25D1E1:				; CODE XREF: _getTagNumber+C3j
		movzx	eax, [ebp+var_14]
		movzx	ecx, ds:_tagCount
		cmp	eax, ecx
		jge	short loc_25D243
		movzx	eax, [ebp+var_14]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		lea	edx, _tagStore[ecx*2]
		mov	[ebp+Str], edx
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		movzx	ecx, [ebp+arg_4]
		cmp	eax, ecx
		jnz	short loc_25D241
		movzx	eax, [ebp+arg_4]
		push	eax
		mov	ecx, [ebp+Str1]
		push	ecx
		mov	edx, [ebp+Str]
		push	edx
		call	_uprv_strnicmp_56
		add	esp, 0Ch
		test	eax, eax
		jnz	short loc_25D241
		mov	ax, [ebp+var_14]
		jmp	loc_25D3A7
; ---------------------------------------------------------------------------

loc_25D241:				; CODE XREF: _getTagNumber+10Dj
					; _getTagNumber+126j
		jmp	short loc_25D1D5
; ---------------------------------------------------------------------------

loc_25D243:				; CODE XREF: _getTagNumber+DEj
		movzx	eax, ds:_tagCount
		cmp	eax, 3Fh ; '?'
		jl	short loc_25D297
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@ ; "%s:%d: error: too many tags\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D297:				; CODE XREF: _getTagNumber+13Dj
		movzx	eax, [ebp+arg_4]
		push	eax		; Size
		mov	ecx, [ebp+Str1]
		push	ecx		; Str
		push	offset _tagBlock ; int
		call	_allocString
		add	esp, 0Ch
		mov	[ebp+var_8], eax
		movsx	eax, ds:_standardTagsUsed
		test	eax, eax
		jz	short loc_25D30A
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@ ; "%s:%d: error: Tag \"%s\"	is not declare"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	1		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_25D363
; ---------------------------------------------------------------------------

loc_25D30A:				; CODE XREF: _getTagNumber+1A9j
		movzx	eax, [ebp+arg_4]
		test	eax, eax
		jle	short loc_25D363
		push	offset ??_C@_03NIFPGLBG@ALL?$AA@ ; "ALL"
		mov	eax, [ebp+Str1]
		push	eax		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jz	short loc_25D363
		mov	esi, esp
		mov	eax, [ebp+var_8]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@ ; "%s:%d: warning: Tag \"%s\" was added to"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D363:				; CODE XREF: _getTagNumber+1F8j
					; _getTagNumber+200j ...
		mov	eax, [ebp+var_8]
		sub	eax, offset _tagStore
		sar	eax, 1
		movzx	ecx, ds:_tagCount
		imul	ecx, 7FFCh
		mov	ds:_tags[ecx], ax
		mov	ax, ds:_tagCount
		mov	word ptr [ebp+var_F4+2], ax
		mov	cx, ds:_tagCount
		add	cx, 1
		mov	ds:_tagCount, cx
		mov	ax, word ptr [ebp+var_F4+2]

loc_25D3A7:				; CODE XREF: _getTagNumber+12Cj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0F4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_getTagNumber	endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25D3BCh
		public ??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@
; char `string'[]
??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@ db '%s:%d: warning: Tag "%s" was added to the list of standards becau'
					; DATA XREF: _getTagNumber+22Bo
		db 'se it was not declared at beginning of the alias table.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25D438h
		public ??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@
; char `string'[]
??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@ db	'%s:%d: error: Tag "%s" is not declared at the beginning of the al'
					; DATA XREF: _getTagNumber+1BFo
		db 'ias table.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D488h
		public ??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@
; char `string'[]
??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@ db '%s:%d: error: too many tags',0Ah,0
					; DATA XREF: _getTagNumber+14Eo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D4A8h
		public ??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@
; char `string'[]
??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@ db '%s:%d: too many tags',0Ah,0
					; DATA XREF: _getTagNumber+70o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25D4C0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl addOfficialTaggedStandards(char *Str)
_addOfficialTaggedStandards proc near	; CODE XREF: _parseFile+25Dp

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
Str		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		movzx	eax, ds:_tagCount
		cmp	eax, 2
		jle	short loc_25D532
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@ ; "%s:%d: error: official tags	already	add"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D532:				; CODE XREF: _addOfficialTaggedStandards+28j
		mov	esi, esp
		push	7Bh ; '{'       ; Val
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jnz	short loc_25D59B
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@ ; "%s:%d: error: Missing start of tag	grou"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D59B:				; CODE XREF: _addOfficialTaggedStandards+91j
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[ebp+var_20], eax
		mov	esi, esp
		push	7Dh ; '}'       ; Val
		mov	eax, [ebp+var_20]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_25D60D
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@ ; "%s:%d: error: Missing end of tag group\"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D60D:				; CODE XREF: _addOfficialTaggedStandards+103j
		mov	eax, [ebp+var_14]
		mov	byte ptr [eax],	0
		mov	esi, esp
		push	offset ?WHITESPACE@?1??addOfficialTaggedStandards@@9@9 ; " \t"
		mov	eax, [ebp+var_20]
		push	eax		; Str
		call	dword ptr ds:__imp__strtok
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax

loc_25D631:				; CODE XREF: _addOfficialTaggedStandards+1D9j
		cmp	[ebp+var_20], 0
		jz	short loc_25D69B
		push	0FFFFFFFFh	; Size
		mov	eax, [ebp+var_20]
		push	eax		; Str
		push	offset _tagBlock ; int
		call	_allocString
		add	esp, 0Ch
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		sub	eax, offset _tagStore
		sar	eax, 1
		movzx	ecx, ds:_tagCount
		imul	ecx, 7FFCh
		mov	ds:_tags[ecx], ax
		mov	dx, ds:_tagCount
		add	dx, 1
		mov	ds:_tagCount, dx
		mov	esi, esp
		push	offset ?WHITESPACE@?1??addOfficialTaggedStandards@@9@9 ; " \t"
		push	0		; Str
		call	dword ptr ds:__imp__strtok
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	[ebp+var_20], eax
		jmp	short loc_25D631
; ---------------------------------------------------------------------------

loc_25D69B:				; CODE XREF: _addOfficialTaggedStandards+175j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_addOfficialTaggedStandards endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D6B0h
		public ??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@
; char `string'[]
??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@ db '%s:%d: error: Missing end of tag group',0Ah,0
					; DATA XREF: _addOfficialTaggedStandards+114o
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D6D8h
		public ??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@
; char `string'[]
??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@ db '%s:%d: error: Missing start of tag group',0Ah,0
					; DATA XREF: _addOfficialTaggedStandards+A2o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D704h
		public ??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@
; char `string'[]
??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@ db '%s:%d: error: official tags already added',0Ah,0
					; DATA XREF: _addOfficialTaggedStandards+39o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25D730h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_addToKnownAliases proc	near		; CODE XREF: _parseLine+1E5p

var_C4		= dword	ptr -0C4h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0C4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_C4]
		mov	ecx, 31h ; '1'
		mov	eax, 0CCCCCCCCh
		rep stosd
		movzx	eax, ds:_knownAliasesCount
		cmp	eax, 0FFFFh
		jl	short loc_25D7A4
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@ ; "%s:%d: warning: Too	many aliases define"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D7A4:				; CODE XREF: _addToKnownAliases+2Aj
		mov	eax, [ebp+arg_0]
		sub	eax, offset _stringStore
		sar	eax, 1
		mov	[ebp+var_C4], eax
		movzx	ecx, ds:_knownAliasesCount
		mov	dx, word ptr [ebp+var_C4]
		mov	ds:_knownAliases[ecx*2], dx
		mov	ax, ds:_knownAliasesCount
		add	ax, 1
		mov	ds:_knownAliasesCount, ax
		mov	ax, word ptr [ebp+var_C4]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0C4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_addToKnownAliases endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25D7F8h
		public ??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@
; char `string'[]
??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@ db '%s:%d: warning: Too many aliases defined for all converters',0Ah,0
					; DATA XREF: _addToKnownAliases+3Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25D838h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl addAlias(char *Str, __int16, __int16, char)
_addAlias	proc near		; CODE XREF: _parseLine+1A5p
					; _parseLine+1D9p ...

var_FC		= byte ptr -0FCh
var_38		= word ptr -38h
var_2C		= dword	ptr -2Ch
var_1D		= byte ptr -1Dh
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
Str		= dword	ptr  8
arg_4		= word ptr  0Ch
arg_8		= word ptr  10h
arg_C		= byte ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0FCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_FC]
		mov	ecx, 3Fh ; '?'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_1D], 0
		movzx	eax, [ebp+arg_4]
		cmp	eax, 3Fh ; '?'
		jl	short loc_25D8AB
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@ ; "%s:%d: error: too many standard tags\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D8AB:				; CODE XREF: _addAlias+29j
		movzx	eax, [ebp+arg_8]
		cmp	eax, 0FFFh
		jl	short loc_25D8FE
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ ; "%s:%d: error: too many converter names\"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D8FE:				; CODE XREF: _addAlias+7Cj
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		movzx	ecx, [ebp+arg_8]
		lea	edx, word_2443C[eax+ecx*8]
		mov	[ebp+var_2C], edx
		mov	esi, esp
		push	7Dh ; '}'       ; Val
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25D969
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@ ; "%s:%d: error: unmatched	} found\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D969:				; CODE XREF: _addAlias+F8j
		mov	eax, [ebp+var_2C]
		movzx	ecx, word ptr [eax]
		add	ecx, 1
		cmp	ecx, 1Fh
		jl	short loc_25D9D8
		movzx	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+Str]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@ ; "%s:%d: error: too many aliases for	alia"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 18h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25D9D8:				; CODE XREF: _addAlias+13Dj
		movzx	eax, [ebp+arg_4]
		cmp	eax, 1
		jnz	loc_25DAA3
		movzx	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		cmp	edx, [ebp+Str]
		jz	loc_25DAA3
		mov	esi, esp
		push	2Ch ; ','       ; Val
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25DA52
		mov	esi, esp
		mov	eax, [ebp+Str]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		push	offset ??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ ; "warning(line %d): alias	%s contains a \"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25DA52:				; CODE XREF: _addAlias+1E3j
		mov	esi, esp
		push	3Dh ; '='       ; Val
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25DAA3
		mov	esi, esp
		mov	eax, [ebp+Str]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		push	offset ??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ ; "warning(line %d): alias	%s contains an "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25DAA3:				; CODE XREF: _addAlias+1A7j
					; _addAlias+1C3j ...
		movzx	eax, [ebp+arg_4]
		cmp	eax, 1
		jz	loc_25DC8D
		mov	[ebp+var_8], 0
		jmp	short loc_25DAC2
; ---------------------------------------------------------------------------

loc_25DAB9:				; CODE XREF: _addAlias:loc_25DC88j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25DAC2:				; CODE XREF: _addAlias+27Fj
		movzx	eax, ds:_converterCount
		cmp	[ebp+var_8], eax
		jnb	loc_25DC8D
		mov	[ebp+var_14], 0
		jmp	short loc_25DAE4
; ---------------------------------------------------------------------------

loc_25DADB:				; CODE XREF: _addAlias:loc_25DC83j
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_25DAE4:				; CODE XREF: _addAlias+2A1j
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		mov	ecx, [ebp+var_8]
		movzx	edx, ds:word_2443C[eax+ecx*8]
		cmp	[ebp+var_14], edx
		jnb	loc_25DC88
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		mov	ecx, [ebp+var_8]
		mov	edx, ds:dword_24440[eax+ecx*8]
		mov	eax, [ebp+var_14]
		mov	cx, [edx+eax*2]
		mov	[ebp+var_38], cx
		movzx	eax, [ebp+var_38]
		test	eax, eax
		jz	loc_25DC83
		movzx	eax, [ebp+var_38]
		lea	ecx, _stringStore[eax*2]
		push	ecx
		mov	edx, [ebp+Str]
		push	edx
		call	_ucnv_compareNames_56
		add	esp, 8
		test	eax, eax
		jnz	loc_25DC83
		movzx	eax, [ebp+arg_8]
		cmp	[ebp+var_8], eax
		jnz	loc_25DBFA
		movsx	eax, ds:_verbose
		test	eax, eax
		jnz	short loc_25DB81
		movzx	eax, [ebp+var_38]
		lea	ecx, _stringStore[eax*2]
		push	ecx		; Str2
		mov	edx, [ebp+Str]
		push	edx		; Str1
		call	_strcmp
		add	esp, 8
		test	eax, eax
		jnz	short loc_25DBF5

loc_25DB81:				; CODE XREF: _addAlias+32Bj
		movzx	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		lea	edx, _tagStore[ecx*2]
		push	edx
		movzx	eax, [ebp+var_38]
		lea	ecx, _stringStore[eax*2]
		push	ecx
		mov	edx, [ebp+Str]
		push	edx
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@	; "%s:%d: warning: duplicate aliases %s	an"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 20h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25DBF5:				; CODE XREF: _addAlias+347j
		jmp	loc_25DC81
; ---------------------------------------------------------------------------

loc_25DBFA:				; CODE XREF: _addAlias+31Cj
		mov	eax, [ebp+var_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		movzx	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		push	edx
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		lea	edx, _tagStore[ecx*2]
		push	edx
		movzx	eax, [ebp+var_38]
		lea	ecx, _stringStore[eax*2]
		push	ecx
		mov	edx, [ebp+Str]
		push	edx
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@	; "%s:%d: warning: duplicate aliases %s	an"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 24h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25DC81:				; CODE XREF: _addAlias:loc_25DBF5j
		jmp	short loc_25DC88
; ---------------------------------------------------------------------------

loc_25DC83:				; CODE XREF: _addAlias+2EFj
					; _addAlias+30Fj
		jmp	loc_25DADB
; ---------------------------------------------------------------------------

loc_25DC88:				; CODE XREF: _addAlias+2C4j
					; _addAlias:loc_25DC81j
		jmp	loc_25DAB9
; ---------------------------------------------------------------------------

loc_25DC8D:				; CODE XREF: _addAlias+272j
					; _addAlias+294j
		mov	eax, [ebp+var_2C]
		movzx	ecx, word ptr [eax]
		test	ecx, ecx
		jg	short loc_25DCAB
		mov	eax, [ebp+var_2C]
		mov	cx, [eax]
		add	cx, 1
		mov	edx, [ebp+var_2C]
		mov	[edx], cx
		mov	[ebp+var_1D], 1

loc_25DCAB:				; CODE XREF: _addAlias+45Dj
		mov	eax, [ebp+var_2C]
		movzx	ecx, word ptr [eax]
		lea	edx, [ecx+ecx+2]
		push	edx
		mov	eax, [ebp+var_2C]
		mov	ecx, [eax+4]
		push	ecx
		call	_uprv_realloc_56
		add	esp, 8
		mov	edx, [ebp+var_2C]
		mov	[edx+4], eax
		movsx	eax, [ebp+var_1D]
		test	eax, eax
		jz	short loc_25DCDE
		mov	eax, [ebp+var_2C]
		mov	ecx, [eax+4]
		xor	edx, edx
		mov	[ecx], dx

loc_25DCDE:				; CODE XREF: _addAlias+499j
		movsx	eax, [ebp+arg_C]
		test	eax, eax
		jz	loc_25DD9A
		mov	eax, [ebp+var_2C]
		mov	ecx, [eax+4]
		movzx	edx, word ptr [ecx]
		test	edx, edx
		jz	loc_25DD85
		movzx	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		lea	edx, _tagStore[ecx*2]
		push	edx
		mov	eax, [ebp+var_2C]
		mov	ecx, [eax+4]
		movzx	edx, word ptr [ecx]
		lea	eax, _stringStore[edx*2]
		push	eax
		mov	ecx, [ebp+Str]
		push	ecx
		mov	edx, ds:_lineNum
		push	edx
		mov	eax, dword ptr ds:_path
		push	eax
		push	offset ??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@ ; "%s:%d: error: Alias	%s and %s cannot bo"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 20h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25DD85:				; CODE XREF: _addAlias+4BDj
		mov	eax, [ebp+Str]
		sub	eax, offset _stringStore
		sar	eax, 1
		mov	ecx, [ebp+var_2C]
		mov	edx, [ecx+4]
		mov	[edx], ax
		jmp	short loc_25DDC4
; ---------------------------------------------------------------------------

loc_25DD9A:				; CODE XREF: _addAlias+4ACj
		mov	eax, [ebp+Str]
		sub	eax, offset _stringStore
		sar	eax, 1
		mov	ecx, [ebp+var_2C]
		movzx	edx, word ptr [ecx]
		mov	ecx, [ebp+var_2C]
		mov	ecx, [ecx+4]
		mov	[ecx+edx*2], ax
		mov	edx, [ebp+var_2C]
		mov	ax, [edx]
		add	ax, 1
		mov	ecx, [ebp+var_2C]
		mov	[ecx], ax

loc_25DDC4:				; CODE XREF: _addAlias+560j
		movzx	eax, [ebp+arg_8]
		mov	cx, ds:word_2003A[eax*4]
		add	cx, 1
		movzx	edx, [ebp+arg_8]
		mov	ds:word_2003A[edx*4], cx
		movzx	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		mov	cx, ds:word_2443A[eax]
		add	cx, 1
		movzx	edx, [ebp+arg_4]
		imul	edx, 7FFCh
		mov	ds:word_2443A[edx], cx
		mov	eax, [ebp+var_2C]
		mov	ax, [eax]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0FCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_addAlias	endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DE20h
		public ??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@
; char `string'[]
??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@ db '%s:%d: error: Alias %s and %s cannot both be the default alias fo'
					; DATA XREF: _addAlias+514o
		db 'r standard tag %s and converter %s',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DE88h
		public ??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
; char `string'[]
??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ db '%s:%d: warning: duplicate aliases %s and %s found for standard ta'
					; DATA XREF: _addAlias+421o
		db 'g %s between converter %s and converter %s',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DEF8h
		public ??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
; char `string'[]
??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ db '%s:%d: warning: duplicate aliases %s and %s found for standard %s'
					; DATA XREF: _addAlias+395o
		db ' and converter %s',0Ah,0
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DF4Ch
		public ??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
; char `string'[]
??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ db 'warning(line %d): alias %s contains an "=". Options are parsed at'
					; DATA XREF: _addAlias+243o
		db ' run-time and do not need to be in the alias table.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25DFC4h
		public ??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
; char `string'[]
??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ db 'warning(line %d): alias %s contains a ",". Options are parsed at '
					; DATA XREF: _addAlias+1F2o
		db 'run-time and do not need to be in the alias table.',0Ah,0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E03Ch
		public ??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@
; char `string'[]
??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@ db '%s:%d: error: too many aliases for alias %s and converter %s',0Ah,0
					; DATA XREF: _addAlias+167o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E07Ch
		public ??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@
; char `string'[]
??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@ db '%s:%d: error: unmatched } found',0Ah,0
					; DATA XREF: _addAlias+109o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E0A0h
		public ??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
; char `string'[]
??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ db '%s:%d: error: too many converter names',0Ah,0
					; DATA XREF: _addAlias+8Do
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E0C8h
		public ??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@
; char `string'[]
??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@ db '%s:%d: error: too many standard tags',0Ah,0
					; DATA XREF: _addAlias+3Ao
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25E0F0h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_addConverter	proc near		; CODE XREF: _parseLine+B6p

var_D0		= byte ptr -0D0h
var_CE		= word ptr -0CEh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 0D0h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D0]
		mov	ecx, 34h ; '4'
		mov	eax, 0CCCCCCCCh
		rep stosd
		movzx	eax, ds:_converterCount
		cmp	eax, 0FFFh
		jl	short loc_25E164
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ ; "%s:%d: error: too many converters\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25E164:				; CODE XREF: _addConverter+2Aj
		mov	[ebp+var_8], 0
		jmp	short loc_25E176
; ---------------------------------------------------------------------------

loc_25E16D:				; CODE XREF: _addConverter:loc_25E1F4j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25E176:				; CODE XREF: _addConverter+7Bj
		movzx	eax, ds:_converterCount
		cmp	[ebp+var_8], eax
		jnb	short loc_25E1F9
		mov	eax, [ebp+var_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		push	edx
		mov	eax, [ebp+arg_0]
		push	eax
		call	_ucnv_compareNames_56
		add	esp, 8
		test	eax, eax
		jnz	short loc_25E1F4
		mov	esi, esp
		mov	eax, [ebp+arg_0]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@	; "%s:%d: error: duplicate converter %s	fo"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	9		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp
		jmp	short loc_25E1F9
; ---------------------------------------------------------------------------

loc_25E1F4:				; CODE XREF: _addConverter+B3j
		jmp	loc_25E16D
; ---------------------------------------------------------------------------

loc_25E1F9:				; CODE XREF: _addConverter+90j
					; _addConverter+102j
		mov	eax, [ebp+arg_0]
		sub	eax, offset _stringStore
		sar	eax, 1
		movzx	ecx, ds:_converterCount
		mov	ds:_converters[ecx*4], ax
		movzx	eax, ds:_converterCount
		xor	ecx, ecx
		mov	ds:word_2003A[eax*4], cx
		mov	ax, ds:_converterCount
		mov	[ebp+var_CE], ax
		mov	cx, ds:_converterCount
		add	cx, 1
		mov	ds:_converterCount, cx
		mov	ax, [ebp+var_CE]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D0h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_addConverter	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E260h
		public ??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@
; char `string'[]
??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@ db '%s:%d: error: duplicate converter %s found!',0Ah,0
					; DATA XREF: _addConverter+C9o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25E290h
		public ??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
; char `string'[]
??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ db '%s:%d: error: too many converters',0Ah,0
					; DATA XREF: _addConverter+3Bo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25E2B4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_writeAliasTable proc near		; CODE XREF: _main+372p

var_120		= byte ptr -120h
Dst		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_2C		= word ptr -2Ch
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 120h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_120]
		mov	ecx, 48h ; 'H'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, ds:Size
		shr	eax, 1
		mov	[ebp+var_2C], ax
		movzx	eax, ds:_tagCount
		movzx	ecx, ds:_converterCount
		imul	eax, ecx
		shl	eax, 1
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+var_38], eax
		movzx	eax, ds:_knownAliasesCount
		shl	eax, 1
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+var_44], eax
		movzx	eax, ds:_knownAliasesCount
		shl	eax, 1
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+var_50], eax
		mov	esi, esp
		push	offset _compareAliases ; PtFuncCompare
		push	2		; SizeOfElements
		movzx	eax, ds:_knownAliasesCount
		push	eax		; NumOfElements
		push	offset _knownAliases ; Base
		call	dword ptr ds:__imp__qsort
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, [ebp+var_2C]
		push	eax
		mov	ecx, [ebp+var_50]
		push	ecx
		mov	edx, [ebp+var_44]
		push	edx
		call	_resolveAliases
		add	esp, 0Ch
		mov	[ebp+var_20], eax
		xor	eax, eax
		mov	ds:_aliasListsSize, ax
		mov	[ebp+var_8], 0
		jmp	short loc_25E37E
; ---------------------------------------------------------------------------

loc_25E375:				; CODE XREF: _writeAliasTable:loc_25E3C3j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25E37E:				; CODE XREF: _writeAliasTable+BFj
		movzx	eax, ds:_tagCount
		cmp	[ebp+var_8], eax
		jnb	short loc_25E3C5
		mov	[ebp+var_14], 0
		jmp	short loc_25E39C
; ---------------------------------------------------------------------------

loc_25E393:				; CODE XREF: _writeAliasTable+10Dj
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_25E39C:				; CODE XREF: _writeAliasTable+DDj
		movzx	eax, ds:_converterCount
		cmp	[ebp+var_14], eax
		jnb	short loc_25E3C3
		movzx	eax, [ebp+var_2C]
		push	eax
		mov	ecx, [ebp+var_14]
		push	ecx
		mov	edx, [ebp+var_8]
		push	edx
		mov	eax, [ebp+var_38]
		push	eax
		call	_createOneAliasList
		add	esp, 10h
		jmp	short loc_25E393
; ---------------------------------------------------------------------------

loc_25E3C3:				; CODE XREF: _writeAliasTable+F2j
		jmp	short loc_25E375
; ---------------------------------------------------------------------------

loc_25E3C5:				; CODE XREF: _writeAliasTable+D4j
		movzx	eax, ds:_tableOptions
		test	eax, eax
		jnz	short loc_25E3E0
		push	8
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_write32
		add	esp, 8
		jmp	short loc_25E3EE
; ---------------------------------------------------------------------------

loc_25E3E0:				; CODE XREF: _writeAliasTable+11Aj
		push	9
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_write32
		add	esp, 8

loc_25E3EE:				; CODE XREF: _writeAliasTable+12Aj
		movzx	eax, ds:_converterCount
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		movzx	eax, ds:_tagCount
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		mov	eax, [ebp+var_20]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		mov	eax, [ebp+var_20]
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		movzx	eax, ds:_tagCount
		movzx	ecx, ds:_converterCount
		imul	eax, ecx
		push	eax
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_write32
		add	esp, 8
		movzx	eax, ds:_aliasListsSize
		add	eax, 1
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		push	2
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_write32
		add	esp, 8
		mov	eax, ds:Size
		add	eax, ds:dword_25BF6C
		shr	eax, 1
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8
		movzx	eax, ds:_tableOptions
		test	eax, eax
		jz	short loc_25E4B8
		mov	eax, ds:Size
		add	eax, ds:dword_25BF6C
		shr	eax, 1
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write32
		add	esp, 8

loc_25E4B8:				; CODE XREF: _writeAliasTable+1E8j
		mov	[ebp+var_8], 0
		jmp	short loc_25E4CA
; ---------------------------------------------------------------------------

loc_25E4C1:				; CODE XREF: _writeAliasTable+240j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25E4CA:				; CODE XREF: _writeAliasTable+20Bj
		movzx	eax, ds:_converterCount
		cmp	[ebp+var_8], eax
		jnb	short loc_25E4F6
		mov	eax, [ebp+var_8]
		movzx	ecx, ds:_converters[eax*4]
		movzx	edx, [ebp+var_2C]
		add	ecx, edx
		push	ecx
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_write16
		add	esp, 8
		jmp	short loc_25E4C1
; ---------------------------------------------------------------------------

loc_25E4F6:				; CODE XREF: _writeAliasTable+220j
		mov	[ebp+var_8], 2
		jmp	short loc_25E508
; ---------------------------------------------------------------------------

loc_25E4FF:				; CODE XREF: _writeAliasTable+27Dj
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25E508:				; CODE XREF: _writeAliasTable+249j
		movzx	eax, ds:_tagCount
		cmp	[ebp+var_8], eax
		jnb	short loc_25E533
		mov	eax, [ebp+var_8]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_write16
		add	esp, 8
		jmp	short loc_25E4FF
; ---------------------------------------------------------------------------

loc_25E533:				; CODE XREF: _writeAliasTable+25Ej
		movzx	eax, ds:_tags
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write16
		add	esp, 8
		movzx	eax, ds:word_2C434
		push	eax
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_write16
		add	esp, 8
		mov	eax, [ebp+var_20]
		shl	eax, 1
		push	eax
		mov	ecx, [ebp+var_44]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	eax, [ebp+var_20]
		shl	eax, 1
		push	eax
		mov	ecx, [ebp+var_50]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		movzx	eax, ds:_tagCount
		sub	eax, 2
		movzx	ecx, ds:_converterCount
		imul	eax, ecx
		shl	eax, 1
		push	eax
		movzx	edx, ds:_converterCount
		shl	edx, 1
		mov	eax, [ebp+var_38]
		lea	ecx, [eax+edx*2]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		movzx	eax, ds:_converterCount
		shl	eax, 1
		shl	eax, 1
		push	eax
		mov	ecx, [ebp+var_38]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeBlock
		add	esp, 0Ch
		push	0DEADh
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_write16
		add	esp, 8
		movzx	eax, ds:_aliasListsSize
		shl	eax, 1
		push	eax
		push	offset _aliasLists
		mov	ecx, [ebp+arg_0]
		push	ecx
		call	_udata_writeBlock
		add	esp, 0Ch
		push	4
		push	offset _tableOptions
		mov	eax, [ebp+arg_0]
		push	eax
		call	_udata_writeBlock
		add	esp, 0Ch
		mov	eax, ds:Size
		push	eax
		mov	ecx, ds:_tagBlock
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeString
		add	esp, 0Ch
		mov	eax, ds:dword_25BF6C
		push	eax
		mov	ecx, ds:_stringBlock
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeString
		add	esp, 0Ch
		movzx	eax, ds:_tableOptions
		test	eax, eax
		jz	short loc_25E6C9
		mov	eax, ds:Size
		add	eax, ds:dword_25BF6C
		push	eax
		call	_uprv_malloc_56
		add	esp, 4
		mov	[ebp+Dst], eax
		mov	eax, ds:Size
		push	eax		; Size
		mov	ecx, ds:_tagBlock
		push	ecx		; Src
		mov	edx, [ebp+Dst]
		push	edx		; Dst
		call	_createNormalizedAliasStrings
		add	esp, 0Ch
		mov	eax, ds:dword_25BF6C
		push	eax		; Size
		mov	ecx, ds:_stringBlock
		push	ecx		; Src
		mov	edx, [ebp+Dst]
		add	edx, ds:Size
		push	edx		; Dst
		call	_createNormalizedAliasStrings
		add	esp, 0Ch
		mov	eax, ds:Size
		add	eax, ds:dword_25BF6C
		push	eax
		mov	ecx, [ebp+Dst]
		push	ecx
		mov	edx, [ebp+arg_0]
		push	edx
		call	_udata_writeString
		add	esp, 0Ch
		mov	eax, [ebp+Dst]
		push	eax
		call	_uprv_free_56
		add	esp, 4

loc_25E6C9:				; CODE XREF: _writeAliasTable+39Cj
		mov	eax, [ebp+var_50]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		mov	eax, [ebp+var_44]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		mov	eax, [ebp+var_38]
		push	eax
		call	_uprv_free_56
		add	esp, 4
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 120h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_writeAliasTable endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25E704h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_resolveAliases	proc near		; CODE XREF: _writeAliasTable+A5p

var_114		= byte ptr -114h
var_50		= dword	ptr -50h
var_44		= word ptr -44h
var_38		= word ptr -38h
var_2C		= word ptr -2Ch
var_20		= word ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= word ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 114h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_114]
		mov	ecx, 45h ; 'E'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	[ebp+var_8], 0
		lea	eax, [ebp+var_38]
		push	eax
		lea	ecx, [ebp+var_2C]
		push	ecx
		movzx	edx, ds:_knownAliases
		push	edx
		call	_resolveAliasToConverter
		add	esp, 0Ch
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	dx, [ebp+var_38]
		mov	[ecx+eax*2], dx
		mov	ax, [ebp+var_38]
		mov	[ebp+var_44], ax
		movzx	eax, ds:_knownAliases
		movzx	ecx, [ebp+arg_8]
		add	eax, ecx
		mov	edx, [ebp+var_8]
		mov	ecx, [ebp+arg_0]
		mov	[ecx+edx*2], ax
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax
		movzx	eax, ds:_knownAliases
		lea	ecx, _stringStore[eax*2]
		mov	[ebp+var_50], ecx
		mov	[ebp+var_14], 1
		jmp	short loc_25E79A
; ---------------------------------------------------------------------------

loc_25E791:				; CODE XREF: _resolveAliases:loc_25EA1Dj
		mov	eax, [ebp+var_14]
		add	eax, 1
		mov	[ebp+var_14], eax

loc_25E79A:				; CODE XREF: _resolveAliases+8Bj
		movzx	eax, ds:_knownAliasesCount
		cmp	[ebp+var_14], eax
		jnb	loc_25EA22
		lea	eax, [ebp+var_38]
		push	eax
		lea	ecx, [ebp+var_20]
		push	ecx
		mov	edx, [ebp+var_14]
		movzx	eax, ds:_knownAliases[edx*2]
		push	eax
		call	_resolveAliasToConverter
		add	esp, 0Ch
		mov	eax, [ebp+var_14]
		movzx	ecx, ds:_knownAliases[eax*2]
		lea	edx, _stringStore[ecx*2]
		push	edx
		mov	eax, [ebp+var_50]
		push	eax
		call	_ucnv_compareNames_56
		add	esp, 8
		test	eax, eax
		jnz	loc_25E97E
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_2C]
		cmp	eax, ecx
		jge	short loc_25E802
		movzx	eax, [ebp+var_20]
		cmp	eax, 2
		jge	short loc_25E80E

loc_25E802:				; CODE XREF: _resolveAliases+F3j
		movzx	eax, [ebp+var_2C]
		test	eax, eax
		jnz	loc_25E8CD

loc_25E80E:				; CODE XREF: _resolveAliases+FCj
		mov	ax, [ebp+var_20]
		mov	[ebp+var_2C], ax
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	dx, [ebp+var_38]
		mov	[ecx+eax*2-2], dx
		mov	eax, [ebp+var_14]
		movzx	ecx, ds:_knownAliases[eax*2]
		movzx	edx, [ebp+arg_8]
		add	ecx, edx
		mov	eax, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[edx+eax*2-2], cx
		movsx	eax, ds:_verbose
		test	eax, eax
		jz	short loc_25E8C8
		movzx	eax, [ebp+var_38]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+var_50]
		push	eax
		mov	ecx, [ebp+var_14]
		movzx	edx, ds:_knownAliases[ecx*2]
		lea	eax, _stringStore[edx*2]
		push	eax
		push	offset ??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@ ; "using	%s instead of %s -> %s"
		call	dword ptr ds:__imp__printf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, [ebp+var_44]
		movzx	ecx, [ebp+var_38]
		cmp	eax, ecx
		jz	short loc_25E8B1
		mov	esi, esp
		push	offset ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@ ; " (alias conflict)"
		call	dword ptr ds:__imp__printf
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25E8B1:				; CODE XREF: _resolveAliases+194j
		mov	esi, esp
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25E8C8:				; CODE XREF: _resolveAliases+146j
		jmp	loc_25E954
; ---------------------------------------------------------------------------

loc_25E8CD:				; CODE XREF: _resolveAliases+104j
		movsx	eax, ds:_verbose
		test	eax, eax
		jz	short loc_25E954
		movzx	eax, [ebp+var_44]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+var_50]
		push	eax
		mov	ecx, [ebp+var_14]
		movzx	edx, ds:_knownAliases[ecx*2]
		lea	eax, _stringStore[edx*2]
		push	eax
		push	offset ??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@ ; "folding %s into %s -> %s"
		call	dword ptr ds:__imp__printf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		movzx	eax, [ebp+var_44]
		movzx	ecx, [ebp+var_38]
		cmp	eax, ecx
		jz	short loc_25E93D
		mov	esi, esp
		push	offset ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@ ; " (alias conflict)"
		call	dword ptr ds:__imp__printf
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25E93D:				; CODE XREF: _resolveAliases+220j
		mov	esi, esp
		push	offset ??_C@_00CNPNBAHC@?$AA@ ;	Str
		call	dword ptr ds:__imp__puts
		add	esp, 4
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25E954:				; CODE XREF: _resolveAliases:loc_25E8C8j
					; _resolveAliases+1D2j
		movzx	eax, [ebp+var_44]
		movzx	ecx, [ebp+var_38]
		cmp	eax, ecx
		jz	short loc_25E97C
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		movzx	edx, word ptr [ecx+eax*2-2]
		or	edx, 8000h
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[ecx+eax*2-2], dx

loc_25E97C:				; CODE XREF: _resolveAliases+25Aj
		jmp	short loc_25E9D5
; ---------------------------------------------------------------------------

loc_25E97E:				; CODE XREF: _resolveAliases+E3j
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	dx, [ebp+var_38]
		mov	[ecx+eax*2], dx
		mov	ax, [ebp+var_38]
		mov	[ebp+var_44], ax
		mov	eax, [ebp+var_14]
		movzx	ecx, ds:_knownAliases[eax*2]
		movzx	edx, [ebp+arg_8]
		add	ecx, edx
		mov	eax, [ebp+var_8]
		mov	edx, [ebp+arg_0]
		mov	[edx+eax*2], cx
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_14]
		movzx	ecx, ds:_knownAliases[eax*2]
		lea	edx, _stringStore[ecx*2]
		mov	[ebp+var_50], edx
		mov	ax, [ebp+var_20]
		mov	[ebp+var_2C], ax

loc_25E9D5:				; CODE XREF: _resolveAliases:loc_25E97Cj
		mov	esi, esp
		push	2Ch ; ','       ; Val
		movzx	eax, [ebp+var_38]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		push	edx		; Str
		call	dword ptr ds:__imp__strchr
		add	esp, 8
		cmp	esi, esp
		call	__RTC_CheckEsp
		test	eax, eax
		jz	short loc_25EA1D
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		movzx	edx, word ptr [ecx+eax*2-2]
		or	edx, 4000h
		mov	eax, [ebp+var_8]
		mov	ecx, [ebp+arg_4]
		mov	[ecx+eax*2-2], dx

loc_25EA1D:				; CODE XREF: _resolveAliases+2FBj
		jmp	loc_25E791
; ---------------------------------------------------------------------------

loc_25EA22:				; CODE XREF: _resolveAliases+A0j
		mov	eax, [ebp+var_8]
		push	edx
		mov	ecx, ebp
		push	eax
		lea	edx, $LN22_0
		call	@_RTC_CheckStackVars@8 ; _RTC_CheckStackVars(x,x)
		pop	eax
		pop	edx
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 114h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_resolveAliases	endp

; ---------------------------------------------------------------------------
		align 4
$LN22_0		dd 3			; DATA XREF: _resolveAliases+325o
		dd offset $LN21
$LN21		dd 0FFFFFFE0h, 2	; DATA XREF: .text:0025EA50o
		dd offset $LN18		; "currTagNum"
		dd 0FFFFFFD4h, 2
		dd offset $LN19		; "oldTagNum"
		dd 0FFFFFFC8h, 2
		dd offset $LN20		; "currConvNum"
$LN20		db 'currConvNum',0      ; DATA XREF: .text:0025EA74o
$LN19		db 'oldTagNum',0        ; DATA XREF: .text:0025EA68o
$LN18		db 'currTagNum',0       ; DATA XREF: .text:0025EA5Co
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25EA9Ch
		public ??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@
; char `string'[]
??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@ db 'folding %s into %s -> %s',0
					; DATA XREF: _resolveAliases+201o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25EAB8h
		public ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@
; char `string'[]
??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@ db ' (alias conflict)',0
					; DATA XREF: _resolveAliases+198o
					; _resolveAliases+224o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25EACCh
		public ??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@
; char `string'[]
??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@	db 'using %s instead of %s -> %s',0
					; DATA XREF: _resolveAliases+175o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25EAECh
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_resolveAliasToConverter proc near	; CODE XREF: _resolveAliases+35p
					; _resolveAliases+BAp

var_FC		= byte ptr -0FCh
var_38		= word ptr -38h
var_2C		= word ptr -2Ch
var_20		= word ptr -20h
var_14		= word ptr -14h
var_8		= word ptr -8
arg_0		= word ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0FCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_FC]
		mov	ecx, 3Fh ; '?'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, 2
		mov	[ebp+var_8], ax
		jmp	short loc_25EB21
; ---------------------------------------------------------------------------

loc_25EB15:				; CODE XREF: _resolveAliasToConverter:loc_25EBD6j
		mov	ax, [ebp+var_8]
		add	ax, 1
		mov	[ebp+var_8], ax

loc_25EB21:				; CODE XREF: _resolveAliasToConverter+27j
		movzx	eax, [ebp+var_8]
		movzx	ecx, ds:_tagCount
		cmp	eax, ecx
		jge	loc_25EBDB
		xor	eax, eax
		mov	[ebp+var_14], ax
		jmp	short loc_25EB48
; ---------------------------------------------------------------------------

loc_25EB3C:				; CODE XREF: _resolveAliasToConverter:loc_25EBD1j
		mov	ax, [ebp+var_14]
		add	ax, 1
		mov	[ebp+var_14], ax

loc_25EB48:				; CODE XREF: _resolveAliasToConverter+4Ej
		movzx	eax, [ebp+var_14]
		movzx	ecx, ds:_converterCount
		cmp	eax, ecx
		jge	short loc_25EBD6
		xor	eax, eax
		mov	[ebp+var_20], ax
		jmp	short loc_25EB6B
; ---------------------------------------------------------------------------

loc_25EB5F:				; CODE XREF: _resolveAliasToConverter:loc_25EBCFj
		mov	ax, [ebp+var_20]
		add	ax, 1
		mov	[ebp+var_20], ax

loc_25EB6B:				; CODE XREF: _resolveAliasToConverter+71j
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_8]
		imul	ecx, 7FFCh
		movzx	edx, [ebp+var_14]
		movzx	ecx, ds:word_2443C[ecx+edx*8]
		cmp	eax, ecx
		jge	short loc_25EBD1
		movzx	eax, [ebp+var_8]
		imul	eax, 7FFCh
		movzx	ecx, [ebp+var_14]
		movzx	edx, [ebp+var_20]
		mov	eax, ds:dword_24440[eax+ecx*8]
		mov	cx, [eax+edx*2]
		mov	[ebp+var_2C], cx
		movzx	eax, [ebp+var_2C]
		movzx	ecx, [ebp+arg_0]
		cmp	eax, ecx
		jnz	short loc_25EBCF
		mov	eax, [ebp+arg_4]
		mov	cx, [ebp+var_8]
		mov	[eax], cx
		mov	eax, [ebp+arg_8]
		mov	cx, [ebp+var_14]
		mov	[eax], cx
		jmp	loc_25ECD3
; ---------------------------------------------------------------------------

loc_25EBCF:				; CODE XREF: _resolveAliasToConverter+C8j
		jmp	short loc_25EB5F
; ---------------------------------------------------------------------------

loc_25EBD1:				; CODE XREF: _resolveAliasToConverter+9Bj
		jmp	loc_25EB3C
; ---------------------------------------------------------------------------

loc_25EBD6:				; CODE XREF: _resolveAliasToConverter+69j
		jmp	loc_25EB15
; ---------------------------------------------------------------------------

loc_25EBDB:				; CODE XREF: _resolveAliasToConverter+42j
		xor	eax, eax
		mov	[ebp+var_8], ax
		xor	eax, eax
		mov	[ebp+var_14], ax
		jmp	short loc_25EBF5
; ---------------------------------------------------------------------------

loc_25EBE9:				; CODE XREF: _resolveAliasToConverter:loc_25EC7Bj
		mov	ax, [ebp+var_14]
		add	ax, 1
		mov	[ebp+var_14], ax

loc_25EBF5:				; CODE XREF: _resolveAliasToConverter+FBj
		movzx	eax, [ebp+var_14]
		movzx	ecx, ds:_converterCount
		cmp	eax, ecx
		jge	short loc_25EC80
		xor	eax, eax
		mov	[ebp+var_20], ax
		jmp	short loc_25EC18
; ---------------------------------------------------------------------------

loc_25EC0C:				; CODE XREF: _resolveAliasToConverter:loc_25EC79j
		mov	ax, [ebp+var_20]
		add	ax, 1
		mov	[ebp+var_20], ax

loc_25EC18:				; CODE XREF: _resolveAliasToConverter+11Ej
		movzx	eax, [ebp+var_20]
		movzx	ecx, [ebp+var_8]
		imul	ecx, 7FFCh
		movzx	edx, [ebp+var_14]
		movzx	ecx, ds:word_2443C[ecx+edx*8]
		cmp	eax, ecx
		jge	short loc_25EC7B
		movzx	eax, [ebp+var_8]
		imul	eax, 7FFCh
		movzx	ecx, [ebp+var_14]
		movzx	edx, [ebp+var_20]
		mov	eax, ds:dword_24440[eax+ecx*8]
		mov	cx, [eax+edx*2]
		mov	[ebp+var_38], cx
		movzx	eax, [ebp+var_38]
		movzx	ecx, [ebp+arg_0]
		cmp	eax, ecx
		jnz	short loc_25EC79
		mov	eax, [ebp+arg_4]
		mov	cx, [ebp+var_8]
		mov	[eax], cx
		mov	eax, [ebp+arg_8]
		mov	cx, [ebp+var_14]
		mov	[eax], cx
		jmp	short loc_25ECD3
; ---------------------------------------------------------------------------

loc_25EC79:				; CODE XREF: _resolveAliasToConverter+175j
		jmp	short loc_25EC0C
; ---------------------------------------------------------------------------

loc_25EC7B:				; CODE XREF: _resolveAliasToConverter+148j
		jmp	loc_25EBE9
; ---------------------------------------------------------------------------

loc_25EC80:				; CODE XREF: _resolveAliasToConverter+116j
		mov	eax, 0FFFFh
		mov	ecx, [ebp+arg_4]
		mov	[ecx], ax
		mov	eax, 0FFFFh
		mov	ecx, [ebp+arg_8]
		mov	[ecx], ax
		movzx	eax, [ebp+arg_0]
		lea	ecx, _stringStore[eax*2]
		mov	esi, esp
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@ ; "%s: warning: alias	%s not found\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25ECD3:				; CODE XREF: _resolveAliasToConverter+DEj
					; _resolveAliasToConverter+18Bj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0FCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_resolveAliasToConverter endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25ECE8h
		public ??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@
; char `string'[]
??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@ db '%s: warning: alias %s not found',0Ah,0
					; DATA XREF: _resolveAliasToConverter+1BFo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25ED0Ch
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

_createOneAliasList proc near		; CODE XREF: _writeAliasTable+105p

var_E4		= byte ptr -0E4h
var_20		= word ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= word ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		mov	ecx, [ebp+arg_8]
		lea	edx, word_2443C[eax+ecx*8]
		mov	[ebp+var_14], edx
		mov	eax, [ebp+var_14]
		movzx	ecx, word ptr [eax]
		test	ecx, ecx
		jnz	short loc_25ED66
		movzx	eax, ds:_converterCount
		imul	eax, [ebp+arg_4]
		add	eax, [ebp+arg_8]
		xor	ecx, ecx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax*2], cx
		jmp	loc_25EEDD
; ---------------------------------------------------------------------------

loc_25ED66:				; CODE XREF: _createOneAliasList+3Cj
		movzx	eax, ds:_aliasListsSize
		mov	ecx, [ebp+var_14]
		mov	dx, [ecx]
		mov	ds:_aliasLists[eax*2], dx
		mov	ax, ds:_aliasListsSize
		add	ax, 1
		mov	ds:_aliasListsSize, ax
		movzx	eax, ds:_converterCount
		imul	eax, [ebp+arg_4]
		add	eax, [ebp+arg_8]
		mov	ecx, [ebp+arg_0]
		mov	dx, ds:_aliasListsSize
		mov	[ecx+eax*2], dx
		mov	[ebp+var_8], 0
		jmp	short loc_25EDB9
; ---------------------------------------------------------------------------

loc_25EDB0:				; CODE XREF: _createOneAliasList:loc_25EED8j
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_8], eax

loc_25EDB9:				; CODE XREF: _createOneAliasList+A2j
		mov	eax, [ebp+var_14]
		movzx	ecx, word ptr [eax]
		cmp	[ebp+var_8], ecx
		jnb	loc_25EEDD
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+4]
		mov	edx, [ebp+var_8]
		movzx	eax, word ptr [ecx+edx*2]
		test	eax, eax
		jz	short loc_25EDF2
		mov	eax, [ebp+var_14]
		mov	ecx, [eax+4]
		mov	edx, [ebp+var_8]
		movzx	eax, word ptr [ecx+edx*2]
		movzx	ecx, [ebp+arg_C]
		add	eax, ecx
		mov	[ebp+var_20], ax
		jmp	short loc_25EE64
; ---------------------------------------------------------------------------

loc_25EDF2:				; CODE XREF: _createOneAliasList+CBj
		xor	eax, eax
		mov	[ebp+var_20], ax
		cmp	[ebp+arg_4], 0
		jz	short loc_25EE64
		movsx	eax, ds:_quiet
		test	eax, eax
		jnz	short loc_25EE64
		mov	eax, [ebp+arg_8]
		movzx	ecx, ds:_converters[eax*4]
		lea	edx, _stringStore[ecx*2]
		mov	esi, esp
		push	edx
		mov	eax, [ebp+arg_4]
		imul	eax, 7FFCh
		movzx	ecx, ds:_tags[eax]
		lea	edx, _tagStore[ecx*2]
		push	edx
		mov	eax, dword ptr ds:_path
		push	eax
		push	offset ??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@ ; "%s: warning: tag %s does not have a def"...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25EE64:				; CODE XREF: _createOneAliasList+E4j
					; _createOneAliasList+F0j ...
		movzx	eax, ds:_aliasListsSize
		mov	cx, [ebp+var_20]
		mov	ds:_aliasLists[eax*2], cx
		mov	dx, ds:_aliasListsSize
		add	dx, 1
		mov	ds:_aliasListsSize, dx
		movzx	eax, ds:_aliasListsSize
		cmp	eax, 0FFFFh
		jl	short loc_25EED8
		mov	esi, esp
		mov	eax, dword ptr ds:_path
		push	eax
		push	offset ??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@ ; "%s: error: Too many alias lists\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 0Ch
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Fh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25EED8:				; CODE XREF: _createOneAliasList+189j
		jmp	loc_25EDB0
; ---------------------------------------------------------------------------

loc_25EEDD:				; CODE XREF: _createOneAliasList+55j
					; _createOneAliasList+B6j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_createOneAliasList endp

; ---------------------------------------------------------------------------
		align 4
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25EEF4h
		public ??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@
; char `string'[]
??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@	db '%s: error: Too many alias lists',0Ah,0
					; DATA XREF: _createOneAliasList+193o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25EF18h
		public ??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@
; char `string'[]
??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@ db '%s: warning: tag %s does not have a default alias for %s',0Ah,0
					; DATA XREF: _createOneAliasList+130o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25EF54h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl createNormalizedAliasStrings(void	*Dst, void *Src, size_t	Size)
_createNormalizedAliasStrings proc near	; CODE XREF: _writeAliasTable+3C6p
					; _writeAliasTable+3E5p

var_E4		= byte ptr -0E4h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
Dst		= dword	ptr  8
Src		= dword	ptr  0Ch
Size		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0E4h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_E4]
		mov	ecx, 39h ; '9'
		mov	eax, 0CCCCCCCCh
		rep stosd
		push	1
		mov	eax, [ebp+Src]
		push	eax
		call	_uprv_checkValidMemory
		add	esp, 8
		mov	ecx, [ebp+Size]
		push	ecx		; Size
		mov	edx, [ebp+Src]
		push	edx		; Src
		mov	eax, [ebp+Dst]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch

loc_25EF94:				; CODE XREF: _createNormalizedAliasStrings+BEj
		mov	eax, [ebp+Src]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		mov	[ebp+var_8], eax
		mov	ecx, [ebp+var_8]
		cmp	ecx, [ebp+Size]
		jge	short loc_25F014
		mov	eax, [ebp+var_8]
		add	eax, 1
		mov	[ebp+var_14], eax
		cmp	[ebp+var_8], 0
		jle	short loc_25EFF7
		mov	eax, [ebp+Src]
		push	eax
		mov	ecx, [ebp+Dst]
		push	ecx
		call	_ucnv_io_stripASCIIForCompare_56
		add	esp, 8
		mov	eax, [ebp+Dst]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jle	short loc_25EFF7
		mov	eax, [ebp+var_14]
		sub	eax, [ebp+var_20]
		push	eax		; Size
		push	0		; Val
		mov	ecx, [ebp+Dst]
		add	ecx, [ebp+var_20]
		push	ecx		; Dst
		call	_memset
		add	esp, 0Ch

loc_25EFF7:				; CODE XREF: _createNormalizedAliasStrings+64j
					; _createNormalizedAliasStrings+89j
		mov	eax, [ebp+Size]
		sub	eax, [ebp+var_14]
		mov	[ebp+Size], eax
		mov	eax, [ebp+Dst]
		add	eax, [ebp+var_14]
		mov	[ebp+Dst], eax
		mov	eax, [ebp+Src]
		add	eax, [ebp+var_14]
		mov	[ebp+Src], eax
		jmp	short loc_25EF94
; ---------------------------------------------------------------------------

loc_25F014:				; CODE XREF: _createNormalizedAliasStrings+55j
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0E4h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_createNormalizedAliasStrings endp

_text		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25F028h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl allocString(int, char *Str, size_t Size)
_allocString	proc near		; CODE XREF: _parseFile+7Bp
					; _parseLine+A7p ...

var_D8		= byte ptr -0D8h
Dst		= dword	ptr -14h
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
Str		= dword	ptr  0Ch
Size		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 0D8h
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_D8]
		mov	ecx, 36h ; '6'
		mov	eax, 0CCCCCCCCh
		rep stosd
		cmp	[ebp+Size], 0
		jge	short loc_25F05B
		mov	eax, [ebp+Str]
		push	eax		; Str
		call	_strlen
		add	esp, 4
		mov	[ebp+Size], eax

loc_25F05B:				; CODE XREF: _allocString+22j
		mov	eax, [ebp+Size]
		add	eax, 2
		and	eax, 0FFFFFFFEh
		mov	ecx, [ebp+arg_0]
		add	eax, [ecx+4]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		cmp	ecx, [eax+8]
		jb	short loc_25F0C0
		mov	esi, esp
		mov	eax, ds:_lineNum
		push	eax
		mov	ecx, dword ptr ds:_path
		push	ecx
		push	offset ??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@ ; "%s:%d: error: out of memory\n"
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 10h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	7		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25F0C0:				; CODE XREF: _allocString+4Ej
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax]
		mov	edx, [ebp+arg_0]
		add	ecx, [edx+4]
		mov	[ebp+Dst], ecx
		push	1
		mov	eax, [ebp+Str]
		push	eax
		call	_uprv_checkValidMemory
		add	esp, 8
		mov	ecx, [ebp+Size]
		push	ecx		; Size
		mov	edx, [ebp+Str]
		push	edx		; Src
		mov	eax, [ebp+Dst]
		push	eax		; Dst
		call	_memcpy
		add	esp, 0Ch
		mov	eax, [ebp+Dst]
		add	eax, [ebp+Size]
		mov	byte ptr [eax],	0
		mov	eax, [ebp+Size]
		and	eax, 1
		jnz	short loc_25F10B
		mov	eax, [ebp+Dst]
		add	eax, [ebp+Size]
		mov	byte ptr [eax+1], 0

loc_25F10B:				; CODE XREF: _allocString+D7j
		mov	eax, [ebp+Size]
		push	eax
		mov	ecx, [ebp+Dst]
		push	ecx
		call	_uprv_isInvariantString_56
		add	esp, 8
		movsx	edx, al
		test	edx, edx
		jnz	short loc_25F16F
		mov	esi, esp
		mov	eax, [ebp+Dst]
		push	eax
		mov	ecx, ds:_lineNum
		push	ecx
		mov	edx, dword ptr ds:_path
		push	edx
		push	offset ??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@ ; "%s:%d: error: the name %s contains not "...
		mov	edi, esp
		call	dword ptr ds:__imp____iob_func
		cmp	edi, esp
		call	__RTC_CheckEsp
		add	eax, 40h ; '@'
		push	eax		; File
		call	dword ptr ds:__imp__fprintf
		add	esp, 14h
		cmp	esi, esp
		call	__RTC_CheckEsp
		mov	esi, esp
		push	0Dh		; Code
		call	dword ptr ds:__imp__exit
; ---------------------------------------------------------------------------
		cmp	esi, esp
		call	__RTC_CheckEsp

loc_25F16F:				; CODE XREF: _allocString+F8j
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_8]
		mov	[eax+4], ecx
		mov	eax, [ebp+Dst]
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0D8h
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_allocString	endp

; ---------------------------------------------------------------------------
		align 10h
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 25F190h
		public ??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@
; char `string'[]
??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@ db	'%s:%d: error: the name %s contains not just invariant characters',0Ah
					; DATA XREF: _allocString+10Eo
		db 0
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 25F1D4h
		public ??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@
; char `string'[]
??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@ db '%s:%d: error: out of memory',0Ah,0
					; DATA XREF: _allocString+5Fo
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 25F1F4h
		assume es:nothing, ss:nothing, ds:_rdata, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl compareAliases(const void	*, const void *)
_compareAliases	proc near		; DATA XREF: _writeAliasTable+74o

var_CC		= byte ptr -0CCh
var_8		= dword	ptr -8
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 0CCh
		push	ebx
		push	esi
		push	edi
		lea	edi, [ebp+var_CC]
		mov	ecx, 33h ; '3'
		mov	eax, 0CCCCCCCCh
		rep stosd
		mov	eax, [ebp+arg_4]
		movzx	ecx, word ptr [eax]
		lea	edx, _stringStore[ecx*2]
		push	edx
		mov	eax, [ebp+arg_0]
		movzx	ecx, word ptr [eax]
		lea	edx, _stringStore[ecx*2]
		push	edx
		call	_ucnv_compareNames_56
		add	esp, 8
		mov	[ebp+var_8], eax
		cmp	[ebp+var_8], 0
		jnz	short loc_25F273
		mov	eax, [ebp+arg_0]
		movzx	ecx, word ptr [eax]
		lea	edx, _stringStore[ecx*2]
		push	edx		; Str
		call	_strlen
		add	esp, 4
		mov	esi, eax
		mov	eax, [ebp+arg_4]
		movzx	ecx, word ptr [eax]
		lea	edx, _stringStore[ecx*2]
		push	edx		; Str
		call	_strlen
		add	esp, 4
		sub	esi, eax
		mov	eax, esi
		jmp	short loc_25F276
; ---------------------------------------------------------------------------

loc_25F273:				; CODE XREF: _compareAliases+49j
		mov	eax, [ebp+var_8]

loc_25F276:				; CODE XREF: _compareAliases+7Dj
		pop	edi
		pop	esi
		pop	ebx
		add	esp, 0CCh
		cmp	ebp, esp
		call	__RTC_CheckEsp
		mov	esp, ebp
		pop	ebp
		retn
_compareAliases	endp

_text		ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
; char *path
		extrn _path:near	; DATA XREF: _main+126w _main+136w ...
		extrn _uprv_free_56:near ; CODE	XREF: _main+446p
					; _writeAliasTable+40Dp ...
		extrn _udata_finish:near ; CODE	XREF: _main+388p
		extrn _u_errorName_56:near ; CODE XREF:	_main+322p _main+3A0p
		extrn _udata_create:near ; CODE	XREF: _main+304p
		extrn _T_FileStream_close:near ; CODE XREF: _main+2CDp
; void __cdecl __noreturn _exit(int Code)
		extrn __imp__exit:near	; CODE XREF: _main+2AAp _main+35Ep ...
		extrn _T_FileStream_open:near ;	CODE XREF: _main+25Fp
; void *__cdecl	memset(void *Dst, int Val, size_t Size)
		extrn _memset:near	; CODE XREF: _main+1E8p _main+1FCp ...
; char *__cdecl	_strchr(const char *Str, int Val)
		extrn __imp__strchr:near ; CODE	XREF: _main+174p
					; _addOfficialTaggedStandards+7Ap ...
; char *__cdecl	strcpy(char *Dest, const char *Source)
		extrn _strcpy:near	; CODE XREF: _main+161p _main+1BDp ...
; int _fprintf(FILE *File, const char *Format, ...)
		extrn __imp__fprintf:near ; CODE XREF: _main+8Cp _main+D8p ...
; FILE *__cdecl	___iob_func()
		extrn __imp____iob_func:near ; CODE XREF: _main+7Bp _main+C7p	...
		extrn _u_parseArgs:near	; CODE XREF: _main+55p
		extrn _u_getDataDirectory_56:near ; CODE XREF: _main+32p
		extrn ___security_cookie:near ;	DATA XREF: _main+1Er
					; _parseFile+22r
; __fastcall __security_check_cookie(x)
		extrn @__security_check_cookie@4:near ;	CODE XREF: _main+46Dp
					; _parseFile+334p
; __fastcall _RTC_CheckStackVars(x, x)
		extrn @_RTC_CheckStackVars@8:near ; CODE XREF: _main+45Ep
					; _parseFile+325p ...
		extrn __RTC_CheckEsp:near ; CODE XREF: _main+83p _main+97p ...
		extrn __RTC_Shutdown:near ; DATA XREF: .rtc$TMZ:__RTC_Shutdown_rtc$TMZo
		extrn __RTC_InitBase:near ; DATA XREF: .rtc$IMZ:__RTC_InitBase_rtc$IMZo
; int __cdecl _isspace(int C)
		extrn __imp__isspace:near ; CODE XREF: _parseFile+EAp
					; _parseFile+175p ...
		extrn _T_FileStream_readLine:near ; CODE XREF: _parseFile+A9p
		extrn __chkstk:near	; CODE XREF: _parseFile+8p
; int __cdecl strcmp(const char	*Str1, const char *Str2)
		extrn _strcmp:near	; CODE XREF: _getTagNumber+20Bp
					; _addAlias+33Dp
		extrn _uprv_strnicmp_56:near ; CODE XREF: _getTagNumber+11Cp
; size_t __cdecl strlen(const char *Str)
		extrn _strlen:near	; CODE XREF: _getTagNumber+FFp
					; _createNormalizedAliasStrings+44p ...
; char *__cdecl	_strtok(char *Str, const char *Delim)
		extrn __imp__strtok:near ; CODE	XREF: _addOfficialTaggedStandards+15Ep
					; _addOfficialTaggedStandards+1C6p
					; DATA XREF: ...
		extrn _uprv_realloc_56:near ; CODE XREF: _addAlias+485p
		extrn _ucnv_compareNames_56:near ; CODE	XREF: _addAlias+305p
					; _addConverter+A9p ...
		extrn _udata_writeString:near ;	CODE XREF: _writeAliasTable+372p
					; _writeAliasTable+38Bp ...
		extrn _udata_writeBlock:near ; CODE XREF: _writeAliasTable+2B5p
					; _writeAliasTable+2CBp ...
		extrn _udata_write16:near ; CODE XREF: _writeAliasTable+238p
					; _writeAliasTable+275p ...
		extrn _udata_write32:near ; CODE XREF: _writeAliasTable+122p
					; _writeAliasTable+132p ...
; void __cdecl _qsort(void *Base, size_t NumOfElements,	size_t SizeOfElements, int (__cdecl *PtFuncCompare)(const void *, const	void *))
		extrn __imp__qsort:near	; CODE XREF: _writeAliasTable+88p
					; DATA XREF: _writeAliasTable+88r
		extrn _uprv_malloc_56:near ; CODE XREF:	_writeAliasTable+3Dp
					; _writeAliasTable+52p	...
; int __cdecl _puts(const char *Str)
		extrn __imp__puts:near	; CODE XREF: _resolveAliases+1B4p
					; _resolveAliases+240p
					; DATA XREF: ...
; int _printf(const char *Format, ...)
		extrn __imp__printf:near ; CODE	XREF: _resolveAliases+17Ap
					; _resolveAliases+19Dp	...
		extrn _ucnv_io_stripASCIIForCompare_56:near
					; CODE XREF: _createNormalizedAliasStrings+6Ep
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn _memcpy:near	; CODE XREF: _createNormalizedAliasStrings+38p
					; _allocString+C0p
		extrn _uprv_checkValidMemory:near
					; CODE XREF: _createNormalizedAliasStrings+24p
					; _allocString+ACp
		extrn _uprv_isInvariantString_56:near ;	CODE XREF: _allocString+EBp


		end

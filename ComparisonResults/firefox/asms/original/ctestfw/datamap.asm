; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\ctestfw\datamap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_7DataMap@@6B@				; DataMap::`vftable'
PUBLIC	??0DataMap@@QAE@ABV0@@Z				; DataMap::DataMap
PUBLIC	??_R4DataMap@@6B@				; DataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDataMap@@@8				; DataMap `RTTI Type Descriptor'
PUBLIC	??_R3DataMap@@8					; DataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DataMap@@8					; DataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DataMap@@8			; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EDataMap@@UAEPAXI@Z				; DataMap::`vector deleting destructor'
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@DataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DataMap@@8 DD FLAT:??_R0?AVDataMap@@@8	; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2DataMap@@8
rdata$r	SEGMENT
??_R2DataMap@@8 DD FLAT:??_R1A@?0A@EA@DataMap@@8	; DataMap::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DataMap@@8
rdata$r	SEGMENT
??_R3DataMap@@8 DD 00H					; DataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDataMap@@@8
_DATA	SEGMENT
??_R0?AVDataMap@@@8 DD FLAT:??_7type_info@@6B@		; DataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DataMap@@6B@
rdata$r	SEGMENT
??_R4DataMap@@6B@ DD 00H				; DataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDataMap@@@8
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_7DataMap@@6B@
CONST	SEGMENT
??_7DataMap@@6B@ DD FLAT:??_R4DataMap@@6B@		; DataMap::`vftable'
	DD	FLAT:??_EDataMap@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0DataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DataMap@@QAE@ABV0@@Z PROC				; DataMap::DataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0DataMap@@QAE@ABV0@@Z ENDP				; DataMap::DataMap
_TEXT	ENDS
PUBLIC	??4DataMap@@QAEAAV0@ABV0@@Z			; DataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DataMap@@QAEAAV0@ABV0@@Z PROC			; DataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DataMap@@QAEAAV0@ABV0@@Z ENDP			; DataMap::operator=
_TEXT	ENDS
PUBLIC	??1DataMap@@UAE@XZ				; DataMap::~DataMap
PUBLIC	??_GDataMap@@UAEPAXI@Z				; DataMap::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDataMap@@UAEPAXI@Z PROC				; DataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDataMap@@UAEPAXI@Z ENDP				; DataMap::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDataMap@@UAEPAXI@Z PROC				; DataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1DataMap@@UAE@XZ		; DataMap::~DataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDataMap@@UAEPAXI@Z ENDP				; DataMap::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBDataMap@@6B@				; RBDataMap::`vftable'
PUBLIC	??0RBDataMap@@QAE@ABV0@@Z			; RBDataMap::RBDataMap
PUBLIC	??_R4RBDataMap@@6B@				; RBDataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBDataMap@@@8				; RBDataMap `RTTI Type Descriptor'
PUBLIC	??_R3RBDataMap@@8				; RBDataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBDataMap@@8				; RBDataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBDataMap@@8			; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBDataMap@@UAEPAXI@Z			; RBDataMap::`vector deleting destructor'
PUBLIC	?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z ; RBDataMap::getString
PUBLIC	?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z	; RBDataMap::getInt
PUBLIC	?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z	; RBDataMap::getInt28
PUBLIC	?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z	; RBDataMap::getUInt28
PUBLIC	?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z ; RBDataMap::getIntVector
PUBLIC	?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z ; RBDataMap::getBinary
PUBLIC	?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z ; RBDataMap::getStringArray
PUBLIC	?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z ; RBDataMap::getIntArray
PUBLIC	?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z ; RBDataMap::getItem
;	COMDAT ??_R1A@?0A@EA@RBDataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBDataMap@@8 DD FLAT:??_R0?AVRBDataMap@@@8 ; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2RBDataMap@@8
rdata$r	SEGMENT
??_R2RBDataMap@@8 DD FLAT:??_R1A@?0A@EA@RBDataMap@@8	; RBDataMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R3RBDataMap@@8
rdata$r	SEGMENT
??_R3RBDataMap@@8 DD 00H				; RBDataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBDataMap@@@8
_DATA	SEGMENT
??_R0?AVRBDataMap@@@8 DD FLAT:??_7type_info@@6B@	; RBDataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBDataMap@@6B@
rdata$r	SEGMENT
??_R4RBDataMap@@6B@ DD 00H				; RBDataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBDataMap@@@8
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_7RBDataMap@@6B@
CONST	SEGMENT
??_7RBDataMap@@6B@ DD FLAT:??_R4RBDataMap@@6B@		; RBDataMap::`vftable'
	DD	FLAT:??_ERBDataMap@@UAEPAXI@Z
	DD	FLAT:?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBDataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBDataMap@@QAE@ABV0@@Z PROC				; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBDataMap@@QAE@ABV0@@Z ENDP				; RBDataMap::RBDataMap
_TEXT	ENDS
PUBLIC	??4RBDataMap@@QAEAAV0@ABV0@@Z			; RBDataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4RBDataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4RBDataMap@@QAEAAV0@ABV0@@Z PROC			; RBDataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DataMap@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4RBDataMap@@QAEAAV0@ABV0@@Z ENDP			; RBDataMap::operator=
_TEXT	ENDS
PUBLIC	??1RBDataMap@@UAE@XZ				; RBDataMap::~RBDataMap
PUBLIC	??_GRBDataMap@@UAEPAXI@Z			; RBDataMap::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1RBDataMap@@UAE@XZ		; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1DataMap@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DataMap@@UAE@XZ PROC					; DataMap::~DataMap, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\datamap.cpp
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DataMap@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1DataMap@@UAE@XZ ENDP					; DataMap::~DataMap
_TEXT	ENDS
PUBLIC	??0DataMap@@IAE@XZ				; DataMap::DataMap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DataMap@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DataMap@@IAE@XZ PROC					; DataMap::DataMap, COMDAT
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DataMap@@IAE@XZ ENDP					; DataMap::DataMap
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z	; DataMap::utoi
EXTRN	__imp__atoi:PROC
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z
_TEXT	SEGMENT
_len$ = -300						; size = 4
_u$ = -288						; size = 4
_ch$ = -276						; size = 256
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z PROC	; DataMap::utoi, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 496				; 000001f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u$[ebp], eax
; Line 22
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 23
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 24
	mov	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR _ch$[ebp+eax], 0
; Line 25
	mov	esi, esp
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 26
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@utoi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@utoi:
	DD	1
	DD	$LN4@utoi
$LN4@utoi:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN3@utoi
$LN3@utoi:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z ENDP	; DataMap::utoi
_TEXT	ENDS
PUBLIC	_deleteResBund
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _deleteResBund
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T40266 = -212						; size = 4
$T40267 = -200						; size = 4
_obj$ = 8						; size = 4
_deleteResBund PROC					; COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR $T40267[ebp], eax
	mov	ecx, DWORD PTR $T40267[ebp]
	mov	DWORD PTR $T40266[ebp], ecx
	cmp	DWORD PTR $T40266[ebp], 0
	je	SHORT $LN3@deleteResB
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T40266[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T40266[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@deleteResB
$LN3@deleteResB:
	mov	DWORD PTR tv74[ebp], 0
$LN1@deleteResB:
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_deleteResBund ENDP
_TEXT	ENDS
PUBLIC	??_GHashtable@icu_56@@QAEPAXI@Z			; icu_56::Hashtable::`scalar deleting destructor'
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RBDataMap@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RBDataMap@@UAE@XZ$0
__ehfuncinfo$??1RBDataMap@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1RBDataMap@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RBDataMap@@UAE@XZ
_TEXT	SEGMENT
tv79 = -244						; size = 4
$T40272 = -236						; size = 4
$T40273 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RBDataMap@@UAE@XZ PROC				; RBDataMap::~RBDataMap, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RBDataMap@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T40273[ebp], ecx
	mov	edx, DWORD PTR $T40273[ebp]
	mov	DWORD PTR $T40272[ebp], edx
	cmp	DWORD PTR $T40272[ebp], 0
	je	SHORT $LN3@RBDataMap
	push	1
	mov	ecx, DWORD PTR $T40272[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN1@RBDataMap
$LN3@RBDataMap:
	mov	DWORD PTR tv79[ebp], 0
$LN1@RBDataMap:
; Line 39
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RBDataMap@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DataMap@@UAE@XZ			; DataMap::~DataMap
__ehhandler$??1RBDataMap@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RBDataMap@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RBDataMap@@UAE@XZ ENDP				; RBDataMap::~RBDataMap
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GHashtable@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GHashtable@icu_56@@QAEPAXI@Z PROC			; icu_56::Hashtable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GHashtable@icu_56@@QAEPAXI@Z ENDP			; icu_56::Hashtable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0RBDataMap@@QAE@XZ				; RBDataMap::RBDataMap
EXTRN	__imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RBDataMap@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@XZ$1
__ehfuncinfo$??0RBDataMap@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RBDataMap@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RBDataMap@@QAE@XZ
_TEXT	SEGMENT
tv90 = -256						; size = 4
$T40290 = -248						; size = 4
$T40291 = -236						; size = 4
_status$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0RBDataMap@@QAE@XZ PROC				; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RBDataMap@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@IAE@XZ			; DataMap::DataMap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
; Line 43
	mov	DWORD PTR _status$[ebp], 0
; Line 44
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T40291[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T40291[ebp], 0
	je	SHORT $LN3@RBDataMap@2
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T40291[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@RBDataMap@2
$LN3@RBDataMap@2:
	mov	DWORD PTR tv90[ebp], 0
$LN4@RBDataMap@2:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T40290[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T40290[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 45
	mov	esi, esp
	push	OFFSET _deleteResBund
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@RBDataMap@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@RBDataMap@2:
	DD	1
	DD	$LN9@RBDataMap@2
$LN9@RBDataMap@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@RBDataMap@2
$LN7@RBDataMap@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RBDataMap@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DataMap@@UAE@XZ			; DataMap::~DataMap
__unwindfunclet$??0RBDataMap@@QAE@XZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T40291[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RBDataMap@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RBDataMap@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RBDataMap@@QAE@XZ ENDP				; RBDataMap::RBDataMap
PUBLIC	?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::init
PUBLIC	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv90 = -244						; size = 4
$T40307 = -236						; size = 4
$T40308 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_status$ = 12						; size = 4
??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z PROC ; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@IAE@XZ			; DataMap::DataMap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
; Line 53
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T40308[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T40308[ebp], 0
	je	SHORT $LN3@RBDataMap@3
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T40308[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@RBDataMap@3
$LN3@RBDataMap@3:
	mov	DWORD PTR tv90[ebp], 0
$LN4@RBDataMap@3:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T40307[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T40307[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 54
	mov	esi, esp
	push	OFFSET _deleteResBund
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::init
; Line 56
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DataMap@@UAE@XZ			; DataMap::~DataMap
__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T40308[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z ENDP ; RBDataMap::RBDataMap
PUBLIC	?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBDataMap::init
PUBLIC	??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv90 = -244						; size = 4
$T40321 = -236						; size = 4
$T40322 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_headers$ = 8						; size = 4
_data$ = 12						; size = 4
_status$ = 16						; size = 4
??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z PROC ; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@IAE@XZ			; DataMap::DataMap
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
; Line 63
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T40322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T40322[ebp], 0
	je	SHORT $LN3@RBDataMap@4
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T40322[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@RBDataMap@4
$LN3@RBDataMap@4:
	mov	DWORD PTR tv90[ebp], 0
$LN4@RBDataMap@4:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T40321[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T40321[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 64
	mov	esi, esp
	push	OFFSET _deleteResBund
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 65
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _headers$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBDataMap::init
; Line 66
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DataMap@@UAE@XZ			; DataMap::~DataMap
__unwindfunclet$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T40322[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ENDP ; RBDataMap::RBDataMap
PUBLIC	??_SResourceBundle@icu_56@@6B@			; icu_56::ResourceBundle::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??_R4ResourceBundle@icu_56@@6B@			; icu_56::ResourceBundle::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceBundle@icu_56@@@8		; icu_56::ResourceBundle `RTTI Type Descriptor'
PUBLIC	??_R3ResourceBundle@icu_56@@8			; icu_56::ResourceBundle::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceBundle@icu_56@@8			; icu_56::ResourceBundle::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceBundle@icu_56@@8		; icu_56::ResourceBundle::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_ures_close_56:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	__imp_??0ResourceBundle@icu_56@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z:PROC
EXTRN	_ures_getByIndex_56:PROC
EXTRN	_ures_getSize_56:PROC
EXTRN	__imp_?removeAll@Hashtable@icu_56@@QAEXXZ:PROC
EXTRN	??_EResourceBundle@icu_56@@UAEPAXI@Z:PROC	; icu_56::ResourceBundle::`vector deleting destructor'
EXTRN	?getDynamicClassID@ResourceBundle@icu_56@@UBEPAXXZ:PROC ; icu_56::ResourceBundle::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceBundle@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceBundle@icu_56@@8 DD FLAT:??_R0?AVResourceBundle@icu_56@@@8 ; icu_56::ResourceBundle::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceBundle@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceBundle@icu_56@@8
rdata$r	SEGMENT
??_R2ResourceBundle@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ResourceBundle@icu_56@@8 ; icu_56::ResourceBundle::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ResourceBundle@icu_56@@8
rdata$r	SEGMENT
??_R3ResourceBundle@icu_56@@8 DD 00H			; icu_56::ResourceBundle::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ResourceBundle@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceBundle@icu_56@@@8
_DATA	SEGMENT
??_R0?AVResourceBundle@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ResourceBundle `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceBundle@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ResourceBundle@icu_56@@6B@
rdata$r	SEGMENT
??_R4ResourceBundle@icu_56@@6B@ DD 00H			; icu_56::ResourceBundle::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceBundle@icu_56@@@8
	DD	FLAT:??_R3ResourceBundle@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SResourceBundle@icu_56@@6B@
CONST	SEGMENT
??_SResourceBundle@icu_56@@6B@ DD FLAT:??_R4ResourceBundle@icu_56@@6B@ ; icu_56::ResourceBundle::`local vftable'
	DD	FLAT:??_EResourceBundle@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@ResourceBundle@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv132 = -352						; size = 4
tv136 = -348						; size = 4
tv85 = -344						; size = 4
$T40336 = -336						; size = 4
$T40337 = -324						; size = 4
$T33448 = -312						; size = 64
_t$ = -48						; size = 4
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_status$ = 12						; size = 4
?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z PROC ; RBDataMap::init, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	DWORD PTR _i$[ebp], 0
; Line 71
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?removeAll@Hashtable@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 72
	mov	DWORD PTR _t$[ebp], 0
; Line 73
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@init
$LN2@init:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@init:
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN1@init
; Line 74
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _t$[ebp], eax
; Line 75
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T40337[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40337[ebp], 0
	je	SHORT $LN6@init
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T40337[ebp]
	call	DWORD PTR __imp_??0ResourceBundle@icu_56@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T40337[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SResourceBundle@icu_56@@6B@
	mov	eax, DWORD PTR $T40337[ebp]
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@init
$LN6@init:
	mov	DWORD PTR tv85[ebp], 0
$LN7@init:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T40336[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T40336[ebp]
	push	eax
	mov	edi, esp
	push	0
	push	-1
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	_ures_getKey_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T33448[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv136[ebp], eax
	mov	edx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv132[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33448[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 76
	jmp	$LN2@init
$LN1@init:
; Line 77
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 78
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T40337[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33448[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z ENDP ; RBDataMap::init
EXTRN	__imp_??1ResourceBundle@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GResourceBundle@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GResourceBundle@icu_56@@UAEPAXI@Z PROC		; icu_56::ResourceBundle::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GResourceBundle@icu_56@@UAEPAXI@Z ENDP		; icu_56::ResourceBundle::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	_ures_getStringByIndex_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z$1
__ehfuncinfo$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv139 = -376						; size = 4
tv143 = -372						; size = 4
tv95 = -368						; size = 4
$T40353 = -360						; size = 4
$T40354 = -348						; size = 4
$T33471 = -336						; size = 64
_keyLen$ = -72						; size = 4
_key$ = -60						; size = 4
_t$ = -48						; size = 4
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_headers$ = 8						; size = 4
_data$ = 12						; size = 4
_status$ = 16						; size = 4
?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z PROC ; RBDataMap::init, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	mov	DWORD PTR _i$[ebp], 0
; Line 83
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?removeAll@Hashtable@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	mov	DWORD PTR _t$[ebp], 0
; Line 85
	mov	DWORD PTR _key$[ebp], 0
; Line 86
	mov	DWORD PTR _keyLen$[ebp], 0
; Line 87
	mov	eax, DWORD PTR _headers$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_ures_getSize_56
	add	esp, 4
	cmp	esi, eax
	jne	$LN5@init@2
; Line 88
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@init@2
$LN3@init@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@init@2:
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN2@init@2
; Line 89
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _t$[ebp], eax
; Line 90
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _keyLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _headers$[ebp]
	push	eax
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _key$[ebp], eax
; Line 91
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T40354[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40354[ebp], 0
	je	SHORT $LN8@init@2
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T40354[ebp]
	call	DWORD PTR __imp_??0ResourceBundle@icu_56@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T40354[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SResourceBundle@icu_56@@6B@
	mov	eax, DWORD PTR $T40354[ebp]
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN9@init@2
$LN8@init@2:
	mov	DWORD PTR tv95[ebp], 0
$LN9@init@2:
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T40353[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T40353[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _keyLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T33471[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv139[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv139[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33471[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 92
	jmp	$LN3@init@2
$LN2@init@2:
; Line 93
	jmp	SHORT $LN1@init@2
$LN5@init@2:
; Line 95
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@init@2:
; Line 97
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@init@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN15@init@2:
	DD	1
	DD	$LN14@init@2
$LN14@init@2:
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN12@init@2
$LN12@init@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T40354[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33471[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z ENDP ; RBDataMap::init
PUBLIC	__$ArrayPad$
EXTRN	__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T40371 = -324						; size = 4
$T40372 = -312						; size = 4
_r$ = -108						; size = 4
_hashKey$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_status$ = 12						; size = 4
?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getItem, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getItem
; Line 103
	xor	eax, eax
	jmp	$LN4@getItem
$LN3@getItem:
; Line 106
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hashKey$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 107
	mov	esi, esp
	lea	eax, DWORD PTR _hashKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 108
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN2@getItem
; Line 109
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T40371[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _hashKey$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40371[ebp]
	jmp	SHORT $LN4@getItem
; Line 110
	jmp	SHORT $LN1@getItem
$LN2@getItem:
; Line 111
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 112
	mov	DWORD PTR $T40372[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _hashKey$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40372[ebp]
	jmp	SHORT $LN4@getItem
$LN1@getItem:
; Line 114
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _hashKey$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getItem:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getItem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@getItem:
	DD	1
	DD	$LN9@getItem
$LN9@getItem:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN7@getItem
$LN7@getItem:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _hashKey$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?getString@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@AAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T40388 = -224						; size = 4
_r$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_key$ = 12						; size = 4
_status$ = 16						; size = 4
?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\datamap.cpp
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T40388[ebp], 0
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 119
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getString
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getString@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T40388[ebp]
	or	edx, 1
	mov	DWORD PTR $T40388[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@getString
; Line 121
	jmp	SHORT $LN3@getString
$LN2@getString:
; Line 122
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40388[ebp]
	or	eax, 1
	mov	DWORD PTR $T40388[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@getString:
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
EXTRN	__imp_?getInt@ResourceBundle@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_status$ = 12						; size = 4
?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z PROC	; RBDataMap::getInt28, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\datamap.cpp
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 130
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getInt28
; Line 131
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getInt@ResourceBundle@icu_56@@QBEHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@getInt28
; Line 132
	jmp	SHORT $LN3@getInt28
$LN2@getInt28:
; Line 133
	xor	eax, eax
$LN3@getInt28:
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z ENDP	; RBDataMap::getInt28
_TEXT	ENDS
EXTRN	__imp_?getUInt@ResourceBundle@icu_56@@QBEIAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_status$ = 12						; size = 4
?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z PROC	; RBDataMap::getUInt28, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 141
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getUInt28
; Line 142
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getUInt@ResourceBundle@icu_56@@QBEIAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@getUInt28
; Line 143
	jmp	SHORT $LN3@getUInt28
$LN2@getUInt28:
; Line 144
	xor	eax, eax
$LN3@getUInt28:
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z ENDP	; RBDataMap::getUInt28
_TEXT	ENDS
EXTRN	__imp_?getIntVector@ResourceBundle@icu_56@@QBEPBHAAHAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_key$ = 12						; size = 4
_status$ = 16						; size = 4
?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getIntVector, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 151
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getIntVect
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getIntVector@ResourceBundle@icu_56@@QBEPBHAAHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@getIntVect
; Line 153
	jmp	SHORT $LN3@getIntVect
$LN2@getIntVect:
; Line 154
	xor	eax, eax
$LN3@getIntVect:
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getIntVector
_TEXT	ENDS
EXTRN	__imp_?getBinary@ResourceBundle@icu_56@@QBEPBEAAHAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_key$ = 12						; size = 4
_status$ = 16						; size = 4
?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getBinary, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 161
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getBinary
; Line 162
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getBinary@ResourceBundle@icu_56@@QBEPBEAAHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@getBinary
; Line 163
	jmp	SHORT $LN3@getBinary
$LN2@getBinary:
; Line 164
	xor	eax, eax
$LN3@getBinary:
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getBinary
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T40403 = -312						; size = 4
$T40404 = -300						; size = 4
_r$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_status$ = 12						; size = 4
?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z PROC	; RBDataMap::getInt, COMDAT
; _this$ = ecx
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 170
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 171
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getInt
; Line 172
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z ; DataMap::utoi
	mov	DWORD PTR $T40403[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40403[ebp]
	jmp	SHORT $LN3@getInt
; Line 173
	jmp	SHORT $LN1@getInt
$LN2@getInt:
; Line 174
	mov	DWORD PTR $T40404[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40404[ebp]
	jmp	SHORT $LN3@getInt
$LN1@getInt:
; Line 176
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getInt:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@getInt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@getInt:
	DD	1
	DD	$LN8@getInt
$LN8@getInt:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@getInt
$LN6@getInt:
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z ENDP	; RBDataMap::getInt
PUBLIC	??_TUnicodeString@icu_56@@QAEXXZ		; icu_56::UnicodeString::`local vftable constructor closure'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp_?getSize@ResourceBundle@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z$1
__ehfuncinfo$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv150 = -372						; size = 4
tv135 = -372						; size = 4
tv154 = -368						; size = 4
tv92 = -368						; size = 4
$T40418 = -360						; size = 4
$T40419 = -348						; size = 4
$T40420 = -336						; size = 4
$T33567 = -324						; size = 64
_result$33556 = -60					; size = 4
_i$33554 = -48						; size = 4
_r$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_count$ = 8						; size = 4
_key$ = 12						; size = 4
_status$ = 16						; size = 4
?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getStringArray, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN6@getStringA
; Line 182
	mov	DWORD PTR _i$33554[ebp], 0
; Line 184
	mov	esi, esp
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getSize@ResourceBundle@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 185
	mov	eax, DWORD PTR _count$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN5@getStringA
; Line 186
	xor	eax, eax
	jmp	$LN7@getStringA
$LN5@getStringA:
; Line 189
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T40418[ebp], ecx
	cmp	DWORD PTR $T40418[ebp], 0
	jne	SHORT $LN9@getStringA
	push	4
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN10@getStringA
$LN9@getStringA:
	xor	ecx, ecx
	mov	eax, DWORD PTR $T40418[ebp]
	mov	edx, 64					; 00000040H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
$LN10@getStringA:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T40420[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40420[ebp], 0
	je	SHORT $LN11@getStringA
	mov	edx, DWORD PTR $T40420[ebp]
	mov	eax, DWORD PTR $T40418[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	ecx
	push	OFFSET ??_TUnicodeString@icu_56@@QAEXXZ
	mov	edx, DWORD PTR $T40418[ebp]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR $T40420[ebp]
	add	eax, 4
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR $T40420[ebp]
	add	ecx, 4
	mov	DWORD PTR tv135[ebp], ecx
	jmp	SHORT $LN12@getStringA
$LN11@getStringA:
	mov	DWORD PTR tv135[ebp], 0
$LN12@getStringA:
	mov	edx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T40419[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T40419[ebp]
	mov	DWORD PTR _result$33556[ebp], eax
; Line 190
	mov	DWORD PTR _i$33554[ebp], 0
	jmp	SHORT $LN4@getStringA
$LN3@getStringA:
	mov	eax, DWORD PTR _i$33554[ebp]
	add	eax, 1
	mov	DWORD PTR _i$33554[ebp], eax
$LN4@getStringA:
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _i$33554[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN2@getStringA
; Line 191
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$33554[ebp]
	push	ecx
	lea	edx, DWORD PTR $T33567[ebp]
	push	edx
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv154[ebp], eax
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR tv150[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv150[ebp]
	push	ecx
	mov	ecx, DWORD PTR _i$33554[ebp]
	shl	ecx, 6
	add	ecx, DWORD PTR _result$33556[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33567[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 192
	jmp	$LN3@getStringA
$LN2@getStringA:
; Line 193
	mov	eax, DWORD PTR _result$33556[ebp]
	jmp	SHORT $LN7@getStringA
; Line 194
	jmp	SHORT $LN7@getStringA
$LN6@getStringA:
; Line 195
	xor	eax, eax
$LN7@getStringA:
; Line 197
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T40420[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33567[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getStringArray
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	mov	eax, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??_TUnicodeString@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_TUnicodeString@icu_56@@QAEXXZ PROC			; icu_56::UnicodeString::`local vftable constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_TUnicodeString@icu_56@@QAEXXZ ENDP			; icu_56::UnicodeString::`local vftable constructor closure'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z$1
__ehfuncinfo$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv141 = -432						; size = 4
tv144 = -428						; size = 4
$T40440 = -420						; size = 4
$T40441 = -408						; size = 4
$T33595 = -396						; size = 64
_stringRes$33591 = -132					; size = 64
_result$33588 = -60					; size = 4
_i$33586 = -48						; size = 4
_r$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_count$ = 8						; size = 4
_key$ = 12						; size = 4
_status$ = 16						; size = 4
?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z PROC ; RBDataMap::getIntArray, COMDAT
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 201
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 202
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN6@getIntArra
; Line 203
	mov	DWORD PTR _i$33586[ebp], 0
; Line 205
	mov	esi, esp
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getSize@ResourceBundle@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 206
	mov	eax, DWORD PTR _count$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN5@getIntArra
; Line 207
	xor	eax, eax
	jmp	$LN7@getIntArra
$LN5@getIntArra:
; Line 210
	xor	ecx, ecx
	mov	edx, DWORD PTR _count$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T40440[ebp], eax
	mov	eax, DWORD PTR $T40440[ebp]
	mov	DWORD PTR _result$33588[ebp], eax
; Line 211
	mov	esi, esp
	lea	ecx, DWORD PTR _stringRes$33591[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 212
	mov	DWORD PTR _i$33586[ebp], 0
	jmp	SHORT $LN4@getIntArra
$LN3@getIntArra:
	mov	eax, DWORD PTR _i$33586[ebp]
	add	eax, 1
	mov	DWORD PTR _i$33586[ebp], eax
$LN4@getIntArra:
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _i$33586[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN2@getIntArra
; Line 213
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$33586[ebp]
	push	ecx
	lea	edx, DWORD PTR $T33595[ebp]
	push	edx
	mov	ecx, DWORD PTR _r$[ebp]
	call	DWORD PTR __imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv141[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	lea	ecx, DWORD PTR _stringRes$33591[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33595[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	lea	eax, DWORD PTR _stringRes$33591[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?utoi@DataMap@@IBEHABVUnicodeString@icu_56@@@Z ; DataMap::utoi
	mov	ecx, DWORD PTR _i$33586[ebp]
	mov	edx, DWORD PTR _result$33588[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 215
	jmp	$LN3@getIntArra
$LN2@getIntArra:
; Line 216
	mov	eax, DWORD PTR _result$33588[ebp]
	mov	DWORD PTR $T40441[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _stringRes$33591[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T40441[ebp]
	jmp	SHORT $LN7@getIntArra
; Line 217
	jmp	SHORT $LN7@getIntArra
$LN6@getIntArra:
; Line 218
	xor	eax, eax
$LN7@getIntArra:
; Line 220
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getIntArra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN14@getIntArra:
	DD	1
	DD	$LN13@getIntArra
$LN13@getIntArra:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN11@getIntArra
$LN11@getIntArra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _stringRes$33591[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33595[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z ENDP ; RBDataMap::getIntArray
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\ctestfw\testdata.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_7DataMap@@6B@				; DataMap::`vftable'
PUBLIC	??0DataMap@@QAE@ABV0@@Z				; DataMap::DataMap
PUBLIC	??_R4DataMap@@6B@				; DataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDataMap@@@8				; DataMap `RTTI Type Descriptor'
PUBLIC	??_R3DataMap@@8					; DataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DataMap@@8					; DataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DataMap@@8			; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EDataMap@@UAEPAXI@Z				; DataMap::`vector deleting destructor'
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@DataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DataMap@@8 DD FLAT:??_R0?AVDataMap@@@8	; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2DataMap@@8
rdata$r	SEGMENT
??_R2DataMap@@8 DD FLAT:??_R1A@?0A@EA@DataMap@@8	; DataMap::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DataMap@@8
rdata$r	SEGMENT
??_R3DataMap@@8 DD 00H					; DataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDataMap@@@8
_DATA	SEGMENT
??_R0?AVDataMap@@@8 DD FLAT:??_7type_info@@6B@		; DataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DataMap@@6B@
rdata$r	SEGMENT
??_R4DataMap@@6B@ DD 00H				; DataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDataMap@@@8
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_7DataMap@@6B@
CONST	SEGMENT
??_7DataMap@@6B@ DD FLAT:??_R4DataMap@@6B@		; DataMap::`vftable'
	DD	FLAT:??_EDataMap@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0DataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DataMap@@QAE@ABV0@@Z PROC				; DataMap::DataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0DataMap@@QAE@ABV0@@Z ENDP				; DataMap::DataMap
_TEXT	ENDS
PUBLIC	??4DataMap@@QAEAAV0@ABV0@@Z			; DataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DataMap@@QAEAAV0@ABV0@@Z PROC			; DataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DataMap@@QAEAAV0@ABV0@@Z ENDP			; DataMap::operator=
_TEXT	ENDS
PUBLIC	??_GDataMap@@UAEPAXI@Z				; DataMap::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1DataMap@@UAE@XZ:PROC				; DataMap::~DataMap
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDataMap@@UAEPAXI@Z PROC				; DataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDataMap@@UAEPAXI@Z ENDP				; DataMap::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDataMap@@UAEPAXI@Z PROC				; DataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1DataMap@@UAE@XZ		; DataMap::~DataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDataMap@@UAEPAXI@Z ENDP				; DataMap::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBDataMap@@6B@				; RBDataMap::`vftable'
PUBLIC	??0RBDataMap@@QAE@ABV0@@Z			; RBDataMap::RBDataMap
PUBLIC	??_R4RBDataMap@@6B@				; RBDataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBDataMap@@@8				; RBDataMap `RTTI Type Descriptor'
PUBLIC	??_R3RBDataMap@@8				; RBDataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBDataMap@@8				; RBDataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBDataMap@@8			; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBDataMap@@UAEPAXI@Z			; RBDataMap::`vector deleting destructor'
EXTRN	?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getString
EXTRN	?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getInt
EXTRN	?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getInt28
EXTRN	?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getUInt28
EXTRN	?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getIntVector
EXTRN	?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getBinary
EXTRN	?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getStringArray
EXTRN	?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getIntArray
EXTRN	?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getItem
;	COMDAT ??_R1A@?0A@EA@RBDataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBDataMap@@8 DD FLAT:??_R0?AVRBDataMap@@@8 ; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2RBDataMap@@8
rdata$r	SEGMENT
??_R2RBDataMap@@8 DD FLAT:??_R1A@?0A@EA@RBDataMap@@8	; RBDataMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R3RBDataMap@@8
rdata$r	SEGMENT
??_R3RBDataMap@@8 DD 00H				; RBDataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBDataMap@@@8
_DATA	SEGMENT
??_R0?AVRBDataMap@@@8 DD FLAT:??_7type_info@@6B@	; RBDataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBDataMap@@6B@
rdata$r	SEGMENT
??_R4RBDataMap@@6B@ DD 00H				; RBDataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBDataMap@@@8
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_7RBDataMap@@6B@
CONST	SEGMENT
??_7RBDataMap@@6B@ DD FLAT:??_R4RBDataMap@@6B@		; RBDataMap::`vftable'
	DD	FLAT:??_ERBDataMap@@UAEPAXI@Z
	DD	FLAT:?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBDataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBDataMap@@QAE@ABV0@@Z PROC				; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBDataMap@@QAE@ABV0@@Z ENDP				; RBDataMap::RBDataMap
_TEXT	ENDS
PUBLIC	??4RBDataMap@@QAEAAV0@ABV0@@Z			; RBDataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4RBDataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4RBDataMap@@QAEAAV0@ABV0@@Z PROC			; RBDataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DataMap@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4RBDataMap@@QAEAAV0@ABV0@@Z ENDP			; RBDataMap::operator=
_TEXT	ENDS
PUBLIC	??_GRBDataMap@@UAEPAXI@Z			; RBDataMap::`scalar deleting destructor'
EXTRN	??1RBDataMap@@UAE@XZ:PROC			; RBDataMap::~RBDataMap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1RBDataMap@@UAE@XZ		; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestLog@@6B@				; TestLog::`vftable'
PUBLIC	??0TestLog@@QAE@XZ				; TestLog::TestLog
PUBLIC	??_R4TestLog@@6B@				; TestLog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestLog@@@8				; TestLog `RTTI Type Descriptor'
PUBLIC	??_R3TestLog@@8					; TestLog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestLog@@8					; TestLog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestLog@@8			; TestLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestLog@@UAEPAXI@Z				; TestLog::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestLog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestLog@@8 DD FLAT:??_R0?AVTestLog@@@8	; TestLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestLog@@8
rdata$r	ENDS
;	COMDAT ??_R2TestLog@@8
rdata$r	SEGMENT
??_R2TestLog@@8 DD FLAT:??_R1A@?0A@EA@TestLog@@8	; TestLog::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestLog@@8
rdata$r	SEGMENT
??_R3TestLog@@8 DD 00H					; TestLog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestLog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestLog@@@8
_DATA	SEGMENT
??_R0?AVTestLog@@@8 DD FLAT:??_7type_info@@6B@		; TestLog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestLog@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestLog@@6B@
rdata$r	SEGMENT
??_R4TestLog@@6B@ DD 00H				; TestLog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestLog@@@8
	DD	FLAT:??_R3TestLog@@8
rdata$r	ENDS
;	COMDAT ??_7TestLog@@6B@
CONST	SEGMENT
??_7TestLog@@6B@ DD FLAT:??_R4TestLog@@6B@		; TestLog::`vftable'
	DD	FLAT:??_ETestLog@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestLog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TestLog@@QAE@XZ PROC					; TestLog::TestLog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestLog@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0TestLog@@QAE@XZ ENDP					; TestLog::TestLog
_TEXT	ENDS
PUBLIC	??0TestLog@@QAE@ABV0@@Z				; TestLog::TestLog
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TestLog@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestLog@@QAE@ABV0@@Z PROC				; TestLog::TestLog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestLog@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestLog@@QAE@ABV0@@Z ENDP				; TestLog::TestLog
_TEXT	ENDS
PUBLIC	??4TestLog@@QAEAAV0@ABV0@@Z			; TestLog::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TestLog@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TestLog@@QAEAAV0@ABV0@@Z PROC			; TestLog::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4TestLog@@QAEAAV0@ABV0@@Z ENDP			; TestLog::operator=
_TEXT	ENDS
PUBLIC	??_GTestLog@@UAEPAXI@Z				; TestLog::`scalar deleting destructor'
EXTRN	??1TestLog@@UAE@XZ:PROC				; TestLog::~TestLog
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestLog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestLog@@UAEPAXI@Z PROC				; TestLog::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestLog@@UAE@XZ			; TestLog::~TestLog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestLog@@UAEPAXI@Z ENDP				; TestLog::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestLog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestLog@@UAEPAXI@Z PROC				; TestLog::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1TestLog@@UAE@XZ		; TestLog::~TestLog
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestLog@@UAE@XZ			; TestLog::~TestLog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestLog@@UAEPAXI@Z ENDP				; TestLog::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IcuTestErrorCode@@6B@			; IcuTestErrorCode::`vftable'
PUBLIC	??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z	; IcuTestErrorCode::IcuTestErrorCode
PUBLIC	??_R4IcuTestErrorCode@@6B@			; IcuTestErrorCode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIcuTestErrorCode@@@8			; IcuTestErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3IcuTestErrorCode@@8			; IcuTestErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IcuTestErrorCode@@8			; IcuTestErrorCode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IcuTestErrorCode@@8		; IcuTestErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ErrorCode@icu_56@@8		; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVErrorCode@icu_56@@@8			; icu_56::ErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EIcuTestErrorCode@@UAEPAXI@Z			; IcuTestErrorCode::`vector deleting destructor'
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@XZ:PROC
EXTRN	?handleFailure@IcuTestErrorCode@@MBEXXZ:PROC	; IcuTestErrorCode::handleFailure
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\tools\ctestfw\unicode\testlog.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2ErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8 ; icu_56::ErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3ErrorCode@icu_56@@8 DD 00H				; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ErrorCode@icu_56@@8 DD FLAT:??_R0?AVErrorCode@icu_56@@@8 ; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IcuTestErrorCode@@8 DD FLAT:??_R0?AVIcuTestErrorCode@@@8 ; IcuTestErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_R2IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R2IcuTestErrorCode@@8 DD FLAT:??_R1A@?0A@EA@IcuTestErrorCode@@8 ; IcuTestErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R3IcuTestErrorCode@@8 DD 00H				; IcuTestErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIcuTestErrorCode@@@8
_DATA	SEGMENT
??_R0?AVIcuTestErrorCode@@@8 DD FLAT:??_7type_info@@6B@	; IcuTestErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIcuTestErrorCode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IcuTestErrorCode@@6B@
rdata$r	SEGMENT
??_R4IcuTestErrorCode@@6B@ DD 00H			; IcuTestErrorCode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIcuTestErrorCode@@@8
	DD	FLAT:??_R3IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_7IcuTestErrorCode@@6B@
CONST	SEGMENT
??_7IcuTestErrorCode@@6B@ DD FLAT:??_R4IcuTestErrorCode@@6B@ ; IcuTestErrorCode::`vftable'
	DD	FLAT:??_EIcuTestErrorCode@@UAEPAXI@Z
	DD	FLAT:?handleFailure@IcuTestErrorCode@@MBEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_callingTestClass$ = 8					; size = 4
_callingTestName$ = 12					; size = 4
??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z PROC		; IcuTestErrorCode::IcuTestErrorCode, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuTestErrorCode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _callingTestClass$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _callingTestName$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z ENDP		; IcuTestErrorCode::IcuTestErrorCode
_TEXT	ENDS
PUBLIC	??0IcuTestErrorCode@@QAE@ABV0@@Z		; IcuTestErrorCode::IcuTestErrorCode
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IcuTestErrorCode@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0IcuTestErrorCode@@QAE@ABV0@@Z PROC			; IcuTestErrorCode::IcuTestErrorCode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuTestErrorCode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuTestErrorCode@@QAE@ABV0@@Z ENDP			; IcuTestErrorCode::IcuTestErrorCode
_TEXT	ENDS
PUBLIC	??_GIcuTestErrorCode@@UAEPAXI@Z			; IcuTestErrorCode::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1IcuTestErrorCode@@UAE@XZ:PROC		; IcuTestErrorCode::~IcuTestErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIcuTestErrorCode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIcuTestErrorCode@@UAEPAXI@Z PROC			; IcuTestErrorCode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuTestErrorCode@@UAE@XZ		; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIcuTestErrorCode@@UAEPAXI@Z ENDP			; IcuTestErrorCode::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EIcuTestErrorCode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EIcuTestErrorCode@@UAEPAXI@Z PROC			; IcuTestErrorCode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1IcuTestErrorCode@@UAE@XZ	; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuTestErrorCode@@UAE@XZ		; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EIcuTestErrorCode@@UAEPAXI@Z ENDP			; IcuTestErrorCode::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestDataModule@@6B@				; TestDataModule::`vftable'
PUBLIC	??0TestDataModule@@QAE@ABV0@@Z			; TestDataModule::TestDataModule
PUBLIC	??_R4TestDataModule@@6B@			; TestDataModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestDataModule@@@8			; TestDataModule `RTTI Type Descriptor'
PUBLIC	??_R3TestDataModule@@8				; TestDataModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestDataModule@@8				; TestDataModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestDataModule@@8			; TestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestDataModule@@UAEPAXI@Z			; TestDataModule::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestDataModule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestDataModule@@8 DD FLAT:??_R0?AVTestDataModule@@@8 ; TestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R2TestDataModule@@8
rdata$r	SEGMENT
??_R2TestDataModule@@8 DD FLAT:??_R1A@?0A@EA@TestDataModule@@8 ; TestDataModule::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestDataModule@@8
rdata$r	SEGMENT
??_R3TestDataModule@@8 DD 00H				; TestDataModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestDataModule@@@8
_DATA	SEGMENT
??_R0?AVTestDataModule@@@8 DD FLAT:??_7type_info@@6B@	; TestDataModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestDataModule@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestDataModule@@6B@
rdata$r	SEGMENT
??_R4TestDataModule@@6B@ DD 00H				; TestDataModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestDataModule@@@8
	DD	FLAT:??_R3TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_7TestDataModule@@6B@
CONST	SEGMENT
??_7TestDataModule@@6B@ DD FLAT:??_R4TestDataModule@@6B@ ; TestDataModule::`vftable'
	DD	FLAT:??_ETestDataModule@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestDataModule@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestDataModule@@QAE@ABV0@@Z PROC			; TestDataModule::TestDataModule, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestDataModule@@QAE@ABV0@@Z ENDP			; TestDataModule::TestDataModule
_TEXT	ENDS
PUBLIC	??_GTestDataModule@@UAEPAXI@Z			; TestDataModule::`scalar deleting destructor'
EXTRN	??1TestDataModule@@UAE@XZ:PROC			; TestDataModule::~TestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestDataModule@@UAEPAXI@Z PROC			; TestDataModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestDataModule@@UAEPAXI@Z ENDP			; TestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestDataModule@@UAEPAXI@Z PROC			; TestDataModule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1TestDataModule@@UAE@XZ	; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestDataModule@@UAEPAXI@Z ENDP			; TestDataModule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBTestDataModule@@6B@			; RBTestDataModule::`vftable'
PUBLIC	??0RBTestDataModule@@QAE@ABV0@@Z		; RBTestDataModule::RBTestDataModule
PUBLIC	??_R4RBTestDataModule@@6B@			; RBTestDataModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBTestDataModule@@@8			; RBTestDataModule `RTTI Type Descriptor'
PUBLIC	??_R3RBTestDataModule@@8			; RBTestDataModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBTestDataModule@@8			; RBTestDataModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBTestDataModule@@8		; RBTestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBTestDataModule@@UAEPAXI@Z			; RBTestDataModule::`vector deleting destructor'
EXTRN	?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z:PROC ; RBTestDataModule::getInfo
EXTRN	?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z:PROC ; RBTestDataModule::createTestData
EXTRN	?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z:PROC ; RBTestDataModule::createTestData
;	COMDAT ??_R1A@?0A@EA@RBTestDataModule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBTestDataModule@@8 DD FLAT:??_R0?AVRBTestDataModule@@@8 ; RBTestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R2RBTestDataModule@@8
rdata$r	SEGMENT
??_R2RBTestDataModule@@8 DD FLAT:??_R1A@?0A@EA@RBTestDataModule@@8 ; RBTestDataModule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R3RBTestDataModule@@8
rdata$r	SEGMENT
??_R3RBTestDataModule@@8 DD 00H				; RBTestDataModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBTestDataModule@@@8
_DATA	SEGMENT
??_R0?AVRBTestDataModule@@@8 DD FLAT:??_7type_info@@6B@	; RBTestDataModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBTestDataModule@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBTestDataModule@@6B@
rdata$r	SEGMENT
??_R4RBTestDataModule@@6B@ DD 00H			; RBTestDataModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBTestDataModule@@@8
	DD	FLAT:??_R3RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_7RBTestDataModule@@6B@
CONST	SEGMENT
??_7RBTestDataModule@@6B@ DD FLAT:??_R4RBTestDataModule@@6B@ ; RBTestDataModule::`vftable'
	DD	FLAT:??_ERBTestDataModule@@UAEPAXI@Z
	DD	FLAT:?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
	DD	FLAT:?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBTestDataModule@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBTestDataModule@@QAE@ABV0@@Z PROC			; RBTestDataModule::RBTestDataModule, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestDataModule@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBTestDataModule@@QAE@ABV0@@Z ENDP			; RBTestDataModule::RBTestDataModule
_TEXT	ENDS
PUBLIC	??_GRBTestDataModule@@UAEPAXI@Z			; RBTestDataModule::`scalar deleting destructor'
EXTRN	??1RBTestDataModule@@UAE@XZ:PROC		; RBTestDataModule::~RBTestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBTestDataModule@@UAEPAXI@Z PROC			; RBTestDataModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestDataModule@@UAE@XZ		; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBTestDataModule@@UAEPAXI@Z ENDP			; RBTestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBTestDataModule@@UAEPAXI@Z PROC			; RBTestDataModule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1RBTestDataModule@@UAE@XZ	; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestDataModule@@UAE@XZ		; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBTestDataModule@@UAEPAXI@Z ENDP			; RBTestDataModule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestData@@6B@				; TestData::`vftable'
PUBLIC	??0TestData@@QAE@ABV0@@Z			; TestData::TestData
PUBLIC	??_R4TestData@@6B@				; TestData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestData@@@8				; TestData `RTTI Type Descriptor'
PUBLIC	??_R3TestData@@8				; TestData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestData@@8				; TestData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestData@@8			; TestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestData@@UAEPAXI@Z				; TestData::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestData@@8 DD FLAT:??_R0?AVTestData@@@8	; TestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestData@@8
rdata$r	ENDS
;	COMDAT ??_R2TestData@@8
rdata$r	SEGMENT
??_R2TestData@@8 DD FLAT:??_R1A@?0A@EA@TestData@@8	; TestData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestData@@8
rdata$r	SEGMENT
??_R3TestData@@8 DD 00H					; TestData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestData@@@8
_DATA	SEGMENT
??_R0?AVTestData@@@8 DD FLAT:??_7type_info@@6B@		; TestData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestData@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestData@@6B@
rdata$r	SEGMENT
??_R4TestData@@6B@ DD 00H				; TestData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestData@@@8
	DD	FLAT:??_R3TestData@@8
rdata$r	ENDS
;	COMDAT ??_7TestData@@6B@
CONST	SEGMENT
??_7TestData@@6B@ DD FLAT:??_R4TestData@@6B@		; TestData::`vftable'
	DD	FLAT:??_ETestData@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestData@@QAE@ABV0@@Z PROC				; TestData::TestData, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestData@@QAE@ABV0@@Z ENDP				; TestData::TestData
_TEXT	ENDS
PUBLIC	??4TestData@@QAEAAV0@ABV0@@Z			; TestData::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TestData@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TestData@@QAEAAV0@ABV0@@Z PROC			; TestData::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4TestData@@QAEAAV0@ABV0@@Z ENDP			; TestData::operator=
_TEXT	ENDS
PUBLIC	??1TestData@@UAE@XZ				; TestData::~TestData
PUBLIC	??_GTestData@@UAEPAXI@Z				; TestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestData@@UAEPAXI@Z PROC				; TestData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestData@@UAE@XZ			; TestData::~TestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestData@@UAEPAXI@Z ENDP				; TestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestData@@UAEPAXI@Z PROC				; TestData::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1TestData@@UAE@XZ		; TestData::~TestData
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestData@@UAE@XZ			; TestData::~TestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestData@@UAEPAXI@Z ENDP				; TestData::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBTestData@@6B@				; RBTestData::`vftable'
PUBLIC	??0RBTestData@@QAE@ABV0@@Z			; RBTestData::RBTestData
PUBLIC	??_R4RBTestData@@6B@				; RBTestData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBTestData@@@8				; RBTestData `RTTI Type Descriptor'
PUBLIC	??_R3RBTestData@@8				; RBTestData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBTestData@@8				; RBTestData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBTestData@@8			; RBTestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBTestData@@UAEPAXI@Z			; RBTestData::`vector deleting destructor'
PUBLIC	?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z ; RBTestData::getInfo
PUBLIC	?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z ; RBTestData::nextSettings
PUBLIC	?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z ; RBTestData::nextCase
;	COMDAT ??_R1A@?0A@EA@RBTestData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBTestData@@8 DD FLAT:??_R0?AVRBTestData@@@8 ; RBTestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_R2RBTestData@@8
rdata$r	SEGMENT
??_R2RBTestData@@8 DD FLAT:??_R1A@?0A@EA@RBTestData@@8	; RBTestData::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TestData@@8
rdata$r	ENDS
;	COMDAT ??_R3RBTestData@@8
rdata$r	SEGMENT
??_R3RBTestData@@8 DD 00H				; RBTestData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBTestData@@@8
_DATA	SEGMENT
??_R0?AVRBTestData@@@8 DD FLAT:??_7type_info@@6B@	; RBTestData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBTestData@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBTestData@@6B@
rdata$r	SEGMENT
??_R4RBTestData@@6B@ DD 00H				; RBTestData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBTestData@@@8
	DD	FLAT:??_R3RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_7RBTestData@@6B@
CONST	SEGMENT
??_7RBTestData@@6B@ DD FLAT:??_R4RBTestData@@6B@	; RBTestData::`vftable'
	DD	FLAT:??_ERBTestData@@UAEPAXI@Z
	DD	FLAT:?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBTestData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBTestData@@QAE@ABV0@@Z PROC				; RBTestData::RBTestData, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestData@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBTestData@@QAE@ABV0@@Z ENDP				; RBTestData::RBTestData
_TEXT	ENDS
PUBLIC	??1RBTestData@@UAE@XZ				; RBTestData::~RBTestData
PUBLIC	??_GRBTestData@@UAEPAXI@Z			; RBTestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBTestData@@UAEPAXI@Z PROC				; RBTestData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestData@@UAE@XZ			; RBTestData::~RBTestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBTestData@@UAEPAXI@Z ENDP				; RBTestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBTestData@@UAEPAXI@Z PROC				; RBTestData::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1RBTestData@@UAE@XZ		; RBTestData::~RBTestData
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestData@@UAE@XZ			; RBTestData::~RBTestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBTestData@@UAEPAXI@Z ENDP				; RBTestData::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0TestData@@IAE@PBD@Z				; TestData::TestData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TestData@@IAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_testName$ = 8						; size = 4
??0TestData@@IAE@PBD@Z PROC				; TestData::TestData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\testdata.cpp
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _testName$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestData@@IAE@PBD@Z ENDP				; TestData::TestData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TestData@@UAE@XZ
_TEXT	SEGMENT
tv93 = -280						; size = 4
tv83 = -280						; size = 4
tv73 = -280						; size = 4
$T39865 = -272						; size = 4
$T39866 = -260						; size = 4
$T39869 = -248						; size = 4
$T39870 = -236						; size = 4
$T39873 = -224						; size = 4
$T39874 = -212						; size = 4
_this$ = -8						; size = 4
??1TestData@@UAE@XZ PROC				; TestData::~TestData, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestData@@6B@
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@TestData
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T39866[ebp], ecx
	mov	edx, DWORD PTR $T39866[ebp]
	mov	DWORD PTR $T39865[ebp], edx
	cmp	DWORD PTR $T39865[ebp], 0
	je	SHORT $LN6@TestData
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T39865[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T39865[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN3@TestData
$LN6@TestData:
	mov	DWORD PTR tv73[ebp], 0
$LN3@TestData:
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@TestData
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T39870[ebp], ecx
	mov	edx, DWORD PTR $T39870[ebp]
	mov	DWORD PTR $T39869[ebp], edx
	cmp	DWORD PTR $T39869[ebp], 0
	je	SHORT $LN8@TestData
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T39869[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T39869[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN2@TestData
$LN8@TestData:
	mov	DWORD PTR tv83[ebp], 0
$LN2@TestData:
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN4@TestData
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T39874[ebp], ecx
	mov	edx, DWORD PTR $T39874[ebp]
	mov	DWORD PTR $T39873[ebp], edx
	cmp	DWORD PTR $T39873[ebp], 0
	je	SHORT $LN10@TestData
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T39873[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T39873[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN4@TestData
$LN10@TestData:
	mov	DWORD PTR tv93[ebp], 0
$LN4@TestData:
; Line 35
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TestData@@UAE@XZ ENDP				; TestData::~TestData
_TEXT	ENDS
PUBLIC	?getName@TestData@@QBEPBDXZ			; TestData::getName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@TestData@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@TestData@@QBEPBDXZ PROC			; TestData::getName, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@TestData@@QBEPBDXZ ENDP			; TestData::getName
_TEXT	ENDS
PUBLIC	??0RBTestData@@QAE@PBD@Z			; RBTestData::RBTestData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0RBTestData@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_testName$ = 8						; size = 4
??0RBTestData@@QAE@PBD@Z PROC				; RBTestData::RBTestData, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _testName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestData@@IAE@PBD@Z			; TestData::TestData
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBTestData@@QAE@PBD@Z ENDP				; RBTestData::RBTestData
_TEXT	ENDS
PUBLIC	??_C@_05FACHFEOP@Cases?$AA@			; `string'
PUBLIC	??_C@_04BJPIHCBA@Info?$AA@			; `string'
PUBLIC	??_C@_08EEOHOBEO@Settings?$AA@			; `string'
PUBLIC	??_C@_07EJKOAGME@Headers?$AA@			; `string'
PUBLIC	??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBTestData::RBTestData
EXTRN	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z:PROC ; RBDataMap::RBDataMap
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_ures_getSize_56:PROC
EXTRN	_ures_close_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_05FACHFEOP@Cases?$AA@
CONST	SEGMENT
??_C@_05FACHFEOP@Cases?$AA@ DB 'Cases', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BJPIHCBA@Info?$AA@
CONST	SEGMENT
??_C@_04BJPIHCBA@Info?$AA@ DB 'Info', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EEOHOBEO@Settings?$AA@
CONST	SEGMENT
??_C@_08EEOHOBEO@Settings?$AA@ DB 'Settings', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EJKOAGME@Headers?$AA@
CONST	SEGMENT
??_C@_07EJKOAGME@Headers?$AA@ DB 'Headers', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv168 = -280						; size = 4
$T39884 = -272						; size = 4
$T39885 = -260						; size = 4
_info$ = -56						; size = 4
_currHeaders$ = -44					; size = 4
_intStatus$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_headers$ = 12						; size = 4
_status$ = 16						; size = 4
??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z PROC ; RBTestData::RBTestData, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestData@@IAE@PBD@Z			; TestData::TestData
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _headers$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 60
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 61
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_07EJKOAGME@Headers?$AA@
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currHeaders$[ebp], eax
; Line 62
	cmp	DWORD PTR _intStatus$[ebp], 0
	jne	SHORT $LN4@RBTestData
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _currHeaders$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 65
	jmp	SHORT $LN3@RBTestData
$LN4@RBTestData:
; Line 66
	mov	DWORD PTR _intStatus$[ebp], 0
$LN3@RBTestData:
; Line 68
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_08EEOHOBEO@Settings?$AA@
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_ures_getSize_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 70
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_04BJPIHCBA@Info?$AA@
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _info$[ebp], eax
; Line 71
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@RBTestData
; Line 72
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39885[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T39885[ebp], 0
	je	SHORT $LN7@RBTestData
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T39885[ebp]
	call	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN8@RBTestData
$LN7@RBTestData:
	mov	DWORD PTR tv168[ebp], 0
$LN8@RBTestData:
	mov	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR $T39884[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T39884[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 73
	jmp	SHORT $LN1@RBTestData
$LN2@RBTestData:
; Line 74
	mov	DWORD PTR _intStatus$[ebp], 0
$LN1@RBTestData:
; Line 76
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_05FACHFEOP@Cases?$AA@
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], eax
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_ures_getSize_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 79
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 80
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@RBTestData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN14@RBTestData:
	DD	1
	DD	$LN13@RBTestData
$LN13@RBTestData:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@RBTestData
$LN11@RBTestData:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TestData@@UAE@XZ			; TestData::~TestData
__unwindfunclet$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T39885[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ENDP ; RBTestData::RBTestData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1RBTestData@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1RBTestData@@UAE@XZ PROC				; RBTestData::~RBTestData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\testdata.cpp
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestData@@6B@
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestData@@UAE@XZ			; TestData::~TestData
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RBTestData@@UAE@XZ ENDP				; RBTestData::~RBTestData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_info$ = 8						; size = 4
___formal$ = 12						; size = 4
?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z PROC ; RBTestData::getInfo, COMDAT
; _this$ = ecx
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@getInfo
; Line 94
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
; Line 95
	mov	al, 1
	jmp	SHORT $LN3@getInfo
; Line 96
	jmp	SHORT $LN3@getInfo
$LN2@getInfo:
; Line 97
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], 0
; Line 98
	xor	al, al
$LN3@getInfo:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z ENDP ; RBTestData::getInfo
_TEXT	ENDS
EXTRN	?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z:PROC ; RBDataMap::init
EXTRN	_ures_getByIndex_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv143 = -268						; size = 4
tv75 = -268						; size = 4
$T39914 = -260						; size = 4
$T39915 = -248						; size = 4
_data$ = -44						; size = 4
_intStatus$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_settings$ = 8						; size = 4
_status$ = 12						; size = 4
?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z PROC ; RBTestData::nextSettings, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
	lea	edx, DWORD PTR _intStatus$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _data$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@nextSettin
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN3@nextSettin
; Line 110
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39915[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T39915[ebp], 0
	je	SHORT $LN7@nextSettin
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T39915[ebp]
	call	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN8@nextSettin
$LN7@nextSettin:
	mov	DWORD PTR tv143[ebp], 0
$LN8@nextSettin:
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T39914[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T39914[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 111
	jmp	SHORT $LN2@nextSettin
$LN3@nextSettin:
; Line 112
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?init@RBDataMap@@QAEXPAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::init
$LN2@nextSettin:
; Line 114
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 115
	mov	eax, DWORD PTR _settings$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
; Line 116
	mov	al, 1
	jmp	SHORT $LN5@nextSettin
; Line 117
	jmp	SHORT $LN5@nextSettin
$LN4@nextSettin:
; Line 118
	mov	eax, DWORD PTR _settings$[ebp]
	mov	DWORD PTR [eax], 0
; Line 119
	xor	al, al
$LN5@nextSettin:
; Line 121
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@nextSettin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@nextSettin:
	DD	1
	DD	$LN12@nextSettin
$LN12@nextSettin:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@nextSettin
$LN10@nextSettin:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T39915[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z ENDP ; RBTestData::nextSettings
EXTRN	?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z:PROC ; RBDataMap::init
EXTRN	??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z:PROC ; RBDataMap::RBDataMap
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv140 = -268						; size = 4
tv75 = -268						; size = 4
$T39930 = -260						; size = 4
$T39931 = -248						; size = 4
_currCase$ = -44					; size = 4
_intStatus$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_nextCase$ = 8						; size = 4
_status$ = 12						; size = 4
?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z PROC ; RBTestData::nextCase, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
	lea	edx, DWORD PTR _intStatus$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currCase$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@nextCase
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN3@nextCase
; Line 129
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T39931[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T39931[ebp], 0
	je	SHORT $LN7@nextCase
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currCase$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR $T39931[ebp]
	call	??0RBDataMap@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN8@nextCase
$LN7@nextCase:
	mov	DWORD PTR tv140[ebp], 0
$LN8@nextCase:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T39930[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T39930[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 130
	jmp	SHORT $LN2@nextCase
$LN3@nextCase:
; Line 131
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currCase$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?init@RBDataMap@@QAEXPAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBDataMap::init
$LN2@nextCase:
; Line 133
	mov	eax, DWORD PTR _currCase$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 134
	mov	eax, DWORD PTR _nextCase$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
; Line 135
	mov	al, 1
	jmp	SHORT $LN5@nextCase
; Line 136
	jmp	SHORT $LN5@nextCase
$LN4@nextCase:
; Line 137
	mov	eax, DWORD PTR _nextCase$[ebp]
	mov	DWORD PTR [eax], 0
; Line 138
	xor	al, al
$LN5@nextCase:
; Line 140
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@nextCase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@nextCase:
	DD	1
	DD	$LN12@nextCase
$LN12@nextCase:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@nextCase
$LN10@nextCase:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T39931[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z ENDP ; RBTestData::nextCase
END

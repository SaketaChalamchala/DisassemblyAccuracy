; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\ctestfw\tstdtmod.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_7DataMap@@6B@				; DataMap::`vftable'
PUBLIC	??0DataMap@@QAE@ABV0@@Z				; DataMap::DataMap
PUBLIC	??_R4DataMap@@6B@				; DataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDataMap@@@8				; DataMap `RTTI Type Descriptor'
PUBLIC	??_R3DataMap@@8					; DataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DataMap@@8					; DataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DataMap@@8			; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EDataMap@@UAEPAXI@Z				; DataMap::`vector deleting destructor'
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@DataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DataMap@@8 DD FLAT:??_R0?AVDataMap@@@8	; DataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2DataMap@@8
rdata$r	SEGMENT
??_R2DataMap@@8 DD FLAT:??_R1A@?0A@EA@DataMap@@8	; DataMap::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DataMap@@8
rdata$r	SEGMENT
??_R3DataMap@@8 DD 00H					; DataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDataMap@@@8
_DATA	SEGMENT
??_R0?AVDataMap@@@8 DD FLAT:??_7type_info@@6B@		; DataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DataMap@@6B@
rdata$r	SEGMENT
??_R4DataMap@@6B@ DD 00H				; DataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDataMap@@@8
	DD	FLAT:??_R3DataMap@@8
rdata$r	ENDS
;	COMDAT ??_7DataMap@@6B@
CONST	SEGMENT
??_7DataMap@@6B@ DD FLAT:??_R4DataMap@@6B@		; DataMap::`vftable'
	DD	FLAT:??_EDataMap@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0DataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DataMap@@QAE@ABV0@@Z PROC				; DataMap::DataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0DataMap@@QAE@ABV0@@Z ENDP				; DataMap::DataMap
_TEXT	ENDS
PUBLIC	??4DataMap@@QAEAAV0@ABV0@@Z			; DataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DataMap@@QAEAAV0@ABV0@@Z PROC			; DataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DataMap@@QAEAAV0@ABV0@@Z ENDP			; DataMap::operator=
_TEXT	ENDS
PUBLIC	??_GDataMap@@UAEPAXI@Z				; DataMap::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1DataMap@@UAE@XZ:PROC				; DataMap::~DataMap
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDataMap@@UAEPAXI@Z PROC				; DataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDataMap@@UAEPAXI@Z ENDP				; DataMap::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDataMap@@UAEPAXI@Z PROC				; DataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1DataMap@@UAE@XZ		; DataMap::~DataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DataMap@@UAE@XZ			; DataMap::~DataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDataMap@@UAEPAXI@Z ENDP				; DataMap::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBDataMap@@6B@				; RBDataMap::`vftable'
PUBLIC	??0RBDataMap@@QAE@ABV0@@Z			; RBDataMap::RBDataMap
PUBLIC	??_R4RBDataMap@@6B@				; RBDataMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBDataMap@@@8				; RBDataMap `RTTI Type Descriptor'
PUBLIC	??_R3RBDataMap@@8				; RBDataMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBDataMap@@8				; RBDataMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBDataMap@@8			; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBDataMap@@UAEPAXI@Z			; RBDataMap::`vector deleting destructor'
EXTRN	?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getString
EXTRN	?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getInt
EXTRN	?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getInt28
EXTRN	?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getUInt28
EXTRN	?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getIntVector
EXTRN	?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getBinary
EXTRN	?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getStringArray
EXTRN	?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getIntArray
EXTRN	?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z:PROC ; RBDataMap::getItem
;	COMDAT ??_R1A@?0A@EA@RBDataMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBDataMap@@8 DD FLAT:??_R0?AVRBDataMap@@@8 ; RBDataMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R2RBDataMap@@8
rdata$r	SEGMENT
??_R2RBDataMap@@8 DD FLAT:??_R1A@?0A@EA@RBDataMap@@8	; RBDataMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DataMap@@8
rdata$r	ENDS
;	COMDAT ??_R3RBDataMap@@8
rdata$r	SEGMENT
??_R3RBDataMap@@8 DD 00H				; RBDataMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBDataMap@@@8
_DATA	SEGMENT
??_R0?AVRBDataMap@@@8 DD FLAT:??_7type_info@@6B@	; RBDataMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBDataMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBDataMap@@6B@
rdata$r	SEGMENT
??_R4RBDataMap@@6B@ DD 00H				; RBDataMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBDataMap@@@8
	DD	FLAT:??_R3RBDataMap@@8
rdata$r	ENDS
;	COMDAT ??_7RBDataMap@@6B@
CONST	SEGMENT
??_7RBDataMap@@6B@ DD FLAT:??_R4RBDataMap@@6B@		; RBDataMap::`vftable'
	DD	FLAT:??_ERBDataMap@@UAEPAXI@Z
	DD	FLAT:?getString@RBDataMap@@UBE?BVUnicodeString@icu_56@@PBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getInt28@RBDataMap@@UBEHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getUInt28@RBDataMap@@UBEIPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntVector@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getBinary@RBDataMap@@UBEPBEAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getStringArray@RBDataMap@@UBEPBVUnicodeString@icu_56@@AAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getIntArray@RBDataMap@@UBEPBHAAHPBDAAW4UErrorCode@@@Z
	DD	FLAT:?getItem@RBDataMap@@UBEPBVResourceBundle@icu_56@@PBDAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBDataMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBDataMap@@QAE@ABV0@@Z PROC				; RBDataMap::RBDataMap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DataMap@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBDataMap@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBDataMap@@QAE@ABV0@@Z ENDP				; RBDataMap::RBDataMap
_TEXT	ENDS
PUBLIC	??4RBDataMap@@QAEAAV0@ABV0@@Z			; RBDataMap::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4RBDataMap@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4RBDataMap@@QAEAAV0@ABV0@@Z PROC			; RBDataMap::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DataMap@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4RBDataMap@@QAEAAV0@ABV0@@Z ENDP			; RBDataMap::operator=
_TEXT	ENDS
PUBLIC	??_GRBDataMap@@UAEPAXI@Z			; RBDataMap::`scalar deleting destructor'
EXTRN	??1RBDataMap@@UAE@XZ:PROC			; RBDataMap::~RBDataMap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBDataMap@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBDataMap@@UAEPAXI@Z PROC				; RBDataMap::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1RBDataMap@@UAE@XZ		; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBDataMap@@UAE@XZ			; RBDataMap::~RBDataMap
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBDataMap@@UAEPAXI@Z ENDP				; RBDataMap::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestData@@6B@				; TestData::`vftable'
PUBLIC	??0TestData@@QAE@ABV0@@Z			; TestData::TestData
PUBLIC	??_R4TestData@@6B@				; TestData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestData@@@8				; TestData `RTTI Type Descriptor'
PUBLIC	??_R3TestData@@8				; TestData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestData@@8				; TestData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestData@@8			; TestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestData@@UAEPAXI@Z				; TestData::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestData@@8 DD FLAT:??_R0?AVTestData@@@8	; TestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestData@@8
rdata$r	ENDS
;	COMDAT ??_R2TestData@@8
rdata$r	SEGMENT
??_R2TestData@@8 DD FLAT:??_R1A@?0A@EA@TestData@@8	; TestData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestData@@8
rdata$r	SEGMENT
??_R3TestData@@8 DD 00H					; TestData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestData@@@8
_DATA	SEGMENT
??_R0?AVTestData@@@8 DD FLAT:??_7type_info@@6B@		; TestData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestData@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestData@@6B@
rdata$r	SEGMENT
??_R4TestData@@6B@ DD 00H				; TestData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestData@@@8
	DD	FLAT:??_R3TestData@@8
rdata$r	ENDS
;	COMDAT ??_7TestData@@6B@
CONST	SEGMENT
??_7TestData@@6B@ DD FLAT:??_R4TestData@@6B@		; TestData::`vftable'
	DD	FLAT:??_ETestData@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestData@@QAE@ABV0@@Z PROC				; TestData::TestData, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestData@@QAE@ABV0@@Z ENDP				; TestData::TestData
_TEXT	ENDS
PUBLIC	??4TestData@@QAEAAV0@ABV0@@Z			; TestData::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TestData@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TestData@@QAEAAV0@ABV0@@Z PROC			; TestData::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4TestData@@QAEAAV0@ABV0@@Z ENDP			; TestData::operator=
_TEXT	ENDS
PUBLIC	??_GTestData@@UAEPAXI@Z				; TestData::`scalar deleting destructor'
EXTRN	??1TestData@@UAE@XZ:PROC			; TestData::~TestData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestData@@UAEPAXI@Z PROC				; TestData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestData@@UAE@XZ			; TestData::~TestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestData@@UAEPAXI@Z ENDP				; TestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestData@@UAEPAXI@Z PROC				; TestData::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1TestData@@UAE@XZ		; TestData::~TestData
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestData@@UAE@XZ			; TestData::~TestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestData@@UAEPAXI@Z ENDP				; TestData::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBTestData@@6B@				; RBTestData::`vftable'
PUBLIC	??0RBTestData@@QAE@ABV0@@Z			; RBTestData::RBTestData
PUBLIC	??_R4RBTestData@@6B@				; RBTestData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBTestData@@@8				; RBTestData `RTTI Type Descriptor'
PUBLIC	??_R3RBTestData@@8				; RBTestData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBTestData@@8				; RBTestData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBTestData@@8			; RBTestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBTestData@@UAEPAXI@Z			; RBTestData::`vector deleting destructor'
EXTRN	?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z:PROC ; RBTestData::getInfo
EXTRN	?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:PROC ; RBTestData::nextSettings
EXTRN	?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z:PROC ; RBTestData::nextCase
;	COMDAT ??_R1A@?0A@EA@RBTestData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBTestData@@8 DD FLAT:??_R0?AVRBTestData@@@8 ; RBTestData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_R2RBTestData@@8
rdata$r	SEGMENT
??_R2RBTestData@@8 DD FLAT:??_R1A@?0A@EA@RBTestData@@8	; RBTestData::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TestData@@8
rdata$r	ENDS
;	COMDAT ??_R3RBTestData@@8
rdata$r	SEGMENT
??_R3RBTestData@@8 DD 00H				; RBTestData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBTestData@@@8
_DATA	SEGMENT
??_R0?AVRBTestData@@@8 DD FLAT:??_7type_info@@6B@	; RBTestData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBTestData@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBTestData@@6B@
rdata$r	SEGMENT
??_R4RBTestData@@6B@ DD 00H				; RBTestData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBTestData@@@8
	DD	FLAT:??_R3RBTestData@@8
rdata$r	ENDS
;	COMDAT ??_7RBTestData@@6B@
CONST	SEGMENT
??_7RBTestData@@6B@ DD FLAT:??_R4RBTestData@@6B@	; RBTestData::`vftable'
	DD	FLAT:??_ERBTestData@@UAEPAXI@Z
	DD	FLAT:?getInfo@RBTestData@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?nextSettings@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?nextCase@RBTestData@@UAECAAPBVDataMap@@AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBTestData@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBTestData@@QAE@ABV0@@Z PROC				; RBTestData::RBTestData, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestData@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestData@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBTestData@@QAE@ABV0@@Z ENDP				; RBTestData::RBTestData
_TEXT	ENDS
PUBLIC	??_GRBTestData@@UAEPAXI@Z			; RBTestData::`scalar deleting destructor'
EXTRN	??1RBTestData@@UAE@XZ:PROC			; RBTestData::~RBTestData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBTestData@@UAEPAXI@Z PROC				; RBTestData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestData@@UAE@XZ			; RBTestData::~RBTestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBTestData@@UAEPAXI@Z ENDP				; RBTestData::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBTestData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBTestData@@UAEPAXI@Z PROC				; RBTestData::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1RBTestData@@UAE@XZ		; RBTestData::~RBTestData
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestData@@UAE@XZ			; RBTestData::~RBTestData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBTestData@@UAEPAXI@Z ENDP				; RBTestData::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestLog@@6B@				; TestLog::`vftable'
PUBLIC	??0TestLog@@QAE@XZ				; TestLog::TestLog
PUBLIC	??_R4TestLog@@6B@				; TestLog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestLog@@@8				; TestLog `RTTI Type Descriptor'
PUBLIC	??_R3TestLog@@8					; TestLog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestLog@@8					; TestLog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestLog@@8			; TestLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestLog@@UAEPAXI@Z				; TestLog::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestLog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestLog@@8 DD FLAT:??_R0?AVTestLog@@@8	; TestLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestLog@@8
rdata$r	ENDS
;	COMDAT ??_R2TestLog@@8
rdata$r	SEGMENT
??_R2TestLog@@8 DD FLAT:??_R1A@?0A@EA@TestLog@@8	; TestLog::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestLog@@8
rdata$r	SEGMENT
??_R3TestLog@@8 DD 00H					; TestLog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestLog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestLog@@@8
_DATA	SEGMENT
??_R0?AVTestLog@@@8 DD FLAT:??_7type_info@@6B@		; TestLog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestLog@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestLog@@6B@
rdata$r	SEGMENT
??_R4TestLog@@6B@ DD 00H				; TestLog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestLog@@@8
	DD	FLAT:??_R3TestLog@@8
rdata$r	ENDS
;	COMDAT ??_7TestLog@@6B@
CONST	SEGMENT
??_7TestLog@@6B@ DD FLAT:??_R4TestLog@@6B@		; TestLog::`vftable'
	DD	FLAT:??_ETestLog@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestLog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TestLog@@QAE@XZ PROC					; TestLog::TestLog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestLog@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0TestLog@@QAE@XZ ENDP					; TestLog::TestLog
_TEXT	ENDS
PUBLIC	??0TestLog@@QAE@ABV0@@Z				; TestLog::TestLog
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TestLog@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestLog@@QAE@ABV0@@Z PROC				; TestLog::TestLog, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestLog@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestLog@@QAE@ABV0@@Z ENDP				; TestLog::TestLog
_TEXT	ENDS
PUBLIC	??4TestLog@@QAEAAV0@ABV0@@Z			; TestLog::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TestLog@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TestLog@@QAEAAV0@ABV0@@Z PROC			; TestLog::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4TestLog@@QAEAAV0@ABV0@@Z ENDP			; TestLog::operator=
_TEXT	ENDS
PUBLIC	??1TestLog@@UAE@XZ				; TestLog::~TestLog
PUBLIC	??_GTestLog@@UAEPAXI@Z				; TestLog::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestLog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestLog@@UAEPAXI@Z PROC				; TestLog::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestLog@@UAE@XZ			; TestLog::~TestLog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestLog@@UAEPAXI@Z ENDP				; TestLog::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestLog@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestLog@@UAEPAXI@Z PROC				; TestLog::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1TestLog@@UAE@XZ		; TestLog::~TestLog
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestLog@@UAE@XZ			; TestLog::~TestLog
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestLog@@UAEPAXI@Z ENDP				; TestLog::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IcuTestErrorCode@@6B@			; IcuTestErrorCode::`vftable'
PUBLIC	??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z	; IcuTestErrorCode::IcuTestErrorCode
PUBLIC	??_R4IcuTestErrorCode@@6B@			; IcuTestErrorCode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIcuTestErrorCode@@@8			; IcuTestErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3IcuTestErrorCode@@8			; IcuTestErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IcuTestErrorCode@@8			; IcuTestErrorCode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IcuTestErrorCode@@8		; IcuTestErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ErrorCode@icu_56@@8		; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVErrorCode@icu_56@@@8			; icu_56::ErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EIcuTestErrorCode@@UAEPAXI@Z			; IcuTestErrorCode::`vector deleting destructor'
PUBLIC	?handleFailure@IcuTestErrorCode@@MBEXXZ		; IcuTestErrorCode::handleFailure
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@XZ:PROC
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\tools\ctestfw\unicode\testlog.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2ErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8 ; icu_56::ErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3ErrorCode@icu_56@@8 DD 00H				; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ErrorCode@icu_56@@8 DD FLAT:??_R0?AVErrorCode@icu_56@@@8 ; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IcuTestErrorCode@@8 DD FLAT:??_R0?AVIcuTestErrorCode@@@8 ; IcuTestErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_R2IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R2IcuTestErrorCode@@8 DD FLAT:??_R1A@?0A@EA@IcuTestErrorCode@@8 ; IcuTestErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IcuTestErrorCode@@8
rdata$r	SEGMENT
??_R3IcuTestErrorCode@@8 DD 00H				; IcuTestErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIcuTestErrorCode@@@8
_DATA	SEGMENT
??_R0?AVIcuTestErrorCode@@@8 DD FLAT:??_7type_info@@6B@	; IcuTestErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIcuTestErrorCode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IcuTestErrorCode@@6B@
rdata$r	SEGMENT
??_R4IcuTestErrorCode@@6B@ DD 00H			; IcuTestErrorCode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIcuTestErrorCode@@@8
	DD	FLAT:??_R3IcuTestErrorCode@@8
rdata$r	ENDS
;	COMDAT ??_7IcuTestErrorCode@@6B@
CONST	SEGMENT
??_7IcuTestErrorCode@@6B@ DD FLAT:??_R4IcuTestErrorCode@@6B@ ; IcuTestErrorCode::`vftable'
	DD	FLAT:??_EIcuTestErrorCode@@UAEPAXI@Z
	DD	FLAT:?handleFailure@IcuTestErrorCode@@MBEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_callingTestClass$ = 8					; size = 4
_callingTestName$ = 12					; size = 4
??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z PROC		; IcuTestErrorCode::IcuTestErrorCode, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuTestErrorCode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _callingTestClass$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _callingTestName$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0IcuTestErrorCode@@QAE@AAVTestLog@@PBD@Z ENDP		; IcuTestErrorCode::IcuTestErrorCode
_TEXT	ENDS
PUBLIC	??0IcuTestErrorCode@@QAE@ABV0@@Z		; IcuTestErrorCode::IcuTestErrorCode
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IcuTestErrorCode@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0IcuTestErrorCode@@QAE@ABV0@@Z PROC			; IcuTestErrorCode::IcuTestErrorCode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuTestErrorCode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuTestErrorCode@@QAE@ABV0@@Z ENDP			; IcuTestErrorCode::IcuTestErrorCode
_TEXT	ENDS
PUBLIC	??1IcuTestErrorCode@@UAE@XZ			; IcuTestErrorCode::~IcuTestErrorCode
PUBLIC	??_GIcuTestErrorCode@@UAEPAXI@Z			; IcuTestErrorCode::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIcuTestErrorCode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIcuTestErrorCode@@UAEPAXI@Z PROC			; IcuTestErrorCode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuTestErrorCode@@UAE@XZ		; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIcuTestErrorCode@@UAEPAXI@Z ENDP			; IcuTestErrorCode::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EIcuTestErrorCode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EIcuTestErrorCode@@UAEPAXI@Z PROC			; IcuTestErrorCode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1IcuTestErrorCode@@UAE@XZ	; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuTestErrorCode@@UAE@XZ		; IcuTestErrorCode::~IcuTestErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EIcuTestErrorCode@@UAEPAXI@Z ENDP			; IcuTestErrorCode::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TestDataModule@@6B@				; TestDataModule::`vftable'
PUBLIC	??0TestDataModule@@QAE@ABV0@@Z			; TestDataModule::TestDataModule
PUBLIC	??_R4TestDataModule@@6B@			; TestDataModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTestDataModule@@@8			; TestDataModule `RTTI Type Descriptor'
PUBLIC	??_R3TestDataModule@@8				; TestDataModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TestDataModule@@8				; TestDataModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TestDataModule@@8			; TestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETestDataModule@@UAEPAXI@Z			; TestDataModule::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TestDataModule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TestDataModule@@8 DD FLAT:??_R0?AVTestDataModule@@@8 ; TestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R2TestDataModule@@8
rdata$r	SEGMENT
??_R2TestDataModule@@8 DD FLAT:??_R1A@?0A@EA@TestDataModule@@8 ; TestDataModule::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TestDataModule@@8
rdata$r	SEGMENT
??_R3TestDataModule@@8 DD 00H				; TestDataModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTestDataModule@@@8
_DATA	SEGMENT
??_R0?AVTestDataModule@@@8 DD FLAT:??_7type_info@@6B@	; TestDataModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTestDataModule@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TestDataModule@@6B@
rdata$r	SEGMENT
??_R4TestDataModule@@6B@ DD 00H				; TestDataModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTestDataModule@@@8
	DD	FLAT:??_R3TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_7TestDataModule@@6B@
CONST	SEGMENT
??_7TestDataModule@@6B@ DD FLAT:??_R4TestDataModule@@6B@ ; TestDataModule::`vftable'
	DD	FLAT:??_ETestDataModule@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TestDataModule@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TestDataModule@@QAE@ABV0@@Z PROC			; TestDataModule::TestDataModule, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TestDataModule@@QAE@ABV0@@Z ENDP			; TestDataModule::TestDataModule
_TEXT	ENDS
PUBLIC	??1TestDataModule@@UAE@XZ			; TestDataModule::~TestDataModule
PUBLIC	??_GTestDataModule@@UAEPAXI@Z			; TestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTestDataModule@@UAEPAXI@Z PROC			; TestDataModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTestDataModule@@UAEPAXI@Z ENDP			; TestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETestDataModule@@UAEPAXI@Z PROC			; TestDataModule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1TestDataModule@@UAE@XZ	; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETestDataModule@@UAEPAXI@Z ENDP			; TestDataModule::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RBTestDataModule@@6B@			; RBTestDataModule::`vftable'
PUBLIC	??0RBTestDataModule@@QAE@ABV0@@Z		; RBTestDataModule::RBTestDataModule
PUBLIC	??_R4RBTestDataModule@@6B@			; RBTestDataModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRBTestDataModule@@@8			; RBTestDataModule `RTTI Type Descriptor'
PUBLIC	??_R3RBTestDataModule@@8			; RBTestDataModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RBTestDataModule@@8			; RBTestDataModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RBTestDataModule@@8		; RBTestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ERBTestDataModule@@UAEPAXI@Z			; RBTestDataModule::`vector deleting destructor'
PUBLIC	?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z ; RBTestDataModule::getInfo
PUBLIC	?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z ; RBTestDataModule::createTestData
PUBLIC	?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z ; RBTestDataModule::createTestData
;	COMDAT ??_R1A@?0A@EA@RBTestDataModule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RBTestDataModule@@8 DD FLAT:??_R0?AVRBTestDataModule@@@8 ; RBTestDataModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R2RBTestDataModule@@8
rdata$r	SEGMENT
??_R2RBTestDataModule@@8 DD FLAT:??_R1A@?0A@EA@RBTestDataModule@@8 ; RBTestDataModule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R3RBTestDataModule@@8
rdata$r	SEGMENT
??_R3RBTestDataModule@@8 DD 00H				; RBTestDataModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRBTestDataModule@@@8
_DATA	SEGMENT
??_R0?AVRBTestDataModule@@@8 DD FLAT:??_7type_info@@6B@	; RBTestDataModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRBTestDataModule@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RBTestDataModule@@6B@
rdata$r	SEGMENT
??_R4RBTestDataModule@@6B@ DD 00H			; RBTestDataModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRBTestDataModule@@@8
	DD	FLAT:??_R3RBTestDataModule@@8
rdata$r	ENDS
;	COMDAT ??_7RBTestDataModule@@6B@
CONST	SEGMENT
??_7RBTestDataModule@@6B@ DD FLAT:??_R4RBTestDataModule@@6B@ ; RBTestDataModule::`vftable'
	DD	FLAT:??_ERBTestDataModule@@UAEPAXI@Z
	DD	FLAT:?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
	DD	FLAT:?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
	DD	FLAT:?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0RBTestDataModule@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0RBTestDataModule@@QAE@ABV0@@Z PROC			; RBTestDataModule::RBTestDataModule, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestDataModule@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RBTestDataModule@@QAE@ABV0@@Z ENDP			; RBTestDataModule::RBTestDataModule
_TEXT	ENDS
PUBLIC	??1RBTestDataModule@@UAE@XZ			; RBTestDataModule::~RBTestDataModule
PUBLIC	??_GRBTestDataModule@@UAEPAXI@Z			; RBTestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRBTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRBTestDataModule@@UAEPAXI@Z PROC			; RBTestDataModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestDataModule@@UAE@XZ		; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRBTestDataModule@@UAEPAXI@Z ENDP			; RBTestDataModule::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ERBTestDataModule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERBTestDataModule@@UAEPAXI@Z PROC			; RBTestDataModule::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1RBTestDataModule@@UAE@XZ	; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RBTestDataModule@@UAE@XZ		; RBTestDataModule::~RBTestDataModule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERBTestDataModule@@UAEPAXI@Z ENDP			; RBTestDataModule::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TestLog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TestLog@@UAE@XZ PROC					; TestLog::~TestLog, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\tstdtmod.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestLog@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1TestLog@@UAE@XZ ENDP					; TestLog::~TestLog
_TEXT	ENDS
EXTRN	__imp_??1ErrorCode@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?isFailure@ErrorCode@icu_56@@QBECXZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1IcuTestErrorCode@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1IcuTestErrorCode@@UAE@XZ$0
__ehfuncinfo$??1IcuTestErrorCode@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1IcuTestErrorCode@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1IcuTestErrorCode@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1IcuTestErrorCode@@UAE@XZ PROC			; IcuTestErrorCode::~IcuTestErrorCode, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1IcuTestErrorCode@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuTestErrorCode@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 19
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isFailure@ErrorCode@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@IcuTestErr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleFailure@IcuTestErrorCode@@MBEXXZ	; IcuTestErrorCode::handleFailure
$LN2@IcuTestErr:
; Line 20
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ErrorCode@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1IcuTestErrorCode@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ErrorCode@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1IcuTestErrorCode@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1IcuTestErrorCode@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1IcuTestErrorCode@@UAE@XZ ENDP			; IcuTestErrorCode::~IcuTestErrorCode
PUBLIC	??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@	; `string'
PUBLIC	??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ ; IcuTestErrorCode::logIfFailureAndReset
EXTRN	__imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	__imp__vsprintf:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@ DB ' ', 00H, '-', 00H, ' ', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@ DB ' '
	DB	00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, ':', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
_TEXT	SEGMENT
tv185 = -4616						; size = 4
tv181 = -4616						; size = 4
tv197 = -4612						; size = 4
tv191 = -4612						; size = 4
tv183 = -4608						; size = 4
tv179 = -4608						; size = 4
tv194 = -4604						; size = 4
tv188 = -4604						; size = 4
$T40186 = -4593						; size = 1
$T33291 = -4584						; size = 64
$T33292 = -4512						; size = 64
$T33295 = -4440						; size = 64
$T33296 = -4368						; size = 64
_msg$33289 = -4104					; size = 64
_ap$33283 = -4032					; size = 4
_buffer$33282 = -4020					; size = 4000
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_fmt$ = 12						; size = 4
?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ PROC	; IcuTestErrorCode::logIfFailureAndReset, COMDAT
; Line 22
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 4604				; 000011fcH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4616]
	mov	ecx, 1151				; 0000047fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 23
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isFailure@ErrorCode@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN2@logIfFailu
; Line 26
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _ap$33283[ebp], eax
; Line 27
	mov	esi, esp
	mov	eax, DWORD PTR _ap$33283[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$33282[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 28
	mov	DWORD PTR _ap$33283[ebp], 0
; Line 29
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	ecx, DWORD PTR _msg$33289[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 30
	mov	esi, esp
	push	0
	push	-1
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR $T33292[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv188[ebp], eax
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv179[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv179[ebp]
	push	ecx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T33291[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv191[ebp], eax
	mov	edx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv181[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edi, esp
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$33289[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	esi, esp
	push	0
	push	-1
	lea	eax, DWORD PTR _buffer$33282[ebp]
	push	eax
	lea	ecx, DWORD PTR $T33296[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T33295[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edi, esp
	mov	ecx, DWORD PTR tv185[ebp]
	push	ecx
	lea	ecx, DWORD PTR _msg$33289[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T33295[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33296[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	mov	esi, esp
	lea	eax, DWORD PTR _msg$33289[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 33
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 34
	mov	BYTE PTR $T40186[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$33289[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T40186[ebp]
	jmp	SHORT $LN3@logIfFailu
; Line 35
	jmp	SHORT $LN3@logIfFailu
$LN2@logIfFailu:
; Line 36
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	xor	al, al
$LN3@logIfFailu:
; Line 39
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@logIfFailu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4616				; 00001208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@logIfFailu:
	DD	2
	DD	$LN13@logIfFailu
$LN13@logIfFailu:
	DD	-4020					; fffff04cH
	DD	4000					; 00000fa0H
	DD	$LN10@logIfFailu
	DD	-4104					; ffffeff8H
	DD	64					; 00000040H
	DD	$LN11@logIfFailu
$LN11@logIfFailu:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN10@logIfFailu:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$33289[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33296[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33295[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4620]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?logIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ ENDP	; IcuTestErrorCode::logIfFailureAndReset
PUBLIC	__$ArrayPad$
PUBLIC	?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ ; IcuTestErrorCode::logDataIfFailureAndReset
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
_TEXT	SEGMENT
tv185 = -4616						; size = 4
tv181 = -4616						; size = 4
tv197 = -4612						; size = 4
tv191 = -4612						; size = 4
tv183 = -4608						; size = 4
tv179 = -4608						; size = 4
tv194 = -4604						; size = 4
tv188 = -4604						; size = 4
$T40207 = -4593						; size = 1
$T33315 = -4584						; size = 64
$T33316 = -4512						; size = 64
$T33318 = -4440						; size = 64
$T33319 = -4368						; size = 64
_msg$33313 = -4104					; size = 64
_ap$33307 = -4032					; size = 4
_buffer$33306 = -4020					; size = 4000
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_fmt$ = 12						; size = 4
?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ PROC ; IcuTestErrorCode::logDataIfFailureAndReset, COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 4604				; 000011fcH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4616]
	mov	ecx, 1151				; 0000047fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 42
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isFailure@ErrorCode@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN2@logDataIfF
; Line 45
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _ap$33307[ebp], eax
; Line 46
	mov	esi, esp
	mov	eax, DWORD PTR _ap$33307[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$33306[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 47
	mov	DWORD PTR _ap$33307[ebp], 0
; Line 48
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	ecx, DWORD PTR _msg$33313[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 49
	mov	esi, esp
	push	0
	push	-1
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR $T33316[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv188[ebp], eax
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv179[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv179[ebp]
	push	ecx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T33315[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv191[ebp], eax
	mov	edx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv181[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edi, esp
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$33313[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33315[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33316[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 50
	mov	esi, esp
	push	0
	push	-1
	lea	eax, DWORD PTR _buffer$33306[ebp]
	push	eax
	lea	ecx, DWORD PTR $T33319[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_17HIKLPLBG@?$AA?5?$AA?9?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T33318[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edi, esp
	mov	ecx, DWORD PTR tv185[ebp]
	push	ecx
	lea	ecx, DWORD PTR _msg$33313[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T33318[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33319[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 51
	mov	esi, esp
	lea	eax, DWORD PTR _msg$33313[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 52
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	BYTE PTR $T40207[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$33313[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T40207[ebp]
	jmp	SHORT $LN3@logDataIfF
; Line 54
	jmp	SHORT $LN3@logDataIfF
$LN2@logDataIfF:
; Line 55
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?reset@ErrorCode@icu_56@@QAE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 56
	xor	al, al
$LN3@logDataIfF:
; Line 58
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@logDataIfF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4616				; 00001208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@logDataIfF:
	DD	2
	DD	$LN13@logDataIfF
$LN13@logDataIfF:
	DD	-4020					; fffff04cH
	DD	4000					; 00000fa0H
	DD	$LN10@logDataIfF
	DD	-4104					; ffffeff8H
	DD	64					; 00000040H
	DD	$LN11@logDataIfF
$LN11@logDataIfF:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN10@logDataIfF:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$33313[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33316[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33315[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33319[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33318[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4620]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?logDataIfFailureAndReset@IcuTestErrorCode@@QAACPBDZZ ENDP ; IcuTestErrorCode::logDataIfFailureAndReset
PUBLIC	__$ArrayPad$
EXTRN	__imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?handleFailure@IcuTestErrorCode@@MBEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$2
__ehfuncinfo$?handleFailure@IcuTestErrorCode@@MBEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?handleFailure@IcuTestErrorCode@@MBEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?handleFailure@IcuTestErrorCode@@MBEXXZ
_TEXT	SEGMENT
tv162 = -452						; size = 4
tv167 = -448						; size = 4
tv160 = -444						; size = 4
tv164 = -440						; size = 4
$T33327 = -432						; size = 64
$T33328 = -360						; size = 64
_msg$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?handleFailure@IcuTestErrorCode@@MBEXXZ PROC		; IcuTestErrorCode::handleFailure, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?handleFailure@IcuTestErrorCode@@MBEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 440				; 000001b8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	ecx, DWORD PTR _msg$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 63
	mov	esi, esp
	push	0
	push	-1
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR $T33328[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv160[ebp]
	push	ecx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1BG@ONGINEJD@?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?3?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T33327[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv167[ebp], eax
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edi, esp
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33327[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33328[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 2
	je	SHORT $LN2@handleFail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?get@ErrorCode@icu_56@@QBE?AW4UErrorCode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 4
	jne	SHORT $LN3@handleFail
$LN2@handleFail:
; Line 66
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 67
	jmp	SHORT $LN1@handleFail
$LN3@handleFail:
; Line 68
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@handleFail:
; Line 70
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@handleFail
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@handleFail:
	DD	1
	DD	$LN11@handleFail
$LN11@handleFail:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN9@handleFail
$LN9@handleFail:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _msg$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33328[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?handleFailure@IcuTestErrorCode@@MBEXXZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33327[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?handleFailure@IcuTestErrorCode@@MBEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-456]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?handleFailure@IcuTestErrorCode@@MBEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?handleFailure@IcuTestErrorCode@@MBEXXZ ENDP		; IcuTestErrorCode::handleFailure
PUBLIC	??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ; RBTestDataModule::RBTestDataModule
PUBLIC	?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z ; TestDataModule::getTestDataModule
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -268						; size = 4
tv81 = -268						; size = 4
$T40240 = -260						; size = 4
$T40241 = -248						; size = 4
$T40244 = -236						; size = 4
$T40245 = -224						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_log$ = 12						; size = 4
_status$ = 16						; size = 4
?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z PROC ; TestDataModule::getTestDataModule, COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 74
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getTestDat
; Line 75
	xor	eax, eax
	jmp	$LN4@getTestDat
$LN3@getTestDat:
; Line 77
	mov	DWORD PTR _result$[ebp], 0
; Line 82
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T40241[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40241[ebp], 0
	je	SHORT $LN6@getTestDat
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _log$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T40241[ebp]
	call	??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ; RBTestDataModule::RBTestDataModule
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@getTestDat
$LN6@getTestDat:
	mov	DWORD PTR tv81[ebp], 0
$LN7@getTestDat:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T40240[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T40240[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getTestDat
; Line 84
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN4@getTestDat
; Line 85
	jmp	SHORT $LN4@getTestDat
$LN2@getTestDat:
; Line 86
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T40245[ebp], eax
	mov	ecx, DWORD PTR $T40245[ebp]
	mov	DWORD PTR $T40244[ebp], ecx
	cmp	DWORD PTR $T40244[ebp], 0
	je	SHORT $LN8@getTestDat
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T40244[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T40244[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN9@getTestDat
$LN8@getTestDat:
	mov	DWORD PTR tv92[ebp], 0
$LN9@getTestDat:
; Line 87
	xor	eax, eax
$LN4@getTestDat:
; Line 89
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T40241[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTestDataModule@TestDataModule@@SAPAV1@PBDAAVTestLog@@AAW4UErrorCode@@@Z ENDP ; TestDataModule::getTestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ; TestDataModule::TestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_log$ = 12						; size = 4
___formal$ = 16						; size = 4
??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z PROC ; TestDataModule::TestDataModule, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\ctestfw\tstdtmod.cpp
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _log$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ENDP ; TestDataModule::TestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TestDataModule@@UAE@XZ
_TEXT	SEGMENT
tv73 = -232						; size = 4
$T40263 = -224						; size = 4
$T40264 = -212						; size = 4
_this$ = -8						; size = 4
??1TestDataModule@@UAE@XZ PROC				; TestDataModule::~TestDataModule, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TestDataModule@@6B@
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@TestDataMo
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T40264[ebp], ecx
	mov	edx, DWORD PTR $T40264[ebp]
	mov	DWORD PTR $T40263[ebp], edx
	cmp	DWORD PTR $T40263[ebp], 0
	je	SHORT $LN4@TestDataMo
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T40263[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T40263[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN2@TestDataMo
$LN4@TestDataMo:
	mov	DWORD PTR tv73[ebp], 0
$LN2@TestDataMo:
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TestDataModule@@UAE@XZ ENDP				; TestDataModule::~TestDataModule
_TEXT	ENDS
PUBLIC	?getName@TestDataModule@@QBEPBDXZ		; TestDataModule::getName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getName@TestDataModule@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@TestDataModule@@QBEPBDXZ PROC			; TestDataModule::getName, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 107
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@TestDataModule@@QBEPBDXZ ENDP			; TestDataModule::getName
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
EXTRN	_ures_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1RBTestDataModule@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1RBTestDataModule@@UAE@XZ PROC			; RBTestDataModule::~RBTestDataModule, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestDataModule@@6B@
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RBTestDataModule@@UAE@XZ ENDP			; RBTestDataModule::~RBTestDataModule
_TEXT	ENDS
PUBLIC	??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_04BJPIHCBA@Info?$AA@			; `string'
PUBLIC	??_C@_08OCIHCEBA@TestData?$AA@			; `string'
PUBLIC	?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ; RBTestDataModule::getTestBundle
PUBLIC	__$ArrayPad$
EXTRN	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z:PROC ; RBDataMap::RBDataMap
EXTRN	_ures_getSize_56:PROC
EXTRN	_ures_getByKey_56:PROC
;	COMDAT ??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@ DB 'U'
	DB	00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H
	DB	't', 00H, 'e', 00H, 's', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'a'
	DB	00H, 't', 00H, 'a', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'm', 00H
	DB	'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 's'
	DB	00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'o'
	DB	00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, '!', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04BJPIHCBA@Info?$AA@
CONST	SEGMENT
??_C@_04BJPIHCBA@Info?$AA@ DB 'Info', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OCIHCEBA@TestData?$AA@
CONST	SEGMENT
??_C@_08OCIHCEBA@TestData?$AA@ DB 'TestData', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv181 = -324						; size = 4
tv178 = -320						; size = 4
tv69 = -320						; size = 4
$T40275 = -312						; size = 4
$T40276 = -300						; size = 4
$T33376 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_log$ = 12						; size = 4
_status$ = 16						; size = 4
??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z PROC ; RBTestDataModule::RBTestDataModule, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _log$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TestDataModule@@IAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ; TestDataModule::TestDataModule
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RBTestDataModule@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1
; Line 128
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ; RBTestDataModule::getTestBundle
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN4@RBTestData
; Line 130
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_08OCIHCEBA@TestData?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_ures_getSize_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 132
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_04BJPIHCBA@Info?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 133
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RBTestData
; Line 134
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1JC@NJKEKHLM@?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?9?$AA?5@
	push	1
	lea	ecx, DWORD PTR $T33376[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv181[ebp]
	push	ecx
	mov	edx, DWORD PTR _log$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _log$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33376[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
; Line 136
	jmp	SHORT $LN4@RBTestData
$LN2@RBTestData:
; Line 137
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T40276[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T40276[ebp], 0
	je	SHORT $LN6@RBTestData
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	ecx, DWORD PTR $T40276[ebp]
	call	??0RBDataMap@@QAE@PAUUResourceBundle@@AAW4UErrorCode@@@Z ; RBDataMap::RBDataMap
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN7@RBTestData
$LN6@RBTestData:
	mov	DWORD PTR tv178[ebp], 0
$LN7@RBTestData:
	mov	eax, DWORD PTR tv178[ebp]
	mov	DWORD PTR $T40275[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T40275[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN4@RBTestData:
; Line 140
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TestDataModule@@UAE@XZ		; TestDataModule::~TestDataModule
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33376[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z$2:
	mov	eax, DWORD PTR $T40276[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RBTestDataModule@@QAE@PBDAAVTestLog@@AAW4UErrorCode@@@Z ENDP ; RBTestDataModule::RBTestDataModule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_info$ = 8						; size = 4
___formal$ = 12						; size = 4
?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z PROC ; RBTestDataModule::getInfo, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 144
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@getInfo
; Line 146
	mov	al, 1
	jmp	SHORT $LN3@getInfo
; Line 147
	jmp	SHORT $LN3@getInfo
$LN2@getInfo:
; Line 148
	xor	al, al
$LN3@getInfo:
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?getInfo@RBTestDataModule@@UBECAAPBVDataMap@@AAW4UErrorCode@@@Z ENDP ; RBTestDataModule::getInfo
_TEXT	ENDS
PUBLIC	??_C@_07EJKOAGME@Headers?$AA@			; `string'
EXTRN	??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z:PROC ; RBTestData::RBTestData
EXTRN	_ures_getByIndex_56:PROC
;	COMDAT ??_C@_07EJKOAGME@Headers?$AA@
CONST	SEGMENT
??_C@_07EJKOAGME@Headers?$AA@ DB 'Headers', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv139 = -316						; size = 4
tv128 = -316						; size = 4
$T40292 = -308						; size = 4
$T40293 = -296						; size = 4
$T40296 = -284						; size = 4
$T40297 = -272						; size = 4
_headers$33399 = -68					; size = 4
_DataFillIn$33398 = -56					; size = 4
_intStatus$ = -44					; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_status$ = 12						; size = 4
?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z PROC ; RBTestDataModule::createTestData, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	DWORD PTR _result$[ebp], 0
; Line 155
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+28]
	cmp	ecx, 1
	jne	$LN6@createTest
; Line 159
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _DataFillIn$33398[ebp], eax
; Line 160
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_07EJKOAGME@Headers?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _headers$33399[ebp], eax
; Line 162
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@createTest
; Line 163
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T40293[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40293[ebp], 0
	je	SHORT $LN9@createTest
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _headers$33399[ebp]
	push	ecx
	mov	edx, DWORD PTR _DataFillIn$33398[ebp]
	push	edx
	mov	ecx, DWORD PTR $T40293[ebp]
	call	??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBTestData::RBTestData
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN10@createTest
$LN9@createTest:
	mov	DWORD PTR tv128[ebp], 0
$LN10@createTest:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T40292[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T40292[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 165
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createTest
; Line 166
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN7@createTest
; Line 167
	jmp	SHORT $LN3@createTest
$LN4@createTest:
; Line 168
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T40297[ebp], eax
	mov	ecx, DWORD PTR $T40297[ebp]
	mov	DWORD PTR $T40296[ebp], ecx
	cmp	DWORD PTR $T40296[ebp], 0
	je	SHORT $LN11@createTest
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T40296[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T40296[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN3@createTest
$LN11@createTest:
	mov	DWORD PTR tv139[ebp], 0
$LN3@createTest:
; Line 170
	jmp	SHORT $LN2@createTest
$LN5@createTest:
; Line 171
	mov	eax, DWORD PTR _DataFillIn$33398[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 172
	mov	eax, DWORD PTR _headers$33399[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN2@createTest:
; Line 174
	jmp	SHORT $LN1@createTest
$LN6@createTest:
; Line 175
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN1@createTest:
; Line 177
	xor	eax, eax
$LN7@createTest:
; Line 178
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@createTest
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN17@createTest:
	DD	1
	DD	$LN16@createTest
$LN16@createTest:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@createTest
$LN14@createTest:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T40293[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createTestData@RBTestDataModule@@UBEPAVTestData@@HAAW4UErrorCode@@@Z ENDP ; RBTestDataModule::createTestData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z$0
__ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv139 = -316						; size = 4
tv128 = -316						; size = 4
$T40312 = -308						; size = 4
$T40313 = -296						; size = 4
$T40316 = -284						; size = 4
$T40317 = -272						; size = 4
_headers$33421 = -68					; size = 4
_DataFillIn$33420 = -56					; size = 4
_intStatus$ = -44					; size = 4
_result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_status$ = 12						; size = 4
?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z PROC ; RBTestDataModule::createTestData, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	DWORD PTR _result$[ebp], 0
; Line 183
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+28]
	cmp	ecx, 1
	jne	$LN6@createTest@2
; Line 187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _DataFillIn$33420[ebp], eax
; Line 188
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_07EJKOAGME@Headers?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _headers$33421[ebp], eax
; Line 190
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@createTest@2
; Line 191
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T40313[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T40313[ebp], 0
	je	SHORT $LN9@createTest@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _headers$33421[ebp]
	push	ecx
	mov	edx, DWORD PTR _DataFillIn$33420[ebp]
	push	edx
	mov	ecx, DWORD PTR $T40313[ebp]
	call	??0RBTestData@@QAE@PAUUResourceBundle@@0AAW4UErrorCode@@@Z ; RBTestData::RBTestData
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN10@createTest@2
$LN9@createTest@2:
	mov	DWORD PTR tv128[ebp], 0
$LN10@createTest@2:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T40312[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T40312[ebp]
	mov	DWORD PTR _result$[ebp], ecx
; Line 192
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createTest@2
; Line 193
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN7@createTest@2
; Line 194
	jmp	SHORT $LN3@createTest@2
$LN4@createTest@2:
; Line 195
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T40317[ebp], eax
	mov	ecx, DWORD PTR $T40317[ebp]
	mov	DWORD PTR $T40316[ebp], ecx
	cmp	DWORD PTR $T40316[ebp], 0
	je	SHORT $LN11@createTest@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T40316[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T40316[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN3@createTest@2
$LN11@createTest@2:
	mov	DWORD PTR tv139[ebp], 0
$LN3@createTest@2:
; Line 197
	jmp	SHORT $LN2@createTest@2
$LN5@createTest@2:
; Line 198
	mov	eax, DWORD PTR _DataFillIn$33420[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 199
	mov	eax, DWORD PTR _headers$33421[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN2@createTest@2:
; Line 201
	jmp	SHORT $LN1@createTest@2
$LN6@createTest@2:
; Line 202
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
$LN1@createTest@2:
; Line 204
	xor	eax, eax
$LN7@createTest@2:
; Line 205
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@createTest@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN17@createTest@2:
	DD	1
	DD	$LN16@createTest@2
$LN16@createTest@2:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@createTest@2
$LN14@createTest@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z$0:
	mov	eax, DWORD PTR $T40313[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createTestData@RBTestDataModule@@UBEPAVTestData@@PBDAAW4UErrorCode@@@Z ENDP ; RBTestDataModule::createTestData
PUBLIC	??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:PROC
EXTRN	_ures_openDirect_56:PROC
;	COMDAT ??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@
CONST	SEGMENT
??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@ DB 'C'
	DB	00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, 'f', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'b', 00H, 'u'
	DB	00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, ':', 00H, ' ', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$2
__ehfuncinfo$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv157 = -484						; size = 4
tv164 = -480						; size = 4
tv155 = -476						; size = 4
tv161 = -472						; size = 4
tv153 = -468						; size = 4
tv158 = -464						; size = 4
$T33444 = -456						; size = 64
$T33445 = -384						; size = 64
$T33446 = -312						; size = 64
_icu_data$33440 = -48					; size = 4
_testBundle$33439 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bundleName$ = 8					; size = 4
_status$ = 12						; size = 4
?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z PROC ; RBTestDataModule::getTestBundle, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@getTestBun
; Line 214
	mov	DWORD PTR _testBundle$33439[ebp], 0
; Line 215
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _icu_data$33440[ebp], eax
; Line 216
	cmp	DWORD PTR _testBundle$33439[ebp], 0
	jne	$LN3@getTestBun
; Line 217
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundleName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _icu_data$33440[ebp]
	push	edx
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _testBundle$33439[ebp], eax
; Line 218
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN3@getTestBun
; Line 219
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _bundleName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T33445[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv158[ebp], eax
	mov	ecx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv153[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1FO@PHABEGHA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAd?$AAa?$AAt?$AAa?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAr?$AAe@
	push	1
	lea	ecx, DWORD PTR $T33444[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv161[ebp], eax
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv155[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv155[ebp]
	push	ecx
	lea	edx, DWORD PTR $T33446[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv164[ebp], eax
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33446[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T33444[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T33445[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
$LN3@getTestBun:
; Line 223
	mov	eax, DWORD PTR _testBundle$33439[ebp]
	jmp	SHORT $LN5@getTestBun
; Line 224
	jmp	SHORT $LN5@getTestBun
$LN4@getTestBun:
; Line 225
	xor	eax, eax
$LN5@getTestBun:
; Line 227
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33445[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33444[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T33446[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-488]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTestBundle@RBTestDataModule@@AAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ENDP ; RBTestDataModule::getTestBundle
END

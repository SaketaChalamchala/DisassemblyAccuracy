; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\ctestfw\ctest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_05OKLAGHKJ@?$FLALL?$FN?$AA@		; `string'
PUBLIC	_REPEAT_TESTS_INIT
PUBLIC	_REPEAT_TESTS
PUBLIC	_VERBOSITY
PUBLIC	_ERR_MSG
PUBLIC	_QUICK
PUBLIC	_WARN_ON_MISSING_DATA
PUBLIC	_ICU_TRACE
PUBLIC	_MINIMUM_MEMORY_SIZE_FAILURE
PUBLIC	_MAXIMUM_MEMORY_SIZE_FAILURE
PUBLIC	_XML_FILE
_BSS	SEGMENT
_ERRONEOUS_FUNCTION_COUNT DD 01H DUP (?)
_ERROR_COUNT DD	01H DUP (?)
_ONE_ERROR DD	01H DUP (?)
_DATA_ERROR_COUNT DD 01H DUP (?)
_INDENT_LEVEL DD 01H DUP (?)
_NO_KNOWN DB	01H DUP (?)
	ALIGN	4

_knownList DD	01H DUP (?)
_gTestName DB	0400H DUP (?)
_ON_LINE DB	01H DUP (?)
	ALIGN	4

_HANGING_OUTPUT DB 01H DUP (?)
	ALIGN	4

_GLOBAL_PRINT_COUNT DD 01H DUP (?)
_REPEAT_TESTS_INIT DD 01H DUP (?)
_VERBOSITY DD	01H DUP (?)
_WARN_ON_MISSING_DATA DD 01H DUP (?)
_XML_FILE_NAME DD 01H DUP (?)
_SUMMARY_FILE DD 01H DUP (?)
_XML_FILE DD	01H DUP (?)
_traceFnNestingDepth DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05OKLAGHKJ@?$FLALL?$FN?$AA@
CONST	SEGMENT
??_C@_05OKLAGHKJ@?$FLALL?$FN?$AA@ DB '[ALL]', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
_REPEAT_TESTS DD 01H
_ERR_MSG DD	01H
_QUICK	DD	01H
_ICU_TRACE DD	0ffffffffH
_MINIMUM_MEMORY_SIZE_FAILURE DD 0ffffffffH
_MAXIMUM_MEMORY_SIZE_FAILURE DD 0ffffffffH
_ARGV_0	DD	FLAT:??_C@_05OKLAGHKJ@?$FLALL?$FN?$AA@
_DATA	ENDS
PUBLIC	_cleanUpTestTree
EXTRN	__imp__free:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\ctestfw\ctest.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _cleanUpTestTree
_TEXT	SEGMENT
_tn$ = 8						; size = 4
_cleanUpTestTree PROC					; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 189
	mov	eax, DWORD PTR _tn$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@cleanUpTes
; Line 190
	mov	eax, DWORD PTR _tn$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_cleanUpTestTree
	add	esp, 4
$LN2@cleanUpTes:
; Line 192
	mov	eax, DWORD PTR _tn$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@cleanUpTes
; Line 193
	mov	eax, DWORD PTR _tn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_cleanUpTestTree
	add	esp, 4
$LN1@cleanUpTes:
; Line 196
	mov	esi, esp
	mov	eax, DWORD PTR _tn$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cleanUpTestTree ENDP
_TEXT	ENDS
PUBLIC	??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1??addTest@@9@9			; `addTest'::`2'::__LINE__Var
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_addTest
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'w', 00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'c', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'f', 00H, 'w'
	DB	00H, '\', 00H, 'c', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??addTest@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??addTest@@9@9 DD 0cdH			; `addTest'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addTest
_TEXT	SEGMENT
_newNode$ = -8						; size = 4
_root$ = 8						; size = 4
_test$ = 12						; size = 4
_name$ = 16						; size = 4
_addTest PROC						; COMDAT
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 209
	mov	eax, DWORD PTR _root$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@addTest
; Line 210
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	_createTestNode
	add	esp, 8
	mov	ecx, DWORD PTR _root$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@addTest:
; Line 212
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _root$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_addTestNode
	add	esp, 8
	mov	DWORD PTR _newNode$[ebp], eax
; Line 213
	cmp	DWORD PTR _newNode$[ebp], 0
	jne	SHORT $LN4@addTest
	mov	eax, DWORD PTR ?__LINE__Var@?1??addTest@@9@9
	add	eax, 8
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GC@DICOJOLO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BK@EGGGPDMA@?$AAn?$AAe?$AAw?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@addTest:
; Line 216
	mov	eax, DWORD PTR _newNode$[ebp]
	mov	ecx, DWORD PTR _test$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 217
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addTest ENDP
_TEXT	ENDS
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__malloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _createTestNode
_TEXT	SEGMENT
_newNode$ = -8						; size = 4
_name$ = 8						; size = 4
_nameLen$ = 12						; size = 4
_createTestNode PROC					; COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 174
	mov	eax, DWORD PTR _nameLen$[ebp]
	add	eax, 17					; 00000011H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _newNode$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _newNode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 177
	mov	eax, DWORD PTR _newNode$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 178
	mov	eax, DWORD PTR _newNode$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 180
	mov	esi, esp
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newNode$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 181
	mov	eax, DWORD PTR _newNode$[ebp]
	add	eax, DWORD PTR _nameLen$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 183
	mov	eax, DWORD PTR _newNode$[ebp]
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_createTestNode ENDP
_TEXT	ENDS
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _addTestNode
_TEXT	SEGMENT
_nameLen$ = -44						; size = 4
_curNode$ = -32						; size = 4
_nextNode$ = -20					; size = 4
_nextName$ = -8						; size = 4
_root$ = 8						; size = 4
_name$ = 12						; size = 4
_addTestNode PROC					; COMDAT
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 227
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN11@addTestNod
; Line 228
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, 1
	mov	DWORD PTR _name$[ebp], eax
$LN11@addTestNod:
; Line 230
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
$LN10@addTestNod:
; Line 235
	mov	eax, DWORD PTR _curNode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nextNode$[ebp], ecx
; Line 237
	lea	eax, DWORD PTR _nextName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nameLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_getNextLevel
	add	esp, 12					; 0000000cH
; Line 243
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN4@addTestNod
$LN7@addTestNod:
; Line 249
	lea	eax, DWORD PTR _nextName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nameLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_getNextLevel
	add	esp, 12					; 0000000cH
; Line 252
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_createTestNode
	add	esp, 8
	mov	edx, DWORD PTR _curNode$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 254
	mov	eax, DWORD PTR _curNode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curNode$[ebp], ecx
; Line 255
	mov	eax, DWORD PTR _nextName$[ebp]
	mov	DWORD PTR _name$[ebp], eax
; Line 257
	cmp	DWORD PTR _name$[ebp], 0
	jne	SHORT $LN7@addTestNod
; Line 259
	mov	eax, DWORD PTR _curNode$[ebp]
	jmp	SHORT $LN12@addTestNod
$LN4@addTestNod:
; Line 263
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nextNode$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strncmp_nullcheck
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@addTestNod
; Line 265
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
; Line 266
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nextNode$[ebp], ecx
; Line 268
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN2@addTestNod
; Line 271
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_createTestNode
	add	esp, 8
	mov	DWORD PTR _nextNode$[ebp], eax
; Line 272
	mov	eax, DWORD PTR _curNode$[ebp]
	mov	ecx, DWORD PTR _nextNode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 273
	jmp	SHORT $LN3@addTestNod
$LN2@addTestNod:
; Line 275
	jmp	SHORT $LN4@addTestNod
$LN3@addTestNod:
; Line 279
	cmp	DWORD PTR _nextName$[ebp], 0
	jne	SHORT $LN1@addTestNod
; Line 281
	mov	eax, DWORD PTR _nextNode$[ebp]
	jmp	SHORT $LN12@addTestNod
$LN1@addTestNod:
; Line 285
	mov	eax, DWORD PTR _nextName$[ebp]
	mov	DWORD PTR _name$[ebp], eax
; Line 286
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
; Line 287
	jmp	$LN10@addTestNod
$LN12@addTestNod:
; Line 288
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@addTestNod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@addTestNod:
	DD	2
	DD	$LN16@addTestNod
$LN16@addTestNod:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN14@addTestNod
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN15@addTestNod
$LN15@addTestNod:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN14@addTestNod:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_addTestNode ENDP
_TEXT	ENDS
EXTRN	__imp__strncmp:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _strncmp_nullcheck
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
_n$ = 16						; size = 4
_strncmp_nullcheck PROC					; COMDAT
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 141
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, DWORD PTR _n$[ebp]
	jl	SHORT $LN2@strncmp_nu
	mov	eax, DWORD PTR _s2$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@strncmp_nu
; Line 142
	mov	eax, 3
	jmp	SHORT $LN3@strncmp_nu
; Line 144
	jmp	SHORT $LN3@strncmp_nu
$LN2@strncmp_nu:
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s1$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@strncmp_nu:
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_strncmp_nullcheck ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__strchr:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getNextLevel
_TEXT	SEGMENT
_n$9372 = -264						; size = 255
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_nameLen$ = 12						; size = 4
_nextName$ = 16						; size = 4
_getNextLevel PROC					; COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 154
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _nextName$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 156
	mov	eax, DWORD PTR _nextName$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@getNextLev
; Line 159
	mov	eax, DWORD PTR _nextName$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _name$[ebp]
	mov	edx, DWORD PTR _nameLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 160
	mov	eax, DWORD PTR _nextName$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _nextName$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _nameLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	lea	eax, DWORD PTR _n$9372[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	eax, DWORD PTR _nameLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR _n$9372[ebp+ecx], 0
; Line 165
	jmp	SHORT $LN3@getNextLev
$LN2@getNextLev:
; Line 166
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _nameLen$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@getNextLev:
; Line 168
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getNextLev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@getNextLev:
	DD	1
	DD	$LN6@getNextLev
$LN6@getNextLev:
	DD	-264					; fffffef8H
	DD	255					; 000000ffH
	DD	$LN5@getNextLev
$LN5@getNextLev:
	DB	110					; 0000006eH
	DB	0
_getNextLevel ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@	; `string'
PUBLIC	__real@4014000000000000
PUBLIC	??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@	; `string'
PUBLIC	__real@408c200000000000
PUBLIC	??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@	; `string'
PUBLIC	__real@4097700000000000
PUBLIC	??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@ ; `string'
PUBLIC	__real@408f400000000000
PUBLIC	__real@40ed4c0000000000
PUBLIC	__real@40fadb0000000000
PUBLIC	_str_timeDelta
EXTRN	__imp__sprintf:PROC
EXTRN	_uprv_floor_56:PROC
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@
CONST	SEGMENT
??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@ DB ' (%.0fms) ', 00H ; `string'
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT ??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@
CONST	SEGMENT
??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@ DB '( %.2fs )', 00H ; `string'
CONST	ENDS
;	COMDAT __real@408c200000000000
CONST	SEGMENT
__real@408c200000000000 DQ 0408c200000000000r	; 900
CONST	ENDS
;	COMDAT ??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@
CONST	SEGMENT
??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@ DB '((%.1fs))', 00H ; `string'
CONST	ENDS
;	COMDAT __real@4097700000000000
CONST	SEGMENT
__real@4097700000000000 DQ 04097700000000000r	; 1500
CONST	ENDS
;	COMDAT ??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@
CONST	SEGMENT
??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@ DB '[(%.0fm '
	DB	'%.1fs)]', 00H				; `string'
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40ed4c0000000000
CONST	SEGMENT
__real@40ed4c0000000000 DQ 040ed4c0000000000r	; 60000
CONST	ENDS
;	COMDAT __real@40fadb0000000000
CONST	SEGMENT
__real@40fadb0000000000 DQ 040fadb0000000000r	; 110000
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _str_timeDelta
_TEXT	SEGMENT
_mins$9441 = -12					; size = 8
_str$ = 8						; size = 4
_deltaTime$ = 12					; size = 8
_str_timeDelta PROC					; COMDAT
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 295
	fld	QWORD PTR __real@40fadb0000000000
	fcomp	QWORD PTR _deltaTime$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN8@str_timeDe
; Line 296
	fld	QWORD PTR _deltaTime$[ebp]
	fdiv	QWORD PTR __real@40ed4c0000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _mins$9441[ebp]
; Line 297
	fld	QWORD PTR _mins$9441[ebp]
	fmul	QWORD PTR __real@40ed4c0000000000
	fsubr	QWORD PTR _deltaTime$[ebp]
	fdiv	QWORD PTR __real@408f400000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _mins$9441[ebp]
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_0BA@HKDGLKJE@?$FL?$CI?$CF?40fm?5?$CF?41fs?$CJ?$FN?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN1@str_timeDe
$LN8@str_timeDe:
; Line 298
	fld	QWORD PTR __real@4097700000000000
	fcomp	QWORD PTR _deltaTime$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN6@str_timeDe
; Line 299
	fld	QWORD PTR _deltaTime$[ebp]
	fdiv	QWORD PTR __real@408f400000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_09IEMGGBPG@?$CI?$CI?$CF?41fs?$CJ?$CJ?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@str_timeDe
$LN6@str_timeDe:
; Line 300
	fld	QWORD PTR __real@408c200000000000
	fcomp	QWORD PTR _deltaTime$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@str_timeDe
; Line 301
	fld	QWORD PTR _deltaTime$[ebp]
	fdiv	QWORD PTR __real@408f400000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_09LGFLIKMP@?$CI?5?$CF?42fs?5?$CJ?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@str_timeDe
$LN4@str_timeDe:
; Line 302
	fld	QWORD PTR __real@4014000000000000
	fcomp	QWORD PTR _deltaTime$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@str_timeDe
; Line 303
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _deltaTime$[ebp]
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_0L@KGAKJJDO@?5?$CI?$CF?40fms?$CJ?5?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 304
	jmp	SHORT $LN1@str_timeDe
$LN2@str_timeDe:
; Line 305
	mov	eax, DWORD PTR _str$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@str_timeDe:
; Line 307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_str_timeDelta ENDP
_TEXT	ENDS
PUBLIC	_log_err
PUBLIC	??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@ ; `string'
PUBLIC	_showTests
;	COMDAT ??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@
CONST	SEGMENT
??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@ DB 'TEST CAN''T BE FO'
	DB	'UND!', 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _showTests
_TEXT	SEGMENT
_nodeList$ = -2052					; size = 2048
_root$ = 8						; size = 4
_showTests PROC						; COMDAT
; Line 492
	push	ebp
	mov	ebp, esp
	sub	esp, 2248				; 000008c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2248]
	mov	ecx, 562				; 00000232H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 496
	cmp	DWORD PTR _root$[ebp], 0
	jne	SHORT $LN1@showTests
; Line 497
	push	OFFSET ??_C@_0BF@JGOJDOAC@TEST?5CAN?8T?5BE?5FOUND?$CB?$AA@
	call	_log_err
	add	esp, 4
$LN1@showTests:
; Line 499
	push	1
	lea	eax, DWORD PTR _nodeList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _root$[ebp]
	push	ecx
	call	_iterateTestsWithLevel
	add	esp, 16					; 00000010H
; Line 501
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@showTests
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 2248				; 000008c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@showTests:
	DD	1
	DD	$LN5@showTests
$LN5@showTests:
	DD	-2052					; fffff7fcH
	DD	2048					; 00000800H
	DD	$LN4@showTests
$LN4@showTests:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_showTests ENDP
_TEXT	ENDS
PUBLIC	??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@	; `string'
PUBLIC	??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@ ; `string'
PUBLIC	??_C@_06EOMHCNPI@errors?$AA@			; `string'
PUBLIC	??_C@_02MJBDPJEM@?$HN?5?$AA@			; `string'
PUBLIC	??_C@_02KCPFEJNG@?$HL?6?$AA@			; `string'
PUBLIC	??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@	; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@	; `string'
PUBLIC	??_C@_04KMMDIKEB@?5?$CFs?5?$AA@			; `string'
PUBLIC	??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@ ; `string'
PUBLIC	??_C@_03JMFMNIFM@?9?9?9?$AA@			; `string'
PUBLIC	??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@ ; `string'
PUBLIC	_ctest_xml_testcase
PUBLIC	??_C@_05KKCIMGE@error?$AA@			; `string'
PUBLIC	??_C@_02NJPGOMH@?$CFf?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@		; `string'
PUBLIC	??_C@_03IKGEINEE@?$CFs?5?$AA@			; `string'
PUBLIC	__real@bff0000000000000
PUBLIC	__$ArrayPad$
EXTRN	__imp__printf:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_uprv_getRawUTCtime_56:PROC
EXTRN	_memset:PROC
_BSS	SEGMENT
_ERROR_LOG DB	080000H DUP (?)
_currentTest DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@
CONST	SEGMENT
??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@ DB ' / (%s) ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@
CONST	SEGMENT
??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@ DB '[%d %s in %s'
	DB	'] ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOMHCNPI@errors?$AA@
CONST	SEGMENT
??_C@_06EOMHCNPI@errors?$AA@ DB 'errors', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MJBDPJEM@?$HN?5?$AA@
CONST	SEGMENT
??_C@_02MJBDPJEM@?$HN?5?$AA@ DB '} ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCPFEJNG@?$HL?6?$AA@
CONST	SEGMENT
??_C@_02KCPFEJNG@?$HL?6?$AA@ DB '{', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@
CONST	SEGMENT
??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@ DB '---%s%c', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@
CONST	SEGMENT
??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@ DB ' %*s[OK] ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KMMDIKEB@?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_04KMMDIKEB@?5?$CFs?5?$AA@ DB ' %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@
CONST	SEGMENT
??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@ DB '} %*s[OK] ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JMFMNIFM@?9?9?9?$AA@
CONST	SEGMENT
??_C@_03JMFMNIFM@?9?9?9?$AA@ DB '---', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@
CONST	SEGMENT
??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@ DB '}'
	DB	' ---[%d ERRORS in %s] ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KKCIMGE@error?$AA@
CONST	SEGMENT
??_C@_05KKCIMGE@error?$AA@ DB 'error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf?$AA@ DB '%f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@
CONST	SEGMENT
??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@ DB '(%s) ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGEINEE@?$CFs?5?$AA@
CONST	SEGMENT
??_C@_03IKGEINEE@?$CFs?5?$AA@ DB '%s ', 00H		; `string'
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _iterateTestsWithLevel
_TEXT	SEGMENT
tv226 = -1024						; size = 4
tv173 = -1024						; size = 4
_myGLOBAL_PRINT_COUNT$9517 = -824			; size = 4
_myERROR_COUNT$9516 = -812				; size = 4
_spaces$9509 = -800					; size = 4
_spaces$9503 = -788					; size = 4
_timeSeconds$9491 = -776				; size = 256
_timeDelta$9490 = -512					; size = 256
_stopTime$9489 = -248					; size = 8
_startTime$9488 = -232					; size = 8
_myGLOBAL_PRINT_COUNT$9487 = -216			; size = 4
_myERROR_COUNT$9486 = -204				; size = 4
_allStopTime$ = -192					; size = 8
_allStartTime$ = -176					; size = 8
_separatorString$ = -160				; size = 2
_pathToFunction$ = -148					; size = 128
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_root$ = 8						; size = 4
_depth$ = 12						; size = 4
_nodeList$ = 16						; size = 4
_mode$ = 20						; size = 4
_iterateTestsWithLevel PROC				; COMDAT
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 1024				; 00000400H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1024]
	mov	ecx, 256				; 00000100H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 332
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _pathToFunction$[ebp], al
	push	127					; 0000007fH
	push	0
	lea	eax, DWORD PTR _pathToFunction$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 333
	mov	BYTE PTR _separatorString$[ebp], 47	; 0000002fH
	mov	BYTE PTR _separatorString$[ebp+1], 0
; Line 335
	fld	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR _allStartTime$[ebp]
	fld	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR _allStopTime$[ebp]
; Line 338
	cmp	DWORD PTR _depth$[ebp], 2
	jge	SHORT $LN30@iterateTes
; Line 339
	call	_uprv_getRawUTCtime_56
	fstp	QWORD PTR _allStartTime$[ebp]
$LN30@iterateTes:
; Line 342
	cmp	DWORD PTR _root$[ebp], 0
	jne	SHORT $LN29@iterateTes
; Line 343
	jmp	$LN1@iterateTes
$LN29@iterateTes:
; Line 346
	mov	eax, DWORD PTR _depth$[ebp]
	mov	ecx, DWORD PTR _nodeList$[ebp]
	mov	edx, DWORD PTR _root$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _depth$[ebp]
	add	eax, 1
	mov	DWORD PTR _depth$[ebp], eax
; Line 350
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN28@iterateTes
$LN27@iterateTes:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN28@iterateTes:
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN26@iterateTes
; Line 352
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _nodeList$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	add	edx, 12					; 0000000cH
	push	edx
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 353
	lea	eax, DWORD PTR _separatorString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pathToFunction$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 354
	jmp	SHORT $LN27@iterateTes
$LN26@iterateTes:
; Line 355
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _nodeList$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	add	edx, 12					; 0000000cH
	push	edx
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 358
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 359
	mov	eax, DWORD PTR _root$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN25@iterateTes
; Line 360
	mov	eax, DWORD PTR _root$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_log_testinfo_i
	add	esp, 8
; Line 361
	jmp	SHORT $LN24@iterateTes
$LN25@iterateTes:
; Line 362
	mov	eax, DWORD PTR _ARGV_0
	push	eax
	push	OFFSET ??_C@_05HHHBCPMM@?$CI?$CFs?$CJ?5?$AA@
	call	_log_testinfo_i
	add	esp, 8
$LN24@iterateTes:
; Line 364
	mov	BYTE PTR _ON_LINE, 1
; Line 368
	cmp	DWORD PTR _mode$[ebp], 0
	jne	$LN23@iterateTes
	mov	eax, DWORD PTR _root$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN23@iterateTes
; Line 370
	mov	eax, DWORD PTR _ERROR_COUNT
	mov	DWORD PTR _myERROR_COUNT$9486[ebp], eax
; Line 371
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	mov	DWORD PTR _myGLOBAL_PRINT_COUNT$9487[ebp], eax
; Line 380
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _currentTest, eax
; Line 381
	mov	eax, DWORD PTR _depth$[ebp]
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 382
	mov	DWORD PTR _ONE_ERROR, 0
; Line 383
	mov	BYTE PTR _HANGING_OUTPUT, 0
; Line 385
	call	_uprv_getRawUTCtime_56
	fstp	QWORD PTR _startTime$9488[ebp]
; Line 387
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	push	OFFSET _gTestName
	call	_strcpy
	add	esp, 8
; Line 388
	mov	eax, DWORD PTR _root$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 390
	call	_uprv_getRawUTCtime_56
	fstp	QWORD PTR _stopTime$9489[ebp]
; Line 392
	movsx	eax, BYTE PTR _HANGING_OUTPUT
	test	eax, eax
	je	SHORT $LN22@iterateTes
; Line 393
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_log_testinfo
	add	esp, 4
; Line 394
	mov	BYTE PTR _HANGING_OUTPUT, 0
$LN22@iterateTes:
; Line 396
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 397
	mov	DWORD PTR _currentTest, 0
; Line 398
	cmp	DWORD PTR _ONE_ERROR, 0
	jle	SHORT $LN21@iterateTes
	cmp	DWORD PTR _ERROR_COUNT, 0
	jne	SHORT $LN21@iterateTes
; Line 399
	mov	eax, DWORD PTR _ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _ERROR_COUNT, eax
$LN21@iterateTes:
; Line 401
	mov	DWORD PTR _ONE_ERROR, 0
; Line 404
	fld	QWORD PTR _stopTime$9489[ebp]
	fsub	QWORD PTR _startTime$9488[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	eax, DWORD PTR _timeDelta$9490[ebp]
	push	eax
	call	_str_timeDelta
	add	esp, 12					; 0000000cH
; Line 405
	fld	QWORD PTR _stopTime$9489[ebp]
	fsub	QWORD PTR _startTime$9488[ebp]
	fdiv	QWORD PTR __real@408f400000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_02NJPGOMH@?$CFf?$AA@
	lea	eax, DWORD PTR _timeSeconds$9491[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 407
	mov	eax, DWORD PTR _myERROR_COUNT$9486[ebp]
	sub	eax, DWORD PTR _ERROR_COUNT
	neg	eax
	sbb	eax, eax
	and	eax, OFFSET ??_C@_05KKCIMGE@error?$AA@
	push	eax
	lea	ecx, DWORD PTR _timeSeconds$9491[ebp]
	push	ecx
	lea	edx, DWORD PTR _pathToFunction$[ebp]
	push	edx
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	call	_ctest_xml_testcase
	add	esp, 16					; 00000010H
; Line 409
	mov	eax, DWORD PTR _myERROR_COUNT$9486[ebp]
	cmp	eax, DWORD PTR _ERROR_COUNT
	je	SHORT $LN20@iterateTes
; Line 410
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ERROR_COUNT
	sub	ecx, DWORD PTR _myERROR_COUNT$9486[ebp]
	push	ecx
	push	OFFSET ??_C@_0BI@GFEKBBB@?$HN?5?9?9?9?$FL?$CFd?5ERRORS?5in?5?$CFs?$FN?5?$AA@
	call	_log_testinfo_i
	add	esp, 12					; 0000000cH
; Line 411
	mov	eax, DWORD PTR _ERRONEOUS_FUNCTION_COUNT
	shl	eax, 7
	add	eax, OFFSET _ERROR_LOG
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR _ERRONEOUS_FUNCTION_COUNT
	add	ecx, 1
	mov	DWORD PTR _ERRONEOUS_FUNCTION_COUNT, ecx
	lea	edx, DWORD PTR _pathToFunction$[ebp]
	push	edx
	mov	eax, DWORD PTR tv173[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 412
	jmp	$LN16@iterateTes
$LN20@iterateTes:
; Line 413
	movsx	eax, BYTE PTR _ON_LINE
	test	eax, eax
	jne	SHORT $LN18@iterateTes
; Line 414
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	ecx, 45					; 0000002dH
	sub	ecx, eax
	mov	DWORD PTR _spaces$9503[ebp], ecx
; Line 415
	push	OFFSET ??_C@_03JMFMNIFM@?9?9?9?$AA@
	mov	eax, DWORD PTR _spaces$9503[ebp]
	push	eax
	push	OFFSET ??_C@_0L@JCNMFACC@?$HN?5?$CF?$CKs?$FLOK?$FN?5?$AA@
	call	_log_testinfo_i
	add	esp, 12					; 0000000cH
; Line 416
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	sub	eax, DWORD PTR _myGLOBAL_PRINT_COUNT$9487[ebp]
	cmp	eax, 25					; 00000019H
	jle	SHORT $LN17@iterateTes
; Line 417
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	push	OFFSET ??_C@_04KMMDIKEB@?5?$CFs?5?$AA@
	call	_log_testinfo
	add	esp, 8
$LN17@iterateTes:
; Line 419
	jmp	SHORT $LN16@iterateTes
$LN18@iterateTes:
; Line 421
	mov	eax, DWORD PTR _root$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _depth$[ebp]
	mov	ecx, 45					; 0000002dH
	sub	ecx, eax
	mov	DWORD PTR _spaces$9509[ebp], ecx
; Line 422
	jns	SHORT $LN15@iterateTes
	mov	DWORD PTR _spaces$9509[ebp], 0
$LN15@iterateTes:
; Line 423
	push	OFFSET ??_C@_03JMFMNIFM@?9?9?9?$AA@
	mov	eax, DWORD PTR _spaces$9509[ebp]
	push	eax
	push	OFFSET ??_C@_09CPGHJGEM@?5?$CF?$CKs?$FLOK?$FN?5?$AA@
	call	_log_testinfo
	add	esp, 12					; 0000000cH
$LN16@iterateTes:
; Line 428
	movsx	eax, BYTE PTR _timeDelta$9490[ebp]
	test	eax, eax
	je	SHORT $LN14@iterateTes
	mov	esi, esp
	lea	eax, DWORD PTR _timeDelta$9490[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@iterateTes:
; Line 431
	mov	BYTE PTR _ON_LINE, 1
$LN23@iterateTes:
; Line 434
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 437
	cmp	DWORD PTR _mode$[ebp], 1
	jne	SHORT $LN13@iterateTes
; Line 438
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _nodeList$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx]
	neg	eax
	sbb	eax, eax
	and	eax, -15				; fffffff1H
	add	eax, 47					; 0000002fH
	push	eax
	lea	ecx, DWORD PTR _pathToFunction$[ebp]
	push	ecx
	push	OFFSET ??_C@_08GINAGNBL@?9?9?9?$CFs?$CFc?6?$AA@
	call	_log_testinfo
	add	esp, 12					; 0000000cH
$LN13@iterateTes:
; Line 441
	mov	eax, DWORD PTR _depth$[ebp]
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 443
	mov	eax, DWORD PTR _root$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN10@iterateTes
; Line 444
	mov	eax, DWORD PTR _ERROR_COUNT
	mov	DWORD PTR _myERROR_COUNT$9516[ebp], eax
; Line 445
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	mov	DWORD PTR _myGLOBAL_PRINT_COUNT$9517[ebp], eax
; Line 446
	cmp	DWORD PTR _mode$[ebp], 1
	je	SHORT $LN11@iterateTes
; Line 447
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 448
	push	OFFSET ??_C@_02KCPFEJNG@?$HL?6?$AA@
	call	_log_testinfo
	add	esp, 4
; Line 449
	mov	eax, DWORD PTR _depth$[ebp]
	mov	DWORD PTR _INDENT_LEVEL, eax
$LN11@iterateTes:
; Line 452
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nodeList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _depth$[ebp]
	push	edx
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_iterateTestsWithLevel
	add	esp, 16					; 00000010H
; Line 454
	cmp	DWORD PTR _mode$[ebp], 1
	je	$LN10@iterateTes
; Line 455
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _INDENT_LEVEL, eax
; Line 456
	push	OFFSET ??_C@_02MJBDPJEM@?$HN?5?$AA@
	call	_log_testinfo_i
	add	esp, 4
; Line 457
	cmp	DWORD PTR _depth$[ebp], 1
	jle	SHORT $LN9@iterateTes
	mov	eax, DWORD PTR _ERROR_COUNT
	cmp	eax, DWORD PTR _myERROR_COUNT$9516[ebp]
	jle	SHORT $LN9@iterateTes
; Line 458
	mov	eax, DWORD PTR _ERROR_COUNT
	sub	eax, DWORD PTR _myERROR_COUNT$9516[ebp]
	cmp	eax, 1
	jne	SHORT $LN33@iterateTes
	mov	DWORD PTR tv226[ebp], OFFSET ??_C@_05KKCIMGE@error?$AA@
	jmp	SHORT $LN34@iterateTes
$LN33@iterateTes:
	mov	DWORD PTR tv226[ebp], OFFSET ??_C@_06EOMHCNPI@errors?$AA@
$LN34@iterateTes:
	lea	ecx, DWORD PTR _pathToFunction$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv226[ebp]
	push	edx
	mov	eax, DWORD PTR _ERROR_COUNT
	sub	eax, DWORD PTR _myERROR_COUNT$9516[ebp]
	push	eax
	push	OFFSET ??_C@_0P@BNHDODKF@?$FL?$CFd?5?$CFs?5in?5?$CFs?$FN?5?$AA@
	call	_log_testinfo
	add	esp, 16					; 00000010H
	jmp	SHORT $LN4@iterateTes
$LN9@iterateTes:
; Line 459
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	sub	eax, DWORD PTR _myGLOBAL_PRINT_COUNT$9517[ebp]
	cmp	eax, 25					; 00000019H
	jg	SHORT $LN6@iterateTes
	cmp	DWORD PTR _depth$[ebp], 1
	jge	SHORT $LN4@iterateTes
$LN6@iterateTes:
; Line 460
	movsx	eax, BYTE PTR _pathToFunction$[ebp]
	test	eax, eax
	je	SHORT $LN5@iterateTes
; Line 461
	lea	eax, DWORD PTR _pathToFunction$[ebp]
	push	eax
	push	OFFSET ??_C@_04KMMDIKEB@?5?$CFs?5?$AA@
	call	_log_testinfo
	add	esp, 8
; Line 462
	jmp	SHORT $LN4@iterateTes
$LN5@iterateTes:
; Line 463
	mov	eax, DWORD PTR _ARGV_0
	push	eax
	push	OFFSET ??_C@_08ENKAFBAE@?5?1?5?$CI?$CFs?$CJ?5?$AA@
	call	_log_testinfo
	add	esp, 8
$LN4@iterateTes:
; Line 467
	mov	BYTE PTR _ON_LINE, 1
$LN10@iterateTes:
; Line 470
	mov	eax, DWORD PTR _depth$[ebp]
	sub	eax, 1
	mov	DWORD PTR _depth$[ebp], eax
; Line 473
	cmp	DWORD PTR _depth$[ebp], 2
	jge	SHORT $LN3@iterateTes
; Line 474
	call	_uprv_getRawUTCtime_56
	fstp	QWORD PTR _allStopTime$[ebp]
; Line 475
	fld	QWORD PTR _allStopTime$[ebp]
	fsub	QWORD PTR _allStartTime$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_print_timeDelta
	add	esp, 8
$LN3@iterateTes:
; Line 479
	cmp	DWORD PTR _mode$[ebp], 1
	je	SHORT $LN2@iterateTes
	movsx	eax, BYTE PTR _ON_LINE
	test	eax, eax
	je	SHORT $LN2@iterateTes
; Line 480
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_log_testinfo
	add	esp, 4
$LN2@iterateTes:
; Line 483
	cmp	DWORD PTR _depth$[ebp], 0
	je	SHORT $LN1@iterateTes
; Line 484
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nodeList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _depth$[ebp]
	push	edx
	mov	eax, DWORD PTR _root$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_iterateTestsWithLevel
	add	esp, 16					; 00000010H
$LN1@iterateTes:
; Line 486
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@iterateTes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1024				; 00000400H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN40@iterateTes:
	DD	4
	DD	$LN39@iterateTes
$LN39@iterateTes:
	DD	-148					; ffffff6cH
	DD	128					; 00000080H
	DD	$LN35@iterateTes
	DD	-160					; ffffff60H
	DD	2
	DD	$LN36@iterateTes
	DD	-512					; fffffe00H
	DD	256					; 00000100H
	DD	$LN37@iterateTes
	DD	-776					; fffffcf8H
	DD	256					; 00000100H
	DD	$LN38@iterateTes
$LN38@iterateTes:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN37@iterateTes:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN36@iterateTes:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN35@iterateTes:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	70					; 00000046H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_iterateTestsWithLevel ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _print_timeDelta
_TEXT	SEGMENT
_str$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
_deltaTime$ = 8						; size = 8
_print_timeDelta PROC					; COMDAT
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 311
	sub	esp, 8
	fld	QWORD PTR _deltaTime$[ebp]
	fstp	QWORD PTR [esp]
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_str_timeDelta
	add	esp, 12					; 0000000cH
; Line 312
	movsx	eax, BYTE PTR _str$[ebp]
	test	eax, eax
	je	SHORT $LN1@print_time
; Line 313
	mov	esi, esp
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@print_time:
; Line 315
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@print_time
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@print_time:
	DD	1
	DD	$LN5@print_time
$LN5@print_time:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN4@print_time
$LN4@print_time:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_print_timeDelta ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@ ; `string'
PUBLIC	??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@ ; `string'
PUBLIC	??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@		; `string'
PUBLIC	??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@		; `string'
PUBLIC	??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@ ; `string'
PUBLIC	??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@		; `string'
PUBLIC	??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@ ; `string'
PUBLIC	??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@ ; `string'
PUBLIC	_runTests
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fflush:PROC
EXTRN	_udbg_knownIssue_close:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_udbg_knownIssue_print:PROC
;	COMDAT ??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@
CONST	SEGMENT
??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@ DB 09H, '*'
	DB	'WARNING* some data-loading errors were ignored by the -w opti'
	DB	'on.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@
CONST	SEGMENT
??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@ DB 09H, '*'
	DB	'Note* some errors are data-loading related. If the data used '
	DB	'is not the ', 0aH, 09H, 'stock ICU data (i.e some have been a'
	DB	'dded or removed), consider using', 0aH, 09H, 'the ''-w'' opti'
	DB	'on to turn these errors into warnings.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@
CONST	SEGMENT
??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@ DB 0aH, '[Al'
	DB	'l tests passed successfully...]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@
CONST	SEGMENT
??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@ DB '[%s]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@
CONST	SEGMENT
??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@ DB ' Errors in', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@
CONST	SEGMENT
??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@ DB '*'
	DB	'****** [Total error count:', 09H, '%d]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@
CONST	SEGMENT
??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@ DB 0aH, 'SUMMARY:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@
CONST	SEGMENT
??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@ DB '(To run'
	DB	' suppressed tests, use the -K option.) ', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@ DB 'TEST CAN''T BE '
	DB	'FOUND!', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _runTests
_TEXT	SEGMENT
_summf$9564 = -2076					; size = 4
_nodeList$ = -2064					; size = 2048
_i$ = -8						; size = 4
_root$ = 8						; size = 4
_runTests PROC						; COMDAT
; Line 505
	push	ebp
	mov	ebp, esp
	sub	esp, 2272				; 000008e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2272]
	mov	ecx, 568				; 00000238H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 511
	cmp	DWORD PTR _root$[ebp], 0
	jne	SHORT $LN16@runTests
; Line 512
	push	OFFSET ??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@
	call	_log_err
	add	esp, 4
$LN16@runTests:
; Line 514
	mov	DWORD PTR _ERROR_COUNT, 0
	mov	eax, DWORD PTR _ERROR_COUNT
	mov	DWORD PTR _ERRONEOUS_FUNCTION_COUNT, eax
; Line 515
	push	0
	lea	eax, DWORD PTR _nodeList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _root$[ebp]
	push	ecx
	call	_iterateTestsWithLevel
	add	esp, 16					; 00000010H
; Line 519
	mov	BYTE PTR _ON_LINE, 0
; Line 521
	cmp	DWORD PTR _knownList, 0
	je	SHORT $LN15@runTests
; Line 522
	mov	eax, DWORD PTR _knownList
	push	eax
	call	_udbg_knownIssue_print
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@runTests
; Line 523
	mov	esi, esp
	push	OFFSET ??_C@_0DB@CHHPMNNC@?$CITo?5run?5suppressed?5tests?0?5use?5th@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@runTests:
; Line 525
	mov	eax, DWORD PTR _knownList
	push	eax
	call	_udbg_knownIssue_close
	add	esp, 4
; Line 526
	mov	DWORD PTR _knownList, 0
$LN15@runTests:
; Line 529
	cmp	DWORD PTR _ERROR_COUNT, 0
	je	$LN13@runTests
; Line 531
	mov	esi, esp
	push	OFFSET ??_C@_0L@GILEGBOG@?6SUMMARY?3?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 532
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 533
	mov	esi, esp
	mov	eax, DWORD PTR _ERROR_COUNT
	push	eax
	push	OFFSET ??_C@_0CB@DMAFLBPA@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5?$FLTotal?5error?5count?3?7?$CFd?$FN?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 534
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 535
	mov	esi, esp
	push	OFFSET ??_C@_0M@NHCOHMGE@?5Errors?5in?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 536
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@runTests
$LN11@runTests:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@runTests:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ERRONEOUS_FUNCTION_COUNT
	jge	SHORT $LN10@runTests
; Line 537
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 7
	add	eax, OFFSET _ERROR_LOG
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_05MGFEFMAH@?$FL?$CFs?$FN?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN11@runTests
$LN10@runTests:
; Line 538
	cmp	DWORD PTR _SUMMARY_FILE, 0
	je	$LN9@runTests
; Line 539
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _SUMMARY_FILE
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _summf$9564[ebp], eax
; Line 540
	cmp	DWORD PTR _summf$9564[ebp], 0
	je	SHORT $LN9@runTests
; Line 541
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@runTests
$LN6@runTests:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@runTests:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ERRONEOUS_FUNCTION_COUNT
	jge	SHORT $LN5@runTests
; Line 542
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 7
	add	eax, OFFSET _ERROR_LOG
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	mov	ecx, DWORD PTR _summf$9564[ebp]
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@runTests
$LN5@runTests:
; Line 543
	mov	esi, esp
	mov	eax, DWORD PTR _summf$9564[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@runTests:
; Line 547
	jmp	SHORT $LN4@runTests
$LN13@runTests:
; Line 549
	push	OFFSET ??_C@_0CF@DIHJIFPO@?6?$FLAll?5tests?5passed?5successfully?4@
	call	_log_testinfo
	add	esp, 4
$LN4@runTests:
; Line 552
	cmp	DWORD PTR _DATA_ERROR_COUNT, 0
	je	SHORT $LN17@runTests
; Line 553
	cmp	DWORD PTR _WARN_ON_MISSING_DATA, 0
	jne	SHORT $LN2@runTests
; Line 556
	push	OFFSET ??_C@_0MH@FFLCIJLN@?7?$CKNote?$CK?5some?5errors?5are?5data?9loa@
	call	_log_testinfo
	add	esp, 4
; Line 557
	jmp	SHORT $LN17@runTests
$LN2@runTests:
; Line 558
	push	OFFSET ??_C@_0EE@OICEBPGO@?7?$CKWARNING?$CK?5some?5data?9loading?5err@
	call	_log_testinfo
	add	esp, 4
$LN17@runTests:
; Line 561
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@runTests
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 2272				; 000008e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@runTests:
	DD	1
	DD	$LN20@runTests
$LN20@runTests:
	DD	-2064					; fffff7f0H
	DD	2048					; 00000800H
	DD	$LN19@runTests
$LN19@runTests:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_runTests ENDP
_TEXT	ENDS
PUBLIC	_getTestName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getTestName
_TEXT	SEGMENT
_getTestName PROC					; COMDAT
; Line 565
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 566
	cmp	DWORD PTR _currentTest, 0
	je	SHORT $LN2@getTestNam
; Line 567
	mov	eax, DWORD PTR _currentTest
	add	eax, 12					; 0000000cH
	jmp	SHORT $LN3@getTestNam
; Line 568
	jmp	SHORT $LN3@getTestNam
$LN2@getTestNam:
; Line 569
	xor	eax, eax
$LN3@getTestNam:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_getTestName ENDP
_TEXT	ENDS
PUBLIC	_getTest
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getTest
_TEXT	SEGMENT
_nameLen$ = -44						; size = 4
_curNode$ = -32						; size = 4
_nextNode$ = -20					; size = 4
_nextName$ = -8						; size = 4
_root$ = 8						; size = 4
_name$ = 12						; size = 4
_getTest PROC						; COMDAT
; Line 575
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 581
	cmp	DWORD PTR _root$[ebp], 0
	jne	SHORT $LN9@getTest
; Line 582
	push	OFFSET ??_C@_0BG@BEHHGAJI@TEST?5CAN?8T?5BE?5FOUND?$CB?6?$AA@
	call	_log_err
	add	esp, 4
; Line 583
	xor	eax, eax
	jmp	$LN10@getTest
$LN9@getTest:
; Line 586
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN8@getTest
; Line 587
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, 1
	mov	DWORD PTR _name$[ebp], eax
$LN8@getTest:
; Line 589
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
$LN7@getTest:
; Line 594
	mov	eax, DWORD PTR _curNode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nextNode$[ebp], ecx
; Line 596
	lea	eax, DWORD PTR _nextName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nameLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_getNextLevel
	add	esp, 12					; 0000000cH
; Line 602
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN4@getTest
; Line 604
	xor	eax, eax
	jmp	SHORT $LN10@getTest
$LN4@getTest:
; Line 608
	mov	eax, DWORD PTR _nameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nextNode$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_strncmp_nullcheck
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@getTest
; Line 610
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
; Line 611
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _nextNode$[ebp], ecx
; Line 613
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN2@getTest
; Line 616
	xor	eax, eax
	jmp	SHORT $LN10@getTest
$LN2@getTest:
; Line 618
	jmp	SHORT $LN4@getTest
$LN3@getTest:
; Line 622
	cmp	DWORD PTR _nextName$[ebp], 0
	jne	SHORT $LN1@getTest
; Line 624
	mov	eax, DWORD PTR _nextNode$[ebp]
	jmp	SHORT $LN10@getTest
$LN1@getTest:
; Line 628
	mov	eax, DWORD PTR _nextName$[ebp]
	mov	DWORD PTR _name$[ebp], eax
; Line 629
	mov	eax, DWORD PTR _nextNode$[ebp]
	mov	DWORD PTR _curNode$[ebp], eax
; Line 630
	jmp	SHORT $LN7@getTest
$LN10@getTest:
; Line 631
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@getTest
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@getTest:
	DD	2
	DD	$LN14@getTest
$LN14@getTest:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN12@getTest
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@getTest
$LN13@getTest:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN12@getTest:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_getTest ENDP
_TEXT	ENDS
PUBLIC	??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@		; `string'
PUBLIC	_vlog_info
EXTRN	__imp__vfprintf:PROC
EXTRN	__imp__fputs:PROC
;	COMDAT ??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@
CONST	SEGMENT
??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@ DB '%-*s', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _vlog_info
_TEXT	SEGMENT
_prefix$ = 8						; size = 4
_pattern$ = 12						; size = 4
_ap$ = 16						; size = 4
_vlog_info PROC						; COMDAT
; Line 721
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 722
	call	_first_line_info
; Line 723
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _INDENT_LEVEL
	push	eax
	push	OFFSET ??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 724
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN4@vlog_info
; Line 725
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@vlog_info:
; Line 727
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 728
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 729
	mov	DWORD PTR _ap$[ebp], 0
; Line 730
	mov	eax, DWORD PTR _pattern$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@vlog_info
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _pattern$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN3@vlog_info
$LN2@vlog_info:
; Line 731
	mov	BYTE PTR _HANGING_OUTPUT, 1
; Line 732
	jmp	SHORT $LN1@vlog_info
$LN3@vlog_info:
; Line 733
	mov	BYTE PTR _HANGING_OUTPUT, 0
$LN1@vlog_info:
; Line 735
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	add	eax, 1
	mov	DWORD PTR _GLOBAL_PRINT_COUNT, eax
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_vlog_info ENDP
_TEXT	ENDS
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _first_line_info
_TEXT	SEGMENT
_first_line_info PROC					; COMDAT
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 667
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	call	_go_offline_with_marker
	add	esp, 4
; Line 668
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_first_line_info ENDP
_TEXT	ENDS
PUBLIC	??_C@_03NMMCOAOG@?5?$HL?6?$AA@			; `string'
;	COMDAT ??_C@_03NMMCOAOG@?5?$HL?6?$AA@
CONST	SEGMENT
??_C@_03NMMCOAOG@?5?$HL?6?$AA@ DB ' {', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _go_offline_with_marker
_TEXT	SEGMENT
_wasON_LINE$ = -5					; size = 1
_mrk$ = 8						; size = 4
_go_offline_with_marker PROC				; COMDAT
; Line 635
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 636
	mov	al, BYTE PTR _ON_LINE
	mov	BYTE PTR _wasON_LINE$[ebp], al
; Line 638
	movsx	eax, BYTE PTR _ON_LINE
	test	eax, eax
	je	SHORT $LN4@go_offline
; Line 639
	push	OFFSET ??_C@_03NMMCOAOG@?5?$HL?6?$AA@
	call	_log_testinfo
	add	esp, 4
; Line 640
	mov	BYTE PTR _ON_LINE, 0
$LN4@go_offline:
; Line 643
	movsx	eax, BYTE PTR _HANGING_OUTPUT
	test	eax, eax
	je	SHORT $LN2@go_offline
	movsx	eax, BYTE PTR _wasON_LINE$[ebp]
	test	eax, eax
	je	SHORT $LN5@go_offline
$LN2@go_offline:
; Line 644
	cmp	DWORD PTR _mrk$[ebp], 0
	je	SHORT $LN5@go_offline
; Line 645
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _mrk$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@go_offline:
; Line 648
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_go_offline_with_marker ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _log_testinfo_i
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_testinfo_i PROC					; COMDAT
; Line 741
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 743
	call	_first_line_test
; Line 744
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _INDENT_LEVEL
	push	eax
	push	OFFSET ??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 745
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 746
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 747
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 748
	mov	DWORD PTR _ap$[ebp], 0
; Line 749
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	add	eax, 1
	mov	DWORD PTR _GLOBAL_PRINT_COUNT, eax
; Line 750
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_testinfo_i ENDP
_TEXT	ENDS
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _first_line_test
_TEXT	SEGMENT
_first_line_test PROC					; COMDAT
; Line 670
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 671
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_first_line_test ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _log_testinfo
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_testinfo PROC					; COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 757
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 758
	call	_first_line_test
; Line 759
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 760
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 761
	mov	DWORD PTR _ap$[ebp], 0
; Line 762
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	add	eax, 1
	mov	DWORD PTR _GLOBAL_PRINT_COUNT, eax
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_testinfo ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _log_err
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_err PROC						; COMDAT
; Line 789
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 791
	call	_first_line_err
; Line 792
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@log_err
; Line 797
	mov	eax, DWORD PTR _ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _ERROR_COUNT, eax
; Line 798
	jmp	SHORT $LN1@log_err
$LN2@log_err:
; Line 800
	mov	DWORD PTR _ONE_ERROR, 1
$LN1@log_err:
; Line 802
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 803
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_err
	add	esp, 12					; 0000000cH
; Line 804
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_err ENDP
_TEXT	ENDS
PUBLIC	??_C@_01DCLJPIOD@?$CB?$AA@			; `string'
;	COMDAT ??_C@_01DCLJPIOD@?$CB?$AA@
CONST	SEGMENT
??_C@_01DCLJPIOD@?$CB?$AA@ DB '!', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _first_line_err
_TEXT	SEGMENT
_first_line_err PROC					; COMDAT
; Line 662
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 663
	push	OFFSET ??_C@_01DCLJPIOD@?$CB?$AA@
	call	_go_offline_with_marker
	add	esp, 4
; Line 664
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_first_line_err ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _vlog_err
_TEXT	SEGMENT
_prefix$ = 8						; size = 4
_pattern$ = 12						; size = 4
_ap$ = 16						; size = 4
_vlog_err PROC						; COMDAT
; Line 676
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 677
	cmp	DWORD PTR _ERR_MSG, 0
	jne	SHORT $LN5@vlog_err
; Line 678
	jmp	$LN6@vlog_err
$LN5@vlog_err:
; Line 680
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_01DCLJPIOD@?$CB?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 681
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _INDENT_LEVEL
	push	eax
	push	OFFSET ??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 682
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN4@vlog_err
; Line 683
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@vlog_err:
; Line 685
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 686
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 687
	mov	DWORD PTR _ap$[ebp], 0
; Line 688
	mov	eax, DWORD PTR _pattern$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@vlog_err
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _pattern$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN3@vlog_err
$LN2@vlog_err:
; Line 689
	mov	BYTE PTR _HANGING_OUTPUT, 1
; Line 690
	jmp	SHORT $LN1@vlog_err
$LN3@vlog_err:
; Line 691
	mov	BYTE PTR _HANGING_OUTPUT, 0
$LN1@vlog_err:
; Line 693
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	add	eax, 1
	mov	DWORD PTR _GLOBAL_PRINT_COUNT, eax
$LN6@vlog_err:
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_vlog_err ENDP
_TEXT	ENDS
PUBLIC	_log_knownIssue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _log_knownIssue
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_ticket$ = 8						; size = 4
_pattern$ = 12						; size = 4
_log_knownIssue PROC					; COMDAT
; Line 807
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 809
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 810
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ticket$[ebp]
	push	edx
	call	_vlog_knownIssue
	add	esp, 12					; 0000000cH
; Line 811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_knownIssue ENDP
_TEXT	ENDS
PUBLIC	_log_verbose
PUBLIC	_log_info
PUBLIC	??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_udbg_knownIssue_open:PROC
EXTRN	__imp__vsprintf:PROC
;	COMDAT ??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@ DB '(Kno'
	DB	'wn issue #%s) %s', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _vlog_knownIssue
_TEXT	SEGMENT
_firstForWhere$ = -2077					; size = 1
_firstForTicket$ = -2065				; size = 1
_buf$ = -2056						; size = 2048
__$ArrayPad$ = -4					; size = 4
_ticket$ = 8						; size = 4
_pattern$ = 12						; size = 4
_ap$ = 16						; size = 4
_vlog_knownIssue PROC					; COMDAT
; Line 697
	push	ebp
	mov	ebp, esp
	sub	esp, 2276				; 000008e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2276]
	mov	ecx, 569				; 00000239H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 702
	movsx	eax, BYTE PTR _NO_KNOWN
	test	eax, eax
	je	SHORT $LN5@vlog_known
	xor	al, al
	jmp	$LN6@vlog_known
$LN5@vlog_known:
; Line 703
	cmp	DWORD PTR _pattern$[ebp], 0
	jne	SHORT $LN4@vlog_known
	mov	DWORD PTR _pattern$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@vlog_known:
; Line 705
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 707
	lea	eax, DWORD PTR _firstForWhere$[ebp]
	push	eax
	lea	ecx, DWORD PTR _firstForTicket$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	OFFSET _gTestName
	mov	eax, DWORD PTR _ticket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _knownList
	push	ecx
	call	_udbg_knownIssue_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _knownList, eax
; Line 709
	movsx	eax, BYTE PTR _firstForTicket$[ebp]
	test	eax, eax
	jne	SHORT $LN2@vlog_known
	movsx	eax, BYTE PTR _firstForWhere$[ebp]
	test	eax, eax
	je	SHORT $LN3@vlog_known
$LN2@vlog_known:
; Line 710
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ticket$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@
	call	_log_info
	add	esp, 12					; 0000000cH
; Line 711
	jmp	SHORT $LN1@vlog_known
$LN3@vlog_known:
; Line 712
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ticket$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BG@KFKHNIHI@?$CIKnown?5issue?5?$CD?$CFs?$CJ?5?$CFs?6?$AA@
	call	_log_verbose
	add	esp, 12					; 0000000cH
$LN1@vlog_known:
; Line 715
	mov	al, 1
$LN6@vlog_known:
; Line 716
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@vlog_known
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2276				; 000008e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@vlog_known:
	DD	3
	DD	$LN11@vlog_known
$LN11@vlog_known:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN8@vlog_known
	DD	-2065					; fffff7efH
	DD	1
	DD	$LN9@vlog_known
	DD	-2077					; fffff7e3H
	DD	1
	DD	$LN10@vlog_known
$LN10@vlog_known:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
$LN9@vlog_known:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN8@vlog_known:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_vlog_knownIssue ENDP
_TEXT	ENDS
PUBLIC	??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@		; `string'
PUBLIC	_log_err_status
;	COMDAT ??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@
CONST	SEGMENT
??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@ DB '[DATA] ', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _log_err_status
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_status$ = 8						; size = 4
_pattern$ = 12						; size = 4
_log_err_status PROC					; COMDAT
; Line 815
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 817
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 819
	cmp	DWORD PTR _status$[ebp], 4
	je	SHORT $LN8@log_err_st
	cmp	DWORD PTR _status$[ebp], 2
	jne	SHORT $LN9@log_err_st
$LN8@log_err_st:
; Line 820
	mov	eax, DWORD PTR _DATA_ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _DATA_ERROR_COUNT, eax
; Line 822
	cmp	DWORD PTR _WARN_ON_MISSING_DATA, 0
	jne	SHORT $LN7@log_err_st
; Line 823
	call	_first_line_err
; Line 825
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN6@log_err_st
; Line 826
	mov	eax, DWORD PTR _ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _ERROR_COUNT, eax
; Line 827
	jmp	SHORT $LN5@log_err_st
$LN6@log_err_st:
; Line 828
	mov	eax, DWORD PTR _ONE_ERROR
	add	eax, 1
	mov	DWORD PTR _ONE_ERROR, eax
$LN5@log_err_st:
; Line 830
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_err
	add	esp, 12					; 0000000cH
; Line 831
	jmp	SHORT $LN4@log_err_st
$LN7@log_err_st:
; Line 832
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	OFFSET ??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@
	call	_vlog_info
	add	esp, 12					; 0000000cH
$LN4@log_err_st:
; Line 834
	jmp	SHORT $LN10@log_err_st
$LN9@log_err_st:
; Line 835
	call	_first_line_err
; Line 837
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@log_err_st
; Line 838
	mov	eax, DWORD PTR _ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _ERROR_COUNT, eax
; Line 839
	jmp	SHORT $LN1@log_err_st
$LN2@log_err_st:
; Line 840
	mov	eax, DWORD PTR _ONE_ERROR
	add	eax, 1
	mov	DWORD PTR _ONE_ERROR, eax
$LN1@log_err_st:
; Line 842
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_err
	add	esp, 12					; 0000000cH
$LN10@log_err_st:
; Line 844
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_err_status ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _log_info
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_info PROC						; COMDAT
; Line 848
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 851
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 852
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_info
	add	esp, 12					; 0000000cH
; Line 853
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_info ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _log_verbose
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_verbose PROC					; COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 860
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 861
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_verbose
	add	esp, 12					; 0000000cH
; Line 862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_verbose ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _vlog_verbose
_TEXT	SEGMENT
_prefix$ = 8						; size = 4
_pattern$ = 12						; size = 4
_ap$ = 16						; size = 4
_vlog_verbose PROC					; COMDAT
; Line 767
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 768
	cmp	DWORD PTR _VERBOSITY, 0
	jne	SHORT $LN5@vlog_verbo
; Line 769
	jmp	$LN6@vlog_verbo
$LN5@vlog_verbo:
; Line 771
	call	_first_line_verbose
; Line 772
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _INDENT_LEVEL
	push	eax
	push	OFFSET ??_C@_04FDGMDGHG@?$CF?9?$CKs?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 773
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN4@vlog_verbo
; Line 774
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@vlog_verbo:
; Line 776
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 777
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 778
	mov	DWORD PTR _ap$[ebp], 0
; Line 779
	mov	eax, DWORD PTR _GLOBAL_PRINT_COUNT
	add	eax, 1
	mov	DWORD PTR _GLOBAL_PRINT_COUNT, eax
; Line 780
	mov	eax, DWORD PTR _pattern$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@vlog_verbo
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _pattern$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN3@vlog_verbo
$LN2@vlog_verbo:
; Line 781
	mov	BYTE PTR _HANGING_OUTPUT, 1
; Line 782
	jmp	SHORT $LN6@vlog_verbo
$LN3@vlog_verbo:
; Line 783
	mov	BYTE PTR _HANGING_OUTPUT, 0
$LN6@vlog_verbo:
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_vlog_verbose ENDP
_TEXT	ENDS
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _first_line_verbose
_TEXT	SEGMENT
_first_line_verbose PROC				; COMDAT
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 659
	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	call	_go_offline_with_marker
	add	esp, 4
; Line 660
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_first_line_verbose ENDP
_TEXT	ENDS
PUBLIC	_log_data_err
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _log_data_err
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_pattern$ = 8						; size = 4
_log_data_err PROC					; COMDAT
; Line 867
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 869
	lea	eax, DWORD PTR _pattern$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 871
	call	_go_offline_err
; Line 872
	mov	eax, DWORD PTR _DATA_ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _DATA_ERROR_COUNT, eax
; Line 874
	cmp	DWORD PTR _WARN_ON_MISSING_DATA, 0
	jne	SHORT $LN3@log_data_e
; Line 876
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@log_data_e
; Line 877
	mov	eax, DWORD PTR _ERROR_COUNT
	add	eax, 1
	mov	DWORD PTR _ERROR_COUNT, eax
$LN2@log_data_e:
; Line 879
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	0
	call	_vlog_err
	add	esp, 12					; 0000000cH
; Line 880
	jmp	SHORT $LN4@log_data_e
$LN3@log_data_e:
; Line 881
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	OFFSET ??_C@_07PJAKIILH@?$FLDATA?$FN?5?$AA@
	call	_vlog_info
	add	esp, 12					; 0000000cH
$LN4@log_data_e:
; Line 883
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_log_data_err ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _go_offline_err
_TEXT	SEGMENT
_go_offline_err PROC					; COMDAT
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 655
	call	_go_offline
; Line 656
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_go_offline_err ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _go_offline
_TEXT	SEGMENT
_go_offline PROC					; COMDAT
; Line 650
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 651
	push	0
	call	_go_offline_with_marker
	add	esp, 4
; Line 652
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_go_offline ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06LMIDBODK@?9?9help?$AA@			; `string'
PUBLIC	??_C@_02JNAPBCPB@?9h?$AA@			; `string'
PUBLIC	??_C@_05GHGIKFDG@?9t_oc?$AA@			; `string'
PUBLIC	??_C@_0L@LAOIPKIK@?9t_verbose?$AA@		; `string'
PUBLIC	??_C@_07HJDCEPKF@?9t_warn?$AA@			; `string'
PUBLIC	??_C@_08NDFAFKKJ@?9t_error?$AA@			; `string'
PUBLIC	??_C@_07PMLFEMPN@?9t_info?$AA@			; `string'
PUBLIC	_ctest_xml_setFileName
PUBLIC	??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@ ; `string'
PUBLIC	??_C@_02NHMNAAKA@?9x?$AA@			; `string'
PUBLIC	??_C@_02CNCCOICK@?9r?$AA@			; `string'
PUBLIC	??_C@_0M@CHADBAFI@?9no_err_msg?$AA@		; `string'
PUBLIC	??_C@_02MLFFLFHH@?9n?$AA@			; `string'
PUBLIC	??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@ ; `string'
PUBLIC	??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_02OAHIOGLE@?9m?$AA@			; `string'
PUBLIC	??_C@_02FAFFBMGP@?9w?$AA@			; `string'
PUBLIC	??_C@_02LNCFEIBO@?9E?$AA@			; `string'
PUBLIC	??_C@_02CDKGGFJA@?9K?$AA@			; `string'
PUBLIC	??_C@_02CIKBGMLM@?9e?$AA@			; `string'
PUBLIC	??_C@_03EKCFJHJ@?9e1?$AA@			; `string'
PUBLIC	??_C@_02PJGDNHPF@?9l?$AA@			; `string'
PUBLIC	??_C@_08FBJJFDKJ@?9verbose?$AA@			; `string'
PUBLIC	??_C@_02EJEOCNCO@?9v?$AA@			; `string'
PUBLIC	??_C@_04LJDGFNO@?9all?$AA@			; `string'
PUBLIC	??_C@_02EMMNKJLI@?9a?$AA@			; `string'
PUBLIC	_initArgs
EXTRN	_utrace_setLevel_56:PROC
EXTRN	_utrace_setFunctions_56:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_u_setMemoryFunctions_56:PROC
EXTRN	__imp__strtol:PROC
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@ DB '* unknown op'
	DB	'tion: %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMIDBODK@?9?9help?$AA@
CONST	SEGMENT
??_C@_06LMIDBODK@?9?9help?$AA@ DB '--help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JNAPBCPB@?9h?$AA@
CONST	SEGMENT
??_C@_02JNAPBCPB@?9h?$AA@ DB '-h', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GHGIKFDG@?9t_oc?$AA@
CONST	SEGMENT
??_C@_05GHGIKFDG@?9t_oc?$AA@ DB '-t_oc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LAOIPKIK@?9t_verbose?$AA@
CONST	SEGMENT
??_C@_0L@LAOIPKIK@?9t_verbose?$AA@ DB '-t_verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HJDCEPKF@?9t_warn?$AA@
CONST	SEGMENT
??_C@_07HJDCEPKF@?9t_warn?$AA@ DB '-t_warn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NDFAFKKJ@?9t_error?$AA@
CONST	SEGMENT
??_C@_08NDFAFKKJ@?9t_error?$AA@ DB '-t_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PMLFEMPN@?9t_info?$AA@
CONST	SEGMENT
??_C@_07PMLFEMPN@?9t_info?$AA@ DB '-t_info', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@
CONST	SEGMENT
??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@ DB '* Er'
	DB	'ror: ''-x'' option requires an argument. usage: ''-x outfile.'
	DB	'xml''.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02NHMNAAKA@?9x?$AA@
CONST	SEGMENT
??_C@_02NHMNAAKA@?9x?$AA@ DB '-x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CNCCOICK@?9r?$AA@
CONST	SEGMENT
??_C@_02CNCCOICK@?9r?$AA@ DB '-r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CHADBAFI@?9no_err_msg?$AA@
CONST	SEGMENT
??_C@_0M@CHADBAFI@?9no_err_msg?$AA@ DB '-no_err_msg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02MLFFLFHH@?9n?$AA@
CONST	SEGMENT
??_C@_02MLFFLFHH@?9n?$AA@ DB '-n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@
CONST	SEGMENT
??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@ DB 'u_setMemory'
	DB	'Functions returned %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@ DB 'Can''t parse %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02OAHIOGLE@?9m?$AA@
CONST	SEGMENT
??_C@_02OAHIOGLE@?9m?$AA@ DB '-m', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FAFFBMGP@?9w?$AA@
CONST	SEGMENT
??_C@_02FAFFBMGP@?9w?$AA@ DB '-w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LNCFEIBO@?9E?$AA@
CONST	SEGMENT
??_C@_02LNCFEIBO@?9E?$AA@ DB '-E', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CDKGGFJA@?9K?$AA@
CONST	SEGMENT
??_C@_02CDKGGFJA@?9K?$AA@ DB '-K', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CIKBGMLM@?9e?$AA@
CONST	SEGMENT
??_C@_02CIKBGMLM@?9e?$AA@ DB '-e', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EKCFJHJ@?9e1?$AA@
CONST	SEGMENT
??_C@_03EKCFJHJ@?9e1?$AA@ DB '-e1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PJGDNHPF@?9l?$AA@
CONST	SEGMENT
??_C@_02PJGDNHPF@?9l?$AA@ DB '-l', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBJJFDKJ@?9verbose?$AA@
CONST	SEGMENT
??_C@_08FBJJFDKJ@?9verbose?$AA@ DB '-verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02EJEOCNCO@?9v?$AA@
CONST	SEGMENT
??_C@_02EJEOCNCO@?9v?$AA@ DB '-v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJDGFNO@?9all?$AA@
CONST	SEGMENT
??_C@_04LJDGFNO@?9all?$AA@ DB '-all', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EMMNKJLI@?9a?$AA@
CONST	SEGMENT
??_C@_02EMMNKJLI@?9a?$AA@ DB '-a', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _initArgs
_TEXT	SEGMENT
_maxPtr$9904 = -56					; size = 4
_endPtr$9898 = -44					; size = 4
_errorCode$9896 = -32					; size = 4
_argSkip$ = -20						; size = 4
_i$ = -8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_argHandler$ = 16					; size = 4
_context$ = 20						; size = 4
_initArgs PROC						; COMDAT
; Line 945
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 947
	mov	DWORD PTR _argSkip$[ebp], 0
; Line 949
	mov	DWORD PTR _VERBOSITY, 0
; Line 950
	mov	DWORD PTR _ERR_MSG, 1
; Line 952
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ARGV_0, ecx
; Line 954
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN56@initArgs
$LN55@initArgs:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN56@initArgs:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	$LN54@initArgs
; Line 956
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN53@initArgs
; Line 959
	jmp	SHORT $LN55@initArgs
	jmp	$LN52@initArgs
$LN53@initArgs:
; Line 961
	push	OFFSET ??_C@_02EMMNKJLI@?9a?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN50@initArgs
	push	OFFSET ??_C@_04LJDGFNO@?9all?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN51@initArgs
$LN50@initArgs:
; Line 964
	jmp	SHORT $LN55@initArgs
	jmp	$LN52@initArgs
$LN51@initArgs:
; Line 966
	push	OFFSET ??_C@_02EJEOCNCO@?9v?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN47@initArgs
	push	OFFSET ??_C@_08FBJJFDKJ@?9verbose?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN48@initArgs
$LN47@initArgs:
; Line 968
	mov	DWORD PTR _VERBOSITY, 1
	jmp	$LN52@initArgs
$LN48@initArgs:
; Line 970
	push	OFFSET ??_C@_02PJGDNHPF@?9l?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN45@initArgs
	jmp	$LN52@initArgs
$LN45@initArgs:
; Line 974
	push	OFFSET ??_C@_03EKCFJHJ@?9e1?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN43@initArgs
; Line 976
	mov	DWORD PTR _QUICK, -1
	jmp	$LN52@initArgs
$LN43@initArgs:
; Line 978
	push	OFFSET ??_C@_02CIKBGMLM@?9e?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN41@initArgs
; Line 980
	mov	DWORD PTR _QUICK, 0
	jmp	$LN52@initArgs
$LN41@initArgs:
; Line 982
	push	OFFSET ??_C@_02CDKGGFJA@?9K?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN39@initArgs
; Line 984
	mov	BYTE PTR _NO_KNOWN, 1
	jmp	$LN52@initArgs
$LN39@initArgs:
; Line 986
	mov	esi, esp
	push	2
	push	OFFSET ??_C@_02LNCFEIBO@?9E?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN37@initArgs
; Line 988
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	add	edx, 2
	mov	DWORD PTR _SUMMARY_FILE, edx
	jmp	$LN52@initArgs
$LN37@initArgs:
; Line 990
	push	OFFSET ??_C@_02FAFFBMGP@?9w?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN35@initArgs
; Line 992
	mov	DWORD PTR _WARN_ON_MISSING_DATA, 1
	jmp	$LN52@initArgs
$LN35@initArgs:
; Line 994
	push	OFFSET ??_C@_02OAHIOGLE@?9m?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN33@initArgs
; Line 996
	mov	DWORD PTR _errorCode$9896[ebp], 0
; Line 997
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	$LN32@initArgs
; Line 998
	mov	DWORD PTR _endPtr$9898[ebp], 0
; Line 999
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1000
	mov	esi, esp
	push	10					; 0000000aH
	lea	eax, DWORD PTR _endPtr$9898[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	DWORD PTR __imp__strtol
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _MINIMUM_MEMORY_SIZE_FAILURE, eax
; Line 1001
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR _endPtr$9898[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jne	SHORT $LN31@initArgs
; Line 1002
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1003
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_help
	add	esp, 4
; Line 1004
	xor	eax, eax
	jmp	$LN57@initArgs
$LN31@initArgs:
; Line 1006
	mov	eax, DWORD PTR _endPtr$9898[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN32@initArgs
; Line 1007
	mov	eax, DWORD PTR _endPtr$9898[ebp]
	add	eax, 1
	mov	DWORD PTR _maxPtr$9904[ebp], eax
; Line 1008
	mov	DWORD PTR _endPtr$9898[ebp], 0
; Line 1009
	mov	esi, esp
	push	10					; 0000000aH
	lea	eax, DWORD PTR _endPtr$9898[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxPtr$9904[ebp]
	push	ecx
	call	DWORD PTR __imp__strtol
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _MAXIMUM_MEMORY_SIZE_FAILURE, eax
; Line 1010
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR _endPtr$9898[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jne	SHORT $LN32@initArgs
; Line 1011
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0BA@OLEEFGLH@Can?8t?5parse?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1012
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_help
	add	esp, 4
; Line 1013
	xor	eax, eax
	jmp	$LN57@initArgs
$LN32@initArgs:
; Line 1018
	lea	eax, DWORD PTR _errorCode$9896[ebp]
	push	eax
	push	OFFSET _ctest_libFree
	push	OFFSET _ctest_libRealloc
	push	OFFSET _ctest_libMalloc
	push	0
	call	_u_setMemoryFunctions_56
	add	esp, 20					; 00000014H
; Line 1019
	cmp	DWORD PTR _errorCode$9896[ebp], 0
	jle	SHORT $LN28@initArgs
; Line 1020
	mov	eax, DWORD PTR _errorCode$9896[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CC@EHEPPJKJ@u_setMemoryFunctions?5returned?5?$CFs@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1021
	xor	eax, eax
	jmp	$LN57@initArgs
$LN28@initArgs:
; Line 1022
	jmp	$LN52@initArgs
$LN33@initArgs:
; Line 1024
	push	OFFSET ??_C@_02MLFFLFHH@?9n?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@initArgs
	push	OFFSET ??_C@_0M@CHADBAFI@?9no_err_msg?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN26@initArgs
$LN25@initArgs:
; Line 1026
	mov	DWORD PTR _ERR_MSG, 0
	jmp	$LN52@initArgs
$LN26@initArgs:
; Line 1028
	push	OFFSET ??_C@_02CNCCOICK@?9r?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN23@initArgs
; Line 1030
	cmp	DWORD PTR _REPEAT_TESTS_INIT, 0
	jne	SHORT $LN22@initArgs
; Line 1031
	mov	eax, DWORD PTR _REPEAT_TESTS
	add	eax, 1
	mov	DWORD PTR _REPEAT_TESTS, eax
$LN22@initArgs:
; Line 1032
	jmp	$LN52@initArgs
$LN23@initArgs:
; Line 1034
	push	OFFSET ??_C@_02NHMNAAKA@?9x?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@initArgs
; Line 1036
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _argc$[ebp]
	jl	SHORT $LN19@initArgs
; Line 1037
	mov	esi, esp
	push	OFFSET ??_C@_0EF@IMCGMIKN@?$CK?5Error?3?5?8?9x?8?5option?5requires?5an@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1038
	xor	eax, eax
	jmp	$LN57@initArgs
$LN19@initArgs:
; Line 1040
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_ctest_xml_setFileName
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@initArgs
; Line 1041
	xor	eax, eax
	jmp	$LN57@initArgs
$LN18@initArgs:
; Line 1042
	jmp	$LN52@initArgs
$LN20@initArgs:
; Line 1044
	push	OFFSET ??_C@_07PMLFEMPN@?9t_info?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@initArgs
; Line 1045
	mov	DWORD PTR _ICU_TRACE, 7
	jmp	$LN52@initArgs
$LN16@initArgs:
; Line 1047
	push	OFFSET ??_C@_08NDFAFKKJ@?9t_error?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@initArgs
; Line 1048
	mov	DWORD PTR _ICU_TRACE, 0
	jmp	$LN52@initArgs
$LN14@initArgs:
; Line 1050
	push	OFFSET ??_C@_07HJDCEPKF@?9t_warn?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@initArgs
; Line 1051
	mov	DWORD PTR _ICU_TRACE, 3
	jmp	$LN52@initArgs
$LN12@initArgs:
; Line 1053
	push	OFFSET ??_C@_0L@LAOIPKIK@?9t_verbose?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@initArgs
; Line 1054
	mov	DWORD PTR _ICU_TRACE, 9
	jmp	$LN52@initArgs
$LN10@initArgs:
; Line 1056
	push	OFFSET ??_C@_05GHGIKFDG@?9t_oc?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@initArgs
; Line 1057
	mov	DWORD PTR _ICU_TRACE, 5
	jmp	$LN52@initArgs
$LN8@initArgs:
; Line 1059
	push	OFFSET ??_C@_02JNAPBCPB@?9h?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@initArgs
	push	OFFSET ??_C@_06LMIDBODK@?9?9help?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@initArgs
$LN5@initArgs:
; Line 1061
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_help
	add	esp, 4
; Line 1062
	xor	eax, eax
	jmp	$LN57@initArgs
	jmp	SHORT $LN52@initArgs
$LN6@initArgs:
; Line 1064
	cmp	DWORD PTR _argHandler$[ebp], 0
	je	SHORT $LN3@initArgs
	mov	esi, esp
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _argc$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	DWORD PTR _argHandler$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _argSkip$[ebp], eax
	cmp	DWORD PTR _argSkip$[ebp], 0
	jle	SHORT $LN3@initArgs
; Line 1066
	mov	eax, DWORD PTR _argSkip$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _i$[ebp], edx
; Line 1068
	jmp	SHORT $LN52@initArgs
$LN3@initArgs:
; Line 1070
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0BG@BEGIPHIA@?$CK?5unknown?5option?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1071
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_help
	add	esp, 4
; Line 1072
	xor	eax, eax
	jmp	SHORT $LN57@initArgs
$LN52@initArgs:
; Line 1074
	jmp	$LN55@initArgs
$LN54@initArgs:
; Line 1075
	cmp	DWORD PTR _ICU_TRACE, -1
	je	SHORT $LN1@initArgs
; Line 1076
	push	OFFSET _TraceData
	push	OFFSET _TraceExit
	push	OFFSET _TraceEntry
	push	0
	call	_utrace_setFunctions_56
	add	esp, 16					; 00000010H
; Line 1077
	mov	eax, DWORD PTR _ICU_TRACE
	push	eax
	call	_utrace_setLevel_56
	add	esp, 4
$LN1@initArgs:
; Line 1080
	mov	eax, 1
$LN57@initArgs:
; Line 1081
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@initArgs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN62@initArgs:
	DD	2
	DD	$LN61@initArgs
$LN61@initArgs:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN59@initArgs
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN60@initArgs
$LN60@initArgs:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN59@initArgs:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_initArgs ENDP
_TEXT	ENDS
PUBLIC	??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	_utrace_format_56:PROC
EXTRN	_utrace_functionName_56:PROC
;	COMDAT ??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@
CONST	SEGMENT
??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@ DB '%s() enter.', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _TraceEntry
_TEXT	SEGMENT
_buf$ = -508						; size = 500
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_fnNumber$ = 12						; size = 4
_TraceEntry PROC					; COMDAT
; Line 891
	push	ebp
	mov	ebp, esp
	sub	esp, 704				; 000002c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-704]
	mov	ecx, 176				; 000000b0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 893
	mov	eax, DWORD PTR _fnNumber$[ebp]
	push	eax
	call	_utrace_functionName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0N@ILABBDEO@?$CFs?$CI?$CJ?5enter?4?6?$AA@
	mov	ecx, DWORD PTR _traceFnNestingDepth
	imul	ecx, 3
	push	ecx
	push	500					; 000001f4H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_utrace_format_56
	add	esp, 20					; 00000014H
	mov	BYTE PTR _buf$[ebp+499], 0
; Line 894
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 895
	mov	eax, DWORD PTR _traceFnNestingDepth
	add	eax, 1
	mov	DWORD PTR _traceFnNestingDepth, eax
; Line 896
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@TraceEntry
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 704				; 000002c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@TraceEntry:
	DD	1
	DD	$LN4@TraceEntry
$LN4@TraceEntry:
	DD	-508					; fffffe04H
	DD	500					; 000001f4H
	DD	$LN3@TraceEntry
$LN3@TraceEntry:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TraceEntry ENDP
_TEXT	ENDS
PUBLIC	??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__putc:PROC
EXTRN	_utrace_vformat_56:PROC
;	COMDAT ??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@
CONST	SEGMENT
??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@ DB '%s() ', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _TraceExit
_TEXT	SEGMENT
_buf$ = -508						; size = 500
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_fnNumber$ = 12						; size = 4
_fmt$ = 16						; size = 4
_args$ = 20						; size = 4
_TraceExit PROC						; COMDAT
; Line 898
	push	ebp
	mov	ebp, esp
	sub	esp, 704				; 000002c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-704]
	mov	ecx, 176				; 000000b0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 900
	cmp	DWORD PTR _traceFnNestingDepth, 0
	jle	SHORT $LN1@TraceExit
; Line 901
	mov	eax, DWORD PTR _traceFnNestingDepth
	sub	eax, 1
	mov	DWORD PTR _traceFnNestingDepth, eax
$LN1@TraceExit:
; Line 903
	mov	eax, DWORD PTR _fnNumber$[ebp]
	push	eax
	call	_utrace_functionName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05GALAIONK@?$CFs?$CI?$CJ?5?$AA@
	mov	ecx, DWORD PTR _traceFnNestingDepth
	imul	ecx, 3
	push	ecx
	push	500					; 000001f4H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_utrace_format_56
	add	esp, 20					; 00000014H
	mov	BYTE PTR _buf$[ebp+499], 0
; Line 904
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 905
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _traceFnNestingDepth
	imul	edx, 3
	push	edx
	push	500					; 000001f4H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_utrace_vformat_56
	add	esp, 20					; 00000014H
; Line 906
	mov	BYTE PTR _buf$[ebp+499], 0
; Line 907
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 908
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 909
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@TraceExit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 704				; 000002c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@TraceExit:
	DD	1
	DD	$LN5@TraceExit
$LN5@TraceExit:
	DD	-508					; fffffe04H
	DD	500					; 000001f4H
	DD	$LN4@TraceExit
$LN4@TraceExit:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TraceExit ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TraceData
_TEXT	SEGMENT
_buf$ = -508						; size = 500
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_fnNumber$ = 12						; size = 4
_level$ = 16						; size = 4
_fmt$ = 20						; size = 4
_args$ = 24						; size = 4
_TraceData PROC						; COMDAT
; Line 912
	push	ebp
	mov	ebp, esp
	sub	esp, 704				; 000002c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-704]
	mov	ecx, 176				; 000000b0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 914
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _traceFnNestingDepth
	imul	edx, 3
	push	edx
	push	500					; 000001f4H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_utrace_vformat_56
	add	esp, 20					; 00000014H
; Line 915
	mov	BYTE PTR _buf$[ebp+499], 0
; Line 916
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 917
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__putc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 918
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@TraceData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 704				; 000002c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@TraceData:
	DD	1
	DD	$LN4@TraceData
$LN4@TraceData:
	DD	-508					; fffffe04H
	DD	500					; 000001f4H
	DD	$LN3@TraceData
$LN3@TraceData:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TraceData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ctest_libMalloc
_TEXT	SEGMENT
_context$ = 8						; size = 4
_size$ = 12						; size = 4
_ctest_libMalloc PROC					; COMDAT
; Line 920
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 924
	mov	eax, DWORD PTR _MINIMUM_MEMORY_SIZE_FAILURE
	cmp	eax, DWORD PTR _size$[ebp]
	ja	SHORT $LN1@ctest_libM
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR _MAXIMUM_MEMORY_SIZE_FAILURE
	ja	SHORT $LN1@ctest_libM
; Line 925
	xor	eax, eax
	jmp	SHORT $LN2@ctest_libM
$LN1@ctest_libM:
; Line 927
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ctest_libM:
; Line 928
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_libMalloc ENDP
_TEXT	ENDS
EXTRN	__imp__realloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ctest_libRealloc
_TEXT	SEGMENT
_context$ = 8						; size = 4
_mem$ = 12						; size = 4
_size$ = 16						; size = 4
_ctest_libRealloc PROC					; COMDAT
; Line 929
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 933
	mov	eax, DWORD PTR _MINIMUM_MEMORY_SIZE_FAILURE
	cmp	eax, DWORD PTR _size$[ebp]
	ja	SHORT $LN1@ctest_libR
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR _MAXIMUM_MEMORY_SIZE_FAILURE
	ja	SHORT $LN1@ctest_libR
; Line 935
	xor	eax, eax
	jmp	SHORT $LN2@ctest_libR
$LN1@ctest_libR:
; Line 937
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	DWORD PTR __imp__realloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ctest_libR:
; Line 938
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_libRealloc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ctest_libFree
_TEXT	SEGMENT
_context$ = 8						; size = 4
_mem$ = 12						; size = 4
_ctest_libFree PROC					; COMDAT
; Line 939
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 940
	mov	esi, esp
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_libFree ENDP
_TEXT	ENDS
PUBLIC	_ctest_xml_fini
PUBLIC	??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@ ; `string'
PUBLIC	??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	_ctest_xml_init
PUBLIC	_runTestRequest
;	COMDAT ??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@ DB ' Total errors: %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@
CONST	SEGMENT
??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@ DB '* Could'
	DB	' not find any matching subtree', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@ DB 'Selecting sub'
	DB	'tree ''%s''', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _runTestRequest
_TEXT	SEGMENT
_errorCount$ = -56					; size = 4
_subtreeOptionSeen$ = -44				; size = 4
_doList$ = -32						; size = 4
_i$ = -20						; size = 4
_toRun$ = -8						; size = 4
_root$ = 8						; size = 4
_argc$ = 12						; size = 4
_argv$ = 16						; size = 4
_runTestRequest PROC					; COMDAT
; Line 1087
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1093
	mov	DWORD PTR _doList$[ebp], 0
; Line 1094
	mov	DWORD PTR _subtreeOptionSeen$[ebp], 0
; Line 1096
	mov	DWORD PTR _errorCount$[ebp], 0
; Line 1098
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _toRun$[ebp], eax
; Line 1100
	mov	eax, DWORD PTR _ARGV_0
	push	eax
	call	_ctest_xml_init
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@runTestReq
; Line 1101
	mov	eax, 1
	jmp	$LN22@runTestReq
$LN21@runTestReq:
; Line 1104
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN20@runTestReq
$LN19@runTestReq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN20@runTestReq:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	$LN18@runTestReq
; Line 1106
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	$LN17@runTestReq
; Line 1108
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0BI@FNIHCHFH@Selecting?5subtree?5?8?$CFs?8?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1110
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	movsx	eax, BYTE PTR [edx+1]
	test	eax, eax
	jne	SHORT $LN16@runTestReq
; Line 1111
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _toRun$[ebp], eax
; Line 1112
	jmp	SHORT $LN15@runTestReq
$LN16@runTestReq:
; Line 1113
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _root$[ebp]
	push	eax
	call	_getTest
	add	esp, 8
	mov	DWORD PTR _toRun$[ebp], eax
$LN15@runTestReq:
; Line 1115
	cmp	DWORD PTR _toRun$[ebp], 0
	jne	SHORT $LN14@runTestReq
; Line 1117
	mov	esi, esp
	push	OFFSET ??_C@_0CH@GBFFJDEP@?$CK?5Could?5not?5find?5any?5matching?5su@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1118
	or	eax, -1
	jmp	$LN22@runTestReq
$LN14@runTestReq:
; Line 1121
	mov	BYTE PTR _ON_LINE, 0
; Line 1123
	cmp	DWORD PTR _doList$[ebp], 1
	jne	SHORT $LN13@runTestReq
; Line 1124
	mov	eax, DWORD PTR _toRun$[ebp]
	push	eax
	call	_showTests
	add	esp, 4
; Line 1125
	jmp	SHORT $LN12@runTestReq
$LN13@runTestReq:
; Line 1126
	mov	eax, DWORD PTR _toRun$[ebp]
	push	eax
	call	_runTests
	add	esp, 4
$LN12@runTestReq:
; Line 1128
	mov	BYTE PTR _ON_LINE, 0
; Line 1130
	mov	eax, DWORD PTR _errorCount$[ebp]
	add	eax, DWORD PTR _ERROR_COUNT
	mov	DWORD PTR _errorCount$[ebp], eax
; Line 1132
	mov	DWORD PTR _subtreeOptionSeen$[ebp], 1
	jmp	SHORT $LN11@runTestReq
$LN17@runTestReq:
; Line 1133
	push	OFFSET ??_C@_02EMMNKJLI@?9a?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@runTestReq
	push	OFFSET ??_C@_04LJDGFNO@?9all?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@runTestReq
$LN9@runTestReq:
; Line 1134
	mov	DWORD PTR _subtreeOptionSeen$[ebp], 0
	jmp	SHORT $LN11@runTestReq
$LN10@runTestReq:
; Line 1135
	push	OFFSET ??_C@_02PJGDNHPF@?9l?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@runTestReq
; Line 1136
	mov	DWORD PTR _doList$[ebp], 1
$LN11@runTestReq:
; Line 1139
	jmp	$LN19@runTestReq
$LN18@runTestReq:
; Line 1141
	cmp	DWORD PTR _subtreeOptionSeen$[ebp], 0
	jne	SHORT $LN6@runTestReq
; Line 1143
	mov	BYTE PTR _ON_LINE, 0
; Line 1144
	cmp	DWORD PTR _doList$[ebp], 1
	jne	SHORT $LN5@runTestReq
; Line 1145
	mov	eax, DWORD PTR _toRun$[ebp]
	push	eax
	call	_showTests
	add	esp, 4
; Line 1146
	jmp	SHORT $LN4@runTestReq
$LN5@runTestReq:
; Line 1147
	mov	eax, DWORD PTR _toRun$[ebp]
	push	eax
	call	_runTests
	add	esp, 4
$LN4@runTestReq:
; Line 1148
	mov	BYTE PTR _ON_LINE, 0
; Line 1150
	mov	eax, DWORD PTR _errorCount$[ebp]
	add	eax, DWORD PTR _ERROR_COUNT
	mov	DWORD PTR _errorCount$[ebp], eax
; Line 1152
	jmp	SHORT $LN3@runTestReq
$LN6@runTestReq:
; Line 1154
	cmp	DWORD PTR _doList$[ebp], 0
	jne	SHORT $LN3@runTestReq
	cmp	DWORD PTR _errorCount$[ebp], 0
	jle	SHORT $LN3@runTestReq
; Line 1155
	mov	esi, esp
	mov	eax, DWORD PTR _errorCount$[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@NOIHIDFB@?5Total?5errors?3?5?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@runTestReq:
; Line 1158
	mov	DWORD PTR _REPEAT_TESTS_INIT, 1
; Line 1160
	call	_ctest_xml_fini
	test	eax, eax
	je	SHORT $LN1@runTestReq
; Line 1161
	mov	eax, DWORD PTR _errorCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _errorCount$[ebp], eax
$LN1@runTestReq:
; Line 1164
	mov	eax, DWORD PTR _errorCount$[ebp]
$LN22@runTestReq:
; Line 1165
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_runTestRequest ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@ ; `string'
PUBLIC	??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@ ; `string'
PUBLIC	??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@ ; `string'
PUBLIC	??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@ ; `string'
PUBLIC	??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@ ; `string'
PUBLIC	??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@ ; `string'
PUBLIC	??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@ ; `string'
PUBLIC	??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@ ; `string'
PUBLIC	??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@ ; `string'
PUBLIC	??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@ ; `string'
PUBLIC	??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@ ; `string'
PUBLIC	??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@ ; `string'
PUBLIC	??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@ ; `string'
PUBLIC	??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@ ; `string'
PUBLIC	??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@ ; `string'
PUBLIC	??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@ ; `string'
PUBLIC	??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@ ; `string'
;	COMDAT ??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@
CONST	SEGMENT
??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@ DB '    e'
	DB	'g: to run just the utility tests type: cintltest /tsutil) ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@
CONST	SEGMENT
??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@ DB ' '
	DB	'   [/subtest]  To run a subtest ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@
CONST	SEGMENT
??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@ DB '    -r'
	DB	'  Repeat tests after calling u_cleanup ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@
CONST	SEGMENT
??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@ DB '    '
	DB	'    The default is the maximum value of size_t. Max is option'
	DB	'al.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@
CONST	SEGMENT
??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@ DB ' '
	DB	'   -m n[-q] Min-Max memory size that will cause an allocation'
	DB	' failure.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@
CONST	SEGMENT
??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@ DB ' '
	DB	'   -no_err_msg (same as -n) ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@
CONST	SEGMENT
??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@ DB ' '
	DB	'   -t_info | -t_error | -t_warn | -t_oc | -t_verbose  Enable '
	DB	'ICU tracing', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@
CONST	SEGMENT
??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@ DB '    '
	DB	'-w  Don''t fail on data-loading errs, just warn. Useful if', 0aH
	DB	'        user has reduced/changed the common set of ICU data ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@
CONST	SEGMENT
??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@ DB '    -'
	DB	'n  To turn OFF printing error messages', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@
CONST	SEGMENT
??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@ DB '    -'
	DB	'K  to turn OFF suppressing known issues', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@
CONST	SEGMENT
??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@ DB '   '
	DB	' -h  To print this message', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@
CONST	SEGMENT
??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@ DB '    '
	DB	'-x file.xml   Write junit format output to file.xml', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@
CONST	SEGMENT
??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@ DB '   '
	DB	' -v  To turn ON verbosity(same as -verbose)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@
CONST	SEGMENT
??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@ DB '    -ve'
	DB	'rbose To turn ON verbosity', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@
CONST	SEGMENT
??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@ DB '    -e'
	DB	'  to do exhaustive testing', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@
CONST	SEGMENT
??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@ DB '   '
	DB	' -l  To get a list of test names', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@
CONST	SEGMENT
??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@ DB 'U'
	DB	'sage: %s [ -l ] [ -v ] [ -verbose] [-a] [ -all] [-n] [ -no_er'
	DB	'r_msg]', 0aH, '    [ -h ] [-t_info | -t_error | -t_warn | -t_'
	DB	'oc | -t_verbose] [-m n[-q] ]', 0aH, '    [ /path/to/test ]', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _help
_TEXT	SEGMENT
_argv0$ = 8						; size = 4
_help	PROC						; COMDAT
; Line 1172
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1176
	mov	esi, esp
	mov	eax, DWORD PTR _argv0$[ebp]
	push	eax
	push	OFFSET ??_C@_0KH@EMDCIAHK@Usage?3?5?$CFs?5?$FL?5?9l?5?$FN?5?$FL?5?9v?5?$FN?5?$FL?5?9verbo@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1177
	mov	esi, esp
	push	OFFSET ??_C@_0CF@KMCEMKNN@?5?5?5?5?9l?5?5To?5get?5a?5list?5of?5test?5na@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1178
	mov	esi, esp
	push	OFFSET ??_C@_0CC@OEFODDPA@?5?5?5?5?9e?5?5to?5do?5exhaustive?5testing@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1179
	mov	esi, esp
	push	OFFSET ??_C@_0CD@CANHEGEO@?5?5?5?5?9verbose?5To?5turn?5ON?5verbosit@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1180
	mov	esi, esp
	push	OFFSET ??_C@_0DA@DEOMECGD@?5?5?5?5?9v?5?5To?5turn?5ON?5verbosity?$CIsam@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1181
	mov	esi, esp
	push	OFFSET ??_C@_0DJ@CCNCBHBI@?5?5?5?5?9x?5file?4xml?5?5?5Write?5junit?5fo@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1182
	mov	esi, esp
	push	OFFSET ??_C@_0BP@DINFJLOB@?5?5?5?5?9h?5?5To?5print?5this?5message?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1183
	mov	esi, esp
	push	OFFSET ??_C@_0CO@HPAOEJKO@?5?5?5?5?9K?5?5to?5turn?5OFF?5suppressing?5@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1184
	mov	esi, esp
	push	OFFSET ??_C@_0CN@EJKNLGJL@?5?5?5?5?9n?5?5To?5turn?5OFF?5printing?5err@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1186
	mov	esi, esp
	push	OFFSET ??_C@_0HM@DMOHKHJD@?5?5?5?5?9w?5?5Don?8t?5fail?5on?5data?9loadi@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1187
	mov	esi, esp
	push	OFFSET ??_C@_0EL@ONIINNNO@?5?5?5?5?9t_info?5?$HM?5?9t_error?5?$HM?5?9t_warn@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1188
	mov	esi, esp
	push	OFFSET ??_C@_0BP@GKFAIMJC@?5?5?5?5?9no_err_msg?5?$CIsame?5as?5?9n?$CJ?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1189
	mov	esi, esp
	push	OFFSET ??_C@_0EJ@GLOGNBEH@?5?5?5?5?9m?5n?$FL?9q?$FN?5Min?9Max?5memory?5size@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1190
	mov	esi, esp
	push	OFFSET ??_C@_0EG@GFMGGOJM@?5?5?5?5?5?5?5?5The?5default?5is?5the?5maxim@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1191
	mov	esi, esp
	push	OFFSET ??_C@_0CP@LLGCKPNI@?5?5?5?5?9r?5?5Repeat?5tests?5after?5calli@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1192
	mov	esi, esp
	push	OFFSET ??_C@_0CD@CMKAPPKN@?5?5?5?5?$FL?1subtest?$FN?5?5To?5run?5a?5subtest@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1193
	mov	esi, esp
	push	OFFSET ??_C@_0EB@LLAJLCBI@?5?5?5?5eg?3?5to?5run?5just?5the?5utility?5@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1194
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_help	ENDP
_TEXT	ENDS
PUBLIC	_getTestOption
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getTestOption
_TEXT	SEGMENT
tv64 = -196						; size = 4
_testOption$ = 8					; size = 4
_getTestOption PROC					; COMDAT
; Line 1197
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1198
	mov	eax, DWORD PTR _testOption$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 5
	ja	SHORT $LN1@getTestOpt
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@getTestOpt[edx*4]
$LN7@getTestOpt:
; Line 1200
	mov	eax, DWORD PTR _VERBOSITY
	jmp	SHORT $LN10@getTestOpt
$LN6@getTestOpt:
; Line 1202
	mov	eax, DWORD PTR _WARN_ON_MISSING_DATA
	jmp	SHORT $LN10@getTestOpt
$LN5@getTestOpt:
; Line 1204
	mov	eax, DWORD PTR _QUICK
	jmp	SHORT $LN10@getTestOpt
$LN4@getTestOpt:
; Line 1206
	mov	eax, DWORD PTR _REPEAT_TESTS
	jmp	SHORT $LN10@getTestOpt
$LN3@getTestOpt:
; Line 1208
	mov	eax, DWORD PTR _ERR_MSG
	jmp	SHORT $LN10@getTestOpt
$LN2@getTestOpt:
; Line 1210
	mov	eax, DWORD PTR _ICU_TRACE
	jmp	SHORT $LN10@getTestOpt
$LN1@getTestOpt:
; Line 1212
	xor	eax, eax
$LN10@getTestOpt:
; Line 1214
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@getTestOpt:
	DD	$LN4@getTestOpt
	DD	$LN7@getTestOpt
	DD	$LN3@getTestOpt
	DD	$LN5@getTestOpt
	DD	$LN6@getTestOpt
	DD	$LN2@getTestOpt
_getTestOption ENDP
_TEXT	ENDS
PUBLIC	_setTestOption
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setTestOption
_TEXT	SEGMENT
tv68 = -196						; size = 4
_testOption$ = 8					; size = 4
_value$ = 12						; size = 4
_setTestOption PROC					; COMDAT
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1218
	cmp	DWORD PTR _value$[ebp], -99		; ffffff9dH
	jne	SHORT $LN9@setTestOpt
; Line 1219
	mov	eax, DWORD PTR _testOption$[ebp]
	push	eax
	call	_getTestOption
	add	esp, 4
	mov	DWORD PTR _value$[ebp], eax
; Line 1220
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, 1
	mov	DWORD PTR _value$[ebp], eax
$LN9@setTestOpt:
; Line 1222
	mov	eax, DWORD PTR _testOption$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 5
	ja	SHORT $LN10@setTestOpt
	mov	edx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN12@setTestOpt[edx*4]
$LN6@setTestOpt:
; Line 1224
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _VERBOSITY, eax
; Line 1225
	jmp	SHORT $LN10@setTestOpt
$LN5@setTestOpt:
; Line 1227
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _WARN_ON_MISSING_DATA, eax
; Line 1228
	jmp	SHORT $LN10@setTestOpt
$LN4@setTestOpt:
; Line 1230
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _QUICK, eax
; Line 1231
	jmp	SHORT $LN10@setTestOpt
$LN3@setTestOpt:
; Line 1233
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _REPEAT_TESTS, eax
; Line 1234
	jmp	SHORT $LN10@setTestOpt
$LN2@setTestOpt:
; Line 1236
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _ICU_TRACE, eax
$LN10@setTestOpt:
; Line 1241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@setTestOpt:
	DD	$LN3@setTestOpt
	DD	$LN6@setTestOpt
	DD	$LN10@setTestOpt
	DD	$LN4@setTestOpt
	DD	$LN5@setTestOpt
	DD	$LN2@setTestOpt
_setTestOption ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ctest_xml_setFileName
_TEXT	SEGMENT
_name$ = 8						; size = 4
_ctest_xml_setFileName PROC				; COMDAT
; Line 1250
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1251
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR _XML_FILE_NAME, eax
; Line 1252
	xor	eax, eax
; Line 1253
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_xml_setFileName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@ ; `string'
PUBLIC	??_C@_05FFKPLNPJ@fopen?$AA@			; `string'
EXTRN	__imp__isalnum:PROC
EXTRN	__imp__perror:PROC
_BSS	SEGMENT
_XML_PREFIX DB	0100H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@ DB '<t'
	DB	'estsuite name="%s">', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@
CONST	SEGMENT
??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@ DB ' Error: c'
	DB	'ouldn''t open XML output file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FFKPLNPJ@fopen?$AA@
CONST	SEGMENT
??_C@_05FFKPLNPJ@fopen?$AA@ DB 'fopen', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ctest_xml_init
_TEXT	SEGMENT
_p$10055 = -8						; size = 4
_rootName$ = 8						; size = 4
_ctest_xml_init PROC					; COMDAT
; Line 1258
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1259
	cmp	DWORD PTR _XML_FILE_NAME, 0
	jne	SHORT $LN7@ctest_xml_
	xor	eax, eax
	jmp	$LN8@ctest_xml_
$LN7@ctest_xml_:
; Line 1260
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _XML_FILE_NAME
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _XML_FILE, eax
; Line 1261
	cmp	DWORD PTR _XML_FILE, 0
	jne	SHORT $LN5@ctest_xml_
; Line 1262
	mov	esi, esp
	push	OFFSET ??_C@_05FFKPLNPJ@fopen?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1263
	mov	esi, esp
	mov	eax, DWORD PTR _XML_FILE_NAME
	push	eax
	push	OFFSET ??_C@_0CK@EHNGEBCI@?5Error?3?5couldn?8t?5open?5XML?5output@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1264
	mov	eax, 1
	jmp	$LN8@ctest_xml_
$LN5@ctest_xml_:
; Line 1266
	mov	eax, DWORD PTR _rootName$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@ctest_xml_
	mov	eax, DWORD PTR _rootName$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp__isalnum
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@ctest_xml_
; Line 1267
	mov	eax, DWORD PTR _rootName$[ebp]
	add	eax, 1
	mov	DWORD PTR _rootName$[ebp], eax
; Line 1268
	jmp	SHORT $LN5@ctest_xml_
$LN4@ctest_xml_:
; Line 1269
	mov	eax, DWORD PTR _rootName$[ebp]
	push	eax
	push	OFFSET _XML_PREFIX
	call	_strcpy
	add	esp, 8
; Line 1271
	push	OFFSET _XML_PREFIX
	call	_strlen
	add	esp, 4
	add	eax, OFFSET _XML_PREFIX
	mov	DWORD PTR _p$10055[ebp], eax
; Line 1272
	mov	eax, DWORD PTR _p$10055[ebp]
	sub	eax, 1
	mov	DWORD PTR _p$10055[ebp], eax
	jmp	SHORT $LN3@ctest_xml_
$LN2@ctest_xml_:
	mov	eax, DWORD PTR _p$10055[ebp]
	sub	eax, 1
	mov	DWORD PTR _p$10055[ebp], eax
$LN3@ctest_xml_:
	mov	eax, DWORD PTR _p$10055[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@ctest_xml_
	cmp	DWORD PTR _p$10055[ebp], OFFSET _XML_PREFIX
	jbe	SHORT $LN1@ctest_xml_
	mov	eax, DWORD PTR _p$10055[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp__isalnum
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@ctest_xml_
; Line 1273
	mov	eax, DWORD PTR _p$10055[ebp]
	mov	BYTE PTR [eax], 0
; Line 1274
	jmp	SHORT $LN2@ctest_xml_
$LN1@ctest_xml_:
; Line 1277
	mov	esi, esp
	push	OFFSET _XML_PREFIX
	push	OFFSET ??_C@_0BH@FFIPOJKE@?$DMtestsuite?5name?$DN?$CC?$CFs?$CC?$DO?6?$AA@
	mov	eax, DWORD PTR _XML_FILE
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1279
	xor	eax, eax
$LN8@ctest_xml_:
; Line 1280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_xml_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@ ; `string'
PUBLIC	??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@	; `string'
;	COMDAT ??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@
CONST	SEGMENT
??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@ DB ' '
	DB	'( test results written to %s )', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@
CONST	SEGMENT
??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@ DB '</testsuite>', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ctest_xml_fini
_TEXT	SEGMENT
_ctest_xml_fini PROC					; COMDAT
; Line 1284
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1285
	cmp	DWORD PTR _XML_FILE, 0
	jne	SHORT $LN1@ctest_xml_@2
	xor	eax, eax
	jmp	SHORT $LN2@ctest_xml_@2
$LN1@ctest_xml_@2:
; Line 1287
	mov	esi, esp
	push	OFFSET ??_C@_0O@OKFDLHJB@?$DM?1testsuite?$DO?6?$AA@
	mov	eax, DWORD PTR _XML_FILE
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1288
	mov	esi, esp
	mov	eax, DWORD PTR _XML_FILE
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1289
	mov	esi, esp
	mov	eax, DWORD PTR _XML_FILE_NAME
	push	eax
	push	OFFSET ??_C@_0CB@PADDDKAP@?5?$CI?5test?5results?5written?5to?5?$CFs?5?$CJ?6@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1290
	mov	DWORD PTR _XML_FILE, 0
; Line 1291
	xor	eax, eax
$LN2@ctest_xml_@2:
; Line 1292
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_xml_fini ENDP
_TEXT	ENDS
PUBLIC	??_C@_03PCPALPJL@?1?$DO?6?$AA@			; `string'
PUBLIC	??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@ ; `string'
PUBLIC	??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@ ; `string'
;	COMDAT ??_C@_03PCPALPJL@?1?$DO?6?$AA@
CONST	SEGMENT
??_C@_03PCPALPJL@?1?$DO?6?$AA@ DB '/>', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@
CONST	SEGMENT
??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@ DB '>'
	DB	0aH, 09H, 09H, '<failure type="err" message="%s"/>', 0aH, 09H, '<'
	DB	'/testcase>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@
CONST	SEGMENT
??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@ DB 09H
	DB	'<testcase classname="%s:%s" name="%s:%s" time="%s"', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ctest_xml_testcase
_TEXT	SEGMENT
_classname$ = 8						; size = 4
_name$ = 12						; size = 4
_timeSeconds$ = 16					; size = 4
_failMsg$ = 20						; size = 4
_ctest_xml_testcase PROC				; COMDAT
; Line 1297
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1298
	cmp	DWORD PTR _XML_FILE, 0
	jne	SHORT $LN3@ctest_xml_@3
	xor	eax, eax
	jmp	SHORT $LN4@ctest_xml_@3
$LN3@ctest_xml_@3:
; Line 1300
	mov	esi, esp
	mov	eax, DWORD PTR _timeSeconds$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET _XML_PREFIX
	mov	edx, DWORD PTR _classname$[ebp]
	push	edx
	push	OFFSET _XML_PREFIX
	push	OFFSET ??_C@_0DE@BLOAECLK@?7?$DMtestcase?5classname?$DN?$CC?$CFs?3?$CFs?$CC?5nam@
	mov	eax, DWORD PTR _XML_FILE
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1301
	cmp	DWORD PTR _failMsg$[ebp], 0
	je	SHORT $LN2@ctest_xml_@3
; Line 1302
	mov	esi, esp
	mov	eax, DWORD PTR _failMsg$[ebp]
	push	eax
	push	OFFSET ??_C@_0DF@HBNPDNJ@?$DO?6?7?7?$DMfailure?5type?$DN?$CCerr?$CC?5message?$DN@
	mov	ecx, DWORD PTR _XML_FILE
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1303
	jmp	SHORT $LN1@ctest_xml_@3
$LN2@ctest_xml_@3:
; Line 1304
	mov	esi, esp
	push	OFFSET ??_C@_03PCPALPJL@?1?$DO?6?$AA@
	mov	eax, DWORD PTR _XML_FILE
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ctest_xml_@3:
; Line 1307
	xor	eax, eax
$LN4@ctest_xml_@3:
; Line 1308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ctest_xml_testcase ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\collationiterator.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
PUBLIC	?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB	; icu_56::CollationData::JAMO_CE32S_LENGTH
PUBLIC	?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB ; icu_56::CollationIterator::CEBuffer::INITIAL_CAPACITY
;	COMDAT ?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB
CONST	SEGMENT
?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB DD 028H ; icu_56::CollationIterator::CEBuffer::INITIAL_CAPACITY
CONST	ENDS
;	COMDAT ?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB
CONST	SEGMENT
?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB DD 043H	; icu_56::CollationData::JAMO_CE32S_LENGTH
CONST	ENDS
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ; icu_56::CollationData::CollationData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nfc$ = 8						; size = 4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z PROC ; icu_56::CollationData::CollationData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationdata.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nfc$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 301989888		; 12000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ENDP ; icu_56::CollationData::CollationData
_TEXT	ENDS
PUBLIC	?getCE32@CollationData@icu_56@@QBEIH@Z		; icu_56::CollationData::getCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv138 = -220						; size = 4
tv139 = -216						; size = 4
tv140 = -212						; size = 4
tv141 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32@CollationData@icu_56@@QBEIH@Z PROC		; icu_56::CollationData::getCE32, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [ecx]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv141[ebp], eax
	jmp	$LN10@getCE32
$LN9@getCE32:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@getCE32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR [edx]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv140[ebp], edx
	jmp	$LN8@getCE32
$LN7@getCE32:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@getCE32
	mov	DWORD PTR tv139[ebp], 128		; 00000080H
	jmp	SHORT $LN6@getCE32
$LN5@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN4@getCE32
$LN3@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv138[ebp], ecx
$LN4@getCE32:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv139[ebp], edx
$LN6@getCE32:
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv140[ebp], eax
$LN8@getCE32:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv141[ebp], ecx
$LN10@getCE32:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32@CollationData@icu_56@@QBEIH@Z ENDP		; icu_56::CollationData::getCE32
_TEXT	ENDS
PUBLIC	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getCE32FromSupplementary, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32Fro
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN4@getCE32Fro
$LN3@getCE32Fro:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv84[ebp], ecx
$LN4@getCE32Fro:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getCE32FromSupplementary
_TEXT	ENDS
PUBLIC	?isDigit@CollationData@icu_56@@QBECH@Z		; icu_56::CollationData::isDigit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDigit@CollationData@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv75 = -212						; size = 4
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isDigit@CollationData@icu_56@@QBECH@Z PROC		; icu_56::CollationData::isDigit, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	cmp	DWORD PTR _c$[ebp], 1632		; 00000660H
	jge	SHORT $LN5@isDigit
	cmp	DWORD PTR _c$[ebp], 57			; 00000039H
	jg	SHORT $LN3@isDigit
	cmp	DWORD PTR _c$[ebp], 48			; 00000030H
	jl	SHORT $LN3@isDigit
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@isDigit
$LN3@isDigit:
	mov	DWORD PTR tv67[ebp], 0
$LN4@isDigit:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@isDigit
$LN5@isDigit:
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR tv75[ebp], edx
$LN6@isDigit:
	mov	al, BYTE PTR tv75[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isDigit@CollationData@icu_56@@QBECH@Z ENDP		; icu_56::CollationData::isDigit
_TEXT	ENDS
PUBLIC	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z
_TEXT	SEGMENT
tv86 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_numeric$ = 12						; size = 1
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z PROC	; icu_56::CollationData::isUnsafeBackward, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
	movsx	edx, BYTE PTR _numeric$[ebp]
	test	edx, edx
	je	SHORT $LN3@isUnsafeBa
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDigit@CollationData@icu_56@@QBECH@Z	; icu_56::CollationData::isDigit
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
$LN3@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN5@isUnsafeBa
$LN4@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 1
$LN5@isUnsafeBa:
	mov	al, BYTE PTR tv86[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ENDP	; icu_56::CollationData::isUnsafeBackward
_TEXT	ENDS
PUBLIC	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressibleLeadByte, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _b$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressibleLeadByte
_TEXT	ENDS
PUBLIC	?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressiblePrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressiblePrimary, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressiblePrimary
_TEXT	ENDS
PUBLIC	?readCE32@CollationData@icu_56@@SAIPB_W@Z	; icu_56::CollationData::readCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readCE32@CollationData@icu_56@@SAIPB_W@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?readCE32@CollationData@icu_56@@SAIPB_W@Z PROC		; icu_56::CollationData::readCE32, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [eax]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	or	eax, edx
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readCE32@CollationData@icu_56@@SAIPB_W@Z ENDP		; icu_56::CollationData::readCE32
_TEXT	ENDS
PUBLIC	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
EXTRN	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:PROC ; icu_56::Collation::getThreeBytePrimaryForOffsetData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z
_TEXT	SEGMENT
_dataCE$ = -24						; size = 8
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_ce32$ = 12						; size = 4
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z PROC ; icu_56::CollationData::getCEFromOffsetCE32, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _dataCE$[ebp], ecx
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _dataCE$[ebp+4], edx
; Line 115
	mov	eax, DWORD PTR _dataCE$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _dataCE$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z ; icu_56::Collation::getThreeBytePrimaryForOffsetData
	add	esp, 12					; 0000000cH
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ENDP ; icu_56::CollationData::getCEFromOffsetCE32
_TEXT	ENDS
PUBLIC	?getFCD16@CollationData@icu_56@@QBEGH@Z		; icu_56::CollationData::getFCD16
EXTRN	__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16@CollationData@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16@CollationData@icu_56@@QBEGH@Z PROC		; icu_56::CollationData::getFCD16, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	DWORD PTR __imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16@CollationData@icu_56@@QBEGH@Z ENDP		; icu_56::CollationData::getFCD16
_TEXT	ENDS
PUBLIC	?hasLccc@CollationFCD@icu_56@@SACH@Z		; icu_56::CollationFCD::hasLccc
EXTRN	?lcccBits@CollationFCD@icu_56@@0QBIB:BYTE	; icu_56::CollationFCD::lcccBits
EXTRN	?lcccIndex@CollationFCD@icu_56@@0QBEB:BYTE	; icu_56::CollationFCD::lcccIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasLccc@CollationFCD@icu_56@@SACH@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_i$ = -8						; size = 4
_c$ = 8							; size = 4
?hasLccc@CollationFCD@icu_56@@SACH@Z PROC		; icu_56::CollationFCD::hasLccc, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collationfcd.h
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	cmp	DWORD PTR _c$[ebp], 768			; 00000300H
	jl	SHORT $LN3@hasLccc
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	movzx	ecx, BYTE PTR ?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@hasLccc
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _i$[ebp]
	and	edx, DWORD PTR ?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]
	je	SHORT $LN3@hasLccc
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@hasLccc
$LN3@hasLccc:
	mov	BYTE PTR tv75[ebp], 0
$LN4@hasLccc:
	mov	al, BYTE PTR tv75[ebp]
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasLccc@CollationFCD@icu_56@@SACH@Z ENDP		; icu_56::CollationFCD::hasLccc
_TEXT	ENDS
PUBLIC	?hasTccc@CollationFCD@icu_56@@SACH@Z		; icu_56::CollationFCD::hasTccc
EXTRN	?tcccBits@CollationFCD@icu_56@@0QBIB:BYTE	; icu_56::CollationFCD::tcccBits
EXTRN	?tcccIndex@CollationFCD@icu_56@@0QBEB:BYTE	; icu_56::CollationFCD::tcccIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasTccc@CollationFCD@icu_56@@SACH@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_i$ = -8						; size = 4
_c$ = 8							; size = 4
?hasTccc@CollationFCD@icu_56@@SACH@Z PROC		; icu_56::CollationFCD::hasTccc, COMDAT
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 78
	cmp	DWORD PTR _c$[ebp], 192			; 000000c0H
	jl	SHORT $LN3@hasTccc
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	movzx	ecx, BYTE PTR ?tcccIndex@CollationFCD@icu_56@@0QBEB[eax]
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@hasTccc
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _i$[ebp]
	and	edx, DWORD PTR ?tcccBits@CollationFCD@icu_56@@0QBIB[eax*4]
	je	SHORT $LN3@hasTccc
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@hasTccc
$LN3@hasTccc:
	mov	BYTE PTR tv75[ebp], 0
$LN4@hasTccc:
	mov	al, BYTE PTR tv75[ebp]
; Line 79
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasTccc@CollationFCD@icu_56@@SACH@Z ENDP		; icu_56::CollationFCD::hasTccc
_TEXT	ENDS
PUBLIC	?mayHaveLccc@CollationFCD@icu_56@@SACH@Z	; icu_56::CollationFCD::mayHaveLccc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?mayHaveLccc@CollationFCD@icu_56@@SACH@Z
_TEXT	SEGMENT
tv80 = -205						; size = 1
_i$ = -8						; size = 4
_c$ = 8							; size = 4
?mayHaveLccc@CollationFCD@icu_56@@SACH@Z PROC		; icu_56::CollationFCD::mayHaveLccc, COMDAT
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 85
	cmp	DWORD PTR _c$[ebp], 768			; 00000300H
	jge	SHORT $LN2@mayHaveLcc
	xor	al, al
	jmp	SHORT $LN3@mayHaveLcc
$LN2@mayHaveLcc:
; Line 86
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jle	SHORT $LN1@mayHaveLcc
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	movzx	ecx, ax
	mov	DWORD PTR _c$[ebp], ecx
$LN1@mayHaveLcc:
; Line 90
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	movzx	ecx, BYTE PTR ?lcccIndex@CollationFCD@icu_56@@0QBEB[eax]
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN5@mayHaveLcc
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _i$[ebp]
	and	edx, DWORD PTR ?lcccBits@CollationFCD@icu_56@@0QBIB[eax*4]
	je	SHORT $LN5@mayHaveLcc
	mov	BYTE PTR tv80[ebp], 1
	jmp	SHORT $LN6@mayHaveLcc
$LN5@mayHaveLcc:
	mov	BYTE PTR tv80[ebp], 0
$LN6@mayHaveLcc:
	mov	al, BYTE PTR tv80[ebp]
$LN3@mayHaveLcc:
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?mayHaveLccc@CollationFCD@icu_56@@SACH@Z ENDP		; icu_56::CollationFCD::mayHaveLccc
_TEXT	ENDS
PUBLIC	?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z ; icu_56::CollationFCD::maybeTibetanCompositeVowel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z PROC ; icu_56::CollationFCD::maybeTibetanCompositeVowel, COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 105
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 2096897				; 001fff01H
	cmp	eax, 3841				; 00000f01H
	sete	al
; Line 106
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?maybeTibetanCompositeVowel@CollationFCD@icu_56@@SACH@Z ENDP ; icu_56::CollationFCD::maybeTibetanCompositeVowel
_TEXT	ENDS
PUBLIC	?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z ; icu_56::CollationFCD::isFCD16OfTibetanCompositeVowel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z
_TEXT	SEGMENT
tv68 = -193						; size = 1
_fcd16$ = 8						; size = 2
?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z PROC ; icu_56::CollationFCD::isFCD16OfTibetanCompositeVowel, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 120
	movzx	eax, WORD PTR _fcd16$[ebp]
	cmp	eax, 33154				; 00008182H
	je	SHORT $LN3@isFCD16OfT
	movzx	ecx, WORD PTR _fcd16$[ebp]
	cmp	ecx, 33156				; 00008184H
	je	SHORT $LN3@isFCD16OfT
	mov	BYTE PTR tv68[ebp], 0
	jmp	SHORT $LN4@isFCD16OfT
$LN3@isFCD16OfT:
	mov	BYTE PTR tv68[ebp], 1
$LN4@isFCD16OfT:
	mov	al, BYTE PTR tv68[ebp]
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFCD16OfTibetanCompositeVowel@CollationFCD@icu_56@@SACG@Z ENDP ; icu_56::CollationFCD::isFCD16OfTibetanCompositeVowel
_TEXT	ENDS
PUBLIC	??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollationFCD::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::CollationFCD::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationFCD@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::CollationFCD::operator=
_TEXT	ENDS
PUBLIC	??0CEBuffer@CollationIterator@icu_56@@QAE@XZ	; icu_56::CollationIterator::CEBuffer::CEBuffer
PUBLIC	??_7CollationIterator@icu_56@@6B@		; icu_56::CollationIterator::`vftable'
PUBLIC	??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z ; icu_56::CollationIterator::CollationIterator
PUBLIC	??_R4CollationIterator@icu_56@@6B@		; icu_56::CollationIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollationIterator@icu_56@@@8		; icu_56::CollationIterator `RTTI Type Descriptor'
PUBLIC	??_R3CollationIterator@icu_56@@8		; icu_56::CollationIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollationIterator@icu_56@@8		; icu_56::CollationIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollationIterator@icu_56@@8	; icu_56::CollationIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollationIterator@icu_56@@UAEPAXI@Z		; icu_56::CollationIterator::`vector deleting destructor'
PUBLIC	??8CollationIterator@icu_56@@UBECABV01@@Z	; icu_56::CollationIterator::operator==
PUBLIC	?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::handleNextCE32
PUBLIC	?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ ; icu_56::CollationIterator::handleGetTrailSurrogate
PUBLIC	?foundNULTerminator@CollationIterator@icu_56@@MAECXZ ; icu_56::CollationIterator::foundNULTerminator
PUBLIC	?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ ; icu_56::CollationIterator::forbidSurrogateCodePoints
PUBLIC	?getDataCE32@CollationIterator@icu_56@@MBEIH@Z	; icu_56::CollationIterator::getDataCE32
PUBLIC	?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z ; icu_56::CollationIterator::getCE32FromBuilderData
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\collationiterator.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollationIterator@icu_56@@8 DD FLAT:??_R0?AVCollationIterator@icu_56@@@8 ; icu_56::CollationIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R2CollationIterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollationIterator@icu_56@@8 ; icu_56::CollationIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R3CollationIterator@icu_56@@8 DD 00H			; icu_56::CollationIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollationIterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollationIterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollationIterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollationIterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollationIterator@icu_56@@6B@ DD 00H		; icu_56::CollationIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollationIterator@icu_56@@@8
	DD	FLAT:??_R3CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollationIterator@icu_56@@6B@
CONST	SEGMENT
??_7CollationIterator@icu_56@@6B@ DD FLAT:??_R4CollationIterator@icu_56@@6B@ ; icu_56::CollationIterator::`vftable'
	DD	FLAT:??_ECollationIterator@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:??8CollationIterator@icu_56@@UBECABV01@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z
	DD	FLAT:?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ
	DD	FLAT:?foundNULTerminator@CollationIterator@icu_56@@MAECXZ
	DD	FLAT:?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getDataCE32@CollationIterator@icu_56@@MBEIH@Z
	DD	FLAT:?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0
__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_numeric$ = 12						; size = 1
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z PROC ; icu_56::CollationIterator::CollationIterator, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationIterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::CEBuffer
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _numeric$[ebp]
	mov	BYTE PTR [eax+372], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z ENDP ; icu_56::CollationIterator::CollationIterator
PUBLIC	??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CEBuffer@CollationIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ PROC	; icu_56::CollationIterator::CEBuffer::CEBuffer, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ ENDP	; icu_56::CollationIterator::CEBuffer::CEBuffer
_TEXT	ENDS
PUBLIC	??9CollationIterator@icu_56@@QBECABV01@@Z	; icu_56::CollationIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CollationIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9CollationIterator@icu_56@@QBECABV01@@Z PROC		; icu_56::CollationIterator::operator!=, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CollationIterator@icu_56@@QBECABV01@@Z ENDP		; icu_56::CollationIterator::operator!=
_TEXT	ENDS
PUBLIC	?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCEFromCE32
PUBLIC	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
PUBLIC	?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::incLength
PUBLIC	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
PUBLIC	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv379 = -260						; size = 4
tv377 = -260						; size = 4
tv196 = -256						; size = 4
tv180 = -256						; size = 4
tv153 = -256						; size = 4
tv141 = -256						; size = 4
tv75 = -256						; size = 4
_d$ = -56						; size = 4
_t$ = -44						; size = 4
_ce32$ = -32						; size = 4
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextCE, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+16]
	jge	SHORT $LN8@nextCE
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	$LN9@nextCE
$LN8@nextCE:
; Line 118
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::incLength
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@nextCE
; Line 119
	mov	eax, 16777472				; 01000100H
	mov	edx, 1
	jmp	$LN9@nextCE
$LN7@nextCE:
; Line 122
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _t$[ebp], eax
; Line 124
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jae	SHORT $LN6@nextCE
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv141[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR _t$[ebp]
	shl	edx, 8
	mov	esi, edx
	xor	edi, edi
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	mov	ebx, eax
	xor	eax, eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, -65536				; ffff0000H
	xor	edx, edx
	mov	DWORD PTR tv377[ebp], eax
	mov	eax, ecx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, ebx
	mov	ebx, DWORD PTR tv377[ebp]
	or	edx, ebx
	or	eax, esi
	or	edx, edi
	push	edx
	push	eax
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	$LN9@nextCE
$LN6@nextCE:
; Line 133
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jne	$LN5@nextCE
; Line 134
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN4@nextCE
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv153[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	push	1
	push	16777472				; 01000100H
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	$LN9@nextCE
$LN4@nextCE:
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _d$[ebp], edx
; Line 138
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 139
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _t$[ebp], eax
; Line 140
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jae	SHORT $LN3@nextCE
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv180[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR _t$[ebp]
	shl	edx, 8
	mov	esi, edx
	xor	edi, edi
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	mov	ebx, eax
	xor	eax, eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, -65536				; ffff0000H
	xor	edx, edx
	mov	DWORD PTR tv379[ebp], eax
	mov	eax, ecx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, ebx
	mov	ebx, DWORD PTR tv379[ebp]
	or	edx, ebx
	or	eax, esi
	or	edx, edi
	push	edx
	push	eax
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	SHORT $LN9@nextCE
$LN3@nextCE:
; Line 145
	jmp	SHORT $LN2@nextCE
$LN5@nextCE:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _d$[ebp], ecx
$LN2@nextCE:
; Line 148
	cmp	DWORD PTR _t$[ebp], 193			; 000000c1H
	jne	SHORT $LN1@nextCE
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv196[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _t$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	push	edx
	push	eax
	mov	edx, DWORD PTR tv196[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	SHORT $LN9@nextCE
$LN1@nextCE:
; Line 153
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCEFromCE32
$LN9@nextCE:
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@nextCE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@nextCE:
	DD	1
	DD	$LN12@nextCE
$LN12@nextCE:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@nextCE
$LN11@nextCE:
	DB	99					; 00000063H
	DB	0
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextCE
_TEXT	ENDS
PUBLIC	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::CEBuffer::incLength, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 40			; 00000028H
	jl	SHORT $LN2@incLength
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@incLength
$LN2@incLength:
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 62
	mov	al, 1
	jmp	SHORT $LN4@incLength
; Line 63
	jmp	SHORT $LN4@incLength
$LN3@incLength:
; Line 64
	xor	al, al
$LN4@incLength:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::CEBuffer::incLength
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_ce$ = 12						; size = 8
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z PROC	; icu_56::CollationIterator::CEBuffer::set, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, DWORD PTR _ce$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ce$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _ce$[ebp]
	mov	edx, DWORD PTR _ce$[ebp+4]
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ENDP	; icu_56::CollationIterator::CEBuffer::set
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z PROC	; icu_56::CollationIterator::CEBuffer::get, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ENDP	; icu_56::CollationIterator::CEBuffer::get
_TEXT	ENDS
PUBLIC	?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::setCurrentCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ce$ = 8						; size = 8
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z PROC	; icu_56::CollationIterator::setCurrentCE, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _ce$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ce$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z ENDP	; icu_56::CollationIterator::setCurrentCE
_TEXT	ENDS
PUBLIC	?getCEsLength@CollationIterator@icu_56@@QBEHXZ	; icu_56::CollationIterator::getCEsLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEsLength@CollationIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEsLength@CollationIterator@icu_56@@QBEHXZ PROC	; icu_56::CollationIterator::getCEsLength, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEsLength@CollationIterator@icu_56@@QBEHXZ ENDP	; icu_56::CollationIterator::getCEsLength
_TEXT	ENDS
PUBLIC	?getCE@CollationIterator@icu_56@@QBE_JH@Z	; icu_56::CollationIterator::getCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE@CollationIterator@icu_56@@QBE_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getCE@CollationIterator@icu_56@@QBE_JH@Z PROC		; icu_56::CollationIterator::getCE, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE@CollationIterator@icu_56@@QBE_JH@Z ENDP		; icu_56::CollationIterator::getCE
_TEXT	ENDS
PUBLIC	?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ; icu_56::CollationIterator::CEBuffer::getCEs
PUBLIC	?getCEs@CollationIterator@icu_56@@QBEPB_JXZ	; icu_56::CollationIterator::getCEs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEs@CollationIterator@icu_56@@QBEPB_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ PROC	; icu_56::CollationIterator::getCEs, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ; icu_56::CollationIterator::CEBuffer::getCEs
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ ENDP	; icu_56::CollationIterator::getCEs
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ; icu_56::MaybeStackArray<__int64,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ PROC ; icu_56::CollationIterator::CEBuffer::getCEs, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ; icu_56::MaybeStackArray<__int64,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ENDP ; icu_56::CollationIterator::CEBuffer::getCEs
_TEXT	ENDS
PUBLIC	?clearCEs@CollationIterator@icu_56@@QAEXXZ	; icu_56::CollationIterator::clearCEs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearCEs@CollationIterator@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearCEs@CollationIterator@icu_56@@QAEXXZ PROC		; icu_56::CollationIterator::clearCEs, COMDAT
; _this$ = ecx
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], 0
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clearCEs@CollationIterator@icu_56@@QAEXXZ ENDP		; icu_56::CollationIterator::clearCEs
_TEXT	ENDS
PUBLIC	?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ ; icu_56::CollationIterator::clearCEsIfNoneRemaining
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ PROC ; icu_56::CollationIterator::clearCEsIfNoneRemaining, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN2@clearCEsIf
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearCEs@CollationIterator@icu_56@@QAEXXZ ; icu_56::CollationIterator::clearCEs
$LN2@clearCEsIf:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ ENDP ; icu_56::CollationIterator::clearCEsIfNoneRemaining
_TEXT	ENDS
PUBLIC	??1CollationIterator@icu_56@@UAE@XZ		; icu_56::CollationIterator::~CollationIterator
PUBLIC	??_GCollationIterator@icu_56@@UAEPAXI@Z		; icu_56::CollationIterator::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollationIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollationIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationIterator@icu_56@@UAE@XZ	; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollationIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationIterator::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECollationIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollationIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationIterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CollationIterator@icu_56@@UAE@XZ ; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	376					; 00000178H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationIterator@icu_56@@UAE@XZ	; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollationIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationIterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<__int64,40>::~MaybeStackArray<__int64,40>
PUBLIC	??1CEBuffer@CollationIterator@icu_56@@QAE@XZ	; icu_56::CollationIterator::CEBuffer::~CEBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CEBuffer@CollationIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CEBuffer@CollationIterator@icu_56@@QAE@XZ PROC	; icu_56::CollationIterator::CEBuffer::~CEBuffer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationiterator.cpp
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<__int64,40>::~MaybeStackArray<__int64,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CEBuffer@CollationIterator@icu_56@@QAE@XZ ENDP	; icu_56::CollationIterator::CEBuffer::~CEBuffer
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z ; icu_56::MaybeStackArray<__int64,40>::resize
PUBLIC	?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<__int64,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_p$ = -32						; size = 4
_capacity$ = -20					; size = 4
_this$ = -8						; size = 4
_appCap$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<__int64,40>::getCapacity
	mov	DWORD PTR _capacity$[ebp], eax
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _appCap$[ebp]
	cmp	ecx, DWORD PTR _capacity$[ebp]
	jg	SHORT $LN8@ensureAppe
	mov	al, 1
	jmp	SHORT $LN9@ensureAppe
$LN8@ensureAppe:
; Line 38
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@ensureAppe
	xor	al, al
	jmp	SHORT $LN9@ensureAppe
$LN6@ensureAppe:
; Line 40
	cmp	DWORD PTR _capacity$[ebp], 1000		; 000003e8H
	jge	SHORT $LN3@ensureAppe
; Line 41
	mov	eax, DWORD PTR _capacity$[ebp]
	shl	eax, 2
	mov	DWORD PTR _capacity$[ebp], eax
; Line 42
	jmp	SHORT $LN5@ensureAppe
$LN3@ensureAppe:
; Line 43
	mov	eax, DWORD PTR _capacity$[ebp]
	shl	eax, 1
	mov	DWORD PTR _capacity$[ebp], eax
$LN5@ensureAppe:
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _appCap$[ebp]
	cmp	DWORD PTR _capacity$[ebp], ecx
	jl	SHORT $LN6@ensureAppe
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z ; icu_56::MaybeStackArray<__int64,40>::resize
	mov	DWORD PTR _p$[ebp], eax
; Line 47
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@ensureAppe
; Line 48
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 49
	xor	al, al
	jmp	SHORT $LN9@ensureAppe
$LN1@ensureAppe:
; Line 51
	mov	al, 1
$LN9@ensureAppe:
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??0CollationIterator@icu_56@@IAE@ABV01@@Z	; icu_56::CollationIterator::CollationIterator
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\collationiterator.cpp
xdata$x	SEGMENT
__unwindtable$??0CollationIterator@icu_56@@IAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$1
__ehfuncinfo$??0CollationIterator@icu_56@@IAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CollationIterator@icu_56@@IAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CollationIterator@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_i$73119 = -56						; size = 4
_length$ = -44						; size = 4
_errorCode$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0CollationIterator@icu_56@@IAE@ABV01@@Z PROC		; icu_56::CollationIterator::CollationIterator, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CollationIterator@icu_56@@IAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationIterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::CEBuffer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	DWORD PTR [eax+360], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+368]
	mov	DWORD PTR [eax+368], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+372]
	mov	BYTE PTR [eax+372], dl
; Line 153
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 154
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _length$[ebp], ecx
; Line 155
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@CollationI
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@CollationI
; Line 156
	mov	DWORD PTR _i$73119[ebp], 0
	jmp	SHORT $LN4@CollationI
$LN3@CollationI:
	mov	eax, DWORD PTR _i$73119[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73119[ebp], eax
$LN4@CollationI:
	mov	eax, DWORD PTR _i$73119[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN2@CollationI
; Line 157
	mov	eax, DWORD PTR _i$73119[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	push	edx
	push	eax
	mov	ecx, DWORD PTR _i$73119[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 158
	jmp	SHORT $LN3@CollationI
$LN2@CollationI:
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax+16], ecx
	jmp	SHORT $LN6@CollationI
$LN5@CollationI:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
$LN6@CollationI:
; Line 163
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@CollationI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN13@CollationI:
	DD	1
	DD	$LN12@CollationI
$LN12@CollationI:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@CollationI
$LN10@CollationI:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CollationIterator@icu_56@@IAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::~CEBuffer
__ehhandler$??0CollationIterator@icu_56@@IAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CollationIterator@icu_56@@IAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CollationIterator@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::CollationIterator::CollationIterator
PUBLIC	??_GSkippedState@icu_56@@QAEPAXI@Z		; icu_56::SkippedState::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CollationIterator@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$1
__ehfuncinfo$??1CollationIterator@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CollationIterator@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CollationIterator@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv81 = -244						; size = 4
$T80761 = -236						; size = 4
$T80762 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CollationIterator@icu_56@@UAE@XZ PROC		; icu_56::CollationIterator::~CollationIterator, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CollationIterator@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationIterator@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	mov	DWORD PTR $T80762[ebp], ecx
	mov	edx, DWORD PTR $T80762[ebp]
	mov	DWORD PTR $T80761[ebp], edx
	cmp	DWORD PTR $T80761[ebp], 0
	je	SHORT $LN3@CollationI@2
	push	1
	mov	ecx, DWORD PTR $T80761[ebp]
	call	??_GSkippedState@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN1@CollationI@2
$LN3@CollationI@2:
	mov	DWORD PTR tv81[ebp], 0
$LN1@CollationI@2:
; Line 167
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::~CEBuffer
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1CollationIterator@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::~CEBuffer
__ehhandler$??1CollationIterator@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CollationIterator@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CollationIterator@icu_56@@UAE@XZ ENDP		; icu_56::CollationIterator::~CollationIterator
PUBLIC	??1SkippedState@icu_56@@QAE@XZ			; icu_56::SkippedState::~SkippedState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSkippedState@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSkippedState@icu_56@@QAEPAXI@Z PROC			; icu_56::SkippedState::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SkippedState@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSkippedState@icu_56@@QAEPAXI@Z ENDP			; icu_56::SkippedState::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SkippedState@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SkippedState@icu_56@@QAE@XZ$0
__ehfuncinfo$??1SkippedState@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SkippedState@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SkippedState@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SkippedState@icu_56@@QAE@XZ PROC			; icu_56::SkippedState::~SkippedState, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SkippedState@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SkippedState@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1SkippedState@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SkippedState@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SkippedState@icu_56@@QAE@XZ ENDP			; icu_56::SkippedState::~SkippedState
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8CollationIterator@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
tv173 = -232						; size = 8
tv170 = -224						; size = 8
_i$73144 = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8CollationIterator@icu_56@@UBECABV01@@Z PROC		; icu_56::CollationIterator::operator==, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+360]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+368]
	cmp	edx, DWORD PTR [ecx+368]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+372]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+372]
	cmp	ecx, eax
	je	SHORT $LN6@operator
$LN5@operator:
; Line 181
	xor	al, al
	jmp	SHORT $LN7@operator
$LN6@operator:
; Line 183
	mov	DWORD PTR _i$73144[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR _i$73144[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73144[ebp], eax
$LN4@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$73144[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jge	SHORT $LN2@operator
; Line 184
	mov	eax, DWORD PTR _i$73144[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	mov	esi, eax
	mov	edi, edx
	mov	ecx, DWORD PTR _i$73144[ebp]
	push	ecx
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	mov	DWORD PTR tv170[ebp], esi
	mov	DWORD PTR tv170[ebp+4], edi
	mov	DWORD PTR tv173[ebp], eax
	mov	DWORD PTR tv173[ebp+4], edx
	mov	edx, DWORD PTR tv170[ebp]
	cmp	edx, DWORD PTR tv173[ebp]
	jne	SHORT $LN9@operator
	mov	eax, DWORD PTR tv170[ebp+4]
	cmp	eax, DWORD PTR tv173[ebp+4]
	je	SHORT $LN1@operator
$LN9@operator:
	xor	al, al
	jmp	SHORT $LN7@operator
$LN1@operator:
; Line 185
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 186
	mov	al, 1
$LN7@operator:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8CollationIterator@icu_56@@UBECABV01@@Z ENDP		; icu_56::CollationIterator::operator==
_TEXT	ENDS
PUBLIC	?clear@SkippedState@icu_56@@QAEXXZ		; icu_56::SkippedState::clear
PUBLIC	?reset@CollationIterator@icu_56@@IAEXXZ		; icu_56::CollationIterator::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@CollationIterator@icu_56@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@CollationIterator@icu_56@@IAEXXZ PROC		; icu_56::CollationIterator::reset, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], 0
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN2@reset
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?clear@SkippedState@icu_56@@QAEXXZ	; icu_56::SkippedState::clear
$LN2@reset:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@CollationIterator@icu_56@@IAEXXZ ENDP		; icu_56::CollationIterator::reset
_TEXT	ENDS
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@SkippedState@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@SkippedState@icu_56@@QAEXXZ PROC			; icu_56::SkippedState::clear, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@SkippedState@icu_56@@QAEXXZ ENDP			; icu_56::SkippedState::clear
_TEXT	ENDS
PUBLIC	?fetchCEs@CollationIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::fetchCEs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fetchCEs@CollationIterator@icu_56@@QAEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv86 = -212						; size = 8
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?fetchCEs@CollationIterator@icu_56@@QAEHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::fetchCEs, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN2@fetchCEs:
; Line 197
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@fetchCEs
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
	mov	DWORD PTR tv86[ebp], eax
	mov	DWORD PTR tv86[ebp+4], edx
	cmp	DWORD PTR tv86[ebp], 16777472		; 01000100H
	jne	SHORT $LN5@fetchCEs
	cmp	DWORD PTR tv86[ebp+4], 1
	je	SHORT $LN1@fetchCEs
$LN5@fetchCEs:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+360], edx
; Line 200
	jmp	SHORT $LN2@fetchCEs
$LN1@fetchCEs:
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 202
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?fetchCEs@CollationIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::fetchCEs
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::handleNextCE32, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationiterator.cpp
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 207
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN3@handleNext
	mov	DWORD PTR tv74[ebp], 192		; 000000c0H
	jmp	SHORT $LN4@handleNext
$LN3@handleNext:
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR tv74[ebp], eax
$LN4@handleNext:
	mov	eax, DWORD PTR tv74[ebp]
; Line 208
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::handleNextCE32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ PROC ; icu_56::CollationIterator::handleGetTrailSurrogate, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 212
	xor	eax, eax
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ ENDP ; icu_56::CollationIterator::handleGetTrailSurrogate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?foundNULTerminator@CollationIterator@icu_56@@MAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?foundNULTerminator@CollationIterator@icu_56@@MAECXZ PROC ; icu_56::CollationIterator::foundNULTerminator, COMDAT
; _this$ = ecx
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 217
	xor	al, al
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?foundNULTerminator@CollationIterator@icu_56@@MAECXZ ENDP ; icu_56::CollationIterator::foundNULTerminator
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ PROC ; icu_56::CollationIterator::forbidSurrogateCodePoints, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	xor	al, al
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ ENDP ; icu_56::CollationIterator::forbidSurrogateCodePoints
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDataCE32@CollationIterator@icu_56@@MBEIH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getDataCE32@CollationIterator@icu_56@@MBEIH@Z PROC	; icu_56::CollationIterator::getDataCE32, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
; Line 228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDataCE32@CollationIterator@icu_56@@MBEIH@Z ENDP	; icu_56::CollationIterator::getDataCE32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::getCE32FromBuilderData, COMDAT
; _this$ = ecx
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 232
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getCE32Fro@2
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 5
$LN1@getCE32Fro@2:
; Line 233
	xor	eax, eax
; Line 234
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::getCE32FromBuilderData
_TEXT	ENDS
PUBLIC	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv85 = -208						; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
_c$ = 12						; size = 4
_ce32$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextCEFromCE32, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 240
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Line 241
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@nextCEFrom
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	SHORT $LN3@nextCEFrom
; Line 243
	jmp	SHORT $LN3@nextCEFrom
$LN2@nextCEFrom:
; Line 244
	mov	eax, 1
	xor	edx, edx
$LN3@nextCEFrom:
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextCEFromCE32
_TEXT	ENDS
PUBLIC	??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA ; `icu_56::CollationIterator::appendCEsFromCE32'::`2'::__LINE__Var
PUBLIC	?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendNumericCEs
PUBLIC	?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE32FromContraction
PUBLIC	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
PUBLIC	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
PUBLIC	?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z ; icu_56::CollationIterator::getCE32FromPrefix
PUBLIC	?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::CEBuffer::appendUnsafe
PUBLIC	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@ DB '('
	DB	00H, '(', 00H, '(', 00H, 'c', 00H, ')', 00H, '&', 00H, '0', 00H
	DB	'x', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'c'
	DB	00H, '0', 00H, '0', 00H, ')', 00H, '=', 00H, '=', 00H, '0', 00H
	DB	'x', 00H, 'd', 00H, '8', 00H, '0', 00H, '0', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@ DB 'f', 00H
	DB	'o', 00H, 'r', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA DD 0faH ; `icu_56::CollationIterator::appendCEsFromCE32'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv187 = -344						; size = 8
tv165 = -340						; size = 4
tv70 = -340						; size = 4
_trail$73271 = -140					; size = 2
_v$73260 = -128						; size = 4
_t$73259 = -116						; size = 4
_jamoCE32s$73258 = -104					; size = 4
_nextCp$73238 = -92					; size = 4
_defaultCE32$73236 = -80				; size = 4
_p$73235 = -68						; size = 4
_length$73223 = -56					; size = 4
_ces$73222 = -44					; size = 4
_length$73216 = -32					; size = 4
_ce32s$73215 = -20					; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
_c$ = 12						; size = 4
_ce32$ = 16						; size = 4
_forward$ = 20						; size = 1
_errorCode$ = 24					; size = 4
?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::appendCEsFromCE32, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN60@appendCEsF:
; Line 251
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN59@appendCEsF
; Line 252
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 15			; 0000000fH
	ja	$LN57@appendCEsF
	mov	ecx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN68@appendCEsF[ecx*4]
$LN56@appendCEsF:
; Line 255
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN55@appendCEsF
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 5
$LN55@appendCEsF:
; Line 256
	jmp	$LN61@appendCEsF
$LN54@appendCEsF:
; Line 258
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 259
	jmp	$LN61@appendCEsF
$LN53@appendCEsF:
; Line 261
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 262
	jmp	$LN61@appendCEsF
$LN52@appendCEsF:
; Line 264
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN51@appendCEsF
; Line 265
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::latinCE0FromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 266
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::latinCE1FromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
$LN51@appendCEsF:
; Line 269
	jmp	$LN61@appendCEsF
$LN50@appendCEsF:
; Line 271
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _ce32s$73215[ebp], eax
; Line 272
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?lengthFromCE32@Collation@icu_56@@SAHI@Z ; icu_56::Collation::lengthFromCE32
	add	esp, 4
	mov	DWORD PTR _length$73216[ebp], eax
; Line 273
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$73216[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN49@appendCEsF
$LN48@appendCEsF:
; Line 275
	mov	eax, DWORD PTR _ce32s$73215[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv165[ebp], ecx
	mov	edx, DWORD PTR _ce32s$73215[ebp]
	add	edx, 4
	mov	DWORD PTR _ce32s$73215[ebp], edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	call	?ceFromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::CEBuffer::appendUnsafe
; Line 276
	mov	eax, DWORD PTR _length$73216[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$73216[ebp], eax
	cmp	DWORD PTR _length$73216[ebp], 0
	jg	SHORT $LN48@appendCEsF
$LN49@appendCEsF:
; Line 278
	jmp	$LN61@appendCEsF
$LN45@appendCEsF:
; Line 281
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _ces$73222[ebp], eax
; Line 282
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?lengthFromCE32@Collation@icu_56@@SAHI@Z ; icu_56::Collation::lengthFromCE32
	add	esp, 4
	mov	DWORD PTR _length$73223[ebp], eax
; Line 283
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$73223[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@appendCEsF
$LN43@appendCEsF:
; Line 285
	mov	eax, DWORD PTR _ces$73222[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv187[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR tv187[ebp+4], edx
	mov	eax, DWORD PTR _ces$73222[ebp]
	add	eax, 8
	mov	DWORD PTR _ces$73222[ebp], eax
	mov	ecx, DWORD PTR tv187[ebp+4]
	push	ecx
	mov	edx, DWORD PTR tv187[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::CEBuffer::appendUnsafe
; Line 286
	mov	eax, DWORD PTR _length$73223[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$73223[ebp], eax
	cmp	DWORD PTR _length$73223[ebp], 0
	jg	SHORT $LN43@appendCEsF
$LN44@appendCEsF:
; Line 288
	jmp	$LN61@appendCEsF
$LN40@appendCEsF:
; Line 291
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 292
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN39@appendCEsF
	jmp	$LN61@appendCEsF
$LN39@appendCEsF:
; Line 293
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN38@appendCEsF
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _d$[ebp], edx
; Line 295
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
$LN38@appendCEsF:
; Line 297
	jmp	$LN57@appendCEsF
$LN37@appendCEsF:
; Line 299
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	je	SHORT $LN36@appendCEsF
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@appendCEsF:
; Line 300
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z ; icu_56::CollationIterator::getCE32FromPrefix
	mov	DWORD PTR _ce32$[ebp], eax
; Line 301
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	je	SHORT $LN35@appendCEsF
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@appendCEsF:
; Line 302
	jmp	$LN57@appendCEsF
$LN34@appendCEsF:
; Line 304
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _p$73235[ebp], eax
; Line 305
	mov	eax, DWORD PTR _p$73235[ebp]
	push	eax
	call	?readCE32@CollationData@icu_56@@SAIPB_W@Z ; icu_56::CollationData::readCE32
	add	esp, 4
	mov	DWORD PTR _defaultCE32$73236[ebp], eax
; Line 306
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	jne	SHORT $LN33@appendCEsF
; Line 309
	mov	eax, DWORD PTR _defaultCE32$73236[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 310
	jmp	$LN57@appendCEsF
$LN33@appendCEsF:
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	jne	$LN32@appendCEsF
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jge	SHORT $LN32@appendCEsF
; Line 316
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nextCp$73238[ebp], eax
; Line 317
	cmp	DWORD PTR _nextCp$73238[ebp], 0
	jge	SHORT $LN31@appendCEsF
; Line 319
	mov	eax, DWORD PTR _defaultCE32$73236[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 320
	jmp	$LN57@appendCEsF
; Line 321
	jmp	SHORT $LN30@appendCEsF
$LN31@appendCEsF:
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 512				; 00000200H
	je	SHORT $LN30@appendCEsF
	mov	eax, DWORD PTR _nextCp$73238[ebp]
	push	eax
	call	?mayHaveLccc@CollationFCD@icu_56@@SACH@Z ; icu_56::CollationFCD::mayHaveLccc
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN30@appendCEsF
; Line 325
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 326
	mov	eax, DWORD PTR _defaultCE32$73236[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 327
	jmp	$LN57@appendCEsF
$LN30@appendCEsF:
; Line 329
	jmp	SHORT $LN28@appendCEsF
$LN32@appendCEsF:
; Line 330
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _nextCp$73238[ebp], eax
; Line 331
	cmp	DWORD PTR _nextCp$73238[ebp], 0
	jge	SHORT $LN27@appendCEsF
; Line 333
	mov	eax, DWORD PTR _defaultCE32$73236[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 334
	jmp	$LN57@appendCEsF
; Line 335
	jmp	SHORT $LN28@appendCEsF
$LN27@appendCEsF:
; Line 336
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 512				; 00000200H
	je	SHORT $LN28@appendCEsF
	mov	eax, DWORD PTR _nextCp$73238[ebp]
	push	eax
	call	?mayHaveLccc@CollationFCD@icu_56@@SACH@Z ; icu_56::CollationFCD::mayHaveLccc
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN28@appendCEsF
; Line 339
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 340
	mov	eax, DWORD PTR _defaultCE32$73236[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 341
	jmp	$LN57@appendCEsF
$LN28@appendCEsF:
; Line 344
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nextCp$73238[ebp]
	push	ecx
	mov	edx, DWORD PTR _defaultCE32$73236[ebp]
	push	edx
	mov	eax, DWORD PTR _p$73235[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE32FromContraction
	mov	DWORD PTR _ce32$[ebp], eax
; Line 345
	cmp	DWORD PTR _ce32$[ebp], 1
	jne	SHORT $LN24@appendCEsF
; Line 348
	jmp	$LN61@appendCEsF
$LN24@appendCEsF:
; Line 350
	jmp	$LN57@appendCEsF
$LN23@appendCEsF:
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+372]
	test	ecx, ecx
	je	SHORT $LN22@appendCEsF
; Line 354
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendNumericCEs
; Line 355
	jmp	$LN61@appendCEsF
; Line 356
	jmp	SHORT $LN20@appendCEsF
$LN22@appendCEsF:
; Line 358
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 359
	jmp	$LN57@appendCEsF
$LN20@appendCEsF:
; Line 362
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN63@appendCEsF
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
	add	eax, 112				; 00000070H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN63@appendCEsF:
; Line 363
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	je	SHORT $LN19@appendCEsF
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@appendCEsF
; Line 365
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	push	16777472				; 01000100H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 366
	jmp	$LN61@appendCEsF
; Line 367
	jmp	SHORT $LN17@appendCEsF
$LN19@appendCEsF:
; Line 369
	mov	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ce32$[ebp], edx
; Line 370
	jmp	$LN57@appendCEsF
$LN17@appendCEsF:
; Line 373
	mov	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _jamoCE32s$73258[ebp], ecx
; Line 374
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 44032				; 0000ac00H
	mov	DWORD PTR _c$[ebp], eax
; Line 375
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _t$73259[ebp], edx
; Line 376
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 377
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	mov	DWORD PTR _v$73260[ebp], edx
; Line 378
	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, 21					; 00000015H
	idiv	ecx
	mov	DWORD PTR _c$[ebp], eax
; Line 379
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 256				; 00000100H
	je	$LN16@appendCEsF
; Line 382
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	xor	ecx, ecx
	cmp	DWORD PTR _t$73259[ebp], 0
	setne	cl
	add	ecx, 2
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	edx, al
	test	edx, edx
	je	$LN15@appendCEsF
; Line 383
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _jamoCE32s$73258[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	?ceFromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 384
	mov	eax, DWORD PTR _v$73260[ebp]
	mov	ecx, DWORD PTR _jamoCE32s$73258[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+76]
	push	edx
	call	?ceFromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 386
	cmp	DWORD PTR _t$73259[ebp], 0
	je	SHORT $LN15@appendCEsF
; Line 387
	mov	eax, DWORD PTR _t$73259[ebp]
	mov	ecx, DWORD PTR _jamoCE32s$73258[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+156]
	push	edx
	call	?ceFromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::CEBuffer::appendUnsafe
$LN15@appendCEsF:
; Line 390
	jmp	$LN61@appendCEsF
; Line 391
	jmp	SHORT $LN11@appendCEsF
$LN16@appendCEsF:
; Line 394
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _jamoCE32s$73258[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Line 395
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _forward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$73260[ebp]
	mov	eax, DWORD PTR _jamoCE32s$73258[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+76]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Line 396
	cmp	DWORD PTR _t$73259[ebp], 0
	jne	SHORT $LN12@appendCEsF
	jmp	$LN61@appendCEsF
$LN12@appendCEsF:
; Line 401
	mov	eax, DWORD PTR _t$73259[ebp]
	mov	ecx, DWORD PTR _jamoCE32s$73258[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+156]
	mov	DWORD PTR _ce32$[ebp], edx
; Line 402
	mov	DWORD PTR _c$[ebp], -1
; Line 403
	jmp	$LN57@appendCEsF
$LN11@appendCEsF:
; Line 407
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	jne	SHORT $LN64@appendCEsF
	mov	ecx, DWORD PTR ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
	add	ecx, 157				; 0000009dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BA@JBNGIGCH@?$AAf?$AAo?$AAr?$AAw?$AAa?$AAr?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN64@appendCEsF:
; Line 408
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	je	SHORT $LN65@appendCEsF
	mov	ecx, DWORD PTR ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
	add	ecx, 158				; 0000009eH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DG@KDPMNPGK@?$AA?$CI?$AA?$CI?$AA?$CI?$AAc?$AA?$CJ?$AA?$CG?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAc?$AA0?$AA0?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AAx?$AAd?$AA8?$AA0?$AA0?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN65@appendCEsF:
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _trail$73271[ebp], ax
	movzx	ecx, WORD PTR _trail$73271[ebp]
	and	ecx, -1024				; fffffc00H
	cmp	ecx, 56320				; 0000dc00H
	jne	SHORT $LN10@appendCEsF
; Line 411
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR _trail$73271[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
; Line 412
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 768				; 00000300H
	mov	DWORD PTR _ce32$[ebp], eax
; Line 413
	jne	SHORT $LN9@appendCEsF
; Line 414
	mov	DWORD PTR _ce32$[ebp], -1
; Line 415
	jmp	SHORT $LN8@appendCEsF
$LN9@appendCEsF:
; Line 416
	cmp	DWORD PTR _ce32$[ebp], 256		; 00000100H
	je	SHORT $LN6@appendCEsF
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
	mov	DWORD PTR _ce32$[ebp], eax
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN8@appendCEsF
$LN6@appendCEsF:
; Line 418
	mov	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _d$[ebp], ecx
; Line 419
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
	mov	DWORD PTR _ce32$[ebp], eax
$LN8@appendCEsF:
; Line 421
	jmp	SHORT $LN5@appendCEsF
$LN10@appendCEsF:
; Line 423
	mov	DWORD PTR _ce32$[ebp], -1
$LN5@appendCEsF:
; Line 425
	jmp	$LN57@appendCEsF
$LN4@appendCEsF:
; Line 428
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN66@appendCEsF
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
	add	eax, 178				; 000000b2H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN66@appendCEsF:
; Line 429
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 430
	jmp	$LN61@appendCEsF
$LN3@appendCEsF:
; Line 432
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN67@appendCEsF
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@3@HICAAW4UErrorCode@@@Z@4JA
	add	eax, 182				; 000000b6H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@FJLMPOIC@?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN67@appendCEsF:
; Line 433
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@appendCEsF
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@appendCEsF
; Line 434
	mov	DWORD PTR _ce32$[ebp], -195323		; fffd0505H
; Line 435
	jmp	SHORT $LN57@appendCEsF
; Line 436
	jmp	SHORT $LN57@appendCEsF
$LN2@appendCEsF:
; Line 437
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 438
	jmp	SHORT $LN61@appendCEsF
$LN57@appendCEsF:
; Line 441
	jmp	$LN60@appendCEsF
$LN59@appendCEsF:
; Line 442
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromSimpleCE32
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
$LN61@appendCEsF:
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN68@appendCEsF:
	DD	$LN56@appendCEsF
	DD	$LN54@appendCEsF
	DD	$LN53@appendCEsF
	DD	$LN56@appendCEsF
	DD	$LN52@appendCEsF
	DD	$LN50@appendCEsF
	DD	$LN45@appendCEsF
	DD	$LN40@appendCEsF
	DD	$LN37@appendCEsF
	DD	$LN34@appendCEsF
	DD	$LN23@appendCEsF
	DD	$LN20@appendCEsF
	DD	$LN17@appendCEsF
	DD	$LN11@appendCEsF
	DD	$LN4@appendCEsF
	DD	$LN3@appendCEsF
?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::appendCEsFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_ce$ = 8						; size = 8
_errorCode$ = 16					; size = 4
?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::CEBuffer::append, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationiterator.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 40			; 00000028H
	jl	SHORT $LN1@append
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append
$LN1@append:
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, DWORD PTR _ce$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ce$[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN3@append:
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::CEBuffer::append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_ce$ = 8						; size = 8
?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z PROC ; icu_56::CollationIterator::CEBuffer::appendUnsafe, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, DWORD PTR _ce$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ce$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?appendUnsafe@CEBuffer@CollationIterator@icu_56@@QAEX_J@Z ENDP ; icu_56::CollationIterator::CEBuffer::appendUnsafe
_TEXT	ENDS
EXTRN	__imp_??1UCharsTrie@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?getValue@UCharsTrie@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z:PROC
EXTRN	__imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\collationiterator.cpp
xdata$x	SEGMENT
__unwindtable$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T80827 = -296						; size = 4
_match$73301 = -92					; size = 4
_c$73299 = -80						; size = 4
_prefixes$ = -68					; size = 16
_lookBehind$ = -44					; size = 4
_p$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_ce32$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::getCE32FromPrefix, COMDAT
; _this$ = ecx
; Line 447
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 448
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _p$[ebp], eax
; Line 449
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?readCE32@CollationData@icu_56@@SAIPB_W@Z ; icu_56::CollationData::readCE32
	add	esp, 4
	mov	DWORD PTR _ce32$[ebp], eax
; Line 450
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 452
	mov	DWORD PTR _lookBehind$[ebp], 0
; Line 453
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixes$[ebp]
	call	DWORD PTR __imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN5@getCE32Fro@3:
; Line 455
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73299[ebp], eax
; Line 456
	cmp	DWORD PTR _c$73299[ebp], 0
	jge	SHORT $LN3@getCE32Fro@3
	jmp	SHORT $LN4@getCE32Fro@3
$LN3@getCE32Fro@3:
; Line 457
	mov	eax, DWORD PTR _lookBehind$[ebp]
	add	eax, 1
	mov	DWORD PTR _lookBehind$[ebp], eax
; Line 458
	mov	esi, esp
	mov	eax, DWORD PTR _c$73299[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixes$[ebp]
	call	DWORD PTR __imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _match$73301[ebp], eax
; Line 459
	cmp	DWORD PTR _match$73301[ebp], 2
	jl	SHORT $LN2@getCE32Fro@3
; Line 460
	mov	esi, esp
	lea	ecx, DWORD PTR _prefixes$[ebp]
	call	DWORD PTR __imp_?getValue@UCharsTrie@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
$LN2@getCE32Fro@3:
; Line 462
	mov	eax, DWORD PTR _match$73301[ebp]
	and	eax, 1
	jne	SHORT $LN1@getCE32Fro@3
	jmp	SHORT $LN4@getCE32Fro@3
$LN1@getCE32Fro@3:
; Line 463
	jmp	SHORT $LN5@getCE32Fro@3
$LN4@getCE32Fro@3:
; Line 464
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lookBehind$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 465
	mov	eax, DWORD PTR _ce32$[ebp]
	mov	DWORD PTR $T80827[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T80827[ebp]
; Line 466
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getCE32Fro@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN12@getCE32Fro@3:
	DD	1
	DD	$LN11@getCE32Fro@3
$LN11@getCE32Fro@3:
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN9@getCE32Fro@3
$LN9@getCE32Fro@3:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _prefixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCE32FromPrefix@CollationIterator@icu_56@@AAEIPBUCollationData@2@IAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::getCE32FromPrefix
PUBLIC	?incBeyond@SkippedState@icu_56@@QAEXXZ		; icu_56::SkippedState::incBeyond
PUBLIC	?isEmpty@SkippedState@icu_56@@QBECXZ		; icu_56::SkippedState::isEmpty
PUBLIC	?next@SkippedState@icu_56@@QAEHXZ		; icu_56::SkippedState::next
PUBLIC	?hasNext@SkippedState@icu_56@@QBECXZ		; icu_56::SkippedState::hasNext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextSkippedCodePoint, COMDAT
; _this$ = ecx
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN4@nextSkippe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?hasNext@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::hasNext
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@nextSkippe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?next@SkippedState@icu_56@@QAEHXZ	; icu_56::SkippedState::next
	jmp	$LN5@nextSkippe
$LN4@nextSkippe:
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jne	SHORT $LN3@nextSkippe
	or	eax, -1
	jmp	SHORT $LN5@nextSkippe
$LN3@nextSkippe:
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN2@nextSkippe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@nextSkippe
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN2@nextSkippe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?incBeyond@SkippedState@icu_56@@QAEXXZ	; icu_56::SkippedState::incBeyond
$LN2@nextSkippe:
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jle	SHORT $LN1@nextSkippe
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN1@nextSkippe
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], ecx
$LN1@nextSkippe:
; Line 475
	mov	eax, DWORD PTR _c$[ebp]
$LN5@nextSkippe:
; Line 476
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextSkippedCodePoint
_TEXT	ENDS
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEmpty@SkippedState@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@SkippedState@icu_56@@QBECXZ PROC		; icu_56::SkippedState::isEmpty, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@SkippedState@icu_56@@QBECXZ ENDP		; icu_56::SkippedState::isEmpty
_TEXT	ENDS
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasNext@SkippedState@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasNext@SkippedState@icu_56@@QBECXZ PROC		; icu_56::SkippedState::hasNext, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+128], eax
	setl	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasNext@SkippedState@icu_56@@QBECXZ ENDP		; icu_56::SkippedState::hasNext
_TEXT	ENDS
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@SkippedState@icu_56@@QAEHXZ
_TEXT	SEGMENT
_c$ = -20						; size = 4
_this$ = -8						; size = 4
?next@SkippedState@icu_56@@QAEHXZ PROC			; icu_56::SkippedState::next, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
; Line 73
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+128]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 74
	mov	eax, DWORD PTR _c$[ebp]
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?next@SkippedState@icu_56@@QAEHXZ ENDP			; icu_56::SkippedState::next
_TEXT	ENDS
PUBLIC	??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, 'h', 00H, 'a', 00H, 's', 00H, 'N', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?incBeyond@SkippedState@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?incBeyond@SkippedState@icu_56@@QAEXXZ PROC		; icu_56::SkippedState::incBeyond, COMDAT
; _this$ = ecx
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 79
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasNext@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::hasNext
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@incBeyond
	mov	esi, esp
	push	79					; 0000004fH
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@EFBLGDGJ@?$AA?$CB?$AAh?$AAa?$AAs?$AAN?$AAe?$AAx?$AAt?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@incBeyond:
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], ecx
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?incBeyond@SkippedState@icu_56@@QAEXXZ ENDP		; icu_56::SkippedState::incBeyond
_TEXT	ENDS
PUBLIC	?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z ; icu_56::SkippedState::backwardNumCodePoints
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::backwardNumSkipped, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN2@backwardNu
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@backwardNu
; Line 481
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z ; icu_56::SkippedState::backwardNumCodePoints
	mov	DWORD PTR _n$[ebp], eax
$LN2@backwardNu:
; Line 483
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 484
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jl	SHORT $LN3@backwardNu
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], ecx
$LN3@backwardNu:
; Line 485
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::backwardNumSkipped
_TEXT	ENDS
EXTRN	__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z
_TEXT	SEGMENT
_beyond$ = -32						; size = 4
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z PROC ; icu_56::SkippedState::backwardNumCodePoints, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	sub	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR _beyond$[ebp], ecx
; Line 89
	cmp	DWORD PTR _beyond$[ebp], 0
	jle	SHORT $LN4@backwardNu@2
; Line 90
	mov	eax, DWORD PTR _beyond$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jl	SHORT $LN3@backwardNu@2
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], ecx
; Line 93
	mov	eax, DWORD PTR _n$[ebp]
	jmp	SHORT $LN5@backwardNu@2
; Line 94
	jmp	SHORT $LN2@backwardNu@2
$LN3@backwardNu@2:
; Line 96
	mov	eax, DWORD PTR _beyond$[ebp]
	sub	eax, DWORD PTR _n$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], eax
; Line 97
	mov	eax, DWORD PTR _beyond$[ebp]
	jmp	SHORT $LN5@backwardNu@2
$LN2@backwardNu@2:
; Line 99
	jmp	SHORT $LN5@backwardNu@2
$LN4@backwardNu@2:
; Line 101
	mov	eax, DWORD PTR _n$[ebp]
	neg	eax
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
; Line 102
	xor	eax, eax
$LN5@backwardNu@2:
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?backwardNumCodePoints@SkippedState@icu_56@@QAEHH@Z ENDP ; icu_56::SkippedState::backwardNumCodePoints
_TEXT	ENDS
PUBLIC	?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE32FromDiscontiguousContraction
PUBLIC	?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ; icu_56::SkippedState::saveTrieState
EXTRN	__imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T80855 = -320						; size = 4
$T80856 = -308						; size = 4
$T80857 = -296						; size = 4
_nextCp$73339 = -92					; size = 4
_match$ = -80						; size = 4
_suffixes$ = -68					; size = 16
_sinceMatch$ = -44					; size = 4
_lookAhead$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_contractionCE32$ = 12					; size = 4
_p$ = 16						; size = 4
_ce32$ = 20						; size = 4
_c$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextCE32FromContraction, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 495
	mov	DWORD PTR _lookAhead$[ebp], 1
; Line 497
	mov	DWORD PTR _sinceMatch$[ebp], 1
; Line 501
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_??0UCharsTrie@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN15@nextCE32Fr
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@nextCE32Fr
	lea	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ; icu_56::SkippedState::saveTrieState
$LN15@nextCE32Fr:
; Line 503
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _match$[ebp], eax
$LN14@nextCE32Fr:
; Line 506
	cmp	DWORD PTR _match$[ebp], 2
	jl	$LN12@nextCE32Fr
; Line 507
	mov	esi, esp
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?getValue@UCharsTrie@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 508
	mov	eax, DWORD PTR _match$[ebp]
	and	eax, 1
	je	SHORT $LN10@nextCE32Fr
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN11@nextCE32Fr
$LN10@nextCE32Fr:
; Line 509
	mov	eax, DWORD PTR _ce32$[ebp]
	mov	DWORD PTR $T80855[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T80855[ebp]
	jmp	$LN16@nextCE32Fr
$LN11@nextCE32Fr:
; Line 511
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN9@nextCE32Fr
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@nextCE32Fr
	lea	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ; icu_56::SkippedState::saveTrieState
$LN9@nextCE32Fr:
; Line 512
	mov	DWORD PTR _sinceMatch$[ebp], 1
	jmp	$LN8@nextCE32Fr
$LN12@nextCE32Fr:
; Line 513
	cmp	DWORD PTR _match$[ebp], 0
	je	SHORT $LN6@nextCE32Fr
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _nextCp$73339[ebp], eax
	cmp	DWORD PTR _nextCp$73339[ebp], 0
	jge	$LN7@nextCE32Fr
$LN6@nextCE32Fr:
; Line 520
	mov	eax, DWORD PTR _contractionCE32$[ebp]
	and	eax, 1024				; 00000400H
	je	$LN5@nextCE32Fr
	mov	eax, DWORD PTR _contractionCE32$[ebp]
	and	eax, 256				; 00000100H
	je	SHORT $LN4@nextCE32Fr
	mov	eax, DWORD PTR _sinceMatch$[ebp]
	cmp	eax, DWORD PTR _lookAhead$[ebp]
	jge	$LN5@nextCE32Fr
$LN4@nextCE32Fr:
; Line 525
	cmp	DWORD PTR _sinceMatch$[ebp], 1
	jle	SHORT $LN3@nextCE32Fr
; Line 528
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sinceMatch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 529
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _c$[ebp], eax
; Line 530
	mov	eax, DWORD PTR _sinceMatch$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _lookAhead$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _lookAhead$[ebp], ecx
; Line 531
	mov	DWORD PTR _sinceMatch$[ebp], 1
$LN3@nextCE32Fr:
; Line 533
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getFCD16@CollationData@icu_56@@QBEGH@Z	; icu_56::CollationData::getFCD16
	movzx	ecx, ax
	cmp	ecx, 255				; 000000ffH
	jle	SHORT $LN5@nextCE32Fr
; Line 535
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lookAhead$[ebp]
	push	edx
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	lea	ecx, DWORD PTR _suffixes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE32FromDiscontiguousContraction
	mov	DWORD PTR $T80856[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T80856[ebp]
	jmp	SHORT $LN16@nextCE32Fr
$LN5@nextCE32Fr:
; Line 538
	jmp	SHORT $LN13@nextCE32Fr
; Line 539
	jmp	SHORT $LN8@nextCE32Fr
$LN7@nextCE32Fr:
; Line 544
	mov	eax, DWORD PTR _nextCp$73339[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 545
	mov	eax, DWORD PTR _sinceMatch$[ebp]
	add	eax, 1
	mov	DWORD PTR _sinceMatch$[ebp], eax
$LN8@nextCE32Fr:
; Line 547
	mov	eax, DWORD PTR _lookAhead$[ebp]
	add	eax, 1
	mov	DWORD PTR _lookAhead$[ebp], eax
; Line 548
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _match$[ebp], eax
; Line 549
	jmp	$LN14@nextCE32Fr
$LN13@nextCE32Fr:
; Line 550
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sinceMatch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 551
	mov	eax, DWORD PTR _ce32$[ebp]
	mov	DWORD PTR $T80857[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T80857[ebp]
$LN16@nextCE32Fr:
; Line 552
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@nextCE32Fr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN22@nextCE32Fr:
	DD	1
	DD	$LN21@nextCE32Fr
$LN21@nextCE32Fr:
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN19@nextCE32Fr
$LN19@nextCE32Fr:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_??1UCharsTrie@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nextCE32FromContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@IPB_WIHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextCE32FromContraction
EXTRN	__imp_?saveState@UCharsTrie@icu_56@@QBEABV12@AAVState@12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_trie$ = 8						; size = 4
?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z PROC ; icu_56::SkippedState::saveTrieState, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _trie$[ebp]
	call	DWORD PTR __imp_?saveState@UCharsTrie@icu_56@@QBEABV12@AAVState@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ENDP ; icu_56::SkippedState::saveTrieState
_TEXT	ENDS
PUBLIC	?replaceMatch@SkippedState@icu_56@@QAEXXZ	; icu_56::SkippedState::replaceMatch
PUBLIC	?skip@SkippedState@icu_56@@QAEXH@Z		; icu_56::SkippedState::skip
PUBLIC	?recordMatch@SkippedState@icu_56@@QAEXXZ	; icu_56::SkippedState::recordMatch
PUBLIC	?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z	; icu_56::SkippedState::setFirstSkipped
PUBLIC	?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z ; icu_56::SkippedState::resetToTrieState
PUBLIC	??0SkippedState@icu_56@@QAE@XZ			; icu_56::SkippedState::SkippedState
PUBLIC	??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA ; `icu_56::CollationIterator::nextCE32FromDiscontiguousContraction'::`2'::__LINE__Var
EXTRN	__imp_?reset@UCharsTrie@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT ??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@ DB 'f'
	DB	00H, 'c', 00H, 'd', 00H, '1', 00H, '6', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, 'x', 00H, 'f', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA DD 022eH ; `icu_56::CollationIterator::nextCE32FromDiscontiguousContraction'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv143 = -328						; size = 4
$T80873 = -320						; size = 4
$T80874 = -308						; size = 4
_isTopDiscontiguous$ = -101				; size = 1
_match$73393 = -92					; size = 4
_sinceMatch$ = -80					; size = 4
_i$73384 = -68						; size = 4
_prevCC$ = -53						; size = 1
_nextCp$ = -44						; size = 4
_fcd16$ = -32						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_suffixes$ = 12						; size = 4
_ce32$ = 16						; size = 4
_lookAhead$ = 20					; size = 4
_c$ = 24						; size = 4
_errorCode$ = 28					; size = 4
?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextCE32FromDiscontiguousContraction, COMDAT
; _this$ = ecx
; Line 558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN25@nextCE32Fr@2
	xor	eax, eax
	jmp	$LN26@nextCE32Fr@2
$LN25@nextCE32Fr@2:
; Line 578
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getFCD16@CollationData@icu_56@@QBEGH@Z	; icu_56::CollationData::getFCD16
	mov	WORD PTR _fcd16$[ebp], ax
; Line 579
	movzx	eax, WORD PTR _fcd16$[ebp]
	cmp	eax, 255				; 000000ffH
	jg	SHORT $LN28@nextCE32Fr@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@3@AAVUCharsTrie@3@IHHAAW4UErrorCode@@@Z@4JA
	add	ecx, 21					; 00000015H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BK@OAIHKBPM@?$AAf?$AAc?$AAd?$AA1?$AA6?$AA?5?$AA?$DO?$AA?5?$AA0?$AAx?$AAf?$AAf?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@nextCE32Fr@2:
; Line 580
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _nextCp$[ebp], eax
; Line 581
	cmp	DWORD PTR _nextCp$[ebp], 0
	jge	SHORT $LN24@nextCE32Fr@2
; Line 583
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 584
	mov	eax, DWORD PTR _ce32$[ebp]
	jmp	$LN26@nextCE32Fr@2
$LN24@nextCE32Fr@2:
; Line 586
	mov	eax, DWORD PTR _lookAhead$[ebp]
	add	eax, 1
	mov	DWORD PTR _lookAhead$[ebp], eax
; Line 587
	mov	al, BYTE PTR _fcd16$[ebp]
	mov	BYTE PTR _prevCC$[ebp], al
; Line 588
	mov	eax, DWORD PTR _nextCp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getFCD16@CollationData@icu_56@@QBEGH@Z	; icu_56::CollationData::getFCD16
	mov	WORD PTR _fcd16$[ebp], ax
; Line 589
	movzx	eax, WORD PTR _fcd16$[ebp]
	cmp	eax, 255				; 000000ffH
	jg	SHORT $LN23@nextCE32Fr@2
; Line 591
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 592
	mov	eax, DWORD PTR _ce32$[ebp]
	jmp	$LN26@nextCE32Fr@2
$LN23@nextCE32Fr@2:
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN21@nextCE32Fr@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	je	$LN22@nextCE32Fr@2
$LN21@nextCE32Fr@2:
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	jne	$LN20@nextCE32Fr@2
; Line 600
	mov	esi, esp
	push	148					; 00000094H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T80874[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T80874[ebp], 0
	je	SHORT $LN29@nextCE32Fr@2
	mov	ecx, DWORD PTR $T80874[ebp]
	call	??0SkippedState@icu_56@@QAE@XZ		; icu_56::SkippedState::SkippedState
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN30@nextCE32Fr@2
$LN29@nextCE32Fr@2:
	mov	DWORD PTR tv143[ebp], 0
$LN30@nextCE32Fr@2:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T80873[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T80873[ebp]
	mov	DWORD PTR [ecx+364], edx
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+364], 0
	jne	SHORT $LN20@nextCE32Fr@2
; Line 602
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 603
	xor	eax, eax
	jmp	$LN26@nextCE32Fr@2
$LN20@nextCE32Fr@2:
; Line 606
	mov	esi, esp
	mov	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?reset@UCharsTrie@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 607
	cmp	DWORD PTR _lookAhead$[ebp], 2
	jle	$LN18@nextCE32Fr@2
; Line 609
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lookAhead$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 610
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?firstForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 611
	mov	DWORD PTR _i$73384[ebp], 3
	jmp	SHORT $LN17@nextCE32Fr@2
$LN16@nextCE32Fr@2:
	mov	eax, DWORD PTR _i$73384[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73384[ebp], eax
$LN17@nextCE32Fr@2:
	mov	eax, DWORD PTR _i$73384[ebp]
	cmp	eax, DWORD PTR _lookAhead$[ebp]
	jge	SHORT $LN15@nextCE32Fr@2
; Line 612
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 613
	jmp	SHORT $LN16@nextCE32Fr@2
$LN15@nextCE32Fr@2:
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@nextCE32Fr@2:
; Line 617
	mov	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ; icu_56::SkippedState::saveTrieState
; Line 618
	jmp	SHORT $LN14@nextCE32Fr@2
$LN22@nextCE32Fr@2:
; Line 620
	mov	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z ; icu_56::SkippedState::resetToTrieState
$LN14@nextCE32Fr@2:
; Line 623
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z ; icu_56::SkippedState::setFirstSkipped
; Line 625
	mov	DWORD PTR _sinceMatch$[ebp], 2
; Line 626
	mov	eax, DWORD PTR _nextCp$[ebp]
	mov	DWORD PTR _c$[ebp], eax
$LN13@nextCE32Fr@2:
; Line 630
	movzx	eax, BYTE PTR _prevCC$[ebp]
	movzx	ecx, WORD PTR _fcd16$[ebp]
	sar	ecx, 8
	cmp	eax, ecx
	jge	SHORT $LN11@nextCE32Fr@2
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?nextForCodePoint@UCharsTrie@icu_56@@QAE?AW4UStringTrieResult@@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _match$73393[ebp], eax
	cmp	DWORD PTR _match$73393[ebp], 2
	jl	SHORT $LN11@nextCE32Fr@2
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _suffixes$[ebp]
	call	DWORD PTR __imp_?getValue@UCharsTrie@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 634
	mov	DWORD PTR _sinceMatch$[ebp], 0
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?recordMatch@SkippedState@icu_56@@QAEXXZ ; icu_56::SkippedState::recordMatch
; Line 636
	mov	eax, DWORD PTR _match$73393[ebp]
	and	eax, 1
	jne	SHORT $LN10@nextCE32Fr@2
	jmp	$LN12@nextCE32Fr@2
$LN10@nextCE32Fr@2:
; Line 637
	mov	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?saveTrieState@SkippedState@icu_56@@QAEXABVUCharsTrie@2@@Z ; icu_56::SkippedState::saveTrieState
; Line 638
	jmp	SHORT $LN9@nextCE32Fr@2
$LN11@nextCE32Fr@2:
; Line 640
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?skip@SkippedState@icu_56@@QAEXH@Z	; icu_56::SkippedState::skip
; Line 641
	mov	eax, DWORD PTR _suffixes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+364]
	call	?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z ; icu_56::SkippedState::resetToTrieState
; Line 642
	mov	al, BYTE PTR _fcd16$[ebp]
	mov	BYTE PTR _prevCC$[ebp], al
$LN9@nextCE32Fr@2:
; Line 644
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextSkippedCodePoint@CollationIterator@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextSkippedCodePoint
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN8@nextCE32Fr@2
	jmp	SHORT $LN12@nextCE32Fr@2
$LN8@nextCE32Fr@2:
; Line 645
	mov	eax, DWORD PTR _sinceMatch$[ebp]
	add	eax, 1
	mov	DWORD PTR _sinceMatch$[ebp], eax
; Line 646
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getFCD16@CollationData@icu_56@@QBEGH@Z	; icu_56::CollationData::getFCD16
	mov	WORD PTR _fcd16$[ebp], ax
; Line 647
	movzx	eax, WORD PTR _fcd16$[ebp]
	cmp	eax, 255				; 000000ffH
	jg	SHORT $LN7@nextCE32Fr@2
; Line 649
	jmp	SHORT $LN12@nextCE32Fr@2
$LN7@nextCE32Fr@2:
; Line 651
	jmp	$LN13@nextCE32Fr@2
$LN12@nextCE32Fr@2:
; Line 652
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sinceMatch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?backwardNumSkipped@CollationIterator@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::backwardNumSkipped
; Line 653
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	mov	BYTE PTR _isTopDiscontiguous$[ebp], al
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?replaceMatch@SkippedState@icu_56@@QAEXXZ ; icu_56::SkippedState::replaceMatch
; Line 655
	movsx	eax, BYTE PTR _isTopDiscontiguous$[ebp]
	test	eax, eax
	je	$LN6@nextCE32Fr@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?isEmpty@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::isEmpty
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN6@nextCE32Fr@2
; Line 660
	mov	DWORD PTR _c$[ebp], -1
$LN5@nextCE32Fr@2:
; Line 662
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?hasNext@SkippedState@icu_56@@QBECXZ	; icu_56::SkippedState::hasNext
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@nextCE32Fr@2
	jmp	SHORT $LN4@nextCE32Fr@2
$LN3@nextCE32Fr@2:
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?next@SkippedState@icu_56@@QAEHXZ	; icu_56::SkippedState::next
	mov	DWORD PTR _c$[ebp], eax
; Line 667
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 668
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN2@nextCE32Fr@2
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _d$[ebp], edx
; Line 670
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 671
	jmp	SHORT $LN1@nextCE32Fr@2
$LN2@nextCE32Fr@2:
; Line 672
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _d$[ebp], ecx
$LN1@nextCE32Fr@2:
; Line 677
	jmp	$LN5@nextCE32Fr@2
$LN4@nextCE32Fr@2:
; Line 678
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	call	?clear@SkippedState@icu_56@@QAEXXZ	; icu_56::SkippedState::clear
; Line 679
	mov	DWORD PTR _ce32$[ebp], 1
$LN6@nextCE32Fr@2:
; Line 681
	mov	eax, DWORD PTR _ce32$[ebp]
$LN26@nextCE32Fr@2:
; Line 682
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T80874[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nextCE32FromDiscontiguousContraction@CollationIterator@icu_56@@AAEIPBUCollationData@2@AAVUCharsTrie@2@IHHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextCE32FromDiscontiguousContraction
PUBLIC	??0State@UCharsTrie@icu_56@@QAE@XZ		; icu_56::UCharsTrie::State::State
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SkippedState@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$1
__ehfuncinfo$??0SkippedState@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SkippedState@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SkippedState@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0SkippedState@icu_56@@QAE@XZ PROC			; icu_56::SkippedState::SkippedState, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SkippedState@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0State@UCharsTrie@icu_56@@QAE@XZ	; icu_56::UCharsTrie::State::State
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0SkippedState@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0SkippedState@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SkippedState@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SkippedState@icu_56@@QAE@XZ ENDP			; icu_56::SkippedState::SkippedState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0State@UCharsTrie@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0State@UCharsTrie@icu_56@@QAE@XZ PROC			; icu_56::UCharsTrie::State::State, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\ucharstrie.h
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0State@UCharsTrie@icu_56@@QAE@XZ ENDP			; icu_56::UCharsTrie::State::State
_TEXT	ENDS
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z PROC	; icu_56::SkippedState::setFirstSkipped, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationiterator.cpp
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 108
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setFirstSkipped@SkippedState@icu_56@@QAEXH@Z ENDP	; icu_56::SkippedState::setFirstSkipped
_TEXT	ENDS
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skip@SkippedState@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?skip@SkippedState@icu_56@@QAEXH@Z PROC			; icu_56::SkippedState::skip, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skip@SkippedState@icu_56@@QAEXH@Z ENDP			; icu_56::SkippedState::skip
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?recordMatch@SkippedState@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?recordMatch@SkippedState@icu_56@@QAEXXZ PROC		; icu_56::SkippedState::recordMatch, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+132], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?recordMatch@SkippedState@icu_56@@QAEXXZ ENDP		; icu_56::SkippedState::recordMatch
_TEXT	ENDS
EXTRN	__imp_?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?replaceMatch@SkippedState@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?replaceMatch@SkippedState@icu_56@@QAEXXZ PROC		; icu_56::SkippedState::replaceMatch, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?replaceMatch@SkippedState@icu_56@@QAEXXZ ENDP		; icu_56::SkippedState::replaceMatch
_TEXT	ENDS
EXTRN	__imp_?resetToState@UCharsTrie@icu_56@@QAEAAV12@ABVState@12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_trie$ = 8						; size = 4
?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z PROC ; icu_56::SkippedState::resetToTrieState, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 136				; 00000088H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _trie$[ebp]
	call	DWORD PTR __imp_?resetToState@UCharsTrie@icu_56@@QAEAAV12@ABVState@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?resetToTrieState@SkippedState@icu_56@@QBEXAAVUCharsTrie@2@@Z ENDP ; icu_56::SkippedState::resetToTrieState
_TEXT	ENDS
PUBLIC	?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendNumericSegmentCEs
PUBLIC	__$ArrayPad$
EXTRN	__imp_??ACharString@icu_56@@QBEDH@Z:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z$0
__ehfuncinfo$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_segmentLength$73450 = -196				; size = 4
_pos$ = -184						; size = 4
_digit$73441 = -169					; size = 1
_q$73437 = -160						; size = 4
_p$73436 = -148						; size = 4
_c$73432 = -136						; size = 4
_digit$73431 = -121					; size = 1
_c$73422 = -112						; size = 4
_digit$73420 = -97					; size = 1
_digits$ = -88						; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ce32$ = 8						; size = 4
_forward$ = 12						; size = 1
_errorCode$ = 16					; size = 4
?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::appendNumericCEs, COMDAT
; _this$ = ecx
; Line 685
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 687
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 688
	movsx	eax, BYTE PTR _forward$[ebp]
	test	eax, eax
	je	$LN15@appendNume
$LN23@appendNume:
; Line 690
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?digitFromCE32@Collation@icu_56@@SADI@Z	; icu_56::Collation::digitFromCE32
	add	esp, 4
	mov	BYTE PTR _digit$73420[ebp], al
; Line 691
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _digit$73420[ebp]
	push	ecx
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 692
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jne	SHORT $LN21@appendNume
	jmp	$LN22@appendNume
$LN21@appendNume:
; Line 693
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73422[ebp], eax
; Line 694
	cmp	DWORD PTR _c$73422[ebp], 0
	jge	SHORT $LN20@appendNume
	jmp	$LN22@appendNume
$LN20@appendNume:
; Line 695
	mov	eax, DWORD PTR _c$73422[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 696
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN19@appendNume
; Line 697
	mov	eax, DWORD PTR _c$73422[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+16]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
$LN19@appendNume:
; Line 699
	push	10					; 0000000aH
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@appendNume
; Line 700
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 701
	jmp	SHORT $LN22@appendNume
$LN18@appendNume:
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jle	SHORT $LN17@appendNume
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], ecx
$LN17@appendNume:
; Line 704
	jmp	$LN23@appendNume
$LN22@appendNume:
	jmp	$LN16@appendNume
$LN15@appendNume:
; Line 707
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?digitFromCE32@Collation@icu_56@@SADI@Z	; icu_56::Collation::digitFromCE32
	add	esp, 4
	mov	BYTE PTR _digit$73431[ebp], al
; Line 708
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _digit$73431[ebp]
	push	ecx
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 709
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73432[ebp], eax
; Line 710
	cmp	DWORD PTR _c$73432[ebp], 0
	jge	SHORT $LN13@appendNume
	jmp	SHORT $LN14@appendNume
$LN13@appendNume:
; Line 711
	mov	eax, DWORD PTR _c$73432[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 712
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN12@appendNume
; Line 713
	mov	eax, DWORD PTR _c$73432[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+16]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
$LN12@appendNume:
; Line 715
	push	10					; 0000000aH
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@appendNume
; Line 716
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 717
	jmp	SHORT $LN14@appendNume
$LN11@appendNume:
; Line 719
	jmp	$LN15@appendNume
$LN14@appendNume:
; Line 721
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$73436[ebp], eax
; Line 722
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _p$73436[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _q$73437[ebp], edx
$LN10@appendNume:
; Line 723
	mov	eax, DWORD PTR _p$73436[ebp]
	cmp	eax, DWORD PTR _q$73437[ebp]
	jae	SHORT $LN16@appendNume
; Line 724
	mov	eax, DWORD PTR _p$73436[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _digit$73441[ebp], cl
; Line 725
	mov	eax, DWORD PTR _p$73436[ebp]
	mov	ecx, DWORD PTR _q$73437[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$73436[ebp]
	add	eax, 1
	mov	DWORD PTR _p$73436[ebp], eax
; Line 726
	mov	eax, DWORD PTR _q$73437[ebp]
	mov	cl, BYTE PTR _digit$73441[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _q$73437[ebp]
	sub	edx, 1
	mov	DWORD PTR _q$73437[ebp], edx
; Line 727
	jmp	SHORT $LN10@appendNume
$LN16@appendNume:
; Line 729
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@appendNume
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN25@appendNume
$LN8@appendNume:
; Line 730
	mov	DWORD PTR _pos$[ebp], 0
$LN4@appendNume:
; Line 733
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _pos$[ebp], eax
	jge	SHORT $LN3@appendNume
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_??ACharString@icu_56@@QBEDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@appendNume
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN4@appendNume
$LN3@appendNume:
; Line 735
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _segmentLength$73450[ebp], eax
; Line 736
	cmp	DWORD PTR _segmentLength$73450[ebp], 254 ; 000000feH
	jle	SHORT $LN2@appendNume
	mov	DWORD PTR _segmentLength$73450[ebp], 254 ; 000000feH
$LN2@appendNume:
; Line 737
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _segmentLength$73450[ebp]
	push	ecx
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendNumericSegmentCEs
; Line 738
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR _segmentLength$73450[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 739
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@appendNume
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _pos$[ebp], eax
	jl	$LN4@appendNume
$LN5@appendNume:
; Line 740
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@appendNume:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@appendNume
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN31@appendNume:
	DD	1
	DD	$LN30@appendNume
$LN30@appendNume:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN28@appendNume
$LN28@appendNume:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?appendNumericCEs@CollationIterator@icu_56@@AAEXICAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::appendNumericCEs
PUBLIC	??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA ; `icu_56::CollationIterator::appendNumericSegmentCEs'::`2'::__LINE__Var
;	COMDAT ??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@ DB 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '7', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '1', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'd', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H
	DB	's', 00H, '[', 00H, '0', 00H, ']', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@ DB '1'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '2', 00H, '5'
	DB	00H, '4', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA DD 02e7H ; `icu_56::CollationIterator::appendNumericSegmentCEs'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_shift$ = -164						; size = 4
_pos$ = -152						; size = 4
_pair$ = -140						; size = 4
_primary$ = -128					; size = 4
_numPairs$ = -116					; size = 4
_primary$73478 = -104					; size = 4
_primary$73476 = -92					; size = 4
_primary$73474 = -80					; size = 4
_numBytes$73472 = -68					; size = 4
_firstByte$73471 = -56					; size = 4
_i$73467 = -44						; size = 4
_value$73466 = -32					; size = 4
_numericPrimary$ = -20					; size = 4
_this$ = -8						; size = 4
_digits$ = 8						; size = 4
_length$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::appendNumericSegmentCEs, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	cmp	DWORD PTR _length$[ebp], 1
	jl	SHORT $LN18@appendNume@2
	cmp	DWORD PTR _length$[ebp], 254		; 000000feH
	jle	SHORT $LN19@appendNume@2
$LN18@appendNume@2:
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DK@KKLJKIGA@?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA2?$AA5?$AA4?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@appendNume@2:
; Line 745
	cmp	DWORD PTR _length$[ebp], 1
	je	SHORT $LN20@appendNume@2
	mov	eax, DWORD PTR _digits$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN20@appendNume@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA
	add	edx, 2
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DM@PHFBEMLL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@appendNume@2:
; Line 746
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _numericPrimary$[ebp], edx
; Line 748
	cmp	DWORD PTR _length$[ebp], 7
	jg	$LN15@appendNume@2
; Line 750
	mov	eax, DWORD PTR _digits$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _value$73466[ebp], ecx
; Line 751
	mov	DWORD PTR _i$73467[ebp], 1
	jmp	SHORT $LN14@appendNume@2
$LN13@appendNume@2:
	mov	eax, DWORD PTR _i$73467[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73467[ebp], eax
$LN14@appendNume@2:
	mov	eax, DWORD PTR _i$73467[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN12@appendNume@2
; Line 752
	mov	eax, DWORD PTR _value$73466[ebp]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _digits$[ebp]
	add	ecx, DWORD PTR _i$73467[ebp]
	movsx	edx, BYTE PTR [ecx]
	add	eax, edx
	mov	DWORD PTR _value$73466[ebp], eax
; Line 753
	jmp	SHORT $LN13@appendNume@2
$LN12@appendNume@2:
; Line 759
	mov	DWORD PTR _firstByte$73471[ebp], 2
; Line 760
	mov	DWORD PTR _numBytes$73472[ebp], 74	; 0000004aH
; Line 761
	mov	eax, DWORD PTR _value$73466[ebp]
	cmp	eax, DWORD PTR _numBytes$73472[ebp]
	jge	SHORT $LN11@appendNume@2
; Line 763
	mov	eax, DWORD PTR _firstByte$73471[ebp]
	add	eax, DWORD PTR _value$73466[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _numericPrimary$[ebp]
	mov	DWORD PTR _primary$73474[ebp], eax
; Line 764
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$73474[ebp]
	push	ecx
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 765
	jmp	$LN16@appendNume@2
$LN11@appendNume@2:
; Line 767
	mov	eax, DWORD PTR _value$73466[ebp]
	sub	eax, DWORD PTR _numBytes$73472[ebp]
	mov	DWORD PTR _value$73466[ebp], eax
; Line 768
	mov	eax, DWORD PTR _firstByte$73471[ebp]
	add	eax, DWORD PTR _numBytes$73472[ebp]
	mov	DWORD PTR _firstByte$73471[ebp], eax
; Line 769
	mov	DWORD PTR _numBytes$73472[ebp], 40	; 00000028H
; Line 770
	mov	eax, DWORD PTR _numBytes$73472[ebp]
	imul	eax, 254				; 000000feH
	cmp	DWORD PTR _value$73466[ebp], eax
	jge	SHORT $LN10@appendNume@2
; Line 773
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	mov	ecx, eax
	add	ecx, DWORD PTR _firstByte$73471[ebp]
	shl	ecx, 16					; 00000010H
	or	ecx, DWORD PTR _numericPrimary$[ebp]
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	esi, 254				; 000000feH
	idiv	esi
	add	edx, 2
	shl	edx, 8
	or	ecx, edx
	mov	DWORD PTR _primary$73476[ebp], ecx
; Line 774
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$73476[ebp]
	push	ecx
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 775
	jmp	$LN16@appendNume@2
$LN10@appendNume@2:
; Line 777
	mov	eax, DWORD PTR _numBytes$73472[ebp]
	imul	eax, 254				; 000000feH
	mov	ecx, DWORD PTR _value$73466[ebp]
	sub	ecx, eax
	mov	DWORD PTR _value$73466[ebp], ecx
; Line 778
	mov	eax, DWORD PTR _firstByte$73471[ebp]
	add	eax, DWORD PTR _numBytes$73472[ebp]
	mov	DWORD PTR _firstByte$73471[ebp], eax
; Line 779
	mov	DWORD PTR _numBytes$73472[ebp], 16	; 00000010H
; Line 780
	mov	eax, DWORD PTR _numBytes$73472[ebp]
	imul	eax, 254				; 000000feH
	imul	eax, 254				; 000000feH
	cmp	DWORD PTR _value$73466[ebp], eax
	jge	$LN15@appendNume@2
; Line 782
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	add	edx, 2
	or	edx, DWORD PTR _numericPrimary$[ebp]
	mov	DWORD PTR _primary$73478[ebp], edx
; Line 783
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	mov	DWORD PTR _value$73466[ebp], eax
; Line 784
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	add	edx, 2
	shl	edx, 8
	or	edx, DWORD PTR _primary$73478[ebp]
	mov	DWORD PTR _primary$73478[ebp], edx
; Line 785
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	mov	DWORD PTR _value$73466[ebp], eax
; Line 786
	mov	eax, DWORD PTR _value$73466[ebp]
	cdq
	mov	ecx, 254				; 000000feH
	idiv	ecx
	add	edx, DWORD PTR _firstByte$73471[ebp]
	shl	edx, 16					; 00000010H
	or	edx, DWORD PTR _primary$73478[ebp]
	mov	DWORD PTR _primary$73478[ebp], edx
; Line 787
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$73478[ebp]
	push	ecx
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 788
	jmp	$LN16@appendNume@2
$LN15@appendNume@2:
; Line 792
	cmp	DWORD PTR _length$[ebp], 7
	jge	SHORT $LN21@appendNume@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z@4JA
	add	eax, 49					; 00000031H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BI@KIDOCIAL@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA7?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@appendNume@2:
; Line 800
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _numPairs$[ebp], eax
; Line 801
	mov	eax, DWORD PTR _numPairs$[ebp]
	add	eax, 128				; 00000080H
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _numericPrimary$[ebp]
	mov	DWORD PTR _primary$[ebp], eax
$LN8@appendNume@2:
; Line 803
	mov	eax, DWORD PTR _digits$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	test	ecx, ecx
	jne	SHORT $LN7@appendNume@2
	mov	eax, DWORD PTR _digits$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	movsx	ecx, BYTE PTR [eax-2]
	test	ecx, ecx
	jne	SHORT $LN7@appendNume@2
; Line 804
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 2
	mov	DWORD PTR _length$[ebp], eax
; Line 805
	jmp	SHORT $LN8@appendNume@2
$LN7@appendNume@2:
; Line 809
	mov	eax, DWORD PTR _length$[ebp]
	and	eax, 1
	je	SHORT $LN6@appendNume@2
; Line 811
	mov	eax, DWORD PTR _digits$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _pair$[ebp], ecx
; Line 812
	mov	DWORD PTR _pos$[ebp], 1
; Line 813
	jmp	SHORT $LN5@appendNume@2
$LN6@appendNume@2:
; Line 814
	mov	eax, DWORD PTR _digits$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _digits$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	add	ecx, eax
	mov	DWORD PTR _pair$[ebp], ecx
; Line 815
	mov	DWORD PTR _pos$[ebp], 2
$LN5@appendNume@2:
; Line 817
	mov	eax, DWORD PTR _pair$[ebp]
	lea	ecx, DWORD PTR [eax+eax+11]
	mov	DWORD PTR _pair$[ebp], ecx
; Line 819
	mov	DWORD PTR _shift$[ebp], 8
$LN4@appendNume@2:
; Line 820
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN3@appendNume@2
; Line 821
	cmp	DWORD PTR _shift$[ebp], 0
	jne	SHORT $LN2@appendNume@2
; Line 824
	mov	eax, DWORD PTR _primary$[ebp]
	or	eax, DWORD PTR _pair$[ebp]
	mov	DWORD PTR _primary$[ebp], eax
; Line 825
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
; Line 826
	mov	eax, DWORD PTR _numericPrimary$[ebp]
	mov	DWORD PTR _primary$[ebp], eax
; Line 827
	mov	DWORD PTR _shift$[ebp], 16		; 00000010H
; Line 828
	jmp	SHORT $LN1@appendNume@2
$LN2@appendNume@2:
; Line 829
	mov	eax, DWORD PTR _pair$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _primary$[ebp]
	mov	DWORD PTR _primary$[ebp], eax
; Line 830
	mov	eax, DWORD PTR _shift$[ebp]
	sub	eax, 8
	mov	DWORD PTR _shift$[ebp], eax
$LN1@appendNume@2:
; Line 832
	mov	eax, DWORD PTR _digits$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _digits$[ebp]
	add	edx, DWORD PTR _pos$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	add	ecx, eax
	lea	ecx, DWORD PTR [ecx+ecx+11]
	mov	DWORD PTR _pair$[ebp], ecx
; Line 833
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 2
	mov	DWORD PTR _pos$[ebp], eax
; Line 834
	jmp	$LN4@appendNume@2
$LN3@appendNume@2:
; Line 835
	mov	eax, DWORD PTR _pair$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _primary$[ebp]
	mov	DWORD PTR _primary$[ebp], eax
; Line 836
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _primary$[ebp]
	push	ecx
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?append@CEBuffer@CollationIterator@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::append
$LN16@appendNume@2:
; Line 837
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?appendNumericSegmentCEs@CollationIterator@icu_56@@AAEXPBDHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::appendNumericSegmentCEs
_TEXT	ENDS
PUBLIC	?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationIterator::previousCEUnsafe
PUBLIC	?previousCE@CollationIterator@icu_56@@QAE_JAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationIterator::previousCE
EXTRN	__imp_?size@UVector32@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?previousCE@CollationIterator@icu_56@@QAE_JAAVUVector32@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv182 = -256						; size = 4
tv73 = -256						; size = 4
_d$ = -56						; size = 4
_ce32$ = -44						; size = 4
_c$ = -32						; size = 4
_limitOffset$ = -20					; size = 4
_this$ = -8						; size = 4
_offsets$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?previousCE@CollationIterator@icu_56@@QAE_JAAVUVector32@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::previousCE, COMDAT
; _this$ = ecx
; Line 840
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 841
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN11@previousCE
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	$LN12@previousCE
$LN11@previousCE:
; Line 845
	mov	esi, esp
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?removeAllElements@UVector32@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limitOffset$[ebp], eax
; Line 847
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
; Line 848
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN10@previousCE
	mov	eax, 16777472				; 01000100H
	mov	edx, 1
	jmp	$LN12@previousCE
$LN10@previousCE:
; Line 849
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@previousCE
; Line 850
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offsets$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationIterator::previousCEUnsafe
	jmp	$LN12@previousCE
$LN9@previousCE:
; Line 854
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 856
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN8@previousCE
; Line 857
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _d$[ebp], edx
; Line 858
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 859
	jmp	SHORT $LN7@previousCE
$LN8@previousCE:
; Line 860
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _d$[ebp], ecx
$LN7@previousCE:
; Line 862
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ; icu_56::Collation::isSimpleOrLongCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@previousCE
; Line 863
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?ceFromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromCE32
	add	esp, 4
	jmp	$LN12@previousCE
$LN6@previousCE:
; Line 865
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendCEsFromCE32@CollationIterator@icu_56@@IAEXPBUCollationData@2@HICAAW4UErrorCode@@@Z ; icu_56::CollationIterator::appendCEsFromCE32
; Line 866
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@previousCE
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 1
	jle	SHORT $LN4@previousCE
; Line 868
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@previousCE:
; Line 871
	mov	esi, esp
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	jg	SHORT $LN4@previousCE
; Line 872
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limitOffset$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 873
	jmp	SHORT $LN3@previousCE
$LN4@previousCE:
; Line 875
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv182[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv182[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR tv182[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	SHORT $LN12@previousCE
; Line 876
	jmp	SHORT $LN12@previousCE
$LN5@previousCE:
; Line 877
	mov	eax, 1
	xor	edx, edx
$LN12@previousCE:
; Line 879
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?previousCE@CollationIterator@icu_56@@QAE_JAAVUVector32@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::previousCE
_TEXT	ENDS
PUBLIC	??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@ ; `string'
PUBLIC	??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@ ; `string'
PUBLIC	??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::CollationIterator::previousCEUnsafe'::`2'::__LINE__Var
;	COMDAT ??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@
CONST	SEGMENT
??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't', 00H, 's', 00H
	DB	'.', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'c', 00H, 'e', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@
CONST	SEGMENT
??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't', 00H, 's', 00H
	DB	'.', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@ DB 'U'
	DB	00H, '_', 00H, 'F', 00H, 'A', 00H, 'I', 00H, 'L', 00H, 'U', 00H
	DB	'R', 00H, 'E', 00H, '(', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o'
	DB	00H, 'r', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ')', 00H
	DB	' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'c', 00H, 'e', 00H, 'B'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, '(', 00H, 'c', 00H, 'e', 00H, 'B'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ':', 00H, ':', 00H
	DB	'N', 00H, 'O', 00H, '_', 00H, 'C', 00H, 'E', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c'
	DB	00H, 'e', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA DD 0372H ; `icu_56::CollationIterator::previousCEUnsafe'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv255 = -236						; size = 8
tv207 = -232						; size = 4
_offset$ = -32						; size = 4
_numBackward$ = -20					; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_offsets$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::previousCEUnsafe, COMDAT
; _this$ = ecx
; Line 882
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 898
	mov	DWORD PTR _numBackward$[ebp], 1
$LN9@previousCE@2:
; Line 899
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
	cmp	DWORD PTR _c$[ebp], 0
	jl	SHORT $LN8@previousCE@2
; Line 900
	mov	eax, DWORD PTR _numBackward$[ebp]
	add	eax, 1
	mov	DWORD PTR _numBackward$[ebp], eax
; Line 901
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@previousCE@2
; Line 902
	jmp	SHORT $LN8@previousCE@2
$LN7@previousCE@2:
; Line 904
	jmp	SHORT $LN9@previousCE@2
$LN8@previousCE@2:
; Line 908
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numBackward$[ebp]
	mov	DWORD PTR [eax+368], ecx
; Line 910
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 911
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN12@previousCE@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 29					; 0000001dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CK@GMLKFJGB@?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@previousCE@2:
; Line 913
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _offset$[ebp], eax
$LN6@previousCE@2:
; Line 914
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 0
	jle	$LN5@previousCE@2
; Line 917
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], ecx
; Line 919
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
; Line 920
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN13@previousCE@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	mov	DWORD PTR tv255[ebp], eax
	mov	DWORD PTR tv255[ebp+4], edx
	cmp	DWORD PTR tv255[ebp], 16777472		; 01000100H
	jne	SHORT $LN13@previousCE@2
	cmp	DWORD PTR tv255[ebp+4], 1
	jne	SHORT $LN13@previousCE@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 38					; 00000026H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1JM@NMFFNIKO@?$AAU?$AA_?$AAF?$AAA?$AAI?$AAL?$AAU?$AAR?$AAE?$AA?$CI?$AAe?$AAr?$AAr?$AAo?$AAr?$AAC?$AAo?$AAd?$AAe?$AA?$CJ?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@previousCE@2:
; Line 922
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+360], edx
; Line 926
	mov	esi, esp
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	jl	SHORT $LN14@previousCE@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 44					; 0000002cH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EC@GEAPPOMG@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@previousCE@2:
; Line 927
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 930
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _offset$[ebp], eax
$LN4@previousCE@2:
; Line 931
	mov	esi, esp
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	jge	SHORT $LN3@previousCE@2
; Line 932
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 933
	jmp	SHORT $LN4@previousCE@2
$LN3@previousCE@2:
; Line 934
	jmp	$LN6@previousCE@2
$LN5@previousCE@2:
; Line 935
	mov	esi, esp
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	je	SHORT $LN15@previousCE@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 53					; 00000035H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GM@CNGCBNN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EE@KDHLHAGF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@previousCE@2:
; Line 937
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _offsets$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], -1
; Line 941
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numBackward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 943
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 944
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@previousCE@2
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv207[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv207[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR tv207[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	SHORT $LN10@previousCE@2
; Line 946
	jmp	SHORT $LN10@previousCE@2
$LN2@previousCE@2:
; Line 947
	mov	eax, 1
	xor	edx, edx
$LN10@previousCE@2:
; Line 949
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?previousCEUnsafe@CollationIterator@icu_56@@AAE_JHAAVUVector32@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::previousCEUnsafe
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ PROC	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ENDP	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<__int64,40>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ PROC	; icu_56::MaybeStackArray<__int64,40>::~MaybeStackArray<__int64,40>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<__int64,40>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ENDP	; icu_56::MaybeStackArray<__int64,40>::~MaybeStackArray<__int64,40>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<__int64,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@_J$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<__int64,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ PROC ; icu_56::MaybeStackArray<__int64,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ENDP ; icu_56::MaybeStackArray<__int64,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z PROC	; icu_56::MaybeStackArray<__int64,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z ENDP	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z PROC	; icu_56::MaybeStackArray<__int64,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ENDP	; icu_56::MaybeStackArray<__int64,40>::operator[]
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<__int64,40>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<__int64,40>::releaseArray
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z
_TEXT	SEGMENT
_p$77669 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z PROC ; icu_56::MaybeStackArray<__int64,40>::resize, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$77669[ebp], eax
; Line 421
	cmp	DWORD PTR _p$77669[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	shl	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$77669[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@_J$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<__int64,40>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$77669[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$77669[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@_J$0CI@@icu_56@@QAEPA_JHH@Z ENDP ; icu_56::MaybeStackArray<__int64,40>::resize
_TEXT	ENDS
END

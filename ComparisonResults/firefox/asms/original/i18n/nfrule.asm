; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\nfrule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	SEGMENT
_gMinusX DW	02dH
	DW	078H
	DW	00H
	ORG $+2
_gInf	DW	049H
	DW	06eH
	DW	066H
	DW	00H
_gNaN	DW	04eH
	DW	061H
	DW	04eH
	DW	00H
_gDollarOpenParenthesis DW 024H
	DW	028H
	DW	00H
	ORG $+2
_gClosedParenthesisDollar DW 029H
	DW	024H
	DW	00H
	ORG $+2
_gLessLess DW	03cH
	DW	03cH
	DW	00H
	ORG $+2
_gLessPercent DW 03cH
	DW	025H
	DW	00H
	ORG $+2
_gLessHash DW	03cH
	DW	023H
	DW	00H
	ORG $+2
_gLessZero DW	03cH
	DW	030H
	DW	00H
	ORG $+2
_gGreaterGreater DW 03eH
	DW	03eH
	DW	00H
	ORG $+2
_gGreaterPercent DW 03eH
	DW	025H
	DW	00H
	ORG $+2
_gGreaterHash DW 03eH
	DW	023H
	DW	00H
	ORG $+2
_gGreaterZero DW 03eH
	DW	030H
	DW	00H
	ORG $+2
_gEqualPercent DW 03dH
	DW	025H
	DW	00H
	ORG $+2
_gEqualHash DW	03dH
	DW	023H
	DW	00H
	ORG $+2
_gEqualZero DW	03dH
	DW	030H
	DW	00H
	ORG $+2
_gGreaterGreaterGreater DW 03eH
	DW	03eH
	DW	03eH
	DW	00H
_RULE_PREFIXES DD FLAT:_gLessLess
	DD	FLAT:_gLessPercent
	DD	FLAT:_gLessHash
	DD	FLAT:_gLessZero
	DD	FLAT:_gGreaterGreater
	DD	FLAT:_gGreaterPercent
	DD	FLAT:_gGreaterHash
	DD	FLAT:_gGreaterZero
	DD	FLAT:_gEqualPercent
	DD	FLAT:_gEqualHash
	DD	FLAT:_gEqualZero
	DD	00H
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T50747 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T50747[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T50747[ebp]
	or	ecx, 1
	mov	DWORD PTR $T50747[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T36098 = -312						; size = 64
_i$36093 = -45						; size = 1
_sym$36091 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$36091[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$36091[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$36093[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$36093[ebp]
	add	al, 1
	mov	BYTE PTR _i$36093[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$36093[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$36091[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$36091[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$36091[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$36093[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36098[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T50769 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T50769[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T50769[ebp]
	or	ecx, 1
	mov	DWORD PTR $T50769[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ	; icu_56::RuleBasedNumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ PROC	; icu_56::RuleBasedNumberFormat::isLenient, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\rbnf.h
; Line 1053
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1054
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+592]
; Line 1055
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@RuleBasedNumberFormat@icu_56@@UBECXZ ENDP	; icu_56::RuleBasedNumberFormat::isLenient
_TEXT	ENDS
PUBLIC	?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ PROC ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet, COMDAT
; _this$ = ecx
; Line 1060
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1061
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+368]
; Line 1062
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDefaultRuleSet@RuleBasedNumberFormat@icu_56@@ABEPAVNFRuleSet@2@XZ ENDP ; icu_56::RuleBasedNumberFormat::getDefaultRuleSet
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coll.h
; Line 1161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1162
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1163
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; Line 1165
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1166
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1169
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
; Line 1171
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1174
	mov	eax, DWORD PTR _this$[ebp]
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	??_7CollatorFactory@icu_56@@6B@			; icu_56::CollatorFactory::`vftable'
PUBLIC	??0CollatorFactory@icu_56@@QAE@XZ		; icu_56::CollatorFactory::CollatorFactory
PUBLIC	??_R4CollatorFactory@icu_56@@6B@		; icu_56::CollatorFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollatorFactory@icu_56@@@8		; icu_56::CollatorFactory `RTTI Type Descriptor'
PUBLIC	??_R3CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollatorFactory@icu_56@@8		; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`vector deleting destructor'
EXTRN	?visible@CollatorFactory@icu_56@@UBECXZ:PROC	; icu_56::CollatorFactory::visible
EXTRN	?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:PROC ; icu_56::CollatorFactory::getDisplayName
;	COMDAT ??_R1A@?0A@EA@CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollatorFactory@icu_56@@8 DD FLAT:??_R0?AVCollatorFactory@icu_56@@@8 ; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R2CollatorFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollatorFactory@icu_56@@8 ; icu_56::CollatorFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R3CollatorFactory@icu_56@@8 DD 00H			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollatorFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollatorFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollatorFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollatorFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollatorFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollatorFactory@icu_56@@6B@ DD 00H			; icu_56::CollatorFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollatorFactory@icu_56@@@8
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollatorFactory@icu_56@@6B@
CONST	SEGMENT
??_7CollatorFactory@icu_56@@6B@ DD FLAT:??_R4CollatorFactory@icu_56@@6B@ ; icu_56::CollatorFactory::`vftable'
	DD	FLAT:??_ECollatorFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@CollatorFactory@icu_56@@UBECXZ
	DD	FLAT:__purecall
	DD	FLAT:?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollatorFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollatorFactory@icu_56@@QAE@XZ PROC			; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollatorFactory@icu_56@@QAE@XZ ENDP			; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??0CollatorFactory@icu_56@@QAE@ABV01@@Z		; icu_56::CollatorFactory::CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollatorFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollatorFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CollatorFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CollatorFactory::operator=
_TEXT	ENDS
PUBLIC	??_GCollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`scalar deleting destructor'
EXTRN	??1CollatorFactory@icu_56@@UAE@XZ:PROC		; icu_56::CollatorFactory::~CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ECollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1CollatorFactory@icu_56@@UAE@XZ ; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVCollator@icu_56@@@8			; icu_56::Collator `RTTI Type Descriptor'
PUBLIC	??_R0?AVRuleBasedCollator@icu_56@@@8		; icu_56::RuleBasedCollator `RTTI Type Descriptor'
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVCollator@icu_56@@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\tblcoll.h
_DATA	SEGMENT
??_R0?AVCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Collator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVRuleBasedCollator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedCollator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedCollator@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 782
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeDefault, COMDAT
; _this$ = ecx
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 837
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 838
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeDefault
_TEXT	ENDS
PUBLIC	?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeExplicitly, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 841
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeExplicitly
_TEXT	ENDS
PUBLIC	?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z PROC ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly, COMDAT
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 844
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	setne	al
; Line 845
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ENDP ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ	; icu_56::PluralFormat::PluralSelector::PluralSelector
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
PUBLIC	??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPluralSelector@PluralFormat@icu_56@@@8	; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
PUBLIC	??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
EXTRN	?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::select
;	COMDAT ??_R2PluralSelector@PluralFormat@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\plurfmt.h
rdata$r	SEGMENT
??_R2PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelector@PluralFormat@icu_56@@8 DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelector@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorAdapter@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
	DD	FLAT:??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??_7PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`vftable'
PUBLIC	??_R4PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
PUBLIC	??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
;	COMDAT ??_R4PluralSelector@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelector@PluralFormat@icu_56@@6B@ DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelector@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelector@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelector@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelector::`vftable'
	DD	FLAT:??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ PROC	; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ ENDP	; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@PluralSele
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@PluralSele
$LN3@PluralSele:
	mov	DWORD PTR tv68[ebp], 0
$LN4@PluralSele:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
EXTRN	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelector::~PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
EXTRN	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z ; icu_56::CollationElementIterator::fromUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z PROC ; icu_56::CollationElementIterator::fromUCollationElements, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coleitr.h
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 289
	mov	eax, DWORD PTR _uc$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z ENDP ; icu_56::CollationElementIterator::fromUCollationElements
_TEXT	ENDS
PUBLIC	?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z ; icu_56::CollationElementIterator::fromUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z PROC ; icu_56::CollationElementIterator::fromUCollationElements, COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 293
	mov	eax, DWORD PTR _uc$[ebp]
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z ENDP ; icu_56::CollationElementIterator::fromUCollationElements
_TEXT	ENDS
PUBLIC	?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ ; icu_56::CollationElementIterator::toUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ PROC ; icu_56::CollationElementIterator::toUCollationElements, COMDAT
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ ENDP ; icu_56::CollationElementIterator::toUCollationElements
_TEXT	ENDS
PUBLIC	?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ ; icu_56::CollationElementIterator::toUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ PROC ; icu_56::CollationElementIterator::toUCollationElements, COMDAT
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
; Line 302
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ ENDP ; icu_56::CollationElementIterator::toUCollationElements
_TEXT	ENDS
PUBLIC	?normalizeDir@CollationElementIterator@icu_56@@ABECXZ ; icu_56::CollationElementIterator::normalizeDir
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?normalizeDir@CollationElementIterator@icu_56@@ABECXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?normalizeDir@CollationElementIterator@icu_56@@ABECXZ PROC ; icu_56::CollationElementIterator::normalizeDir, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN3@normalizeD
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@normalizeD
$LN3@normalizeD:
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+16]
	mov	DWORD PTR tv69[ebp], eax
$LN4@normalizeD:
	mov	al, BYTE PTR tv69[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?normalizeDir@CollationElementIterator@icu_56@@ABECXZ ENDP ; icu_56::CollationElementIterator::normalizeDir
_TEXT	ENDS
PUBLIC	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::primaryOrder, COMDAT
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 382
	mov	eax, DWORD PTR _order$[ebp]
	sar	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
; Line 383
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::primaryOrder
_TEXT	ENDS
PUBLIC	?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::secondaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::secondaryOrder, COMDAT
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 387
	mov	eax, DWORD PTR _order$[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::secondaryOrder
_TEXT	ENDS
PUBLIC	?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::tertiaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::tertiaryOrder, COMDAT
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 392
	mov	eax, DWORD PTR _order$[ebp]
	and	eax, 255				; 000000ffH
; Line 393
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::tertiaryOrder
_TEXT	ENDS
PUBLIC	?isIgnorable@CollationElementIterator@icu_56@@SACH@Z ; icu_56::CollationElementIterator::isIgnorable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isIgnorable@CollationElementIterator@icu_56@@SACH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?isIgnorable@CollationElementIterator@icu_56@@SACH@Z PROC ; icu_56::CollationElementIterator::isIgnorable, COMDAT
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 397
	mov	eax, DWORD PTR _order$[ebp]
	and	eax, -65536				; ffff0000H
	sete	al
; Line 398
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isIgnorable@CollationElementIterator@icu_56@@SACH@Z ENDP ; icu_56::CollationElementIterator::isIgnorable
_TEXT	ENDS
PUBLIC	?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::parseRuleDescriptor
PUBLIC	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFRule::NFRule
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfrule.cpp
xdata$x	SEGMENT
__unwindtable$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__rbnf$ = 8						; size = 4
__ruleText$ = 12					; size = 4
_status$ = 16						; size = 4
??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::NFRule, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 10			; 0000000aH
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+14], ax
	mov	esi, esp
	mov	eax, DWORD PTR __ruleText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __rbnf$[ebp]
	mov	DWORD PTR [eax+88], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@NFRule
; Line 46
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::parseRuleDescriptor
$LN2@NFRule:
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::NFRule
PUBLIC	??1NFRule@icu_56@@QAE@XZ			; icu_56::NFRule::~NFRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1NFRule@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NFRule@icu_56@@QAE@XZ$0
__ehfuncinfo$??1NFRule@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1NFRule@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1NFRule@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv138 = -292						; size = 4
tv93 = -292						; size = 4
tv80 = -292						; size = 4
$T50990 = -284						; size = 4
$T50991 = -272						; size = 4
$T50994 = -260						; size = 4
$T50995 = -248						; size = 4
$T50998 = -236						; size = 4
$T50999 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1NFRule@icu_56@@QAE@XZ PROC				; icu_56::NFRule::~NFRule, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1NFRule@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [ecx+84]
	je	SHORT $LN1@NFRule@2
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T50991[ebp], ecx
	mov	edx, DWORD PTR $T50991[ebp]
	mov	DWORD PTR $T50990[ebp], edx
	cmp	DWORD PTR $T50990[ebp], 0
	je	SHORT $LN4@NFRule@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T50990[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T50990[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN5@NFRule@2
$LN4@NFRule@2:
	mov	DWORD PTR tv80[ebp], 0
$LN5@NFRule@2:
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
$LN1@NFRule@2:
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR $T50995[ebp], ecx
	mov	edx, DWORD PTR $T50995[ebp]
	mov	DWORD PTR $T50994[ebp], edx
	cmp	DWORD PTR $T50994[ebp], 0
	je	SHORT $LN6@NFRule@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T50994[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T50994[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN7@NFRule@2
$LN6@NFRule@2:
	mov	DWORD PTR tv93[ebp], 0
$LN7@NFRule@2:
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR $T50999[ebp], ecx
	mov	edx, DWORD PTR $T50999[ebp]
	mov	DWORD PTR $T50998[ebp], edx
	cmp	DWORD PTR $T50998[ebp], 0
	je	SHORT $LN8@NFRule@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T50998[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T50998[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN9@NFRule@2
$LN8@NFRule@2:
	mov	DWORD PTR tv138[ebp], 0
$LN9@NFRule@2:
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 60
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1NFRule@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1NFRule@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1NFRule@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1NFRule@icu_56@@QAE@XZ ENDP				; icu_56::NFRule::~NFRule
PUBLIC	?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z	; icu_56::NFRuleList::add
PUBLIC	?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z	; icu_56::NFRule::setType
PUBLIC	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ	; icu_56::NFRuleSet::isFractionRuleSet
PUBLIC	?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitutions
PUBLIC	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ	; icu_56::NFRule::getType
PUBLIC	__$ArrayPad$
PUBLIC	?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::makeRules
EXTRN	?setNonNumericalRule@NFRuleSet@icu_56@@QAEXPAVNFRule@2@@Z:PROC ; icu_56::NFRuleSet::setNonNumericalRule
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	?util64_pow@icu_56@@YA_JHI@Z:PROC		; icu_56::util64_pow
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__allrem:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$3
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv169 = -472						; size = 4
tv334 = -468						; size = 8
tv259 = -468						; size = 4
tv453 = -464						; size = 4
tv443 = -464						; size = 4
tv364 = -464						; size = 4
tv306 = -464						; size = 4
tv270 = -464						; size = 4
tv85 = -464						; size = 4
tv74 = -464						; size = 4
$T43171 = -456						; size = 64
$T51012 = -384						; size = 4
$T51013 = -372						; size = 4
$T51018 = -360						; size = 4
$T51019 = -348						; size = 4
$T51025 = -336						; size = 4
_sbuf$43167 = -132					; size = 64
_rule2$43166 = -60					; size = 4
_brack2$ = -48						; size = 4
_brack1$ = -36						; size = 4
_rule1$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_owner$ = 12						; size = 4
_predecessor$ = 16					; size = 4
_rbnf$ = 20						; size = 4
_rules$ = 24						; size = 4
_status$ = 28						; size = 4
?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::makeRules, COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T51025[ebp], 0
; Line 116
	mov	esi, esp
	push	96					; 00000060H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51013[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51013[ebp], 0
	je	SHORT $LN24@makeRules
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rbnf$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T51013[ebp]
	call	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFRule::NFRule
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN25@makeRules
$LN24@makeRules:
	mov	DWORD PTR tv74[ebp], 0
$LN25@makeRules:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T51012[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T51012[ebp]
	mov	DWORD PTR _rule1$[ebp], ecx
; Line 118
	cmp	DWORD PTR _rule1$[ebp], 0
	jne	SHORT $LN21@makeRules
; Line 119
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 120
	jmp	$LN22@makeRules
$LN21@makeRules:
; Line 122
	mov	eax, DWORD PTR _rule1$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	mov	esi, esp
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _brack1$[ebp], eax
; Line 127
	cmp	DWORD PTR _brack1$[ebp], 0
	jge	SHORT $LN26@makeRules
	mov	DWORD PTR tv85[ebp], -1
	jmp	SHORT $LN27@makeRules
$LN26@makeRules:
	mov	esi, esp
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
$LN27@makeRules:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR _brack2$[ebp], eax
; Line 137
	cmp	DWORD PTR _brack2$[ebp], 0
	jl	SHORT $LN19@makeRules
	mov	eax, DWORD PTR _brack1$[ebp]
	cmp	eax, DWORD PTR _brack2$[ebp]
	jg	SHORT $LN19@makeRules
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -3					; fffffffdH
	je	SHORT $LN19@makeRules
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -1
	je	SHORT $LN19@makeRules
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -5					; fffffffbH
	je	SHORT $LN19@makeRules
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -6					; fffffffaH
	jne	SHORT $LN20@makeRules
$LN19@makeRules:
; Line 139
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _predecessor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitutions
; Line 141
	jmp	$LN18@makeRules
$LN20@makeRules:
; Line 144
	mov	DWORD PTR _rule2$43166[ebp], 0
; Line 145
	mov	esi, esp
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 153
	mov	eax, DWORD PTR _rule1$[ebp]
	mov	DWORD PTR tv306[ebp], eax
	mov	ecx, DWORD PTR tv306[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jl	SHORT $LN15@makeRules
	jg	SHORT $LN36@makeRules
	mov	edx, DWORD PTR tv306[ebp]
	cmp	DWORD PTR [edx], 0
	jbe	SHORT $LN15@makeRules
$LN36@makeRules:
	mov	eax, DWORD PTR _rule1$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _rule1$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?util64_pow@icu_56@@YA_JHI@Z		; icu_56::util64_pow
	add	esp, 8
	mov	ecx, DWORD PTR _rule1$[ebp]
	push	edx
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	__allrem
	mov	DWORD PTR tv334[ebp], eax
	mov	DWORD PTR tv334[ebp+4], edx
	mov	ecx, DWORD PTR tv334[ebp]
	or	ecx, DWORD PTR tv334[ebp+4]
	je	SHORT $LN16@makeRules
$LN15@makeRules:
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -2					; fffffffeH
	je	SHORT $LN16@makeRules
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -4					; fffffffcH
	jne	$LN17@makeRules
$LN16@makeRules:
; Line 160
	mov	esi, esp
	push	96					; 00000060H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T51019[ebp], 0
	je	SHORT $LN28@makeRules
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR $T43171[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv270[ebp], eax
	mov	ecx, DWORD PTR tv270[ebp]
	mov	DWORD PTR tv259[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T51025[ebp]
	or	edx, 1
	mov	DWORD PTR $T51025[ebp], edx
	mov	eax, DWORD PTR tv259[ebp]
	push	eax
	mov	ecx, DWORD PTR _rbnf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T51019[ebp]
	call	??0NFRule@icu_56@@QAE@PBVRuleBasedNumberFormat@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::NFRule::NFRule
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN29@makeRules
$LN28@makeRules:
	mov	DWORD PTR tv169[ebp], 0
$LN29@makeRules:
	mov	edx, DWORD PTR tv169[ebp]
	mov	DWORD PTR $T51018[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR $T51018[ebp]
	mov	DWORD PTR _rule2$43166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T51025[ebp]
	and	ecx, 1
	je	SHORT $LN35@makeRules
	and	DWORD PTR $T51025[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T43171[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@makeRules:
; Line 162
	cmp	DWORD PTR _rule2$43166[ebp], 0
	jne	SHORT $LN14@makeRules
; Line 163
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 164
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@makeRules
$LN14@makeRules:
; Line 166
	mov	eax, DWORD PTR _rule1$[ebp]
	mov	DWORD PTR tv364[ebp], eax
	mov	ecx, DWORD PTR tv364[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jl	SHORT $LN13@makeRules
	jg	SHORT $LN37@makeRules
	mov	edx, DWORD PTR tv364[ebp]
	cmp	DWORD PTR [edx], 0
	jb	SHORT $LN13@makeRules
$LN37@makeRules:
; Line 167
	mov	eax, DWORD PTR _rule2$43166[ebp]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
; Line 168
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ; icu_56::NFRuleSet::isFractionRuleSet
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN12@makeRules
; Line 169
	mov	eax, DWORD PTR _rule1$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+4]
	adc	edx, 0
	mov	eax, DWORD PTR _rule1$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
$LN12@makeRules:
; Line 171
	jmp	SHORT $LN11@makeRules
$LN13@makeRules:
; Line 176
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -2					; fffffffeH
	jne	SHORT $LN10@makeRules
; Line 177
	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _rule2$43166[ebp]
	call	?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z ; icu_56::NFRule::setType
	jmp	SHORT $LN11@makeRules
$LN10@makeRules:
; Line 183
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	cmp	eax, -4					; fffffffcH
	jne	SHORT $LN11@makeRules
; Line 184
	mov	eax, DWORD PTR _rule2$43166[ebp]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
; Line 185
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z ; icu_56::NFRule::setType
$LN11@makeRules:
; Line 190
	mov	eax, DWORD PTR _rule2$43166[ebp]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 191
	mov	eax, DWORD PTR _rule2$43166[ebp]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+12], dx
; Line 195
	mov	esi, esp
	mov	eax, DWORD PTR _brack1$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 196
	mov	esi, DWORD PTR _brack2$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN7@makeRules
; Line 197
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _brack2$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _brack2$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@makeRules:
; Line 199
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _predecessor$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sbuf$43167[ebp]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule2$43166[ebp]
	call	?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitutions
$LN17@makeRules:
; Line 205
	mov	esi, esp
	mov	eax, DWORD PTR _brack1$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 206
	mov	eax, DWORD PTR _brack2$[ebp]
	sub	eax, DWORD PTR _brack1$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _brack1$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 207
	mov	esi, DWORD PTR _brack2$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN6@makeRules
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _brack2$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _brack2$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@makeRules:
; Line 210
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _predecessor$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sbuf$43167[ebp]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitutions
; Line 217
	cmp	DWORD PTR _rule2$43166[ebp], 0
	je	SHORT $LN5@makeRules
; Line 218
	mov	eax, DWORD PTR _rule2$43166[ebp]
	mov	DWORD PTR tv443[ebp], eax
	mov	ecx, DWORD PTR tv443[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jl	SHORT $LN4@makeRules
	jg	SHORT $LN38@makeRules
	mov	edx, DWORD PTR tv443[ebp]
	cmp	DWORD PTR [edx], 0
	jb	SHORT $LN4@makeRules
$LN38@makeRules:
; Line 219
	mov	eax, DWORD PTR _rule2$43166[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z ; icu_56::NFRuleList::add
; Line 221
	jmp	SHORT $LN5@makeRules
$LN4@makeRules:
; Line 222
	mov	eax, DWORD PTR _rule2$43166[ebp]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?setNonNumericalRule@NFRuleSet@icu_56@@QAEXPAVNFRule@2@@Z ; icu_56::NFRuleSet::setNonNumericalRule
$LN5@makeRules:
; Line 225
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@makeRules:
; Line 226
	mov	eax, DWORD PTR _rule1$[ebp]
	mov	DWORD PTR tv453[ebp], eax
	mov	ecx, DWORD PTR tv453[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jl	SHORT $LN2@makeRules
	jg	SHORT $LN39@makeRules
	mov	edx, DWORD PTR tv453[ebp]
	cmp	DWORD PTR [edx], 0
	jb	SHORT $LN2@makeRules
$LN39@makeRules:
; Line 227
	mov	eax, DWORD PTR _rule1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z ; icu_56::NFRuleList::add
; Line 229
	jmp	SHORT $LN22@makeRules
$LN2@makeRules:
; Line 230
	mov	eax, DWORD PTR _rule1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?setNonNumericalRule@NFRuleSet@icu_56@@QAEXPAVNFRule@2@@Z ; icu_56::NFRuleSet::setNonNumericalRule
$LN22@makeRules:
; Line 232
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@makeRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN43@makeRules:
	DD	1
	DD	$LN42@makeRules
$LN42@makeRules:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN40@makeRules
$LN40@makeRules:
	DB	115					; 00000073H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51013[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _sbuf$43167[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T51019[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z$3:
	mov	eax, DWORD PTR $T51025[ebp]
	and	eax, 1
	je	$LN34@makeRules
	and	DWORD PTR $T51025[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T43171[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN34@makeRules:
	ret	0
__ehhandler$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-476]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?makeRules@NFRule@icu_56@@SAXAAVUnicodeString@2@PAVNFRuleSet@2@PBV12@PBVRuleBasedNumberFormat@2@AAVNFRuleList@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::makeRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ
_TEXT	SEGMENT
tv66 = -212						; size = 4
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ PROC	; icu_56::NFRule::getType, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrule.h
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jg	SHORT $LN3@getType
	jl	SHORT $LN5@getType
	mov	edx, DWORD PTR tv68[ebp]
	cmp	DWORD PTR [edx], 0
	ja	SHORT $LN3@getType
$LN5@getType:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv66[ebp], ecx
	jmp	SHORT $LN4@getType
$LN3@getType:
	mov	DWORD PTR tv66[ebp], -7			; fffffff9H
$LN4@getType:
	mov	eax, DWORD PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ENDP	; icu_56::NFRule::getType
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ruleType$ = 8						; size = 4
?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z PROC	; icu_56::NFRule::setType, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ruleType$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z ENDP	; icu_56::NFRule::setType
_TEXT	ENDS
EXTRN	_uprv_realloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_thing$ = 8						; size = 4
?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z PROC		; icu_56::NFRuleList::add, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrlist.h
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@add
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@add:
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@add
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _thing$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 70
	jmp	SHORT $LN4@add
$LN2@add:
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN4@add:
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@NFRuleList@icu_56@@QAEXPAVNFRule@2@@Z ENDP		; icu_56::NFRuleList::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ PROC	; icu_56::NFRuleSet::isFractionRuleSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfrs.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+116]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFractionRuleSet@NFRuleSet@icu_56@@QBECXZ ENDP	; icu_56::NFRuleSet::isFractionRuleSet
_TEXT	ENDS
PUBLIC	?expectedExponent@NFRule@icu_56@@ABEFXZ		; icu_56::NFRule::expectedExponent
PUBLIC	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
PUBLIC	__$ArrayPad$
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__allmul:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfrule.cpp
xdata$x	SEGMENT
__unwindtable$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ll_10$43221 = -204					; size = 8
_ll_10$43207 = -188					; size = 8
_c$43206 = -172						; size = 2
_val$43205 = -160					; size = 8
_lastChar$43203 = -144					; size = 2
_firstChar$43202 = -132					; size = 2
_descriptorLength$43201 = -120				; size = 4
_descriptor$43197 = -108				; size = 64
_p$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_status$ = 12						; size = 4
?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::parseRuleDescriptor, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 252
	mov	esi, esp
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
; Line 253
	cmp	DWORD PTR _p$[ebp], -1
	je	$LN44@parseRuleD
; Line 257
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 258
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 260
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN43@parseRuleD:
; Line 261
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _p$[ebp], eax
	jge	SHORT $LN42@parseRuleD
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN42@parseRuleD
; Line 262
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 263
	jmp	SHORT $LN43@parseRuleD
$LN42@parseRuleD:
; Line 264
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 269
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _descriptorLength$43201[ebp], eax
; Line 270
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _firstChar$43202[ebp], ax
; Line 271
	mov	eax, DWORD PTR _descriptorLength$43201[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _lastChar$43203[ebp], ax
; Line 272
	movzx	eax, WORD PTR _firstChar$43202[ebp]
	cmp	eax, 48					; 00000030H
	jl	$LN41@parseRuleD
	movzx	eax, WORD PTR _firstChar$43202[ebp]
	cmp	eax, 57					; 00000039H
	jg	$LN41@parseRuleD
	movzx	eax, WORD PTR _lastChar$43203[ebp]
	cmp	eax, 120				; 00000078H
	je	$LN41@parseRuleD
; Line 277
	mov	DWORD PTR _val$43205[ebp], 0
	mov	DWORD PTR _val$43205[ebp+4], 0
; Line 278
	mov	DWORD PTR _p$[ebp], 0
; Line 279
	mov	eax, 32					; 00000020H
	mov	WORD PTR _c$43206[ebp], ax
; Line 285
	mov	DWORD PTR _ll_10$43207[ebp], 10		; 0000000aH
	mov	DWORD PTR _ll_10$43207[ebp+4], 0
$LN40@parseRuleD:
; Line 286
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _descriptorLength$43201[ebp]
	jge	$LN39@parseRuleD
; Line 287
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$43206[ebp], ax
; Line 288
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN38@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN38@parseRuleD
; Line 289
	mov	eax, DWORD PTR _ll_10$43207[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ll_10$43207[ebp]
	push	ecx
	mov	edx, DWORD PTR _val$43205[ebp+4]
	push	edx
	mov	eax, DWORD PTR _val$43205[ebp]
	push	eax
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	movzx	eax, WORD PTR _c$43206[ebp]
	sub	eax, 48					; 00000030H
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _val$43205[ebp], ecx
	mov	DWORD PTR _val$43205[ebp+4], esi
	jmp	SHORT $LN37@parseRuleD
$LN38@parseRuleD:
; Line 291
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN35@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN36@parseRuleD
$LN35@parseRuleD:
; Line 292
	jmp	SHORT $LN39@parseRuleD
	jmp	SHORT $LN37@parseRuleD
$LN36@parseRuleD:
; Line 294
	movzx	eax, WORD PTR _c$43206[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN32@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN32@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN33@parseRuleD
$LN32@parseRuleD:
; Line 296
	jmp	SHORT $LN37@parseRuleD
$LN33@parseRuleD:
; Line 298
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 299
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN45@parseRuleD
$LN37@parseRuleD:
; Line 301
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 302
	jmp	$LN40@parseRuleD
$LN39@parseRuleD:
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _val$43205[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _val$43205[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
; Line 311
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 47					; 0000002fH
	jne	$LN30@parseRuleD
; Line 312
	mov	DWORD PTR _val$43205[ebp], 0
	mov	DWORD PTR _val$43205[ebp+4], 0
; Line 313
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 314
	mov	DWORD PTR _ll_10$43221[ebp], 10		; 0000000aH
	mov	DWORD PTR _ll_10$43221[ebp+4], 0
$LN29@parseRuleD:
; Line 315
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _descriptorLength$43201[ebp]
	jge	$LN28@parseRuleD
; Line 316
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$43206[ebp], ax
; Line 317
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN27@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN27@parseRuleD
; Line 318
	mov	eax, DWORD PTR _ll_10$43221[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ll_10$43221[ebp]
	push	ecx
	mov	edx, DWORD PTR _val$43205[ebp+4]
	push	edx
	mov	eax, DWORD PTR _val$43205[ebp]
	push	eax
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	movzx	eax, WORD PTR _c$43206[ebp]
	sub	eax, 48					; 00000030H
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _val$43205[ebp], ecx
	mov	DWORD PTR _val$43205[ebp+4], esi
	jmp	SHORT $LN26@parseRuleD
$LN27@parseRuleD:
; Line 320
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN25@parseRuleD
; Line 321
	jmp	SHORT $LN28@parseRuleD
	jmp	SHORT $LN26@parseRuleD
$LN25@parseRuleD:
; Line 323
	movzx	eax, WORD PTR _c$43206[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN22@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN22@parseRuleD
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN23@parseRuleD
$LN22@parseRuleD:
; Line 325
	jmp	SHORT $LN26@parseRuleD
$LN23@parseRuleD:
; Line 327
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 328
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN45@parseRuleD
$LN26@parseRuleD:
; Line 330
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 331
	jmp	$LN29@parseRuleD
$LN28@parseRuleD:
; Line 335
	mov	eax, DWORD PTR _val$43205[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN20@parseRuleD
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN20@parseRuleD:
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?expectedExponent@NFRule@icu_56@@ABEFXZ	; icu_56::NFRule::expectedExponent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
$LN30@parseRuleD:
; Line 349
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 62					; 0000003eH
	jne	$LN19@parseRuleD
$LN18@parseRuleD:
; Line 350
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _p$[ebp], eax
	jge	SHORT $LN19@parseRuleD
; Line 351
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$43206[ebp], ax
; Line 352
	movzx	eax, WORD PTR _c$43206[ebp]
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN16@parseRuleD
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	test	ecx, ecx
	jle	SHORT $LN16@parseRuleD
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+12]
	sub	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+12], cx
; Line 354
	jmp	SHORT $LN15@parseRuleD
$LN16@parseRuleD:
; Line 356
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 357
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN45@parseRuleD
$LN15@parseRuleD:
; Line 359
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 360
	jmp	$LN18@parseRuleD
$LN19@parseRuleD:
; Line 362
	jmp	$LN14@parseRuleD
$LN41@parseRuleD:
; Line 363
	mov	esi, esp
	push	2
	push	OFFSET _gMinusX
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@parseRuleD
; Line 364
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setType@NFRule@icu_56@@QAEXW4ERuleType@12@@Z ; icu_56::NFRule::setType
	jmp	$LN14@parseRuleD
$LN13@parseRuleD:
; Line 366
	cmp	DWORD PTR _descriptorLength$43201[ebp], 3
	jne	$LN14@parseRuleD
; Line 367
	movzx	eax, WORD PTR _firstChar$43202[ebp]
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN10@parseRuleD
	movzx	eax, WORD PTR _lastChar$43203[ebp]
	cmp	eax, 120				; 00000078H
	jne	SHORT $LN10@parseRuleD
; Line 368
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
; Line 369
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+14], ax
	jmp	$LN14@parseRuleD
$LN10@parseRuleD:
; Line 371
	movzx	eax, WORD PTR _firstChar$43202[ebp]
	cmp	eax, 120				; 00000078H
	jne	SHORT $LN8@parseRuleD
	movzx	eax, WORD PTR _lastChar$43203[ebp]
	cmp	eax, 120				; 00000078H
	jne	SHORT $LN8@parseRuleD
; Line 372
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
; Line 373
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+14], ax
	jmp	$LN14@parseRuleD
$LN8@parseRuleD:
; Line 375
	movzx	eax, WORD PTR _firstChar$43202[ebp]
	cmp	eax, 120				; 00000078H
	jne	SHORT $LN6@parseRuleD
	movzx	eax, WORD PTR _lastChar$43203[ebp]
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN6@parseRuleD
; Line 376
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
; Line 377
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+14], ax
	jmp	SHORT $LN14@parseRuleD
$LN6@parseRuleD:
; Line 379
	mov	esi, esp
	push	3
	push	OFFSET _gNaN
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@parseRuleD
; Line 380
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	-6					; fffffffaH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
	jmp	SHORT $LN14@parseRuleD
$LN4@parseRuleD:
; Line 382
	mov	esi, esp
	push	3
	push	OFFSET _gInf
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN14@parseRuleD
; Line 383
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ; icu_56::NFRule::setBaseValue
$LN14@parseRuleD:
; Line 386
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN44@parseRuleD:
; Line 392
	mov	esi, esp
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN45@parseRuleD
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN45@parseRuleD
; Line 393
	mov	esi, esp
	push	1
	push	0
	mov	ecx, DWORD PTR _description$[ebp]
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN45@parseRuleD:
; Line 399
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN51@parseRuleD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN51@parseRuleD:
	DD	1
	DD	$LN50@parseRuleD
$LN50@parseRuleD:
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN48@parseRuleD
$LN48@parseRuleD:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _descriptor$43197[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseRuleDescriptor@NFRule@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::parseRuleDescriptor
PUBLIC	??_C@_1BA@NOHBHHPP@?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@HIBOBAHO@?$AAc?$AAa?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitution
PUBLIC	__$ArrayPad$
EXTRN	?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedNumberFormat::createPluralFormat
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z:PROC
;	COMDAT ??_C@_1BA@NOHBHHPP@?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@NOHBHHPP@?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ DB 'o', 00H
	DB	'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@HIBOBAHO@?$AAc?$AAa?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@HIBOBAHO@?$AAc?$AAa?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@ DB 'c'
	DB	00H, 'a', 00H, 'r', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'a', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv198 = -588						; size = 4
tv195 = -588						; size = 4
tv193 = -588						; size = 4
tv206 = -584						; size = 4
tv203 = -584						; size = 4
tv200 = -584						; size = 4
tv131 = -584						; size = 4
$T43274 = -576						; size = 64
$T43280 = -504						; size = 64
$T43285 = -432						; size = 64
$T51074 = -357						; size = 1
$T51075 = -345						; size = 1
_pluralType$43272 = -144				; size = 4
_type$43271 = -132					; size = 64
_endType$43268 = -60					; size = 4
_pluralRuleEnd$ = -48					; size = 4
_pluralRuleStart$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ruleSet$ = 8						; size = 4
_ruleText$ = 12						; size = 4
_predecessor$ = 16					; size = 4
_status$ = 20						; size = 4
?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::extractSubstitutions, COMDAT
; _this$ = ecx
; Line 414
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 576				; 00000240H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-588]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 415
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@extractSub
; Line 416
	jmp	$LN10@extractSub
$LN9@extractSub:
; Line 418
	mov	esi, esp
	mov	eax, DWORD PTR _ruleText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 419
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _predecessor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitution
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 420
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN8@extractSub
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 424
	jmp	SHORT $LN7@extractSub
$LN8@extractSub:
; Line 425
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _predecessor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ruleSet$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z ; icu_56::NFRule::extractSubstitution
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
$LN7@extractSub:
; Line 427
	mov	esi, esp
	push	0
	push	-1
	push	OFFSET _gDollarOpenParenthesis
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$[ebp], eax
; Line 428
	cmp	DWORD PTR _pluralRuleStart$[ebp], 0
	jl	SHORT $LN12@extractSub
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	-1
	push	OFFSET _gClosedParenthesisDollar
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN13@extractSub
$LN12@extractSub:
	mov	DWORD PTR tv131[ebp], -1
$LN13@extractSub:
	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR _pluralRuleEnd$[ebp], ecx
; Line 429
	cmp	DWORD PTR _pluralRuleEnd$[ebp], 0
	jl	$LN10@extractSub
; Line 430
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _endType$43268[ebp], eax
; Line 431
	cmp	DWORD PTR _endType$43268[ebp], 0
	jge	SHORT $LN5@extractSub
; Line 432
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 433
	jmp	$LN10@extractSub
$LN5@extractSub:
; Line 435
	mov	eax, DWORD PTR _endType$43268[ebp]
	sub	eax, DWORD PTR _pluralRuleStart$[ebp]
	sub	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pluralRuleStart$[ebp]
	add	ecx, 2
	push	ecx
	lea	edx, DWORD PTR _type$43271[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 437
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@HIBOBAHO@?$AAc?$AAa?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T43274[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv200[ebp], eax
	mov	eax, DWORD PTR tv200[ebp]
	mov	DWORD PTR tv193[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv193[ebp]
	push	ecx
	lea	ecx, DWORD PTR _type$43271[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T51074[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T43274[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T51074[ebp]
	test	edx, edx
	je	SHORT $LN4@extractSub
; Line 438
	mov	DWORD PTR _pluralType$43272[ebp], 0
	jmp	$LN3@extractSub
$LN4@extractSub:
; Line 440
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BA@NOHBHHPP@?$AAo?$AAr?$AAd?$AAi?$AAn?$AAa?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T43280[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv195[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv195[ebp]
	push	ecx
	lea	ecx, DWORD PTR _type$43271[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T51075[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T43280[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T51075[ebp]
	test	edx, edx
	je	SHORT $LN2@extractSub
; Line 441
	mov	DWORD PTR _pluralType$43272[ebp], 1
; Line 443
	jmp	SHORT $LN3@extractSub
$LN2@extractSub:
; Line 444
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 445
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _type$43271[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN10@extractSub
$LN3@extractSub:
; Line 448
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pluralRuleEnd$[ebp]
	sub	ecx, DWORD PTR _endType$43268[ebp]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _endType$43268[ebp]
	add	edx, 1
	push	edx
	lea	eax, DWORD PTR $T43285[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv198[ebp]
	push	edx
	mov	eax, DWORD PTR _pluralType$43272[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+88]
	call	?createPluralFormat@RuleBasedNumberFormat@icu_56@@ABEPAVPluralFormat@2@W4UPluralType@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedNumberFormat::createPluralFormat
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T43285[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 449
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _type$43271[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@extractSub:
; Line 450
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@extractSub
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 588				; 0000024cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN21@extractSub:
	DD	1
	DD	$LN20@extractSub
$LN20@extractSub:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN18@extractSub
$LN18@extractSub:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _type$43271[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43274[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43280[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43285[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-592]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?extractSubstitutions@NFRule@icu_56@@AAEXPBVNFRuleSet@2@ABVUnicodeString@2@PBV12@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::extractSubstitutions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?indexOfAnyRulePrefix@NFRule@icu_56@@ABEHXZ	; icu_56::NFRule::indexOfAnyRulePrefix
PUBLIC	__$ArrayPad$
EXTRN	?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NFSubstitution::makeSubstitution
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfrule.cpp
xdata$x	SEGMENT
__unwindtable$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51094 = -348						; size = 4
_subToken$ = -144					; size = 64
_c$43298 = -72						; size = 2
_subEnd$ = -60						; size = 4
_subStart$ = -48					; size = 4
_result$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ruleSet$ = 8						; size = 4
_predecessor$ = 12					; size = 4
_status$ = 16						; size = 4
?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::extractSubstitution, COMDAT
; _this$ = ecx
; Line 468
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 469
	mov	DWORD PTR _result$[ebp], 0
; Line 473
	mov	ecx, DWORD PTR _this$[ebp]
	call	?indexOfAnyRulePrefix@NFRule@icu_56@@ABEHXZ ; icu_56::NFRule::indexOfAnyRulePrefix
	mov	DWORD PTR _subStart$[ebp], eax
; Line 474
	mov	eax, DWORD PTR _subStart$[ebp]
	mov	DWORD PTR _subEnd$[ebp], eax
; Line 478
	cmp	DWORD PTR _subStart$[ebp], -1
	jne	SHORT $LN5@extractSub@2
; Line 479
	xor	eax, eax
	jmp	$LN6@extractSub@2
$LN5@extractSub@2:
; Line 484
	mov	esi, esp
	push	0
	push	3
	push	OFFSET _gGreaterGreaterGreater
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _subStart$[ebp]
	jne	SHORT $LN4@extractSub@2
; Line 485
	mov	eax, DWORD PTR _subStart$[ebp]
	add	eax, 2
	mov	DWORD PTR _subEnd$[ebp], eax
; Line 489
	jmp	$LN3@extractSub@2
$LN4@extractSub@2:
; Line 490
	mov	esi, esp
	mov	eax, DWORD PTR _subStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$43298[ebp], ax
; Line 491
	mov	eax, DWORD PTR _subStart$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	movzx	ecx, WORD PTR _c$43298[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _subEnd$[ebp], eax
; Line 493
	movzx	eax, WORD PTR _c$43298[ebp]
	cmp	eax, 60					; 0000003cH
	jne	SHORT $LN3@extractSub@2
	cmp	DWORD PTR _subEnd$[ebp], -1
	je	SHORT $LN3@extractSub@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _subEnd$[ebp], eax
	jge	SHORT $LN3@extractSub@2
	mov	eax, DWORD PTR _subEnd$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	movzx	edx, WORD PTR _c$43298[ebp]
	cmp	ecx, edx
	jne	SHORT $LN3@extractSub@2
; Line 498
	mov	eax, DWORD PTR _subEnd$[ebp]
	add	eax, 1
	mov	DWORD PTR _subEnd$[ebp], eax
$LN3@extractSub@2:
; Line 505
	cmp	DWORD PTR _subEnd$[ebp], -1
	jne	SHORT $LN1@extractSub@2
; Line 506
	xor	eax, eax
	jmp	$LN6@extractSub@2
$LN1@extractSub@2:
; Line 512
	mov	esi, esp
	lea	ecx, DWORD PTR _subToken$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 513
	mov	eax, DWORD PTR _subEnd$[ebp]
	add	eax, 1
	sub	eax, DWORD PTR _subStart$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _subStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	lea	ecx, DWORD PTR _subToken$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 515
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _subToken$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _ruleSet$[ebp]
	push	ecx
	mov	edx, DWORD PTR _predecessor$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _subStart$[ebp]
	push	ecx
	call	?makeSubstitution@NFSubstitution@icu_56@@SAPAV12@HPBVNFRule@2@0PBVNFRuleSet@2@PBVRuleBasedNumberFormat@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::makeSubstitution
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _result$[ebp], eax
; Line 518
	mov	eax, DWORD PTR _subEnd$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _subStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 520
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T51094[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _subToken$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51094[ebp]
$LN6@extractSub@2:
; Line 521
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@extractSub@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN12@extractSub@2:
	DD	1
	DD	$LN11@extractSub@2
$LN11@extractSub@2:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN9@extractSub@2
$LN9@extractSub@2:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _subToken$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?extractSubstitution@NFRule@icu_56@@AAEPAVNFSubstitution@2@PBVNFRuleSet@2@PBV12@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::extractSubstitution
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv140 = -208						; size = 4
_this$ = -8						; size = 4
_newBaseValue$ = 8					; size = 8
_status$ = 16						; size = 4
?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z PROC ; icu_56::NFRule::setBaseValue, COMDAT
; _this$ = ecx
; Line 532
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newBaseValue$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _newBaseValue$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 535
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 10			; 0000000aH
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jl	$LN4@setBaseVal
	jg	SHORT $LN7@setBaseVal
	mov	edx, DWORD PTR tv140[ebp]
	cmp	DWORD PTR [edx], 1
	jb	$LN4@setBaseVal
$LN7@setBaseVal:
; Line 543
	mov	ecx, DWORD PTR _this$[ebp]
	call	?expectedExponent@NFRule@icu_56@@ABEFXZ	; icu_56::NFRule::expectedExponent
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 549
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@setBaseVal
; Line 550
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setBaseVal:
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@setBaseVal
; Line 553
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setBaseVal:
; Line 558
	jmp	SHORT $LN5@setBaseVal
$LN4@setBaseVal:
; Line 559
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+12], ax
$LN5@setBaseVal:
; Line 561
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setBaseValue@NFRule@icu_56@@QAEX_JAAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::setBaseValue
_TEXT	ENDS
EXTRN	_uprv_log_56:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?expectedExponent@NFRule@icu_56@@ABEFXZ
_TEXT	SEGMENT
tv159 = -240						; size = 8
tv150 = -236						; size = 4
tv89 = -236						; size = 4
_temp$ = -36						; size = 8
_tempResult$ = -20					; size = 2
_this$ = -8						; size = 4
?expectedExponent@NFRule@icu_56@@ABEFXZ PROC		; icu_56::NFRule::expectedExponent, COMDAT
; _this$ = ecx
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 574
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN6@expectedEx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jg	SHORT $LN3@expectedEx
	jl	SHORT $LN6@expectedEx
	mov	edx, DWORD PTR tv89[ebp]
	cmp	DWORD PTR [edx], 1
	jae	SHORT $LN3@expectedEx
$LN6@expectedEx:
; Line 575
	xor	eax, eax
	jmp	$LN4@expectedEx
$LN3@expectedEx:
; Line 581
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_log_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fstp	QWORD PTR tv159[ebp]
	call	_uprv_log_56
	add	esp, 8
	fdivr	QWORD PTR tv159[ebp]
	call	__ftol2_sse
	mov	WORD PTR _tempResult$[ebp], ax
; Line 582
	movsx	eax, WORD PTR _tempResult$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?util64_pow@icu_56@@YA_JHI@Z		; icu_56::util64_pow
	add	esp, 8
	mov	DWORD PTR _temp$[ebp], eax
	mov	DWORD PTR _temp$[ebp+4], edx
; Line 583
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv150[ebp], eax
	mov	ecx, DWORD PTR tv150[ebp]
	mov	edx, DWORD PTR _temp$[ebp+4]
	cmp	edx, DWORD PTR [ecx+4]
	jg	SHORT $LN1@expectedEx
	jl	SHORT $LN7@expectedEx
	mov	eax, DWORD PTR tv150[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax]
	ja	SHORT $LN1@expectedEx
$LN7@expectedEx:
; Line 584
	movsx	eax, WORD PTR _tempResult$[ebp]
	add	eax, 1
	mov	WORD PTR _tempResult$[ebp], ax
$LN1@expectedEx:
; Line 586
	mov	ax, WORD PTR _tempResult$[ebp]
$LN4@expectedEx:
; Line 587
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?expectedExponent@NFRule@icu_56@@ABEFXZ ENDP		; icu_56::NFRule::expectedExponent
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?indexOfAnyRulePrefix@NFRule@icu_56@@ABEHXZ
_TEXT	SEGMENT
_pos$43331 = -44					; size = 4
_i$43327 = -32						; size = 4
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?indexOfAnyRulePrefix@NFRule@icu_56@@ABEHXZ PROC	; icu_56::NFRule::indexOfAnyRulePrefix, COMDAT
; _this$ = ecx
; Line 598
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 599
	mov	DWORD PTR _result$[ebp], -1
; Line 600
	mov	DWORD PTR _i$43327[ebp], 0
	jmp	SHORT $LN5@indexOfAny
$LN4@indexOfAny:
	mov	eax, DWORD PTR _i$43327[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43327[ebp], eax
$LN5@indexOfAny:
	mov	eax, DWORD PTR _i$43327[ebp]
	cmp	DWORD PTR _RULE_PREFIXES[eax*4], 0
	je	SHORT $LN3@indexOfAny
; Line 601
	mov	eax, DWORD PTR _i$43327[ebp]
	mov	ecx, DWORD PTR _RULE_PREFIXES[eax*4]
	mov	esi, esp
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$43331[ebp], eax
; Line 602
	cmp	DWORD PTR _pos$43331[ebp], -1
	je	SHORT $LN2@indexOfAny
	cmp	DWORD PTR _result$[ebp], -1
	je	SHORT $LN1@indexOfAny
	mov	eax, DWORD PTR _pos$43331[ebp]
	cmp	eax, DWORD PTR _result$[ebp]
	jge	SHORT $LN2@indexOfAny
$LN1@indexOfAny:
; Line 603
	mov	eax, DWORD PTR _pos$43331[ebp]
	mov	DWORD PTR _result$[ebp], eax
$LN2@indexOfAny:
; Line 605
	jmp	SHORT $LN4@indexOfAny
$LN3@indexOfAny:
; Line 606
	mov	eax, DWORD PTR _result$[ebp]
; Line 607
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?indexOfAnyRulePrefix@NFRule@icu_56@@ABEHXZ ENDP	; icu_56::NFRule::indexOfAnyRulePrefix
_TEXT	ENDS
PUBLIC	??8NFRule@icu_56@@QBECABV01@@Z			; icu_56::NFRule::operator==
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8NFRule@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv94 = -213						; size = 1
tv130 = -212						; size = 4
tv129 = -208						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??8NFRule@icu_56@@QBECABV01@@Z PROC			; icu_56::NFRule::operator==, COMDAT
; _this$ = ecx
; Line 633
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	DWORD PTR tv130[ebp], ecx
	mov	edx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR tv130[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN3@operator@2
	mov	edx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR tv130[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	$LN3@operator@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@2
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+12]
	mov	ecx, DWORD PTR _rhs$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	jne	SHORT $LN3@operator@2
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@2
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	?util_equalSubstitutions@icu_56@@YACPBVNFSubstitution@1@0@Z ; icu_56::util_equalSubstitutions
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	?util_equalSubstitutions@icu_56@@YACPBVNFSubstitution@1@0@Z ; icu_56::util_equalSubstitutions
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator@2
	mov	BYTE PTR tv94[ebp], 1
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	BYTE PTR tv94[ebp], 0
$LN4@operator@2:
	mov	al, BYTE PTR tv94[ebp]
; Line 640
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8NFRule@icu_56@@QBECABV01@@Z ENDP			; icu_56::NFRule::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?util_equalSubstitutions@icu_56@@YACPBVNFSubstitution@1@0@Z
_TEXT	SEGMENT
_sub1$ = 8						; size = 4
_sub2$ = 12						; size = 4
?util_equalSubstitutions@icu_56@@YACPBVNFSubstitution@1@0@Z PROC ; icu_56::util_equalSubstitutions, COMDAT
; Line 615
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 616
	cmp	DWORD PTR _sub1$[ebp], 0
	je	SHORT $LN4@util_equal
; Line 617
	cmp	DWORD PTR _sub2$[ebp], 0
	je	SHORT $LN3@util_equal
; Line 618
	mov	esi, esp
	mov	eax, DWORD PTR _sub2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sub1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sub1$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@util_equal
$LN3@util_equal:
; Line 619
	jmp	SHORT $LN2@util_equal
$LN4@util_equal:
; Line 620
	cmp	DWORD PTR _sub2$[ebp], 0
	jne	SHORT $LN2@util_equal
; Line 621
	mov	al, 1
	jmp	SHORT $LN5@util_equal
$LN2@util_equal:
; Line 623
	xor	al, al
$LN5@util_equal:
; Line 624
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?util_equalSubstitutions@icu_56@@YACPBVNFSubstitution@1@0@Z ENDP ; icu_56::util_equalSubstitutions
_TEXT	ENDS
PUBLIC	?getPos@NFSubstitution@icu_56@@QBEHXZ		; icu_56::NFSubstitution::getPos
PUBLIC	__$ArrayPad$
PUBLIC	?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z ; icu_56::NFRule::_appendRuleText
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z$1
__ehfuncinfo$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
tv66 = -392						; size = 4
tv137 = -390						; size = 2
tv92 = -390						; size = 2
tv79 = -390						; size = 2
_temp$ = -192						; size = 64
_ruleTextCopy$ = -120					; size = 64
_i$43370 = -48						; size = 4
_numCarets$43369 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z PROC ; icu_56::NFRule::_appendRuleText, COMDAT
; _this$ = ecx
; Line 658
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 659
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getType@NFRule@icu_56@@QBE?AW4ERuleType@12@XZ ; icu_56::NFRule::getType
	mov	DWORD PTR tv66[ebp], eax
	mov	eax, DWORD PTR tv66[ebp]
	add	eax, 6
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 5
	ja	$LN9@appendRule
	mov	ecx, DWORD PTR tv66[ebp]
	jmp	DWORD PTR $LN33@appendRule[ecx*4]
$LN15@appendRule:
; Line 660
	mov	esi, esp
	push	2
	push	OFFSET _gMinusX
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN14@appendRule:
; Line 661
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	test	ecx, ecx
	jne	SHORT $LN20@appendRule
	mov	edx, 46					; 0000002eH
	mov	WORD PTR tv79[ebp], dx
	jmp	SHORT $LN21@appendRule
$LN20@appendRule:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv79[ebp], cx
$LN21@appendRule:
	mov	esi, esp
	push	120					; 00000078H
	mov	edi, esp
	movzx	edx, WORD PTR tv79[ebp]
	push	edx
	mov	ebx, esp
	push	120					; 00000078H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN13@appendRule:
; Line 662
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	test	ecx, ecx
	jne	SHORT $LN22@appendRule
	mov	edx, 46					; 0000002eH
	mov	WORD PTR tv92[ebp], dx
	jmp	SHORT $LN23@appendRule
$LN22@appendRule:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv92[ebp], cx
$LN23@appendRule:
	mov	esi, esp
	push	120					; 00000078H
	mov	edi, esp
	movzx	edx, WORD PTR tv92[ebp]
	push	edx
	mov	ebx, esp
	push	48					; 00000030H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN12@appendRule:
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	test	ecx, ecx
	jne	SHORT $LN24@appendRule
	mov	edx, 46					; 0000002eH
	mov	WORD PTR tv137[ebp], dx
	jmp	SHORT $LN25@appendRule
$LN24@appendRule:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+14]
	mov	WORD PTR tv137[ebp], cx
$LN25@appendRule:
	mov	esi, esp
	push	48					; 00000030H
	mov	edi, esp
	movzx	edx, WORD PTR tv137[ebp]
	push	edx
	mov	ebx, esp
	push	120					; 00000078H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN11@appendRule:
; Line 664
	mov	esi, esp
	push	3
	push	OFFSET _gInf
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN10@appendRule:
; Line 665
	mov	esi, esp
	push	3
	push	OFFSET _gNaN
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@appendRule
$LN9@appendRule:
; Line 673
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z ; icu_56::util_append64
	add	esp, 12					; 0000000cH
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 10			; 0000000aH
	je	SHORT $LN8@appendRule
; Line 675
	mov	esi, esp
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z ; icu_56::util_append64
	add	esp, 12					; 0000000cH
$LN8@appendRule:
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	call	?expectedExponent@NFRule@icu_56@@ABEFXZ	; icu_56::NFRule::expectedExponent
	cwde
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	sub	eax, edx
	mov	DWORD PTR _numCarets$43369[ebp], eax
; Line 679
	mov	DWORD PTR _i$43370[ebp], 0
	jmp	SHORT $LN7@appendRule
$LN6@appendRule:
	mov	eax, DWORD PTR _i$43370[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43370[ebp], eax
$LN7@appendRule:
	mov	eax, DWORD PTR _i$43370[ebp]
	cmp	eax, DWORD PTR _numCarets$43369[ebp]
	jge	SHORT $LN16@appendRule
; Line 680
	mov	esi, esp
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 681
	jmp	SHORT $LN6@appendRule
$LN16@appendRule:
; Line 684
	mov	esi, esp
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 685
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 690
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN4@appendRule
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@appendRule
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	test	eax, eax
	je	SHORT $LN4@appendRule
$LN3@appendRule:
; Line 691
	mov	esi, esp
	push	39					; 00000027H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@appendRule:
; Line 696
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 697
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 699
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 700
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@appendRule
; Line 701
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 702
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	push	eax
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@appendRule:
; Line 704
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@appendRule
; Line 705
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 706
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	push	eax
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@appendRule:
; Line 709
	mov	esi, esp
	lea	eax, DWORD PTR _ruleTextCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 713
	mov	esi, esp
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 714
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@appendRule
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN32@appendRule:
	DD	2
	DD	$LN31@appendRule
$LN31@appendRule:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN28@appendRule
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN29@appendRule
$LN29@appendRule:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN28@appendRule:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	121					; 00000079H
	DB	0
	npad	2
$LN33@appendRule:
	DD	$LN10@appendRule
	DD	$LN11@appendRule
	DD	$LN12@appendRule
	DD	$LN13@appendRule
	DD	$LN14@appendRule
	DD	$LN15@appendRule
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleTextCopy$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_appendRuleText@NFRule@icu_56@@QBEXAAVUnicodeString@2@@Z ENDP ; icu_56::NFRule::_appendRuleText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPos@NFSubstitution@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPos@NFSubstitution@icu_56@@QBEHXZ PROC		; icu_56::NFSubstitution::getPos, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\nfsubs.h
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPos@NFSubstitution@icu_56@@QBEHXZ ENDP		; icu_56::NFSubstitution::getPos
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	?util64_tou@icu_56@@YAI_JPA_WIIC@Z:PROC		; icu_56::util64_tou
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\nfrule.cpp
xdata$x	SEGMENT
__unwindtable$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z$0
__ehfuncinfo$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z
_TEXT	SEGMENT
_temp$ = -616						; size = 64
_len$ = -544						; size = 4
_buffer$ = -532						; size = 512
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
_n$ = 12						; size = 8
?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z PROC	; icu_56::util_append64, COMDAT
; Line 649
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 800				; 00000320H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-812]
	mov	ecx, 200				; 000000c8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 651
	push	0
	push	10					; 0000000aH
	push	512					; 00000200H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	?util64_tou@icu_56@@YAI_JPA_WIIC@Z	; icu_56::util64_tou
	add	esp, 24					; 00000018H
	mov	DWORD PTR _len$[ebp], eax
; Line 652
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 653
	mov	esi, esp
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 654
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@util_appen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 812				; 0000032cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@util_appen:
	DD	2
	DD	$LN7@util_appen
$LN7@util_appen:
	DD	-532					; fffffdecH
	DD	512					; 00000200H
	DD	$LN4@util_appen
	DD	-616					; fffffd98H
	DD	64					; 00000040H
	DD	$LN5@util_appen
$LN5@util_appen:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN4@util_appen:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-816]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?util_append64@icu_56@@YAXAAVUnicodeString@1@_J@Z ENDP	; icu_56::util_append64
PUBLIC	__$ArrayPad$
PUBLIC	?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRule::doFormat
EXTRN	?format@PluralFormat@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::format
EXTRN	_uprv_pow_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$2
__ehfuncinfo$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv221 = -504						; size = 4
tv227 = -500						; size = 4
tv354 = -496						; size = 8
tv223 = -492						; size = 4
tv219 = -492						; size = 4
tv275 = -488						; size = 4
tv230 = -488						; size = 4
tv224 = -488						; size = 4
tv213 = -488						; size = 4
tv193 = -488						; size = 4
$T43395 = -480						; size = 64
$T43397 = -408						; size = 64
$T43399 = -336						; size = 64
_initialLength$43393 = -72				; size = 4
_pluralRuleEnd$43392 = -60				; size = 4
_lengthOffset$ = -48					; size = 4
_pluralRuleStart$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
_pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NFRule::doFormat, COMDAT
; _this$ = ecx
; Line 731
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 737
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$[ebp], eax
; Line 738
	mov	DWORD PTR _lengthOffset$[ebp], 0
; Line 739
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 0
	jne	SHORT $LN6@doFormat
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 742
	jmp	$LN5@doFormat
$LN6@doFormat:
; Line 743
	mov	esi, esp
	push	0
	push	-1
	push	OFFSET _gDollarOpenParenthesis
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$[ebp], eax
; Line 744
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	-1
	push	OFFSET _gClosedParenthesisDollar
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleEnd$43392[ebp], eax
; Line 745
	mov	esi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _initialLength$43393[ebp], eax
; Line 746
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _pluralRuleEnd$43392[ebp], eax
	jge	SHORT $LN4@doFormat
; Line 747
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _pluralRuleEnd$43392[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR $T43395[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv224[ebp], eax
	mov	edx, DWORD PTR tv224[ebp]
	mov	DWORD PTR tv219[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43395[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@doFormat:
; Line 750
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	fild	QWORD PTR _number$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	mov	DWORD PTR tv275[ebp], edx
	fild	DWORD PTR tv275[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fstp	QWORD PTR tv354[ebp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	fdivr	QWORD PTR tv354[ebp]
	call	__ftol2_sse
	push	eax
	lea	ecx, DWORD PTR $T43397[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?format@PluralFormat@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::PluralFormat::format
	mov	DWORD PTR tv227[ebp], eax
	mov	eax, DWORD PTR tv227[ebp]
	mov	DWORD PTR tv221[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv221[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43397[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 751
	cmp	DWORD PTR _pluralRuleStart$[ebp], 0
	jle	SHORT $LN3@doFormat
; Line 752
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T43399[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv230[ebp], eax
	mov	edx, DWORD PTR tv230[ebp]
	mov	DWORD PTR tv223[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	eax, DWORD PTR tv223[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43399[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@doFormat:
; Line 754
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _initialLength$43393[ebp]
	sub	esi, eax
	mov	DWORD PTR _lengthOffset$[ebp], esi
$LN5@doFormat:
; Line 757
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@doFormat
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	cmp	eax, DWORD PTR _pluralRuleStart$[ebp]
	jle	SHORT $LN9@doFormat
	mov	ecx, DWORD PTR _lengthOffset$[ebp]
	mov	DWORD PTR tv193[ebp], ecx
	jmp	SHORT $LN10@doFormat
$LN9@doFormat:
	mov	DWORD PTR tv193[ebp], 0
$LN10@doFormat:
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _recursionCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, DWORD PTR tv193[ebp]
	push	ecx
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@doFormat:
; Line 760
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@doFormat
; Line 761
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	cmp	eax, DWORD PTR _pluralRuleStart$[ebp]
	jle	SHORT $LN11@doFormat
	mov	ecx, DWORD PTR _lengthOffset$[ebp]
	mov	DWORD PTR tv213[ebp], ecx
	jmp	SHORT $LN12@doFormat
$LN11@doFormat:
	mov	DWORD PTR tv213[ebp], 0
$LN12@doFormat:
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _recursionCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, DWORD PTR tv213[ebp]
	push	ecx
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@doFormat:
; Line 763
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43395[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43397[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43399[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doFormat@NFRule@icu_56@@QBEX_JAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::doFormat
PUBLIC	__real@3ff0000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ; icu_56::NFRule::doFormat
EXTRN	_uprv_round_56:PROC
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$2
__ehfuncinfo$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv234 = -508						; size = 4
tv232 = -508						; size = 4
tv230 = -508						; size = 4
tv309 = -504						; size = 4
tv295 = -504						; size = 4
tv241 = -504						; size = 4
tv238 = -504						; size = 4
tv235 = -504						; size = 4
tv224 = -504						; size = 4
tv204 = -504						; size = 4
$T43417 = -496						; size = 64
$T43422 = -424						; size = 64
$T43424 = -352						; size = 64
_pluralVal$43418 = -88					; size = 8
_initialLength$43415 = -72				; size = 4
_pluralRuleEnd$43414 = -60				; size = 4
_lengthOffset$ = -48					; size = 4
_pluralRuleStart$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_toInsertInto$ = 16					; size = 4
_pos$ = 20						; size = 4
_recursionCount$ = 24					; size = 4
_status$ = 28						; size = 4
?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z PROC ; icu_56::NFRule::doFormat, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 496				; 000001f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$[ebp], eax
; Line 784
	mov	DWORD PTR _lengthOffset$[ebp], 0
; Line 785
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 0
	jne	SHORT $LN8@doFormat@2
; Line 786
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 788
	jmp	$LN7@doFormat@2
$LN8@doFormat@2:
; Line 789
	mov	esi, esp
	push	0
	push	-1
	push	OFFSET _gDollarOpenParenthesis
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$[ebp], eax
; Line 790
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	-1
	push	OFFSET _gClosedParenthesisDollar
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleEnd$43414[ebp], eax
; Line 791
	mov	esi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _initialLength$43415[ebp], eax
; Line 792
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _pluralRuleEnd$43414[ebp], eax
	jge	SHORT $LN6@doFormat@2
; Line 793
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _pluralRuleEnd$43414[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR $T43417[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv235[ebp], eax
	mov	edx, DWORD PTR tv235[ebp]
	mov	DWORD PTR tv230[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR tv230[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43417[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@doFormat@2:
; Line 795
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR _pluralVal$43418[ebp]
; Line 796
	fld	QWORD PTR _pluralVal$43418[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN5@doFormat@2
	fld1
	fcomp	QWORD PTR _pluralVal$43418[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@doFormat@2
; Line 799
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	mov	DWORD PTR tv295[ebp], ecx
	fild	DWORD PTR tv295[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [edx+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	fmul	QWORD PTR _pluralVal$43418[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_round_56
	add	esp, 8
	fstp	QWORD PTR _pluralVal$43418[ebp]
; Line 801
	jmp	SHORT $LN4@doFormat@2
$LN5@doFormat@2:
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	mov	DWORD PTR tv309[ebp], ecx
	fild	DWORD PTR tv309[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [edx+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_pow_56
	add	esp, 16					; 00000010H
	fdivr	QWORD PTR _pluralVal$43418[ebp]
	fstp	QWORD PTR _pluralVal$43418[ebp]
$LN4@doFormat@2:
; Line 804
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	fld	QWORD PTR _pluralVal$43418[ebp]
	call	__ftol2_sse
	push	eax
	lea	ecx, DWORD PTR $T43422[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?format@PluralFormat@icu_56@@QBE?AVUnicodeString@2@HAAW4UErrorCode@@@Z ; icu_56::PluralFormat::format
	mov	DWORD PTR tv238[ebp], eax
	mov	eax, DWORD PTR tv238[ebp]
	mov	DWORD PTR tv232[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv232[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43422[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 805
	cmp	DWORD PTR _pluralRuleStart$[ebp], 0
	jle	SHORT $LN3@doFormat@2
; Line 806
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T43424[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv241[ebp], eax
	mov	edx, DWORD PTR tv241[ebp]
	mov	DWORD PTR tv234[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	eax, DWORD PTR tv234[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43424[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@doFormat@2:
; Line 808
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _toInsertInto$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _initialLength$43415[ebp]
	sub	esi, eax
	mov	DWORD PTR _lengthOffset$[ebp], esi
$LN7@doFormat@2:
; Line 811
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@doFormat@2
; Line 812
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	cmp	eax, DWORD PTR _pluralRuleStart$[ebp]
	jle	SHORT $LN11@doFormat@2
	mov	ecx, DWORD PTR _lengthOffset$[ebp]
	mov	DWORD PTR tv204[ebp], ecx
	jmp	SHORT $LN12@doFormat@2
$LN11@doFormat@2:
	mov	DWORD PTR tv204[ebp], 0
$LN12@doFormat@2:
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _recursionCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, DWORD PTR tv204[ebp]
	push	ecx
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@doFormat@2:
; Line 814
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@doFormat@2
; Line 815
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	cmp	eax, DWORD PTR _pluralRuleStart$[ebp]
	jle	SHORT $LN13@doFormat@2
	mov	ecx, DWORD PTR _lengthOffset$[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	jmp	SHORT $LN14@doFormat@2
$LN13@doFormat@2:
	mov	DWORD PTR tv224[ebp], 0
$LN14@doFormat@2:
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _recursionCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, DWORD PTR tv224[ebp]
	push	ecx
	mov	edx, DWORD PTR _toInsertInto$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@doFormat@2:
; Line 817
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43417[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43422[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43424[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doFormat@NFRule@icu_56@@QBEXNAAVUnicodeString@2@HHAAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::doFormat
PUBLIC	?shouldRollBack@NFRule@icu_56@@QBECN@Z		; icu_56::NFRule::shouldRollBack
EXTRN	_uprv_fmod_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?shouldRollBack@NFRule@icu_56@@QBECN@Z
_TEXT	SEGMENT
tv133 = -229						; size = 1
tv185 = -228						; size = 8
_re$43434 = -24						; size = 8
_this$ = -8						; size = 4
_number$ = 8						; size = 8
?shouldRollBack@NFRule@icu_56@@QBECN@Z PROC		; icu_56::NFRule::shouldRollBack, COMDAT
; _this$ = ecx
; Line 829
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@shouldRoll
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@shouldRoll
$LN1@shouldRoll:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	$LN3@shouldRoll
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@shouldRoll
$LN2@shouldRoll:
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?util64_pow@icu_56@@YA_JHI@Z		; icu_56::util64_pow
	add	esp, 8
	mov	DWORD PTR _re$43434[ebp], eax
	mov	DWORD PTR _re$43434[ebp+4], edx
; Line 848
	fild	QWORD PTR _re$43434[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_fmod_56
	add	esp, 16					; 00000010H
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@shouldRoll
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _re$43434[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _re$43434[ebp]
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__allrem
	mov	DWORD PTR tv185[ebp], eax
	mov	DWORD PTR tv185[ebp+4], edx
	mov	eax, DWORD PTR tv185[ebp]
	or	eax, DWORD PTR tv185[ebp+4]
	je	SHORT $LN6@shouldRoll
	mov	BYTE PTR tv133[ebp], 1
	jmp	SHORT $LN7@shouldRoll
$LN6@shouldRoll:
	mov	BYTE PTR tv133[ebp], 0
$LN7@shouldRoll:
	mov	al, BYTE PTR tv133[ebp]
	jmp	SHORT $LN4@shouldRoll
$LN3@shouldRoll:
; Line 850
	xor	al, al
$LN4@shouldRoll:
; Line 851
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?shouldRollBack@NFRule@icu_56@@QBECN@Z ENDP		; icu_56::NFRule::shouldRollBack
_TEXT	ENDS
PUBLIC	?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z ; icu_56::NFRule::matchToDelimiter
PUBLIC	?stripPrefix@NFRule@icu_56@@ABEXAAVUnicodeString@2@ABV32@AAVParsePosition@2@@Z ; icu_56::NFRule::stripPrefix
PUBLIC	__$ArrayPad$
PUBLIC	?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z ; icu_56::NFRule::doParse
EXTRN	_uprv_getNaN_56:PROC
EXTRN	?setDouble@Formattable@icu_56@@QAEXN@Z:PROC	; icu_56::Formattable::setDouble
EXTRN	_uprv_getInfinity_56:PROC
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??1ParsePosition@icu_56@@UAE@XZ:PROC
EXTRN	?setLong@Formattable@icu_56@@QAEXH@Z:PROC	; icu_56::Formattable::setLong
EXTRN	__imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0ParsePosition@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z
_TEXT	SEGMENT
tv165 = -740						; size = 8
tv413 = -732						; size = 4
tv391 = -732						; size = 4
tv370 = -732						; size = 4
tv88 = -732						; size = 4
tv79 = -732						; size = 4
$T51204 = -721						; size = 1
$T51205 = -709						; size = 1
$T51206 = -697						; size = 1
$T51209 = -685						; size = 1
_temp$43477 = -484					; size = 4
_temp$43474 = -472					; size = 4
_pp2$43469 = -460					; size = 12
_workText2$43468 = -440					; size = 64
_partialResult$43465 = -368				; size = 8
_temp$ = -352						; size = 64
_tempBaseValue$ = -280					; size = 8
_start$ = -264						; size = 4
_result$ = -252						; size = 8
_highWaterMark$ = -236					; size = 4
_prefixLength$ = -224					; size = 4
_prefix$ = -212						; size = 64
_sub2Pos$ = -140					; size = 4
_sub1Pos$ = -128					; size = 4
_workText$ = -116					; size = 64
_pp$ = -44						; size = 12
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_isFractionRule$ = 16					; size = 1
_upperBound$ = 20					; size = 8
_resVal$ = 28						; size = 4
?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z PROC ; icu_56::NFRule::doParse, COMDAT
; _this$ = ecx
; Line 895
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-740]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 898
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 899
	mov	esi, esp
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 901
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN21@doParse
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN22@doParse
$LN21@doParse:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
$LN22@doParse:
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _sub1Pos$[ebp], edx
; Line 902
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN23@doParse
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	?getPos@NFSubstitution@icu_56@@QBEHXZ	; icu_56::NFSubstitution::getPos
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN24@doParse
$LN23@doParse:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN24@doParse:
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR _sub2Pos$[ebp], edx
; Line 908
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 909
	mov	esi, esp
	mov	eax, DWORD PTR _sub1Pos$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 924
	lea	eax, DWORD PTR _pp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _workText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?stripPrefix@NFRule@icu_56@@ABEXAAVUnicodeString@2@ABV32@AAVParsePosition@2@@Z ; icu_56::NFRule::stripPrefix
; Line 925
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	DWORD PTR _prefixLength$[ebp], esi
; Line 931
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN18@doParse
	cmp	DWORD PTR _sub1Pos$[ebp], 0
	je	$LN18@doParse
; Line 934
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 935
	push	0
	mov	ecx, DWORD PTR _resVal$[ebp]
	call	?setLong@Formattable@icu_56@@QAEXH@Z	; icu_56::Formattable::setLong
; Line 936
	mov	BYTE PTR $T51204[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51204[ebp]
	jmp	$LN19@doParse
$LN18@doParse:
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv370[ebp], eax
	mov	ecx, DWORD PTR tv370[ebp]
	cmp	DWORD PTR [ecx], -5			; fffffffbH
	jne	$LN17@doParse
	mov	edx, DWORD PTR tv370[ebp]
	cmp	DWORD PTR [edx+4], -1
	jne	$LN17@doParse
; Line 940
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 941
	call	_uprv_getInfinity_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _resVal$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 942
	mov	BYTE PTR $T51205[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51205[ebp]
	jmp	$LN19@doParse
$LN17@doParse:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv391[ebp], eax
	mov	ecx, DWORD PTR tv391[ebp]
	cmp	DWORD PTR [ecx], -6			; fffffffaH
	jne	$LN16@doParse
	mov	edx, DWORD PTR tv391[ebp]
	cmp	DWORD PTR [edx+4], -1
	jne	$LN16@doParse
; Line 946
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 947
	call	_uprv_getNaN_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _resVal$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 948
	mov	BYTE PTR $T51206[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51206[ebp]
	jmp	$LN19@doParse
$LN16@doParse:
; Line 980
	mov	DWORD PTR _highWaterMark$[ebp], 0
; Line 981
	fldz
	fstp	QWORD PTR _result$[ebp]
; Line 982
	mov	DWORD PTR _start$[ebp], 0
; Line 983
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv413[ebp], eax
	mov	ecx, DWORD PTR tv413[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jg	SHORT $LN25@doParse
	jl	SHORT $LN33@doParse
	mov	edx, DWORD PTR tv413[ebp]
	cmp	DWORD PTR [edx], 0
	ja	SHORT $LN25@doParse
$LN33@doParse:
	mov	DWORD PTR tv165[ebp], 0
	mov	DWORD PTR tv165[ebp+4], 0
	jmp	SHORT $LN26@doParse
$LN25@doParse:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv165[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR tv165[ebp+4], edx
$LN26@doParse:
	fild	QWORD PTR tv165[ebp]
	fstp	QWORD PTR _tempBaseValue$[ebp]
; Line 985
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN15@doParse:
; Line 991
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 993
	mov	eax, DWORD PTR _sub2Pos$[ebp]
	sub	eax, DWORD PTR _sub1Pos$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _sub1Pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 996
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	lea	edx, DWORD PTR _pp$[ebp]
	push	edx
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _tempBaseValue$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	lea	edx, DWORD PTR _workText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z ; icu_56::NFRule::matchToDelimiter
	fstp	QWORD PTR _partialResult$43465[ebp]
; Line 1002
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN11@doParse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	$LN12@doParse
$LN11@doParse:
; Line 1003
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$[ebp], eax
; Line 1005
	mov	esi, esp
	lea	ecx, DWORD PTR _workText2$43468[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1006
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	edi, esp
	push	esi
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	eax, DWORD PTR _workText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workText2$43468[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
; Line 1007
	mov	esi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1013
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _sub2Pos$[ebp]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _sub2Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1016
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	lea	edx, DWORD PTR _pp2$43469[ebp]
	push	edx
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _partialResult$43465[ebp]
	fstp	QWORD PTR [esp]
	push	0
	lea	ecx, DWORD PTR _workText2$43468[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z ; icu_56::NFRule::matchToDelimiter
	fstp	QWORD PTR _partialResult$43465[ebp]
; Line 1021
	mov	esi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@doParse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN10@doParse
$LN9@doParse:
; Line 1022
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	add	esi, DWORD PTR _prefixLength$[ebp]
	mov	edi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	cmp	esi, DWORD PTR _highWaterMark$[ebp]
	jle	SHORT $LN8@doParse
; Line 1023
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	add	esi, DWORD PTR _prefixLength$[ebp]
	mov	edi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	DWORD PTR _highWaterMark$[ebp], esi
; Line 1024
	fld	QWORD PTR _partialResult$43465[ebp]
	fstp	QWORD PTR _result$[ebp]
$LN8@doParse:
; Line 1027
	jmp	SHORT $LN6@doParse
$LN10@doParse:
; Line 1030
	mov	esi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	add	esi, DWORD PTR _sub1Pos$[ebp]
	mov	edi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	DWORD PTR _temp$43474[ebp], esi
; Line 1031
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _temp$43474[ebp], eax
	jle	SHORT $LN6@doParse
; Line 1032
	mov	esi, esp
	mov	eax, DWORD PTR _temp$43474[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@doParse:
; Line 1035
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _workText2$43468[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1036
	jmp	SHORT $LN4@doParse
$LN12@doParse:
; Line 1039
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _sub1Pos$[ebp]
	mov	DWORD PTR _temp$43477[ebp], eax
; Line 1040
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _temp$43477[ebp], eax
	jle	SHORT $LN4@doParse
; Line 1041
	mov	esi, esp
	mov	eax, DWORD PTR _temp$43477[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@doParse:
; Line 1050
	mov	eax, DWORD PTR _sub1Pos$[ebp]
	cmp	eax, DWORD PTR _sub2Pos$[ebp]
	je	SHORT $LN3@doParse
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN3@doParse
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN3@doParse
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _start$[ebp]
	jne	$LN15@doParse
$LN3@doParse:
; Line 1056
	mov	esi, esp
	mov	eax, DWORD PTR _highWaterMark$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1059
	cmp	DWORD PTR _highWaterMark$[ebp], 0
	jle	SHORT $LN2@doParse
; Line 1060
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@doParse:
; Line 1069
	movsx	eax, BYTE PTR _isFractionRule$[ebp]
	test	eax, eax
	je	SHORT $LN1@doParse
	cmp	DWORD PTR _highWaterMark$[ebp], 0
	jle	SHORT $LN1@doParse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN1@doParse
; Line 1070
	fld1
	fdiv	QWORD PTR _result$[ebp]
	fstp	QWORD PTR _result$[ebp]
$LN1@doParse:
; Line 1073
	sub	esp, 8
	fld	QWORD PTR _result$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _resVal$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 1074
	mov	BYTE PTR $T51209[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51209[ebp]
$LN19@doParse:
; Line 1075
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@doParse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 740				; 000002e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN42@doParse:
	DD	6
	DD	$LN41@doParse
$LN41@doParse:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN34@doParse
	DD	-116					; ffffff8cH
	DD	64					; 00000040H
	DD	$LN35@doParse
	DD	-212					; ffffff2cH
	DD	64					; 00000040H
	DD	$LN36@doParse
	DD	-352					; fffffea0H
	DD	64					; 00000040H
	DD	$LN37@doParse
	DD	-440					; fffffe48H
	DD	64					; 00000040H
	DD	$LN38@doParse
	DD	-460					; fffffe34H
	DD	12					; 0000000cH
	DD	$LN39@doParse
$LN39@doParse:
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	50					; 00000032H
	DB	0
$LN38@doParse:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN37@doParse:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN36@doParse:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN35@doParse:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	107					; 0000006bH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN34@doParse:
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _workText$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _workText2$43468[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _pp2$43469[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-744]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doParse@NFRule@icu_56@@QBECABVUnicodeString@2@AAVParsePosition@2@CNAAVFormattable@2@@Z ENDP ; icu_56::NFRule::doParse
PUBLIC	?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::NFRule::prefixLength
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stripPrefix@NFRule@icu_56@@ABEXAAVUnicodeString@2@ABV32@AAVParsePosition@2@@Z
_TEXT	SEGMENT
_pfl$43491 = -32					; size = 4
_status$43490 = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_prefix$ = 12						; size = 4
_pp$ = 16						; size = 4
?stripPrefix@NFRule@icu_56@@ABEXAAVUnicodeString@2@ABV32@AAVParsePosition@2@@Z PROC ; icu_56::NFRule::stripPrefix, COMDAT
; _this$ = ecx
; Line 1095
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1097
	mov	esi, esp
	mov	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@stripPrefi
; Line 1098
	mov	DWORD PTR _status$43490[ebp], 0
; Line 1103
	lea	eax, DWORD PTR _status$43490[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::NFRule::prefixLength
	mov	DWORD PTR _pfl$43491[ebp], eax
; Line 1104
	mov	eax, DWORD PTR _status$43490[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@stripPrefi
; Line 1105
	jmp	SHORT $LN4@stripPrefi
$LN2@stripPrefi:
; Line 1107
	cmp	DWORD PTR _pfl$43491[ebp], 0
	je	SHORT $LN4@stripPrefi
; Line 1110
	mov	esi, esp
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _pfl$43491[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1111
	mov	esi, esp
	mov	eax, DWORD PTR _pfl$43491[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@stripPrefi:
; Line 1114
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@stripPrefi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN8@stripPrefi:
	DD	1
	DD	$LN7@stripPrefi
$LN7@stripPrefi:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@stripPrefi
$LN6@stripPrefi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?stripPrefix@NFRule@icu_56@@ABEXAAVUnicodeString@2@ABV32@AAVParsePosition@2@@Z ENDP ; icu_56::NFRule::stripPrefix
_TEXT	ENDS
PUBLIC	?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z ; icu_56::NFRule::findText
PUBLIC	?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::allIgnorable
PUBLIC	__$ArrayPad$
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z
_TEXT	SEGMENT
$T51239 = -916						; size = 8
$T51240 = -900						; size = 8
$T51241 = -884						; size = 8
$T51242 = -868						; size = 8
_success$43528 = -657					; size = 1
_result$43527 = -648					; size = 224
_tempPP$43526 = -416					; size = 12
_success$43516 = -393					; size = 1
_subText$43514 = -384					; size = 64
_dPos$43510 = -312					; size = 4
_dLen$43509 = -300					; size = 4
_result$43508 = -288					; size = 224
_tempPP$43507 = -56					; size = 12
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_startPos$ = 12						; size = 4
__baseValue$ = 16					; size = 8
_delimiter$ = 24					; size = 4
_pp$ = 28						; size = 4
_sub$ = 32						; size = 4
_upperBound$ = 36					; size = 8
?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z PROC ; icu_56::NFRule::matchToDelimiter, COMDAT
; _this$ = ecx
; Line 1153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 908				; 0000038cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-920]
	mov	ecx, 227				; 000000e3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1154
	mov	DWORD PTR _status$[ebp], 0
; Line 1159
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _delimiter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::allIgnorable
	movsx	edx, al
	test	edx, edx
	jne	$LN14@matchToDel
; Line 1160
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@matchToDel
; Line 1161
	fldz
	jmp	$LN3@matchToDel
$LN13@matchToDel:
; Line 1163
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1164
	lea	ecx, DWORD PTR _result$43508[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1171
	lea	eax, DWORD PTR _dLen$43509[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _delimiter$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z ; icu_56::NFRule::findText
	mov	DWORD PTR _dPos$43510[ebp], eax
$LN12@matchToDel:
; Line 1175
	cmp	DWORD PTR _dPos$43510[ebp], 0
	jl	$LN11@matchToDel
; Line 1176
	mov	esi, esp
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1177
	mov	esi, esp
	mov	eax, DWORD PTR _dPos$43510[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1178
	mov	esi, esp
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN6@matchToDel
; Line 1185
	mov	esi, esp
	lea	eax, DWORD PTR _result$43508[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [edx]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __baseValue$[ebp]
	fstp	QWORD PTR [esp]
	lea	edx, DWORD PTR _tempPP$43507[ebp]
	push	edx
	lea	eax, DWORD PTR _subText$43514[ebp]
	push	eax
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _success$43516[ebp], al
; Line 1193
	movsx	eax, BYTE PTR _success$43516[ebp]
	test	eax, eax
	je	$LN9@matchToDel
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _dPos$43510[ebp]
	jne	SHORT $LN9@matchToDel
; Line 1194
	mov	eax, DWORD PTR _dPos$43510[ebp]
	add	eax, DWORD PTR _dLen$43509[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1195
	lea	ecx, DWORD PTR _result$43508[ebp]
	call	?getDouble@Formattable@icu_56@@QBENXZ	; icu_56::Formattable::getDouble
	fstp	QWORD PTR $T51239[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _result$43508[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T51239[ebp]
	jmp	$LN3@matchToDel
; Line 1197
	jmp	SHORT $LN6@matchToDel
$LN9@matchToDel:
; Line 1200
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN7@matchToDel
; Line 1201
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	jmp	SHORT $LN6@matchToDel
$LN7@matchToDel:
; Line 1203
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@matchToDel:
; Line 1211
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1212
	lea	eax, DWORD PTR _dLen$43509[ebp]
	push	eax
	mov	ecx, DWORD PTR _dPos$43510[ebp]
	add	ecx, DWORD PTR _dLen$43509[ebp]
	push	ecx
	mov	edx, DWORD PTR _delimiter$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z ; icu_56::NFRule::findText
	mov	DWORD PTR _dPos$43510[ebp], eax
; Line 1213
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN12@matchToDel
$LN11@matchToDel:
; Line 1216
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1217
	fldz
	fstp	QWORD PTR $T51240[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _result$43508[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T51240[ebp]
	jmp	$LN3@matchToDel
	jmp	$LN3@matchToDel
$LN14@matchToDel:
; Line 1224
	cmp	DWORD PTR _sub$[ebp], 0
	jne	SHORT $LN4@matchToDel
; Line 1225
	fld	QWORD PTR __baseValue$[ebp]
	jmp	$LN3@matchToDel
; Line 1227
	jmp	$LN3@matchToDel
$LN4@matchToDel:
; Line 1228
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1229
	lea	ecx, DWORD PTR _result$43527[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1238
	mov	esi, esp
	lea	eax, DWORD PTR _result$43527[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [edx]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _upperBound$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __baseValue$[ebp]
	fstp	QWORD PTR [esp]
	lea	edx, DWORD PTR _tempPP$43526[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sub$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _success$43528[ebp], al
; Line 1239
	movsx	eax, BYTE PTR _success$43528[ebp]
	test	eax, eax
	je	$LN2@matchToDel
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@matchToDel
; Line 1244
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1245
	lea	ecx, DWORD PTR _result$43527[ebp]
	call	?getDouble@Formattable@icu_56@@QBENXZ	; icu_56::Formattable::getDouble
	fstp	QWORD PTR $T51241[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _result$43527[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T51241[ebp]
	jmp	SHORT $LN3@matchToDel
; Line 1247
	jmp	SHORT $LN1@matchToDel
$LN2@matchToDel:
; Line 1250
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@matchToDel:
; Line 1255
	fldz
	fstp	QWORD PTR $T51242[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _result$43527[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T51242[ebp]
$LN3@matchToDel:
; Line 1257
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@matchToDel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 920				; 00000398H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	3
$LN31@matchToDel:
	DD	7
	DD	$LN30@matchToDel
$LN30@matchToDel:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN22@matchToDel
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN23@matchToDel
	DD	-288					; fffffee0H
	DD	224					; 000000e0H
	DD	$LN24@matchToDel
	DD	-300					; fffffed4H
	DD	4
	DD	$LN25@matchToDel
	DD	-384					; fffffe80H
	DD	64					; 00000040H
	DD	$LN26@matchToDel
	DD	-416					; fffffe60H
	DD	12					; 0000000cH
	DD	$LN27@matchToDel
	DD	-648					; fffffd78H
	DD	224					; 000000e0H
	DD	$LN28@matchToDel
$LN28@matchToDel:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN27@matchToDel:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	80					; 00000050H
	DB	0
$LN26@matchToDel:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN25@matchToDel:
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN24@matchToDel:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN23@matchToDel:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	80					; 00000050H
	DB	0
$LN22@matchToDel:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43507[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$1:
	lea	ecx, DWORD PTR _result$43508[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _subText$43514[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _tempPP$43526[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z$4:
	lea	ecx, DWORD PTR _result$43527[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__ehhandler$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-924]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?matchToDelimiter@NFRule@icu_56@@ABENABVUnicodeString@2@HN0AAVParsePosition@2@PBVNFSubstitution@2@N@Z ENDP ; icu_56::NFRule::matchToDelimiter
PUBLIC	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
PUBLIC	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
PUBLIC	?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull
PUBLIC	??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>
EXTRN	?getOffset@CollationElementIterator@icu_56@@QBEHXZ:PROC ; icu_56::CollationElementIterator::getOffset
EXTRN	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationElementIterator::next
EXTRN	?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ:PROC ; icu_56::RuleBasedNumberFormat::getCollator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z$1
__ehfuncinfo$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51265 = -344						; size = 4
$T51266 = -332						; size = 4
$T51267 = -320						; size = 4
$T51268 = -308						; size = 4
_result$43655 = -104					; size = 4
_oPrefix$43639 = -92					; size = 4
_oStr$43638 = -80					; size = 4
_err$43637 = -68					; size = 4
_prefixIter$43633 = -56					; size = 4
_strIter$43631 = -44					; size = 4
_collator$43541 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_prefix$ = 12						; size = 4
_status$ = 16						; size = 4
?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::prefixLength, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1278
	mov	esi, esp
	mov	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN19@prefixLeng
; Line 1279
	xor	eax, eax
	jmp	$LN20@prefixLeng
$LN19@prefixLeng:
; Line 1284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN18@prefixLeng
; Line 1292
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	call	?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ ; icu_56::RuleBasedNumberFormat::getCollator
	mov	DWORD PTR _collator$43541[ebp], eax
; Line 1293
	cmp	DWORD PTR _collator$43541[ebp], 0
	jne	SHORT $LN17@prefixLeng
; Line 1294
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1295
	xor	eax, eax
	jmp	$LN20@prefixLeng
$LN17@prefixLeng:
; Line 1297
	mov	esi, esp
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collator$43541[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _collator$43541[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1298
	mov	esi, esp
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collator$43541[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _collator$43541[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1300
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN15@prefixLeng
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@prefixLeng
$LN15@prefixLeng:
; Line 1301
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1302
	mov	DWORD PTR $T51265[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	eax, DWORD PTR $T51265[ebp]
	jmp	$LN20@prefixLeng
$LN16@prefixLeng:
; Line 1305
	mov	DWORD PTR _err$43637[ebp], 0
; Line 1325
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oStr$43638[ebp], eax
; Line 1326
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oPrefix$43639[ebp], eax
$LN14@prefixLeng:
; Line 1328
	cmp	DWORD PTR _oPrefix$43639[ebp], -1
	je	$LN13@prefixLeng
$LN12@prefixLeng:
; Line 1331
	mov	eax, DWORD PTR _oStr$43638[ebp]
	push	eax
	call	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN10@prefixLeng
	cmp	DWORD PTR _oStr$43638[ebp], -1
	je	SHORT $LN10@prefixLeng
; Line 1332
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oStr$43638[ebp], eax
; Line 1333
	jmp	SHORT $LN12@prefixLeng
$LN10@prefixLeng:
; Line 1337
	mov	eax, DWORD PTR _oPrefix$43639[ebp]
	push	eax
	call	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@prefixLeng
	cmp	DWORD PTR _oPrefix$43639[ebp], -1
	je	SHORT $LN9@prefixLeng
; Line 1338
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oPrefix$43639[ebp], eax
; Line 1339
	jmp	SHORT $LN10@prefixLeng
$LN9@prefixLeng:
; Line 1347
	cmp	DWORD PTR _oPrefix$43639[ebp], -1
	jne	SHORT $LN8@prefixLeng
; Line 1348
	jmp	$LN13@prefixLeng
$LN8@prefixLeng:
; Line 1353
	cmp	DWORD PTR _oStr$43638[ebp], -1
	jne	SHORT $LN7@prefixLeng
; Line 1354
	mov	DWORD PTR $T51266[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	eax, DWORD PTR $T51266[ebp]
	jmp	$LN20@prefixLeng
$LN7@prefixLeng:
; Line 1361
	mov	eax, DWORD PTR _oStr$43638[ebp]
	push	eax
	call	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _oPrefix$43639[ebp]
	push	ecx
	call	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN6@prefixLeng
; Line 1362
	mov	DWORD PTR $T51267[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	eax, DWORD PTR $T51267[ebp]
	jmp	$LN20@prefixLeng
; Line 1367
	jmp	SHORT $LN5@prefixLeng
$LN6@prefixLeng:
; Line 1368
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oStr$43638[ebp], eax
; Line 1369
	lea	eax, DWORD PTR _err$43637[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _oPrefix$43639[ebp], eax
$LN5@prefixLeng:
; Line 1371
	jmp	$LN14@prefixLeng
$LN13@prefixLeng:
; Line 1373
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?getOffset@CollationElementIterator@icu_56@@QBEHXZ ; icu_56::CollationElementIterator::getOffset
	mov	DWORD PTR _result$43655[ebp], eax
; Line 1374
	cmp	DWORD PTR _oStr$43638[ebp], -1
	je	SHORT $LN4@prefixLeng
; Line 1375
	mov	eax, DWORD PTR _result$43655[ebp]
	sub	eax, 1
	mov	DWORD PTR _result$43655[ebp], eax
$LN4@prefixLeng:
; Line 1381
	mov	eax, DWORD PTR _result$43655[ebp]
	mov	DWORD PTR $T51268[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	eax, DWORD PTR $T51268[ebp]
	jmp	SHORT $LN20@prefixLeng
; Line 1432
	jmp	SHORT $LN20@prefixLeng
$LN18@prefixLeng:
; Line 1435
	mov	esi, esp
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@prefixLeng
; Line 1436
	mov	esi, esp
	mov	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN20@prefixLeng
; Line 1437
	jmp	SHORT $LN20@prefixLeng
$LN2@prefixLeng:
; Line 1438
	xor	eax, eax
$LN20@prefixLeng:
; Line 1441
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@prefixLeng
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN29@prefixLeng:
	DD	3
	DD	$LN28@prefixLeng
$LN28@prefixLeng:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN24@prefixLeng
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN25@prefixLeng
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN26@prefixLeng
$LN26@prefixLeng:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN25@prefixLeng:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN24@prefixLeng:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _strIter$43631[ebp]
	jmp	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
__unwindfunclet$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _prefixIter$43633[ebp]
	jmp	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
__ehhandler$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::prefixLength
PUBLIC	?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z ; icu_56::NFRule::findTextLenient
PUBLIC	__$ArrayPad$
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z:PROC
EXTRN	?parseType@PluralFormat@icu_56@@ABEXABVUnicodeString@2@PBVNFRule@2@AAVFormattable@2@AAVFieldPosition@2@@Z:PROC ; icu_56::PluralFormat::parseType
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$3
__ehfuncinfo$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z
_TEXT	SEGMENT
$T51285 = -688						; size = 4
$T51286 = -676						; size = 4
_suffix$43679 = -472					; size = 64
_prefix$43677 = -400					; size = 64
_matchLen$43675 = -328					; size = 4
_pluralRuleSuffix$43674 = -316				; size = 4
_pluralRuleStart$43673 = -304				; size = 4
_start$43671 = -292					; size = 4
_position$43670 = -280					; size = 16
_result$43669 = -256					; size = 224
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_key$ = 12						; size = 4
_startingAt$ = 16					; size = 4
_length$ = 20						; size = 4
?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z PROC ; icu_56::NFRule::findText, COMDAT
; _this$ = ecx
; Line 1463
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 680				; 000002a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-692]
	mov	ecx, 170				; 000000aaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1464
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 0
	je	$LN5@findText
; Line 1465
	lea	ecx, DWORD PTR _result$43669[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1466
	push	0
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	??0FieldPosition@icu_56@@QAE@H@Z	; icu_56::FieldPosition::FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1467
	mov	eax, DWORD PTR _startingAt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1468
	lea	eax, DWORD PTR _position$43670[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$43669[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+92]
	call	?parseType@PluralFormat@icu_56@@ABEXABVUnicodeString@2@PBVNFRule@2@AAVFormattable@2@AAVFieldPosition@2@@Z ; icu_56::PluralFormat::parseType
; Line 1469
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getBeginIndex
	mov	DWORD PTR _start$43671[ebp], eax
; Line 1470
	cmp	DWORD PTR _start$43671[ebp], 0
	jl	$LN4@findText
; Line 1471
	mov	esi, esp
	push	0
	push	-1
	push	OFFSET _gDollarOpenParenthesis
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralRuleStart$43673[ebp], eax
; Line 1472
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$43673[ebp]
	push	eax
	push	-1
	push	OFFSET _gClosedParenthesisDollar
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 2
	mov	DWORD PTR _pluralRuleSuffix$43674[ebp], eax
; Line 1473
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	sub	eax, DWORD PTR _start$43671[ebp]
	mov	DWORD PTR _matchLen$43675[ebp], eax
; Line 1474
	mov	esi, esp
	mov	eax, DWORD PTR _pluralRuleStart$43673[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1475
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _pluralRuleSuffix$43674[ebp]
	push	eax
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	DWORD PTR __imp_?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1477
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	lea	eax, DWORD PTR _prefix$43677[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _start$43671[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	$LN3@findText
	mov	esi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	lea	eax, DWORD PTR _suffix$43679[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _start$43671[ebp]
	add	ecx, DWORD PTR _matchLen$43675[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	$LN3@findText
; Line 1479
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	add	esi, DWORD PTR _matchLen$43675[ebp]
	mov	edi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], esi
; Line 1480
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _start$43671[ebp]
	sub	ecx, eax
	mov	DWORD PTR $T51285[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$43669[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR $T51285[ebp]
	jmp	$LN6@findText
$LN3@findText:
; Line 1482
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@findText:
; Line 1483
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1484
	mov	DWORD PTR $T51286[ebp], -1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _position$43670[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$43669[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR $T51286[ebp]
	jmp	SHORT $LN6@findText
$LN5@findText:
; Line 1486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@findText
; Line 1489
	mov	esi, esp
	mov	ecx, DWORD PTR _key$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1490
	mov	esi, esp
	mov	eax, DWORD PTR _startingAt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@findText
; Line 1492
	jmp	SHORT $LN6@findText
$LN2@findText:
; Line 1495
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startingAt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z ; icu_56::NFRule::findTextLenient
$LN6@findText:
; Line 1497
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@findText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 692				; 000002b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN18@findText:
	DD	4
	DD	$LN17@findText
$LN17@findText:
	DD	-256					; ffffff00H
	DD	224					; 000000e0H
	DD	$LN12@findText
	DD	-280					; fffffee8H
	DD	16					; 00000010H
	DD	$LN13@findText
	DD	-400					; fffffe70H
	DD	64					; 00000040H
	DD	$LN14@findText
	DD	-472					; fffffe28H
	DD	64					; 00000040H
	DD	$LN15@findText
$LN15@findText:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN14@findText:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN13@findText:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN12@findText:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$0:
	lea	ecx, DWORD PTR _result$43669[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$1:
	lea	ecx, DWORD PTR _position$43670[ebp]
	jmp	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$43677[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _suffix$43679[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-696]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?findText@NFRule@icu_56@@ABEHABVUnicodeString@2@0HPAH@Z ENDP ; icu_56::NFRule::findText
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z$0
__ehfuncinfo$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z
_TEXT	SEGMENT
$T51306 = -348						; size = 4
$T51307 = -336						; size = 4
_status$ = -132						; size = 4
_temp$ = -120						; size = 64
_keyLen$ = -48						; size = 4
_p$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_key$ = 12						; size = 4
_startingAt$ = 16					; size = 4
_length$ = 20						; size = 4
?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z PROC ; icu_56::NFRule::findTextLenient, COMDAT
; _this$ = ecx
; Line 1504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1513
	mov	eax, DWORD PTR _startingAt$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 1514
	mov	DWORD PTR _keyLen$[ebp], 0
; Line 1523
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1524
	mov	DWORD PTR _status$[ebp], 0
$LN4@findTextLe:
; Line 1525
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _p$[ebp], eax
	jge	$LN3@findTextLe
	cmp	DWORD PTR _keyLen$[ebp], 0
	jne	$LN3@findTextLe
; Line 1526
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _p$[ebp]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1527
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prefixLength@NFRule@icu_56@@ABEHABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::NFRule::prefixLength
	mov	DWORD PTR _keyLen$[ebp], eax
; Line 1528
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@findTextLe
; Line 1529
	jmp	SHORT $LN3@findTextLe
$LN2@findTextLe:
; Line 1531
	cmp	DWORD PTR _keyLen$[ebp], 0
	je	SHORT $LN1@findTextLe
; Line 1532
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _keyLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1533
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T51306[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51306[ebp]
	jmp	SHORT $LN5@findTextLe
$LN1@findTextLe:
; Line 1535
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
; Line 1536
	jmp	$LN4@findTextLe
$LN3@findTextLe:
; Line 1540
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1541
	mov	DWORD PTR $T51307[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51307[ebp]
$LN5@findTextLe:
; Line 1542
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@findTextLe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN12@findTextLe:
	DD	2
	DD	$LN11@findTextLe
$LN11@findTextLe:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN8@findTextLe
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN9@findTextLe
$LN9@findTextLe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN8@findTextLe:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?findTextLenient@NFRule@icu_56@@QBEHABVUnicodeString@2@0HPAH@Z ENDP ; icu_56::NFRule::findTextLenient
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51321 = -281						; size = 1
$T51322 = -269						; size = 1
_o$43717 = -68						; size = 4
_err$43716 = -56					; size = 4
_iter$43713 = -44					; size = 4
_collator$43710 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
_status$ = 12						; size = 4
?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::allIgnorable, COMDAT
; _this$ = ecx
; Line 1554
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1556
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@allIgnorab
; Line 1557
	mov	al, 1
	jmp	$LN7@allIgnorab
$LN6@allIgnorab:
; Line 1564
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@allIgnorab
; Line 1565
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	call	?getCollator@RuleBasedNumberFormat@icu_56@@ABEPBVRuleBasedCollator@2@XZ ; icu_56::RuleBasedNumberFormat::getCollator
	mov	DWORD PTR _collator$43710[ebp], eax
; Line 1566
	cmp	DWORD PTR _collator$43710[ebp], 0
	jne	SHORT $LN4@allIgnorab
; Line 1567
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1568
	xor	al, al
	jmp	$LN7@allIgnorab
$LN4@allIgnorab:
; Line 1570
	mov	esi, esp
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collator$43710[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _collator$43710[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1573
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@allIgnorab
; Line 1574
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1575
	mov	BYTE PTR $T51321[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	al, BYTE PTR $T51321[ebp]
	jmp	SHORT $LN7@allIgnorab
$LN3@allIgnorab:
; Line 1578
	mov	DWORD PTR _err$43716[ebp], 0
; Line 1579
	lea	eax, DWORD PTR _err$43716[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _o$43717[ebp], eax
$LN2@allIgnorab:
; Line 1581
	cmp	DWORD PTR _o$43717[ebp], -1
	je	SHORT $LN1@allIgnorab
	mov	eax, DWORD PTR _o$43717[ebp]
	push	eax
	call	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allIgnorab
; Line 1582
	lea	eax, DWORD PTR _err$43716[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
	mov	ecx, eax
	call	?next@CollationElementIterator@icu_56@@QAEHAAW4UErrorCode@@@Z ; icu_56::CollationElementIterator::next
	mov	DWORD PTR _o$43717[ebp], eax
; Line 1583
	jmp	SHORT $LN2@allIgnorab
$LN1@allIgnorab:
; Line 1585
	cmp	DWORD PTR _o$43717[ebp], -1
	sete	al
	mov	BYTE PTR $T51322[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$43713[ebp]
	call	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
	mov	al, BYTE PTR $T51322[ebp]
	jmp	SHORT $LN7@allIgnorab
$LN5@allIgnorab:
; Line 1591
	xor	al, al
$LN7@allIgnorab:
; Line 1592
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@allIgnorab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN14@allIgnorab:
	DD	2
	DD	$LN13@allIgnorab
$LN13@allIgnorab:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@allIgnorab
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN11@allIgnorab
$LN11@allIgnorab:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN10@allIgnorab:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _iter$43713[ebp]
	jmp	??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
__ehhandler$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?allIgnorable@NFRule@icu_56@@ABECABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::allIgnorable
PUBLIC	?setDecimalFormatSymbols@NFRule@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::NFRule::setDecimalFormatSymbols
EXTRN	?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NFSubstitution::setDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDecimalFormatSymbols@NFRule@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newSymbols$ = 8					; size = 4
_status$ = 12						; size = 4
?setDecimalFormatSymbols@NFRule@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z PROC ; icu_56::NFRule::setDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 1595
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1596
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN2@setDecimal
; Line 1597
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSymbols$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	call	?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::setDecimalFormatSymbols
$LN2@setDecimal:
; Line 1599
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN3@setDecimal
; Line 1600
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newSymbols$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	?setDecimalFormatSymbols@NFSubstitution@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ; icu_56::NFSubstitution::setDecimalFormatSymbols
$LN3@setDecimal:
; Line 1602
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setDecimalFormatSymbols@NFRule@icu_56@@QAEXABVDecimalFormatSymbols@2@AAW4UErrorCode@@@Z ENDP ; icu_56::NFRule::setDecimalFormatSymbols
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::LocalPointerBase<icu_56::CollationElementIterator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z PROC ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::LocalPointerBase<icu_56::CollationElementIterator>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ENDP ; icu_56::LocalPointer<icu_56::CollationElementIterator>::LocalPointer<icu_56::CollationElementIterator>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::~LocalPointerBase<icu_56::CollationElementIterator>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T51375 = -236						; size = 4
$T51376 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T51376[ebp], ecx
	mov	edx, DWORD PTR $T51376[ebp]
	mov	DWORD PTR $T51375[ebp], edx
	cmp	DWORD PTR $T51375[ebp], 0
	je	SHORT $LN3@LocalPoint
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51375[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51375[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::~LocalPointerBase<icu_56::CollationElementIterator>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::~LocalPointerBase<icu_56::CollationElementIterator>
__ehhandler$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::CollationElementIterator>::~LocalPointer<icu_56::CollationElementIterator>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QBEPAVCollationElementIterator@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::LocalPointerBase<icu_56::CollationElementIterator>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@PAVCollationElementIterator@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::LocalPointerBase<icu_56::CollationElementIterator>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::~LocalPointerBase<icu_56::CollationElementIterator>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VCollationElementIterator@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationElementIterator>::~LocalPointerBase<icu_56::CollationElementIterator>
_TEXT	ENDS
END

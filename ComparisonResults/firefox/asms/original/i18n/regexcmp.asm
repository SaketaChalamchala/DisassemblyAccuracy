; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\regexcmp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_gRuleParseStateTable DD 0eH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DD	011H
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DD	05cH
	DB	0feH
	DB	0eH
	DB	00H
	DB	01H
	DD	05cH
	DB	082H
	DB	0eH
	DB	00H
	DB	01H
	DD	045H
	DB	05bH
	DB	07bH
	DB	0cdH
	DB	01H
	DD	0eH
	DB	028H
	DB	01bH
	DB	00H
	DB	01H
	DD	02eH
	DB	02eH
	DB	0eH
	DB	00H
	DB	01H
	DD	025H
	DB	05eH
	DB	0eH
	DB	00H
	DB	01H
	DD	049H
	DB	024H
	DB	0eH
	DB	00H
	DB	01H
	DD	0eH
	DB	05cH
	DB	059H
	DB	00H
	DB	01H
	DD	029H
	DB	07cH
	DB	02H
	DB	00H
	DB	01H
	DD	03aH
	DB	029H
	DB	0ffH
	DB	00H
	DB	01H
	DD	059H
	DB	0fdH
	DB	02H
	DB	00H
	DB	00H
	DD	02dH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	0eH
	DB	02aH
	DB	044H
	DB	00H
	DB	01H
	DD	0eH
	DB	02bH
	DB	047H
	DB	00H
	DB	01H
	DD	0eH
	DB	03fH
	DB	04aH
	DB	00H
	DB	01H
	DD	068H
	DB	07bH
	DB	04dH
	DB	00H
	DB	01H
	DD	0eH
	DB	028H
	DB	017H
	DB	00H
	DB	01H
	DD	0eH
	DB	0ffH
	DB	014H
	DB	00H
	DB	00H
	DD	029H
	DB	07cH
	DB	02H
	DB	00H
	DB	01H
	DD	03aH
	DB	029H
	DB	0ffH
	DB	00H
	DB	01H
	DD	0eH
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DD	05dH
	DB	03fH
	DB	019H
	DB	00H
	DB	01H
	DD	0eH
	DB	0ffH
	DB	01bH
	DB	00H
	DB	00H
	DD	0eH
	DB	023H
	DB	032H
	DB	0eH
	DB	01H
	DD	0eH
	DB	0ffH
	DB	01dH
	DB	00H
	DB	00H
	DD	05dH
	DB	03fH
	DB	01dH
	DB	00H
	DB	01H
	DD	05H
	DB	0ffH
	DB	02H
	DB	0eH
	DB	00H
	DD	04dH
	DB	03aH
	DB	02H
	DB	0eH
	DB	01H
	DD	013H
	DB	03eH
	DB	02H
	DB	0eH
	DB	01H
	DD	021H
	DB	03dH
	DB	02H
	DB	014H
	DB	01H
	DD	014H
	DB	021H
	DB	02H
	DB	014H
	DB	01H
	DD	0eH
	DB	03cH
	DB	02eH
	DB	00H
	DB	01H
	DD	0eH
	DB	023H
	DB	032H
	DB	02H
	DB	01H
	DD	08H
	DB	069H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	064H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	06dH
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	073H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	075H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	077H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	078H
	DB	035H
	DB	00H
	DB	00H
	DD	08H
	DB	02dH
	DB	035H
	DB	00H
	DB	00H
	DD	035H
	DB	028H
	DB	0ceH
	DB	00H
	DB	01H
	DD	056H
	DB	07bH
	DB	0ceH
	DB	00H
	DB	01H
	DD	039H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	010H
	DB	03dH
	DB	02H
	DB	014H
	DB	01H
	DD	044H
	DB	021H
	DB	02H
	DB	014H
	DB	01H
	DD	05aH
	DB	080H
	DB	040H
	DB	00H
	DB	00H
	DD	039H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	0eH
	DB	029H
	DB	0ffH
	DB	00H
	DB	01H
	DD	05eH
	DB	0fdH
	DB	0ceH
	DB	00H
	DB	00H
	DD	0eH
	DB	0ffH
	DB	032H
	DB	00H
	DB	01H
	DD	02fH
	DB	069H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	064H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	06dH
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	073H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	075H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	077H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	078H
	DB	035H
	DB	00H
	DB	01H
	DD	02fH
	DB	02dH
	DB	035H
	DB	00H
	DB	01H
	DD	03H
	DB	029H
	DB	02H
	DB	00H
	DB	01H
	DD	022H
	DB	03aH
	DB	02H
	DB	0eH
	DB	01H
	DD	051H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	06H
	DB	080H
	DB	040H
	DB	00H
	DB	01H
	DD	06H
	DB	081H
	DB	040H
	DB	00H
	DB	01H
	DD	05H
	DB	03eH
	DB	02H
	DB	0eH
	DB	01H
	DD	018H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	05fH
	DB	03fH
	DB	014H
	DB	00H
	DB	01H
	DD	037H
	DB	02bH
	DB	014H
	DB	00H
	DB	01H
	DD	063H
	DB	0ffH
	DB	014H
	DB	00H
	DB	00H
	DD	031H
	DB	03fH
	DB	014H
	DB	00H
	DB	01H
	DD	042H
	DB	02bH
	DB	014H
	DB	00H
	DB	01H
	DD	038H
	DB	0ffH
	DB	014H
	DB	00H
	DB	00H
	DD	04cH
	DB	03fH
	DB	014H
	DB	00H
	DB	01H
	DD	033H
	DB	02bH
	DB	014H
	DB	00H
	DB	01H
	DD	040H
	DB	0ffH
	DB	014H
	DB	00H
	DB	00H
	DD	0eH
	DB	081H
	DB	04fH
	DB	00H
	DB	00H
	DD	0bH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	024H
	DB	081H
	DB	04fH
	DB	00H
	DB	01H
	DD	0eH
	DB	02cH
	DB	053H
	DB	00H
	DB	01H
	DD	053H
	DB	07dH
	DB	056H
	DB	00H
	DB	01H
	DD	0bH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	017H
	DB	081H
	DB	053H
	DB	00H
	DB	01H
	DD	0eH
	DB	07dH
	DB	056H
	DB	00H
	DB	01H
	DD	0bH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	03bH
	DB	03fH
	DB	014H
	DB	00H
	DB	01H
	DD	012H
	DB	02bH
	DB	014H
	DB	00H
	DB	01H
	DD	061H
	DB	0ffH
	DB	014H
	DB	00H
	DB	00H
	DD	04eH
	DB	041H
	DB	02H
	DB	00H
	DB	01H
	DD	02aH
	DB	042H
	DB	02H
	DB	00H
	DB	01H
	DD	01eH
	DB	062H
	DB	02H
	DB	00H
	DB	01H
	DD	015H
	DB	064H
	DB	0eH
	DB	00H
	DB	01H
	DD	043H
	DB	044H
	DB	0eH
	DB	00H
	DB	01H
	DD	062H
	DB	047H
	DB	02H
	DB	00H
	DB	01H
	DD	050H
	DB	068H
	DB	0eH
	DB	00H
	DB	01H
	DD	04aH
	DB	048H
	DB	0eH
	DB	00H
	DB	01H
	DD	0eH
	DB	06bH
	DB	073H
	DB	00H
	DB	01H
	DD	01cH
	DB	04eH
	DB	0eH
	DB	00H
	DB	00H
	DD	066H
	DB	070H
	DB	0eH
	DB	00H
	DB	00H
	DD	066H
	DB	050H
	DB	0eH
	DB	00H
	DB	00H
	DD	02cH
	DB	052H
	DB	0eH
	DB	00H
	DB	01H
	DD	04H
	DB	051H
	DB	02H
	DB	00H
	DB	01H
	DD	028H
	DB	053H
	DB	0eH
	DB	00H
	DB	01H
	DD	036H
	DB	073H
	DB	0eH
	DB	00H
	DB	01H
	DD	0fH
	DB	076H
	DB	0eH
	DB	00H
	DB	01H
	DD	023H
	DB	056H
	DB	0eH
	DB	00H
	DB	01H
	DD	055H
	DB	057H
	DB	0eH
	DB	00H
	DB	01H
	DD	02bH
	DB	077H
	DB	0eH
	DB	00H
	DB	01H
	DD	09H
	DB	058H
	DB	0eH
	DB	00H
	DB	01H
	DD	016H
	DB	05aH
	DB	02H
	DB	00H
	DB	01H
	DD	01fH
	DB	07aH
	DB	02H
	DB	00H
	DB	01H
	DD	03dH
	DB	081H
	DB	0eH
	DB	00H
	DB	01H
	DD	03fH
	DB	0fdH
	DB	0ceH
	DB	00H
	DB	00H
	DD	05bH
	DB	0ffH
	DB	0eH
	DB	00H
	DB	01H
	DD	02H
	DB	03cH
	DB	075H
	DB	00H
	DB	01H
	DD	018H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	067H
	DB	080H
	DB	077H
	DB	00H
	DB	01H
	DD	018H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	067H
	DB	080H
	DB	077H
	DB	00H
	DB	01H
	DD	067H
	DB	081H
	DB	077H
	DB	00H
	DB	01H
	DD	047H
	DB	03eH
	DB	0eH
	DB	00H
	DB	01H
	DD	018H
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	027H
	DB	05eH
	DB	07eH
	DB	00H
	DB	01H
	DD	0aH
	DB	03aH
	DB	080H
	DB	00H
	DB	00H
	DD	0eH
	DB	0ffH
	DB	07eH
	DB	00H
	DB	00H
	DD	058H
	DB	05dH
	DB	08dH
	DB	00H
	DB	01H
	DD	0eH
	DB	0ffH
	DB	083H
	DB	00H
	DB	00H
	DD	026H
	DB	05dH
	DB	0ffH
	DB	00H
	DB	01H
	DD	0eH
	DB	03aH
	DB	083H
	DB	00H
	DB	00H
	DD	02dH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	00H
	DD	026H
	DB	05dH
	DB	0ffH
	DB	00H
	DB	01H
	DD	03eH
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	0eH
	DB	05cH
	DB	0bfH
	DB	00H
	DB	01H
	DD	0eH
	DB	02dH
	DB	089H
	DB	00H
	DB	01H
	DD	0eH
	DB	026H
	DB	08bH
	DB	00H
	DB	01H
	DD	058H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	02dH
	DB	02dH
	DB	0ceH
	DB	00H
	DB	00H
	DD	054H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	02dH
	DB	026H
	DB	0ceH
	DB	00H
	DB	00H
	DD	01aH
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	026H
	DB	05dH
	DB	0ffH
	DB	00H
	DB	01H
	DD	03eH
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	0eH
	DB	02dH
	DB	0b2H
	DB	00H
	DB	01H
	DD	0eH
	DB	026H
	DB	0a9H
	DB	00H
	DB	01H
	DD	0eH
	DB	05cH
	DB	0bfH
	DB	00H
	DB	01H
	DD	052H
	DB	0fdH
	DB	0ceH
	DB	00H
	DB	00H
	DD	058H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	026H
	DB	05dH
	DB	0ffH
	DB	00H
	DB	01H
	DD	03eH
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	0eH
	DB	02dH
	DB	0abH
	DB	00H
	DB	01H
	DD	0eH
	DB	026H
	DB	0a6H
	DB	00H
	DB	01H
	DD	0eH
	DB	05cH
	DB	0bfH
	DB	00H
	DB	01H
	DD	052H
	DB	0fdH
	DB	0ceH
	DB	00H
	DB	00H
	DD	058H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	026H
	DB	05dH
	DB	0ffH
	DB	00H
	DB	01H
	DD	03eH
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	0eH
	DB	02dH
	DB	0aeH
	DB	00H
	DB	01H
	DD	0eH
	DB	026H
	DB	0b0H
	DB	00H
	DB	01H
	DD	0eH
	DB	05cH
	DB	0bfH
	DB	00H
	DB	01H
	DD	052H
	DB	0fdH
	DB	0ceH
	DB	00H
	DB	00H
	DD	058H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	03eH
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	057H
	DB	05dH
	DB	0ceH
	DB	00H
	DB	00H
	DD	0eH
	DB	05cH
	DB	0bfH
	DB	00H
	DB	01H
	DD	058H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	041H
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	046H
	DB	026H
	DB	0a2H
	DB	00H
	DB	01H
	DD	01aH
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	046H
	DB	026H
	DB	0a2H
	DB	00H
	DB	01H
	DD	01aH
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	020H
	DB	05bH
	DB	07bH
	DB	094H
	DB	01H
	DD	019H
	DB	02dH
	DB	0a2H
	DB	00H
	DB	01H
	DD	054H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	019H
	DB	02dH
	DB	0a2H
	DB	00H
	DB	01H
	DD	054H
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	046H
	DB	026H
	DB	0a2H
	DB	00H
	DB	01H
	DD	01aH
	DB	0ffH
	DB	08dH
	DB	00H
	DB	00H
	DD	019H
	DB	02dH
	DB	0a2H
	DB	00H
	DB	01H
	DD	054H
	DB	05bH
	DB	08dH
	DB	00H
	DB	00H
	DD	054H
	DB	05dH
	DB	08dH
	DB	00H
	DB	00H
	DD	0eH
	DB	05cH
	DB	0b7H
	DB	00H
	DB	01H
	DD	048H
	DB	0ffH
	DB	09bH
	DB	00H
	DB	01H
	DD	057H
	DB	073H
	DB	0ceH
	DB	00H
	DB	00H
	DD	057H
	DB	053H
	DB	0ceH
	DB	00H
	DB	00H
	DD	057H
	DB	077H
	DB	0ceH
	DB	00H
	DB	00H
	DD	057H
	DB	057H
	DB	0ceH
	DB	00H
	DB	00H
	DD	057H
	DB	064H
	DB	0ceH
	DB	00H
	DB	00H
	DD	057H
	DB	044H
	DB	0ceH
	DB	00H
	DB	00H
	DD	034H
	DB	04eH
	DB	09bH
	DB	00H
	DB	00H
	DD	048H
	DB	0ffH
	DB	09bH
	DB	00H
	DB	01H
	DD	03cH
	DB	070H
	DB	094H
	DB	00H
	DB	00H
	DD	03cH
	DB	050H
	DB	094H
	DB	00H
	DB	00H
	DD	01bH
	DB	04eH
	DB	08dH
	DB	00H
	DB	00H
	DD	0dH
	DB	073H
	DB	09bH
	DB	00H
	DB	01H
	DD	065H
	DB	053H
	DB	09bH
	DB	00H
	DB	01H
	DD	064H
	DB	077H
	DB	09bH
	DB	00H
	DB	01H
	DD	030H
	DB	057H
	DB	09bH
	DB	00H
	DB	01H
	DD	07H
	DB	064H
	DB	09bH
	DB	00H
	DB	01H
	DD	032H
	DB	044H
	DB	09bH
	DB	00H
	DB	01H
	DD	01H
	DB	068H
	DB	09bH
	DB	00H
	DB	01H
	DD	01dH
	DB	048H
	DB	09bH
	DB	00H
	DB	01H
	DD	04fH
	DB	076H
	DB	09bH
	DB	00H
	DB	01H
	DD	00H
	DB	056H
	DB	09bH
	DB	00H
	DB	01H
	DD	0cH
	DB	0ffH
	DB	08dH
	DB	00H
	DB	01H
	DD	060H
	DB	0ffH
	DB	0eH
	DB	00H
	DB	00H
	DD	04bH
	DB	0ffH
	DB	0ceH
	DB	00H
	DB	01H
?RECaseFixCodePoints@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBHB DD 061H ; `icu_56::RegexCompile::findCaseInsensitiveStarters'::`2'::RECaseFixCodePoints
	DD	066H
	DD	068H
	DD	069H
	DD	06aH
	DD	073H
	DD	074H
	DD	077H
	DD	079H
	DD	02bcH
	DD	03acH
	DD	03aeH
	DD	03b1H
	DD	03b7H
	DD	03b9H
	DD	03c1H
	DD	03c5H
	DD	03c9H
	DD	03ceH
	DD	0565H
	DD	0574H
	DD	057eH
	DD	01f00H
	DD	01f01H
	DD	01f02H
	DD	01f03H
	DD	01f04H
	DD	01f05H
	DD	01f06H
	DD	01f07H
	DD	01f20H
	DD	01f21H
	DD	01f22H
	DD	01f23H
	DD	01f24H
	DD	01f25H
	DD	01f26H
	DD	01f27H
	DD	01f60H
	DD	01f61H
	DD	01f62H
	DD	01f63H
	DD	01f64H
	DD	01f65H
	DD	01f66H
	DD	01f67H
	DD	01f70H
	DD	01f74H
	DD	01f7cH
	DD	0110000H
?RECaseFixStringOffsets@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBFB DW 00H ; `icu_56::RegexCompile::findCaseInsensitiveStarters'::`2'::RECaseFixStringOffsets
	DW	01H
	DW	06H
	DW	07H
	DW	08H
	DW	09H
	DW	0dH
	DW	0eH
	DW	0fH
	DW	010H
	DW	011H
	DW	012H
	DW	013H
	DW	017H
	DW	01bH
	DW	020H
	DW	021H
	DW	02aH
	DW	02eH
	DW	02fH
	DW	030H
	DW	034H
	DW	035H
	DW	037H
	DW	039H
	DW	03bH
	DW	03dH
	DW	03fH
	DW	041H
	DW	043H
	DW	045H
	DW	047H
	DW	049H
	DW	04bH
	DW	04dH
	DW	04fH
	DW	051H
	DW	053H
	DW	055H
	DW	057H
	DW	059H
	DW	05bH
	DW	05dH
	DW	05fH
	DW	061H
	DW	063H
	DW	065H
	DW	066H
	DW	067H
	DW	00H
_posSetPrefix DW 05bH
	DW	05cH
	DW	070H
	DW	07bH
	DW	00H
	ORG $+2
?RECaseFixCounts@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBFB DW 01H ; `icu_56::RegexCompile::findCaseInsensitiveStarters'::`2'::RECaseFixCounts
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	04H
	DW	04H
	DW	05H
	DW	01H
	DW	09H
	DW	04H
	DW	01H
	DW	01H
	DW	04H
	DW	01H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	02H
	DW	01H
	DW	01H
	DW	01H
	DW	00H
	ORG $+4
?RECaseFixData@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QB_WB DW 01e9aH ; `icu_56::RegexCompile::findCaseInsensitiveStarters'::`2'::RECaseFixData
	DW	0fb00H
	DW	0fb01H
	DW	0fb02H
	DW	0fb03H
	DW	0fb04H
	DW	01e96H
	DW	0130H
	DW	01f0H
	DW	0dfH
	DW	01e9eH
	DW	0fb05H
	DW	0fb06H
	DW	01e97H
	DW	01e98H
	DW	01e99H
	DW	0149H
	DW	01fb4H
	DW	01fc4H
	DW	01fb3H
	DW	01fb6H
	DW	01fb7H
	DW	01fbcH
	DW	01fc3H
	DW	01fc6H
	DW	01fc7H
	DW	01fccH
	DW	0390H
	DW	01fd2H
	DW	01fd3H
	DW	01fd6H
	DW	01fd7H
	DW	01fe4H
	DW	03b0H
	DW	01f50H
	DW	01f52H
	DW	01f54H
	DW	01f56H
	DW	01fe2H
	DW	01fe3H
	DW	01fe6H
	DW	01fe7H
	DW	01ff3H
	DW	01ff6H
	DW	01ff7H
	DW	01ffcH
	DW	01ff4H
	DW	0587H
	DW	0fb13H
	DW	0fb14H
	DW	0fb15H
	DW	0fb17H
	DW	0fb16H
	DW	01f80H
	DW	01f88H
	DW	01f81H
	DW	01f89H
	DW	01f82H
	DW	01f8aH
	DW	01f83H
	DW	01f8bH
	DW	01f84H
	DW	01f8cH
	DW	01f85H
	DW	01f8dH
	DW	01f86H
	DW	01f8eH
	DW	01f87H
	DW	01f8fH
	DW	01f90H
	DW	01f98H
	DW	01f91H
	DW	01f99H
	DW	01f92H
	DW	01f9aH
	DW	01f93H
	DW	01f9bH
	DW	01f94H
	DW	01f9cH
	DW	01f95H
	DW	01f9dH
	DW	01f96H
	DW	01f9eH
	DW	01f97H
	DW	01f9fH
	DW	01fa0H
	DW	01fa8H
	DW	01fa1H
	DW	01fa9H
	DW	01fa2H
	DW	01faaH
	DW	01fa3H
	DW	01fabH
	DW	01fa4H
	DW	01facH
	DW	01fa5H
	DW	01fadH
	DW	01fa6H
	DW	01faeH
	DW	01fa7H
	DW	01fafH
	DW	01fb2H
	DW	01fc2H
	DW	01ff2H
	DW	00H
	ORG $+2
_negSetPrefix DW 05bH
	DW	05cH
	DW	050H
	DW	07bH
	DW	00H
	ORG $+2
?IN@?CD@??createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@ABVUnicodeString@3@C@Z@4QB_WB DW 049H ; `icu_56::RegexCompile::createSetForProperty'::`35'::IN
	DW	06eH
	DW	00H
	ORG $+2
?BLOCK@?CD@??createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@ABVUnicodeString@3@C@Z@4QB_WB DW 042H ; `icu_56::RegexCompile::createSetForProperty'::`35'::BLOCK
	DW	06cH
	DW	06fH
	DW	063H
	DW	06bH
	DW	03dH
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9RegexPattern@icu_56@@QBECABV01@@Z		; icu_56::RegexPattern::operator!=
EXTRN	??8RegexPattern@icu_56@@QBECABV01@@Z:PROC	; icu_56::RegexPattern::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9RegexPattern@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9RegexPattern@icu_56@@QBECABV01@@Z PROC		; icu_56::RegexPattern::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\regex.h
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8RegexPattern@icu_56@@QBECABV01@@Z	; icu_56::RegexPattern::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9RegexPattern@icu_56@@QBECABV01@@Z ENDP		; icu_56::RegexPattern::operator!=
_TEXT	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; File d:\mozilla\intl\icu\source\common\uinvchar.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	??1RegexCompile@icu_56@@UAE@XZ			; icu_56::RegexCompile::~RegexCompile
PUBLIC	??_GRegexCompile@icu_56@@UAEPAXI@Z		; icu_56::RegexCompile::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRegexCompile@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRegexCompile@icu_56@@UAEPAXI@Z PROC			; icu_56::RegexCompile::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRegexCompile@icu_56@@UAEPAXI@Z ENDP			; icu_56::RegexCompile::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ERegexCompile@icu_56@@UAEPAXI@Z		; icu_56::RegexCompile::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ERegexCompile@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERegexCompile@icu_56@@UAEPAXI@Z PROC			; icu_56::RegexCompile::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1RegexCompile@icu_56@@UAE@XZ	; icu_56::RegexCompile::~RegexCompile
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	472					; 000001d8H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERegexCompile@icu_56@@UAEPAXI@Z ENDP			; icu_56::RegexCompile::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7RegexCompile@icu_56@@6B@			; icu_56::RegexCompile::`vftable'
PUBLIC	??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::RegexCompile
PUBLIC	??_R4RegexCompile@icu_56@@6B@			; icu_56::RegexCompile::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRegexCompile@icu_56@@@8			; icu_56::RegexCompile `RTTI Type Descriptor'
PUBLIC	??_R3RegexCompile@icu_56@@8			; icu_56::RegexCompile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RegexCompile@icu_56@@8			; icu_56::RegexCompile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RegexCompile@icu_56@@8		; icu_56::RegexCompile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UStack@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UVector32@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z:PROC ; icu_56::RegexStaticSets::initGlobals
EXTRN	__imp_??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\regexcmp.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R17?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RegexCompile@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RegexCompile@icu_56@@8 DD FLAT:??_R0?AVRegexCompile@icu_56@@@8 ; icu_56::RegexCompile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RegexCompile@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2RegexCompile@icu_56@@8
rdata$r	SEGMENT
??_R2RegexCompile@icu_56@@8 DD FLAT:??_R1A@?0A@EA@RegexCompile@icu_56@@8 ; icu_56::RegexCompile::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3RegexCompile@icu_56@@8
rdata$r	SEGMENT
??_R3RegexCompile@icu_56@@8 DD 00H			; icu_56::RegexCompile::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RegexCompile@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRegexCompile@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRegexCompile@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RegexCompile `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRegexCompile@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RegexCompile@icu_56@@6B@
rdata$r	SEGMENT
??_R4RegexCompile@icu_56@@6B@ DD 00H			; icu_56::RegexCompile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRegexCompile@icu_56@@@8
	DD	FLAT:??_R3RegexCompile@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7RegexCompile@icu_56@@6B@
CONST	SEGMENT
??_7RegexCompile@icu_56@@6B@ DD FLAT:??_R4RegexCompile@icu_56@@6B@ ; icu_56::RegexCompile::`vftable'
	DD	FLAT:??_ERegexCompile@icu_56@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$3
__ehfuncinfo$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rxp$ = 8						; size = 4
_status$ = 12						; size = 4
??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z PROC ; icu_56::RegexCompile::RegexCompile, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RegexCompile@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	DWORD PTR __imp_??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 56
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z ; icu_56::RegexStaticSets::initGlobals
	add	esp, 4
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rxp$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -1
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], -1
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 1
	mov	DWORD PTR [eax+44], 0
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 0
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+12]
	or	edx, -2147483648			; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], edx
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+34], 1
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], -1
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+392], -1
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], 0
; Line 75
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RegexCompi
	mov	eax, DWORD PTR _rxp$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@RegexCompi
; Line 76
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _rxp$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax], edx
$LN2@RegexCompi:
; Line 78
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexCompile::RegexCompile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\regexcmp.cpp
xdata$x	SEGMENT
__unwindtable$??1RegexCompile@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$3
__ehfuncinfo$??1RegexCompile@icu_56@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1RegexCompile@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RegexCompile@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv83 = -244						; size = 4
$T47960 = -236						; size = 4
$T47961 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RegexCompile@icu_56@@UAE@XZ PROC			; icu_56::RegexCompile::~RegexCompile, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RegexCompile@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RegexCompile@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+468]
	mov	DWORD PTR $T47961[ebp], ecx
	mov	edx, DWORD PTR $T47961[ebp]
	mov	DWORD PTR $T47960[ebp], edx
	cmp	DWORD PTR $T47960[ebp], 0
	je	SHORT $LN3@RegexCompi@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T47960[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T47960[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN1@RegexCompi@2
$LN3@RegexCompi@2:
	mov	DWORD PTR tv83[ebp], 0
$LN1@RegexCompi@2:
; Line 92
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RegexCompile@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1RegexCompile@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RegexCompile@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RegexCompile@icu_56@@UAE@XZ ENDP			; icu_56::RegexCompile::~RegexCompile
PUBLIC	?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::compile
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::compile
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
EXTRN	_utext_close_56:PROC
EXTRN	_utext_openConstUnicodeString_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv72 = -364						; size = 4
$T47976 = -356						; size = 4
$T47977 = -344						; size = 4
_patternText$ = -140					; size = 112
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pat$ = 8						; size = 4
_pp$ = 12						; size = 4
_e$ = 16						; size = 4
?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexCompile::compile, COMDAT
; _this$ = ecx
; Line 110
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 111
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47977[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T47977[ebp], 0
	je	SHORT $LN4@compile
	mov	esi, esp
	mov	eax, DWORD PTR _pat$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T47977[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T47977[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T47977[ebp]
	mov	DWORD PTR tv72[ebp], edx
	jmp	SHORT $LN5@compile
$LN4@compile:
	mov	DWORD PTR tv72[ebp], 0
$LN5@compile:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T47976[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR $T47976[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 112
	mov	DWORD PTR _patternText$[ebp], 878368812	; 345ad82cH
	mov	DWORD PTR _patternText$[ebp+4], 0
	mov	DWORD PTR _patternText$[ebp+8], 0
	mov	DWORD PTR _patternText$[ebp+12], 112	; 00000070H
	mov	DWORD PTR _patternText$[ebp+16], 0
	mov	DWORD PTR _patternText$[ebp+20], 0
	mov	DWORD PTR _patternText$[ebp+24], 0
	mov	DWORD PTR _patternText$[ebp+28], 0
	mov	DWORD PTR _patternText$[ebp+32], 0
	mov	DWORD PTR _patternText$[ebp+36], 0
	mov	DWORD PTR _patternText$[ebp+40], 0
	mov	DWORD PTR _patternText$[ebp+44], 0
	mov	DWORD PTR _patternText$[ebp+48], 0
	mov	DWORD PTR _patternText$[ebp+52], 0
	mov	DWORD PTR _patternText$[ebp+56], 0
	mov	DWORD PTR _patternText$[ebp+60], 0
	mov	DWORD PTR _patternText$[ebp+64], 0
	mov	DWORD PTR _patternText$[ebp+68], 0
	mov	DWORD PTR _patternText$[ebp+72], 0
	mov	DWORD PTR _patternText$[ebp+76], 0
	mov	DWORD PTR _patternText$[ebp+80], 0
	mov	DWORD PTR _patternText$[ebp+84], 0
	mov	DWORD PTR _patternText$[ebp+88], 0
	mov	DWORD PTR _patternText$[ebp+92], 0
	mov	DWORD PTR _patternText$[ebp+96], 0
	mov	DWORD PTR _patternText$[ebp+100], 0
	mov	DWORD PTR _patternText$[ebp+104], 0
	mov	DWORD PTR _patternText$[ebp+108], 0
; Line 113
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR _patternText$[ebp]
	push	ecx
	call	_utext_openConstUnicodeString_56
	add	esp, 12					; 0000000cH
; Line 115
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@compile
; Line 116
	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pp$[ebp]
	push	ecx
	lea	edx, DWORD PTR _patternText$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::compile
; Line 117
	lea	eax, DWORD PTR _patternText$[ebp]
	push	eax
	call	_utext_close_56
	add	esp, 4
$LN2@compile:
; Line 119
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@compile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@compile:
	DD	1
	DD	$LN9@compile
$LN9@compile:
	DD	-140					; ffffff74H
	DD	112					; 00000070H
	DD	$LN7@compile
$LN7@compile:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T47977[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexCompile::compile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z ; icu_56::Regex8BitSet::init
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0Regex8BitSet@icu_56@@QAE@XZ			; icu_56::Regex8BitSet::Regex8BitSet
PUBLIC	?matchStartType@RegexCompile@icu_56@@AAEXXZ	; icu_56::RegexCompile::matchStartType
PUBLIC	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::minMatchLength
PUBLIC	?stripNOPs@RegexCompile@icu_56@@AAEXXZ		; icu_56::RegexCompile::stripNOPs
PUBLIC	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z	; icu_56::RegexCompile::allocateStackData
PUBLIC	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
PUBLIC	?doParseActions@RegexCompile@icu_56@@AAECH@Z	; icu_56::RegexCompile::doParseActions
PUBLIC	??_C@_1DG@MNHNDHOH@?$AAt?$AAa?$AAb?$AAl?$AAe?$AAE?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAh?$AAa?$AAr?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA3?$AA7?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@FOPGMADN@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
PUBLIC	??_C@_1IM@FPOHOIKJ@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAP?$AAa?$AAt?$AAt?$AAe?$AAr?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn@ ; `string'
PUBLIC	??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA ; `icu_56::RegexCompile::compile'::`2'::__LINE__Var
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?size@UVector64@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?pop@UStack@icu_56@@QAEPAXXZ:PROC
EXTRN	__imp_?empty@UStack@icu_56@@QBECXZ:PROC
EXTRN	?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A:DWORD ; icu_56::RegexStaticSets::gStaticSets
EXTRN	_utext_clone_56:PROC
EXTRN	__imp___wassert:PROC
EXTRN	_utext_nativeLength_56:PROC
;	COMDAT ??_C@_1DG@MNHNDHOH@?$AAt?$AAa?$AAb?$AAl?$AAe?$AAE?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAh?$AAa?$AAr?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA3?$AA7?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@MNHNDHOH@?$AAt?$AAa?$AAb?$AAl?$AAe?$AAE?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAh?$AAa?$AAr?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA3?$AA7?$AA?$AA@ DB 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'E', 00H, 'l', 00H
	DB	'-', 00H, '>', 00H, 'f', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '1', 00H, '3', 00H, '7', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@FOPGMADN@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@FOPGMADN@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@FPOHOIKJ@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAP?$AAa?$AAt?$AAt?$AAe?$AAr?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn@
CONST	SEGMENT
??_C@_1IM@FPOHOIKJ@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAP?$AAa?$AAt?$AAt?$AAe?$AAr?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn@ DB 'f'
	DB	00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'f', 00H, 'P', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'u', 00H, 't'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, '_', 00H, 'n', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'L', 00H, 'e', 00H, 'n'
	DB	00H, 'g', 00H, 't', 00H, 'h', 00H, '_', 00H, '5', 00H, '6', 00H
	DB	'(', 00H, 'f', 00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H, 't'
	DB	00H, '-', 00H, '>', 00H, 'f', 00H, 'P', 00H, 'a', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'n', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'r', 00H
	DB	'e', 00H, 'g', 00H, 'e', 00H, 'x', 00H, 'c', 00H, 'm', 00H, 'p'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA DD 081H ; `icu_56::RegexCompile::compile'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv422 = -344						; size = 8
tv358 = -340						; size = 4
tv322 = -340						; size = 4
$T47998 = -332						; size = 4
$T47999 = -320						; size = 4
$T48002 = -308						; size = 4
$T48003 = -296						; size = 4
$T48004 = -284						; size = 4
_s$39322 = -80						; size = 4
_i$ = -68						; size = 4
_numSets$ = -56						; size = 4
_tableEl$ = -44						; size = 4
_state$ = -32						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pat$ = 8						; size = 4
_pp$ = 12						; size = 4
_e$ = 16						; size = 4
?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexCompile::compile, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pp$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+276], 0
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+ecx*2+76], dx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN28@compile@2
; Line 136
	jmp	$LN29@compile@2
$LN28@compile@2:
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN31@compile@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR tv422[ebp], eax
	mov	DWORD PTR tv422[ebp+4], edx
	mov	edx, DWORD PTR tv422[ebp]
	or	edx, DWORD PTR tv422[ebp+4]
	je	SHORT $LN31@compile@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA
	add	eax, 11					; 0000000bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1IM@FPOHOIKJ@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAP?$AAa?$AAt?$AAt?$AAe?$AAr?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@compile@2:
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	push	0
	mov	edx, DWORD PTR _pat$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+4], eax
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN27@compile@2
; Line 145
	jmp	$LN29@compile@2
$LN27@compile@2:
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	DWORD PTR [ecx+112], edx
; Line 148
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+116], eax
; Line 152
	mov	eax, DWORD PTR _pat$[ebp]
	push	eax
	call	_utext_nativeLength_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	DWORD PTR [ecx+364], edx
; Line 153
	mov	eax, 1
	mov	WORD PTR _state$[ebp], ax
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 16					; 00000010H
	je	SHORT $LN26@compile@2
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
$LN26@compile@2:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
$LN25@compile@2:
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN23@compile@2
; Line 177
	jmp	$LN24@compile@2
$LN23@compile@2:
; Line 180
	movzx	eax, WORD PTR _state$[ebp]
	test	eax, eax
	jne	SHORT $LN32@compile@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA
	add	ecx, 51					; 00000033H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@FOPGMADN@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@compile@2:
; Line 188
	movzx	eax, WORD PTR _state$[ebp]
	lea	ecx, DWORD PTR _gRuleParseStateTable[eax*8]
	mov	DWORD PTR _tableEl$[ebp], ecx
$LN22@compile@2:
; Line 195
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 127				; 0000007fH
	jge	SHORT $LN20@compile@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	jne	SHORT $LN20@compile@2
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+64]
	jne	SHORT $LN20@compile@2
; Line 199
	jmp	$LN21@compile@2
$LN20@compile@2:
; Line 201
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN19@compile@2
; Line 203
	jmp	$LN21@compile@2
$LN19@compile@2:
; Line 205
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 254				; 000000feH
	jne	SHORT $LN18@compile@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN18@compile@2
; Line 207
	jmp	$LN21@compile@2
$LN18@compile@2:
; Line 209
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 253				; 000000fdH
	jne	SHORT $LN17@compile@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], -1
	jne	SHORT $LN17@compile@2
; Line 211
	jmp	$LN21@compile@2
$LN17@compile@2:
; Line 216
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 128				; 00000080H
	jl	$LN16@compile@2
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 240				; 000000f0H
	jge	$LN16@compile@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	jne	$LN16@compile@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], -1
	je	$LN16@compile@2
; Line 217
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 137				; 00000089H
	jle	SHORT $LN33@compile@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA
	add	edx, 88					; 00000058H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DG@MNHNDHOH@?$AAt?$AAa?$AAb?$AAl?$AAe?$AAE?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAh?$AAa?$AAr?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA3?$AA7?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@compile@2:
; Line 218
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _tableEl$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	sub	eax, 128				; 00000080H
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _tableEl$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	sub	edx, 128				; 00000080H
	imul	edx, 52					; 00000034H
	mov	ecx, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	lea	ecx, DWORD PTR [ecx+edx+468]
	mov	edx, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	eax, DWORD PTR [edx+eax+468]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@compile@2
; Line 221
	jmp	SHORT $LN21@compile@2
$LN16@compile@2:
; Line 226
	mov	eax, DWORD PTR _tableEl$[ebp]
	add	eax, 8
	mov	DWORD PTR _tableEl$[ebp], eax
; Line 227
	jmp	$LN22@compile@2
$LN21@compile@2:
; Line 234
	mov	eax, DWORD PTR _tableEl$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParseActions@RegexCompile@icu_56@@AAECH@Z ; icu_56::RegexCompile::doParseActions
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN14@compile@2
; Line 238
	jmp	$LN24@compile@2
$LN14@compile@2:
; Line 241
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	test	ecx, ecx
	je	SHORT $LN13@compile@2
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], ecx
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+276], 100		; 00000064H
	jl	SHORT $LN12@compile@2
; Line 244
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], ecx
$LN12@compile@2:
; Line 248
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	cx, BYTE PTR [eax+6]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+276]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+eax*2+76], cx
$LN13@compile@2:
; Line 255
	mov	eax, DWORD PTR _tableEl$[ebp]
	movsx	ecx, BYTE PTR [eax+7]
	test	ecx, ecx
	je	SHORT $LN11@compile@2
; Line 256
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
$LN11@compile@2:
; Line 261
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	cmp	ecx, 255				; 000000ffH
	je	SHORT $LN10@compile@2
; Line 262
	mov	eax, DWORD PTR _tableEl$[ebp]
	movzx	cx, BYTE PTR [eax+5]
	mov	WORD PTR _state$[ebp], cx
; Line 263
	jmp	SHORT $LN9@compile@2
$LN10@compile@2:
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2+76]
	mov	WORD PTR _state$[ebp], ax
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+276], 0
	jge	SHORT $LN9@compile@2
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], ecx
; Line 272
	push	66310					; 00010306H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN9@compile@2:
; Line 276
	jmp	$LN25@compile@2
$LN24@compile@2:
; Line 278
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	$LN7@compile@2
$LN6@compile@2:
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@compile@2
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T47999[ebp], eax
	mov	eax, DWORD PTR $T47999[ebp]
	mov	DWORD PTR $T47998[ebp], eax
	cmp	DWORD PTR $T47998[ebp], 0
	je	SHORT $LN34@compile@2
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T47998[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T47998[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv322[ebp], eax
	jmp	SHORT $LN35@compile@2
$LN34@compile@2:
	mov	DWORD PTR tv322[ebp], 0
$LN35@compile@2:
; Line 284
	jmp	$LN6@compile@2
$LN5@compile@2:
; Line 285
	jmp	$LN29@compile@2
$LN7@compile@2:
; Line 299
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
; Line 304
	mov	ecx, DWORD PTR _this$[ebp]
	call	?stripNOPs@RegexCompile@icu_56@@AAEXXZ	; icu_56::RegexCompile::stripNOPs
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::minMatchLength
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+96], eax
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	call	?matchStartType@RegexCompile@icu_56@@AAEXXZ ; icu_56::RegexCompile::matchStartType
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numSets$[ebp], eax
; Line 322
	mov	eax, DWORD PTR _numSets$[ebp]
	mov	DWORD PTR $T48002[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T48002[ebp]
	mov	edx, 32					; 00000020H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48004[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T48004[ebp], 0
	je	SHORT $LN36@compile@2
	push	OFFSET ??0Regex8BitSet@icu_56@@QAE@XZ	; icu_56::Regex8BitSet::Regex8BitSet
	mov	eax, DWORD PTR $T48002[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR $T48004[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T48004[ebp]
	mov	DWORD PTR tv358[ebp], edx
	jmp	SHORT $LN37@compile@2
$LN36@compile@2:
	mov	DWORD PTR tv358[ebp], 0
$LN37@compile@2:
	mov	eax, DWORD PTR tv358[ebp]
	mov	DWORD PTR $T48003[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR $T48003[ebp]
	mov	DWORD PTR [edx+88], eax
; Line 324
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+88], 0
	jne	SHORT $LN4@compile@2
; Line 325
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], 7
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [edx], 7
; Line 326
	jmp	SHORT $LN29@compile@2
$LN4@compile@2:
; Line 329
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@compile@2
$LN2@compile@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@compile@2:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numSets$[ebp]
	jge	SHORT $LN29@compile@2
; Line 330
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+84]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39322[ebp], eax
; Line 331
	mov	eax, DWORD PTR _s$39322[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	add	ecx, DWORD PTR [edx+88]
	call	?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z ; icu_56::Regex8BitSet::init
; Line 332
	jmp	SHORT $LN2@compile@2
$LN29@compile@2:
; Line 334
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T48004[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexCompile::compile
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Regex8BitSet@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Regex8BitSet@icu_56@@QAE@XZ PROC			; icu_56::Regex8BitSet::Regex8BitSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\regeximp.h
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Regex8BitSet@icu_56@@QAE@XZ ENDP			; icu_56::Regex8BitSet::Regex8BitSet
_TEXT	ENDS
PUBLIC	?add@Regex8BitSet@icu_56@@QAEXH@Z		; icu_56::Regex8BitSet::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z
_TEXT	SEGMENT
_i$38527 = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z PROC	; icu_56::Regex8BitSet::init, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 344
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN6@init
; Line 345
	mov	DWORD PTR _i$38527[ebp], 0
	jmp	SHORT $LN4@init
$LN3@init:
	mov	eax, DWORD PTR _i$38527[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38527[ebp], eax
$LN4@init:
	cmp	DWORD PTR _i$38527[ebp], 255		; 000000ffH
	jg	SHORT $LN6@init
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _i$38527[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@init
; Line 347
	mov	eax, DWORD PTR _i$38527[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?add@Regex8BitSet@icu_56@@QAEXH@Z	; icu_56::Regex8BitSet::add
$LN1@init:
; Line 349
	jmp	SHORT $LN3@init
$LN6@init:
; Line 351
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z ENDP	; icu_56::Regex8BitSet::init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?add@Regex8BitSet@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?add@Regex8BitSet@icu_56@@QAEXH@Z PROC			; icu_56::Regex8BitSet::add, COMDAT
; _this$ = ecx
; Line 339
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 340
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 3
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [ecx+eax]
	or	eax, edx
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 341
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?add@Regex8BitSet@icu_56@@QAEXH@Z ENDP			; icu_56::Regex8BitSet::add
_TEXT	ENDS
PUBLIC	?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ; icu_56::RegexCompile::scanPosixProp
PUBLIC	??_C@_1CE@PNCFOHGD@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@PPCGKICE@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DM@GEAEDHFL@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAp?$AAe?$AAe?$AAk?$AAi?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AAs?$AAe?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	?setEval@RegexCompile@icu_56@@AAEXH@Z		; icu_56::RegexCompile::setEval
PUBLIC	?setPushOp@RegexCompile@icu_56@@AAEXH@Z		; icu_56::RegexCompile::setPushOp
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_C@_1CE@CDMEDFBP@?$AAf?$AAN?$AAe?$AAw?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_C@_1CE@NHDKOHFH@?$AAf?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@PALOODDI@?$AAg?$AAr?$AAo?$AAu?$AAp?$AAN?$AAu?$AAm?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?nextCharLL@RegexCompile@icu_56@@AAEHXZ		; icu_56::RegexCompile::nextCharLL
PUBLIC	?peekCharLL@RegexCompile@icu_56@@AAEHXZ		; icu_56::RegexCompile::peekCharLL
PUBLIC	?scanNamedChar@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::scanNamedChar
PUBLIC	?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z ; icu_56::RegexCompile::compileSet
PUBLIC	?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ; icu_56::RegexCompile::scanProp
PUBLIC	?literalChar@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::literalChar
PUBLIC	??_C@_1JM@HBBNAPEO@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAl?$AAo?$AAo?$AAp?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ ; `string'
PUBLIC	?compileInterval@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::compileInterval
PUBLIC	?compileInlineInterval@RegexCompile@icu_56@@AAECXZ ; icu_56::RegexCompile::compileInlineInterval
PUBLIC	??_C@_1CA@MHCOBPOJ@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?insertOp@RegexCompile@icu_56@@AAEXH@Z		; icu_56::RegexCompile::insertOp
PUBLIC	?appendOp@RegexCompile@icu_56@@AAEXH@Z		; icu_56::RegexCompile::appendOp
PUBLIC	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z	; icu_56::RegexCompile::blockTopLoc
PUBLIC	?allocateData@RegexCompile@icu_56@@AAEHH@Z	; icu_56::RegexCompile::allocateData
PUBLIC	?buildOp@RegexCompile@icu_56@@AAEHHH@Z		; icu_56::RegexCompile::buildOp
PUBLIC	??_C@_1EE@HGCMOFHE@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAo?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX?$AA_?$AAN?$AAO@ ; `string'
PUBLIC	?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA ; `icu_56::RegexCompile::doParseActions'::`2'::__LINE__Var
PUBLIC	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z	; icu_56::RegexCompile::fixLiterals
PUBLIC	?handleCloseParen@RegexCompile@icu_56@@AAEXXZ	; icu_56::RegexCompile::handleCloseParen
PUBLIC	?appendOp@RegexCompile@icu_56@@AAEXHH@Z		; icu_56::RegexCompile::appendOp
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	__imp_?popi@UStack@icu_56@@QAEHXZ:PROC
EXTRN	__imp_?peeki@UStack@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC
EXTRN	__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?peek@UStack@icu_56@@QBEPAXXZ:PROC
EXTRN	_uhash_geti_56:PROC
EXTRN	__imp_?push@UVector64@icu_56@@QAE_J_JAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?popi@UVector64@icu_56@@QAE_JXZ:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	_uhash_puti_56:PROC
EXTRN	__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z:PROC
EXTRN	__imp_?elementAti@UVector64@icu_56@@QBE_JH@Z:PROC
EXTRN	__imp_?popi@UVector32@icu_56@@QAEHXZ:PROC
EXTRN	__imp_?size@UVector32@icu_56@@QBEHXZ:PROC
EXTRN	__allmul:PROC
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; File d:\mozilla\intl\icu\source\i18n\regexcmp.cpp
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CE@PNCFOHGD@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@PNCFOHGD@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, '.', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 't'
	DB	00H, 'y', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@PPCGKICE@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@PPCGKICE@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'e', 00H, 'm'
	DB	00H, 'p', 00H, 't', 00H, 'y', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@GEAEDHFL@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAp?$AAe?$AAe?$AAk?$AAi?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AAs?$AAe?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@GEAEDHFL@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAp?$AAe?$AAe?$AAk?$AAi?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AAs?$AAe?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'p', 00H, 'e'
	DB	00H, 'e', 00H, 'k', 00H, 'i', 00H, '(', 00H, ')', 00H, '=', 00H
	DB	'=', 00H, 's', 00H, 'e', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT ??_C@_1CE@CDMEDFBP@?$AAf?$AAN?$AAe?$AAw?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@CDMEDFBP@?$AAf?$AAN?$AAe?$AAw?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'N', 00H, 'e', 00H, 'w', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@NHDKOHFH@?$AAf?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@NHDKOHFH@?$AAf?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@PALOODDI@?$AAg?$AAr?$AAo?$AAu?$AAp?$AAN?$AAu?$AAm?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@PALOODDI@?$AAg?$AAr?$AAo?$AAu?$AAp?$AAN?$AAu?$AAm?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, 'N', 00H, 'u', 00H
	DB	'm', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JM@HBBNAPEO@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAl?$AAo?$AAo?$AAp?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
CONST	SEGMENT
??_C@_1JM@HBBNAPEO@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAl?$AAo?$AAo?$AAp?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 'l', 00H, 'o'
	DB	00H, 'o', 00H, 'p', 00H, 'O', 00H, 'p', 00H, ')', 00H, ' ', 00H
	DB	'>', 00H, '>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'X', 00H
	DB	'_', 00H, 'C', 00H, 'T', 00H, 'R', 00H, '_', 00H, 'L', 00H, 'O'
	DB	00H, 'O', 00H, 'P', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'(', 00H, '(', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'p', 00H, 'O'
	DB	00H, 'p', 00H, ')', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	'x', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f'
	DB	00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 't', 00H
	DB	'o', 00H, 'p', 00H, 'L', 00H, 'o', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MHCOBPOJ@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@MHCOBPOJ@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'd'
	DB	00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'V', 00H, 'a', 00H
	DB	'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HGCMOFHE@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAo?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX?$AA_?$AAN?$AAO@
CONST	SEGMENT
??_C@_1EE@HGCMOFHE@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAo?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX?$AA_?$AAN?$AAO@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 'o', 00H, 'p'
	DB	00H, ')', 00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, '2', 00H
	DB	'4', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'U'
	DB	00H, 'R', 00H, 'X', 00H, '_', 00H, 'N', 00H, 'O', 00H, 'P', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA DD 015fH ; `icu_56::RegexCompile::doParseActions'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?doParseActions@RegexCompile@icu_56@@AAECH@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?doParseActions@RegexCompile@icu_56@@AAECH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?doParseActions@RegexCompile@icu_56@@AAECH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$8
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?doParseActions@RegexCompile@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv2022 = -1800						; size = 4
tv2001 = -1800						; size = 4
tv1718 = -1800						; size = 4
tv1479 = -1800						; size = 4
tv1331 = -1800						; size = 4
tv1291 = -1800						; size = 4
tv184 = -1800						; size = 4
tv64 = -1800						; size = 4
$T48023 = -1792						; size = 4
$T48024 = -1780						; size = 4
$T48033 = -1768						; size = 4
$T48034 = -1756						; size = 4
$T48037 = -1744						; size = 4
$T48038 = -1732						; size = 4
$T48044 = -1720						; size = 4
$T48045 = -1708						; size = 4
$T48051 = -1696						; size = 4
$T48052 = -1684						; size = 4
$T48055 = -1672						; size = 4
$T48056 = -1660						; size = 4
_s$39712 = -1456					; size = 4
_tos$39706 = -1444					; size = 4
_s$39704 = -1432					; size = 4
_tos$39699 = -1420					; size = 4
_s$39697 = -1408					; size = 4
_tosOp$39691 = -1396					; size = 4
_s$39688 = -1384					; size = 4
_c$39686 = -1372					; size = 4
_s$39683 = -1360					; size = 4
_c$39682 = -1348					; size = 4
_s$39679 = -1336					; size = 4
_s$39673 = -1324					; size = 4
_theSet$39667 = -1312					; size = 4
_SSet$39647 = -1300					; size = 52
_set$39645 = -1240					; size = 4
_set$39642 = -1228					; size = 4
_v$39635 = -1216					; size = 52
_set$39633 = -1156					; size = 4
_set$39625 = -1144					; size = 4
_h$39621 = -1132					; size = 52
_set$39619 = -1072					; size = 4
_h$39615 = -1060					; size = 52
_set$39613 = -1000					; size = 4
_digits$39610 = -988					; size = 52
_set$39608 = -928					; size = 4
_set$39604 = -916					; size = 4
_SSet$39602 = -904					; size = 52
_set$39600 = -844					; size = 4
_set$39597 = -832					; size = 4
_set$39594 = -820					; size = 4
_set$39591 = -808					; size = 4
_bit$39565 = -796					; size = 4
_continueLoc$39562 = -784				; size = 4
_op$39561 = -772					; size = 4
_stoLoc$39560 = -760					; size = 4
_topLoc$39559 = -748					; size = 4
_L7$39557 = -736					; size = 4
_op$39556 = -724					; size = 4
_stoLoc$39555 = -712					; size = 4
_topLoc$39554 = -700					; size = 4
_op$39552 = -688					; size = 4
_stoLoc$39551 = -676					; size = 4
_topLoc$39550 = -664					; size = 4
_groupNumber$39542 = -652				; size = 4
_digit$39525 = -640					; size = 4
_c$39521 = -628						; size = 4
_groupNum$39520 = -616					; size = 4
_numCaptureGroups$39519 = -604				; size = 4
_c$39517 = -592						; size = 4
_theSet$39515 = -580					; size = 4
_op$39496 = -568					; size = 4
_op$39494 = -556					; size = 4
_loopOp$39459 = -544					; size = 4
_op$39458 = -532					; size = 4
_varLoc$39457 = -520					; size = 4
_topLoc$39456 = -508					; size = 4
_val$39447 = -496					; size = 8
_digitValue$39445 = -480				; size = 4
_val$39438 = -468					; size = 8
_digitValue$39435 = -452				; size = 4
_jmpOp$39432 = -440					; size = 4
_saveLoc$39431 = -428					; size = 4
_jmpLoc$39430 = -416					; size = 4
_saveStateOp$39428 = -404				; size = 4
_continueLoc$39427 = -392				; size = 4
_op$39426 = -380					; size = 4
_jmpOp$39424 = -368					; size = 4
_saveStateLoc$39423 = -356				; size = 4
_loopOpI$39419 = -344					; size = 4
_loopOpI$39413 = -332					; size = 4
_repeatedOp$39409 = -320				; size = 4
_dataLoc$39407 = -308					; size = 4
_topLoc$39406 = -296					; size = 4
_jmp1_op$39404 = -284					; size = 4
_jmp2_loc$39403 = -272					; size = 4
_jmp1_loc$39402 = -260					; size = 4
_saveStateOp$39400 = -248				; size = 4
_saveStateLoc$39399 = -236				; size = 4
_topLoc$39397 = -224					; size = 4
_op$39394 = -212					; size = 4
_loopOpI$39389 = -200					; size = 4
_repeatedOp$39380 = -188				; size = 4
_frameLoc$39378 = -176					; size = 4
_topLoc$39377 = -164					; size = 4
_dataLoc$39369 = -152					; size = 4
_dataLoc$39367 = -140					; size = 4
_dataLoc$39365 = -128					; size = 4
_dataLoc$39363 = -116					; size = 4
_varLoc$39361 = -104					; size = 4
_previousMapping$39357 = -92				; size = 4
_groupNumber$39356 = -80				; size = 4
_varsLoc$39354 = -68					; size = 4
_op$39339 = -56						; size = 4
_savePosition$39338 = -44				; size = 4
_returnVal$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_action$ = 8						; size = 4
?doParseActions@RegexCompile@icu_56@@AAECH@Z PROC	; icu_56::RegexCompile::doParseActions, COMDAT
; _this$ = ecx
; Line 351
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?doParseActions@RegexCompile@icu_56@@AAECH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1788				; 000006fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1800]
	mov	ecx, 447				; 000001bfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	BYTE PTR _returnVal$[ebp], 1
; Line 354
	mov	eax, DWORD PTR _action$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 104		; 00000068H
	ja	$LN2@doParseAct
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN240@doParseAct[ecx*4]
$LN188@doParseAct:
; Line 365
	push	2
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 366
	push	3
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 367
	push	0
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 371
	push	77					; 0000004dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?doParseActions@RegexCompile@icu_56@@AAECH@Z ; icu_56::RegexCompile::doParseActions
; Line 372
	jmp	$LN189@doParseAct
$LN187@doParseAct:
; Line 383
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleCloseParen@RegexCompile@icu_56@@AAEXXZ ; icu_56::RegexCompile::handleCloseParen
; Line 384
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN186@doParseAct
; Line 386
	push	66310					; 00010306H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN186@doParseAct:
; Line 390
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 393
	mov	BYTE PTR _returnVal$[ebp], 0
; Line 394
	jmp	$LN189@doParseAct
$LN185@doParseAct:
; Line 402
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 409
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UVector32@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _savePosition$39338[ebp], eax
; Line 410
	mov	esi, esp
	mov	eax, DWORD PTR _savePosition$39338[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$39339[ebp], eax
; Line 411
	mov	eax, DWORD PTR _op$39339[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 7
	je	SHORT $LN193@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 60					; 0000003cH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EE@HGCMOFHE@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAo?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX?$AA_?$AAN?$AAO@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN193@doParseAct:
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39339[ebp], eax
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _savePosition$39338[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39339[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 418
	push	0
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 422
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 427
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 428
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 430
	jmp	$LN189@doParseAct
$LN184@doParseAct:
; Line 436
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48024[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T48024[ebp], 0
	je	SHORT $LN194@doParseAct
	mov	esi, esp
	mov	ecx, DWORD PTR $T48024[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48024[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T48024[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	jmp	SHORT $LN195@doParseAct
$LN194@doParseAct:
	mov	DWORD PTR tv184[ebp], 0
$LN195@doParseAct:
	mov	edx, DWORD PTR tv184[ebp]
	mov	DWORD PTR $T48023[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T48023[ebp]
	mov	DWORD PTR [eax+468], ecx
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+468], 0
	jne	SHORT $LN183@doParseAct
; Line 438
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN183@doParseAct:
; Line 440
	jmp	$LN189@doParseAct
$LN182@doParseAct:
; Line 443
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+468]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 444
	jmp	$LN189@doParseAct
$LN181@doParseAct:
; Line 447
	push	66325					; 00010315H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 448
	jmp	$LN189@doParseAct
$LN180@doParseAct:
; Line 469
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 470
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 471
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _varsLoc$39354[ebp], eax
; Line 472
	mov	eax, DWORD PTR _varsLoc$39354[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 473
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 479
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 481
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 485
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _varsLoc$39354[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+108]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+468], 0
	je	$LN179@doParseAct
; Line 489
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+108]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _groupNumber$39356[ebp], eax
; Line 490
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _groupNumber$39356[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+468]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	call	_uhash_puti_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _previousMapping$39357[ebp], eax
; Line 491
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], 0
; Line 492
	cmp	DWORD PTR _previousMapping$39357[ebp], 0
	jle	SHORT $LN179@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN179@doParseAct
; Line 493
	push	66325					; 00010315H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN179@doParseAct:
; Line 497
	jmp	$LN189@doParseAct
$LN177@doParseAct:
; Line 507
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 508
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 509
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 513
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 514
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 515
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 516
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 518
	jmp	$LN189@doParseAct
$LN176@doParseAct:
; Line 530
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 531
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 532
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _varLoc$39361[ebp], eax
; Line 533
	mov	eax, DWORD PTR _varLoc$39361[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 534
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 540
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 541
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 542
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 543
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 545
	jmp	$LN189@doParseAct
$LN175@doParseAct:
; Line 576
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 577
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _dataLoc$39363[ebp], eax
; Line 578
	mov	eax, DWORD PTR _dataLoc$39363[ebp]
	push	eax
	push	37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 2
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 580
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 3
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 581
	mov	eax, DWORD PTR _dataLoc$39363[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 582
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 583
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 584
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 588
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 589
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 590
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 591
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 593
	jmp	$LN189@doParseAct
$LN174@doParseAct:
; Line 608
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 609
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _dataLoc$39365[ebp], eax
; Line 610
	mov	eax, DWORD PTR _dataLoc$39365[ebp]
	push	eax
	push	37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 611
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 612
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 616
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 617
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 618
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 619
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 623
	jmp	$LN189@doParseAct
$LN173@doParseAct:
; Line 647
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 650
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _dataLoc$39367[ebp], eax
; Line 653
	mov	eax, DWORD PTR _dataLoc$39367[ebp]
	push	eax
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 656
	mov	eax, DWORD PTR _dataLoc$39367[ebp]
	push	eax
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 657
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 658
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 661
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 662
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 666
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 667
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-7					; fffffff9H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 668
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 669
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 674
	jmp	$LN189@doParseAct
$LN172@doParseAct:
; Line 699
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 702
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _dataLoc$39369[ebp], eax
; Line 705
	mov	eax, DWORD PTR _dataLoc$39369[ebp]
	push	eax
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 708
	mov	eax, DWORD PTR _dataLoc$39369[ebp]
	push	eax
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 709
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 710
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 711
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 714
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 715
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 719
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 720
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-8					; fffffff8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 721
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 722
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 726
	jmp	$LN189@doParseAct
$LN171@doParseAct:
; Line 732
	push	66309					; 00010305H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 733
	jmp	$LN189@doParseAct
$LN170@doParseAct:
; Line 737
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleCloseParen@RegexCompile@icu_56@@AAEXXZ ; icu_56::RegexCompile::handleCloseParen
; Line 738
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jg	SHORT $LN169@doParseAct
; Line 740
	push	66310					; 00010306H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN169@doParseAct:
; Line 742
	jmp	$LN189@doParseAct
$LN168@doParseAct:
; Line 745
	jmp	$LN189@doParseAct
$LN167@doParseAct:
; Line 750
	push	66305					; 00010301H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 751
	jmp	$LN189@doParseAct
$LN166@doParseAct:
; Line 755
	push	66310					; 00010306H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 756
	jmp	$LN189@doParseAct
$LN165@doParseAct:
; Line 776
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39377[ebp], eax
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _topLoc$39377[ebp], eax
	jne	$LN164@doParseAct
; Line 781
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39377[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _repeatedOp$39380[ebp], eax
; Line 783
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 11					; 0000000bH
	jne	SHORT $LN163@doParseAct
; Line 785
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	and	eax, 16777215				; 00ffffffH
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 786
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _frameLoc$39378[ebp], eax
; Line 787
	mov	eax, DWORD PTR _frameLoc$39378[ebp]
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 788
	jmp	$LN189@doParseAct
$LN163@doParseAct:
; Line 793
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN161@doParseAct
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 21					; 00000015H
	je	SHORT $LN161@doParseAct
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 27					; 0000001bH
	jne	$LN164@doParseAct
$LN161@doParseAct:
; Line 795
	push	0
	push	52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _loopOpI$39389[ebp], eax
; Line 796
	mov	eax, DWORD PTR _repeatedOp$39380[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 21					; 00000015H
	jne	SHORT $LN160@doParseAct
; Line 798
	mov	eax, DWORD PTR _loopOpI$39389[ebp]
	or	eax, 1
	mov	DWORD PTR _loopOpI$39389[ebp], eax
$LN160@doParseAct:
; Line 800
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN159@doParseAct
; Line 801
	mov	eax, DWORD PTR _loopOpI$39389[ebp]
	or	eax, 2
	mov	DWORD PTR _loopOpI$39389[ebp], eax
$LN159@doParseAct:
; Line 803
	mov	eax, DWORD PTR _loopOpI$39389[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::appendOp
; Line 804
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _frameLoc$39378[ebp], eax
; Line 805
	mov	eax, DWORD PTR _frameLoc$39378[ebp]
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 806
	jmp	$LN189@doParseAct
$LN164@doParseAct:
; Line 815
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	edx, DWORD PTR _topLoc$39377[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::minMatchLength
	test	eax, eax
	jne	SHORT $LN158@doParseAct
; Line 818
	mov	eax, DWORD PTR _topLoc$39377[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 819
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _frameLoc$39378[ebp], eax
; Line 821
	mov	eax, DWORD PTR _frameLoc$39378[ebp]
	push	eax
	push	35					; 00000023H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39394[ebp], eax
; Line 822
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39377[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39394[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 824
	mov	eax, DWORD PTR _topLoc$39377[ebp]
	add	eax, 1
	push	eax
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 825
	jmp	SHORT $LN157@doParseAct
$LN158@doParseAct:
; Line 827
	mov	eax, DWORD PTR _topLoc$39377[ebp]
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN157@doParseAct:
; Line 830
	jmp	$LN189@doParseAct
$LN156@doParseAct:
; Line 838
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39397[ebp], eax
; Line 839
	mov	eax, DWORD PTR _topLoc$39397[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 841
	jmp	$LN189@doParseAct
$LN155@doParseAct:
; Line 852
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _saveStateLoc$39399[ebp], eax
; Line 853
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _saveStateOp$39400[ebp], eax
; Line 854
	mov	esi, esp
	mov	eax, DWORD PTR _saveStateLoc$39399[ebp]
	push	eax
	mov	eax, DWORD PTR _saveStateOp$39400[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 856
	jmp	$LN189@doParseAct
$LN154@doParseAct:
; Line 869
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _jmp1_loc$39402[ebp], eax
; Line 870
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _jmp2_loc$39403[ebp], eax
; Line 872
	mov	eax, DWORD PTR _jmp2_loc$39403[ebp]
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _jmp1_op$39404[ebp], eax
; Line 873
	mov	esi, esp
	mov	eax, DWORD PTR _jmp1_loc$39402[ebp]
	push	eax
	mov	eax, DWORD PTR _jmp1_op$39404[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 875
	mov	eax, DWORD PTR _jmp2_loc$39403[ebp]
	add	eax, 2
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 877
	mov	eax, DWORD PTR _jmp1_loc$39402[ebp]
	add	eax, 1
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 879
	jmp	$LN189@doParseAct
$LN153@doParseAct:
; Line 907
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39406[ebp], eax
; Line 908
	mov	DWORD PTR _dataLoc$39407[ebp], -1
; Line 912
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _topLoc$39406[ebp], eax
	jne	$LN152@doParseAct
; Line 913
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39406[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _repeatedOp$39409[ebp], eax
; Line 915
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 11					; 0000000bH
	jne	SHORT $LN151@doParseAct
; Line 917
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	and	eax, 16777215				; 00ffffffH
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _loopOpI$39413[ebp], eax
; Line 918
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39406[ebp]
	push	eax
	mov	eax, DWORD PTR _loopOpI$39413[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 919
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _dataLoc$39407[ebp], eax
; Line 920
	mov	eax, DWORD PTR _dataLoc$39407[ebp]
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 921
	jmp	$LN189@doParseAct
$LN151@doParseAct:
; Line 926
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN149@doParseAct
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 21					; 00000015H
	je	SHORT $LN149@doParseAct
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 27					; 0000001bH
	jne	$LN152@doParseAct
$LN149@doParseAct:
; Line 928
	push	0
	push	52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _loopOpI$39419[ebp], eax
; Line 929
	mov	eax, DWORD PTR _repeatedOp$39409[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 21					; 00000015H
	jne	SHORT $LN148@doParseAct
; Line 931
	mov	eax, DWORD PTR _loopOpI$39419[ebp]
	or	eax, 1
	mov	DWORD PTR _loopOpI$39419[ebp], eax
$LN148@doParseAct:
; Line 933
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN147@doParseAct
; Line 934
	mov	eax, DWORD PTR _loopOpI$39419[ebp]
	or	eax, 2
	mov	DWORD PTR _loopOpI$39419[ebp], eax
$LN147@doParseAct:
; Line 936
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39406[ebp]
	push	eax
	mov	eax, DWORD PTR _loopOpI$39419[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 937
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _dataLoc$39407[ebp], eax
; Line 938
	mov	eax, DWORD PTR _dataLoc$39407[ebp]
	push	eax
	push	51					; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 939
	jmp	$LN189@doParseAct
$LN152@doParseAct:
; Line 946
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _saveStateLoc$39423[ebp], eax
; Line 947
	mov	eax, DWORD PTR _saveStateLoc$39423[ebp]
	add	eax, 1
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _jmpOp$39424[ebp], eax
; Line 951
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	edx, DWORD PTR _saveStateLoc$39423[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::minMatchLength
	test	eax, eax
	jne	SHORT $LN146@doParseAct
; Line 952
	mov	eax, DWORD PTR _saveStateLoc$39423[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 953
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _dataLoc$39407[ebp], eax
; Line 955
	mov	eax, DWORD PTR _dataLoc$39407[ebp]
	push	eax
	push	35					; 00000023H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39426[ebp], eax
; Line 956
	mov	eax, DWORD PTR _saveStateLoc$39423[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _op$39426[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 957
	mov	eax, DWORD PTR _saveStateLoc$39423[ebp]
	add	eax, 2
	push	eax
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _jmpOp$39424[ebp], eax
$LN146@doParseAct:
; Line 962
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _continueLoc$39427[ebp], eax
; Line 965
	mov	eax, DWORD PTR _continueLoc$39427[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _saveStateOp$39428[ebp], eax
; Line 966
	mov	esi, esp
	mov	eax, DWORD PTR _saveStateLoc$39423[ebp]
	push	eax
	mov	eax, DWORD PTR _saveStateOp$39428[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 969
	mov	eax, DWORD PTR _jmpOp$39424[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::appendOp
; Line 971
	jmp	$LN189@doParseAct
$LN145@doParseAct:
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _jmpLoc$39430[ebp], eax
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _saveLoc$39431[ebp], eax
; Line 983
	mov	eax, DWORD PTR _saveLoc$39431[ebp]
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _jmpOp$39432[ebp], eax
; Line 984
	mov	esi, esp
	mov	eax, DWORD PTR _jmpLoc$39430[ebp]
	push	eax
	mov	eax, DWORD PTR _jmpOp$39432[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 985
	mov	eax, DWORD PTR _jmpLoc$39430[ebp]
	add	eax, 1
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 987
	jmp	$LN189@doParseAct
$LN144@doParseAct:
; Line 994
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+396], 0
; Line 995
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+400], -1
; Line 996
	jmp	$LN189@doParseAct
$LN143@doParseAct:
; Line 1001
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_u_charDigitValue_56
	add	esp, 4
	mov	DWORD PTR _digitValue$39435[ebp], eax
; Line 1002
	cmp	DWORD PTR _digitValue$39435[ebp], 0
	jge	SHORT $LN196@doParseAct
	mov	eax, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	eax, 651				; 0000028bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@MHCOBPOJ@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN196@doParseAct:
; Line 1003
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+396]
	cdq
	push	0
	push	10					; 0000000aH
	push	edx
	push	eax
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _digitValue$39435[ebp]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _val$39438[ebp], ecx
	mov	DWORD PTR _val$39438[ebp+4], esi
; Line 1004
	cmp	DWORD PTR _val$39438[ebp+4], 0
	jl	SHORT $LN142@doParseAct
	jg	SHORT $LN228@doParseAct
	cmp	DWORD PTR _val$39438[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN142@doParseAct
$LN228@doParseAct:
; Line 1005
	push	66311					; 00010307H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1006
	jmp	SHORT $LN141@doParseAct
$LN142@doParseAct:
; Line 1007
	mov	eax, DWORD PTR _val$39438[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+396], eax
$LN141@doParseAct:
; Line 1010
	jmp	$LN189@doParseAct
$LN140@doParseAct:
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], 0
	jge	SHORT $LN139@doParseAct
; Line 1016
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+400], 0
$LN139@doParseAct:
; Line 1018
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_u_charDigitValue_56
	add	esp, 4
	mov	DWORD PTR _digitValue$39445[ebp], eax
; Line 1019
	cmp	DWORD PTR _digitValue$39445[ebp], 0
	jge	SHORT $LN197@doParseAct
	mov	eax, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	eax, 668				; 0000029cH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@MHCOBPOJ@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN197@doParseAct:
; Line 1020
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+400]
	cdq
	push	0
	push	10					; 0000000aH
	push	edx
	push	eax
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _digitValue$39445[ebp]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _val$39447[ebp], ecx
	mov	DWORD PTR _val$39447[ebp+4], esi
; Line 1021
	cmp	DWORD PTR _val$39447[ebp+4], 0
	jl	SHORT $LN138@doParseAct
	jg	SHORT $LN229@doParseAct
	cmp	DWORD PTR _val$39447[ebp], 2147483647	; 7fffffffH
	jbe	SHORT $LN138@doParseAct
$LN229@doParseAct:
; Line 1022
	push	66311					; 00010307H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1023
	jmp	SHORT $LN137@doParseAct
$LN138@doParseAct:
; Line 1024
	mov	eax, DWORD PTR _val$39447[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+400], eax
$LN137@doParseAct:
; Line 1027
	jmp	$LN189@doParseAct
$LN136@doParseAct:
; Line 1031
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR [eax+400], edx
; Line 1032
	jmp	$LN189@doParseAct
$LN135@doParseAct:
; Line 1036
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileInlineInterval@RegexCompile@icu_56@@AAECXZ ; icu_56::RegexCompile::compileInlineInterval
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN134@doParseAct
; Line 1037
	push	28					; 0000001cH
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileInterval@RegexCompile@icu_56@@AAEXHH@Z ; icu_56::RegexCompile::compileInterval
$LN134@doParseAct:
; Line 1039
	jmp	$LN189@doParseAct
$LN133@doParseAct:
; Line 1048
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39456[ebp], eax
; Line 1051
	push	28					; 0000001cH
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileInterval@RegexCompile@icu_56@@AAEXHH@Z ; icu_56::RegexCompile::compileInterval
; Line 1057
	mov	eax, DWORD PTR _topLoc$39456[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 1059
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _varLoc$39457[ebp], eax
; Line 1060
	mov	eax, DWORD PTR _varLoc$39457[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39458[ebp], eax
; Line 1061
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39456[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39458[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1063
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?popi@UVector64@icu_56@@QAE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loopOp$39459[ebp], eax
; Line 1064
	mov	eax, DWORD PTR _loopOp$39459[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 28					; 0000001cH
	jne	SHORT $LN198@doParseAct
	mov	ecx, DWORD PTR _loopOp$39459[ebp]
	and	ecx, 16777215				; 00ffffffH
	cmp	ecx, DWORD PTR _topLoc$39456[ebp]
	je	SHORT $LN199@doParseAct
$LN198@doParseAct:
	mov	edx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	edx, 713				; 000002c9H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1JM@HBBNAPEO@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAl?$AAo?$AAo?$AAp?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN199@doParseAct:
; Line 1065
	mov	eax, DWORD PTR _loopOp$39459[ebp]
	add	eax, 1
	mov	DWORD PTR _loopOp$39459[ebp], eax
; Line 1066
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	eax, DWORD PTR _loopOp$39459[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?push@UVector64@icu_56@@QAE_J_JAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1069
	mov	eax, DWORD PTR _varLoc$39457[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1072
	jmp	$LN189@doParseAct
$LN132@doParseAct:
; Line 1076
	push	29					; 0000001dH
	push	26					; 0000001aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileInterval@RegexCompile@icu_56@@AAEXHH@Z ; icu_56::RegexCompile::compileInterval
; Line 1077
	jmp	$LN189@doParseAct
$LN131@doParseAct:
; Line 1080
	push	66312					; 00010308H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1081
	jmp	$LN189@doParseAct
$LN130@doParseAct:
; Line 1085
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?literalChar@RegexCompile@icu_56@@AAEXH@Z ; icu_56::RegexCompile::literalChar
; Line 1086
	jmp	$LN189@doParseAct
$LN129@doParseAct:
; Line 1094
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 512				; 00000200H
	je	SHORT $LN128@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 65			; 00000041H
	jl	SHORT $LN126@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 90			; 0000005aH
	jle	SHORT $LN127@doParseAct
$LN126@doParseAct:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 97			; 00000061H
	jl	SHORT $LN128@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 122			; 0000007aH
	jg	SHORT $LN128@doParseAct
$LN127@doParseAct:
; Line 1095
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN128@doParseAct:
; Line 1097
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?literalChar@RegexCompile@icu_56@@AAEXH@Z ; icu_56::RegexCompile::literalChar
; Line 1098
	jmp	$LN189@doParseAct
$LN125@doParseAct:
; Line 1104
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 32					; 00000020H
	je	SHORT $LN124@doParseAct
; Line 1106
	push	0
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN123@doParseAct
$LN124@doParseAct:
; Line 1107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN122@doParseAct
; Line 1108
	push	0
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1109
	jmp	SHORT $LN123@doParseAct
$LN122@doParseAct:
; Line 1110
	push	0
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN123@doParseAct:
; Line 1113
	jmp	$LN189@doParseAct
$LN120@doParseAct:
; Line 1117
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1118
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	jne	SHORT $LN119@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	jne	SHORT $LN119@doParseAct
; Line 1119
	push	0
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN118@doParseAct
$LN119@doParseAct:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	je	SHORT $LN117@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	jne	SHORT $LN117@doParseAct
; Line 1121
	push	0
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN118@doParseAct
$LN117@doParseAct:
; Line 1122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	jne	SHORT $LN115@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN115@doParseAct
; Line 1123
	push	0
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN118@doParseAct
$LN115@doParseAct:
; Line 1124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	je	SHORT $LN118@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN118@doParseAct
; Line 1125
	push	0
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN118@doParseAct:
; Line 1128
	jmp	$LN189@doParseAct
$LN112@doParseAct:
; Line 1132
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	jne	SHORT $LN111@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	jne	SHORT $LN111@doParseAct
; Line 1134
	push	0
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN110@doParseAct
$LN111@doParseAct:
; Line 1135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	je	SHORT $LN109@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	jne	SHORT $LN109@doParseAct
; Line 1136
	push	0
	push	42					; 0000002aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN110@doParseAct
$LN109@doParseAct:
; Line 1137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	jne	SHORT $LN107@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN107@doParseAct
; Line 1138
	push	0
	push	54					; 00000036H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
	jmp	SHORT $LN110@doParseAct
$LN107@doParseAct:
; Line 1139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 8
	je	SHORT $LN110@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 1
	je	SHORT $LN110@doParseAct
; Line 1140
	push	0
	push	55					; 00000037H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN110@doParseAct:
; Line 1143
	jmp	$LN189@doParseAct
$LN104@doParseAct:
; Line 1146
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1147
	push	0
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1148
	jmp	$LN189@doParseAct
$LN103@doParseAct:
; Line 1157
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 256				; 00000100H
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 37					; 00000025H
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _op$39494[ebp], ecx
; Line 1159
	push	1
	mov	eax, DWORD PTR _op$39494[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1161
	jmp	$LN189@doParseAct
$LN102@doParseAct:
; Line 1170
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 256				; 00000100H
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 37					; 00000025H
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _op$39496[ebp], ecx
; Line 1172
	push	0
	mov	eax, DWORD PTR _op$39496[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1174
	jmp	$LN189@doParseAct
$LN101@doParseAct:
; Line 1177
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1178
	push	1
	push	22					; 00000016H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1179
	jmp	$LN189@doParseAct
$LN100@doParseAct:
; Line 1182
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1183
	push	0
	push	22					; 00000016H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1184
	jmp	$LN189@doParseAct
$LN99@doParseAct:
; Line 1187
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1188
	push	0
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1189
	jmp	$LN189@doParseAct
$LN98@doParseAct:
; Line 1192
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1193
	push	1
	push	56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1194
	jmp	$LN189@doParseAct
$LN97@doParseAct:
; Line 1197
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1198
	push	0
	push	56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1199
	jmp	$LN189@doParseAct
$LN96@doParseAct:
; Line 1202
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1203
	push	0
	push	57					; 00000039H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1204
	jmp	$LN189@doParseAct
$LN95@doParseAct:
; Line 1207
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1208
	push	4
	push	49					; 00000031H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1209
	jmp	$LN189@doParseAct
$LN94@doParseAct:
; Line 1212
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1213
	push	4
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1214
	jmp	$LN189@doParseAct
$LN93@doParseAct:
; Line 1217
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1218
	push	1
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1219
	jmp	$LN189@doParseAct
$LN92@doParseAct:
; Line 1222
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1223
	push	0
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1224
	jmp	$LN189@doParseAct
$LN91@doParseAct:
; Line 1227
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1228
	push	1
	push	49					; 00000031H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1229
	jmp	$LN189@doParseAct
$LN90@doParseAct:
; Line 1232
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1233
	push	1
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1234
	jmp	$LN189@doParseAct
$LN89@doParseAct:
; Line 1237
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1238
	push	0
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1239
	jmp	$LN189@doParseAct
$LN88@doParseAct:
; Line 1243
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1244
	push	0
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1245
	jmp	$LN189@doParseAct
$LN87@doParseAct:
; Line 1248
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1249
	push	0
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1250
	jmp	$LN189@doParseAct
$LN86@doParseAct:
; Line 1253
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1254
	jmp	$LN189@doParseAct
$LN85@doParseAct:
; Line 1257
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1258
	mov	BYTE PTR _returnVal$[ebp], 0
; Line 1259
	jmp	$LN189@doParseAct
$LN84@doParseAct:
; Line 1263
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1264
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ; icu_56::RegexCompile::scanProp
	mov	DWORD PTR _theSet$39515[ebp], eax
; Line 1265
	mov	eax, DWORD PTR _theSet$39515[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z ; icu_56::RegexCompile::compileSet
; Line 1267
	jmp	$LN189@doParseAct
$LN83@doParseAct:
; Line 1271
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanNamedChar@RegexCompile@icu_56@@AAEHXZ ; icu_56::RegexCompile::scanNamedChar
	mov	DWORD PTR _c$39517[ebp], eax
; Line 1272
	mov	eax, DWORD PTR _c$39517[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?literalChar@RegexCompile@icu_56@@AAEXH@Z ; icu_56::RegexCompile::literalChar
; Line 1274
	jmp	$LN189@doParseAct
$LN82@doParseAct:
; Line 1283
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+108]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numCaptureGroups$39519[ebp], eax
; Line 1284
	mov	DWORD PTR _groupNum$39520[ebp], 0
; Line 1285
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _c$39521[ebp], ecx
$LN81@doParseAct:
; Line 1289
	mov	eax, DWORD PTR _c$39521[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	mov	DWORD PTR _digit$39525[ebp], eax
; Line 1290
	mov	eax, DWORD PTR _groupNum$39520[ebp]
	imul	eax, 10					; 0000000aH
	add	eax, DWORD PTR _digit$39525[ebp]
	mov	DWORD PTR _groupNum$39520[ebp], eax
; Line 1291
	mov	eax, DWORD PTR _groupNum$39520[ebp]
	cmp	eax, DWORD PTR _numCaptureGroups$39519[ebp]
	jl	SHORT $LN79@doParseAct
; Line 1292
	jmp	SHORT $LN80@doParseAct
$LN79@doParseAct:
; Line 1294
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	mov	DWORD PTR _c$39521[ebp], eax
; Line 1295
	mov	esi, esp
	mov	eax, DWORD PTR _c$39521[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	edx, DWORD PTR [ecx+1040]
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	ecx, DWORD PTR [eax+1040]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN78@doParseAct
; Line 1296
	jmp	SHORT $LN80@doParseAct
$LN78@doParseAct:
; Line 1298
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 1299
	jmp	$LN81@doParseAct
$LN80@doParseAct:
; Line 1306
	cmp	DWORD PTR _groupNum$39520[ebp], 0
	jg	SHORT $LN200@doParseAct
	mov	eax, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	eax, 955				; 000003bbH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BK@PALOODDI@?$AAg?$AAr?$AAo?$AAu?$AAp?$AAN?$AAu?$AAm?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN200@doParseAct:
; Line 1308
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1309
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN77@doParseAct
; Line 1310
	mov	eax, DWORD PTR _groupNum$39520[ebp]
	push	eax
	push	41					; 00000029H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1311
	jmp	SHORT $LN76@doParseAct
$LN77@doParseAct:
; Line 1312
	mov	eax, DWORD PTR _groupNum$39520[ebp]
	push	eax
	push	34					; 00000022H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN76@doParseAct:
; Line 1315
	jmp	$LN189@doParseAct
$LN75@doParseAct:
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+468], 0
	je	SHORT $LN201@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 967				; 000003c7H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@NHDKOHFH@?$AAf?$AAC?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN201@doParseAct:
; Line 1319
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48034[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T48034[ebp], 0
	je	SHORT $LN202@doParseAct
	mov	esi, esp
	mov	ecx, DWORD PTR $T48034[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48034[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T48034[ebp]
	mov	DWORD PTR tv1291[ebp], ecx
	jmp	SHORT $LN203@doParseAct
$LN202@doParseAct:
	mov	DWORD PTR tv1291[ebp], 0
$LN203@doParseAct:
	mov	edx, DWORD PTR tv1291[ebp]
	mov	DWORD PTR $T48033[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T48033[ebp]
	mov	DWORD PTR [eax+468], ecx
; Line 1320
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+468], 0
	jne	SHORT $LN74@doParseAct
; Line 1321
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN74@doParseAct:
; Line 1323
	jmp	$LN189@doParseAct
$LN73@doParseAct:
; Line 1326
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+468]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1327
	jmp	$LN189@doParseAct
$LN72@doParseAct:
; Line 1331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+468]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	call	_uhash_geti_56
	add	esp, 8
	mov	DWORD PTR _groupNumber$39542[ebp], eax
; Line 1332
	cmp	DWORD PTR _groupNumber$39542[ebp], 0
	jne	SHORT $LN71@doParseAct
; Line 1336
	push	66325					; 00010315H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1337
	jmp	SHORT $LN70@doParseAct
$LN71@doParseAct:
; Line 1340
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1341
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN69@doParseAct
; Line 1342
	mov	eax, DWORD PTR _groupNumber$39542[ebp]
	push	eax
	push	41					; 00000029H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1343
	jmp	SHORT $LN70@doParseAct
$LN69@doParseAct:
; Line 1344
	mov	eax, DWORD PTR _groupNumber$39542[ebp]
	push	eax
	push	34					; 00000022H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN70@doParseAct:
; Line 1347
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+468]
	mov	DWORD PTR $T48038[ebp], ecx
	mov	edx, DWORD PTR $T48038[ebp]
	mov	DWORD PTR $T48037[ebp], edx
	cmp	DWORD PTR $T48037[ebp], 0
	je	SHORT $LN204@doParseAct
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T48037[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T48037[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1331[ebp], eax
	jmp	SHORT $LN205@doParseAct
$LN204@doParseAct:
	mov	DWORD PTR tv1331[ebp], 0
$LN205@doParseAct:
; Line 1348
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], 0
; Line 1349
	jmp	$LN189@doParseAct
$LN67@doParseAct:
; Line 1367
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39550[ebp], eax
; Line 1368
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _stoLoc$39551[ebp], eax
; Line 1369
	mov	eax, DWORD PTR _stoLoc$39551[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39552[ebp], eax
; Line 1370
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39550[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39552[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1373
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 2
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1376
	mov	eax, DWORD PTR _topLoc$39550[ebp]
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1379
	mov	eax, DWORD PTR _stoLoc$39551[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1381
	jmp	$LN189@doParseAct
$LN66@doParseAct:
; Line 1395
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39554[ebp], eax
; Line 1396
	mov	eax, DWORD PTR _topLoc$39554[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 1399
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _stoLoc$39555[ebp], eax
; Line 1400
	mov	eax, DWORD PTR _stoLoc$39555[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39556[ebp], eax
; Line 1401
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39554[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39556[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1404
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _L7$39557[ebp], eax
; Line 1405
	mov	eax, DWORD PTR _L7$39557[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39556[ebp], eax
; Line 1406
	mov	eax, DWORD PTR _topLoc$39554[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _op$39556[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1409
	mov	eax, DWORD PTR _topLoc$39554[ebp]
	add	eax, 1
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1412
	mov	eax, DWORD PTR _stoLoc$39555[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1414
	jmp	$LN189@doParseAct
$LN65@doParseAct:
; Line 1427
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topLoc$39559[ebp], eax
; Line 1428
	mov	eax, DWORD PTR _topLoc$39559[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 1431
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateData
	mov	DWORD PTR _stoLoc$39560[ebp], eax
; Line 1432
	mov	eax, DWORD PTR _stoLoc$39560[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39561[ebp], eax
; Line 1433
	mov	esi, esp
	mov	eax, DWORD PTR _topLoc$39559[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39561[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1436
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _continueLoc$39562[ebp], eax
; Line 1437
	mov	eax, DWORD PTR _continueLoc$39562[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39561[ebp], eax
; Line 1438
	mov	eax, DWORD PTR _topLoc$39559[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _op$39561[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1441
	mov	eax, DWORD PTR _stoLoc$39560[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1443
	jmp	$LN189@doParseAct
$LN64@doParseAct:
; Line 1447
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+280]
	mov	DWORD PTR [eax+284], edx
; Line 1448
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+288], 1
; Line 1449
	jmp	$LN189@doParseAct
$LN63@doParseAct:
; Line 1453
	mov	DWORD PTR _bit$39565[ebp], 0
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR tv1479[ebp], ecx
	mov	edx, DWORD PTR tv1479[ebp]
	sub	edx, 45					; 0000002dH
	mov	DWORD PTR tv1479[ebp], edx
	cmp	DWORD PTR tv1479[ebp], 75		; 0000004bH
	ja	SHORT $LN52@doParseAct
	mov	eax, DWORD PTR tv1479[ebp]
	movzx	ecx, BYTE PTR $LN230@doParseAct[eax]
	jmp	DWORD PTR $LN241@doParseAct[ecx*4]
$LN60@doParseAct:
; Line 1455
	mov	DWORD PTR _bit$39565[ebp], 2
	jmp	$LN61@doParseAct
$LN59@doParseAct:
; Line 1456
	mov	DWORD PTR _bit$39565[ebp], 1
	jmp	SHORT $LN61@doParseAct
$LN58@doParseAct:
; Line 1457
	mov	DWORD PTR _bit$39565[ebp], 8
	jmp	SHORT $LN61@doParseAct
$LN57@doParseAct:
; Line 1458
	mov	DWORD PTR _bit$39565[ebp], 32		; 00000020H
	jmp	SHORT $LN61@doParseAct
$LN56@doParseAct:
; Line 1459
	mov	DWORD PTR _bit$39565[ebp], 0
	jmp	SHORT $LN61@doParseAct
$LN55@doParseAct:
; Line 1460
	mov	DWORD PTR _bit$39565[ebp], 256		; 00000100H
	jmp	SHORT $LN61@doParseAct
$LN54@doParseAct:
; Line 1461
	mov	DWORD PTR _bit$39565[ebp], 4
	jmp	SHORT $LN61@doParseAct
$LN53@doParseAct:
; Line 1462
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+288], 0
	jmp	SHORT $LN61@doParseAct
$LN52@doParseAct:
; Line 1464
	xor	eax, eax
	jne	SHORT $LN61@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1113				; 00000459H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN61@doParseAct:
; Line 1467
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+288]
	test	ecx, ecx
	je	SHORT $LN51@doParseAct
; Line 1468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	or	ecx, DWORD PTR _bit$39565[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], ecx
; Line 1469
	jmp	SHORT $LN50@doParseAct
$LN51@doParseAct:
; Line 1470
	mov	eax, DWORD PTR _bit$39565[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+284]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+284], eax
$LN50@doParseAct:
; Line 1473
	jmp	$LN189@doParseAct
$LN49@doParseAct:
; Line 1477
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1481
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+284], 0
	jl	SHORT $LN207@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1130				; 0000046aH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@CDMEDFBP@?$AAf?$AAN?$AAe?$AAw?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN207@doParseAct:
; Line 1482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	mov	DWORD PTR [eax+280], edx
; Line 1484
	jmp	$LN189@doParseAct
$LN48@doParseAct:
; Line 1497
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1498
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1499
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1504
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1505
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	-6					; fffffffaH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1506
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1507
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edi, esp
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1510
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+284], 0
	jl	SHORT $LN208@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1159				; 00000487H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@CDMEDFBP@?$AAf?$AAN?$AAe?$AAw?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN208@doParseAct:
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	mov	DWORD PTR [eax+280], edx
; Line 1513
	jmp	$LN189@doParseAct
$LN47@doParseAct:
; Line 1516
	push	66315					; 0001030bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1517
	jmp	$LN189@doParseAct
$LN46@doParseAct:
; Line 1523
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+34], 0
; Line 1524
	jmp	$LN189@doParseAct
$LN45@doParseAct:
; Line 1529
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39591[ebp], eax
; Line 1530
	mov	esi, esp
	push	38					; 00000026H
	mov	ecx, DWORD PTR _set$39591[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1532
	jmp	$LN189@doParseAct
$LN44@doParseAct:
; Line 1536
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39594[ebp], eax
; Line 1537
	mov	esi, esp
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _set$39594[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1539
	jmp	$LN189@doParseAct
$LN43@doParseAct:
; Line 1543
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39597[ebp], eax
; Line 1544
	mov	esi, esp
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _set$39597[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _set$39597[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1545
	jmp	$LN189@doParseAct
$LN42@doParseAct:
; Line 1550
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39600[ebp], eax
; Line 1551
	mov	esi, esp
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	lea	ecx, DWORD PTR _SSet$39602[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1552
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39602[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1553
	mov	esi, esp
	lea	eax, DWORD PTR _SSet$39602[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39600[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39600[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1554
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39602[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN41@doParseAct:
; Line 1559
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39604[ebp], eax
; Line 1561
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	512					; 00000200H
	mov	edx, DWORD PTR _set$39604[ebp]
	push	edx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 1562
	jmp	$LN189@doParseAct
$LN40@doParseAct:
; Line 1567
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39608[ebp], eax
; Line 1568
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$39610[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1570
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	512					; 00000200H
	push	8192					; 00002000H
	lea	ecx, DWORD PTR _digits$39610[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1571
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$39610[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1572
	mov	esi, esp
	lea	eax, DWORD PTR _digits$39610[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39608[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39608[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1573
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$39610[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN39@doParseAct:
; Line 1578
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39613[ebp], eax
; Line 1579
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39615[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 1580
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	4096					; 00001000H
	push	8192					; 00002000H
	lea	ecx, DWORD PTR _h$39615[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1581
	mov	esi, esp
	push	9
	lea	ecx, DWORD PTR _h$39615[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1582
	mov	esi, esp
	lea	eax, DWORD PTR _h$39615[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39613[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39613[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1583
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39615[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN38@doParseAct:
; Line 1588
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39619[ebp], eax
; Line 1589
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 5
; Line 1590
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	4096					; 00001000H
	push	8192					; 00002000H
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1591
	mov	esi, esp
	push	9
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1592
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1593
	mov	esi, esp
	lea	eax, DWORD PTR _h$39621[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39619[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39619[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1594
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN37@doParseAct:
; Line 1599
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39625[ebp], eax
; Line 1600
	mov	esi, esp
	push	13					; 0000000dH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _set$39625[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$39625[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1601
	mov	esi, esp
	push	133					; 00000085H
	mov	ecx, DWORD PTR _set$39625[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1602
	mov	esi, esp
	push	8233					; 00002029H
	push	8232					; 00002028H
	mov	eax, DWORD PTR _set$39625[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$39625[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1603
	jmp	$LN189@doParseAct
$LN36@doParseAct:
; Line 1608
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39633[ebp], eax
; Line 1609
	mov	esi, esp
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 6
; Line 1610
	mov	esi, esp
	push	13					; 0000000dH
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1611
	mov	esi, esp
	push	133					; 00000085H
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1612
	mov	esi, esp
	push	8233					; 00002029H
	push	8232					; 00002028H
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1613
	mov	esi, esp
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1614
	mov	esi, esp
	lea	eax, DWORD PTR _v$39635[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39633[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39633[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1615
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN35@doParseAct:
; Line 1620
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39642[ebp], eax
; Line 1621
	mov	esi, esp
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _set$39642[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _set$39642[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1622
	jmp	$LN189@doParseAct
$LN34@doParseAct:
; Line 1627
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$39645[ebp], eax
; Line 1628
	mov	esi, esp
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _SSet$39647[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 7
; Line 1629
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39647[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1630
	mov	esi, esp
	lea	eax, DWORD PTR _SSet$39647[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$39645[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$39645[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1631
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39647[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN189@doParseAct
$LN33@doParseAct:
; Line 1635
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1636
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48045[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T48045[ebp], 0
	je	SHORT $LN209@doParseAct
	mov	esi, esp
	mov	ecx, DWORD PTR $T48045[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48045[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T48045[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T48045[ebp]
	mov	DWORD PTR tv1718[ebp], edx
	jmp	SHORT $LN210@doParseAct
$LN209@doParseAct:
	mov	DWORD PTR tv1718[ebp], 0
$LN210@doParseAct:
	mov	eax, DWORD PTR tv1718[ebp]
	mov	DWORD PTR $T48044[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR $T48044[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1637
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1638
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN32@doParseAct
; Line 1639
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131081					; 00020009H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@doParseAct:
; Line 1641
	jmp	$LN189@doParseAct
$LN31@doParseAct:
; Line 1648
	push	262151					; 00040007H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPushOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setPushOp
; Line 1649
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1650
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN30@doParseAct
; Line 1651
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131081					; 00020009H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@doParseAct:
; Line 1653
	jmp	$LN189@doParseAct
$LN29@doParseAct:
; Line 1658
	push	262152					; 00040008H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPushOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setPushOp
; Line 1659
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1660
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN28@doParseAct
; Line 1661
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131081					; 00020009H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@doParseAct:
; Line 1663
	jmp	$LN189@doParseAct
$LN27@doParseAct:
; Line 1668
	push	262150					; 00040006H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPushOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setPushOp
; Line 1669
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1670
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN26@doParseAct
; Line 1671
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131081					; 00020009H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@doParseAct:
; Line 1673
	jmp	$LN189@doParseAct
$LN25@doParseAct:
; Line 1678
	push	196612					; 00030004H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPushOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setPushOp
; Line 1679
	jmp	$LN189@doParseAct
$LN24@doParseAct:
; Line 1685
	push	65538					; 00010002H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEval@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setEval
; Line 1686
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?peeki@UStack@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN211@doParseAct
	mov	eax, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	eax, 1335				; 00000537H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DM@GEAEDHFL@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAp?$AAe?$AAe?$AAk?$AAi?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AAs?$AAe?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN211@doParseAct:
; Line 1687
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UStack@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1688
	jmp	$LN189@doParseAct
$LN23@doParseAct:
; Line 1696
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN212@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1345				; 00000541H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CI@PPCGKICE@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN212@doParseAct:
; Line 1697
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _theSet$39667[ebp], eax
; Line 1698
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN213@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1347				; 00000543H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@PNCFOHGD@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN213@doParseAct:
; Line 1699
	mov	eax, DWORD PTR _theSet$39667[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z ; icu_56::RegexCompile::compileSet
; Line 1700
	jmp	$LN189@doParseAct
$LN22@doParseAct:
; Line 1705
	push	196613					; 00030005H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPushOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setPushOp
; Line 1706
	jmp	$LN189@doParseAct
$LN21@doParseAct:
; Line 1715
	push	262150					; 00040006H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEval@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setEval
; Line 1716
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39673[ebp], eax
; Line 1717
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	ecx, DWORD PTR _s$39673[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1718
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR [eax+464], edx
; Line 1719
	jmp	$LN189@doParseAct
$LN20@doParseAct:
; Line 1729
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 512				; 00000200H
	je	SHORT $LN19@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 65			; 00000041H
	jl	SHORT $LN17@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 90			; 0000005aH
	jle	SHORT $LN18@doParseAct
$LN17@doParseAct:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 97			; 00000061H
	jl	SHORT $LN19@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 122			; 0000007aH
	jg	SHORT $LN19@doParseAct
$LN18@doParseAct:
; Line 1730
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN19@doParseAct:
; Line 1732
	push	262150					; 00040006H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEval@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setEval
; Line 1733
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39679[ebp], eax
; Line 1734
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	ecx, DWORD PTR _s$39679[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1735
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR [eax+464], edx
; Line 1736
	jmp	$LN189@doParseAct
$LN16@doParseAct:
; Line 1744
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanNamedChar@RegexCompile@icu_56@@AAEHXZ ; icu_56::RegexCompile::scanNamedChar
	mov	DWORD PTR _c$39682[ebp], eax
; Line 1745
	push	262150					; 00040006H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEval@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setEval
; Line 1746
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39683[ebp], eax
; Line 1747
	mov	esi, esp
	mov	eax, DWORD PTR _c$39682[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$39683[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1748
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$39682[ebp]
	mov	DWORD PTR [eax+464], ecx
; Line 1749
	jmp	$LN189@doParseAct
$LN15@doParseAct:
; Line 1759
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanNamedChar@RegexCompile@icu_56@@AAEHXZ ; icu_56::RegexCompile::scanNamedChar
	mov	DWORD PTR _c$39686[ebp], eax
; Line 1760
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN14@doParseAct
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	cmp	ecx, DWORD PTR _c$39686[ebp]
	jle	SHORT $LN14@doParseAct
; Line 1761
	push	66320					; 00010310H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN14@doParseAct:
; Line 1763
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39688[ebp], eax
; Line 1764
	mov	esi, esp
	mov	eax, DWORD PTR _c$39686[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+464]
	push	edx
	mov	eax, DWORD PTR _s$39688[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _s$39688[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1765
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$39686[ebp]
	mov	DWORD PTR [eax+464], ecx
; Line 1766
	jmp	$LN189@doParseAct
$LN13@doParseAct:
; Line 1779
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?peeki@UStack@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tosOp$39691[ebp], eax
; Line 1780
	cmp	DWORD PTR _tosOp$39691[ebp], 131081	; 00020009H
	jne	SHORT $LN12@doParseAct
; Line 1781
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UStack@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1782
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131075					; 00020003H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1783
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131081					; 00020009H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1784
	jmp	SHORT $LN11@doParseAct
$LN12@doParseAct:
; Line 1785
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	131075					; 00020003H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@doParseAct:
; Line 1788
	jmp	$LN189@doParseAct
$LN10@doParseAct:
; Line 1791
	push	66319					; 0001030fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1792
	jmp	$LN189@doParseAct
$LN9@doParseAct:
; Line 1795
	push	66305					; 00010301H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1796
	jmp	$LN189@doParseAct
$LN8@doParseAct:
; Line 1800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ; icu_56::RegexCompile::scanPosixProp
	mov	DWORD PTR _s$39697[ebp], eax
; Line 1801
	cmp	DWORD PTR _s$39697[ebp], 0
	je	$LN7@doParseAct
; Line 1802
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tos$39699[ebp], eax
; Line 1803
	mov	esi, esp
	mov	eax, DWORD PTR _s$39697[ebp]
	push	eax
	mov	ecx, DWORD PTR _tos$39699[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tos$39699[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1804
	mov	eax, DWORD PTR _s$39697[ebp]
	mov	DWORD PTR $T48052[ebp], eax
	mov	ecx, DWORD PTR $T48052[ebp]
	mov	DWORD PTR $T48051[ebp], ecx
	cmp	DWORD PTR $T48051[ebp], 0
	je	SHORT $LN214@doParseAct
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48051[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48051[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv2001[ebp], eax
	jmp	SHORT $LN7@doParseAct
$LN214@doParseAct:
	mov	DWORD PTR tv2001[ebp], 0
$LN7@doParseAct:
; Line 1807
	jmp	$LN189@doParseAct
$LN6@doParseAct:
; Line 1812
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ; icu_56::RegexCompile::scanProp
	mov	DWORD PTR _s$39704[ebp], eax
; Line 1813
	cmp	DWORD PTR _s$39704[ebp], 0
	je	$LN5@doParseAct
; Line 1814
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tos$39706[ebp], eax
; Line 1815
	mov	esi, esp
	mov	eax, DWORD PTR _s$39704[ebp]
	push	eax
	mov	ecx, DWORD PTR _tos$39706[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tos$39706[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1816
	mov	eax, DWORD PTR _s$39704[ebp]
	mov	DWORD PTR $T48056[ebp], eax
	mov	ecx, DWORD PTR $T48056[ebp]
	mov	DWORD PTR $T48055[ebp], ecx
	cmp	DWORD PTR $T48055[ebp], 0
	je	SHORT $LN216@doParseAct
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48055[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48055[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv2022[ebp], eax
	jmp	SHORT $LN5@doParseAct
$LN216@doParseAct:
	mov	DWORD PTR tv2022[ebp], 0
$LN5@doParseAct:
; Line 1819
	jmp	$LN189@doParseAct
$LN4@doParseAct:
; Line 1829
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+464]
	cmp	edx, DWORD PTR [ecx+64]
	jle	SHORT $LN3@doParseAct
; Line 1830
	push	66320					; 00010310H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN3@doParseAct:
; Line 1832
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$39712[ebp], eax
; Line 1833
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+464]
	push	eax
	mov	ecx, DWORD PTR _s$39712[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _s$39712[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1834
	jmp	SHORT $LN189@doParseAct
$LN2@doParseAct:
; Line 1838
	xor	eax, eax
	jne	SHORT $LN218@doParseAct
	mov	ecx, DWORD PTR ?__LINE__Var@?1??doParseActions@RegexCompile@icu_56@@AAECH@Z@4JA
	add	ecx, 1487				; 000005cfH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN218@doParseAct:
; Line 1839
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN189@doParseAct:
; Line 1843
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@doParseAct
; Line 1844
	mov	BYTE PTR _returnVal$[ebp], 0
$LN1@doParseAct:
; Line 1847
	mov	al, BYTE PTR _returnVal$[ebp]
; Line 1848
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN239@doParseAct
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1800				; 00000708H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN239@doParseAct:
	DD	6
	DD	$LN238@doParseAct
$LN238@doParseAct:
	DD	-904					; fffffc78H
	DD	52					; 00000034H
	DD	$LN231@doParseAct
	DD	-988					; fffffc24H
	DD	52					; 00000034H
	DD	$LN232@doParseAct
	DD	-1060					; fffffbdcH
	DD	52					; 00000034H
	DD	$LN233@doParseAct
	DD	-1132					; fffffb94H
	DD	52					; 00000034H
	DD	$LN234@doParseAct
	DD	-1216					; fffffb40H
	DD	52					; 00000034H
	DD	$LN235@doParseAct
	DD	-1300					; fffffaecH
	DD	52					; 00000034H
	DD	$LN236@doParseAct
$LN236@doParseAct:
	DB	83					; 00000053H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN235@doParseAct:
	DB	118					; 00000076H
	DB	0
$LN234@doParseAct:
	DB	104					; 00000068H
	DB	0
$LN233@doParseAct:
	DB	104					; 00000068H
	DB	0
$LN232@doParseAct:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN231@doParseAct:
	DB	83					; 00000053H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
	npad	1
$LN240@doParseAct:
	DD	$LN36@doParseAct
	DD	$LN39@doParseAct
	DD	$LN75@doParseAct
	DD	$LN49@doParseAct
	DD	$LN2@doParseAct
	DD	$LN180@doParseAct
	DD	$LN182@doParseAct
	DD	$LN41@doParseAct
	DD	$LN64@doParseAct
	DD	$LN89@doParseAct
	DD	$LN8@doParseAct
	DD	$LN131@doParseAct
	DD	$LN20@doParseAct
	DD	$LN43@doParseAct
	DD	$LN168@doParseAct
	DD	$LN92@doParseAct
	DD	$LN173@doParseAct
	DD	$LN188@doParseAct
	DD	$LN133@doParseAct
	DD	$LN176@doParseAct
	DD	$LN174@doParseAct
	DD	$LN100@doParseAct
	DD	$LN88@doParseAct
	DD	$LN140@doParseAct
	DD	$LN181@doParseAct
	DD	$LN25@doParseAct
	DD	$LN45@doParseAct
	DD	$LN16@doParseAct
	DD	$LN83@doParseAct
	DD	$LN38@doParseAct
	DD	$LN102@doParseAct
	DD	$LN87@doParseAct
	DD	$LN31@doParseAct
	DD	$LN175@doParseAct
	DD	$LN48@doParseAct
	DD	$LN93@doParseAct
	DD	$LN143@doParseAct
	DD	$LN120@doParseAct
	DD	$LN24@doParseAct
	DD	$LN13@doParseAct
	DD	$LN95@doParseAct
	DD	$LN185@doParseAct
	DD	$LN103@doParseAct
	DD	$LN90@doParseAct
	DD	$LN96@doParseAct
	DD	$LN167@doParseAct
	DD	$LN125@doParseAct
	DD	$LN63@doParseAct
	DD	$LN34@doParseAct
	DD	$LN156@doParseAct
	DD	$LN40@doParseAct
	DD	$LN65@doParseAct
	DD	$LN15@doParseAct
	DD	$LN171@doParseAct
	DD	$LN94@doParseAct
	DD	$LN66@doParseAct
	DD	$LN165@doParseAct
	DD	$LN167@doParseAct
	DD	$LN170@doParseAct
	DD	$LN132@doParseAct
	DD	$LN6@doParseAct
	DD	$LN82@doParseAct
	DD	$LN27@doParseAct
	DD	$LN86@doParseAct
	DD	$LN155@doParseAct
	DD	$LN29@doParseAct
	DD	$LN67@doParseAct
	DD	$LN101@doParseAct
	DD	$LN172@doParseAct
	DD	$LN33@doParseAct
	DD	$LN22@doParseAct
	DD	$LN72@doParseAct
	DD	$LN4@doParseAct
	DD	$LN112@doParseAct
	DD	$LN98@doParseAct
	DD	$LN85@doParseAct
	DD	$LN154@doParseAct
	DD	$LN177@doParseAct
	DD	$LN104@doParseAct
	DD	$LN37@doParseAct
	DD	$LN97@doParseAct
	DD	$LN47@doParseAct
	DD	$LN10@doParseAct
	DD	$LN136@doParseAct
	DD	$LN44@doParseAct
	DD	$LN91@doParseAct
	DD	$LN171@doParseAct
	DD	$LN9@doParseAct
	DD	$LN21@doParseAct
	DD	$LN187@doParseAct
	DD	$LN184@doParseAct
	DD	$LN129@doParseAct
	DD	$LN130@doParseAct
	DD	$LN46@doParseAct
	DD	$LN166@doParseAct
	DD	$LN145@doParseAct
	DD	$LN23@doParseAct
	DD	$LN135@doParseAct
	DD	$LN99@doParseAct
	DD	$LN153@doParseAct
	DD	$LN35@doParseAct
	DD	$LN42@doParseAct
	DD	$LN84@doParseAct
	DD	$LN73@doParseAct
	DD	$LN144@doParseAct
$LN241@doParseAct:
	DD	$LN53@doParseAct
	DD	$LN59@doParseAct
	DD	$LN60@doParseAct
	DD	$LN58@doParseAct
	DD	$LN57@doParseAct
	DD	$LN56@doParseAct
	DD	$LN55@doParseAct
	DD	$LN54@doParseAct
	DD	$LN52@doParseAct
$LN230@doParseAct:
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	8
	DB	8
	DB	8
	DB	3
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	4
	DB	8
	DB	5
	DB	8
	DB	6
	DB	7
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T48024[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T48034[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39602[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _digits$39610[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39615[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _h$39621[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _v$39635[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR _SSet$39647[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?doParseActions@RegexCompile@icu_56@@AAECH@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T48045[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?doParseActions@RegexCompile@icu_56@@AAECH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1804]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?doParseActions@RegexCompile@icu_56@@AAECH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?doParseActions@RegexCompile@icu_56@@AAECH@Z ENDP	; icu_56::RegexCompile::doParseActions
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv78 = -272						; size = 4
tv79 = -268						; size = 4
$T48091 = -260						; size = 52
__$EHRec$ = -12						; size = 12
_set$ = 8						; size = 4
_value$ = 12						; size = 4
_ec$ = 16						; size = 4
?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z PROC ; icu_56::addCategory, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 95
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	8192					; 00002000H
	mov	edi, esp
	lea	ecx, DWORD PTR $T48091[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv78[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T48091[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 96
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T48091[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ENDP ; icu_56::addCategory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?literalChar@RegexCompile@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?literalChar@RegexCompile@icu_56@@AAEXH@Z PROC		; icu_56::RegexCompile::literalChar, COMDAT
; _this$ = ecx
; Line 1860
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1861
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1862
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?literalChar@RegexCompile@icu_56@@AAEXH@Z ENDP		; icu_56::RegexCompile::literalChar
_TEXT	ENDS
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	_u_hasBinaryProperty_56:PROC
EXTRN	__imp_?foldCase@UnicodeString@icu_56@@QAEAAV12@I@Z:PROC
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fixLiterals@RegexCompile@icu_56@@AAEXC@Z
_TEXT	SEGMENT
_lastCodePoint$ = -32					; size = 4
_indexOfLastCodePoint$ = -20				; size = 4
_this$ = -8						; size = 4
_split$ = 8						; size = 1
?fixLiterals@RegexCompile@icu_56@@AAEXC@Z PROC		; icu_56::RegexCompile::fixLiterals, COMDAT
; _this$ = ecx
; Line 1877
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1881
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN11@fixLiteral
; Line 1882
	jmp	$LN12@fixLiteral
$LN11@fixLiteral:
; Line 1885
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	edi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _indexOfLastCodePoint$[ebp], eax
; Line 1886
	mov	esi, esp
	mov	eax, DWORD PTR _indexOfLastCodePoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastCodePoint$[ebp], eax
; Line 1893
	movsx	eax, BYTE PTR _split$[ebp]
	test	eax, eax
	je	SHORT $LN10@fixLiteral
; Line 1894
	mov	esi, esp
	mov	eax, DWORD PTR _indexOfLastCodePoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1895
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1899
	mov	eax, DWORD PTR _lastCodePoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?literalChar@RegexCompile@icu_56@@AAEXH@Z ; icu_56::RegexCompile::literalChar
; Line 1900
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 1901
	jmp	$LN12@fixLiteral
$LN10@fixLiteral:
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN9@fixLiteral
; Line 1907
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?foldCase@UnicodeString@icu_56@@QAEAAV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1908
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	edi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _indexOfLastCodePoint$[ebp], eax
; Line 1909
	mov	esi, esp
	mov	eax, DWORD PTR _indexOfLastCodePoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastCodePoint$[ebp], eax
$LN9@fixLiteral:
; Line 1912
	cmp	DWORD PTR _indexOfLastCodePoint$[ebp], 0
	jne	SHORT $LN8@fixLiteral
; Line 1915
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN7@fixLiteral
	push	34					; 00000022H
	mov	eax, DWORD PTR _lastCodePoint$[ebp]
	push	eax
	call	_u_hasBinaryProperty_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@fixLiteral
; Line 1916
	mov	eax, DWORD PTR _lastCodePoint$[ebp]
	push	eax
	push	39					; 00000027H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1917
	jmp	SHORT $LN6@fixLiteral
$LN7@fixLiteral:
; Line 1918
	mov	eax, DWORD PTR _lastCodePoint$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN6@fixLiteral:
; Line 1920
	jmp	$LN5@fixLiteral
$LN8@fixLiteral:
; Line 1922
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 16777215				; 00ffffffH
	jg	SHORT $LN3@fixLiteral
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 16777215				; 00ffffffH
	jle	SHORT $LN4@fixLiteral
$LN3@fixLiteral:
; Line 1923
	push	66324					; 00010314H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN4@fixLiteral:
; Line 1925
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN2@fixLiteral
; Line 1926
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1927
	jmp	SHORT $LN1@fixLiteral
$LN2@fixLiteral:
; Line 1930
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN1@fixLiteral:
; Line 1932
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 1935
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 292				; 00000124H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@fixLiteral:
; Line 1938
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@fixLiteral:
; Line 1939
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ENDP		; icu_56::RegexCompile::fixLiterals
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA ; `icu_56::RegexCompile::buildOp'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA DD 0796H ; `icu_56::RegexCompile::buildOp'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?buildOp@RegexCompile@icu_56@@AAEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_type$ = 8						; size = 4
_val$ = 12						; size = 4
?buildOp@RegexCompile@icu_56@@AAEHHH@Z PROC		; icu_56::RegexCompile::buildOp, COMDAT
; _this$ = ecx
; Line 1942
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1943
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@buildOp
; Line 1944
	xor	eax, eax
	jmp	$LN8@buildOp
$LN7@buildOp:
; Line 1946
	cmp	DWORD PTR _type$[ebp], 0
	jl	SHORT $LN5@buildOp
	cmp	DWORD PTR _type$[ebp], 255		; 000000ffH
	jle	SHORT $LN6@buildOp
$LN5@buildOp:
; Line 1947
	xor	eax, eax
	jne	SHORT $LN10@buildOp
	mov	ecx, DWORD PTR ?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 5
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@buildOp:
; Line 1948
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1949
	mov	DWORD PTR _type$[ebp], 0
$LN6@buildOp:
; Line 1951
	cmp	DWORD PTR _val$[ebp], 16777215		; 00ffffffH
	jle	SHORT $LN4@buildOp
; Line 1952
	xor	eax, eax
	jne	SHORT $LN11@buildOp
	mov	ecx, DWORD PTR ?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 10					; 0000000aH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@buildOp:
; Line 1953
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1954
	mov	DWORD PTR _val$[ebp], 0
$LN4@buildOp:
; Line 1956
	cmp	DWORD PTR _val$[ebp], 0
	jge	$LN3@buildOp
; Line 1957
	cmp	DWORD PTR _type$[ebp], 255		; 000000ffH
	je	SHORT $LN2@buildOp
	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN2@buildOp
; Line 1958
	xor	eax, eax
	jne	SHORT $LN12@buildOp
	mov	ecx, DWORD PTR ?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 16					; 00000010H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@buildOp:
; Line 1959
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1960
	or	eax, -1
	jmp	SHORT $LN8@buildOp
$LN2@buildOp:
; Line 1962
	mov	eax, DWORD PTR _val$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN1@buildOp
; Line 1963
	xor	eax, eax
	jne	SHORT $LN13@buildOp
	mov	ecx, DWORD PTR ?__LINE__Var@?1??buildOp@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 21					; 00000015H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@buildOp:
; Line 1964
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 1965
	or	eax, -1
	jmp	SHORT $LN8@buildOp
$LN1@buildOp:
; Line 1967
	mov	DWORD PTR _type$[ebp], 255		; 000000ffH
$LN3@buildOp:
; Line 1969
	mov	eax, DWORD PTR _type$[ebp]
	shl	eax, 24					; 00000018H
	or	eax, DWORD PTR _val$[ebp]
$LN8@buildOp:
; Line 1970
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?buildOp@RegexCompile@icu_56@@AAEHHH@Z ENDP		; icu_56::RegexCompile::buildOp
_TEXT	ENDS
EXTRN	__imp_?addElement@UVector64@icu_56@@QAEX_JAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendOp@RegexCompile@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_op$ = 8						; size = 4
?appendOp@RegexCompile@icu_56@@AAEXH@Z PROC		; icu_56::RegexCompile::appendOp, COMDAT
; _this$ = ecx
; Line 1981
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@appendOp
; Line 1983
	jmp	SHORT $LN3@appendOp
$LN2@appendOp:
; Line 1985
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	eax, DWORD PTR _op$[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?addElement@UVector64@icu_56@@QAEX_JAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1986
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 16777200				; 00fffff0H
	jle	SHORT $LN3@appendOp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@appendOp
; Line 1987
	push	66324					; 00010314H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN3@appendOp:
; Line 1989
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?appendOp@RegexCompile@icu_56@@AAEXH@Z ENDP		; icu_56::RegexCompile::appendOp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?appendOp@RegexCompile@icu_56@@AAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_type$ = 8						; size = 4
_val$ = 12						; size = 4
?appendOp@RegexCompile@icu_56@@AAEXHH@Z PROC		; icu_56::RegexCompile::appendOp, COMDAT
; _this$ = ecx
; Line 1991
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1992
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::appendOp
; Line 1993
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?appendOp@RegexCompile@icu_56@@AAEXHH@Z ENDP		; icu_56::RegexCompile::appendOp
_TEXT	ENDS
PUBLIC	??_C@_1CC@GGLNBHIH@?$AAx?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EA@OEFKAADA@?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??insertOp@RegexCompile@icu_56@@AAEXH@Z@4JA ; `icu_56::RegexCompile::insertOp'::`2'::__LINE__Var
EXTRN	__imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z:PROC
EXTRN	__imp_?elementAti@UVector32@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?insertElementAt@UVector64@icu_56@@QAEX_JHAAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_1CC@GGLNBHIH@?$AAx?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GGLNBHIH@?$AAx?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'x'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, '-', 00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@OEFKAADA@?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@OEFKAADA@?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'w'
	DB	00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, '>', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'w', 00H, 'h', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??insertOp@RegexCompile@icu_56@@AAEXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??insertOp@RegexCompile@icu_56@@AAEXH@Z@4JA DD 07d5H ; `icu_56::RegexCompile::insertOp'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?insertOp@RegexCompile@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_x$39794 = -92						; size = 4
_opValue$39788 = -80					; size = 4
_opType$39786 = -68					; size = 4
_op$39784 = -56						; size = 4
_loc$ = -44						; size = 4
_nop$ = -32						; size = 4
_code$ = -20						; size = 4
_this$ = -8						; size = 4
_where$ = 8						; size = 4
?insertOp@RegexCompile@icu_56@@AAEXH@Z PROC		; icu_56::RegexCompile::insertOp, COMDAT
; _this$ = ecx
; Line 2005
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2006
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _code$[ebp], edx
; Line 2007
	cmp	DWORD PTR _where$[ebp], 0
	jle	SHORT $LN14@insertOp
	mov	esi, esp
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _where$[ebp], eax
	jl	SHORT $LN15@insertOp
$LN14@insertOp:
	mov	eax, DWORD PTR ?__LINE__Var@?1??insertOp@RegexCompile@icu_56@@AAEXH@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EA@OEFKAADA@?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAh?$AAe?$AAr?$AAe?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@insertOp:
; Line 2009
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _nop$[ebp], eax
; Line 2010
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _where$[ebp]
	push	edx
	mov	eax, DWORD PTR _nop$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?insertElementAt@UVector64@icu_56@@QAEX_JHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2015
	mov	DWORD PTR _loc$[ebp], 0
	jmp	SHORT $LN11@insertOp
$LN10@insertOp:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN11@insertOp:
	mov	esi, esp
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _loc$[ebp], eax
	jge	$LN9@insertOp
; Line 2016
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$39784[ebp], eax
; Line 2017
	mov	eax, DWORD PTR _op$39784[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _opType$39786[ebp], eax
; Line 2018
	mov	eax, DWORD PTR _op$39784[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _opValue$39788[ebp], eax
; Line 2026
	cmp	DWORD PTR _opType$39786[ebp], 13	; 0000000dH
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 36	; 00000024H
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 6
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 28	; 0000001cH
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 29	; 0000001dH
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 15	; 0000000fH
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 18	; 00000012H
	je	SHORT $LN7@insertOp
	cmp	DWORD PTR _opType$39786[ebp], 31	; 0000001fH
	jne	SHORT $LN8@insertOp
$LN7@insertOp:
	mov	eax, DWORD PTR _opValue$39788[ebp]
	cmp	eax, DWORD PTR _where$[ebp]
	jle	SHORT $LN8@insertOp
; Line 2029
	mov	eax, DWORD PTR _opValue$39788[ebp]
	add	eax, 1
	mov	DWORD PTR _opValue$39788[ebp], eax
; Line 2030
	mov	eax, DWORD PTR _opValue$39788[ebp]
	push	eax
	mov	ecx, DWORD PTR _opType$39786[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39784[ebp], eax
; Line 2031
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	eax, DWORD PTR _op$39784[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@insertOp:
; Line 2033
	jmp	$LN10@insertOp
$LN9@insertOp:
; Line 2037
	mov	DWORD PTR _loc$[ebp], 0
	jmp	SHORT $LN6@insertOp
$LN5@insertOp:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN6@insertOp:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _loc$[ebp], eax
	jge	$LN4@insertOp
; Line 2038
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _x$39794[ebp], eax
; Line 2039
	mov	esi, esp
	mov	ecx, DWORD PTR _code$[ebp]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _x$39794[ebp], eax
	jl	SHORT $LN16@insertOp
	mov	eax, DWORD PTR ?__LINE__Var@?1??insertOp@RegexCompile@icu_56@@AAEXH@Z@4JA
	add	eax, 34					; 00000022H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@GGLNBHIH@?$AAx?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@insertOp:
; Line 2040
	mov	eax, DWORD PTR _x$39794[ebp]
	cmp	eax, DWORD PTR _where$[ebp]
	jle	SHORT $LN3@insertOp
; Line 2041
	mov	eax, DWORD PTR _x$39794[ebp]
	add	eax, 1
	mov	DWORD PTR _x$39794[ebp], eax
; Line 2042
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$39794[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@insertOp:
; Line 2044
	jmp	$LN5@insertOp
$LN4@insertOp:
; Line 2046
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	cmp	ecx, DWORD PTR _where$[ebp]
	jle	SHORT $LN2@insertOp
; Line 2047
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+392], ecx
$LN2@insertOp:
; Line 2049
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	cmp	ecx, DWORD PTR _where$[ebp]
	jle	SHORT $LN12@insertOp
; Line 2050
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+388], ecx
$LN12@insertOp:
; Line 2052
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?insertOp@RegexCompile@icu_56@@AAEXH@Z ENDP		; icu_56::RegexCompile::insertOp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?allocateData@RegexCompile@icu_56@@AAEHH@Z
_TEXT	SEGMENT
_dataIndex$ = -20					; size = 4
_this$ = -8						; size = 4
_size$ = 8						; size = 4
?allocateData@RegexCompile@icu_56@@AAEHH@Z PROC		; icu_56::RegexCompile::allocateData, COMDAT
; _this$ = ecx
; Line 2064
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2065
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@allocateDa
; Line 2066
	xor	eax, eax
	jmp	SHORT $LN5@allocateDa
$LN4@allocateDa:
; Line 2068
	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN2@allocateDa
	cmp	DWORD PTR _size$[ebp], 256		; 00000100H
	jg	SHORT $LN2@allocateDa
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+104], 0
	jge	SHORT $LN3@allocateDa
$LN2@allocateDa:
; Line 2069
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2070
	xor	eax, eax
	jmp	SHORT $LN5@allocateDa
$LN3@allocateDa:
; Line 2072
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR _dataIndex$[ebp], edx
; Line 2073
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+104]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+104], edx
; Line 2074
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+104], 16777200		; 00fffff0H
	jl	SHORT $LN1@allocateDa
; Line 2075
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN1@allocateDa:
; Line 2077
	mov	eax, DWORD PTR _dataIndex$[ebp]
$LN5@allocateDa:
; Line 2078
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocateData@RegexCompile@icu_56@@AAEHH@Z ENDP		; icu_56::RegexCompile::allocateData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?allocateStackData@RegexCompile@icu_56@@AAEHH@Z
_TEXT	SEGMENT
_dataIndex$ = -20					; size = 4
_this$ = -8						; size = 4
_size$ = 8						; size = 4
?allocateStackData@RegexCompile@icu_56@@AAEHH@Z PROC	; icu_56::RegexCompile::allocateStackData, COMDAT
; _this$ = ecx
; Line 2091
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2092
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@allocateSt
; Line 2093
	xor	eax, eax
	jmp	SHORT $LN5@allocateSt
$LN4@allocateSt:
; Line 2095
	cmp	DWORD PTR _size$[ebp], 0
	jle	SHORT $LN2@allocateSt
	cmp	DWORD PTR _size$[ebp], 256		; 00000100H
	jg	SHORT $LN2@allocateSt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+100], 0
	jge	SHORT $LN3@allocateSt
$LN2@allocateSt:
; Line 2096
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2097
	xor	eax, eax
	jmp	SHORT $LN5@allocateSt
$LN3@allocateSt:
; Line 2099
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR _dataIndex$[ebp], edx
; Line 2100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+100]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+100], edx
; Line 2101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+100], 16777200		; 00fffff0H
	jl	SHORT $LN1@allocateSt
; Line 2102
	push	66324					; 00010314H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN1@allocateSt:
; Line 2104
	mov	eax, DWORD PTR _dataIndex$[ebp]
$LN5@allocateSt:
; Line 2105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ENDP	; icu_56::RegexCompile::allocateStackData
_TEXT	ENDS
PUBLIC	??_C@_1KI@JANLMILI@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf@ ; `string'
PUBLIC	??_C@_1BG@HFPLLGFP@?$AAt?$AAh?$AAe?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??blockTopLoc@RegexCompile@icu_56@@AAEHC@Z@4JA ; `icu_56::RegexCompile::blockTopLoc'::`2'::__LINE__Var
;	COMDAT ??_C@_1KI@JANLMILI@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf@
CONST	SEGMENT
??_C@_1KI@JANLMILI@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, '(', 00H, '('
	DB	00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H, '2', 00H
	DB	'_', 00H, 't', 00H, ')', 00H, 'f', 00H, 'R', 00H, 'X', 00H, 'P'
	DB	00H, 'a', 00H, 't', 00H, '-', 00H, '>', 00H, 'f', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 'P', 00H, 'a', 00H, 't', 00H, '-', 00H, '>', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'A'
	DB	00H, 't', 00H, 'i', 00H, '(', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	'L', 00H, 'o', 00H, 'c', 00H, ')', 00H, ')', 00H, ')', 00H, ' '
	DB	00H, '>', 00H, '>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'X'
	DB	00H, '_', 00H, 'N', 00H, 'O', 00H, 'P', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@HFPLLGFP@?$AAt?$AAh?$AAe?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@HFPLLGFP@?$AAt?$AAh?$AAe?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 't'
	DB	00H, 'h', 00H, 'e', 00H, 'L', 00H, 'o', 00H, 'c', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??blockTopLoc@RegexCompile@icu_56@@AAEHC@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??blockTopLoc@RegexCompile@icu_56@@AAEHC@Z@4JA DD 084eH ; `icu_56::RegexCompile::blockTopLoc'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z
_TEXT	SEGMENT
_nop$39837 = -44					; size = 4
_opAtTheLoc$39832 = -32					; size = 4
_theLoc$ = -20						; size = 4
_this$ = -8						; size = 4
_reserveLoc$ = 8					; size = 1
?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z PROC		; icu_56::RegexCompile::blockTopLoc, COMDAT
; _this$ = ecx
; Line 2126
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2128
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
; Line 2130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+392]
	jne	$LN4@blockTopLo
; Line 2133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	mov	DWORD PTR _theLoc$[ebp], ecx
; Line 2134
	cmp	DWORD PTR _theLoc$[ebp], 0
	jg	SHORT $LN7@blockTopLo
	mov	eax, DWORD PTR ?__LINE__Var@?1??blockTopLoc@RegexCompile@icu_56@@AAEHC@Z@4JA
	add	eax, 8
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@HFPLLGFP@?$AAt?$AAh?$AAe?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@blockTopLo:
; Line 2135
	mov	esi, esp
	mov	eax, DWORD PTR _theLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	shr	eax, 24					; 00000018H
	cmp	eax, 7
	je	SHORT $LN8@blockTopLo
	mov	eax, DWORD PTR ?__LINE__Var@?1??blockTopLoc@RegexCompile@icu_56@@AAEHC@Z@4JA
	add	eax, 9
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1KI@JANLMILI@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@blockTopLo:
; Line 2137
	jmp	$LN3@blockTopLo
$LN4@blockTopLo:
; Line 2141
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _theLoc$[ebp], eax
; Line 2142
	mov	esi, esp
	mov	eax, DWORD PTR _theLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _opAtTheLoc$39832[ebp], eax
; Line 2143
	mov	eax, DWORD PTR _opAtTheLoc$39832[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 5
	jne	SHORT $LN2@blockTopLo
; Line 2146
	mov	eax, DWORD PTR _theLoc$[ebp]
	sub	eax, 1
	mov	DWORD PTR _theLoc$[ebp], eax
$LN2@blockTopLo:
; Line 2148
	movsx	eax, BYTE PTR _reserveLoc$[ebp]
	test	eax, eax
	je	SHORT $LN3@blockTopLo
; Line 2149
	push	0
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _nop$39837[ebp], eax
; Line 2150
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _theLoc$[ebp]
	push	edx
	mov	eax, DWORD PTR _nop$39837[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?insertElementAt@UVector64@icu_56@@QAEX_JHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@blockTopLo:
; Line 2153
	mov	eax, DWORD PTR _theLoc$[ebp]
; Line 2154
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ENDP		; icu_56::RegexCompile::blockTopLoc
_TEXT	ENDS
PUBLIC	??_C@_1BO@GDLEIHOB@?$AAm?$AAi?$AAn?$AAM?$AAL?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAM?$AAL?$AA?$AA@ ; `string'
PUBLIC	?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::maxMatchLength
PUBLIC	??_C@_1FI@MEECJGJF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@ ; `string'
PUBLIC	??_C@_1FK@KMCNKPEG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAa?$AAv?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ ; `string'
PUBLIC	??_C@_1FI@ONIKCCGH@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@ ; `string'
PUBLIC	??_C@_1FA@KNIOKABG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAo?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX@ ; `string'
PUBLIC	??_C@_1GG@PDIKNFFC@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAc?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	??_C@_1BO@JLBPKALN@?$AAf?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@DMEGFFLM@?$AA?$CI?$AA?$CI?$AAp?$AAa?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@CAANAKBF@?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC@ ; `string'
PUBLIC	?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA ; `icu_56::RegexCompile::handleCloseParen'::`2'::__LINE__Var
;	COMDAT ??_C@_1BO@GDLEIHOB@?$AAm?$AAi?$AAn?$AAM?$AAL?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAM?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@GDLEIHOB@?$AAm?$AAi?$AAn?$AAM?$AAL?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAM?$AAL?$AA?$AA@ DB 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'L', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x', 00H, 'M', 00H, 'L'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@MEECJGJF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
CONST	SEGMENT
??_C@_1FI@MEECJGJF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'O', 00H, 'p', 00H, ')', 00H
	DB	' ', 00H, '>', 00H, '>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H
	DB	'X', 00H, '_', 00H, 'L', 00H, 'B', 00H, '_', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'R', 00H, 'T', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@KMCNKPEG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAa?$AAv?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
CONST	SEGMENT
??_C@_1FK@KMCNKPEG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAa?$AAv?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, 'O', 00H, 'p', 00H, ')', 00H, ' ', 00H
	DB	'>', 00H, '>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'X', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'T', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'A', 00H, 'V', 00H, 'E', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@ONIKCCGH@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
CONST	SEGMENT
??_C@_1FI@ONIKCCGH@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'O', 00H, 'p', 00H, ')', 00H
	DB	' ', 00H, '>', 00H, '>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H
	DB	'X', 00H, '_', 00H, 'L', 00H, 'A', 00H, '_', 00H, 'S', 00H, 'T'
	DB	00H, 'A', 00H, 'R', 00H, 'T', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@KNIOKABG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAo?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX@
CONST	SEGMENT
??_C@_1FA@KNIOKABG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAo?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 't'
	DB	00H, 'o', 00H, 'O', 00H, 'p', 00H, ')', 00H, ' ', 00H, '>', 00H
	DB	'>', 00H, ' ', 00H, '2', 00H, '4', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'X', 00H, '_', 00H
	DB	'S', 00H, 'T', 00H, 'O', 00H, '_', 00H, 'S', 00H, 'P', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@PDIKNFFC@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAc?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1GG@PDIKNFFC@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAc?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 'c', 00H, 'a'
	DB	00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 'O', 00H
	DB	'p', 00H, ')', 00H, ' ', 00H, '>', 00H, '>', 00H, ' ', 00H, '2'
	DB	00H, '4', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'U', 00H, 'R', 00H, 'X', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'A'
	DB	00H, 'R', 00H, 'T', 00H, '_', 00H, 'C', 00H, 'A', 00H, 'P', 00H
	DB	'T', 00H, 'U', 00H, 'R', 00H, 'E', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JLBPKALN@?$AAf?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@JLBPKALN@?$AAf?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'F', 00H, 'l', 00H
	DB	'a', 00H, 'g', 00H, 's', 00H, ' ', 00H, '<', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@DMEGFFLM@?$AA?$CI?$AA?$CI?$AAp?$AAa?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@DMEGFFLM@?$AA?$CI?$AA?$CI?$AAp?$AAa?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB '('
	DB	00H, '(', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'O', 00H, 'p', 00H
	DB	')', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'f'
	DB	00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@CAANAKBF@?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC@
CONST	SEGMENT
??_C@_1GG@CAANAKBF@?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC@ DB 'p'
	DB	00H, 'a', 00H, 't', 00H, 'I', 00H, 'd', 00H, 'x', 00H, '>', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 'I', 00H, 'd', 00H, 'x', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'f', 00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a'
	DB	00H, 't', 00H, '-', 00H, '>', 00H, 'f', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 'P'
	DB	00H, 'a', 00H, 't', 00H, '-', 00H, '>', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA DD 087aH ; `icu_56::RegexCompile::handleCloseParen'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?handleCloseParen@RegexCompile@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv155 = -484						; size = 4
_op$39922 = -284					; size = 4
_maxML$39917 = -272					; size = 4
_minML$39916 = -260					; size = 4
_patEnd$39915 = -248					; size = 4
_dataLoc$39914 = -236					; size = 4
_startOp$39910 = -224					; size = 4
_maxML$39903 = -212					; size = 4
_minML$39902 = -200					; size = 4
_patEnd$39901 = -188					; size = 4
_dataLoc$39900 = -176					; size = 4
_startOp$39895 = -164					; size = 4
_dest$39893 = -152					; size = 4
_saveOp$39888 = -140					; size = 4
_dataLoc$39887 = -128					; size = 4
_startOp$39883 = -116					; size = 4
_dataLoc$39881 = -104					; size = 4
_startOp$39876 = -92					; size = 4
_stoLoc$39874 = -80					; size = 4
_stoOp$39869 = -68					; size = 4
_frameVarLocation$39867 = -56				; size = 4
_captureOp$39862 = -44					; size = 4
_patOp$ = -32						; size = 4
_patIdx$ = -20						; size = 4
_this$ = -8						; size = 4
?handleCloseParen@RegexCompile@icu_56@@AAEXXZ PROC	; icu_56::RegexCompile::handleCloseParen, COMDAT
; _this$ = ecx
; Line 2170
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2173
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jg	SHORT $LN18@handleClos
; Line 2174
	push	66310					; 00010306H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2175
	jmp	$LN19@handleClos
$LN18@handleClos:
; Line 2179
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fixLiterals@RegexCompile@icu_56@@AAEXC@Z ; icu_56::RegexCompile::fixLiterals
$LN17@handleClos:
; Line 2186
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UVector32@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _patIdx$[ebp], eax
; Line 2187
	cmp	DWORD PTR _patIdx$[ebp], 0
	jge	SHORT $LN15@handleClos
; Line 2189
	jmp	$LN16@handleClos
$LN15@handleClos:
; Line 2191
	cmp	DWORD PTR _patIdx$[ebp], 0
	jle	SHORT $LN21@handleClos
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _patIdx$[ebp], eax
	jle	SHORT $LN22@handleClos
$LN21@handleClos:
	mov	edx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	edx, 21					; 00000015H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GG@CAANAKBF@?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AAa?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@handleClos:
; Line 2192
	mov	esi, esp
	mov	eax, DWORD PTR _patIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _patOp$[ebp], eax
; Line 2193
	mov	eax, DWORD PTR _patOp$[ebp]
	and	eax, 16777215				; 00ffffffH
	je	SHORT $LN23@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 23					; 00000017H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DE@DMEGFFLM@?$AA?$CI?$AA?$CI?$AAp?$AAa?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@handleClos:
; Line 2194
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, DWORD PTR _patOp$[ebp]
	mov	DWORD PTR _patOp$[ebp], eax
; Line 2195
	mov	esi, esp
	mov	eax, DWORD PTR _patIdx$[ebp]
	push	eax
	mov	eax, DWORD PTR _patOp$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2196
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _patIdx$[ebp]
	mov	DWORD PTR [eax+388], ecx
; Line 2197
	jmp	$LN17@handleClos
$LN16@handleClos:
; Line 2202
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UVector32@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+280], eax
; Line 2203
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+280], 0
	jl	SHORT $LN24@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 33					; 00000021H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@JLBPKALN@?$AAf?$AAM?$AAo?$AAd?$AAe?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@handleClos:
; Line 2208
	mov	eax, DWORD PTR _patIdx$[ebp]
	mov	DWORD PTR tv155[ebp], eax
	mov	ecx, DWORD PTR tv155[ebp]
	add	ecx, 8
	mov	DWORD PTR tv155[ebp], ecx
	cmp	DWORD PTR tv155[ebp], 7
	ja	$LN1@handleClos
	mov	edx, DWORD PTR tv155[ebp]
	jmp	DWORD PTR $LN35@handleClos[edx*4]
$LN12@handleClos:
; Line 2213
	jmp	$LN13@handleClos
$LN11@handleClos:
; Line 2220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _captureOp$39862[ebp], eax
; Line 2221
	mov	eax, DWORD PTR _captureOp$39862[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 8
	je	SHORT $LN25@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 51					; 00000033H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GG@PDIKNFFC@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAc?$AAa?$AAp?$AAt?$AAu?$AAr?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@handleClos:
; Line 2223
	mov	eax, DWORD PTR _captureOp$39862[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _frameVarLocation$39867[ebp], eax
; Line 2224
	mov	eax, DWORD PTR _frameVarLocation$39867[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2226
	jmp	$LN13@handleClos
$LN10@handleClos:
; Line 2232
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stoOp$39869[ebp], eax
; Line 2233
	mov	eax, DWORD PTR _stoOp$39869[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 32					; 00000020H
	je	SHORT $LN26@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 63					; 0000003fH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FA@KNIOKABG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAo?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR?$AAX@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@handleClos:
; Line 2234
	mov	eax, DWORD PTR _stoOp$39869[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _stoLoc$39874[ebp], eax
; Line 2235
	mov	eax, DWORD PTR _stoLoc$39874[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2237
	jmp	$LN13@handleClos
$LN9@handleClos:
; Line 2241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 5
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startOp$39876[ebp], eax
; Line 2242
	mov	eax, DWORD PTR _startOp$39876[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 37					; 00000025H
	je	SHORT $LN27@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 72					; 00000048H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FI@ONIKCCGH@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN27@handleClos:
; Line 2243
	mov	eax, DWORD PTR _startOp$39876[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _dataLoc$39881[ebp], eax
; Line 2244
	mov	eax, DWORD PTR _dataLoc$39881[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2246
	jmp	$LN13@handleClos
$LN8@handleClos:
; Line 2251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startOp$39883[ebp], eax
; Line 2252
	mov	eax, DWORD PTR _startOp$39883[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 37					; 00000025H
	je	SHORT $LN28@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 82					; 00000052H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FI@ONIKCCGH@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@handleClos:
; Line 2253
	mov	eax, DWORD PTR _startOp$39883[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _dataLoc$39887[ebp], eax
; Line 2254
	mov	eax, DWORD PTR _dataLoc$39887[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2255
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2256
	mov	eax, DWORD PTR _dataLoc$39887[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2260
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _saveOp$39888[ebp], eax
; Line 2261
	mov	eax, DWORD PTR _saveOp$39888[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 6
	je	SHORT $LN29@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 91					; 0000005bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FK@KMCNKPEG@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAa?$AAv?$AAe?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN29@handleClos:
; Line 2262
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _dest$39893[ebp], eax
; Line 2263
	mov	eax, DWORD PTR _dest$39893[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _saveOp$39888[ebp], eax
; Line 2264
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	eax, DWORD PTR _saveOp$39888[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2266
	jmp	$LN13@handleClos
$LN7@handleClos:
; Line 2273
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 4
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startOp$39895[ebp], eax
; Line 2274
	mov	eax, DWORD PTR _startOp$39895[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN30@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 104				; 00000068H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FI@MEECJGJF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@handleClos:
; Line 2275
	mov	eax, DWORD PTR _startOp$39895[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _dataLoc$39900[ebp], eax
; Line 2276
	mov	eax, DWORD PTR _dataLoc$39900[ebp]
	push	eax
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2277
	mov	eax, DWORD PTR _dataLoc$39900[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _patEnd$39901[ebp], eax
; Line 2283
	mov	eax, DWORD PTR _patEnd$39901[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::minMatchLength
	mov	DWORD PTR _minML$39902[ebp], eax
; Line 2284
	mov	eax, DWORD PTR _patEnd$39901[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::maxMatchLength
	mov	DWORD PTR _maxML$39903[ebp], eax
; Line 2285
	mov	eax, DWORD PTR _maxML$39903[ebp]
	shr	eax, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN6@handleClos
; Line 2286
	push	66316					; 0001030cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2287
	jmp	$LN13@handleClos
$LN6@handleClos:
; Line 2289
	cmp	DWORD PTR _maxML$39903[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN5@handleClos
; Line 2290
	push	66316					; 0001030cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2291
	jmp	$LN13@handleClos
$LN5@handleClos:
; Line 2293
	mov	eax, DWORD PTR _minML$39902[ebp]
	cmp	eax, DWORD PTR _maxML$39903[ebp]
	jle	SHORT $LN31@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 123				; 0000007bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@GDLEIHOB@?$AAm?$AAi?$AAn?$AAM?$AAL?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAM?$AAL?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@handleClos:
; Line 2297
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 2
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _minML$39902[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _maxML$39903[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2301
	jmp	$LN13@handleClos
$LN4@handleClos:
; Line 2310
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 5
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startOp$39910[ebp], eax
; Line 2311
	mov	eax, DWORD PTR _startOp$39910[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 44					; 0000002cH
	je	SHORT $LN32@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 141				; 0000008dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FI@MEECJGJF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAa?$AAr?$AAt?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@handleClos:
; Line 2312
	mov	eax, DWORD PTR _startOp$39910[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _dataLoc$39914[ebp], eax
; Line 2313
	mov	eax, DWORD PTR _dataLoc$39914[ebp]
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2318
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _patEnd$39915[ebp], eax
; Line 2319
	mov	eax, DWORD PTR _patEnd$39915[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::minMatchLength
	mov	DWORD PTR _minML$39916[ebp], eax
; Line 2320
	mov	eax, DWORD PTR _patEnd$39915[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::maxMatchLength
	mov	DWORD PTR _maxML$39917[ebp], eax
; Line 2321
	mov	eax, DWORD PTR _maxML$39917[ebp]
	shr	eax, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN3@handleClos
; Line 2322
	push	66316					; 0001030cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2323
	jmp	$LN13@handleClos
$LN3@handleClos:
; Line 2325
	cmp	DWORD PTR _maxML$39917[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN2@handleClos
; Line 2326
	push	66316					; 0001030cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 2327
	jmp	$LN13@handleClos
$LN2@handleClos:
; Line 2329
	mov	eax, DWORD PTR _minML$39916[ebp]
	cmp	eax, DWORD PTR _maxML$39917[ebp]
	jle	SHORT $LN33@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 159				; 0000009fH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@GDLEIHOB@?$AAm?$AAi?$AAn?$AAM?$AAL?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAM?$AAL?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@handleClos:
; Line 2333
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 3
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _minML$39916[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2334
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 2
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _maxML$39917[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$39922[ebp], eax
; Line 2339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _op$39922[ebp]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2341
	jmp	SHORT $LN13@handleClos
$LN1@handleClos:
; Line 2346
	xor	eax, eax
	jne	SHORT $LN13@handleClos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleCloseParen@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 176				; 000000b0H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@handleClos:
; Line 2352
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+392], eax
$LN19@handleClos:
; Line 2353
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN35@handleClos:
	DD	$LN4@handleClos
	DD	$LN7@handleClos
	DD	$LN12@handleClos
	DD	$LN8@handleClos
	DD	$LN9@handleClos
	DD	$LN10@handleClos
	DD	$LN11@handleClos
	DD	$LN12@handleClos
?handleCloseParen@RegexCompile@icu_56@@AAEXXZ ENDP	; icu_56::RegexCompile::handleCloseParen
_TEXT	ENDS
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?charAt@UnicodeSet@icu_56@@QBEHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z
_TEXT	SEGMENT
tv134 = -280						; size = 4
tv86 = -280						; size = 4
tv72 = -280						; size = 4
$T48147 = -272						; size = 4
$T48148 = -260						; size = 4
$T48151 = -248						; size = 4
$T48152 = -236						; size = 4
_setNumber$39942 = -32					; size = 4
_setSize$ = -20						; size = 4
_this$ = -8						; size = 4
_theSet$ = 8						; size = 4
?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z PROC ; icu_56::RegexCompile::compileSet, COMDAT
; _this$ = ecx
; Line 2364
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2365
	cmp	DWORD PTR _theSet$[ebp], 0
	jne	SHORT $LN6@compileSet
; Line 2366
	jmp	$LN7@compileSet
$LN6@compileSet:
; Line 2372
	mov	eax, DWORD PTR _theSet$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _theSet$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2373
	mov	eax, DWORD PTR _theSet$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _theSet$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _setSize$[ebp], eax
; Line 2375
	mov	eax, DWORD PTR _setSize$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	cmp	DWORD PTR tv72[ebp], 0
	je	SHORT $LN3@compileSet
	cmp	DWORD PTR tv72[ebp], 1
	je	SHORT $LN2@compileSet
	jmp	$LN1@compileSet
$LN3@compileSet:
; Line 2379
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2380
	mov	eax, DWORD PTR _theSet$[ebp]
	mov	DWORD PTR $T48148[ebp], eax
	mov	ecx, DWORD PTR $T48148[ebp]
	mov	DWORD PTR $T48147[ebp], ecx
	cmp	DWORD PTR $T48147[ebp], 0
	je	SHORT $LN9@compileSet
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48147[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48147[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN10@compileSet
$LN9@compileSet:
	mov	DWORD PTR tv86[ebp], 0
$LN10@compileSet:
; Line 2382
	jmp	$LN7@compileSet
$LN2@compileSet:
; Line 2389
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _theSet$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeSet@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?literalChar@RegexCompile@icu_56@@AAEXH@Z ; icu_56::RegexCompile::literalChar
; Line 2390
	mov	eax, DWORD PTR _theSet$[ebp]
	mov	DWORD PTR $T48152[ebp], eax
	mov	ecx, DWORD PTR $T48152[ebp]
	mov	DWORD PTR $T48151[ebp], ecx
	cmp	DWORD PTR $T48151[ebp], 0
	je	SHORT $LN11@compileSet
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48151[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48151[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN12@compileSet
$LN11@compileSet:
	mov	DWORD PTR tv134[ebp], 0
$LN12@compileSet:
; Line 2392
	jmp	SHORT $LN7@compileSet
$LN1@compileSet:
; Line 2398
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _setNumber$39942[ebp], eax
; Line 2399
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _theSet$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2400
	mov	eax, DWORD PTR _setNumber$39942[ebp]
	push	eax
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
$LN7@compileSet:
; Line 2403
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compileSet@RegexCompile@icu_56@@AAEXPAVUnicodeSet@2@@Z ENDP ; icu_56::RegexCompile::compileSet
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compileInterval@RegexCompile@icu_56@@AAEXHH@Z
_TEXT	SEGMENT
_loopEnd$ = -68						; size = 4
_op$ = -56						; size = 4
_counterLoc$ = -44					; size = 4
_dataSize$ = -32					; size = 4
_topOfBlock$ = -20					; size = 4
_this$ = -8						; size = 4
_InitOp$ = 8						; size = 4
_LoopOp$ = 12						; size = 4
?compileInterval@RegexCompile@icu_56@@AAEXHH@Z PROC	; icu_56::RegexCompile::compileInterval, COMDAT
; _this$ = ecx
; Line 2426
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2429
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topOfBlock$[ebp], eax
; Line 2430
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 2431
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 2432
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 2439
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+400], 0
	setl	cl
	add	ecx, 1
	mov	DWORD PTR _dataSize$[ebp], ecx
; Line 2440
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocateStackData@RegexCompile@icu_56@@AAEHH@Z ; icu_56::RegexCompile::allocateStackData
	mov	DWORD PTR _counterLoc$[ebp], eax
; Line 2442
	mov	eax, DWORD PTR _counterLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _InitOp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$[ebp], eax
; Line 2443
	mov	esi, esp
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2449
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loopEnd$[ebp], eax
; Line 2450
	mov	eax, DWORD PTR _loopEnd$[ebp]
	push	eax
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$[ebp], eax
; Line 2451
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2454
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+396]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2455
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	add	eax, 3
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+400]
	cdq
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2459
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LoopOp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXHH@Z	; icu_56::RegexCompile::appendOp
; Line 2462
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	and	ecx, -16777216				; ff000000H
	jne	SHORT $LN2@compileInt
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], 0
	jle	SHORT $LN3@compileInt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+400]
	and	ecx, -16777216				; ff000000H
	je	SHORT $LN3@compileInt
$LN2@compileInt:
; Line 2463
	push	66311					; 00010307H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN3@compileInt:
; Line 2466
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+396]
	cmp	edx, DWORD PTR [ecx+400]
	jle	SHORT $LN4@compileInt
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], -1
	je	SHORT $LN4@compileInt
; Line 2467
	push	66313					; 00010309H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN4@compileInt:
; Line 2469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?compileInterval@RegexCompile@icu_56@@AAEXHH@Z ENDP	; icu_56::RegexCompile::compileInterval
_TEXT	ENDS
EXTRN	__imp_?setSize@UVector64@icu_56@@QAEXH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compileInlineInterval@RegexCompile@icu_56@@AAECXZ
_TEXT	SEGMENT
_i$ = -68						; size = 4
_saveOp$ = -56						; size = 4
_endOfSequenceLoc$ = -44				; size = 4
_op$ = -32						; size = 4
_topOfBlock$ = -20					; size = 4
_this$ = -8						; size = 4
?compileInlineInterval@RegexCompile@icu_56@@AAECXZ PROC	; icu_56::RegexCompile::compileInlineInterval, COMDAT
; _this$ = ecx
; Line 2473
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2474
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], 10			; 0000000aH
	jg	SHORT $LN10@compileInl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+400]
	cmp	edx, DWORD PTR [ecx+396]
	jge	SHORT $LN11@compileInl
$LN10@compileInl:
; Line 2477
	xor	al, al
	jmp	$LN12@compileInl
$LN11@compileInl:
; Line 2480
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?blockTopLoc@RegexCompile@icu_56@@AAEHC@Z ; icu_56::RegexCompile::blockTopLoc
	mov	DWORD PTR _topOfBlock$[ebp], eax
; Line 2481
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], 0
	jne	SHORT $LN9@compileInl
; Line 2485
	mov	esi, esp
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setSize@UVector64@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	cmp	ecx, DWORD PTR _topOfBlock$[ebp]
	jl	SHORT $LN8@compileInl
; Line 2487
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], -1
$LN8@compileInl:
; Line 2489
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	cmp	ecx, DWORD PTR _topOfBlock$[ebp]
	jl	SHORT $LN7@compileInl
; Line 2490
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+392], -1
$LN7@compileInl:
; Line 2492
	mov	al, 1
	jmp	$LN12@compileInl
$LN9@compileInl:
; Line 2495
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	cmp	DWORD PTR _topOfBlock$[ebp], eax
	je	SHORT $LN6@compileInl
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+400], 1
	je	SHORT $LN6@compileInl
; Line 2500
	xor	al, al
	jmp	$LN12@compileInl
$LN6@compileInl:
; Line 2505
	mov	esi, esp
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 2511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+400]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+400]
	sub	eax, DWORD PTR [ecx+396]
	add	edx, eax
	mov	DWORD PTR _endOfSequenceLoc$[ebp], edx
; Line 2512
	mov	eax, DWORD PTR _endOfSequenceLoc$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _saveOp$[ebp], eax
; Line 2513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+396], 0
	jne	SHORT $LN5@compileInl
; Line 2514
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insertOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::insertOp
; Line 2515
	mov	esi, esp
	mov	eax, DWORD PTR _topOfBlock$[ebp]
	push	eax
	mov	eax, DWORD PTR _saveOp$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@compileInl:
; Line 2524
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@compileInl
$LN3@compileInl:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@compileInl:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+400]
	jge	SHORT $LN2@compileInl
; Line 2525
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+396]
	jl	SHORT $LN1@compileInl
; Line 2526
	mov	eax, DWORD PTR _saveOp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::appendOp
$LN1@compileInl:
; Line 2528
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendOp@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::appendOp
; Line 2529
	jmp	SHORT $LN3@compileInl
$LN2@compileInl:
; Line 2530
	mov	al, 1
$LN12@compileInl:
; Line 2531
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compileInlineInterval@RegexCompile@icu_56@@AAECXZ ENDP	; icu_56::RegexCompile::compileInlineInterval
_TEXT	ENDS
PUBLIC	?findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@2@@Z ; icu_56::RegexCompile::findCaseInsensitiveStarters
EXTRN	__imp_?closeOver@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	_u_foldCase_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@2@@Z
_TEXT	SEGMENT
_j$39998 = -68						; size = 4
_cpToAdd$39997 = -56					; size = 4
_numCharsToAdd$39996 = -44				; size = 4
_dataIndex$39995 = -32					; size = 4
_i$39990 = -20						; size = 4
_caseFoldedC$39989 = -8					; size = 4
_c$ = 8							; size = 4
_starterChars$ = 12					; size = 4
?findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@2@@Z PROC ; icu_56::RegexCompile::findCaseInsensitiveStarters, COMDAT
; Line 2560
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2604
	push	34					; 00000022H
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_hasBinaryProperty_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	$LN10@findCaseIn
; Line 2605
	push	0
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_u_foldCase_56
	add	esp, 8
	mov	DWORD PTR _caseFoldedC$39989[ebp], eax
; Line 2606
	mov	esi, esp
	mov	eax, DWORD PTR _caseFoldedC$39989[ebp]
	push	eax
	mov	ecx, DWORD PTR _caseFoldedC$39989[ebp]
	push	ecx
	mov	ecx, DWORD PTR _starterChars$[ebp]
	call	DWORD PTR __imp_?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2609
	mov	DWORD PTR _i$39990[ebp], 0
	jmp	SHORT $LN9@findCaseIn
$LN8@findCaseIn:
	mov	eax, DWORD PTR _i$39990[ebp]
	add	eax, 1
	mov	DWORD PTR _i$39990[ebp], eax
$LN9@findCaseIn:
	mov	eax, DWORD PTR _i$39990[ebp]
	mov	ecx, DWORD PTR ?RECaseFixCodePoints@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBHB[eax*4]
	cmp	ecx, DWORD PTR _c$[ebp]
	jge	SHORT $LN7@findCaseIn
; Line 2611
	jmp	SHORT $LN8@findCaseIn
$LN7@findCaseIn:
; Line 2613
	mov	eax, DWORD PTR _i$39990[ebp]
	mov	ecx, DWORD PTR ?RECaseFixCodePoints@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBHB[eax*4]
	cmp	ecx, DWORD PTR _c$[ebp]
	jne	$LN6@findCaseIn
; Line 2614
	mov	eax, DWORD PTR _i$39990[ebp]
	movsx	ecx, WORD PTR ?RECaseFixStringOffsets@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBFB[eax*2]
	mov	DWORD PTR _dataIndex$39995[ebp], ecx
; Line 2615
	mov	eax, DWORD PTR _i$39990[ebp]
	movsx	ecx, WORD PTR ?RECaseFixCounts@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QBFB[eax*2]
	mov	DWORD PTR _numCharsToAdd$39996[ebp], ecx
; Line 2616
	mov	DWORD PTR _cpToAdd$39997[ebp], 0
; Line 2617
	mov	DWORD PTR _j$39998[ebp], 0
	jmp	SHORT $LN5@findCaseIn
$LN4@findCaseIn:
	mov	eax, DWORD PTR _j$39998[ebp]
	add	eax, 1
	mov	DWORD PTR _j$39998[ebp], eax
$LN5@findCaseIn:
	mov	eax, DWORD PTR _j$39998[ebp]
	cmp	eax, DWORD PTR _numCharsToAdd$39996[ebp]
	jge	SHORT $LN6@findCaseIn
; Line 2618
	mov	eax, DWORD PTR _dataIndex$39995[ebp]
	movzx	ecx, WORD PTR ?RECaseFixData@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QB_WB[eax*2]
	mov	DWORD PTR _cpToAdd$39997[ebp], ecx
	mov	edx, DWORD PTR _dataIndex$39995[ebp]
	add	edx, 1
	mov	DWORD PTR _dataIndex$39995[ebp], edx
	mov	eax, DWORD PTR _cpToAdd$39997[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@findCaseIn
	mov	eax, DWORD PTR _cpToAdd$39997[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _dataIndex$39995[ebp]
	movzx	edx, WORD PTR ?RECaseFixData@?1??findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@3@@Z@4QB_WB[ecx*2]
	lea	eax, DWORD PTR [eax+edx-56613888]
	mov	DWORD PTR _cpToAdd$39997[ebp], eax
	mov	ecx, DWORD PTR _dataIndex$39995[ebp]
	add	ecx, 1
	mov	DWORD PTR _dataIndex$39995[ebp], ecx
$LN2@findCaseIn:
; Line 2619
	mov	esi, esp
	mov	eax, DWORD PTR _cpToAdd$39997[ebp]
	push	eax
	mov	ecx, DWORD PTR _starterChars$[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2620
	jmp	SHORT $LN4@findCaseIn
$LN6@findCaseIn:
; Line 2623
	mov	esi, esp
	push	2
	mov	ecx, DWORD PTR _starterChars$[ebp]
	call	DWORD PTR __imp_?closeOver@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2624
	mov	eax, DWORD PTR _starterChars$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _starterChars$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN11@findCaseIn
$LN10@findCaseIn:
; Line 2627
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _starterChars$[ebp]
	call	DWORD PTR __imp_?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@findCaseIn:
; Line 2629
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@2@@Z ENDP ; icu_56::RegexCompile::findCaseInsensitiveStarters
_TEXT	ENDS
PUBLIC	??_C@_1EI@LKANFICD@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AAU?$AAC?$AAh?$AAa?$AAr?$AA3?$AA2@ ; `string'
PUBLIC	??_C@_1EG@EOCCMAGB@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AAs?$AA?9?$AA?$DO?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAs?$AA?$CI@ ; `string'
PUBLIC	??_C@_1BG@ODEFOFGK@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@OKNJEDPF@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CC@NEHIPLGE@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GE@CEDGAHCF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5@ ; `string'
PUBLIC	??_C@_1CC@JLLJKDPP@?$AAj?$AAm?$AAp?$AAD?$AAe?$AAs?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@PHFCOPKF@?$AAs?$AAn?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?$DM?$AAU?$AAR?$AAX?$AA_?$AAL?$AAA?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EK@PFKDPHNJ@?$AAs?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAS?$AAe?$AAt?$AAs?$AA?9?$AA?$DO?$AAs?$AAi@ ; `string'
PUBLIC	??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@ ; `string'
PUBLIC	?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA ; `icu_56::RegexCompile::matchStartType'::`2'::__LINE__Var
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@HH@Z:PROC
EXTRN	__imp_?setSize@UVector32@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_1EI@LKANFICD@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AAU?$AAC?$AAh?$AAa?$AAr?$AA3?$AA2@
CONST	SEGMENT
??_C@_1EI@LKANFICD@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AAU?$AAC?$AAh?$AAa?$AAr?$AA3?$AA2@ DB 'f'
	DB	00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'f', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '(', 00H, 'U', 00H, 'C'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '3', 00H, '2', 00H, ')', 00H
	DB	'-', 00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EOCCMAGB@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AAs?$AA?9?$AA?$DO?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAs?$AA?$CI@
CONST	SEGMENT
??_C@_1EG@EOCCMAGB@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AAs?$AA?9?$AA?$DO?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAs?$AA?$CI@ DB 'f'
	DB	00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'f', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'i', 00H, 'n', 00H, 's', 00H, '(', 00H, 'c', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@ODEFOFGK@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@ODEFOFGK@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'c', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@OKNJEDPF@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@OKNJEDPF@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'o', 00H, 'p', 00H, 'E', 00H, 'n', 00H, 'd', 00H
	DB	'L', 00H, 'o', 00H, 'c', 00H, ' ', 00H, '<', 00H, '=', 00H, ' '
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, '+', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@NEHIPLGE@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@NEHIPLGE@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'L', 00H
	DB	'e', 00H, 'n', 00H, 'O', 00H, 'p', 00H, ' ', 00H, '>', 00H, '='
	DB	00H, ' ', 00H, '2', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@CEDGAHCF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5@
CONST	SEGMENT
??_C@_1GE@CEDGAHCF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5@ DB '('
	DB	00H, '(', 00H, 'u', 00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H
	DB	'2', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'L', 00H, 'e', 00H
	DB	'n', 00H, 'O', 00H, 'p', 00H, ')', 00H, ' ', 00H, '>', 00H, '>'
	DB	00H, ' ', 00H, '2', 00H, '4', 00H, ')', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'X', 00H, '_', 00H, 'S'
	DB	00H, 'T', 00H, 'R', 00H, 'I', 00H, 'N', 00H, 'G', 00H, '_', 00H
	DB	'L', 00H, 'E', 00H, 'N', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@JLLJKDPP@?$AAj?$AAm?$AAp?$AAD?$AAe?$AAs?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@JLLJKDPP@?$AAj?$AAm?$AAp?$AAD?$AAe?$AAs?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@ DB 'j'
	DB	00H, 'm', 00H, 'p', 00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd'
	DB	00H, '+', 00H, '1', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@PHFCOPKF@?$AAs?$AAn?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?$DM?$AAU?$AAR?$AAX?$AA_?$AAL?$AAA?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@PHFCOPKF@?$AAs?$AAn?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?$DM?$AAU?$AAR?$AAX?$AA_?$AAL?$AAA?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AA?$AA@ DB 's'
	DB	00H, 'n', 00H, '>', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, 's', 00H, 'n', 00H, '<', 00H, 'U', 00H, 'R', 00H, 'X'
	DB	00H, '_', 00H, 'L', 00H, 'A', 00H, 'S', 00H, 'T', 00H, '_', 00H
	DB	'S', 00H, 'E', 00H, 'T', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@PFKDPHNJ@?$AAs?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAS?$AAe?$AAt?$AAs?$AA?9?$AA?$DO?$AAs?$AAi@
CONST	SEGMENT
??_C@_1EK@PFKDPHNJ@?$AAs?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAS?$AAe?$AAt?$AAs?$AA?9?$AA?$DO?$AAs?$AAi@ DB 's'
	DB	00H, 'n', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 's', 00H, 'n', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, 'f', 00H, 'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, '-', 00H, '>', 00H, 'f', 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, 's', 00H, '-', 00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@
CONST	SEGMENT
??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'L', 00H, 'e', 00H, 'n', 00H, '>', 00H, '=', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'c', 00H, 'u', 00H, 'r', 00H
	DB	'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'L', 00H, 'e', 00H, 'n'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, '0', 00H, 'x', 00H, '7', 00H
	DB	'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 'f'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA DD 0a55H ; `icu_56::RegexCompile::matchStartType'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?matchStartType@RegexCompile@icu_56@@AAEXXZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?matchStartType@RegexCompile@icu_56@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?matchStartType@RegexCompile@icu_56@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$5
	DD	00H
	DD	FLAT:__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?matchStartType@RegexCompile@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv144 = -980						; size = 4
_c$40173 = -780						; size = 4
_jmpDest$40160 = -768					; size = 4
_depth$40144 = -756					; size = 4
_minLoopCount$40135 = -744				; size = 4
_loopEndLoc$40133 = -732				; size = 4
_s$40131 = -720						; size = 52
_c$40130 = -660						; size = 4
_stringStartIdx$40129 = -648				; size = 4
_stringLen$40124 = -636					; size = 4
_stringLenOp$40122 = -624				; size = 4
_c$40120 = -612						; size = 4
_stringStartIdx$40119 = -600				; size = 4
_stringLen$40112 = -588					; size = 4
_stringLenOp$40110 = -576				; size = 4
_jmpDest$40106 = -564					; size = 4
_jmpDest$40097 = -552					; size = 4
_starters$40091 = -540					; size = 52
_c$40089 = -480						; size = 4
_s$40080 = -468						; size = 52
_s$40074 = -408						; size = 52
_s$40069 = -348						; size = 52
_sc$40066 = -288					; size = 52
_s$40065 = -228						; size = 4
_sn$40064 = -216					; size = 4
_s$40061 = -204						; size = 4
_sn$40058 = -192					; size = 4
_s$40052 = -180						; size = 4
_sn$40050 = -168					; size = 4
_s$40046 = -156						; size = 4
_sn$40043 = -144					; size = 4
_forwardedLength$ = -132				; size = 20
_end$ = -104						; size = 4
_atStart$ = -89						; size = 1
_numInitialStrings$ = -80				; size = 4
_currentLen$ = -68					; size = 4
_opType$ = -56						; size = 4
_op$ = -44						; size = 4
_loc$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?matchStartType@RegexCompile@icu_56@@AAEXXZ PROC	; icu_56::RegexCompile::matchStartType, COMDAT
; _this$ = ecx
; Line 2645
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?matchStartType@RegexCompile@icu_56@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 968				; 000003c8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-980]
	mov	ecx, 242				; 000000f2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2646
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN87@matchStart
; Line 2647
	jmp	$LN88@matchStart
$LN87@matchStart:
; Line 2654
	mov	DWORD PTR _currentLen$[ebp], 0
; Line 2655
	mov	DWORD PTR _numInitialStrings$[ebp], 0
; Line 2657
	mov	BYTE PTR _atStart$[ebp], 1
; Line 2666
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$[ebp], eax
; Line 2667
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	add	edx, 1
	push	edx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2668
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setSize@UVector32@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2669
	mov	DWORD PTR _loc$[ebp], 3
	jmp	SHORT $LN86@matchStart
$LN85@matchStart:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN86@matchStart:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jge	SHORT $LN84@matchStart
; Line 2670
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2671
	jmp	SHORT $LN85@matchStart
$LN84@matchStart:
; Line 2673
	mov	DWORD PTR _loc$[ebp], 3
	jmp	SHORT $LN83@matchStart
$LN82@matchStart:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN83@matchStart:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jge	$LN81@matchStart
; Line 2674
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 2675
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _opType$[ebp], eax
; Line 2681
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jge	SHORT $LN80@matchStart
; Line 2682
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2683
	cmp	DWORD PTR _currentLen$[ebp], 0
	jl	SHORT $LN90@matchStart
	cmp	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
	jl	SHORT $LN80@matchStart
$LN90@matchStart:
	mov	eax, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	eax, 38					; 00000026H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN80@matchStart:
; Line 2686
	mov	eax, DWORD PTR _opType$[ebp]
	mov	DWORD PTR tv144[ebp], eax
	cmp	DWORD PTR tv144[ebp], 58		; 0000003aH
	ja	$LN14@matchStart
	mov	ecx, DWORD PTR tv144[ebp]
	movzx	edx, BYTE PTR $LN116@matchStart[ecx]
	jmp	DWORD PTR $LN127@matchStart[edx*4]
$LN77@matchStart:
; Line 2710
	jmp	$LN78@matchStart
$LN76@matchStart:
; Line 2713
	movsx	eax, BYTE PTR _atStart$[ebp]
	test	eax, eax
	je	SHORT $LN75@matchStart
; Line 2714
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 3
$LN75@matchStart:
; Line 2716
	jmp	$LN78@matchStart
$LN74@matchStart:
; Line 2720
	movsx	eax, BYTE PTR _atStart$[ebp]
	test	eax, eax
	je	SHORT $LN73@matchStart
; Line 2721
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 4
$LN73@matchStart:
; Line 2723
	jmp	$LN78@matchStart
$LN72@matchStart:
; Line 2726
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	SHORT $LN71@matchStart
; Line 2729
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2730
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN71@matchStart:
; Line 2732
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2733
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2734
	jmp	$LN78@matchStart
$LN70@matchStart:
; Line 2738
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN69@matchStart
; Line 2739
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _sn$40043[ebp], eax
; Line 2740
	jle	SHORT $LN92@matchStart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _sn$40043[ebp], eax
	jl	SHORT $LN93@matchStart
$LN92@matchStart:
	mov	edx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	edx, 95					; 0000005fH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EK@PFKDPHNJ@?$AAs?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAS?$AAe?$AAt?$AAs?$AA?9?$AA?$DO?$AAs?$AAi@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN93@matchStart:
; Line 2741
	mov	esi, esp
	mov	eax, DWORD PTR _sn$40043[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+84]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$40046[ebp], eax
; Line 2742
	mov	esi, esp
	mov	eax, DWORD PTR _s$40046[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2743
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN69@matchStart:
; Line 2745
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2746
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2747
	jmp	$LN78@matchStart
$LN68@matchStart:
; Line 2752
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN67@matchStart
; Line 2753
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _sn$40050[ebp], eax
; Line 2754
	jle	SHORT $LN94@matchStart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _sn$40050[ebp], eax
	jl	SHORT $LN95@matchStart
$LN94@matchStart:
	mov	edx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	edx, 109				; 0000006dH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EK@PFKDPHNJ@?$AAs?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAS?$AAe?$AAt?$AAs?$AA?9?$AA?$DO?$AAs?$AAi@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN95@matchStart:
; Line 2755
	mov	esi, esp
	mov	eax, DWORD PTR _sn$40050[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+84]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$40052[ebp], eax
; Line 2756
	mov	esi, esp
	mov	eax, DWORD PTR _s$40052[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2757
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN67@matchStart:
; Line 2759
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2760
	jmp	$LN78@matchStart
$LN66@matchStart:
; Line 2763
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	SHORT $LN65@matchStart
; Line 2766
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2767
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2768
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN65@matchStart:
; Line 2770
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2771
	jmp	$LN78@matchStart
$LN64@matchStart:
; Line 2775
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN63@matchStart
; Line 2776
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _sn$40058[ebp], eax
; Line 2777
	jle	SHORT $LN96@matchStart
	cmp	DWORD PTR _sn$40058[ebp], 13		; 0000000dH
	jl	SHORT $LN97@matchStart
$LN96@matchStart:
	mov	eax, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	eax, 132				; 00000084H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DA@PHFCOPKF@?$AAs?$AAn?$AA?$DO?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAn?$AA?$DM?$AAU?$AAR?$AAX?$AA_?$AAL?$AAA?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN97@matchStart:
; Line 2778
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+112]
	mov	eax, DWORD PTR _sn$40058[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _s$40061[ebp], ecx
; Line 2779
	mov	esi, esp
	mov	eax, DWORD PTR _s$40061[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2780
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN63@matchStart:
; Line 2782
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2783
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2784
	jmp	$LN78@matchStart
$LN62@matchStart:
; Line 2789
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN61@matchStart
; Line 2790
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _sn$40064[ebp], eax
; Line 2791
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+112]
	mov	eax, DWORD PTR _sn$40064[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _s$40065[ebp], ecx
; Line 2792
	mov	esi, esp
	mov	eax, DWORD PTR _s$40065[ebp]
	push	eax
	lea	ecx, DWORD PTR _sc$40066[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2793
	mov	esi, esp
	lea	ecx, DWORD PTR _sc$40066[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2794
	mov	esi, esp
	lea	eax, DWORD PTR _sc$40066[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2795
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2796
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _sc$40066[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN61@matchStart:
; Line 2797
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2798
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2799
	jmp	$LN78@matchStart
$LN60@matchStart:
; Line 2805
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN59@matchStart
; Line 2806
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40069[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 2807
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	512					; 00000200H
	push	8192					; 00002000H
	lea	ecx, DWORD PTR _s$40069[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2808
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	je	SHORT $LN58@matchStart
; Line 2809
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40069[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN58@matchStart:
; Line 2811
	mov	esi, esp
	lea	eax, DWORD PTR _s$40069[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2812
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2813
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40069[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN59@matchStart:
; Line 2814
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2815
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2816
	jmp	$LN78@matchStart
$LN57@matchStart:
; Line 2821
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN56@matchStart
; Line 2822
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 2823
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	4096					; 00001000H
	push	8192					; 00002000H
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2824
	mov	esi, esp
	push	9
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2825
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	je	SHORT $LN55@matchStart
; Line 2826
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN55@matchStart:
; Line 2828
	mov	esi, esp
	lea	eax, DWORD PTR _s$40074[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2829
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2830
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN56@matchStart:
; Line 2831
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2832
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2833
	jmp	$LN78@matchStart
$LN54@matchStart:
; Line 2838
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN53@matchStart
; Line 2839
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 2840
	mov	esi, esp
	push	13					; 0000000dH
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2841
	mov	esi, esp
	push	133					; 00000085H
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2842
	mov	esi, esp
	push	8233					; 00002029H
	push	8232					; 00002028H
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2843
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	je	SHORT $LN52@matchStart
; Line 2845
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@matchStart:
; Line 2847
	mov	esi, esp
	lea	eax, DWORD PTR _s$40080[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2848
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2849
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@matchStart:
; Line 2850
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2851
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2852
	jmp	$LN78@matchStart
$LN51@matchStart:
; Line 2858
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN50@matchStart
; Line 2859
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _c$40089[ebp], eax
; Line 2860
	push	34					; 00000022H
	mov	eax, DWORD PTR _c$40089[ebp]
	push	eax
	call	_u_hasBinaryProperty_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	$LN49@matchStart
; Line 2861
	mov	esi, esp
	mov	eax, DWORD PTR _c$40089[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$40089[ebp]
	push	ecx
	lea	ecx, DWORD PTR _starters$40091[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 2862
	mov	esi, esp
	push	2
	lea	ecx, DWORD PTR _starters$40091[ebp]
	call	DWORD PTR __imp_?closeOver@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2866
	mov	esi, esp
	lea	eax, DWORD PTR _starters$40091[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2867
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _starters$40091[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN48@matchStart
$LN49@matchStart:
; Line 2870
	mov	esi, esp
	mov	eax, DWORD PTR _c$40089[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@matchStart:
; Line 2872
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN50@matchStart:
; Line 2874
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2875
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2876
	jmp	$LN78@matchStart
$LN47@matchStart:
; Line 2883
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	SHORT $LN46@matchStart
; Line 2886
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2887
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2888
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
$LN46@matchStart:
; Line 2890
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2891
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2892
	jmp	$LN78@matchStart
$LN45@matchStart:
; Line 2896
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN44@matchStart:
; Line 2899
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40097[ebp], eax
; Line 2900
	mov	eax, DWORD PTR _jmpDest$40097[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jge	SHORT $LN43@matchStart
; Line 2903
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2905
	jmp	SHORT $LN42@matchStart
$LN43@matchStart:
; Line 2907
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	cmp	DWORD PTR _jmpDest$40097[ebp], eax
	jle	SHORT $LN98@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 262				; 00000106H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@JLLJKDPP@?$AAj?$AAm?$AAp?$AAD?$AAe?$AAs?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN98@matchStart:
; Line 2908
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40097[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jle	SHORT $LN42@matchStart
; Line 2909
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40097[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN42@matchStart:
; Line 2913
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2914
	jmp	$LN78@matchStart
$LN40@matchStart:
; Line 2920
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2921
	jmp	$LN78@matchStart
$LN39@matchStart:
; Line 2926
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2927
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2928
	jmp	$LN78@matchStart
$LN38@matchStart:
; Line 2935
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40106[ebp], eax
; Line 2936
	mov	eax, DWORD PTR _jmpDest$40106[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jle	SHORT $LN37@matchStart
; Line 2937
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40106[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _currentLen$[ebp], eax
	jge	SHORT $LN37@matchStart
; Line 2938
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40106[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@matchStart:
; Line 2942
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2943
	jmp	$LN78@matchStart
$LN35@matchStart:
; Line 2950
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 2951
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stringLenOp$40110[ebp], eax
; Line 2952
	mov	eax, DWORD PTR _stringLenOp$40110[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _stringLen$40112[ebp], eax
; Line 2953
	mov	eax, DWORD PTR _stringLenOp$40110[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 5
	je	SHORT $LN99@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 308				; 00000134H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GE@CEDGAHCF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN99@matchStart:
; Line 2954
	cmp	DWORD PTR _stringLenOp$40110[ebp], 2
	jge	SHORT $LN100@matchStart
	mov	eax, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	eax, 309				; 00000135H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@NEHIPLGE@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN100@matchStart:
; Line 2955
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	SHORT $LN34@matchStart
; Line 2958
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _stringStartIdx$40119[ebp], eax
; Line 2959
	mov	esi, esp
	mov	eax, DWORD PTR _stringStartIdx$40119[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$40120[ebp], eax
; Line 2960
	mov	esi, esp
	mov	eax, DWORD PTR _c$40120[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2964
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 1
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _stringStartIdx$40119[ebp]
	mov	DWORD PTR [ecx+124], edx
; Line 2966
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _stringLen$40112[ebp]
	mov	DWORD PTR [ecx+128], edx
$LN34@matchStart:
; Line 2969
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, DWORD PTR _stringLen$40112[ebp]
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2970
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2972
	jmp	$LN78@matchStart
$LN33@matchStart:
; Line 2979
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 2980
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stringLenOp$40122[ebp], eax
; Line 2981
	mov	eax, DWORD PTR _stringLenOp$40122[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _stringLen$40124[ebp], eax
; Line 2982
	mov	eax, DWORD PTR _stringLenOp$40122[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 5
	je	SHORT $LN101@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 337				; 00000151H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GE@CEDGAHCF@?$AA?$CI?$AA?$CI?$AAu?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?$CJ?$AA?5?$AA?$DO?$AA?$DO?$AA?5?$AA2?$AA4?$AA?$CJ?$AA?5@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN101@matchStart:
; Line 2983
	cmp	DWORD PTR _stringLenOp$40122[ebp], 2
	jge	SHORT $LN102@matchStart
	mov	eax, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	eax, 338				; 00000152H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@NEHIPLGE@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAO?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN102@matchStart:
; Line 2984
	cmp	DWORD PTR _currentLen$[ebp], 0
	jne	$LN32@matchStart
; Line 2987
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _stringStartIdx$40129[ebp], eax
; Line 2988
	mov	esi, esp
	mov	eax, DWORD PTR _stringStartIdx$40129[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$40130[ebp], eax
; Line 2989
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40131[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 2990
	lea	eax, DWORD PTR _s$40131[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$40130[ebp]
	push	ecx
	call	?findCaseInsensitiveStarters@RegexCompile@icu_56@@SAXHPAVUnicodeSet@2@@Z ; icu_56::RegexCompile::findCaseInsensitiveStarters
	add	esp, 8
; Line 2991
	mov	esi, esp
	lea	eax, DWORD PTR _s$40131[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2992
	mov	eax, DWORD PTR _numInitialStrings$[ebp]
	add	eax, 2
	mov	DWORD PTR _numInitialStrings$[ebp], eax
; Line 2993
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40131[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@matchStart:
; Line 2994
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, DWORD PTR _stringLen$40124[ebp]
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 2995
	mov	BYTE PTR _atStart$[ebp], 0
; Line 2997
	jmp	$LN78@matchStart
$LN31@matchStart:
; Line 3009
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loopEndLoc$40133[ebp], eax
; Line 3010
	mov	eax, DWORD PTR _loopEndLoc$40133[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _loopEndLoc$40133[ebp], eax
; Line 3011
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _minLoopCount$40135[ebp], eax
; Line 3012
	cmp	DWORD PTR _minLoopCount$40135[ebp], 0
	jne	SHORT $LN30@matchStart
; Line 3016
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	cmp	DWORD PTR _loopEndLoc$40133[ebp], eax
	jle	SHORT $LN103@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 371				; 00000173H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CI@OKNJEDPF@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN103@matchStart:
; Line 3017
	mov	esi, esp
	mov	eax, DWORD PTR _loopEndLoc$40133[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jle	SHORT $LN30@matchStart
; Line 3018
	mov	esi, esp
	mov	eax, DWORD PTR _loopEndLoc$40133[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@matchStart:
; Line 3021
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 3
	mov	DWORD PTR _loc$[ebp], eax
; Line 3023
	mov	BYTE PTR _atStart$[ebp], 0
; Line 3024
	jmp	$LN78@matchStart
$LN28@matchStart:
; Line 3031
	mov	BYTE PTR _atStart$[ebp], 0
; Line 3032
	jmp	$LN78@matchStart
$LN27@matchStart:
; Line 3037
	mov	BYTE PTR _atStart$[ebp], 0
; Line 3038
	jmp	$LN78@matchStart
$LN26@matchStart:
; Line 3050
	xor	eax, eax
	cmp	DWORD PTR _opType$[ebp], 37		; 00000025H
	sete	al
	add	eax, 1
	mov	DWORD PTR _depth$40144[ebp], eax
$LN25@matchStart:
; Line 3052
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3053
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 3054
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 37					; 00000025H
	jne	SHORT $LN23@matchStart
; Line 3055
	mov	eax, DWORD PTR _depth$40144[ebp]
	add	eax, 2
	mov	DWORD PTR _depth$40144[ebp], eax
$LN23@matchStart:
; Line 3057
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN22@matchStart
; Line 3058
	mov	eax, DWORD PTR _depth$40144[ebp]
	add	eax, 1
	mov	DWORD PTR _depth$40144[ebp], eax
$LN22@matchStart:
; Line 3060
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 38					; 00000026H
	je	SHORT $LN20@matchStart
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN21@matchStart
$LN20@matchStart:
; Line 3061
	mov	eax, DWORD PTR _depth$40144[ebp]
	sub	eax, 1
	mov	DWORD PTR _depth$40144[ebp], eax
; Line 3062
	jne	SHORT $LN21@matchStart
; Line 3063
	jmp	$LN24@matchStart
$LN21@matchStart:
; Line 3066
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 6
	jne	SHORT $LN18@matchStart
; Line 3069
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40160[ebp], eax
; Line 3070
	mov	eax, DWORD PTR _jmpDest$40160[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jle	SHORT $LN18@matchStart
; Line 3071
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40160[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _currentLen$[ebp], eax
	jge	SHORT $LN18@matchStart
; Line 3072
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40160[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@matchStart:
; Line 3076
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN104@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 431				; 000001afH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@ODEFOFGK@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN104@matchStart:
; Line 3077
	jmp	$LN25@matchStart
$LN24@matchStart:
; Line 3079
	jmp	SHORT $LN78@matchStart
$LN15@matchStart:
; Line 3086
	xor	eax, eax
	jne	SHORT $LN105@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 441				; 000001b9H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN105@matchStart:
; Line 3089
	jmp	SHORT $LN78@matchStart
$LN14@matchStart:
; Line 3092
	xor	eax, eax
	jne	SHORT $LN78@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 447				; 000001bfH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN78@matchStart:
; Line 3095
	jmp	$LN82@matchStart
$LN81@matchStart:
; Line 3100
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jge	SHORT $LN13@matchStart
; Line 3101
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
$LN13@matchStart:
; Line 3105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+140]
	call	?init@Regex8BitSet@icu_56@@QAEXPBVUnicodeSet@2@@Z ; icu_56::Regex8BitSet::init
; Line 3116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+120], 3
	jne	SHORT $LN12@matchStart
	jmp	$LN11@matchStart
$LN12@matchStart:
; Line 3119
	cmp	DWORD PTR _numInitialStrings$[ebp], 1
	jne	$LN10@matchStart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+96], 0
	jle	$LN10@matchStart
; Line 3121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$40173[ebp], eax
; Line 3122
	mov	esi, esp
	mov	eax, DWORD PTR _c$40173[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN107@matchStart
	mov	ecx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 477				; 000001ddH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EG@EOCCMAGB@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AAs?$AA?9?$AA?$DO?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAs?$AA?$CI@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN107@matchStart:
; Line 3123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 5
; Line 3124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _c$40173[ebp]
	mov	DWORD PTR [ecx+136], edx
	jmp	$LN11@matchStart
$LN10@matchStart:
; Line 3125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+120], 4
	jne	SHORT $LN8@matchStart
	jmp	$LN11@matchStart
$LN8@matchStart:
; Line 3128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+96], 0
	jne	SHORT $LN6@matchStart
; Line 3130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 0
	jmp	$LN11@matchStart
$LN6@matchStart:
; Line 3131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@matchStart
; Line 3133
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 1
; Line 3134
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	call	DWORD PTR __imp_?charAt@UnicodeSet@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+136], eax
; Line 3135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+136], -1
	jne	SHORT $LN108@matchStart
	mov	edx, DWORD PTR ?__LINE__Var@?1??matchStartType@RegexCompile@icu_56@@AAEXXZ@4JA
	add	edx, 490				; 000001eaH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EI@LKANFICD@?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AAU?$AAC?$AAh?$AAa?$AAr?$AA3?$AA2@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN108@matchStart:
; Line 3136
	jmp	SHORT $LN11@matchStart
$LN4@matchStart:
; Line 3137
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@matchStart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+96], 0
	jle	SHORT $LN2@matchStart
; Line 3139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 2
; Line 3140
	jmp	SHORT $LN11@matchStart
$LN2@matchStart:
; Line 3142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+120], 0
$LN11@matchStart:
; Line 3145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN88@matchStart:
; Line 3146
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN126@matchStart
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 980				; 000003d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN126@matchStart:
	DD	7
	DD	$LN125@matchStart
$LN125@matchStart:
	DD	-132					; ffffff7cH
	DD	20					; 00000014H
	DD	$LN117@matchStart
	DD	-288					; fffffee0H
	DD	52					; 00000034H
	DD	$LN118@matchStart
	DD	-348					; fffffea4H
	DD	52					; 00000034H
	DD	$LN119@matchStart
	DD	-408					; fffffe68H
	DD	52					; 00000034H
	DD	$LN120@matchStart
	DD	-468					; fffffe2cH
	DD	52					; 00000034H
	DD	$LN121@matchStart
	DD	-540					; fffffde4H
	DD	52					; 00000034H
	DD	$LN122@matchStart
	DD	-720					; fffffd30H
	DD	52					; 00000034H
	DD	$LN123@matchStart
$LN123@matchStart:
	DB	115					; 00000073H
	DB	0
$LN122@matchStart:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN121@matchStart:
	DB	115					; 00000073H
	DB	0
$LN120@matchStart:
	DB	115					; 00000073H
	DB	0
$LN119@matchStart:
	DB	115					; 00000073H
	DB	0
$LN118@matchStart:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN117@matchStart:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	119					; 00000077H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN127@matchStart:
	DD	$LN77@matchStart
	DD	$LN39@matchStart
	DD	$LN72@matchStart
	DD	$LN35@matchStart
	DD	$LN38@matchStart
	DD	$LN64@matchStart
	DD	$LN70@matchStart
	DD	$LN47@matchStart
	DD	$LN44@matchStart
	DD	$LN40@matchStart
	DD	$LN60@matchStart
	DD	$LN76@matchStart
	DD	$LN31@matchStart
	DD	$LN28@matchStart
	DD	$LN74@matchStart
	DD	$LN45@matchStart
	DD	$LN26@matchStart
	DD	$LN15@matchStart
	DD	$LN51@matchStart
	DD	$LN33@matchStart
	DD	$LN62@matchStart
	DD	$LN68@matchStart
	DD	$LN27@matchStart
	DD	$LN66@matchStart
	DD	$LN57@matchStart
	DD	$LN54@matchStart
$LN116@matchStart:
	DB	0
	DB	1
	DB	0
	DB	2
	DB	3
	DB	0
	DB	4
	DB	0
	DB	0
	DB	0
	DB	5
	DB	6
	DB	7
	DB	8
	DB	0
	DB	9
	DB	0
	DB	0
	DB	9
	DB	7
	DB	0
	DB	7
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	0
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	7
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	0
	DB	0
	DB	14					; 0000000eH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	0
	DB	0
	DB	0
	DB	24					; 00000018H
	DB	25					; 00000019H
	DB	25					; 00000019H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _sc$40066[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40069[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40074[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40080[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _starters$40091[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?matchStartType@RegexCompile@icu_56@@AAEXXZ$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$40131[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?matchStartType@RegexCompile@icu_56@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-984]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?matchStartType@RegexCompile@icu_56@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?matchStartType@RegexCompile@icu_56@@AAEXXZ ENDP	; icu_56::RegexCompile::matchStartType
PUBLIC	??_C@_1EG@FMNBMKBI@?$AAe?$AAn?$AAd?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AAd?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1BK@FCDNEEDD@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA ; `icu_56::RegexCompile::minMatchLength'::`2'::__LINE__Var
;	COMDAT ??_C@_1EG@FMNBMKBI@?$AAe?$AAn?$AAd?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AAd?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1EG@FMNBMKBI@?$AAe?$AAn?$AAd?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AAd?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe@ DB 'e'
	DB	00H, 'n', 00H, 'd', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'f', 00H
	DB	'R', 00H, 'X', 00H, 'P', 00H, 'a', 00H, 't', 00H, '-', 00H, '>'
	DB	00H, 'f', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 't', 00H, '-'
	DB	00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FCDNEEDD@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FCDNEEDD@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ' ', 00H, '<', 00H
	DB	'=', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA DD 0c5cH ; `icu_56::RegexCompile::minMatchLength'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z$0
__ehfuncinfo$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z
_TEXT	SEGMENT
tv157 = -392						; size = 4
$T48217 = -384						; size = 4
_jmpDest$40265 = -180					; size = 4
_depth$40248 = -168					; size = 4
_minLoopCount$40241 = -156				; size = 4
_loopEndLoc$40239 = -144				; size = 4
_stringLenOp$40235 = -132				; size = 4
_jmpDest$40231 = -120					; size = 4
_jmpDest$40224 = -108					; size = 4
_forwardedLength$ = -96					; size = 20
_currentLen$ = -68					; size = 4
_opType$ = -56						; size = 4
_op$ = -44						; size = 4
_loc$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z PROC	; icu_56::RegexCompile::minMatchLength, COMDAT
; _this$ = ecx
; Line 3164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 3165
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN43@minMatchLe
; Line 3166
	xor	eax, eax
	jmp	$LN44@minMatchLe
$LN43@minMatchLe:
; Line 3169
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN46@minMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 5
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BK@FCDNEEDD@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN46@minMatchLe:
; Line 3170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _end$[ebp], eax
	jl	SHORT $LN47@minMatchLe
	mov	edx, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	edx, 6
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EG@FMNBMKBI@?$AAe?$AAn?$AAd?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AAd?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN47@minMatchLe:
; Line 3176
	mov	DWORD PTR _currentLen$[ebp], 0
; Line 3184
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	add	edx, 2
	push	edx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 3185
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setSize@UVector32@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3186
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _loc$[ebp], eax
	jmp	SHORT $LN42@minMatchLe
$LN41@minMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN42@minMatchLe:
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	cmp	DWORD PTR _loc$[ebp], eax
	jg	SHORT $LN40@minMatchLe
; Line 3187
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3188
	jmp	SHORT $LN41@minMatchLe
$LN40@minMatchLe:
; Line 3190
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _loc$[ebp], eax
	jmp	SHORT $LN39@minMatchLe
$LN38@minMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN39@minMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jg	$LN37@minMatchLe
; Line 3191
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 3192
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _opType$[ebp], eax
; Line 3200
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jge	SHORT $LN36@minMatchLe
; Line 3201
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3202
	cmp	DWORD PTR _currentLen$[ebp], 0
	jl	SHORT $LN48@minMatchLe
	cmp	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
	jl	SHORT $LN36@minMatchLe
$LN48@minMatchLe:
	mov	eax, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	eax, 38					; 00000026H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@minMatchLe:
; Line 3205
	mov	eax, DWORD PTR _opType$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	cmp	DWORD PTR tv157[ebp], 58		; 0000003aH
	ja	$LN2@minMatchLe
	mov	ecx, DWORD PTR tv157[ebp]
	movzx	edx, BYTE PTR $LN56@minMatchLe[ecx]
	jmp	DWORD PTR $LN61@minMatchLe[edx*4]
$LN33@minMatchLe:
; Line 3234
	jmp	$LN34@minMatchLe
$LN32@minMatchLe:
; Line 3252
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3253
	jmp	$LN34@minMatchLe
$LN31@minMatchLe:
; Line 3257
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN30@minMatchLe:
; Line 3261
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40224[ebp], eax
; Line 3262
	mov	eax, DWORD PTR _jmpDest$40224[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jge	SHORT $LN29@minMatchLe
; Line 3265
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3266
	jmp	SHORT $LN28@minMatchLe
$LN29@minMatchLe:
; Line 3268
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	cmp	DWORD PTR _jmpDest$40224[ebp], eax
	jle	SHORT $LN50@minMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 104				; 00000068H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@JLLJKDPP@?$AAj?$AAm?$AAp?$AAD?$AAe?$AAs?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$CL?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@minMatchLe:
; Line 3269
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40224[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jle	SHORT $LN28@minMatchLe
; Line 3270
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40224[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@minMatchLe:
; Line 3274
	jmp	$LN34@minMatchLe
$LN26@minMatchLe:
; Line 3280
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3282
	jmp	$LN34@minMatchLe
$LN25@minMatchLe:
; Line 3289
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40231[ebp], eax
; Line 3290
	mov	eax, DWORD PTR _jmpDest$40231[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jle	SHORT $LN24@minMatchLe
; Line 3291
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40231[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _currentLen$[ebp], eax
	jge	SHORT $LN24@minMatchLe
; Line 3292
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40231[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@minMatchLe:
; Line 3296
	jmp	$LN34@minMatchLe
$LN22@minMatchLe:
; Line 3301
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3302
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stringLenOp$40235[ebp], eax
; Line 3303
	mov	eax, DWORD PTR _stringLenOp$40235[ebp]
	and	eax, 16777215				; 00ffffffH
	add	eax, DWORD PTR _currentLen$[ebp]
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3305
	jmp	$LN34@minMatchLe
$LN21@minMatchLe:
; Line 3310
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3316
	mov	eax, DWORD PTR _currentLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3318
	jmp	$LN34@minMatchLe
$LN20@minMatchLe:
; Line 3328
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loopEndLoc$40239[ebp], eax
; Line 3329
	mov	eax, DWORD PTR _loopEndLoc$40239[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _loopEndLoc$40239[ebp], eax
; Line 3330
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _minLoopCount$40241[ebp], eax
; Line 3331
	cmp	DWORD PTR _minLoopCount$40241[ebp], 0
	jne	SHORT $LN19@minMatchLe
; Line 3332
	mov	eax, DWORD PTR _loopEndLoc$40239[ebp]
	mov	DWORD PTR _loc$[ebp], eax
; Line 3333
	jmp	SHORT $LN18@minMatchLe
$LN19@minMatchLe:
; Line 3334
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 3
	mov	DWORD PTR _loc$[ebp], eax
$LN18@minMatchLe:
; Line 3337
	jmp	$LN34@minMatchLe
$LN17@minMatchLe:
; Line 3344
	jmp	$LN34@minMatchLe
$LN16@minMatchLe:
; Line 3351
	jmp	$LN34@minMatchLe
$LN15@minMatchLe:
; Line 3362
	xor	eax, eax
	cmp	DWORD PTR _opType$[ebp], 37		; 00000025H
	sete	al
	add	eax, 1
	mov	DWORD PTR _depth$40248[ebp], eax
$LN14@minMatchLe:
; Line 3364
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3365
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 3366
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 37					; 00000025H
	jne	SHORT $LN12@minMatchLe
; Line 3369
	mov	eax, DWORD PTR _depth$40248[ebp]
	add	eax, 2
	mov	DWORD PTR _depth$40248[ebp], eax
$LN12@minMatchLe:
; Line 3371
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN11@minMatchLe
; Line 3372
	mov	eax, DWORD PTR _depth$40248[ebp]
	add	eax, 1
	mov	DWORD PTR _depth$40248[ebp], eax
$LN11@minMatchLe:
; Line 3374
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 38					; 00000026H
	jne	SHORT $LN10@minMatchLe
; Line 3375
	mov	eax, DWORD PTR _depth$40248[ebp]
	sub	eax, 1
	mov	DWORD PTR _depth$40248[ebp], eax
; Line 3376
	jne	SHORT $LN10@minMatchLe
; Line 3377
	jmp	$LN13@minMatchLe
$LN10@minMatchLe:
; Line 3380
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN8@minMatchLe
; Line 3381
	mov	eax, DWORD PTR _depth$40248[ebp]
	sub	eax, 1
	mov	DWORD PTR _depth$40248[ebp], eax
; Line 3382
	jne	SHORT $LN8@minMatchLe
; Line 3383
	jmp	$LN13@minMatchLe
$LN8@minMatchLe:
; Line 3386
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 6
	jne	SHORT $LN6@minMatchLe
; Line 3389
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40265[ebp], eax
; Line 3390
	mov	eax, DWORD PTR _jmpDest$40265[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jle	SHORT $LN6@minMatchLe
; Line 3391
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40265[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _currentLen$[ebp], eax
	jge	SHORT $LN6@minMatchLe
; Line 3392
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40265[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@minMatchLe:
; Line 3396
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN51@minMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@ODEFOFGK@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@minMatchLe:
; Line 3397
	jmp	$LN14@minMatchLe
$LN13@minMatchLe:
; Line 3399
	jmp	SHORT $LN34@minMatchLe
$LN3@minMatchLe:
; Line 3408
	jmp	SHORT $LN34@minMatchLe
$LN2@minMatchLe:
; Line 3411
	xor	eax, eax
	jne	SHORT $LN34@minMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 247				; 000000f7H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@minMatchLe:
; Line 3414
	jmp	$LN38@minMatchLe
$LN37@minMatchLe:
; Line 3418
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jge	SHORT $LN1@minMatchLe
; Line 3419
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3420
	cmp	DWORD PTR _currentLen$[ebp], 0
	jl	SHORT $LN53@minMatchLe
	cmp	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
	jl	SHORT $LN1@minMatchLe
$LN53@minMatchLe:
	mov	eax, DWORD PTR ?__LINE__Var@?1??minMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	eax, 256				; 00000100H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FC@LACKKIME@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@minMatchLe:
; Line 3423
	mov	eax, DWORD PTR _currentLen$[ebp]
	mov	DWORD PTR $T48217[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48217[ebp]
$LN44@minMatchLe:
; Line 3424
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@minMatchLe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN60@minMatchLe:
	DD	1
	DD	$LN59@minMatchLe
$LN59@minMatchLe:
	DD	-96					; ffffffa0H
	DD	20					; 00000014H
	DD	$LN57@minMatchLe
$LN57@minMatchLe:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	119					; 00000077H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN61@minMatchLe:
	DD	$LN33@minMatchLe
	DD	$LN26@minMatchLe
	DD	$LN32@minMatchLe
	DD	$LN22@minMatchLe
	DD	$LN25@minMatchLe
	DD	$LN30@minMatchLe
	DD	$LN20@minMatchLe
	DD	$LN17@minMatchLe
	DD	$LN31@minMatchLe
	DD	$LN15@minMatchLe
	DD	$LN3@minMatchLe
	DD	$LN21@minMatchLe
	DD	$LN16@minMatchLe
	DD	$LN2@minMatchLe
$LN56@minMatchLe:
	DB	0
	DB	1
	DB	0
	DB	2
	DB	3
	DB	0
	DB	4
	DB	0
	DB	0
	DB	0
	DB	2
	DB	2
	DB	2
	DB	5
	DB	13					; 0000000dH
	DB	0
	DB	0
	DB	0
	DB	0
	DB	2
	DB	0
	DB	2
	DB	2
	DB	0
	DB	0
	DB	6
	DB	6
	DB	2
	DB	7
	DB	7
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	2
	DB	11					; 0000000bH
	DB	0
	DB	0
	DB	0
	DB	9
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	2
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	0
	DB	2
	DB	2
	DB	2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?minMatchLength@RegexCompile@icu_56@@AAEHHH@Z ENDP	; icu_56::RegexCompile::minMatchLength
PUBLIC	??_C@_1BE@IAIOFMOF@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@KAHNIAPC@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAl?$AAo?$AAc?$AA?$CL?$AA4?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA ; `icu_56::RegexCompile::maxMatchLength'::`2'::__LINE__Var
;	COMDAT ??_C@_1BE@IAIOFMOF@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@IAIOFMOF@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'c', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@KAHNIAPC@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAl?$AAo?$AAc?$AA?$CL?$AA4?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@KAHNIAPC@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAl?$AAo?$AAc?$AA?$CL?$AA4?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'o', 00H, 'p', 00H, 'E', 00H, 'n', 00H, 'd', 00H
	DB	'L', 00H, 'o', 00H, 'c', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, '+', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA DD 0d79H ; `icu_56::RegexCompile::maxMatchLength'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z$0
__ehfuncinfo$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z
_TEXT	SEGMENT
tv149 = -424						; size = 4
$T48238 = -416						; size = 4
_depth$40348 = -212					; size = 4
_updatedLen$40339 = -200				; size = 8
_blockLen$40338 = -184					; size = 8
_maxLoopCount$40333 = -168				; size = 4
_loopEndLoc$40331 = -156				; size = 4
_stringLenOp$40328 = -144				; size = 4
_stringLenOp$40325 = -132				; size = 4
_jmpDest$40320 = -120					; size = 4
_jmpDest$40314 = -108					; size = 4
_forwardedLength$ = -96					; size = 20
_currentLen$ = -68					; size = 4
_opType$ = -56						; size = 4
_op$ = -44						; size = 4
_loc$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z PROC	; icu_56::RegexCompile::maxMatchLength, COMDAT
; _this$ = ecx
; Line 3449
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-424]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 3450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN43@maxMatchLe
; Line 3451
	xor	eax, eax
	jmp	$LN44@maxMatchLe
$LN43@maxMatchLe:
; Line 3453
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN46@maxMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BK@FCDNEEDD@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN46@maxMatchLe:
; Line 3454
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _end$[ebp], eax
	jl	SHORT $LN47@maxMatchLe
	mov	edx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	edx, 5
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EG@FMNBMKBI@?$AAe?$AAn?$AAd?$AA?5?$AA?$DM?$AA?5?$AAf?$AAR?$AAX?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AAd?$AAP?$AAa?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN47@maxMatchLe:
; Line 3460
	mov	DWORD PTR _currentLen$[ebp], 0
; Line 3461
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	add	edx, 1
	push	edx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 3462
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setSize@UVector32@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3464
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _loc$[ebp], eax
	jmp	SHORT $LN42@maxMatchLe
$LN41@maxMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN42@maxMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jg	SHORT $LN40@maxMatchLe
; Line 3465
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3466
	jmp	SHORT $LN41@maxMatchLe
$LN40@maxMatchLe:
; Line 3468
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _loc$[ebp], eax
	jmp	SHORT $LN39@maxMatchLe
$LN38@maxMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN39@maxMatchLe:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jg	$LN37@maxMatchLe
; Line 3469
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 3470
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _opType$[ebp], eax
; Line 3476
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jle	SHORT $LN36@maxMatchLe
; Line 3477
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
$LN36@maxMatchLe:
; Line 3480
	mov	eax, DWORD PTR _opType$[ebp]
	mov	DWORD PTR tv149[ebp], eax
	cmp	DWORD PTR tv149[ebp], 58		; 0000003aH
	ja	$LN2@maxMatchLe
	mov	ecx, DWORD PTR tv149[ebp]
	movzx	edx, BYTE PTR $LN53@maxMatchLe[ecx]
	jmp	DWORD PTR $LN59@maxMatchLe[edx*4]
$LN33@maxMatchLe:
; Line 3509
	jmp	$LN34@maxMatchLe
$LN32@maxMatchLe:
; Line 3518
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
; Line 3519
	jmp	$LN34@maxMatchLe
$LN31@maxMatchLe:
; Line 3535
	push	2
	mov	eax, DWORD PTR _currentLen$[ebp]
	push	eax
	call	?safeIncrement@icu_56@@YAHHH@Z		; icu_56::safeIncrement
	add	esp, 8
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3536
	jmp	$LN34@maxMatchLe
$LN30@maxMatchLe:
; Line 3541
	push	1
	mov	eax, DWORD PTR _currentLen$[ebp]
	push	eax
	call	?safeIncrement@icu_56@@YAHHH@Z		; icu_56::safeIncrement
	add	esp, 8
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3542
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	cmp	eax, 65536				; 00010000H
	jle	SHORT $LN29@maxMatchLe
; Line 3543
	push	1
	mov	eax, DWORD PTR _currentLen$[ebp]
	push	eax
	call	?safeIncrement@icu_56@@YAHHH@Z		; icu_56::safeIncrement
	add	esp, 8
	mov	DWORD PTR _currentLen$[ebp], eax
$LN29@maxMatchLe:
; Line 3545
	jmp	$LN34@maxMatchLe
$LN28@maxMatchLe:
; Line 3554
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40314[ebp], eax
; Line 3555
	mov	eax, DWORD PTR _jmpDest$40314[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jge	SHORT $LN27@maxMatchLe
; Line 3557
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
; Line 3558
	jmp	SHORT $LN26@maxMatchLe
$LN27@maxMatchLe:
; Line 3560
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40314[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _currentLen$[ebp]
	jge	SHORT $LN25@maxMatchLe
; Line 3561
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40314[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@maxMatchLe:
; Line 3563
	mov	DWORD PTR _currentLen$[ebp], 0
$LN26@maxMatchLe:
; Line 3566
	jmp	$LN34@maxMatchLe
$LN24@maxMatchLe:
; Line 3571
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3572
	jmp	$LN34@maxMatchLe
$LN23@maxMatchLe:
; Line 3581
	mov	eax, DWORD PTR _op$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _jmpDest$40320[ebp], eax
; Line 3582
	mov	eax, DWORD PTR _jmpDest$40320[ebp]
	cmp	eax, DWORD PTR _loc$[ebp]
	jle	SHORT $LN22@maxMatchLe
; Line 3583
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40320[ebp]
	push	eax
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _currentLen$[ebp], eax
	jle	SHORT $LN21@maxMatchLe
; Line 3584
	mov	esi, esp
	mov	eax, DWORD PTR _jmpDest$40320[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@maxMatchLe:
; Line 3586
	jmp	SHORT $LN20@maxMatchLe
$LN22@maxMatchLe:
; Line 3587
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
$LN20@maxMatchLe:
; Line 3590
	jmp	$LN34@maxMatchLe
$LN19@maxMatchLe:
; Line 3597
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3598
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stringLenOp$40325[ebp], eax
; Line 3599
	mov	eax, DWORD PTR _stringLenOp$40325[ebp]
	and	eax, 16777215				; 00ffffffH
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	call	?safeIncrement@icu_56@@YAHHH@Z		; icu_56::safeIncrement
	add	esp, 8
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3600
	jmp	$LN34@maxMatchLe
$LN18@maxMatchLe:
; Line 3625
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3626
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _stringLenOp$40328[ebp], eax
; Line 3627
	mov	eax, DWORD PTR _stringLenOp$40328[ebp]
	and	eax, 16777215				; 00ffffffH
	push	eax
	mov	ecx, DWORD PTR _currentLen$[ebp]
	push	ecx
	call	?safeIncrement@icu_56@@YAHHH@Z		; icu_56::safeIncrement
	add	esp, 8
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3629
	jmp	$LN34@maxMatchLe
$LN17@maxMatchLe:
; Line 3636
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, 16777215				; 00ffffffH
	and	edx, 0
	mov	DWORD PTR _loopEndLoc$40331[ebp], eax
; Line 3637
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 4
	cmp	DWORD PTR _loopEndLoc$40331[ebp], eax
	jne	SHORT $LN16@maxMatchLe
; Line 3640
	mov	eax, DWORD PTR _loopEndLoc$40331[ebp]
	mov	DWORD PTR _loc$[ebp], eax
; Line 3641
	jmp	$LN34@maxMatchLe
$LN16@maxMatchLe:
; Line 3644
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 3
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _maxLoopCount$40333[ebp], eax
; Line 3645
	cmp	DWORD PTR _maxLoopCount$40333[ebp], -1
	jne	SHORT $LN15@maxMatchLe
; Line 3647
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
; Line 3648
	jmp	$LN34@maxMatchLe
$LN15@maxMatchLe:
; Line 3651
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 4
	cmp	DWORD PTR _loopEndLoc$40331[ebp], eax
	jge	SHORT $LN48@maxMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 202				; 000000caH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CI@KAHNIAPC@?$AAl?$AAo?$AAo?$AAp?$AAE?$AAn?$AAd?$AAL?$AAo?$AAc?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAl?$AAo?$AAc?$AA?$CL?$AA4?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@maxMatchLe:
; Line 3652
	mov	eax, DWORD PTR _loopEndLoc$40331[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z ; icu_56::RegexCompile::maxMatchLength
	cdq
	mov	DWORD PTR _blockLen$40338[ebp], eax
	mov	DWORD PTR _blockLen$40338[ebp+4], edx
; Line 3653
	mov	eax, DWORD PTR _currentLen$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _maxLoopCount$40333[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _blockLen$40338[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _blockLen$40338[ebp]
	push	ecx
	call	__allmul
	add	esi, eax
	adc	edi, edx
	mov	DWORD PTR _updatedLen$40339[ebp], esi
	mov	DWORD PTR _updatedLen$40339[ebp+4], edi
; Line 3654
	cmp	DWORD PTR _updatedLen$40339[ebp+4], 0
	jl	SHORT $LN14@maxMatchLe
	jg	SHORT $LN54@maxMatchLe
	cmp	DWORD PTR _updatedLen$40339[ebp], 2147483647 ; 7fffffffH
	jb	SHORT $LN14@maxMatchLe
$LN54@maxMatchLe:
; Line 3655
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
; Line 3656
	jmp	$LN34@maxMatchLe
$LN14@maxMatchLe:
; Line 3658
	mov	eax, DWORD PTR _updatedLen$40339[ebp]
	mov	DWORD PTR _currentLen$[ebp], eax
; Line 3659
	mov	eax, DWORD PTR _loopEndLoc$40331[ebp]
	mov	DWORD PTR _loc$[ebp], eax
; Line 3660
	jmp	$LN34@maxMatchLe
$LN13@maxMatchLe:
; Line 3667
	xor	eax, eax
	jne	SHORT $LN49@maxMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 218				; 000000daH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@maxMatchLe:
; Line 3668
	jmp	$LN34@maxMatchLe
$LN12@maxMatchLe:
; Line 3674
	mov	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
; Line 3675
	jmp	$LN34@maxMatchLe
$LN11@maxMatchLe:
; Line 3684
	jmp	$LN34@maxMatchLe
$LN10@maxMatchLe:
; Line 3695
	mov	DWORD PTR _depth$40348[ebp], 0
$LN9@maxMatchLe:
; Line 3697
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
; Line 3698
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$[ebp], eax
; Line 3699
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 37					; 00000025H
	je	SHORT $LN6@maxMatchLe
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 44					; 0000002cH
	jne	SHORT $LN7@maxMatchLe
$LN6@maxMatchLe:
; Line 3700
	mov	eax, DWORD PTR _depth$40348[ebp]
	add	eax, 1
	mov	DWORD PTR _depth$40348[ebp], eax
$LN7@maxMatchLe:
; Line 3702
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 38					; 00000026H
	je	SHORT $LN4@maxMatchLe
	mov	eax, DWORD PTR _op$[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN5@maxMatchLe
$LN4@maxMatchLe:
; Line 3703
	cmp	DWORD PTR _depth$40348[ebp], 0
	jne	SHORT $LN3@maxMatchLe
; Line 3704
	jmp	SHORT $LN8@maxMatchLe
$LN3@maxMatchLe:
; Line 3706
	mov	eax, DWORD PTR _depth$40348[ebp]
	sub	eax, 1
	mov	DWORD PTR _depth$40348[ebp], eax
$LN5@maxMatchLe:
; Line 3708
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jl	SHORT $LN50@maxMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 259				; 00000103H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BE@IAIOFMOF@?$AAl?$AAo?$AAc?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@maxMatchLe:
; Line 3709
	jmp	$LN9@maxMatchLe
$LN8@maxMatchLe:
; Line 3711
	jmp	SHORT $LN34@maxMatchLe
$LN2@maxMatchLe:
; Line 3714
	xor	eax, eax
	jne	SHORT $LN34@maxMatchLe
	mov	ecx, DWORD PTR ?__LINE__Var@?1??maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z@4JA
	add	ecx, 265				; 00000109H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@maxMatchLe:
; Line 3718
	cmp	DWORD PTR _currentLen$[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN1@maxMatchLe
; Line 3721
	jmp	SHORT $LN37@maxMatchLe
$LN1@maxMatchLe:
; Line 3724
	jmp	$LN38@maxMatchLe
$LN37@maxMatchLe:
; Line 3725
	mov	eax, DWORD PTR _currentLen$[ebp]
	mov	DWORD PTR $T48238[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48238[ebp]
$LN44@maxMatchLe:
; Line 3727
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN58@maxMatchLe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 424				; 000001a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN58@maxMatchLe:
	DD	1
	DD	$LN57@maxMatchLe
$LN57@maxMatchLe:
	DD	-96					; ffffffa0H
	DD	20					; 00000014H
	DD	$LN55@maxMatchLe
$LN55@maxMatchLe:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	119					; 00000077H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN59@maxMatchLe:
	DD	$LN33@maxMatchLe
	DD	$LN24@maxMatchLe
	DD	$LN30@maxMatchLe
	DD	$LN19@maxMatchLe
	DD	$LN23@maxMatchLe
	DD	$LN31@maxMatchLe
	DD	$LN28@maxMatchLe
	DD	$LN32@maxMatchLe
	DD	$LN17@maxMatchLe
	DD	$LN13@maxMatchLe
	DD	$LN11@maxMatchLe
	DD	$LN18@maxMatchLe
	DD	$LN10@maxMatchLe
	DD	$LN12@maxMatchLe
	DD	$LN2@maxMatchLe
$LN53@maxMatchLe:
	DB	0
	DB	1
	DB	0
	DB	2
	DB	3
	DB	0
	DB	4
	DB	0
	DB	0
	DB	0
	DB	5
	DB	5
	DB	5
	DB	6
	DB	14					; 0000000eH
	DB	6
	DB	0
	DB	0
	DB	6
	DB	7
	DB	0
	DB	5
	DB	5
	DB	0
	DB	0
	DB	8
	DB	8
	DB	5
	DB	9
	DB	9
	DB	0
	DB	0
	DB	0
	DB	0
	DB	7
	DB	0
	DB	6
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	5
	DB	11					; 0000000bH
	DB	7
	DB	0
	DB	0
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	0
	DB	0
	DB	5
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	0
	DB	0
	DB	0
	DB	5
	DB	5
	DB	5
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _forwardedLength$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?maxMatchLength@RegexCompile@icu_56@@AAEHHH@Z ENDP	; icu_56::RegexCompile::maxMatchLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?safeIncrement@icu_56@@YAHHH@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_delta$ = 12						; size = 4
?safeIncrement@icu_56@@YAHHH@Z PROC			; icu_56::safeIncrement, COMDAT
; Line 3429
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3430
	mov	eax, 2147483647				; 7fffffffH
	sub	eax, DWORD PTR _val$[ebp]
	cmp	eax, DWORD PTR _delta$[ebp]
	jle	SHORT $LN2@safeIncrem
; Line 3431
	mov	eax, DWORD PTR _val$[ebp]
	add	eax, DWORD PTR _delta$[ebp]
	jmp	SHORT $LN3@safeIncrem
; Line 3432
	jmp	SHORT $LN3@safeIncrem
$LN2@safeIncrem:
; Line 3433
	mov	eax, 2147483647				; 7fffffffH
$LN3@safeIncrem:
; Line 3435
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?safeIncrement@icu_56@@YAHHH@Z ENDP			; icu_56::safeIncrement
_TEXT	ENDS
PUBLIC	??_C@_1GE@GIIODMM@?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?1??stripNOPs@RegexCompile@icu_56@@AAEXXZ@4JA ; `icu_56::RegexCompile::stripNOPs'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_1GE@GIIODMM@?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr@
CONST	SEGMENT
??_C@_1GE@GIIODMM@?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr@ DB 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'd', 00H
	DB	'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, '>', 00H, '=', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'd', 00H, 'A', 00H, 'd', 00H, 'd', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, '<', 00H, 'd', 00H, 'e', 00H, 'l', 00H, 't'
	DB	00H, 'a', 00H, 's', 00H, '.', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??stripNOPs@RegexCompile@icu_56@@AAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??stripNOPs@RegexCompile@icu_56@@AAEXXZ@4JA DD 0e9eH ; `icu_56::RegexCompile::stripNOPs'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?stripNOPs@RegexCompile@icu_56@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?stripNOPs@RegexCompile@icu_56@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?stripNOPs@RegexCompile@icu_56@@AAEXXZ$1
__ehfuncinfo$?stripNOPs@RegexCompile@icu_56@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?stripNOPs@RegexCompile@icu_56@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?stripNOPs@RegexCompile@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv139 = -456						; size = 4
_where$40405 = -256					; size = 4
_fixedOperandAddress$40403 = -244			; size = 4
_operandAddress$40399 = -232				; size = 4
_opType$40391 = -220					; size = 4
_op$40389 = -208					; size = 4
_dst$ = -196						; size = 4
_src$ = -184						; size = 4
_caseStringBuffer$ = -172				; size = 64
_op$40379 = -100					; size = 4
_d$ = -88						; size = 4
_loc$ = -76						; size = 4
_deltas$ = -64						; size = 20
_end$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?stripNOPs@RegexCompile@icu_56@@AAEXXZ PROC		; icu_56::RegexCompile::stripNOPs, COMDAT
; _this$ = ecx
; Line 3742
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?stripNOPs@RegexCompile@icu_56@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 3744
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@stripNOPs
; Line 3745
	jmp	$LN17@stripNOPs
$LN16@stripNOPs:
; Line 3748
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector64@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$[ebp], eax
; Line 3749
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	push	edx
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 3754
	mov	DWORD PTR _d$[ebp], 0
; Line 3755
	mov	DWORD PTR _loc$[ebp], 0
	jmp	SHORT $LN15@stripNOPs
$LN14@stripNOPs:
	mov	eax, DWORD PTR _loc$[ebp]
	add	eax, 1
	mov	DWORD PTR _loc$[ebp], eax
$LN15@stripNOPs:
	mov	eax, DWORD PTR _loc$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jge	SHORT $LN13@stripNOPs
; Line 3756
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _d$[ebp]
	push	edx
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3757
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$40379[ebp], eax
; Line 3758
	mov	eax, DWORD PTR _op$40379[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 7
	jne	SHORT $LN12@stripNOPs
; Line 3759
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, 1
	mov	DWORD PTR _d$[ebp], eax
$LN12@stripNOPs:
; Line 3761
	jmp	SHORT $LN14@stripNOPs
$LN13@stripNOPs:
; Line 3763
	mov	esi, esp
	lea	ecx, DWORD PTR _caseStringBuffer$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 3770
	mov	DWORD PTR _dst$[ebp], 0
; Line 3771
	mov	DWORD PTR _src$[ebp], 0
	jmp	SHORT $LN11@stripNOPs
$LN10@stripNOPs:
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
$LN11@stripNOPs:
	mov	eax, DWORD PTR _src$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jge	$LN9@stripNOPs
; Line 3772
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?elementAti@UVector64@icu_56@@QBE_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _op$40389[ebp], eax
; Line 3773
	mov	eax, DWORD PTR _op$40389[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _opType$40391[ebp], eax
; Line 3774
	mov	eax, DWORD PTR _opType$40391[ebp]
	mov	DWORD PTR tv139[ebp], eax
	cmp	DWORD PTR tv139[ebp], 255		; 000000ffH
	jg	SHORT $LN22@stripNOPs
	cmp	DWORD PTR tv139[ebp], 255		; 000000ffH
	je	$LN2@stripNOPs
	cmp	DWORD PTR tv139[ebp], 58		; 0000003aH
	ja	$LN1@stripNOPs
	mov	ecx, DWORD PTR tv139[ebp]
	movzx	edx, BYTE PTR $LN25@stripNOPs[ecx]
	jmp	DWORD PTR $LN31@stripNOPs[edx*4]
$LN22@stripNOPs:
	jmp	$LN1@stripNOPs
$LN6@stripNOPs:
; Line 3776
	jmp	$LN7@stripNOPs
$LN5@stripNOPs:
; Line 3788
	mov	eax, DWORD PTR _op$40389[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _operandAddress$40399[ebp], eax
; Line 3789
	jl	SHORT $LN19@stripNOPs
	mov	esi, esp
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _operandAddress$40399[ebp], eax
	jl	SHORT $LN20@stripNOPs
$LN19@stripNOPs:
	mov	eax, DWORD PTR ?__LINE__Var@?1??stripNOPs@RegexCompile@icu_56@@AAEXXZ@4JA
	add	eax, 47					; 0000002fH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GE@GIIODMM@?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAn?$AAd?$AAA?$AAd?$AAd?$AAr@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@stripNOPs:
; Line 3790
	mov	esi, esp
	mov	eax, DWORD PTR _operandAddress$40399[ebp]
	push	eax
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _operandAddress$40399[ebp]
	sub	ecx, eax
	mov	DWORD PTR _fixedOperandAddress$40403[ebp], ecx
; Line 3791
	mov	eax, DWORD PTR _fixedOperandAddress$40403[ebp]
	push	eax
	mov	ecx, DWORD PTR _opType$40391[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$40389[ebp], eax
; Line 3792
	mov	esi, esp
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	mov	eax, DWORD PTR _op$40389[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3793
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax
; Line 3794
	jmp	$LN7@stripNOPs
$LN4@stripNOPs:
; Line 3800
	mov	eax, DWORD PTR _op$40389[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _where$40405[ebp], eax
; Line 3801
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+108]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _where$40405[ebp], eax
	jle	SHORT $LN3@stripNOPs
; Line 3802
	push	66314					; 0001030aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 3803
	jmp	$LN7@stripNOPs
$LN3@stripNOPs:
; Line 3805
	mov	eax, DWORD PTR _where$40405[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+108]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _where$40405[ebp], eax
; Line 3806
	mov	eax, DWORD PTR _where$40405[ebp]
	push	eax
	mov	ecx, DWORD PTR _opType$40391[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?buildOp@RegexCompile@icu_56@@AAEHHH@Z	; icu_56::RegexCompile::buildOp
	mov	DWORD PTR _op$40389[ebp], eax
; Line 3807
	mov	esi, esp
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	mov	eax, DWORD PTR _op$40389[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3808
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax
; Line 3810
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	BYTE PTR [ecx+144], 1
; Line 3811
	jmp	SHORT $LN7@stripNOPs
$LN2@stripNOPs:
; Line 3863
	mov	esi, esp
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	mov	eax, DWORD PTR _op$40389[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setElementAt@UVector64@icu_56@@QAEX_JH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3864
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax
; Line 3865
	jmp	SHORT $LN7@stripNOPs
$LN1@stripNOPs:
; Line 3869
	xor	eax, eax
	jne	SHORT $LN21@stripNOPs
	mov	ecx, DWORD PTR ?__LINE__Var@?1??stripNOPs@RegexCompile@icu_56@@AAEXXZ@4JA
	add	ecx, 127				; 0000007fH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@stripNOPs:
; Line 3870
	push	66304					; 00010300H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN7@stripNOPs:
; Line 3872
	jmp	$LN10@stripNOPs
$LN9@stripNOPs:
; Line 3874
	mov	esi, esp
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?setSize@UVector64@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3875
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _caseStringBuffer$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@stripNOPs:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@stripNOPs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN30@stripNOPs:
	DD	2
	DD	$LN29@stripNOPs
$LN29@stripNOPs:
	DD	-64					; ffffffc0H
	DD	20					; 00000014H
	DD	$LN26@stripNOPs
	DD	-172					; ffffff54H
	DD	64					; 00000040H
	DD	$LN27@stripNOPs
$LN27@stripNOPs:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN26@stripNOPs:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN31@stripNOPs:
	DD	$LN2@stripNOPs
	DD	$LN5@stripNOPs
	DD	$LN6@stripNOPs
	DD	$LN4@stripNOPs
$LN25@stripNOPs:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	2
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	0
	DB	1
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	0
	DB	0
	DB	3
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	3
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?stripNOPs@RegexCompile@icu_56@@AAEXXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _deltas$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?stripNOPs@RegexCompile@icu_56@@AAEXXZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _caseStringBuffer$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?stripNOPs@RegexCompile@icu_56@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?stripNOPs@RegexCompile@icu_56@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?stripNOPs@RegexCompile@icu_56@@AAEXXZ ENDP		; icu_56::RegexCompile::stripNOPs
EXTRN	_utext_extract_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z
_TEXT	SEGMENT
tv187 = -220						; size = 4
tv179 = -220						; size = 4
_status$40422 = -20					; size = 4
_this$ = -8						; size = 4
_e$ = 8							; size = 4
?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z PROC	; icu_56::RegexCompile::error, COMDAT
; _this$ = ecx
; Line 3886
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3887
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	$LN6@error
; Line 3888
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 3893
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv179[ebp], eax
	mov	ecx, DWORD PTR tv179[ebp]
	cmp	DWORD PTR [ecx+44], 0
	jl	SHORT $LN4@error
	jg	SHORT $LN8@error
	mov	edx, DWORD PTR tv179[ebp]
	cmp	DWORD PTR [edx+40], 2147483647		; 7fffffffH
	jbe	SHORT $LN4@error
$LN8@error:
; Line 3894
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 0
; Line 3895
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+4], -1
	jmp	SHORT $LN3@error
$LN4@error:
; Line 3896
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	ecx, DWORD PTR tv187[ebp]
	cmp	DWORD PTR [ecx+52], 0
	jl	SHORT $LN2@error
	jg	SHORT $LN9@error
	mov	edx, DWORD PTR tv187[ebp]
	cmp	DWORD PTR [edx+48], 2147483647		; 7fffffffH
	jbe	SHORT $LN2@error
$LN9@error:
; Line 3897
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax], ecx
; Line 3898
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+4], -1
; Line 3899
	jmp	SHORT $LN3@error
$LN2@error:
; Line 3900
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax], ecx
; Line 3901
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+4], ecx
$LN3@error:
; Line 3904
	mov	DWORD PTR _status$40422[ebp], 0
; Line 3908
	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 8
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3909
	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 40					; 00000028H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3910
	lea	eax, DWORD PTR _status$40422[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR [eax+28]
	sbb	edx, 0
	add	ecx, 1
	adc	edx, 0
	push	edx
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_extract_56
	add	esp, 32					; 00000020H
; Line 3911
	lea	eax, DWORD PTR _status$40422[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR [eax+28]
	adc	edx, 0
	sub	ecx, 1
	sbb	edx, 0
	push	edx
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_extract_56
	add	esp, 32					; 00000020H
$LN6@error:
; Line 3913
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@error
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN12@error:
	DD	1
	DD	$LN11@error
$LN11@error:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@error
$LN10@error:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ENDP	; icu_56::RegexCompile::error
_TEXT	ENDS
EXTRN	_utext_next32_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextCharLL@RegexCompile@icu_56@@AAEHXZ
_TEXT	SEGMENT
tv137 = -220						; size = 4
_ch$ = -20						; size = 4
_this$ = -8						; size = 4
?nextCharLL@RegexCompile@icu_56@@AAEHXZ PROC		; icu_56::RegexCompile::nextCharLL, COMDAT
; _this$ = ecx
; Line 3949
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3952
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], -1
	je	SHORT $LN6@nextCharLL
; Line 3953
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _ch$[ebp], ecx
; Line 3954
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], -1
; Line 3955
	mov	eax, DWORD PTR _ch$[ebp]
	jmp	$LN7@nextCharLL
$LN6@nextCharLL:
; Line 3959
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+44]
	jge	SHORT $LN9@nextCharLL
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [ecx+48]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 55296				; 0000d800H
	jge	SHORT $LN9@nextCharLL
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [edx+48]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+40], ecx
	jmp	SHORT $LN10@nextCharLL
$LN9@nextCharLL:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_next32_56
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
$LN10@nextCharLL:
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR _ch$[ebp], eax
; Line 3960
	cmp	DWORD PTR _ch$[ebp], -1
	jne	SHORT $LN5@nextCharLL
; Line 3961
	mov	eax, DWORD PTR _ch$[ebp]
	jmp	SHORT $LN7@nextCharLL
$LN5@nextCharLL:
; Line 3967
	cmp	DWORD PTR _ch$[ebp], 13			; 0000000dH
	je	SHORT $LN3@nextCharLL
	cmp	DWORD PTR _ch$[ebp], 133		; 00000085H
	je	SHORT $LN3@nextCharLL
	cmp	DWORD PTR _ch$[ebp], 8232		; 00002028H
	je	SHORT $LN3@nextCharLL
	cmp	DWORD PTR _ch$[ebp], 10			; 0000000aH
	jne	SHORT $LN4@nextCharLL
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 13			; 0000000dH
	je	SHORT $LN4@nextCharLL
$LN3@nextCharLL:
; Line 3970
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+44]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx
; Line 3971
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 0
; Line 3973
	jmp	SHORT $LN2@nextCharLL
$LN4@nextCharLL:
; Line 3976
	cmp	DWORD PTR _ch$[ebp], 10			; 0000000aH
	je	SHORT $LN2@nextCharLL
; Line 3977
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+52]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx
$LN2@nextCharLL:
; Line 3980
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 3981
	mov	eax, DWORD PTR _ch$[ebp]
$LN7@nextCharLL:
; Line 3982
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?nextCharLL@RegexCompile@icu_56@@AAEHXZ ENDP		; icu_56::RegexCompile::nextCharLL
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?peekCharLL@RegexCompile@icu_56@@AAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?peekCharLL@RegexCompile@icu_56@@AAEHXZ PROC		; icu_56::RegexCompile::peekCharLL, COMDAT
; _this$ = ecx
; Line 3990
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3991
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], -1
	jne	SHORT $LN1@peekCharLL
; Line 3992
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
$LN1@peekCharLL:
; Line 3994
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
; Line 3995
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peekCharLL@RegexCompile@icu_56@@AAEHXZ ENDP		; icu_56::RegexCompile::peekCharLL
_TEXT	ENDS
EXTRN	_utext_moveIndex32_56:PROC
EXTRN	_utext_previous32_56:PROC
EXTRN	_uregex_utext_unescape_charAt_56:PROC
EXTRN	_utext_setNativeIndex_56:PROC
EXTRN	_u_unescapeAt_56:PROC
EXTRN	_uregex_ucstr_unescape_charAt_56:PROC
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z
_TEXT	SEGMENT
tv561 = -328						; size = 8
tv659 = -324						; size = 8
tv623 = -324						; size = 8
tv581 = -324						; size = 8
tv544 = -324						; size = 4
tv323 = -324						; size = 4
tv189 = -324						; size = 8
tv88 = -324						; size = 8
tv560 = -320						; size = 4
tv543 = -320						; size = 4
tv537 = -320						; size = 4
tv315 = -320						; size = 4
_ch$40513 = -120					; size = 4
_index$40509 = -108					; size = 4
___offset$40497 = -96					; size = 8
_context$40496 = -80					; size = 8
_offset$40495 = -64					; size = 4
___offset$40489 = -52					; size = 8
_endIndex$40484 = -36					; size = 4
_pos$40481 = -24					; size = 8
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z PROC ; icu_56::RegexCompile::nextChar, COMDAT
; _this$ = ecx
; Line 4005
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4007
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN47@nextChar
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR tv88[ebp+4], edx
	jmp	SHORT $LN48@nextChar
$LN47@nextChar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR tv88[ebp+4], edx
$LN48@nextChar:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	ecx, DWORD PTR tv88[ebp+4]
	mov	DWORD PTR [edx+28], ecx
; Line 4008
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 4009
	mov	eax, DWORD PTR _c$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 4011
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN44@nextChar
; Line 4012
	mov	eax, DWORD PTR _c$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 4014
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 92			; 0000005cH
	jne	SHORT $LN41@nextChar
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	cmp	eax, 69					; 00000045H
	jne	SHORT $LN41@nextChar
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 16					; 00000010H
	je	SHORT $LN42@nextChar
$LN41@nextChar:
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN43@nextChar
$LN42@nextChar:
; Line 4015
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0
; Line 4016
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 4017
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
$LN43@nextChar:
; Line 4019
	jmp	$LN40@nextChar
$LN44@nextChar:
; Line 4020
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	SHORT $LN39@nextChar
; Line 4025
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 0
; Line 4027
	jmp	$LN40@nextChar
$LN39@nextChar:
; Line 4031
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 4
	je	$LN37@nextChar
$LN36@nextChar:
; Line 4037
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN34@nextChar
; Line 4038
	jmp	$LN37@nextChar
$LN34@nextChar:
; Line 4040
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 35			; 00000023H
	jne	SHORT $LN33@nextChar
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+34]
	cmp	ecx, 1
	jne	SHORT $LN33@nextChar
$LN32@nextChar:
; Line 4043
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 4048
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN29@nextChar
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 13			; 0000000dH
	je	SHORT $LN29@nextChar
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 10			; 0000000aH
	je	SHORT $LN29@nextChar
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 133			; 00000085H
	je	SHORT $LN29@nextChar
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 8232			; 00002028H
	jne	SHORT $LN30@nextChar
$LN29@nextChar:
; Line 4049
	jmp	SHORT $LN33@nextChar
$LN30@nextChar:
; Line 4051
	jmp	SHORT $LN32@nextChar
$LN33@nextChar:
; Line 4054
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN28@nextChar
; Line 4055
	jmp	SHORT $LN37@nextChar
$LN28@nextChar:
; Line 4057
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 4058
	jmp	$LN36@nextChar
$LN37@nextChar:
; Line 4064
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 92			; 0000005cH
	jne	$LN40@nextChar
; Line 4065
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN49@nextChar
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv189[ebp], eax
	mov	DWORD PTR tv189[ebp+4], edx
	jmp	SHORT $LN50@nextChar
$LN49@nextChar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	mov	DWORD PTR tv189[ebp+4], edx
$LN50@nextChar:
	mov	edx, DWORD PTR tv189[ebp]
	mov	DWORD PTR _pos$40481[ebp], edx
	mov	eax, DWORD PTR tv189[ebp+4]
	mov	DWORD PTR _pos$40481[ebp+4], eax
; Line 4066
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	add	ecx, 988				; 000003dcH
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	edx, DWORD PTR [eax+988]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN26@nextChar
; Line 4072
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 4073
	mov	eax, DWORD PTR _c$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 4075
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv537[ebp], edx
	mov	eax, DWORD PTR tv537[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN25@nextChar
	mov	ecx, DWORD PTR tv537[ebp]
	cmp	DWORD PTR [ecx+36], 0
	jne	$LN25@nextChar
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv543[ebp], eax
	mov	DWORD PTR tv544[ebp], edx
	mov	ecx, DWORD PTR tv543[ebp]
	mov	edx, DWORD PTR tv544[ebp]
	mov	eax, DWORD PTR [ecx+360]
	cmp	eax, DWORD PTR [edx+16]
	jne	$LN25@nextChar
	mov	ecx, DWORD PTR tv543[ebp]
	mov	edx, DWORD PTR tv544[ebp]
	mov	eax, DWORD PTR [ecx+364]
	cmp	eax, DWORD PTR [edx+20]
	jne	$LN25@nextChar
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+28]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv560[ebp], ecx
	mov	DWORD PTR tv561[ebp], eax
	mov	DWORD PTR tv561[ebp+4], edx
	mov	edx, DWORD PTR tv560[ebp]
	mov	eax, DWORD PTR [edx+360]
	cmp	eax, DWORD PTR tv561[ebp]
	jne	$LN25@nextChar
	mov	ecx, DWORD PTR tv560[ebp]
	mov	edx, DWORD PTR [ecx+364]
	cmp	edx, DWORD PTR tv561[ebp+4]
	jne	$LN25@nextChar
; Line 4076
	mov	eax, DWORD PTR _pos$40481[ebp]
	mov	DWORD PTR _endIndex$40484[ebp], eax
; Line 4077
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	lea	eax, DWORD PTR _endIndex$40484[ebp]
	push	eax
	push	OFFSET _uregex_ucstr_unescape_charAt_56
	call	_u_unescapeAt_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 4079
	mov	eax, DWORD PTR _endIndex$40484[ebp]
	cdq
	mov	DWORD PTR tv581[ebp], eax
	mov	DWORD PTR tv581[ebp+4], edx
	mov	eax, DWORD PTR tv581[ebp]
	cmp	eax, DWORD PTR _pos$40481[ebp]
	jne	SHORT $LN24@nextChar
	mov	ecx, DWORD PTR tv581[ebp+4]
	cmp	ecx, DWORD PTR _pos$40481[ebp+4]
	jne	SHORT $LN24@nextChar
; Line 4080
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN24@nextChar:
; Line 4082
	mov	eax, DWORD PTR _endIndex$40484[ebp]
	cdq
	sub	eax, DWORD PTR _pos$40481[ebp]
	sbb	edx, DWORD PTR _pos$40481[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+48]
	adc	edx, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
	mov	DWORD PTR [ecx+52], edx
; Line 4083
	mov	eax, DWORD PTR _endIndex$40484[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx+32]
	sbb	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$40489[ebp], eax
	mov	DWORD PTR ___offset$40489[ebp+4], edx
	cmp	DWORD PTR ___offset$40489[ebp+4], 0
	jl	SHORT $LN23@nextChar
	jg	SHORT $LN53@nextChar
	cmp	DWORD PTR ___offset$40489[ebp], 0
	jb	SHORT $LN23@nextChar
$LN53@nextChar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+28]
	cdq
	mov	DWORD PTR tv623[ebp], eax
	mov	DWORD PTR tv623[ebp+4], edx
	mov	eax, DWORD PTR ___offset$40489[ebp+4]
	cmp	eax, DWORD PTR tv623[ebp+4]
	jg	SHORT $LN23@nextChar
	jl	SHORT $LN54@nextChar
	mov	ecx, DWORD PTR ___offset$40489[ebp]
	cmp	ecx, DWORD PTR tv623[ebp]
	ja	SHORT $LN23@nextChar
$LN54@nextChar:
	mov	eax, DWORD PTR ___offset$40489[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+40], eax
	jmp	SHORT $LN22@nextChar
$LN23@nextChar:
	mov	eax, DWORD PTR _endIndex$40484[ebp]
	cdq
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN22@nextChar:
; Line 4084
	jmp	$LN21@nextChar
$LN25@nextChar:
; Line 4085
	mov	DWORD PTR _offset$40495[ebp], 0
; Line 4086
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _context$40496[ebp], edx
	mov	DWORD PTR _context$40496[ebp+4], -1
; Line 4088
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _pos$40481[ebp]
	sub	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _pos$40481[ebp+4]
	sbb	ecx, DWORD PTR [edx+36]
	mov	DWORD PTR ___offset$40497[ebp], eax
	mov	DWORD PTR ___offset$40497[ebp+4], ecx
	cmp	DWORD PTR ___offset$40497[ebp+4], 0
	jl	SHORT $LN20@nextChar
	jg	SHORT $LN55@nextChar
	cmp	DWORD PTR ___offset$40497[ebp], 0
	jb	SHORT $LN20@nextChar
$LN55@nextChar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+28]
	cdq
	mov	DWORD PTR tv659[ebp], eax
	mov	DWORD PTR tv659[ebp+4], edx
	mov	eax, DWORD PTR ___offset$40497[ebp+4]
	cmp	eax, DWORD PTR tv659[ebp+4]
	jg	SHORT $LN20@nextChar
	jl	SHORT $LN56@nextChar
	mov	ecx, DWORD PTR ___offset$40497[ebp]
	cmp	ecx, DWORD PTR tv659[ebp]
	ja	SHORT $LN20@nextChar
$LN56@nextChar:
	mov	eax, DWORD PTR ___offset$40497[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+40], eax
	jmp	SHORT $LN19@nextChar
$LN20@nextChar:
	mov	eax, DWORD PTR _pos$40481[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pos$40481[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN19@nextChar:
; Line 4089
	lea	eax, DWORD PTR _context$40496[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	lea	ecx, DWORD PTR _offset$40495[ebp]
	push	ecx
	push	OFFSET _uregex_utext_unescape_charAt_56
	call	_u_unescapeAt_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 4091
	cmp	DWORD PTR _offset$40495[ebp], 0
	jne	SHORT $LN18@nextChar
; Line 4092
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
	jmp	$LN17@nextChar
$LN18@nextChar:
; Line 4093
	mov	eax, DWORD PTR _context$40496[ebp+4]
	cmp	eax, DWORD PTR _offset$40495[ebp]
	jne	$LN16@nextChar
; Line 4094
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+40], 0
	jle	SHORT $LN51@nextChar
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [edx+48]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 55296				; 0000d800H
	jge	SHORT $LN51@nextChar
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+40]
	sub	ecx, 1
	mov	DWORD PTR tv315[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR tv315[ebp]
	mov	DWORD PTR [ecx+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, DWORD PTR tv315[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR tv323[ebp], edx
	jmp	SHORT $LN52@nextChar
$LN51@nextChar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_utext_previous32_56
	add	esp, 4
	mov	DWORD PTR tv323[ebp], eax
$LN52@nextChar:
; Line 4095
	jmp	SHORT $LN17@nextChar
$LN16@nextChar:
	mov	eax, DWORD PTR _offset$40495[ebp]
	sub	eax, 1
	cmp	DWORD PTR _context$40496[ebp+4], eax
	je	SHORT $LN17@nextChar
; Line 4096
	mov	eax, DWORD PTR _offset$40495[ebp]
	sub	eax, DWORD PTR _context$40496[ebp+4]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_utext_moveIndex32_56
	add	esp, 8
$LN17@nextChar:
; Line 4098
	mov	eax, DWORD PTR _offset$40495[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+48]
	adc	edx, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
	mov	DWORD PTR [ecx+52], edx
$LN21@nextChar:
; Line 4099
	jmp	$LN40@nextChar
$LN26@nextChar:
; Line 4101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	cmp	eax, 48					; 00000030H
	jne	$LN12@nextChar
; Line 4109
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax], 0
; Line 4110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 4112
	mov	DWORD PTR _index$40509[ebp], 0
	jmp	SHORT $LN11@nextChar
$LN10@nextChar:
	mov	eax, DWORD PTR _index$40509[ebp]
	add	eax, 1
	mov	DWORD PTR _index$40509[ebp], eax
$LN11@nextChar:
	cmp	DWORD PTR _index$40509[ebp], 3
	jge	SHORT $LN9@nextChar
; Line 4113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	mov	DWORD PTR _ch$40513[ebp], eax
; Line 4114
	cmp	DWORD PTR _ch$40513[ebp], 48		; 00000030H
	jl	SHORT $LN7@nextChar
	cmp	DWORD PTR _ch$40513[ebp], 55		; 00000037H
	jle	SHORT $LN8@nextChar
$LN7@nextChar:
; Line 4115
	cmp	DWORD PTR _index$40509[ebp], 0
	jne	SHORT $LN6@nextChar
; Line 4117
	push	66307					; 00010303H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN6@nextChar:
; Line 4119
	jmp	SHORT $LN9@nextChar
$LN8@nextChar:
; Line 4121
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 3
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 4122
	mov	eax, DWORD PTR _ch$40513[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], eax
; Line 4123
	mov	eax, DWORD PTR _c$[ebp]
	cmp	DWORD PTR [eax], 255			; 000000ffH
	jg	SHORT $LN5@nextChar
; Line 4124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 4125
	jmp	SHORT $LN4@nextChar
$LN5@nextChar:
; Line 4127
	mov	eax, DWORD PTR _c$[ebp]
	mov	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@nextChar:
; Line 4129
	jmp	SHORT $LN10@nextChar
$LN9@nextChar:
; Line 4130
	mov	eax, DWORD PTR _c$[ebp]
	mov	BYTE PTR [eax+4], 1
	jmp	SHORT $LN40@nextChar
$LN12@nextChar:
; Line 4132
	mov	ecx, DWORD PTR _this$[ebp]
	call	?peekCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::peekCharLL
	cmp	eax, 81					; 00000051H
	jne	SHORT $LN2@nextChar
; Line 4134
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
; Line 4135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCharLL@RegexCompile@icu_56@@AAEHXZ	; icu_56::RegexCompile::nextCharLL
; Line 4136
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4138
	jmp	SHORT $LN40@nextChar
$LN2@nextChar:
; Line 4143
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 1
$LN40@nextChar:
; Line 4151
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+34], 1
; Line 4154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN61@nextChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN61@nextChar:
	DD	3
	DD	$LN60@nextChar
$LN60@nextChar:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN57@nextChar
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN58@nextChar
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN59@nextChar
$LN59@nextChar:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN58@nextChar:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN57@nextChar:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ENDP ; icu_56::RegexCompile::nextChar
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_u_charFromName_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ$0
__ehfuncinfo$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?scanNamedChar@RegexCompile@icu_56@@AAEHXZ
_TEXT	SEGMENT
$T48308 = -444						; size = 4
$T48309 = -432						; size = 4
$T48310 = -420						; size = 4
_theChar$ = -216					; size = 4
_name$ = -204						; size = 100
_charName$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?scanNamedChar@RegexCompile@icu_56@@AAEHXZ PROC		; icu_56::RegexCompile::scanNamedChar, COMDAT
; _this$ = ecx
; Line 4169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 4170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@scanNamedC
; Line 4171
	xor	eax, eax
	jmp	$LN10@scanNamedC
$LN9@scanNamedC:
; Line 4174
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4175
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 123			; 0000007bH
	je	SHORT $LN8@scanNamedC
; Line 4176
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4177
	xor	eax, eax
	jmp	$LN10@scanNamedC
$LN8@scanNamedC:
; Line 4180
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN7@scanNamedC:
; Line 4182
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 125			; 0000007dH
	jne	SHORT $LN5@scanNamedC
; Line 4184
	jmp	SHORT $LN6@scanNamedC
$LN5@scanNamedC:
; Line 4186
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], -1
	jne	SHORT $LN4@scanNamedC
; Line 4187
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4188
	mov	DWORD PTR $T48308[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48308[ebp]
	jmp	$LN10@scanNamedC
$LN4@scanNamedC:
; Line 4190
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4191
	jmp	SHORT $LN7@scanNamedC
$LN6@scanNamedC:
; Line 4195
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@scanNamedC
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 100				; 00000064H
	jb	SHORT $LN3@scanNamedC
$LN2@scanNamedC:
; Line 4199
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4200
	mov	DWORD PTR $T48309[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48309[ebp]
	jmp	$LN10@scanNamedC
$LN3@scanNamedC:
; Line 4202
	mov	esi, esp
	push	0
	push	100					; 00000064H
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	push	0
	call	_u_charFromName_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _theChar$[ebp], eax
; Line 4205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@scanNamedC
; Line 4206
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
$LN1@scanNamedC:
; Line 4209
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4210
	mov	eax, DWORD PTR _theChar$[ebp]
	mov	DWORD PTR $T48310[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48310[ebp]
$LN10@scanNamedC:
; Line 4211
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@scanNamedC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@scanNamedC:
	DD	2
	DD	$LN16@scanNamedC
$LN16@scanNamedC:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN13@scanNamedC
	DD	-204					; ffffff34H
	DD	100					; 00000064H
	DD	$LN14@scanNamedC
$LN14@scanNamedC:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN13@scanNamedC:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _charName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-452]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?scanNamedChar@RegexCompile@icu_56@@AAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?scanNamedChar@RegexCompile@icu_56@@AAEHXZ ENDP		; icu_56::RegexCompile::scanNamedChar
PUBLIC	?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z ; icu_56::RegexCompile::createSetForProperty
PUBLIC	??_C@_1FA@PCPDBMBL@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAL?$AAo?$AAw?$AAe?$AAr?$AAP?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?1??scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA ; `icu_56::RegexCompile::scanProp'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_1FA@PCPDBMBL@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAL?$AAo?$AAw?$AAe?$AAr?$AAP?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr@
CONST	SEGMENT
??_C@_1FA@PCPDBMBL@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAL?$AAo?$AAw?$AAe?$AAr?$AAP?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr@ DB 'f'
	DB	00H, 'C', 00H, '.', 00H, 'f', 00H, 'C', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'L', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'P', 00H
	DB	' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'f', 00H, 'C', 00H, '.'
	DB	00H, 'f', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'P', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA DD 01081H ; `icu_56::RegexCompile::scanProp'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ$0
__ehfuncinfo$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
_TEXT	SEGMENT
$T48326 = -348						; size = 4
$T48327 = -336						; size = 4
$T48328 = -324						; size = 4
_propertyName$ = -120					; size = 64
_negated$ = -45						; size = 1
_uset$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ PROC ; icu_56::RegexCompile::scanProp, COMDAT
; _this$ = ecx
; Line 4225
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 4226
	mov	DWORD PTR _uset$[ebp], 0
; Line 4228
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@scanProp
; Line 4229
	xor	eax, eax
	jmp	$LN7@scanProp
$LN6@scanProp:
; Line 4232
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 112			; 00000070H
	je	SHORT $LN9@scanProp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+64], 80			; 00000050H
	je	SHORT $LN9@scanProp
	mov	edx, DWORD PTR ?__LINE__Var@?1??scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA
	add	edx, 7
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FA@PCPDBMBL@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAL?$AAo?$AAw?$AAe?$AAr?$AAP?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@scanProp:
; Line 4233
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 80			; 00000050H
	sete	cl
	mov	BYTE PTR _negated$[ebp], cl
; Line 4235
	mov	esi, esp
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 4236
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4237
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 123			; 0000007bH
	je	SHORT $LN4@scanProp
; Line 4238
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4239
	mov	DWORD PTR $T48326[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48326[ebp]
	jmp	$LN7@scanProp
$LN4@scanProp:
; Line 4242
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4243
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 125			; 0000007dH
	jne	SHORT $LN2@scanProp
; Line 4244
	jmp	SHORT $LN3@scanProp
$LN2@scanProp:
; Line 4246
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], -1
	jne	SHORT $LN1@scanProp
; Line 4248
	push	66308					; 00010304H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4249
	mov	DWORD PTR $T48327[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48327[ebp]
	jmp	SHORT $LN7@scanProp
$LN1@scanProp:
; Line 4251
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4252
	jmp	SHORT $LN4@scanProp
$LN3@scanProp:
; Line 4253
	movzx	eax, BYTE PTR _negated$[ebp]
	push	eax
	lea	ecx, DWORD PTR _propertyName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z ; icu_56::RegexCompile::createSetForProperty
	mov	DWORD PTR _uset$[ebp], eax
; Line 4254
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4255
	mov	eax, DWORD PTR _uset$[ebp]
	mov	DWORD PTR $T48328[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48328[ebp]
$LN7@scanProp:
; Line 4256
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@scanProp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@scanProp:
	DD	1
	DD	$LN13@scanProp
$LN13@scanProp:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN11@scanProp
$LN11@scanProp:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?scanProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ENDP ; icu_56::RegexCompile::scanProp
PUBLIC	??_C@_1CI@MGBMAEKE@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAC?$AAo?$AAl?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA ; `icu_56::RegexCompile::scanPosixProp'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_1CI@MGBMAEKE@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAC?$AAo?$AAl?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@MGBMAEKE@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAC?$AAo?$AAl?$AAo?$AAn?$AA?$AA@ DB 'f'
	DB	00H, 'C', 00H, '.', 00H, 'f', 00H, 'C', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'c', 00H, 'h'
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA DD 010b5H ; `icu_56::RegexCompile::scanPosixProp'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ$0
__ehfuncinfo$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
_TEXT	SEGMENT
tv392 = -504						; size = 8
tv134 = -504						; size = 8
$T48345 = -492						; size = 4
___offset$40593 = -288					; size = 8
_sawPropSetTerminator$ = -269				; size = 1
_negated$ = -257					; size = 1
_propName$ = -248					; size = 64
_savedfC$ = -176					; size = 8
_savedPeekChar$ = -160					; size = 4
_savedLastChar$ = -148					; size = 4
_savedCharNum$ = -136					; size = 8
_savedLineNum$ = -120					; size = 8
_savedEOLComments$ = -101				; size = 1
_savedInBackslashQuote$ = -89				; size = 1
_savedQuoteMode$ = -77					; size = 1
_savedNextIndex$ = -68					; size = 8
_savedScanIndex$ = -52					; size = 8
_uset$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ PROC ; icu_56::RegexCompile::scanPosixProp, COMDAT
; _this$ = ecx
; Line 4277
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-504]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 4278
	mov	DWORD PTR _uset$[ebp], 0
; Line 4280
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@scanPosixP
; Line 4281
	xor	eax, eax
	jmp	$LN13@scanPosixP
$LN12@scanPosixP:
; Line 4284
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 58			; 0000003aH
	je	SHORT $LN15@scanPosixP
	mov	ecx, DWORD PTR ?__LINE__Var@?1??scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@XZ@4JA
	add	ecx, 7
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CI@MGBMAEKE@?$AAf?$AAC?$AA?4?$AAf?$AAC?$AAh?$AAa?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAh?$AAC?$AAo?$AAl?$AAo?$AAn?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@scanPosixP:
; Line 4288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _savedScanIndex$[ebp], ecx
	mov	edx, DWORD PTR [eax+28]
	mov	DWORD PTR _savedScanIndex$[ebp+4], edx
; Line 4289
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+28]
	jg	SHORT $LN16@scanPosixP
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+40]
	cdq
	add	eax, DWORD PTR [ecx+32]
	adc	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv134[ebp], eax
	mov	DWORD PTR tv134[ebp+4], edx
	jmp	SHORT $LN17@scanPosixP
$LN16@scanPosixP:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	mov	DWORD PTR tv134[ebp+4], edx
$LN17@scanPosixP:
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR _savedNextIndex$[ebp], edx
	mov	eax, DWORD PTR tv134[ebp+4]
	mov	DWORD PTR _savedNextIndex$[ebp+4], eax
; Line 4290
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+32]
	mov	BYTE PTR _savedQuoteMode$[ebp], cl
; Line 4291
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+33]
	mov	BYTE PTR _savedInBackslashQuote$[ebp], cl
; Line 4292
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+34]
	mov	BYTE PTR _savedEOLComments$[ebp], cl
; Line 4293
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _savedLineNum$[ebp], ecx
	mov	edx, DWORD PTR [eax+44]
	mov	DWORD PTR _savedLineNum$[ebp+4], edx
; Line 4294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _savedCharNum$[ebp], ecx
	mov	edx, DWORD PTR [eax+52]
	mov	DWORD PTR _savedCharNum$[ebp+4], edx
; Line 4295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _savedLastChar$[ebp], ecx
; Line 4296
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _savedPeekChar$[ebp], ecx
; Line 4297
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR [eax+68]
	mov	DWORD PTR _savedfC$[ebp], ecx
	mov	DWORD PTR _savedfC$[ebp+4], edx
; Line 4303
	mov	esi, esp
	lea	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 4304
	mov	BYTE PTR _negated$[ebp], 0
; Line 4307
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4308
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 94			; 0000005eH
	jne	SHORT $LN11@scanPosixP
; Line 4309
	mov	BYTE PTR _negated$[ebp], 1
; Line 4310
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
$LN11@scanPosixP:
; Line 4314
	mov	BYTE PTR _sawPropSetTerminator$[ebp], 0
$LN10@scanPosixP:
; Line 4316
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	lea	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4317
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4318
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	jne	SHORT $LN7@scanPosixP
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], -1
	jne	SHORT $LN8@scanPosixP
$LN7@scanPosixP:
; Line 4320
	jmp	SHORT $LN9@scanPosixP
$LN8@scanPosixP:
; Line 4322
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 58			; 0000003aH
	jne	SHORT $LN6@scanPosixP
; Line 4323
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextChar@RegexCompile@icu_56@@QAEXAAURegexPatternChar@12@@Z ; icu_56::RegexCompile::nextChar
; Line 4324
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 93			; 0000005dH
	jne	SHORT $LN5@scanPosixP
; Line 4325
	mov	BYTE PTR _sawPropSetTerminator$[ebp], 1
$LN5@scanPosixP:
; Line 4327
	jmp	SHORT $LN9@scanPosixP
$LN6@scanPosixP:
; Line 4329
	jmp	SHORT $LN10@scanPosixP
$LN9@scanPosixP:
; Line 4331
	movsx	eax, BYTE PTR _sawPropSetTerminator$[ebp]
	test	eax, eax
	je	SHORT $LN4@scanPosixP
; Line 4332
	movzx	eax, BYTE PTR _negated$[ebp]
	push	eax
	lea	ecx, DWORD PTR _propName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z ; icu_56::RegexCompile::createSetForProperty
	mov	DWORD PTR _uset$[ebp], eax
; Line 4334
	jmp	$LN3@scanPosixP
$LN4@scanPosixP:
; Line 4340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedScanIndex$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _savedScanIndex$[ebp+4]
	mov	DWORD PTR [eax+28], edx
; Line 4341
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savedQuoteMode$[ebp]
	mov	BYTE PTR [eax+32], cl
; Line 4342
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savedInBackslashQuote$[ebp]
	mov	BYTE PTR [eax+33], cl
; Line 4343
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _savedEOLComments$[ebp]
	mov	BYTE PTR [eax+34], cl
; Line 4344
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedLineNum$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	edx, DWORD PTR _savedLineNum$[ebp+4]
	mov	DWORD PTR [eax+44], edx
; Line 4345
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedCharNum$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR _savedCharNum$[ebp+4]
	mov	DWORD PTR [eax+52], edx
; Line 4346
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedLastChar$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 4347
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedPeekChar$[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 4348
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedfC$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	edx, DWORD PTR _savedfC$[ebp+4]
	mov	DWORD PTR [eax+68], edx
; Line 4349
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _savedNextIndex$[ebp]
	sub	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _savedNextIndex$[ebp+4]
	sbb	ecx, DWORD PTR [edx+36]
	mov	DWORD PTR ___offset$40593[ebp], eax
	mov	DWORD PTR ___offset$40593[ebp+4], ecx
	cmp	DWORD PTR ___offset$40593[ebp+4], 0
	jl	SHORT $LN2@scanPosixP
	jg	SHORT $LN19@scanPosixP
	cmp	DWORD PTR ___offset$40593[ebp], 0
	jb	SHORT $LN2@scanPosixP
$LN19@scanPosixP:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+28]
	cdq
	mov	DWORD PTR tv392[ebp], eax
	mov	DWORD PTR tv392[ebp+4], edx
	mov	eax, DWORD PTR ___offset$40593[ebp+4]
	cmp	eax, DWORD PTR tv392[ebp+4]
	jg	SHORT $LN2@scanPosixP
	jl	SHORT $LN20@scanPosixP
	mov	ecx, DWORD PTR ___offset$40593[ebp]
	cmp	ecx, DWORD PTR tv392[ebp]
	ja	SHORT $LN2@scanPosixP
$LN20@scanPosixP:
	mov	eax, DWORD PTR ___offset$40593[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+40], eax
	jmp	SHORT $LN3@scanPosixP
$LN2@scanPosixP:
	mov	eax, DWORD PTR _savedNextIndex$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _savedNextIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN3@scanPosixP:
; Line 4351
	mov	eax, DWORD PTR _uset$[ebp]
	mov	DWORD PTR $T48345[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48345[ebp]
$LN13@scanPosixP:
; Line 4352
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@scanPosixP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 504				; 000001f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@scanPosixP:
	DD	2
	DD	$LN24@scanPosixP
$LN24@scanPosixP:
	DD	-176					; ffffff50H
	DD	8
	DD	$LN21@scanPosixP
	DD	-248					; ffffff08H
	DD	64					; 00000040H
	DD	$LN22@scanPosixP
$LN22@scanPosixP:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN21@scanPosixP:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	102					; 00000066H
	DB	67					; 00000043H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?scanPosixProp@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@XZ ENDP ; icu_56::RegexCompile::scanPosixProp
PUBLIC	??_C@_1BO@IJGANCK@?$AAj?$AAa?$AAv?$AAa?$AAW?$AAh?$AAi?$AAt?$AAe?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@EALJFMN@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAp?$AAp?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@DNOHAPDD@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@BCPNDPAE@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@LFCLFNMK@?$AAj?$AAa?$AAv?$AAa?$AAT?$AAi?$AAt?$AAl?$AAe?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@ELDIFDJE@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAu?$AAp?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAr?$AAy?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@NELKDPEP@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAp?$AAa?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@JNGMJIAG@?$AAj?$AAa?$AAv?$AAa?$AAM?$AAi?$AAr?$AAr?$AAo?$AAr?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@DJFENDBJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAo?$AAw?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@OMDKAJLN@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AAO?$AAr?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@NEANOKJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@EPIIBJNG@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@LHCHJBCD@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@EMNFMNFE@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAS?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@GDNMBKBK@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAI?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@BCJIJNIM@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KIDDFNGG@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_19JIBANNKP@?$AAj?$AAa?$AAv?$AAa?$AA?$AA@	; `string'
PUBLIC	??_C@_1CG@EIKMNCCI@?$AAj?$AAa?$AAv?$AAa?$AAV?$AAa?$AAl?$AAi?$AAd?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@	; `string'
PUBLIC	??_C@_1FE@DCAJJOLO@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAi?$AAa?$AAc?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo@ ; `string'
PUBLIC	??_C@_1DG@FNOCHLPC@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAa?$AAr?$AAk?$AAs?$AAf?$AAo?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DM@JLGBAKKE@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@CLFMKDBJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAp?$AAt?$AAi?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@DNFFNNMJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z:PROC
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@IPBVSymbolTable@1@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
;	COMDAT ??_C@_1BO@IJGANCK@?$AAj?$AAa?$AAv?$AAa?$AAW?$AAh?$AAi?$AAt?$AAe?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@IJGANCK@?$AAj?$AAa?$AAv?$AAa?$AAW?$AAh?$AAi?$AAt?$AAe?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'W', 00H, 'h', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 's', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@EALJFMN@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAp?$AAp?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@EALJFMN@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAp?$AAp?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'U', 00H, 'p', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'C', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@DNOHAPDD@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@DNOHAPDD@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'U', 00H, 'n', 00H, 'i', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'I', 00H, 'd', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@BCPNDPAE@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@BCPNDPAE@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'U', 00H, 'n', 00H, 'i', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'I', 00H, 'd', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@LFCLFNMK@?$AAj?$AAa?$AAv?$AAa?$AAT?$AAi?$AAt?$AAl?$AAe?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@LFCLFNMK@?$AAj?$AAa?$AAv?$AAa?$AAT?$AAi?$AAt?$AAl?$AAe?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'T', 00H, 'i', 00H, 't', 00H
	DB	'l', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@ELDIFDJE@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAu?$AAp?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAr?$AAy?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@ELDIFDJE@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAu?$AAp?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAr?$AAy?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'S', 00H, 'u', 00H, 'p', 00H
	DB	'p', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 'y', 00H, 'C', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@NELKDPEP@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAp?$AAa?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@NELKDPEP@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAp?$AAa?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'S', 00H, 'p', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@JNGMJIAG@?$AAj?$AAa?$AAv?$AAa?$AAM?$AAi?$AAr?$AAr?$AAo?$AAr?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@JNGMJIAG@?$AAj?$AAa?$AAv?$AAa?$AAM?$AAi?$AAr?$AAr?$AAo?$AAr?$AAe?$AAd?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'M', 00H, 'i', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@DJFENDBJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAo?$AAw?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@DJFENDBJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAo?$AAw?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'L', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'r', 00H, 'C', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@OMDKAJLN@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AAO?$AAr?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@OMDKAJLN@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AAO?$AAr?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'L', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'O', 00H, 'r', 00H, 'D', 00H, 'i'
	DB	00H, 'g', 00H, 'i', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@NEANOKJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@NEANOKJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'L', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@EPIIBJNG@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@EPIIBJNG@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'J', 00H, 'a', 00H, 'v', 00H
	DB	'a', 00H, 'I', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'i'
	DB	00H, 'f', 00H, 'i', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@LHCHJBCD@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@LHCHJBCD@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'J', 00H, 'a', 00H, 'v', 00H
	DB	'a', 00H, 'I', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'i'
	DB	00H, 'f', 00H, 'i', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@EMNFMNFE@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAS?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@EMNFMNFE@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAS?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'I', 00H, 'S', 00H, 'O', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@GDNMBKBK@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAI?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@GDNMBKBK@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAI?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'I', 00H, 'd', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H, 'r'
	DB	00H, 'I', 00H, 'g', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@BCJIJNIM@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@BCJIJNIM@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'D', 00H, 'i', 00H, 'g', 00H
	DB	'i', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KIDDFNGG@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KIDDFNGG@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'D', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19JIBANNKP@?$AAj?$AAa?$AAv?$AAa?$AA?$AA@
CONST	SEGMENT
??_C@_19JIBANNKP@?$AAj?$AAa?$AAv?$AAa?$AA?$AA@ DB 'j', 00H, 'a', 00H, 'v', 00H
	DB	'a', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@EIKMNCCI@?$AAj?$AAa?$AAv?$AAa?$AAV?$AAa?$AAl?$AAi?$AAd?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@EIKMNCCI@?$AAj?$AAa?$AAv?$AAa?$AAV?$AAa?$AAl?$AAi?$AAd?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@ DB 'j'
	DB	00H, 'a', 00H, 'v', 00H, 'a', 00H, 'V', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'P'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@ DB 'a', 00H, 'l', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@DCAJJOLO@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAi?$AAa?$AAc?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo@
CONST	SEGMENT
??_C@_1FE@DCAJJOLO@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAi?$AAa?$AAc?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo@ DB 'I'
	DB	00H, 'n', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'D', 00H, 'i'
	DB	00H, 'a', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'M', 00H, 'a', 00H, 'r'
	DB	00H, 'k', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'S', 00H, 'y', 00H, 'm', 00H, 'b', 00H, 'o', 00H, 'l'
	DB	00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FNOCHLPC@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAa?$AAr?$AAk?$AAs?$AAf?$AAo?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@FNOCHLPC@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAa?$AAr?$AAk?$AAs?$AAf?$AAo?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'a', 00H, 'r'
	DB	00H, 'k', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@JLGBAKKE@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@JLGBAKKE@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'M', 00H, 'a'
	DB	00H, 'r', 00H, 'k', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'S', 00H, 'y', 00H, 'm', 00H, 'b', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@CLFMKDBJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAp?$AAt?$AAi?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@CLFMKDBJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAp?$AAt?$AAi?$AAc?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'k', 00H
	DB	' ', 00H, 'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'C', 00H, 'o'
	DB	00H, 'p', 00H, 't', 00H, 'i', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@DNFFNNMJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@DNFFNNMJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?$AA@ DB 'I', 00H
	DB	'n', 00H, 'G', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'k', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@ DB 'w', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z DD 019930522H
	DD	025H
	DD	FLAT:__unwindtable$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$9
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$10
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$11
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$12
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$13
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$15
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$16
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$17
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$18
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$19
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$20
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$21
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$22
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$23
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$24
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$25
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$26
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$27
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$28
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$29
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$30
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$31
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$32
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$33
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$34
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$35
	DD	04H
	DD	FLAT:__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$36
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv397 = -3192						; size = 4
tv246 = -3192						; size = 4
tv984 = -3188						; size = 4
tv959 = -3188						; size = 4
tv1078 = -3184						; size = 4
tv1055 = -3184						; size = 4
tv1027 = -3184						; size = 4
tv1139 = -3180						; size = 4
tv1029 = -3180						; size = 4
tv1025 = -3180						; size = 4
tv1023 = -3180						; size = 4
tv1021 = -3180						; size = 4
tv1019 = -3180						; size = 4
tv1017 = -3180						; size = 4
tv1015 = -3180						; size = 4
tv1013 = -3180						; size = 4
tv1011 = -3180						; size = 4
tv1009 = -3180						; size = 4
tv1007 = -3180						; size = 4
tv1005 = -3180						; size = 4
tv1003 = -3180						; size = 4
tv1001 = -3180						; size = 4
tv999 = -3180						; size = 4
tv997 = -3180						; size = 4
tv995 = -3180						; size = 4
tv993 = -3180						; size = 4
tv991 = -3180						; size = 4
tv979 = -3180						; size = 4
tv971 = -3180						; size = 4
tv969 = -3180						; size = 4
tv967 = -3180						; size = 4
tv965 = -3180						; size = 4
tv954 = -3180						; size = 4
tv949 = -3180						; size = 4
tv947 = -3180						; size = 4
tv941 = -3180						; size = 4
tv1831 = -3176						; size = 4
tv1142 = -3176						; size = 4
tv1136 = -3176						; size = 4
tv1133 = -3176						; size = 4
tv1130 = -3176						; size = 4
tv1127 = -3176						; size = 4
tv1124 = -3176						; size = 4
tv1121 = -3176						; size = 4
tv1118 = -3176						; size = 4
tv1115 = -3176						; size = 4
tv1112 = -3176						; size = 4
tv1109 = -3176						; size = 4
tv1106 = -3176						; size = 4
tv1103 = -3176						; size = 4
tv1100 = -3176						; size = 4
tv1097 = -3176						; size = 4
tv1094 = -3176						; size = 4
tv1091 = -3176						; size = 4
tv1088 = -3176						; size = 4
tv1085 = -3176						; size = 4
tv1074 = -3176						; size = 4
tv1068 = -3176						; size = 4
tv1065 = -3176						; size = 4
tv1062 = -3176						; size = 4
tv1059 = -3176						; size = 4
tv1051 = -3176						; size = 4
tv1048 = -3176						; size = 4
tv1045 = -3176						; size = 4
tv1038 = -3176						; size = 4
tv931 = -3176						; size = 4
tv874 = -3176						; size = 4
tv490 = -3176						; size = 4
tv407 = -3176						; size = 4
tv372 = -3176						; size = 4
tv318 = -3176						; size = 4
tv177 = -3176						; size = 4
tv151 = -3176						; size = 4
tv129 = -3176						; size = 4
$T48362 = -3168						; size = 4
$T48363 = -3156						; size = 4
$T48364 = -3144						; size = 4
$T48367 = -3132						; size = 4
$T48368 = -3120						; size = 4
$T48369 = -3108						; size = 4
$T48372 = -3093						; size = 1
$T48373 = -3084						; size = 4
$T48374 = -3072						; size = 4
$T48377 = -3060						; size = 4
$T48378 = -3048						; size = 4
$T48379 = -3033						; size = 1
$T48380 = -3021						; size = 1
$T48383 = -3009						; size = 1
$T48384 = -3000						; size = 4
$T48385 = -2988						; size = 4
$T48388 = -2976						; size = 4
$T48389 = -2964						; size = 4
$T48390 = -2952						; size = 4
$T48393 = -2937						; size = 1
$T48396 = -2928						; size = 4
$T48397 = -2916						; size = 4
$T48400 = -2901						; size = 1
$T48401 = -2889						; size = 1
$T48402 = -2877						; size = 1
$T48403 = -2865						; size = 1
$T48404 = -2853						; size = 1
$T48405 = -2841						; size = 1
$T48406 = -2829						; size = 1
$T48407 = -2817						; size = 1
$T48408 = -2805						; size = 1
$T48409 = -2793						; size = 1
$T48410 = -2781						; size = 1
$T48411 = -2769						; size = 1
$T48412 = -2757						; size = 1
$T48413 = -2745						; size = 1
$T48414 = -2733						; size = 1
$T48415 = -2721						; size = 1
$T48416 = -2709						; size = 1
$T48417 = -2697						; size = 1
$T48418 = -2688						; size = 52
$T48419 = -2625						; size = 1
$T48420 = -2616						; size = 4
$T48421 = -2604						; size = 4
$T48422 = -2592						; size = 4
$T48425 = -2580						; size = 4
$T48433 = -2568						; size = 4
$T40628 = -2556						; size = 64
$T40642 = -2484						; size = 64
$T40647 = -2412						; size = 64
$T40650 = -2340						; size = 64
$T40652 = -2268						; size = 64
$T40658 = -2196						; size = 64
$T40662 = -2124						; size = 64
$T40667 = -2052						; size = 64
$T40674 = -1980						; size = 64
$T40684 = -1908						; size = 64
$T40686 = -1836						; size = 64
$T40696 = -1764						; size = 64
$T40703 = -1692						; size = 64
$T40710 = -1620						; size = 64
$T40716 = -1548						; size = 64
$T40722 = -1476						; size = 64
$T40739 = -1404						; size = 64
$T40753 = -1332						; size = 64
$T40764 = -1260						; size = 64
$T40776 = -1188						; size = 64
$T40783 = -1116						; size = 64
$T40789 = -1044						; size = 64
$T40798 = -972						; size = 64
$T40804 = -900						; size = 64
$T40811 = -828						; size = 64
$T40823 = -756						; size = 64
$T40839 = -684						; size = 64
$T40846 = -612						; size = 64
$T40851 = -540						; size = 64
$T40861 = -468						; size = 64
_localStatus$40690 = -204				; size = 4
_mPropName$ = -192					; size = 64
_usetFlags$ = -120					; size = 4
_set$ = -108						; size = 4
_setExpr$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_propName$ = 8						; size = 4
_negated$ = 12						; size = 1
?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z PROC ; icu_56::RegexCompile::createSetForProperty, COMDAT
; _this$ = ecx
; Line 4367
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3180				; 00000c6cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-3192]
	mov	ecx, 795				; 0000031bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T48433[ebp], 0
; Line 4368
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 4370
	mov	DWORD PTR _usetFlags$[ebp], 0
; Line 4372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN55@createSetF
; Line 4373
	mov	DWORD PTR $T48362[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48362[ebp]
	jmp	$LN56@createSetF
$LN55@createSetF:
; Line 4379
	movsx	eax, BYTE PTR _negated$[ebp]
	test	eax, eax
	je	SHORT $LN54@createSetF
; Line 4380
	mov	esi, esp
	push	-1
	push	OFFSET _negSetPrefix
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4381
	jmp	SHORT $LN53@createSetF
$LN54@createSetF:
; Line 4382
	mov	esi, esp
	push	-1
	push	OFFSET _posSetPrefix
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@createSetF:
; Line 4384
	mov	esi, esp
	mov	eax, DWORD PTR _propName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4385
	mov	esi, esp
	push	125					; 0000007dH
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4386
	mov	esi, esp
	push	93					; 0000005dH
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4387
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	and	ecx, 2
	je	SHORT $LN52@createSetF
; Line 4388
	mov	eax, DWORD PTR _usetFlags$[ebp]
	or	eax, 2
	mov	DWORD PTR _usetFlags$[ebp], eax
$LN52@createSetF:
; Line 4390
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48364[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T48364[ebp], 0
	je	SHORT $LN58@createSetF
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	0
	mov	edx, DWORD PTR _usetFlags$[ebp]
	push	edx
	lea	eax, DWORD PTR _setExpr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48364[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@IPBVSymbolTable@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48364[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T48364[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T48364[ebp]
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN59@createSetF
$LN58@createSetF:
	mov	DWORD PTR tv129[ebp], 0
$LN59@createSetF:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T48363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T48363[ebp]
	mov	DWORD PTR _set$[ebp], edx
; Line 4391
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN51@createSetF
; Line 4392
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48367[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48367[ebp]
	jmp	$LN56@createSetF
$LN51@createSetF:
; Line 4394
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48369[ebp], eax
	mov	ecx, DWORD PTR $T48369[ebp]
	mov	DWORD PTR $T48368[ebp], ecx
	cmp	DWORD PTR $T48368[ebp], 0
	je	SHORT $LN60@createSetF
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48368[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48368[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN61@createSetF
$LN60@createSetF:
	mov	DWORD PTR tv151[ebp], 0
$LN61@createSetF:
; Line 4395
	mov	DWORD PTR _set$[ebp], 0
; Line 4403
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40628[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1038[ebp], eax
	mov	eax, DWORD PTR tv1038[ebp]
	mov	DWORD PTR tv941[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv941[ebp]
	push	ecx
	mov	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48372[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T40628[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48372[ebp]
	test	eax, eax
	je	$LN50@createSetF
; Line 4404
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], 0
; Line 4405
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48374[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T48374[ebp], 0
	je	SHORT $LN62@createSetF
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+112]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR $T48374[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48374[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T48374[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T48374[ebp]
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN63@createSetF
$LN62@createSetF:
	mov	DWORD PTR tv177[ebp], 0
$LN63@createSetF:
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR $T48373[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T48373[ebp]
	mov	DWORD PTR _set$[ebp], edx
; Line 4406
	cmp	DWORD PTR _set$[ebp], 0
	jne	SHORT $LN49@createSetF
; Line 4407
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], 7
; Line 4408
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48377[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48377[ebp]
	jmp	$LN56@createSetF
$LN49@createSetF:
; Line 4410
	movsx	eax, BYTE PTR _negated$[ebp]
	test	eax, eax
	je	SHORT $LN48@createSetF
; Line 4411
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@createSetF:
; Line 4413
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48378[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48378[ebp]
	jmp	$LN56@createSetF
$LN50@createSetF:
; Line 4430
	mov	esi, esp
	mov	eax, DWORD PTR _propName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 4431
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1BA@DNFFNNMJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40642[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1045[ebp], eax
	mov	eax, DWORD PTR tv1045[ebp]
	mov	DWORD PTR tv947[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv947[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48379[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40642[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48379[ebp]
	test	eax, eax
	je	SHORT $LN47@createSetF
; Line 4432
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CG@CLFMKDBJ@?$AAI?$AAn?$AAG?$AAr?$AAe?$AAe?$AAk?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAp?$AAt?$AAi?$AAc?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40647[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1048[ebp], eax
	mov	eax, DWORD PTR tv1048[ebp]
	mov	DWORD PTR tv949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	ecx, DWORD PTR tv949[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40647[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN47@createSetF:
; Line 4435
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1DM@JLGBAKKE@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40650[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1051[ebp], eax
	mov	eax, DWORD PTR tv1051[ebp]
	mov	DWORD PTR tv954[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR $T48433[ebp]
	or	ecx, 1
	mov	DWORD PTR $T48433[ebp], ecx
	mov	edx, DWORD PTR tv954[ebp]
	push	edx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN64@createSetF
	mov	esi, esp
	push	0
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1DG@FNOCHLPC@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAa?$AAr?$AAk?$AAs?$AAf?$AAo?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40652[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1055[ebp], eax
	mov	ecx, DWORD PTR tv1055[ebp]
	mov	DWORD PTR tv959[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR $T48433[ebp]
	or	edx, 2
	mov	DWORD PTR $T48433[ebp], edx
	mov	eax, DWORD PTR tv959[ebp]
	push	eax
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN64@createSetF
	mov	DWORD PTR tv246[ebp], 0
	jmp	SHORT $LN65@createSetF
$LN64@createSetF:
	mov	DWORD PTR tv246[ebp], 1
$LN65@createSetF:
	mov	dl, BYTE PTR tv246[ebp]
	mov	BYTE PTR $T48380[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 2
	je	SHORT $LN87@createSetF
	and	DWORD PTR $T48433[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40652[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN87@createSetF:
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T48433[ebp]
	and	ecx, 1
	je	SHORT $LN88@createSetF
	and	DWORD PTR $T48433[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40650[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN88@createSetF:
	movzx	edx, BYTE PTR $T48380[ebp]
	test	edx, edx
	je	SHORT $LN46@createSetF
; Line 4436
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1FE@DCAJJOLO@?$AAI?$AAn?$AAC?$AAo?$AAm?$AAb?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAD?$AAi?$AAa?$AAc?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAM?$AAa?$AAr?$AAk?$AAs?$AA?5?$AAf?$AAo@
	push	1
	lea	ecx, DWORD PTR $T40658[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1059[ebp], eax
	mov	eax, DWORD PTR tv1059[ebp]
	mov	DWORD PTR tv965[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	esi, esp
	mov	ecx, DWORD PTR tv965[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN45@createSetF
$LN46@createSetF:
; Line 4438
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40662[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1062[ebp], eax
	mov	eax, DWORD PTR tv1062[ebp]
	mov	DWORD PTR tv967[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	mov	ecx, DWORD PTR tv967[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48383[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40662[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48383[ebp]
	test	eax, eax
	je	SHORT $LN45@createSetF
; Line 4439
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CG@EIKMNCCI@?$AAj?$AAa?$AAv?$AAa?$AAV?$AAa?$AAl?$AAi?$AAd?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40667[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1065[ebp], eax
	mov	eax, DWORD PTR tv1065[ebp]
	mov	DWORD PTR tv969[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	esi, esp
	mov	ecx, DWORD PTR tv969[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN45@createSetF:
; Line 4447
	mov	esi, esp
	push	2
	push	OFFSET ?IN@?CD@??createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@ABVUnicodeString@3@C@Z@4QB_WB
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN43@createSetF
	mov	esi, esp
	mov	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 3
	jl	$LN43@createSetF
; Line 4448
	mov	esi, esp
	push	4
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4449
	mov	esi, esp
	push	-1
	push	OFFSET ?BLOCK@?CD@??createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@3@ABVUnicodeString@3@C@Z@4QB_WB
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4450
	mov	esi, esp
	push	2
	lea	eax, DWORD PTR _mPropName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40674[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1068[ebp], eax
	mov	ecx, DWORD PTR tv1068[ebp]
	mov	DWORD PTR tv971[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	mov	edx, DWORD PTR tv971[ebp]
	push	edx
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40674[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4451
	mov	esi, esp
	push	125					; 0000007dH
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4452
	mov	esi, esp
	push	93					; 0000005dH
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], 0
; Line 4454
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48385[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T48385[ebp], 0
	je	SHORT $LN66@createSetF
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	0
	mov	edx, DWORD PTR _usetFlags$[ebp]
	push	edx
	lea	eax, DWORD PTR _setExpr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T48385[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@IPBVSymbolTable@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T48385[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T48385[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T48385[ebp]
	mov	DWORD PTR tv318[ebp], eax
	jmp	SHORT $LN67@createSetF
$LN66@createSetF:
	mov	DWORD PTR tv318[ebp], 0
$LN67@createSetF:
	mov	ecx, DWORD PTR tv318[ebp]
	mov	DWORD PTR $T48384[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T48384[ebp]
	mov	DWORD PTR _set$[ebp], edx
; Line 4455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN42@createSetF
; Line 4456
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48388[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48388[ebp]
	jmp	$LN56@createSetF
$LN42@createSetF:
; Line 4458
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48390[ebp], eax
	mov	ecx, DWORD PTR $T48390[ebp]
	mov	DWORD PTR $T48389[ebp], ecx
	cmp	DWORD PTR $T48389[ebp], 0
	je	SHORT $LN68@createSetF
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48389[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48389[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv372[ebp], eax
	jmp	SHORT $LN69@createSetF
$LN68@createSetF:
	mov	DWORD PTR tv372[ebp], 0
$LN69@createSetF:
; Line 4459
	mov	DWORD PTR _set$[ebp], 0
$LN43@createSetF:
; Line 4463
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19JIBANNKP@?$AAj?$AAa?$AAv?$AAa?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40684[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1074[ebp], eax
	mov	eax, DWORD PTR tv1074[ebp]
	mov	DWORD PTR tv979[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR $T48433[ebp]
	or	ecx, 4
	mov	DWORD PTR $T48433[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv979[ebp]
	push	edx
	mov	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN70@createSetF
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40686[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1078[ebp], eax
	mov	ecx, DWORD PTR tv1078[ebp]
	mov	DWORD PTR tv984[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR $T48433[ebp]
	or	edx, 8
	mov	DWORD PTR $T48433[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv984[ebp]
	push	eax
	mov	ecx, DWORD PTR _propName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN70@createSetF
	mov	DWORD PTR tv397[ebp], 0
	jmp	SHORT $LN71@createSetF
$LN70@createSetF:
	mov	DWORD PTR tv397[ebp], 1
$LN71@createSetF:
	mov	dl, BYTE PTR tv397[ebp]
	mov	BYTE PTR $T48393[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 8
	je	SHORT $LN98@createSetF
	and	DWORD PTR $T48433[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T40686[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN98@createSetF:
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T48433[ebp]
	and	ecx, 4
	je	SHORT $LN99@createSetF
	and	DWORD PTR $T48433[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN99@createSetF:
	movzx	edx, BYTE PTR $T48393[ebp]
	test	edx, edx
	je	$LN41@createSetF
; Line 4465
	mov	DWORD PTR _localStatus$40690[ebp], 0
; Line 4467
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48397[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	cmp	DWORD PTR $T48397[ebp], 0
	je	SHORT $LN72@createSetF
	mov	esi, esp
	mov	ecx, DWORD PTR $T48397[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48397[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T48397[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T48397[ebp]
	mov	DWORD PTR tv407[ebp], edx
	jmp	SHORT $LN73@createSetF
$LN72@createSetF:
	mov	DWORD PTR tv407[ebp], 0
$LN73@createSetF:
	mov	eax, DWORD PTR tv407[ebp]
	mov	DWORD PTR $T48396[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T48396[ebp]
	mov	DWORD PTR _set$[ebp], ecx
; Line 4472
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BI@KIDDFNGG@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAe?$AAf?$AAi?$AAn?$AAe?$AAd?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40696[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1085[ebp], eax
	mov	eax, DWORD PTR tv1085[ebp]
	mov	DWORD PTR tv991[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	esi, esp
	mov	ecx, DWORD PTR tv991[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48400[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48400[ebp]
	test	eax, eax
	je	SHORT $LN40@createSetF
; Line 4473
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4474
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN40@createSetF:
; Line 4476
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@BCJIJNIM@?$AAj?$AAa?$AAv?$AAa?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40703[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1088[ebp], eax
	mov	eax, DWORD PTR tv1088[ebp]
	mov	DWORD PTR tv993[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	esi, esp
	mov	ecx, DWORD PTR tv993[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48401[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40703[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48401[ebp]
	test	eax, eax
	je	SHORT $LN38@createSetF
; Line 4477
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN38@createSetF:
; Line 4479
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1DA@GDNMBKBK@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAI?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40710[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1091[ebp], eax
	mov	eax, DWORD PTR tv1091[ebp]
	mov	DWORD PTR tv995[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	esi, esp
	mov	ecx, DWORD PTR tv995[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48402[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40710[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48402[ebp]
	test	eax, eax
	je	SHORT $LN36@createSetF
; Line 4480
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z ; icu_56::addIdentifierIgnorable
	add	esp, 8
	jmp	$LN39@createSetF
$LN36@createSetF:
; Line 4482
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BO@EMNFMNFE@?$AAj?$AAa?$AAv?$AAa?$AAI?$AAS?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40716[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1094[ebp], eax
	mov	eax, DWORD PTR tv1094[ebp]
	mov	DWORD PTR tv997[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	esi, esp
	mov	ecx, DWORD PTR tv997[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48403[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48403[ebp]
	test	eax, eax
	je	SHORT $LN34@createSetF
; Line 4483
	mov	esi, esp
	push	31					; 0000001fH
	push	0
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv490[ebp], eax
	mov	esi, esp
	push	159					; 0000009fH
	push	127					; 0000007fH
	mov	ecx, DWORD PTR tv490[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv490[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN34@createSetF:
; Line 4485
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CO@LHCHJBCD@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40722[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1097[ebp], eax
	mov	eax, DWORD PTR tv1097[ebp]
	mov	DWORD PTR tv999[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	esi, esp
	mov	ecx, DWORD PTR tv999[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48404[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40722[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48404[ebp]
	test	eax, eax
	je	$LN32@createSetF
; Line 4486
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4487
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	33554432				; 02000000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4488
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	4194304					; 00400000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4489
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4490
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4491
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4492
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	64					; 00000040H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4493
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z ; icu_56::addIdentifierIgnorable
	add	esp, 8
	jmp	$LN39@createSetF
$LN32@createSetF:
; Line 4495
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1DA@EPIIBJNG@?$AAj?$AAa?$AAv?$AAa?$AAJ?$AAa?$AAv?$AAa?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40739[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1100[ebp], eax
	mov	eax, DWORD PTR tv1100[ebp]
	mov	DWORD PTR tv1001[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1001[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48405[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40739[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48405[ebp]
	test	eax, eax
	je	SHORT $LN30@createSetF
; Line 4496
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4497
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4498
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	33554432				; 02000000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4499
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	4194304					; 00400000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN30@createSetF:
; Line 4501
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BG@NEANOKJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40753[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1103[ebp], eax
	mov	eax, DWORD PTR tv1103[ebp]
	mov	DWORD PTR tv1003[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1003[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48406[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40753[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48406[ebp]
	test	eax, eax
	je	SHORT $LN28@createSetF
; Line 4502
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN28@createSetF:
; Line 4504
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CE@OMDKAJLN@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAe?$AAt?$AAt?$AAe?$AAr?$AAO?$AAr?$AAD?$AAi?$AAg?$AAi?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40764[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1106[ebp], eax
	mov	eax, DWORD PTR tv1106[ebp]
	mov	DWORD PTR tv1005[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1005[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48407[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40764[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48407[ebp]
	test	eax, eax
	je	SHORT $LN26@createSetF
; Line 4505
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4506
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN26@createSetF:
; Line 4508
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@DJFENDBJ@?$AAj?$AAa?$AAv?$AAa?$AAL?$AAo?$AAw?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40776[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1109[ebp], eax
	mov	eax, DWORD PTR tv1109[ebp]
	mov	DWORD PTR tv1007[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1007[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48408[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40776[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48408[ebp]
	test	eax, eax
	je	SHORT $LN24@createSetF
; Line 4509
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN24@createSetF:
; Line 4511
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BK@JNGMJIAG@?$AAj?$AAa?$AAv?$AAa?$AAM?$AAi?$AAr?$AAr?$AAo?$AAr?$AAe?$AAd?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40783[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1112[ebp], eax
	mov	eax, DWORD PTR tv1112[ebp]
	mov	DWORD PTR tv1009[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1009[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48409[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40783[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48409[ebp]
	test	eax, eax
	je	SHORT $LN22@createSetF
; Line 4512
	mov	esi, esp
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1
	push	3
	mov	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN22@createSetF:
; Line 4514
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@NELKDPEP@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAp?$AAa?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40789[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1115[ebp], eax
	mov	eax, DWORD PTR tv1115[ebp]
	mov	DWORD PTR tv1011[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1011[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48410[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40789[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48410[ebp]
	test	eax, eax
	je	SHORT $LN20@createSetF
; Line 4515
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	28672					; 00007000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN20@createSetF:
; Line 4517
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1DG@ELDIFDJE@?$AAj?$AAa?$AAv?$AAa?$AAS?$AAu?$AAp?$AAp?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAr?$AAy?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40798[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1118[ebp], eax
	mov	eax, DWORD PTR tv1118[ebp]
	mov	DWORD PTR tv1013[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1013[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48411[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40798[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48411[ebp]
	test	eax, eax
	je	SHORT $LN18@createSetF
; Line 4518
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	65536					; 00010000H
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN18@createSetF:
; Line 4520
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@LFCLFNMK@?$AAj?$AAa?$AAv?$AAa?$AAT?$AAi?$AAt?$AAl?$AAe?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40804[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1121[ebp], eax
	mov	eax, DWORD PTR tv1121[ebp]
	mov	DWORD PTR tv1015[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1015[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48412[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40804[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48412[ebp]
	test	eax, eax
	je	SHORT $LN16@createSetF
; Line 4521
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN16@createSetF:
; Line 4523
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1DG@BCPNDPAE@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40811[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1124[ebp], eax
	mov	eax, DWORD PTR tv1124[ebp]
	mov	DWORD PTR tv1017[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1017[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48413[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40811[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48413[ebp]
	test	eax, eax
	je	SHORT $LN14@createSetF
; Line 4524
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4525
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN14@createSetF:
; Line 4527
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1DE@DNOHAPDD@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAI?$AAd?$AAe?$AAn?$AAt?$AAi?$AAf?$AAi?$AAe?$AAr?$AAP?$AAa?$AAr?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40823[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1127[ebp], eax
	mov	eax, DWORD PTR tv1127[ebp]
	mov	DWORD PTR tv1019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	esi, esp
	mov	ecx, DWORD PTR tv1019[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48414[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40823[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48414[ebp]
	test	eax, eax
	je	$LN12@createSetF
; Line 4528
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	62					; 0000003eH
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4529
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	4194304					; 00400000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4530
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4531
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4532
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4533
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	64					; 00000040H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4534
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z ; icu_56::addIdentifierIgnorable
	add	esp, 8
	jmp	$LN39@createSetF
$LN12@createSetF:
; Line 4536
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@EALJFMN@?$AAj?$AAa?$AAv?$AAa?$AAU?$AAp?$AAp?$AAe?$AAr?$AAC?$AAa?$AAs?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40839[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1130[ebp], eax
	mov	eax, DWORD PTR tv1130[ebp]
	mov	DWORD PTR tv1021[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1021[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48415[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40839[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48415[ebp]
	test	eax, eax
	je	SHORT $LN10@createSetF
; Line 4537
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
	jmp	$LN39@createSetF
$LN10@createSetF:
; Line 4539
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CG@EIKMNCCI@?$AAj?$AAa?$AAv?$AAa?$AAV?$AAa?$AAl?$AAi?$AAd?$AAC?$AAo?$AAd?$AAe?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40846[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1133[ebp], eax
	mov	eax, DWORD PTR tv1133[ebp]
	mov	DWORD PTR tv1023[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1023[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48416[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40846[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48416[ebp]
	test	eax, eax
	je	SHORT $LN8@createSetF
; Line 4540
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN8@createSetF:
; Line 4542
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BO@IJGANCK@?$AAj?$AAa?$AAv?$AAa?$AAW?$AAh?$AAi?$AAt?$AAe?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40851[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1136[ebp], eax
	mov	eax, DWORD PTR tv1136[ebp]
	mov	DWORD PTR tv1025[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1025[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48417[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40851[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48417[ebp]
	test	eax, eax
	je	$LN6@createSetF
; Line 4543
	lea	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	push	28672					; 00007000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4544
	mov	esi, esp
	push	8239					; 0000202fH
	mov	edi, esp
	push	8199					; 00002007H
	mov	ebx, esp
	push	160					; 000000a0H
	mov	eax, esp
	lea	ecx, DWORD PTR $T48418[ebp]
	mov	DWORD PTR tv1831[ebp], eax
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR tv1831[ebp]
	cmp	ecx, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1139[ebp], eax
	mov	eax, DWORD PTR tv1139[ebp]
	mov	DWORD PTR tv1027[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR tv1027[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T48418[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4545
	mov	esi, esp
	push	13					; 0000000dH
	push	9
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv874[ebp], eax
	mov	esi, esp
	push	31					; 0000001fH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR tv874[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv874[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN39@createSetF
$LN6@createSetF:
; Line 4547
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17IIFKAHCJ@?$AAa?$AAl?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T40861[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1142[ebp], eax
	mov	eax, DWORD PTR tv1142[ebp]
	mov	DWORD PTR tv1029[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	esi, esp
	mov	ecx, DWORD PTR tv1029[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T48419[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T40861[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, BYTE PTR $T48419[ebp]
	test	eax, eax
	je	SHORT $LN39@createSetF
; Line 4548
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@createSetF:
; Line 4551
	mov	eax, DWORD PTR _localStatus$40690[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@createSetF
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN3@createSetF
; Line 4552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], 0
; Line 4553
	mov	eax, DWORD PTR _usetFlags$[ebp]
	and	eax, 2
	je	SHORT $LN2@createSetF
; Line 4554
	mov	esi, esp
	push	2
	mov	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_?closeOver@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@createSetF:
; Line 4556
	movsx	eax, BYTE PTR _negated$[ebp]
	test	eax, eax
	je	SHORT $LN1@createSetF
; Line 4557
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@createSetF:
; Line 4559
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48420[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48420[ebp]
	jmp	$LN56@createSetF
$LN3@createSetF:
; Line 4561
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T48422[ebp], eax
	mov	ecx, DWORD PTR $T48422[ebp]
	mov	DWORD PTR $T48421[ebp], ecx
	cmp	DWORD PTR $T48421[ebp], 0
	je	SHORT $LN74@createSetF
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48421[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48421[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv931[ebp], eax
	jmp	SHORT $LN75@createSetF
$LN74@createSetF:
	mov	DWORD PTR tv931[ebp], 0
$LN75@createSetF:
; Line 4562
	mov	DWORD PTR _set$[ebp], 0
$LN41@createSetF:
; Line 4564
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@RegexCompile@icu_56@@AAEXW4UErrorCode@@@Z ; icu_56::RegexCompile::error
; Line 4565
	mov	DWORD PTR $T48425[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48425[ebp]
$LN56@createSetF:
; Line 4566
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN126@createSetF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 3192				; 00000c78H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN126@createSetF:
	DD	3
	DD	$LN125@createSetF
$LN125@createSetF:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN121@createSetF
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN122@createSetF
	DD	-204					; ffffff34H
	DD	4
	DD	$LN123@createSetF
$LN123@createSetF:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN122@createSetF:
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN121@createSetF:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _setExpr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T48364[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40628[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T48374[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _mPropName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40642[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40647[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$7:
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 1
	je	$LN84@createSetF
	and	DWORD PTR $T48433[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40650[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN84@createSetF:
	ret	0
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$8:
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 2
	je	$LN86@createSetF
	and	DWORD PTR $T48433[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40652[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN86@createSetF:
	ret	0
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40662[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40674[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$13:
	mov	esi, esp
	mov	eax, DWORD PTR $T48385[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$14:
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 4
	je	$LN95@createSetF
	and	DWORD PTR $T48433[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T40684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN95@createSetF:
	ret	0
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$15:
	mov	eax, DWORD PTR $T48433[ebp]
	and	eax, 8
	je	$LN97@createSetF
	and	DWORD PTR $T48433[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T40686[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN97@createSetF:
	ret	0
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$16:
	mov	esi, esp
	mov	eax, DWORD PTR $T48397[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$18:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40703[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$19:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40710[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$20:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$21:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40722[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$22:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40739[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$23:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40753[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$24:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40764[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$25:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40776[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$26:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40783[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$27:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40789[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$28:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40798[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$29:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40804[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$30:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40811[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$31:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40823[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$32:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40839[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$33:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40846[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$34:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40851[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$35:
	mov	esi, esp
	lea	ecx, DWORD PTR $T48418[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z$36:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40861[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3196]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createSetForProperty@RegexCompile@icu_56@@AAEPAVUnicodeSet@2@ABVUnicodeString@2@C@Z ENDP ; icu_56::RegexCompile::createSetForProperty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv78 = -200						; size = 4
tv71 = -196						; size = 4
_set$ = 8						; size = 4
_ec$ = 12						; size = 4
?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z PROC ; icu_56::addIdentifierIgnorable, COMDAT
; Line 4354
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4355
	mov	esi, esp
	push	8
	push	0
	mov	eax, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	push	27					; 0000001bH
	push	14					; 0000000eH
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	mov	esi, esp
	push	159					; 0000009fH
	push	127					; 0000007fH
	mov	ecx, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4356
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	65536					; 00010000H
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	call	?addCategory@icu_56@@YAXPAVUnicodeSet@1@HAAW4UErrorCode@@@Z ; icu_56::addCategory
	add	esp, 12					; 0000000cH
; Line 4357
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?addIdentifierIgnorable@icu_56@@YAXPAVUnicodeSet@1@AAW4UErrorCode@@@Z ENDP ; icu_56::addIdentifierIgnorable
_TEXT	ENDS
PUBLIC	??_C@_1CO@LMMLANDB@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@LBKMPNAG@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA ; `icu_56::RegexCompile::setEval'::`2'::__LINE__Var
;	COMDAT ??_C@_1CO@LMMLANDB@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@LMMLANDB@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, '.', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 't'
	DB	00H, 'y', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@LBKMPNAG@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@LBKMPNAG@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, 'O', 00H, 'p', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'e', 00H, 'm'
	DB	00H, 'p', 00H, 't', 00H, 'y', 00H, '(', 00H, ')', 00H, '=', 00H
	DB	'=', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA DD 011e0H ; `icu_56::RegexCompile::setEval'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?setEval@RegexCompile@icu_56@@AAEXH@Z
_TEXT	SEGMENT
tv195 = -316						; size = 4
tv175 = -316						; size = 4
tv155 = -316						; size = 4
tv95 = -316						; size = 4
$T48489 = -308						; size = 4
$T48490 = -296						; size = 4
$T48493 = -284						; size = 4
$T48494 = -272						; size = 4
$T48497 = -260						; size = 4
$T48498 = -248						; size = 4
_pendingSetOperation$40883 = -44			; size = 4
_leftOperand$ = -32					; size = 4
_rightOperand$ = -20					; size = 4
_this$ = -8						; size = 4
_nextOp$ = 8						; size = 4
?setEval@RegexCompile@icu_56@@AAEXH@Z PROC		; icu_56::RegexCompile::setEval, COMDAT
; _this$ = ecx
; Line 4576
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 4577
	mov	DWORD PTR _rightOperand$[ebp], 0
; Line 4578
	mov	DWORD PTR _leftOperand$[ebp], 0
$LN11@setEval:
; Line 4580
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN14@setEval
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CO@LBKMPNAG@?$AAf?$AAS?$AAe?$AAt?$AAO?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@setEval:
; Line 4581
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?peeki@UStack@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pendingSetOperation$40883[ebp], eax
; Line 4582
	mov	eax, DWORD PTR _pendingSetOperation$40883[ebp]
	and	eax, -65536				; ffff0000H
	mov	ecx, DWORD PTR _nextOp$[ebp]
	and	ecx, -65536				; ffff0000H
	cmp	eax, ecx
	jae	SHORT $LN9@setEval
; Line 4583
	jmp	$LN12@setEval
$LN9@setEval:
; Line 4585
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	mov	esi, esp
	call	DWORD PTR __imp_?popi@UStack@icu_56@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4586
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@setEval
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA
	add	ecx, 10					; 0000000aH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CO@LMMLANDB@?$AAf?$AAS?$AAe?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@setEval:
; Line 4587
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rightOperand$[ebp], eax
; Line 4588
	mov	eax, DWORD PTR _pendingSetOperation$40883[ebp]
	mov	DWORD PTR tv95[ebp], eax
	cmp	DWORD PTR tv95[ebp], 196613		; 00030005H
	jg	SHORT $LN23@setEval
	cmp	DWORD PTR tv95[ebp], 196613		; 00030005H
	je	$LN3@setEval
	cmp	DWORD PTR tv95[ebp], 131075		; 00020003H
	je	SHORT $LN6@setEval
	cmp	DWORD PTR tv95[ebp], 131081		; 00020009H
	je	SHORT $LN5@setEval
	cmp	DWORD PTR tv95[ebp], 196612		; 00030004H
	je	$LN4@setEval
	jmp	$LN1@setEval
$LN23@setEval:
	cmp	DWORD PTR tv95[ebp], 262150		; 00040006H
	je	$LN2@setEval
	cmp	DWORD PTR tv95[ebp], 262151		; 00040007H
	je	SHORT $LN4@setEval
	cmp	DWORD PTR tv95[ebp], 262152		; 00040008H
	je	$LN3@setEval
	jmp	$LN1@setEval
$LN6@setEval:
; Line 4590
	mov	eax, DWORD PTR _rightOperand$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _rightOperand$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4591
	jmp	$LN7@setEval
$LN5@setEval:
; Line 4594
	mov	esi, esp
	push	2
	mov	ecx, DWORD PTR _rightOperand$[ebp]
	call	DWORD PTR __imp_?closeOver@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4595
	mov	eax, DWORD PTR _rightOperand$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _rightOperand$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4596
	jmp	$LN7@setEval
$LN4@setEval:
; Line 4599
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4600
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _leftOperand$[ebp], eax
; Line 4601
	mov	esi, esp
	mov	eax, DWORD PTR _rightOperand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4602
	mov	eax, DWORD PTR _rightOperand$[ebp]
	mov	DWORD PTR $T48490[ebp], eax
	mov	ecx, DWORD PTR $T48490[ebp]
	mov	DWORD PTR $T48489[ebp], ecx
	cmp	DWORD PTR $T48489[ebp], 0
	je	SHORT $LN16@setEval
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48489[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48489[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN17@setEval
$LN16@setEval:
	mov	DWORD PTR tv155[ebp], 0
$LN17@setEval:
; Line 4603
	jmp	$LN7@setEval
$LN3@setEval:
; Line 4606
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4607
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _leftOperand$[ebp], eax
; Line 4608
	mov	esi, esp
	mov	eax, DWORD PTR _rightOperand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4609
	mov	eax, DWORD PTR _rightOperand$[ebp]
	mov	DWORD PTR $T48494[ebp], eax
	mov	ecx, DWORD PTR $T48494[ebp]
	mov	DWORD PTR $T48493[ebp], ecx
	cmp	DWORD PTR $T48493[ebp], 0
	je	SHORT $LN18@setEval
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48493[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48493[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	jmp	SHORT $LN19@setEval
$LN18@setEval:
	mov	DWORD PTR tv175[ebp], 0
$LN19@setEval:
; Line 4610
	jmp	$LN7@setEval
$LN2@setEval:
; Line 4612
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4613
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	mov	esi, esp
	call	DWORD PTR __imp_?peek@UStack@icu_56@@QBEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _leftOperand$[ebp], eax
; Line 4614
	mov	esi, esp
	mov	eax, DWORD PTR _rightOperand$[ebp]
	push	eax
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _leftOperand$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4615
	mov	eax, DWORD PTR _rightOperand$[ebp]
	mov	DWORD PTR $T48498[ebp], eax
	mov	ecx, DWORD PTR $T48498[ebp]
	mov	DWORD PTR $T48497[ebp], ecx
	cmp	DWORD PTR $T48497[ebp], 0
	je	SHORT $LN20@setEval
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T48497[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T48497[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv195[ebp], eax
	jmp	SHORT $LN21@setEval
$LN20@setEval:
	mov	DWORD PTR tv195[ebp], 0
$LN21@setEval:
; Line 4616
	jmp	SHORT $LN7@setEval
$LN1@setEval:
; Line 4618
	xor	eax, eax
	jne	SHORT $LN7@setEval
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setEval@RegexCompile@icu_56@@AAEXH@Z@4JA
	add	ecx, 42					; 0000002aH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@GJDFLDKG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@setEval:
; Line 4621
	jmp	$LN11@setEval
$LN12@setEval:
; Line 4622
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setEval@RegexCompile@icu_56@@AAEXH@Z ENDP		; icu_56::RegexCompile::setEval
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setPushOp@RegexCompile@icu_56@@AAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setPushOp@RegexCompile@icu_56@@AAEXH@Z$0
__ehfuncinfo$?setPushOp@RegexCompile@icu_56@@AAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setPushOp@RegexCompile@icu_56@@AAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setPushOp@RegexCompile@icu_56@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -244						; size = 4
$T48505 = -236						; size = 4
$T48506 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_op$ = 8						; size = 4
?setPushOp@RegexCompile@icu_56@@AAEXH@Z PROC		; icu_56::RegexCompile::setPushOp, COMDAT
; _this$ = ecx
; Line 4624
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setPushOp@RegexCompile@icu_56@@AAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 4625
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEval@RegexCompile@icu_56@@AAEXH@Z	; icu_56::RegexCompile::setEval
; Line 4626
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _op$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 440				; 000001b8H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4627
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T48506[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T48506[ebp], 0
	je	SHORT $LN3@setPushOp
	mov	esi, esp
	mov	ecx, DWORD PTR $T48506[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T48506[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T48506[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T48506[ebp]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@setPushOp
$LN3@setPushOp:
	mov	DWORD PTR tv82[ebp], 0
$LN4@setPushOp:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T48505[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR $T48505[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 4628
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setPushOp@RegexCompile@icu_56@@AAEXH@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T48506[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setPushOp@RegexCompile@icu_56@@AAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setPushOp@RegexCompile@icu_56@@AAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setPushOp@RegexCompile@icu_56@@AAEXH@Z ENDP		; icu_56::RegexCompile::setPushOp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector@2:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector@2
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector@2
$LN3@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

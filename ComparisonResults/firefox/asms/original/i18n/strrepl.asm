; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\strrepl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@StringReplacer@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::StringReplacer::getStaticClassID'::`2'::classID
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7UnicodeReplacer@icu_56@@6B@			; icu_56::UnicodeReplacer::`vftable'
PUBLIC	??0UnicodeReplacer@icu_56@@QAE@XZ		; icu_56::UnicodeReplacer::UnicodeReplacer
PUBLIC	??_R4UnicodeReplacer@icu_56@@6B@		; icu_56::UnicodeReplacer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeReplacer@icu_56@@@8		; icu_56::UnicodeReplacer `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeReplacer@icu_56@@8			; icu_56::UnicodeReplacer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeReplacer@icu_56@@8			; icu_56::UnicodeReplacer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8		; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EUnicodeReplacer@icu_56@@UAEPAXI@Z		; icu_56::UnicodeReplacer::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8 DD FLAT:??_R0?AVUnicodeReplacer@icu_56@@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeReplacer@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeReplacer@icu_56@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeReplacer@icu_56@@8 DD 00H			; icu_56::UnicodeReplacer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeReplacer@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeReplacer@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeReplacer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeReplacer@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeReplacer@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeReplacer@icu_56@@6B@ DD 00H			; icu_56::UnicodeReplacer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeReplacer@icu_56@@@8
	DD	FLAT:??_R3UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UnicodeReplacer@icu_56@@6B@
CONST	SEGMENT
??_7UnicodeReplacer@icu_56@@6B@ DD FLAT:??_R4UnicodeReplacer@icu_56@@6B@ ; icu_56::UnicodeReplacer::`vftable'
	DD	FLAT:??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0UnicodeReplacer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0UnicodeReplacer@icu_56@@QAE@XZ PROC			; icu_56::UnicodeReplacer::UnicodeReplacer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeReplacer@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0UnicodeReplacer@icu_56@@QAE@XZ ENDP			; icu_56::UnicodeReplacer::UnicodeReplacer
_TEXT	ENDS
PUBLIC	??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z		; icu_56::UnicodeReplacer::UnicodeReplacer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z PROC		; icu_56::UnicodeReplacer::UnicodeReplacer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeReplacer@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::UnicodeReplacer::UnicodeReplacer
_TEXT	ENDS
PUBLIC	??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::UnicodeReplacer::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::UnicodeReplacer::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4UnicodeReplacer@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::UnicodeReplacer::operator=
_TEXT	ENDS
PUBLIC	??1UnicodeReplacer@icu_56@@UAE@XZ		; icu_56::UnicodeReplacer::~UnicodeReplacer
PUBLIC	??_GUnicodeReplacer@icu_56@@UAEPAXI@Z		; icu_56::UnicodeReplacer::`scalar deleting destructor'
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeReplacer@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeReplacer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeReplacer@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeReplacer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_V@YAXPAX@Z					; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUnicodeReplacer@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeReplacer::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UnicodeReplacer@icu_56@@UAE@XZ ; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeReplacer@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeReplacer::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??_V@YAXPAX@Z PROC					; operator delete[], COMDAT
; Line 450
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _q$[ebp], 0
; Line 452
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_V@YAXPAX@Z ENDP					; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1UnicodeReplacer@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1UnicodeReplacer@icu_56@@UAE@XZ PROC			; icu_56::UnicodeReplacer::~UnicodeReplacer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\strrepl.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UnicodeReplacer@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnicodeReplacer@icu_56@@UAE@XZ ENDP			; icu_56::UnicodeReplacer::~UnicodeReplacer
_TEXT	ENDS
PUBLIC	?getStaticClassID@StringReplacer@icu_56@@SAPAXXZ ; icu_56::StringReplacer::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@StringReplacer@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@StringReplacer@icu_56@@SAPAXXZ PROC	; icu_56::StringReplacer::getStaticClassID, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@StringReplacer@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@StringReplacer@icu_56@@SAPAXXZ ENDP	; icu_56::StringReplacer::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@StringReplacer@icu_56@@UBEPAXXZ ; icu_56::StringReplacer::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@StringReplacer@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@StringReplacer@icu_56@@UBEPAXXZ PROC	; icu_56::StringReplacer::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@StringReplacer@icu_56@@SAPAXXZ ; icu_56::StringReplacer::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@StringReplacer@icu_56@@UBEPAXXZ ENDP	; icu_56::StringReplacer::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@ ; icu_56::StringReplacer::`vftable'
PUBLIC	??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@	; icu_56::StringReplacer::`vftable'
PUBLIC	??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z ; icu_56::StringReplacer::StringReplacer
PUBLIC	??_R4StringReplacer@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::StringReplacer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringReplacer@icu_56@@@8		; icu_56::StringReplacer `RTTI Type Descriptor'
PUBLIC	??_R3StringReplacer@icu_56@@8			; icu_56::StringReplacer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringReplacer@icu_56@@8			; icu_56::StringReplacer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringReplacer@icu_56@@8		; icu_56::StringReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeReplacer@icu_56@@8		; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ ; icu_56::StringReplacer::clone
PUBLIC	?toReplacer@StringReplacer@icu_56@@UBEPAVUnicodeReplacer@2@XZ ; icu_56::StringReplacer::toReplacer
PUBLIC	?setData@StringReplacer@icu_56@@UAEXPBVTransliterationRuleData@2@@Z ; icu_56::StringReplacer::setData
PUBLIC	??_R4StringReplacer@icu_56@@6BUnicodeReplacer@1@@ ; icu_56::StringReplacer::`RTTI Complete Object Locator'
PUBLIC	??_EStringReplacer@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::StringReplacer::`vector deleting destructor'
PUBLIC	?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z ; icu_56::StringReplacer::replace
PUBLIC	?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::StringReplacer::toReplacerPattern
PUBLIC	?addReplacementSetTo@StringReplacer@icu_56@@UBEXAAVUnicodeSet@2@@Z ; icu_56::StringReplacer::addReplacementSetTo
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UnicodeFunctor@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UnicodeFunctor@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_EStringReplacer@icu_56@@UAEPAXI@Z:PROC	; icu_56::StringReplacer::`vector deleting destructor'
EXTRN	?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFunctor::toMatcher
;	COMDAT ??_R4StringReplacer@icu_56@@6BUnicodeReplacer@1@@
rdata$r	SEGMENT
??_R4StringReplacer@icu_56@@6BUnicodeReplacer@1@@ DD 00H ; icu_56::StringReplacer::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVStringReplacer@icu_56@@@8
	DD	FLAT:??_R3StringReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeReplacer@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeReplacer@icu_56@@8 DD FLAT:??_R0?AVUnicodeReplacer@icu_56@@@8 ; icu_56::UnicodeReplacer::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringReplacer@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringReplacer@icu_56@@8 DD FLAT:??_R0?AVStringReplacer@icu_56@@@8 ; icu_56::StringReplacer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2StringReplacer@icu_56@@8
rdata$r	SEGMENT
??_R2StringReplacer@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringReplacer@icu_56@@8 ; icu_56::StringReplacer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringReplacer@icu_56@@8
rdata$r	SEGMENT
??_R3StringReplacer@icu_56@@8 DD 00H			; icu_56::StringReplacer::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2StringReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringReplacer@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringReplacer@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringReplacer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringReplacer@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringReplacer@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4StringReplacer@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::StringReplacer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringReplacer@icu_56@@@8
	DD	FLAT:??_R3StringReplacer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@
CONST	SEGMENT
??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@ DD FLAT:??_R4StringReplacer@icu_56@@6BUnicodeReplacer@1@@ ; icu_56::StringReplacer::`vftable'
	DD	FLAT:??_EStringReplacer@icu_56@@W3AEPAXI@Z
	DD	FLAT:?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
	DD	FLAT:?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?addReplacementSetTo@StringReplacer@icu_56@@UBEXAAVUnicodeSet@2@@Z
CONST	ENDS
;	COMDAT ??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4StringReplacer@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::StringReplacer::`vftable'
	DD	FLAT:??_EStringReplacer@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@StringReplacer@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@StringReplacer@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@StringReplacer@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$2
__ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_theOutput$ = 8						; size = 4
_theCursorPos$ = 12					; size = 4
_theData$ = 16						; size = 4
??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z PROC ; icu_56::StringReplacer::StringReplacer, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeFunctor@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeReplacer@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 40
	mov	esi, esp
	mov	eax, DWORD PTR _theOutput$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theCursorPos$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+76], 1
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theData$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+77], 1
; Line 45
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeFunctor@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@HPBVTransliterationRuleData@1@@Z ENDP ; icu_56::StringReplacer::StringReplacer
PUBLIC	??1StringReplacer@icu_56@@UAE@XZ		; icu_56::StringReplacer::~StringReplacer
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringReplacer@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringReplacer@icu_56@@UAEPAXI@Z PROC		; icu_56::StringReplacer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringReplacer@icu_56@@UAE@XZ	; icu_56::StringReplacer::~StringReplacer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringReplacer@icu_56@@UAEPAXI@Z ENDP		; icu_56::StringReplacer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z ; icu_56::StringReplacer::StringReplacer
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$2
__ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_theOutput$ = 8						; size = 4
_theData$ = 12						; size = 4
??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z PROC ; icu_56::StringReplacer::StringReplacer, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeFunctor@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeReplacer@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 58
	mov	esi, esp
	mov	eax, DWORD PTR _theOutput$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+76], 0
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _theData$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+77], 1
; Line 63
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeFunctor@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringReplacer@icu_56@@QAE@ABVUnicodeString@1@PBVTransliterationRuleData@1@@Z ENDP ; icu_56::StringReplacer::StringReplacer
PUBLIC	??0StringReplacer@icu_56@@QAE@ABV01@@Z		; icu_56::StringReplacer::StringReplacer
EXTRN	__imp_??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringReplacer@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0StringReplacer@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringReplacer@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0StringReplacer@icu_56@@QAE@ABV01@@Z PROC		; icu_56::StringReplacer::StringReplacer, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringReplacer@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _other$[ebp], 0
	je	SHORT $LN3@StringRepl
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN4@StringRepl
$LN3@StringRepl:
	mov	DWORD PTR tv90[ebp], 0
$LN4@StringRepl:
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UnicodeReplacer@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 72
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+76]
	mov	BYTE PTR [eax+76], dl
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+77]
	mov	BYTE PTR [eax+77], dl
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeFunctor@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
__unwindfunclet$??0StringReplacer@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringReplacer@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringReplacer@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringReplacer@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::StringReplacer::StringReplacer
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1StringReplacer@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1StringReplacer@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1StringReplacer@icu_56@@UAE@XZ$1
__ehfuncinfo$??1StringReplacer@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1StringReplacer@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1StringReplacer@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1StringReplacer@icu_56@@UAE@XZ PROC			; icu_56::StringReplacer::~StringReplacer, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1StringReplacer@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7StringReplacer@icu_56@@6BUnicodeReplacer@1@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeFunctor@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1StringReplacer@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeFunctor@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1StringReplacer@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1UnicodeReplacer@icu_56@@UAE@XZ	; icu_56::UnicodeReplacer::~UnicodeReplacer
__ehhandler$??1StringReplacer@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1StringReplacer@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1StringReplacer@icu_56@@UAE@XZ ENDP			; icu_56::StringReplacer::~StringReplacer
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0
__ehfuncinfo$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T44178 = -236						; size = 4
$T44179 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ PROC ; icu_56::StringReplacer::clone, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44179[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44179[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44179[ebp]
	call	??0StringReplacer@icu_56@@QAE@ABV01@@Z	; icu_56::StringReplacer::StringReplacer
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T44178[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T44178[ebp]
; Line 90
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44179[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@StringReplacer@icu_56@@UBEPAVUnicodeFunctor@2@XZ ENDP ; icu_56::StringReplacer::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toReplacer@StringReplacer@icu_56@@UBEPAVUnicodeReplacer@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?toReplacer@StringReplacer@icu_56@@UBEPAVUnicodeReplacer@2@XZ PROC ; icu_56::StringReplacer::toReplacer, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@toReplacer
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@toReplacer
$LN3@toReplacer:
	mov	DWORD PTR tv68[ebp], 0
$LN4@toReplacer:
	mov	eax, DWORD PTR tv68[ebp]
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toReplacer@StringReplacer@icu_56@@UBEPAVUnicodeReplacer@2@XZ ENDP ; icu_56::StringReplacer::toReplacer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	?lookupReplacer@TransliterationRuleData@icu_56@@QBEPAVUnicodeReplacer@2@H@Z:PROC ; icu_56::TransliterationRuleData::lookupReplacer
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@_W@Z:PROC
EXTRN	__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?length@Replaceable@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$3
__ehfuncinfo$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
_TEXT	SEGMENT
tv297 = -660						; size = 4
tv295 = -660						; size = 4
tv303 = -656						; size = 4
tv300 = -656						; size = 4
$T37309 = -648						; size = 64
$T37310 = -576						; size = 64
_n$37320 = -312						; size = 4
_n$37313 = -300						; size = 4
_len$37305 = -288					; size = 4
_r$37301 = -276						; size = 4
_c$37300 = -264						; size = 4
_destLimit$37295 = -252					; size = 4
_str$37294 = -240					; size = 64
_len$37290 = -168					; size = 4
_destStart$37288 = -156					; size = 4
_tempStart$37287 = -144					; size = 4
_oOutput$37286 = -132					; size = 4
_buf$37285 = -120					; size = 64
_newStart$ = -48					; size = 4
_outLen$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
_cursor$ = 20						; size = 4
?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z PROC ; icu_56::StringReplacer::replace, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 648				; 00000288H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-660]
	mov	ecx, 162				; 000000a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	DWORD PTR _newStart$[ebp], 0
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+73]
	test	ecx, ecx
	jne	SHORT $LN21@replace
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _outLen$[ebp], eax
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _newStart$[ebp], ecx
; Line 123
	jmp	$LN20@replace
$LN21@replace:
; Line 130
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+73], 0
; Line 143
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tempStart$37287[ebp], eax
; Line 144
	mov	eax, DWORD PTR _tempStart$37287[ebp]
	mov	DWORD PTR _destStart$37288[ebp], eax
; Line 145
	cmp	DWORD PTR _start$[ebp], 0
	jle	SHORT $LN19@replace
; Line 146
	mov	eax, DWORD PTR _start$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 65535				; 0000ffffH
	cmp	ecx, eax
	sbb	edx, edx
	neg	edx
	add	edx, 1
	mov	DWORD PTR _len$37290[ebp], edx
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR _tempStart$37287[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	sub	edx, DWORD PTR _len$37290[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 148
	mov	eax, DWORD PTR _destStart$37288[ebp]
	add	eax, DWORD PTR _len$37290[ebp]
	mov	DWORD PTR _destStart$37288[ebp], eax
; Line 149
	jmp	SHORT $LN18@replace
$LN19@replace:
; Line 150
	mov	esi, esp
	push	65535					; 0000ffffH
	lea	ecx, DWORD PTR _str$37294[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 151
	mov	esi, esp
	lea	eax, DWORD PTR _str$37294[ebp]
	push	eax
	mov	ecx, DWORD PTR _tempStart$37287[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempStart$37287[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 152
	mov	eax, DWORD PTR _destStart$37288[ebp]
	add	eax, 1
	mov	DWORD PTR _destStart$37288[ebp], eax
; Line 153
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$37294[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@replace:
; Line 154
	mov	eax, DWORD PTR _destStart$37288[ebp]
	mov	DWORD PTR _destLimit$37295[ebp], eax
; Line 156
	mov	DWORD PTR _oOutput$37286[ebp], 0
$LN17@replace:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _oOutput$37286[ebp], eax
	jge	$LN16@replace
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _oOutput$37286[ebp]
	cmp	ecx, DWORD PTR [eax+68]
	jne	SHORT $LN15@replace
; Line 159
	mov	eax, DWORD PTR _destLimit$37295[ebp]
	sub	eax, DWORD PTR _destStart$37288[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
$LN15@replace:
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _oOutput$37286[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$37300[ebp], eax
; Line 162
	mov	eax, DWORD PTR _c$37300[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	call	?lookupReplacer@TransliterationRuleData@icu_56@@QBEPAVUnicodeReplacer@2@H@Z ; icu_56::TransliterationRuleData::lookupReplacer
	mov	DWORD PTR _r$37301[ebp], eax
; Line 163
	cmp	DWORD PTR _r$37301[ebp], 0
	jne	SHORT $LN14@replace
; Line 165
	mov	esi, esp
	mov	eax, DWORD PTR _c$37300[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 166
	jmp	$LN13@replace
$LN14@replace:
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+73], 1
; Line 170
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN12@replace
; Line 171
	mov	esi, esp
	lea	eax, DWORD PTR _buf$37285[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLimit$37295[ebp]
	push	ecx
	mov	edx, DWORD PTR _destLimit$37295[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _destLimit$37295[ebp]
	mov	DWORD PTR _destLimit$37295[ebp], eax
; Line 173
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@replace:
; Line 177
	mov	esi, esp
	mov	eax, DWORD PTR _cursor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLimit$37295[ebp]
	push	ecx
	mov	edx, DWORD PTR _destLimit$37295[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$37301[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _r$37301[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$37305[ebp], eax
; Line 178
	mov	eax, DWORD PTR _destLimit$37295[ebp]
	add	eax, DWORD PTR _len$37305[ebp]
	mov	DWORD PTR _destLimit$37295[ebp], eax
$LN13@replace:
; Line 180
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$37300[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _oOutput$37286[ebp]
	mov	DWORD PTR _oOutput$37286[ebp], ecx
; Line 181
	jmp	$LN17@replace
$LN16@replace:
; Line 183
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN11@replace
; Line 184
	mov	esi, esp
	lea	eax, DWORD PTR _buf$37285[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLimit$37295[ebp]
	push	ecx
	mov	edx, DWORD PTR _destLimit$37295[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 185
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _destLimit$37295[ebp]
	mov	DWORD PTR _destLimit$37295[ebp], eax
$LN11@replace:
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _oOutput$37286[ebp]
	cmp	ecx, DWORD PTR [eax+68]
	jne	SHORT $LN10@replace
; Line 189
	mov	eax, DWORD PTR _destLimit$37295[ebp]
	sub	eax, DWORD PTR _destStart$37288[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
$LN10@replace:
; Line 192
	mov	eax, DWORD PTR _destLimit$37295[ebp]
	sub	eax, DWORD PTR _destStart$37288[ebp]
	mov	DWORD PTR _outLen$[ebp], eax
; Line 195
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLimit$37295[ebp]
	push	ecx
	mov	edx, DWORD PTR _destStart$37288[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 196
	mov	esi, esp
	lea	ecx, DWORD PTR $T37309[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv300[ebp], eax
	mov	eax, DWORD PTR tv300[ebp]
	mov	DWORD PTR tv295[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv295[ebp]
	push	ecx
	mov	edx, DWORD PTR _destLimit$37295[ebp]
	add	edx, DWORD PTR _outLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _tempStart$37287[ebp]
	add	eax, DWORD PTR _outLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T37309[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	mov	esi, esp
	lea	ecx, DWORD PTR $T37310[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv303[ebp], eax
	mov	eax, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv297[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	ecx, DWORD PTR tv297[ebp]
	push	ecx
	mov	edx, DWORD PTR _limit$[ebp]
	add	edx, DWORD PTR _outLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _outLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T37310[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@replace:
; Line 202
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	$LN9@replace
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jge	SHORT $LN8@replace
; Line 208
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _n$37313[ebp], ecx
$LN7@replace:
; Line 211
	cmp	DWORD PTR _n$37313[ebp], 0
	jge	SHORT $LN6@replace
	cmp	DWORD PTR _newStart$[ebp], 0
	jle	SHORT $LN6@replace
; Line 212
	mov	eax, DWORD PTR _newStart$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 65535				; 0000ffffH
	cmp	ecx, eax
	sbb	edx, edx
	neg	edx
	add	edx, 1
	mov	eax, DWORD PTR _newStart$[ebp]
	sub	eax, edx
	mov	DWORD PTR _newStart$[ebp], eax
; Line 213
	mov	eax, DWORD PTR _n$37313[ebp]
	add	eax, 1
	mov	DWORD PTR _n$37313[ebp], eax
; Line 214
	jmp	SHORT $LN7@replace
$LN6@replace:
; Line 215
	mov	eax, DWORD PTR _newStart$[ebp]
	add	eax, DWORD PTR _n$37313[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
	jmp	$LN5@replace
$LN8@replace:
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+68], eax
	jle	$LN4@replace
; Line 217
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _outLen$[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
; Line 218
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	sub	edx, eax
	mov	DWORD PTR _n$37320[ebp], edx
$LN3@replace:
; Line 220
	cmp	DWORD PTR _n$37320[ebp], 0
	jle	SHORT $LN2@replace
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _newStart$[ebp], eax
	jge	SHORT $LN2@replace
; Line 221
	mov	esi, esp
	mov	eax, DWORD PTR _newStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 65535				; 0000ffffH
	cmp	ecx, eax
	sbb	edx, edx
	neg	edx
	add	edx, 1
	add	edx, DWORD PTR _newStart$[ebp]
	mov	DWORD PTR _newStart$[ebp], edx
; Line 222
	mov	eax, DWORD PTR _n$37320[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$37320[ebp], eax
; Line 223
	jmp	SHORT $LN3@replace
$LN2@replace:
; Line 224
	mov	eax, DWORD PTR _newStart$[ebp]
	add	eax, DWORD PTR _n$37320[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
; Line 225
	jmp	SHORT $LN5@replace
$LN4@replace:
; Line 228
	mov	eax, DWORD PTR _newStart$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _newStart$[ebp], eax
$LN5@replace:
; Line 231
	mov	eax, DWORD PTR _cursor$[ebp]
	mov	ecx, DWORD PTR _newStart$[ebp]
	mov	DWORD PTR [eax], ecx
$LN9@replace:
; Line 234
	mov	eax, DWORD PTR _outLen$[ebp]
; Line 235
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@replace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 660				; 00000294H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN32@replace:
	DD	2
	DD	$LN31@replace
$LN31@replace:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN28@replace
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN29@replace
$LN29@replace:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN28@replace:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37285[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$37294[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37309[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37310[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-664]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?replace@StringReplacer@icu_56@@UAEHAAVReplaceable@2@HHAAH@Z ENDP ; icu_56::StringReplacer::replace
PUBLIC	__$ArrayPad$
EXTRN	__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1
__ehfuncinfo$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
tv185 = -428						; size = 4
tv78 = -428						; size = 4
$T44218 = -420						; size = 4
_buf$37348 = -216					; size = 64
_r$37345 = -144						; size = 4
_c$37344 = -132						; size = 2
_i$37338 = -120						; size = 4
_cursor$ = -108						; size = 4
_quoteBuf$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_escapeUnprintable$ = 12				; size = 1
?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::StringReplacer::toReplacerPattern, COMDAT
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-428]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _rule$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 243
	mov	esi, esp
	lea	ecx, DWORD PTR _quoteBuf$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _cursor$[ebp], ecx
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	SHORT $LN12@toReplacer@2
	cmp	DWORD PTR _cursor$[ebp], 0
	jge	SHORT $LN12@toReplacer@2
$LN11@toReplacer@2:
; Line 249
	mov	eax, DWORD PTR _cursor$[ebp]
	mov	ecx, DWORD PTR _cursor$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cursor$[ebp], ecx
	test	eax, eax
	jge	SHORT $LN15@toReplacer@2
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN16@toReplacer@2
$LN15@toReplacer@2:
	mov	DWORD PTR tv78[ebp], 0
$LN16@toReplacer@2:
	cmp	DWORD PTR tv78[ebp], 0
	je	SHORT $LN12@toReplacer@2
; Line 250
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	push	64					; 00000040H
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 251
	jmp	SHORT $LN11@toReplacer@2
$LN12@toReplacer@2:
; Line 255
	mov	DWORD PTR _i$37338[ebp], 0
	jmp	SHORT $LN9@toReplacer@2
$LN8@toReplacer@2:
	mov	eax, DWORD PTR _i$37338[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37338[ebp], eax
$LN9@toReplacer@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$37338[ebp], eax
	jge	$LN7@toReplacer@2
; Line 256
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	SHORT $LN6@toReplacer@2
	mov	eax, DWORD PTR _i$37338[ebp]
	cmp	eax, DWORD PTR _cursor$[ebp]
	jne	SHORT $LN6@toReplacer@2
; Line 257
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	push	124					; 0000007cH
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@toReplacer@2:
; Line 259
	mov	esi, esp
	mov	eax, DWORD PTR _i$37338[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$37344[ebp], ax
; Line 261
	movzx	eax, WORD PTR _c$37344[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	call	?lookupReplacer@TransliterationRuleData@icu_56@@QBEPAVUnicodeReplacer@2@H@Z ; icu_56::TransliterationRuleData::lookupReplacer
	mov	DWORD PTR _r$37345[ebp], eax
; Line 262
	cmp	DWORD PTR _r$37345[ebp], 0
	jne	SHORT $LN5@toReplacer@2
; Line 263
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	0
	movzx	edx, WORD PTR _c$37344[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	jmp	$LN4@toReplacer@2
$LN5@toReplacer@2:
; Line 265
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37348[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 266
	mov	esi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$37348[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$37345[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _r$37345[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 267
	mov	esi, esp
	push	32					; 00000020H
	push	0
	lea	ecx, DWORD PTR _buf$37348[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 268
	mov	esi, esp
	push	32					; 00000020H
	lea	ecx, DWORD PTR _buf$37348[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 270
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR _buf$37348[ebp]
	push	edx
	mov	eax, DWORD PTR _rule$[ebp]
	push	eax
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@ABV32@CC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 271
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37348[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@toReplacer@2:
; Line 272
	jmp	$LN8@toReplacer@2
$LN7@toReplacer@2:
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	je	$LN3@toReplacer@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _cursor$[ebp], eax
	jle	$LN3@toReplacer@2
; Line 278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _cursor$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _cursor$[ebp], ecx
$LN2@toReplacer@2:
; Line 279
	mov	eax, DWORD PTR _cursor$[ebp]
	mov	ecx, DWORD PTR _cursor$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _cursor$[ebp], ecx
	test	eax, eax
	jle	SHORT $LN17@toReplacer@2
	mov	DWORD PTR tv185[ebp], 1
	jmp	SHORT $LN18@toReplacer@2
$LN17@toReplacer@2:
	mov	DWORD PTR tv185[ebp], 0
$LN18@toReplacer@2:
	cmp	DWORD PTR tv185[ebp], 0
	je	SHORT $LN1@toReplacer@2
; Line 280
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	push	64					; 00000040H
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 281
	jmp	SHORT $LN2@toReplacer@2
$LN1@toReplacer@2:
; Line 282
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	push	124					; 0000007cH
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@toReplacer@2:
; Line 286
	mov	esi, esp
	lea	eax, DWORD PTR _quoteBuf$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _escapeUnprintable$[ebp]
	push	ecx
	push	1
	push	-1
	mov	edx, DWORD PTR _rule$[ebp]
	push	edx
	call	DWORD PTR __imp_?appendToRule@ICU_Utility@icu_56@@SAXAAVUnicodeString@2@HCC0@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 288
	mov	eax, DWORD PTR _rule$[ebp]
	mov	DWORD PTR $T44218[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _quoteBuf$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T44218[ebp]
; Line 289
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@toReplacer@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 428				; 000001acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN25@toReplacer@2:
	DD	2
	DD	$LN24@toReplacer@2
$LN24@toReplacer@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN21@toReplacer@2
	DD	-216					; ffffff28H
	DD	64					; 00000040H
	DD	$LN22@toReplacer@2
$LN22@toReplacer@2:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN21@toReplacer@2:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _quoteBuf$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _buf$37348[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-432]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toReplacerPattern@StringReplacer@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::StringReplacer::toReplacerPattern
EXTRN	__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addReplacementSetTo@StringReplacer@icu_56@@UBEXAAVUnicodeSet@2@@Z
_TEXT	SEGMENT
_r$37368 = -44						; size = 4
_i$37363 = -32						; size = 4
_ch$ = -20						; size = 4
_this$ = -8						; size = 4
_toUnionTo$ = 8						; size = 4
?addReplacementSetTo@StringReplacer@icu_56@@UBEXAAVUnicodeSet@2@@Z PROC ; icu_56::StringReplacer::addReplacementSetTo, COMDAT
; _this$ = ecx
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 296
	mov	DWORD PTR _i$37363[ebp], 0
	jmp	SHORT $LN5@addReplace
$LN4@addReplace:
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ch$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$37363[ebp]
	mov	DWORD PTR _i$37363[ebp], ecx
$LN5@addReplace:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$37363[ebp], eax
	jge	SHORT $LN6@addReplace
; Line 297
	mov	esi, esp
	mov	eax, DWORD PTR _i$37363[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$[ebp], eax
; Line 298
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	call	?lookupReplacer@TransliterationRuleData@icu_56@@QBEPAVUnicodeReplacer@2@H@Z ; icu_56::TransliterationRuleData::lookupReplacer
	mov	DWORD PTR _r$37368[ebp], eax
; Line 299
	cmp	DWORD PTR _r$37368[ebp], 0
	jne	SHORT $LN2@addReplace
; Line 300
	mov	esi, esp
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toUnionTo$[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 301
	jmp	SHORT $LN1@addReplace
$LN2@addReplace:
; Line 302
	mov	esi, esp
	mov	eax, DWORD PTR _toUnionTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$37368[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _r$37368[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@addReplace:
; Line 304
	jmp	$LN4@addReplace
$LN6@addReplace:
; Line 305
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addReplacementSetTo@StringReplacer@icu_56@@UBEXAAVUnicodeSet@2@@Z ENDP ; icu_56::StringReplacer::addReplacementSetTo
_TEXT	ENDS
EXTRN	?lookup@TransliterationRuleData@icu_56@@QBEPAVUnicodeFunctor@2@H@Z:PROC ; icu_56::TransliterationRuleData::lookup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setData@StringReplacer@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
_TEXT	SEGMENT
_f$37380 = -44						; size = 4
_c$37379 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
?setData@StringReplacer@icu_56@@UAEXPBVTransliterationRuleData@2@@Z PROC ; icu_56::StringReplacer::setData, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 312
	mov	DWORD PTR _i$[ebp], 0
$LN3@setData:
; Line 313
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@setData
; Line 314
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$37379[ebp], eax
; Line 315
	mov	eax, DWORD PTR _c$37379[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?lookup@TransliterationRuleData@icu_56@@QBEPAVUnicodeFunctor@2@H@Z ; icu_56::TransliterationRuleData::lookup
	mov	DWORD PTR _f$37380[ebp], eax
; Line 316
	cmp	DWORD PTR _f$37380[ebp], 0
	je	SHORT $LN1@setData
; Line 317
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _f$37380[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _f$37380[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setData:
; Line 319
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$37379[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
; Line 320
	jmp	$LN3@setData
$LN4@setData:
; Line 321
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setData@StringReplacer@icu_56@@UAEXPBVTransliterationRuleData@2@@Z ENDP ; icu_56::StringReplacer::setData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EStringReplacer@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EStringReplacer@icu_56@@W3AEPAXI@Z PROC		; [thunk]:icu_56::StringReplacer::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EStringReplacer@icu_56@@UAEPAXI@Z
??_EStringReplacer@icu_56@@W3AEPAXI@Z ENDP		; [thunk]:icu_56::StringReplacer::`vector deleting destructor'
_TEXT	ENDS
END

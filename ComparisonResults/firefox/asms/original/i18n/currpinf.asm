; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\currpinf.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::CurrencyPluralInfo::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_gDefaultCurrencyPluralPattern DW 030H
	DW	02eH
	DW	023H
	DW	023H
	DW	020H
	DW	0a4H
	DW	0a4H
	DW	0a4H
	DW	00H
	ORG $+2
_gTripleCurrencySign DW 0a4H
	DW	0a4H
	DW	0a4H
	DW	00H
_gPluralCountOther DW 06fH
	DW	074H
	DW	068H
	DW	065H
	DW	072H
	DW	00H
_gPart0	DW	07bH
	DW	030H
	DW	07dH
	DW	00H
_gPart1	DW	07bH
	DW	031H
	DW	07dH
	DW	00H
_gNumberElementsTag DB 'NumberElements', 00H
	ORG $+1
_gLatnTag DB	'latn', 00H
	ORG $+3
_gPatternsTag DB 'patterns', 00H
	ORG $+3
_gDecimalFormatTag DB 'decimalFormat', 00H
	ORG $+2
_gCurrUnitPtnTag DB 'CurrencyUnitPatterns', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??1CurrencyPluralInfo@icu_56@@UAE@XZ		; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo
PUBLIC	??_GCurrencyPluralInfo@icu_56@@UAEPAXI@Z	; icu_56::CurrencyPluralInfo::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCurrencyPluralInfo@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCurrencyPluralInfo@icu_56@@UAEPAXI@Z PROC		; icu_56::CurrencyPluralInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CurrencyPluralInfo@icu_56@@UAE@XZ	; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCurrencyPluralInfo@icu_56@@UAEPAXI@Z ENDP		; icu_56::CurrencyPluralInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ECurrencyPluralInfo@icu_56@@UAEPAXI@Z	; icu_56::CurrencyPluralInfo::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECurrencyPluralInfo@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECurrencyPluralInfo@icu_56@@UAEPAXI@Z PROC		; icu_56::CurrencyPluralInfo::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CurrencyPluralInfo@icu_56@@UAE@XZ ; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CurrencyPluralInfo@icu_56@@UAE@XZ	; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECurrencyPluralInfo@icu_56@@UAEPAXI@Z ENDP		; icu_56::CurrencyPluralInfo::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z	; icu_56::CurrencyPluralInfo::operator==
PUBLIC	??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z	; icu_56::CurrencyPluralInfo::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_info$ = 8						; size = 4
??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z PROC		; icu_56::CurrencyPluralInfo::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currpinf.h
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z ; icu_56::CurrencyPluralInfo::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z ENDP		; icu_56::CurrencyPluralInfo::operator!=
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::NumberingSystem::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$35752 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberingSystem::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+72]
	mov	BYTE PTR [eax+72], dl
	mov	DWORD PTR _$S1$35752[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$35752[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$35752[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$35752[ebp], 9
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$35752[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$35752[ebp]
	mov	dl, BYTE PTR [ecx+73]
	mov	BYTE PTR [eax+73], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberingSystem::operator=
_TEXT	ENDS
PUBLIC	?getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ ; icu_56::CurrencyPluralInfo::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ PROC ; icu_56::CurrencyPluralInfo::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\currpinf.cpp
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ ENDP ; icu_56::CurrencyPluralInfo::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@CurrencyPluralInfo@icu_56@@UBEPAXXZ ; icu_56::CurrencyPluralInfo::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@CurrencyPluralInfo@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@CurrencyPluralInfo@icu_56@@UBEPAXXZ PROC ; icu_56::CurrencyPluralInfo::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@CurrencyPluralInfo@icu_56@@SAPAXXZ ; icu_56::CurrencyPluralInfo::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@CurrencyPluralInfo@icu_56@@UBEPAXXZ ENDP ; icu_56::CurrencyPluralInfo::getDynamicClassID
_TEXT	ENDS
PUBLIC	?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initialize
PUBLIC	??_7CurrencyPluralInfo@icu_56@@6B@		; icu_56::CurrencyPluralInfo::`vftable'
PUBLIC	??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
PUBLIC	??_R4CurrencyPluralInfo@icu_56@@6B@		; icu_56::CurrencyPluralInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCurrencyPluralInfo@icu_56@@@8		; icu_56::CurrencyPluralInfo `RTTI Type Descriptor'
PUBLIC	??_R3CurrencyPluralInfo@icu_56@@8		; icu_56::CurrencyPluralInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CurrencyPluralInfo@icu_56@@8		; icu_56::CurrencyPluralInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CurrencyPluralInfo@icu_56@@8	; icu_56::CurrencyPluralInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_R1A@?0A@EA@CurrencyPluralInfo@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CurrencyPluralInfo@icu_56@@8 DD FLAT:??_R0?AVCurrencyPluralInfo@icu_56@@@8 ; icu_56::CurrencyPluralInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CurrencyPluralInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CurrencyPluralInfo@icu_56@@8
rdata$r	SEGMENT
??_R2CurrencyPluralInfo@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CurrencyPluralInfo@icu_56@@8 ; icu_56::CurrencyPluralInfo::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CurrencyPluralInfo@icu_56@@8
rdata$r	SEGMENT
??_R3CurrencyPluralInfo@icu_56@@8 DD 00H		; icu_56::CurrencyPluralInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CurrencyPluralInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCurrencyPluralInfo@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCurrencyPluralInfo@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CurrencyPluralInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCurrencyPluralInfo@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CurrencyPluralInfo@icu_56@@6B@
rdata$r	SEGMENT
??_R4CurrencyPluralInfo@icu_56@@6B@ DD 00H		; icu_56::CurrencyPluralInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCurrencyPluralInfo@icu_56@@@8
	DD	FLAT:??_R3CurrencyPluralInfo@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CurrencyPluralInfo@icu_56@@6B@
CONST	SEGMENT
??_7CurrencyPluralInfo@icu_56@@6B@ DD FLAT:??_R4CurrencyPluralInfo@icu_56@@6B@ ; icu_56::CurrencyPluralInfo::`vftable'
	DD	FLAT:??_ECurrencyPluralInfo@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@CurrencyPluralInfo@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CurrencyPluralInfo@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 68
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initialize
; Line 69
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CurrencyPluralInfo@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
PUBLIC	??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_status$ = 12						; size = 4
??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CurrencyPluralInfo@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 75
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initialize
; Line 76
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
PUBLIC	??4CurrencyPluralInfo@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CurrencyPluralInfo::operator=
PUBLIC	??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z	; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_info$ = 8						; size = 4
??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CurrencyPluralInfo::CurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CurrencyPluralInfo@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 83
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CurrencyPluralInfo@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::CurrencyPluralInfo::operator=
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
PUBLIC	?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::copyHash
PUBLIC	?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initHash
PUBLIC	?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z ; icu_56::CurrencyPluralInfo::deleteHash
EXTRN	__imp_?clone@Locale@icu_56@@QBEPAV12@XZ:PROC
EXTRN	?clone@PluralRules@icu_56@@QBEPAV12@XZ:PROC	; icu_56::PluralRules::clone
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CurrencyPluralInfo@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv137 = -268						; size = 4
tv93 = -268						; size = 4
$T44209 = -260						; size = 4
$T44210 = -248						; size = 4
$T44213 = -236						; size = 4
$T44214 = -224						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_info$ = 8						; size = 4
??4CurrencyPluralInfo@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CurrencyPluralInfo::operator=, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _info$[ebp]
	jne	SHORT $LN6@operator@3
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@operator@3
$LN6@operator@3:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z ; icu_56::CurrencyPluralInfo::deleteHash
; Line 94
	mov	DWORD PTR _status$[ebp], 0
; Line 95
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initHash
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 97
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::copyHash
; Line 98
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator@3
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@operator@3
$LN5@operator@3:
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T44210[ebp], ecx
	mov	edx, DWORD PTR $T44210[ebp]
	mov	DWORD PTR $T44209[ebp], edx
	cmp	DWORD PTR $T44209[ebp], 0
	je	SHORT $LN9@operator@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44209[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44209[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN10@operator@3
$LN9@operator@3:
	mov	DWORD PTR tv93[ebp], 0
$LN10@operator@3:
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T44214[ebp], ecx
	mov	edx, DWORD PTR $T44214[ebp]
	mov	DWORD PTR $T44213[ebp], edx
	cmp	DWORD PTR $T44213[ebp], 0
	je	SHORT $LN11@operator@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44213[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44213[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN12@operator@3
$LN11@operator@3:
	mov	DWORD PTR tv137[ebp], 0
$LN12@operator@3:
; Line 104
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@operator@3
; Line 105
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?clone@PluralRules@icu_56@@QBEPAV12@XZ	; icu_56::PluralRules::clone
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 106
	jmp	SHORT $LN3@operator@3
$LN4@operator@3:
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN3@operator@3:
; Line 109
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@operator@3
; Line 110
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	DWORD PTR __imp_?clone@Locale@icu_56@@QBEPAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 111
	jmp	SHORT $LN1@operator@3
$LN2@operator@3:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@operator@3:
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
$LN7@operator@3:
; Line 115
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN15@operator@3:
	DD	1
	DD	$LN14@operator@3
$LN14@operator@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@operator@3
$LN13@operator@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
??4CurrencyPluralInfo@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CurrencyPluralInfo::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\currpinf.cpp
xdata$x	SEGMENT
__unwindtable$??1CurrencyPluralInfo@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CurrencyPluralInfo@icu_56@@UAE@XZ$0
__ehfuncinfo$??1CurrencyPluralInfo@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CurrencyPluralInfo@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CurrencyPluralInfo@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv133 = -268						; size = 4
tv89 = -268						; size = 4
$T44225 = -260						; size = 4
$T44226 = -248						; size = 4
$T44229 = -236						; size = 4
$T44230 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CurrencyPluralInfo@icu_56@@UAE@XZ PROC		; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CurrencyPluralInfo@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CurrencyPluralInfo@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z ; icu_56::CurrencyPluralInfo::deleteHash
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T44226[ebp], ecx
	mov	edx, DWORD PTR $T44226[ebp]
	mov	DWORD PTR $T44225[ebp], edx
	cmp	DWORD PTR $T44225[ebp], 0
	je	SHORT $LN3@CurrencyPl
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44225[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44225[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN4@CurrencyPl
$LN3@CurrencyPl:
	mov	DWORD PTR tv89[ebp], 0
$LN4@CurrencyPl:
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T44230[ebp], ecx
	mov	edx, DWORD PTR $T44230[ebp]
	mov	DWORD PTR $T44229[ebp], edx
	cmp	DWORD PTR $T44229[ebp], 0
	je	SHORT $LN5@CurrencyPl
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44229[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44229[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN6@CurrencyPl
$LN5@CurrencyPl:
	mov	DWORD PTR tv133[ebp], 0
$LN6@CurrencyPl:
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 125
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CurrencyPluralInfo@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1CurrencyPluralInfo@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CurrencyPluralInfo@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CurrencyPluralInfo@icu_56@@UAE@XZ ENDP		; icu_56::CurrencyPluralInfo::~CurrencyPluralInfo
EXTRN	__imp_?equals@Hashtable@icu_56@@QBECABV12@@Z:PROC
EXTRN	__imp_??8Locale@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv90 = -205						; size = 1
_this$ = -8						; size = 4
_info$ = 8						; size = 4
??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z PROC		; icu_56::CurrencyPluralInfo::operator==, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator@4
	mov	esi, esp
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	DWORD PTR __imp_??8Locale@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator@4
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?equals@Hashtable@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@4
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	BYTE PTR tv90[ebp], 0
$LN4@operator@4:
	mov	al, BYTE PTR tv90[ebp]
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z ENDP		; icu_56::CurrencyPluralInfo::operator==
_TEXT	ENDS
PUBLIC	?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ	; icu_56::CurrencyPluralInfo::clone
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ$0
__ehfuncinfo$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T44246 = -236						; size = 4
$T44247 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ PROC	; icu_56::CurrencyPluralInfo::clone, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44247[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44247[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44247[ebp]
	call	??0CurrencyPluralInfo@icu_56@@QAE@ABV01@@Z ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T44246[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T44246[ebp]
; Line 149
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44247[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ ENDP	; icu_56::CurrencyPluralInfo::clone
PUBLIC	?getPluralRules@CurrencyPluralInfo@icu_56@@QBEPBVPluralRules@2@XZ ; icu_56::CurrencyPluralInfo::getPluralRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPluralRules@CurrencyPluralInfo@icu_56@@QBEPBVPluralRules@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPluralRules@CurrencyPluralInfo@icu_56@@QBEPBVPluralRules@2@XZ PROC ; icu_56::CurrencyPluralInfo::getPluralRules, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPluralRules@CurrencyPluralInfo@icu_56@@QBEPBVPluralRules@2@XZ ENDP ; icu_56::CurrencyPluralInfo::getPluralRules
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z ; icu_56::CurrencyPluralInfo::getCurrencyPluralPattern
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z$1
__ehfuncinfo$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z
_TEXT	SEGMENT
tv131 = -384						; size = 4
tv129 = -384						; size = 4
tv135 = -380						; size = 4
tv132 = -380						; size = 4
$T37156 = -372						; size = 64
$T37158 = -300						; size = 64
_currencyPluralPattern$ = -36				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pluralCount$ = 8					; size = 4
_result$ = 12						; size = 4
?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z PROC ; icu_56::CurrencyPluralInfo::getCurrencyPluralPattern, COMDAT
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	esi, esp
	mov	eax, DWORD PTR _pluralCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currencyPluralPattern$[ebp], eax
; Line 161
	cmp	DWORD PTR _currencyPluralPattern$[ebp], 0
	jne	$LN3@getCurrenc
; Line 163
	mov	esi, esp
	push	5
	push	OFFSET _gPluralCountOther
	mov	ecx, DWORD PTR _pluralCount$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@getCurrenc
; Line 165
	mov	esi, esp
	push	5
	push	OFFSET _gPluralCountOther
	push	1
	lea	ecx, DWORD PTR $T37156[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	mov	eax, DWORD PTR tv132[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv129[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _currencyPluralPattern$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37156[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getCurrenc:
; Line 167
	cmp	DWORD PTR _currencyPluralPattern$[ebp], 0
	jne	SHORT $LN3@getCurrenc
; Line 173
	mov	esi, esp
	push	OFFSET _gDefaultCurrencyPluralPattern
	lea	ecx, DWORD PTR $T37158[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv131[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37158[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 174
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN4@getCurrenc
$LN3@getCurrenc:
; Line 177
	mov	esi, esp
	mov	eax, DWORD PTR _currencyPluralPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 178
	mov	eax, DWORD PTR _result$[ebp]
$LN4@getCurrenc:
; Line 179
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37156[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37158[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z ENDP ; icu_56::CurrencyPluralInfo::getCurrencyPluralPattern
PUBLIC	?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ ; icu_56::CurrencyPluralInfo::getLocale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ PROC ; icu_56::CurrencyPluralInfo::getLocale, COMDAT
; _this$ = ecx
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ ENDP ; icu_56::CurrencyPluralInfo::getLocale
_TEXT	ENDS
PUBLIC	?setPluralRules@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::setPluralRules
EXTRN	?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralRules::createRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPluralRules@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -232						; size = 4
$T44274 = -224						; size = 4
$T44275 = -212						; size = 4
_this$ = -8						; size = 4
_ruleDescription$ = 8					; size = 4
_status$ = 12						; size = 4
?setPluralRules@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::setPluralRules, COMDAT
; _this$ = ecx
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 189
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@setPluralR
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@setPluralR
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T44275[ebp], ecx
	mov	edx, DWORD PTR $T44275[ebp]
	mov	DWORD PTR $T44274[ebp], edx
	cmp	DWORD PTR $T44274[ebp], 0
	je	SHORT $LN5@setPluralR
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44274[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44274[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN1@setPluralR
$LN5@setPluralR:
	mov	DWORD PTR tv81[ebp], 0
$LN1@setPluralR:
; Line 193
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleDescription$[ebp]
	push	ecx
	call	?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createRules
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN3@setPluralR:
; Line 195
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setPluralRules@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::setPluralRules
_TEXT	ENDS
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::setCurrencyPluralPattern
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z$0
__ehfuncinfo$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv78 = -244						; size = 4
$T44280 = -236						; size = 4
$T44281 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pluralCount$ = 8					; size = 4
_pattern$ = 12						; size = 4
_status$ = 16						; size = 4
?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::setCurrencyPluralPattern, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN2@setCurrenc
; Line 203
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44281[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44281[ebp], 0
	je	SHORT $LN4@setCurrenc
	mov	esi, esp
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44281[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T44281[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T44281[ebp]
	mov	DWORD PTR tv78[ebp], edx
	jmp	SHORT $LN5@setCurrenc
$LN4@setCurrenc:
	mov	DWORD PTR tv78[ebp], 0
$LN5@setCurrenc:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T44280[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T44280[ebp]
	push	edx
	mov	eax, DWORD PTR _pluralCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setCurrenc:
; Line 205
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44281[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QAEXABVUnicodeString@2@0AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::setCurrencyPluralPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?setLocale@CurrencyPluralInfo@icu_56@@QAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::setLocale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLocale@CurrencyPluralInfo@icu_56@@QAEXABVLocale@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_loc$ = 8						; size = 4
_status$ = 12						; size = 4
?setLocale@CurrencyPluralInfo@icu_56@@QAEXABVLocale@2@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::setLocale, COMDAT
; _this$ = ecx
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initialize
; Line 211
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setLocale@CurrencyPluralInfo@icu_56@@QAEXABVLocale@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::setLocale
_TEXT	ENDS
PUBLIC	?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::setupCurrencyPluralPattern
EXTRN	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralRules::forLocale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv128 = -256						; size = 4
tv79 = -256						; size = 4
$T44297 = -248						; size = 4
$T44298 = -236						; size = 4
$T44301 = -224						; size = 4
$T44302 = -212						; size = 4
_this$ = -8						; size = 4
_loc$ = 8						; size = 4
_status$ = 12						; size = 4
?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::initialize, COMDAT
; _this$ = ecx
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initialize
; Line 217
	jmp	$LN3@initialize
$LN2@initialize:
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T44298[ebp], ecx
	mov	edx, DWORD PTR $T44298[ebp]
	mov	DWORD PTR $T44297[ebp], edx
	cmp	DWORD PTR $T44297[ebp], 0
	je	SHORT $LN5@initialize
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44297[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44297[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN6@initialize
$LN5@initialize:
	mov	DWORD PTR tv79[ebp], 0
$LN6@initialize:
; Line 220
	mov	esi, esp
	mov	ecx, DWORD PTR _loc$[ebp]
	call	DWORD PTR __imp_?clone@Locale@icu_56@@QBEPAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@initialize
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T44302[ebp], ecx
	mov	edx, DWORD PTR $T44302[ebp]
	mov	DWORD PTR $T44301[ebp], edx
	cmp	DWORD PTR $T44301[ebp], 0
	je	SHORT $LN7@initialize
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44301[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44301[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN1@initialize
$LN7@initialize:
	mov	DWORD PTR tv128[ebp], 0
$LN1@initialize:
; Line 224
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	call	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 225
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::setupCurrencyPluralPattern
$LN3@initialize:
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?initialize@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::initialize
_TEXT	ENDS
PUBLIC	??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralRules::getKeywords
EXTRN	_ures_close_56:PROC
EXTRN	_strcmp:PROC
EXTRN	_ures_getStringByKeyWithFallback_56:PROC
EXTRN	?getName@NumberingSystem@icu_56@@QBEPBDXZ:PROC	; icu_56::NumberingSystem::getName
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
EXTRN	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberingSystem::createInstance
;	COMDAT ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
CONST	SEGMENT
??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@ DB 'icudt56l-curr', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv397 = -1256						; size = 4
tv393 = -1256						; size = 4
tv388 = -1256						; size = 4
tv384 = -1256						; size = 4
tv425 = -1252						; size = 4
tv419 = -1252						; size = 4
tv412 = -1252						; size = 4
tv406 = -1252						; size = 4
tv399 = -1248						; size = 4
tv395 = -1248						; size = 4
tv391 = -1248						; size = 4
tv386 = -1248						; size = 4
tv382 = -1248						; size = 4
tv428 = -1244						; size = 4
tv422 = -1244						; size = 4
tv416 = -1244						; size = 4
tv409 = -1244						; size = 4
tv403 = -1244						; size = 4
tv377 = -1244						; size = 4
tv244 = -1244						; size = 4
tv193 = -1244						; size = 4
$T44308 = -1236						; size = 4
$T44309 = -1224						; size = 4
$T44312 = -1212						; size = 4
$T44313 = -1200						; size = 4
$T44316 = -1188						; size = 4
$T44317 = -1176						; size = 4
$T37245 = -1164						; size = 64
$T37246 = -1092						; size = 64
$T37247 = -1020						; size = 64
$T37248 = -948						; size = 64
$T37251 = -876						; size = 64
$T37252 = -804						; size = 64
$T37253 = -732						; size = 64
$T37254 = -660						; size = 64
$T37255 = -588						; size = 64
_negPattern$37250 = -324				; size = 64
_pattern$37240 = -252					; size = 4
_patternChars$37238 = -240				; size = 4
_err$37237 = -228					; size = 4
_ptnLen$37236 = -216					; size = 4
_pluralCount$37231 = -204				; size = 4
_keywords$ = -192					; size = 4
_currencyRes$ = -180					; size = 4
_currRb$ = -168						; size = 4
_styleCharIndex$37218 = -156				; size = 4
_hasSeparator$ = -141					; size = 1
_negNumberStylePatternLen$ = -132			; size = 4
_negNumberStylePattern$ = -120				; size = 4
_numberStylePatternLen$ = -108				; size = 4
_numberStylePattern$ = -96				; size = 4
_ptnLen$ = -84						; size = 4
_numElements$ = -72					; size = 4
_rb$ = -60						; size = 4
_ec$ = -48						; size = 4
_ns$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_loc$ = 8						; size = 4
_status$ = 12						; size = 4
?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::setupCurrencyPluralPattern, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1244				; 000004dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1256]
	mov	ecx, 311				; 00000137H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@setupCurre
; Line 232
	jmp	$LN17@setupCurre
$LN16@setupCurre:
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN15@setupCurre
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z ; icu_56::CurrencyPluralInfo::deleteHash
$LN15@setupCurre:
; Line 238
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::initHash
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 239
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@setupCurre
; Line 240
	jmp	$LN17@setupCurre
$LN14@setupCurre:
; Line 243
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	call	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::NumberingSystem::createInstance
	add	esp, 8
	mov	DWORD PTR _ns$[ebp], eax
; Line 244
	mov	DWORD PTR _ec$[ebp], 0
; Line 245
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _loc$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 246
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	OFFSET _gNumberElementsTag
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numElements$[ebp], eax
; Line 247
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ns$[ebp]
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	mov	edx, DWORD PTR _numElements$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 248
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _gPatternsTag
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 250
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ptnLen$[ebp]
	push	ecx
	push	OFFSET _gDecimalFormatTag
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numberStylePattern$[ebp], eax
; Line 252
	cmp	DWORD PTR _ec$[ebp], 2
	jne	SHORT $LN13@setupCurre
	push	OFFSET _gLatnTag
	mov	ecx, DWORD PTR _ns$[ebp]
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@setupCurre
; Line 253
	mov	DWORD PTR _ec$[ebp], 0
; Line 254
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _gLatnTag
	mov	edx, DWORD PTR _numElements$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 255
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _gPatternsTag
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 256
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ptnLen$[ebp]
	push	ecx
	push	OFFSET _gDecimalFormatTag
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numberStylePattern$[ebp], eax
$LN13@setupCurre:
; Line 258
	mov	eax, DWORD PTR _ptnLen$[ebp]
	mov	DWORD PTR _numberStylePatternLen$[ebp], eax
; Line 259
	mov	DWORD PTR _negNumberStylePattern$[ebp], 0
; Line 260
	mov	DWORD PTR _negNumberStylePatternLen$[ebp], 0
; Line 263
	mov	BYTE PTR _hasSeparator$[ebp], 0
; Line 264
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@setupCurre
; Line 265
	mov	DWORD PTR _styleCharIndex$37218[ebp], 0
	jmp	SHORT $LN11@setupCurre
$LN10@setupCurre:
	mov	eax, DWORD PTR _styleCharIndex$37218[ebp]
	add	eax, 1
	mov	DWORD PTR _styleCharIndex$37218[ebp], eax
$LN11@setupCurre:
	mov	eax, DWORD PTR _styleCharIndex$37218[ebp]
	cmp	eax, DWORD PTR _ptnLen$[ebp]
	jge	SHORT $LN12@setupCurre
; Line 266
	mov	eax, DWORD PTR _styleCharIndex$37218[ebp]
	mov	ecx, DWORD PTR _numberStylePattern$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 59					; 0000003bH
	jne	SHORT $LN8@setupCurre
; Line 267
	mov	BYTE PTR _hasSeparator$[ebp], 1
; Line 269
	mov	eax, DWORD PTR _styleCharIndex$37218[ebp]
	mov	ecx, DWORD PTR _numberStylePattern$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _negNumberStylePattern$[ebp], edx
; Line 270
	mov	eax, DWORD PTR _ptnLen$[ebp]
	sub	eax, DWORD PTR _styleCharIndex$37218[ebp]
	sub	eax, 1
	mov	DWORD PTR _negNumberStylePatternLen$[ebp], eax
; Line 271
	mov	eax, DWORD PTR _styleCharIndex$37218[ebp]
	mov	DWORD PTR _numberStylePatternLen$[ebp], eax
$LN8@setupCurre:
; Line 273
	jmp	SHORT $LN10@setupCurre
$LN12@setupCurre:
; Line 276
	mov	eax, DWORD PTR _numElements$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 277
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 278
	mov	eax, DWORD PTR _ns$[ebp]
	mov	DWORD PTR $T44309[ebp], eax
	mov	ecx, DWORD PTR $T44309[ebp]
	mov	DWORD PTR $T44308[ebp], ecx
	cmp	DWORD PTR $T44308[ebp], 0
	je	SHORT $LN19@setupCurre
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44308[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44308[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN20@setupCurre
$LN19@setupCurre:
	mov	DWORD PTR tv193[ebp], 0
$LN20@setupCurre:
; Line 280
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@setupCurre
; Line 281
	jmp	$LN17@setupCurre
$LN7@setupCurre:
; Line 284
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _loc$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _currRb$[ebp], eax
; Line 285
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	OFFSET _gCurrUnitPtnTag
	mov	ecx, DWORD PTR _currRb$[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyRes$[ebp], eax
; Line 290
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getKeywords
	mov	DWORD PTR _keywords$[ebp], eax
; Line 291
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN6@setupCurre
$LN5@setupCurre:
; Line 293
	mov	esi, esp
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _keywords$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _keywords$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pluralCount$37231[ebp], eax
	cmp	DWORD PTR _pluralCount$37231[ebp], 0
	je	$LN6@setupCurre
; Line 294
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@setupCurre
; Line 296
	mov	DWORD PTR _err$37237[ebp], 0
; Line 298
	lea	eax, DWORD PTR _err$37237[ebp]
	push	eax
	lea	ecx, DWORD PTR _ptnLen$37236[ebp]
	push	ecx
	mov	edx, DWORD PTR _pluralCount$37231[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyRes$[ebp]
	push	eax
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _patternChars$37238[ebp], eax
; Line 299
	mov	eax, DWORD PTR _err$37237[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@setupCurre
	cmp	DWORD PTR _ptnLen$37236[ebp], 0
	jle	$LN3@setupCurre
; Line 300
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44313[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44313[ebp], 0
	je	SHORT $LN21@setupCurre
	mov	esi, esp
	mov	eax, DWORD PTR _ptnLen$37236[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternChars$37238[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T44313[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T44313[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	eax, DWORD PTR $T44313[ebp]
	mov	DWORD PTR tv244[ebp], eax
	jmp	SHORT $LN22@setupCurre
$LN21@setupCurre:
	mov	DWORD PTR tv244[ebp], 0
$LN22@setupCurre:
	mov	ecx, DWORD PTR tv244[ebp]
	mov	DWORD PTR $T44312[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T44312[ebp]
	mov	DWORD PTR _pattern$37240[ebp], edx
; Line 307
	mov	esi, esp
	mov	eax, DWORD PTR _numberStylePatternLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numberStylePattern$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T37246[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv403[ebp], eax
	mov	edx, DWORD PTR tv403[ebp]
	mov	DWORD PTR tv382[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR tv382[ebp]
	push	eax
	mov	edi, esp
	push	3
	push	OFFSET _gPart0
	push	1
	lea	ecx, DWORD PTR $T37245[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv406[ebp], eax
	mov	ecx, DWORD PTR tv406[ebp]
	mov	DWORD PTR tv384[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv384[ebp]
	push	edx
	mov	ecx, DWORD PTR _pattern$37240[ebp]
	call	DWORD PTR __imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37245[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37246[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	mov	esi, esp
	push	3
	push	OFFSET _gTripleCurrencySign
	push	1
	lea	ecx, DWORD PTR $T37248[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv409[ebp], eax
	mov	eax, DWORD PTR tv409[ebp]
	mov	DWORD PTR tv386[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	ecx, DWORD PTR tv386[ebp]
	push	ecx
	mov	edi, esp
	push	3
	push	OFFSET _gPart1
	push	1
	lea	ecx, DWORD PTR $T37247[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv412[ebp], eax
	mov	edx, DWORD PTR tv412[ebp]
	mov	DWORD PTR tv388[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv388[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$37240[ebp]
	call	DWORD PTR __imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T37247[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 310
	movsx	eax, BYTE PTR _hasSeparator$[ebp]
	test	eax, eax
	je	$LN1@setupCurre
; Line 311
	mov	esi, esp
	mov	eax, DWORD PTR _ptnLen$37236[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternChars$37238[ebp]
	push	ecx
	lea	ecx, DWORD PTR _negPattern$37250[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 5
; Line 313
	mov	esi, esp
	mov	eax, DWORD PTR _negNumberStylePatternLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _negNumberStylePattern$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T37252[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv416[ebp], eax
	mov	edx, DWORD PTR tv416[ebp]
	mov	DWORD PTR tv391[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	eax, DWORD PTR tv391[ebp]
	push	eax
	mov	edi, esp
	push	3
	push	OFFSET _gPart0
	push	1
	lea	ecx, DWORD PTR $T37251[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv419[ebp], eax
	mov	ecx, DWORD PTR tv419[ebp]
	mov	DWORD PTR tv393[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv393[ebp]
	push	edx
	lea	ecx, DWORD PTR _negPattern$37250[ebp]
	call	DWORD PTR __imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T37251[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T37252[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 314
	mov	esi, esp
	push	3
	push	OFFSET _gTripleCurrencySign
	push	1
	lea	ecx, DWORD PTR $T37254[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv422[ebp], eax
	mov	eax, DWORD PTR tv422[ebp]
	mov	DWORD PTR tv395[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	mov	ecx, DWORD PTR tv395[ebp]
	push	ecx
	mov	edi, esp
	push	3
	push	OFFSET _gPart1
	push	1
	lea	ecx, DWORD PTR $T37253[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv425[ebp], eax
	mov	edx, DWORD PTR tv425[ebp]
	mov	DWORD PTR tv397[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv397[ebp]
	push	eax
	lea	ecx, DWORD PTR _negPattern$37250[ebp]
	call	DWORD PTR __imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	lea	ecx, DWORD PTR $T37253[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T37254[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 315
	mov	esi, esp
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _pattern$37240[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 316
	mov	esi, esp
	lea	eax, DWORD PTR _negPattern$37250[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$37240[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 317
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _negPattern$37250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setupCurre:
; Line 323
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$37240[ebp]
	push	ecx
	mov	edi, esp
	push	0
	push	-1
	mov	edx, DWORD PTR _pluralCount$37231[ebp]
	push	edx
	lea	ecx, DWORD PTR $T37255[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv428[ebp], eax
	mov	eax, DWORD PTR tv428[ebp]
	mov	DWORD PTR tv399[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv399[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37255[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setupCurre:
; Line 326
	jmp	$LN5@setupCurre
$LN6@setupCurre:
; Line 328
	mov	eax, DWORD PTR _keywords$[ebp]
	mov	DWORD PTR $T44317[ebp], eax
	mov	ecx, DWORD PTR $T44317[ebp]
	mov	DWORD PTR $T44316[ebp], ecx
	cmp	DWORD PTR $T44316[ebp], 0
	je	SHORT $LN23@setupCurre
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44316[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44316[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv377[ebp], eax
	jmp	SHORT $LN24@setupCurre
$LN23@setupCurre:
	mov	DWORD PTR tv377[ebp], 0
$LN24@setupCurre:
; Line 329
	mov	eax, DWORD PTR _currencyRes$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 330
	mov	eax, DWORD PTR _currRb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN17@setupCurre:
; Line 331
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@setupCurre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1256				; 000004e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN43@setupCurre:
	DD	5
	DD	$LN42@setupCurre
$LN42@setupCurre:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN36@setupCurre
	DD	-84					; ffffffacH
	DD	4
	DD	$LN37@setupCurre
	DD	-216					; ffffff28H
	DD	4
	DD	$LN38@setupCurre
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN39@setupCurre
	DD	-324					; fffffebcH
	DD	64					; 00000040H
	DD	$LN40@setupCurre
$LN40@setupCurre:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN39@setupCurre:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN38@setupCurre:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN37@setupCurre:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN36@setupCurre:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44313[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37246[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37245[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37247[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _negPattern$37250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37252[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37251[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37254[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37253[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37255[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setupCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@AAEXABVLocale@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::setupCurrencyPluralPattern
PUBLIC	??_GHashtable@icu_56@@QAEPAXI@Z			; icu_56::Hashtable::`scalar deleting destructor'
EXTRN	__imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z
_TEXT	SEGMENT
tv86 = -304						; size = 4
tv81 = -304						; size = 4
$T44346 = -296						; size = 4
$T44347 = -284						; size = 4
$T44350 = -272						; size = 4
$T44351 = -260						; size = 4
_value$37269 = -56					; size = 4
_valueTok$37268 = -44					; size = 4
_element$ = -32						; size = 4
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
_hTable$ = 8						; size = 4
?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z PROC ; icu_56::CurrencyPluralInfo::deleteHash, COMDAT
; _this$ = ecx
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	cmp	DWORD PTR _hTable$[ebp], 0
	jne	SHORT $LN3@deleteHash
; Line 339
	jmp	$LN4@deleteHash
$LN3@deleteHash:
; Line 341
	mov	DWORD PTR _pos$[ebp], -1
; Line 342
	mov	DWORD PTR _element$[ebp], 0
$LN2@deleteHash:
; Line 343
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hTable$[ebp]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN1@deleteHash
; Line 344
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$37268[ebp], ecx
; Line 345
	mov	eax, DWORD PTR _valueTok$37268[ebp]
	mov	DWORD PTR _value$37269[ebp], eax
; Line 346
	mov	eax, DWORD PTR _value$37269[ebp]
	mov	DWORD PTR $T44347[ebp], eax
	mov	ecx, DWORD PTR $T44347[ebp]
	mov	DWORD PTR $T44346[ebp], ecx
	cmp	DWORD PTR $T44346[ebp], 0
	je	SHORT $LN6@deleteHash
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44346[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44346[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@deleteHash
$LN6@deleteHash:
	mov	DWORD PTR tv81[ebp], 0
$LN7@deleteHash:
; Line 347
	jmp	SHORT $LN2@deleteHash
$LN1@deleteHash:
; Line 348
	mov	eax, DWORD PTR _hTable$[ebp]
	mov	DWORD PTR $T44351[ebp], eax
	mov	ecx, DWORD PTR $T44351[ebp]
	mov	DWORD PTR $T44350[ebp], ecx
	cmp	DWORD PTR $T44350[ebp], 0
	je	SHORT $LN8@deleteHash
	push	1
	mov	ecx, DWORD PTR $T44350[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN9@deleteHash
$LN8@deleteHash:
	mov	DWORD PTR tv86[ebp], 0
$LN9@deleteHash:
; Line 349
	mov	DWORD PTR _hTable$[ebp], 0
$LN4@deleteHash:
; Line 350
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@deleteHash
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@deleteHash:
	DD	2
	DD	$LN12@deleteHash
$LN12@deleteHash:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@deleteHash
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN11@deleteHash
$LN11@deleteHash:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN10@deleteHash:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?deleteHash@CurrencyPluralInfo@icu_56@@AAEXPAVHashtable@2@@Z ENDP ; icu_56::CurrencyPluralInfo::deleteHash
_TEXT	ENDS
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GHashtable@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GHashtable@icu_56@@QAEPAXI@Z PROC			; icu_56::Hashtable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GHashtable@icu_56@@QAEPAXI@Z ENDP			; icu_56::Hashtable::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv86 = -280						; size = 4
tv77 = -280						; size = 4
$T44362 = -272						; size = 4
$T44363 = -260						; size = 4
$T44366 = -248						; size = 4
$T44367 = -236						; size = 4
_hTable$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::initHash, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@initHash
; Line 356
	xor	eax, eax
	jmp	$LN4@initHash
$LN3@initHash:
; Line 359
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44363[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44363[ebp], 0
	je	SHORT $LN6@initHash
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T44363[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@initHash
$LN6@initHash:
	mov	DWORD PTR tv77[ebp], 0
$LN7@initHash:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T44362[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T44362[ebp]
	mov	DWORD PTR _hTable$[ebp], edx
	cmp	DWORD PTR _hTable$[ebp], 0
	jne	SHORT $LN2@initHash
; Line 360
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 361
	xor	eax, eax
	jmp	SHORT $LN4@initHash
$LN2@initHash:
; Line 363
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initHash
; Line 364
	mov	eax, DWORD PTR _hTable$[ebp]
	mov	DWORD PTR $T44367[ebp], eax
	mov	ecx, DWORD PTR $T44367[ebp]
	mov	DWORD PTR $T44366[ebp], ecx
	cmp	DWORD PTR $T44366[ebp], 0
	je	SHORT $LN8@initHash
	push	1
	mov	ecx, DWORD PTR $T44366[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN9@initHash
$LN8@initHash:
	mov	DWORD PTR tv86[ebp], 0
$LN9@initHash:
; Line 365
	xor	eax, eax
	jmp	SHORT $LN4@initHash
$LN1@initHash:
; Line 367
	mov	esi, esp
	push	OFFSET _ValueComparator
	mov	ecx, DWORD PTR _hTable$[ebp]
	call	DWORD PTR __imp_?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 368
	mov	eax, DWORD PTR _hTable$[ebp]
$LN4@initHash:
; Line 369
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44363[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initHash@CurrencyPluralInfo@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::initHash
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValueComparator
_TEXT	SEGMENT
_affix_2$ = -20						; size = 4
_affix_1$ = -8						; size = 4
_val1$ = 8						; size = 4
_val2$ = 12						; size = 4
_ValueComparator PROC					; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _val1$[ebp]
	mov	DWORD PTR _affix_1$[ebp], eax
; Line 43
	mov	eax, DWORD PTR _val2$[ebp]
	mov	DWORD PTR _affix_2$[ebp], eax
; Line 44
	mov	esi, esp
	mov	eax, DWORD PTR _affix_2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affix_1$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValueComparator ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv131 = -408						; size = 4
tv135 = -404						; size = 4
tv83 = -404						; size = 4
$T44382 = -396						; size = 4
$T44383 = -384						; size = 4
$T37317 = -372						; size = 64
_copy$37312 = -108					; size = 4
_value$37310 = -96					; size = 4
_valueTok$37309 = -84					; size = 4
_key$37307 = -72					; size = 4
_keyTok$37306 = -60					; size = 4
_element$ = -48						; size = 4
_pos$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_status$ = 16						; size = 4
?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z PROC ; icu_56::CurrencyPluralInfo::copyHash, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@copyHash
; Line 377
	jmp	$LN6@copyHash
$LN5@copyHash:
; Line 379
	mov	DWORD PTR _pos$[ebp], -1
; Line 380
	mov	DWORD PTR _element$[ebp], 0
; Line 381
	cmp	DWORD PTR _source$[ebp], 0
	je	$LN6@copyHash
$LN3@copyHash:
; Line 382
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN6@copyHash
; Line 383
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _keyTok$37306[ebp], ecx
; Line 384
	mov	eax, DWORD PTR _keyTok$37306[ebp]
	mov	DWORD PTR _key$37307[ebp], eax
; Line 385
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$37309[ebp], ecx
; Line 386
	mov	eax, DWORD PTR _valueTok$37309[ebp]
	mov	DWORD PTR _value$37310[ebp], eax
; Line 387
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44383[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44383[ebp], 0
	je	SHORT $LN8@copyHash
	mov	esi, esp
	mov	eax, DWORD PTR _value$37310[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44383[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T44383[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T44383[ebp]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN9@copyHash
$LN8@copyHash:
	mov	DWORD PTR tv83[ebp], 0
$LN9@copyHash:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T44382[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T44382[ebp]
	mov	DWORD PTR _copy$37312[ebp], ecx
; Line 388
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$37312[ebp]
	push	ecx
	mov	edi, esp
	mov	edx, DWORD PTR _key$37307[ebp]
	push	edx
	lea	ecx, DWORD PTR $T37317[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv131[ebp]
	push	ecx
	mov	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37317[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 389
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@copyHash
; Line 390
	jmp	SHORT $LN6@copyHash
$LN1@copyHash:
; Line 392
	jmp	$LN3@copyHash
$LN6@copyHash:
; Line 394
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@copyHash
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN17@copyHash:
	DD	3
	DD	$LN16@copyHash
$LN16@copyHash:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN12@copyHash
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN13@copyHash
	DD	-84					; ffffffacH
	DD	4
	DD	$LN14@copyHash
$LN14@copyHash:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN13@copyHash:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN12@copyHash:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44383[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37317[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?copyHash@CurrencyPluralInfo@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::CurrencyPluralInfo::copyHash
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\ucol_sit.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TRIED_SEARCH@CollationLoader@icu_56@@0IB	; icu_56::CollationLoader::TRIED_SEARCH
PUBLIC	?TRIED_DEFAULT@CollationLoader@icu_56@@0IB	; icu_56::CollationLoader::TRIED_DEFAULT
PUBLIC	?TRIED_STANDARD@CollationLoader@icu_56@@0IB	; icu_56::CollationLoader::TRIED_STANDARD
CONST	SEGMENT
_collationKeyword DB '@collation=', 00H
_providerKeyword DB '@sp=', 00H
	ORG $+7
_conversions DB	031H
	ORG $+3
	DD	00H
	DB	032H
	ORG $+3
	DD	01H
	DB	033H
	ORG $+3
	DD	02H
	DB	034H
	ORG $+3
	DD	03H
	DB	044H
	ORG $+3
	DD	0ffffffffH
	DB	049H
	ORG $+3
	DD	0fH
	DB	04cH
	ORG $+3
	DD	018H
	DB	04eH
	ORG $+3
	DD	015H
	DB	04fH
	ORG $+3
	DD	011H
	DB	053H
	ORG $+3
	DD	014H
	DB	055H
	ORG $+3
	DD	019H
	DB	058H
	ORG $+3
	DD	010H
_options DB	041H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	01H
	DB	042H
	ORG $+3
	DD	FLAT:__processVariableTop
	DD	01H
	DB	043H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	02H
	DB	044H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	07H
	DB	045H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	03H
	DB	046H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	00H
	DB	048H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	06H
	DB	04bH
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	04H
	DB	04cH
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	00H
	DB	04eH
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	04H
	DB	052H
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	02H
	DB	053H
	ORG $+3
	DD	FLAT:__processCollatorOption
	DD	05H
	DB	054H
	ORG $+3
	DD	FLAT:__processVariableTop
	DD	00H
	DB	056H
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	03H
	DB	058H
	ORG $+3
	DD	FLAT:__processRFC3066Locale
	DD	00H
	DB	05aH
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	01H
	DB	050H
	ORG $+3
	DD	FLAT:__processLocaleElement
	DD	05H
CONST	ENDS
;	COMDAT ?TRIED_STANDARD@CollationLoader@icu_56@@0IB
CONST	SEGMENT
?TRIED_STANDARD@CollationLoader@icu_56@@0IB DD 04H	; icu_56::CollationLoader::TRIED_STANDARD
CONST	ENDS
;	COMDAT ?TRIED_DEFAULT@CollationLoader@icu_56@@0IB
CONST	SEGMENT
?TRIED_DEFAULT@CollationLoader@icu_56@@0IB DD 02H	; icu_56::CollationLoader::TRIED_DEFAULT
CONST	ENDS
;	COMDAT ?TRIED_SEARCH@CollationLoader@icu_56@@0IB
CONST	SEGMENT
?TRIED_SEARCH@CollationLoader@icu_56@@0IB DD 01H	; icu_56::CollationLoader::TRIED_SEARCH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coll.h
; Line 1161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1162
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1163
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; Line 1165
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1166
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1169
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
; Line 1171
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1174
	mov	eax, DWORD PTR _this$[ebp]
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	??_7CollatorFactory@icu_56@@6B@			; icu_56::CollatorFactory::`vftable'
PUBLIC	??0CollatorFactory@icu_56@@QAE@XZ		; icu_56::CollatorFactory::CollatorFactory
PUBLIC	??_R4CollatorFactory@icu_56@@6B@		; icu_56::CollatorFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollatorFactory@icu_56@@@8		; icu_56::CollatorFactory `RTTI Type Descriptor'
PUBLIC	??_R3CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollatorFactory@icu_56@@8		; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	?visible@CollatorFactory@icu_56@@UBECXZ:PROC	; icu_56::CollatorFactory::visible
EXTRN	__purecall:PROC
EXTRN	?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:PROC ; icu_56::CollatorFactory::getDisplayName
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollatorFactory@icu_56@@8 DD FLAT:??_R0?AVCollatorFactory@icu_56@@@8 ; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R2CollatorFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollatorFactory@icu_56@@8 ; icu_56::CollatorFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R3CollatorFactory@icu_56@@8 DD 00H			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollatorFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollatorFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollatorFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollatorFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollatorFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollatorFactory@icu_56@@6B@ DD 00H			; icu_56::CollatorFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollatorFactory@icu_56@@@8
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollatorFactory@icu_56@@6B@
CONST	SEGMENT
??_7CollatorFactory@icu_56@@6B@ DD FLAT:??_R4CollatorFactory@icu_56@@6B@ ; icu_56::CollatorFactory::`vftable'
	DD	FLAT:??_ECollatorFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@CollatorFactory@icu_56@@UBECXZ
	DD	FLAT:__purecall
	DD	FLAT:?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollatorFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollatorFactory@icu_56@@QAE@XZ PROC			; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollatorFactory@icu_56@@QAE@XZ ENDP			; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??0CollatorFactory@icu_56@@QAE@ABV01@@Z		; icu_56::CollatorFactory::CollatorFactory
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollatorFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollatorFactory::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CollatorFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CollatorFactory::operator=
_TEXT	ENDS
PUBLIC	??_GCollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1CollatorFactory@icu_56@@UAE@XZ:PROC		; icu_56::CollatorFactory::~CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CollatorFactory@icu_56@@UAE@XZ ; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVCollator@icu_56@@@8			; icu_56::Collator `RTTI Type Descriptor'
PUBLIC	??_R0?AVRuleBasedCollator@icu_56@@@8		; icu_56::RuleBasedCollator `RTTI Type Descriptor'
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVCollator@icu_56@@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\tblcoll.h
_DATA	SEGMENT
??_R0?AVCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Collator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVRuleBasedCollator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedCollator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedCollator@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 782
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeDefault, COMDAT
; _this$ = ecx
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 837
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 838
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeDefault
_TEXT	ENDS
PUBLIC	?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeExplicitly, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 841
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeExplicitly
_TEXT	ENDS
PUBLIC	?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z PROC ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly, COMDAT
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 844
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	setne	al
; Line 845
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ENDP ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
_TEXT	ENDS
EXTRN	_uprv_asciitolower_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __processLocaleElement
_TEXT	SEGMENT
_len$ = -8						; size = 4
_spec$ = 8						; size = 4
_value$ = 12						; size = 4
_string$ = 16						; size = 4
_status$ = 20						; size = 4
__processLocaleElement PROC				; COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucol_sit.cpp
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 157
	mov	DWORD PTR _len$[ebp], 0
$LN8@processLoc:
; Line 159
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN4@processLoc
	cmp	DWORD PTR _value$[ebp], 4
	je	SHORT $LN4@processLoc
	cmp	DWORD PTR _value$[ebp], 5
	jne	SHORT $LN5@processLoc
$LN4@processLoc:
; Line 160
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_uprv_asciitolower_56
	add	esp, 4
	mov	edx, DWORD PTR _value$[ebp]
	shl	edx, 5
	add	edx, DWORD PTR _spec$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx+ecx], al
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 161
	jmp	SHORT $LN7@processLoc
$LN5@processLoc:
; Line 162
	mov	eax, DWORD PTR _value$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR _spec$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _string$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
$LN7@processLoc:
; Line 164
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 1
	mov	DWORD PTR _string$[ebp], eax
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 95					; 0000005fH
	je	SHORT $LN6@processLoc
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@processLoc
	cmp	DWORD PTR _len$[ebp], 32		; 00000020H
	jl	SHORT $LN8@processLoc
$LN6@processLoc:
; Line 165
	cmp	DWORD PTR _len$[ebp], 32		; 00000020H
	jl	SHORT $LN1@processLoc
; Line 166
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 167
	mov	eax, DWORD PTR _string$[ebp]
	jmp	SHORT $LN9@processLoc
$LN1@processLoc:
; Line 170
	mov	eax, DWORD PTR _string$[ebp]
$LN9@processLoc:
; Line 171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__processLocaleElement ENDP
_TEXT	ENDS
EXTRN	__imp__strncpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __processRFC3066Locale
_TEXT	SEGMENT
_end$ = -20						; size = 4
_terminator$ = -5					; size = 1
_spec$ = 8						; size = 4
___formal$ = 12						; size = 4
_string$ = 16						; size = 4
_status$ = 20						; size = 4
__processRFC3066Locale PROC				; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 179
	mov	eax, DWORD PTR _string$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _terminator$[ebp], cl
; Line 180
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 1
	mov	DWORD PTR _string$[ebp], eax
; Line 181
	movsx	eax, BYTE PTR _terminator$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	add	ecx, 1
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$[ebp], eax
; Line 182
	cmp	DWORD PTR _end$[ebp], 0
	je	SHORT $LN2@processRFC
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _string$[ebp]
	cmp	eax, 256				; 00000100H
	jl	SHORT $LN3@processRFC
$LN2@processRFC:
; Line 183
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 184
	mov	eax, DWORD PTR _string$[ebp]
	jmp	SHORT $LN4@processRFC
; Line 185
	jmp	SHORT $LN4@processRFC
$LN3@processRFC:
; Line 186
	push	1
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _end$[ebp]
	sub	ecx, DWORD PTR _string$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	mov	eax, DWORD PTR _spec$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 187
	mov	eax, DWORD PTR _end$[ebp]
	add	eax, 1
$LN4@processRFC:
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__processRFC3066Locale ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __processCollatorOption
_TEXT	SEGMENT
_spec$ = 8						; size = 4
_option$ = 12						; size = 4
_string$ = 16						; size = 4
_status$ = 20						; size = 4
__processCollatorOption PROC				; COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z ; ucol_sit_letterToAttributeValue
	add	esp, 8
	mov	ecx, DWORD PTR _option$[ebp]
	mov	edx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [edx+ecx*4+460], eax
; Line 199
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 1
	mov	DWORD PTR _string$[ebp], eax
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 95					; 0000005fH
	je	SHORT $LN1@processCol
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@processCol
$LN1@processCol:
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@processCol
$LN2@processCol:
; Line 203
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN3@processCol:
; Line 205
	mov	eax, DWORD PTR _string$[ebp]
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__processCollatorOption ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_letter$ = 8						; size = 1
_status$ = 12						; size = 4
?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z PROC ; ucol_sit_letterToAttributeValue, COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucol_sit.cpp
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 132
	mov	DWORD PTR _i$[ebp], 0
; Line 133
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ucol_sit_l
$LN3@ucol_sit_l:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ucol_sit_l:
	cmp	DWORD PTR _i$[ebp], 12			; 0000000cH
	jae	SHORT $LN2@ucol_sit_l
; Line 134
	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR _conversions[eax*8]
	movsx	edx, BYTE PTR _letter$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@ucol_sit_l
; Line 135
	mov	eax, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _conversions[eax*8+4]
	jmp	SHORT $LN5@ucol_sit_l
$LN1@ucol_sit_l:
; Line 137
	jmp	SHORT $LN3@ucol_sit_l
$LN2@ucol_sit_l:
; Line 138
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 142
	or	eax, -1
$LN5@ucol_sit_l:
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_letterToAttributeValue@@YA?AW4UColAttributeValue@@DPAW4UErrorCode@@@Z ENDP ; ucol_sit_letterToAttributeValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __processVariableTop
_TEXT	SEGMENT
_i$ = -8						; size = 4
_spec$ = 8						; size = 4
_value1$ = 12						; size = 4
_string$ = 16						; size = 4
_status$ = 20						; size = 4
__processVariableTop PROC				; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 250
	mov	DWORD PTR _i$[ebp], 0
; Line 251
	cmp	DWORD PTR _value1$[ebp], 0
	jne	$LN6@processVar
$LN5@processVar:
; Line 252
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@processVar
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jge	SHORT $LN4@processVar
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@processVar
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 95					; 0000005fH
	je	SHORT $LN4@processVar
; Line 253
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z ; readHexCodeUnit
	add	esp, 8
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _spec$[ebp]
	mov	WORD PTR [ecx+edx*2+496], ax
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 254
	jmp	SHORT $LN5@processVar
$LN4@processVar:
; Line 255
	mov	eax, DWORD PTR _spec$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+560], ecx
; Line 256
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jne	SHORT $LN3@processVar
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@processVar
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 95					; 0000005fH
	je	SHORT $LN3@processVar
; Line 257
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN3@processVar:
; Line 259
	jmp	SHORT $LN2@processVar
$LN6@processVar:
; Line 260
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z ; readHexCodeUnit
	add	esp, 8
	movzx	edx, ax
	mov	eax, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [eax+492], edx
$LN2@processVar:
; Line 262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@processVar
; Line 263
	mov	eax, DWORD PTR _spec$[ebp]
	mov	BYTE PTR [eax+564], 1
$LN1@processVar:
; Line 265
	mov	eax, DWORD PTR _string$[ebp]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__processVariableTop ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_noDigits$ = -44					; size = 4
_c$ = -29						; size = 1
_value$ = -20						; size = 4
_result$ = -8						; size = 2
_string$ = 8						; size = 4
_status$ = 12						; size = 4
?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z PROC	; readHexCodeUnit, COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucol_sit.cpp
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	xor	eax, eax
	mov	WORD PTR _result$[ebp], ax
; Line 214
	mov	DWORD PTR _value$[ebp], 0
; Line 216
	mov	DWORD PTR _noDigits$[ebp], 0
$LN9@readHexCod:
; Line 217
	mov	eax, DWORD PTR _string$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _c$[ebp], dl
	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	je	$LN8@readHexCod
	cmp	DWORD PTR _noDigits$[ebp], 4
	jge	$LN8@readHexCod
; Line 218
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN7@readHexCod
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN7@readHexCod
; Line 219
	movsx	eax, BYTE PTR _c$[ebp]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR _value$[ebp], eax
	jmp	SHORT $LN6@readHexCod
$LN7@readHexCod:
; Line 220
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN5@readHexCod
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 102				; 00000066H
	jg	SHORT $LN5@readHexCod
; Line 221
	movsx	eax, BYTE PTR _c$[ebp]
	sub	eax, 87					; 00000057H
	mov	DWORD PTR _value$[ebp], eax
	jmp	SHORT $LN6@readHexCod
$LN5@readHexCod:
; Line 222
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN3@readHexCod
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 70					; 00000046H
	jg	SHORT $LN3@readHexCod
; Line 223
	movsx	eax, BYTE PTR _c$[ebp]
	sub	eax, 55					; 00000037H
	mov	DWORD PTR _value$[ebp], eax
; Line 224
	jmp	SHORT $LN6@readHexCod
$LN3@readHexCod:
; Line 225
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 229
	xor	eax, eax
	jmp	SHORT $LN10@readHexCod
$LN6@readHexCod:
; Line 231
	movzx	eax, WORD PTR _result$[ebp]
	shl	eax, 4
	movzx	ecx, WORD PTR _value$[ebp]
	or	eax, ecx
	mov	WORD PTR _result$[ebp], ax
; Line 232
	mov	eax, DWORD PTR _noDigits$[ebp]
	add	eax, 1
	mov	DWORD PTR _noDigits$[ebp], eax
; Line 233
	mov	eax, DWORD PTR _string$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _string$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 234
	jmp	$LN9@readHexCod
$LN8@readHexCod:
; Line 236
	cmp	DWORD PTR _noDigits$[ebp], 4
	jge	SHORT $LN1@readHexCod
; Line 237
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@readHexCod:
; Line 242
	mov	ax, WORD PTR _result$[ebp]
$LN10@readHexCod:
; Line 243
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readHexCodeUnit@@YA_WPAPBDPAW4UErrorCode@@@Z ENDP	; readHexCodeUnit
_TEXT	ENDS
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_09FPAMBNKH@collation?$AA@			; `string'
PUBLIC	??_C@_0L@EMPPBAGD@collations?$AA@		; `string'
PUBLIC	??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucol_prepareShortStringOpen_56
EXTRN	_ures_close_56:PROC
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_ures_getString_56:PROC
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_uloc_getKeywordValue_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	_uloc_canonicalize_56:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FPAMBNKH@collation?$AA@
CONST	SEGMENT
??_C@_09FPAMBNKH@collation?$AA@ DB 'collation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMPPBAGD@collations?$AA@
CONST	SEGMENT
??_C@_0L@EMPPBAGD@collations?$AA@ DB 'collations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@
CONST	SEGMENT
??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@ DB 'icudt56l-coll', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucol_prepareShortStringOpen_56
_TEXT	SEGMENT
_defaultKey$39723 = -1648				; size = 4
_defaultKeyLen$39722 = -1636				; size = 4
_defaultColl$39719 = -1624				; size = 4
_keyBuffer$ = -1612					; size = 256
_collElem$ = -1348					; size = 4
_collations$ = -1336					; size = 4
_b$ = -1324						; size = 4
_buffer$ = -1312					; size = 512
_s$ = -792						; size = 704
_internalParseError$ = -80				; size = 72
__$ArrayPad$ = -4					; size = 4
_definition$ = 8					; size = 4
___formal$ = 12						; size = 1
_parseError$ = 16					; size = 4
_status$ = 20						; size = 4
_ucol_prepareShortStringOpen_56 PROC			; COMDAT
; Line 432
	push	ebp
	mov	ebp, esp
	sub	esp, 1844				; 00000734H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1844]
	mov	ecx, 461				; 000001cdH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 433
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ucol_prepa
	jmp	$LN6@ucol_prepa
$LN5@ucol_prepa:
; Line 437
	cmp	DWORD PTR _parseError$[ebp], 0
	jne	SHORT $LN4@ucol_prepa
; Line 438
	lea	eax, DWORD PTR _internalParseError$[ebp]
	mov	DWORD PTR _parseError$[ebp], eax
$LN4@ucol_prepa:
; Line 440
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax], 0
; Line 441
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 442
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 443
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+40], ax
; Line 452
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z ; ucol_sit_initCollatorSpecs
	add	esp, 4
; Line 453
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _definition$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z ; ucol_sit_readSpecs
	add	esp, 16					; 00000010H
; Line 454
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z ; ucol_sit_calculateWholeLocale
	add	esp, 4
; Line 457
	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 458
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	512					; 00000200H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$[ebp+192]
	push	edx
	call	_uloc_canonicalize_56
	add	esp, 16					; 00000010H
; Line 460
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@PJMCGFEE@icudt56l?9coll?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _b$[ebp], eax
; Line 462
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0L@EMPPBAGD@collations?$AA@
	mov	ecx, DWORD PTR _b$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _collations$[ebp], eax
; Line 463
	mov	DWORD PTR _collElem$[ebp], 0
; Line 466
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _keyBuffer$[ebp]
	push	ecx
	push	OFFSET ??_C@_09FPAMBNKH@collation?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN3@ucol_prepa
; Line 468
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	ecx, DWORD PTR _collations$[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _defaultColl$39719[ebp], eax
; Line 469
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucol_prepa
; Line 470
	mov	DWORD PTR _defaultKeyLen$39722[ebp], 0
; Line 471
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _defaultKeyLen$39722[ebp]
	push	ecx
	mov	edx, DWORD PTR _defaultColl$39719[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _defaultKey$39723[ebp], eax
; Line 472
	mov	eax, DWORD PTR _defaultKeyLen$39722[ebp]
	push	eax
	lea	ecx, DWORD PTR _keyBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _defaultKey$39723[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 473
	mov	eax, DWORD PTR _defaultKeyLen$39722[ebp]
	mov	BYTE PTR _keyBuffer$[ebp+eax], 0
; Line 474
	jmp	SHORT $LN1@ucol_prepa
$LN2@ucol_prepa:
; Line 475
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 476
	jmp	SHORT $LN6@ucol_prepa
$LN1@ucol_prepa:
; Line 478
	mov	eax, DWORD PTR _defaultColl$39719[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN3@ucol_prepa:
; Line 480
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collElem$[ebp]
	push	ecx
	lea	edx, DWORD PTR _keyBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _collations$[ebp]
	push	eax
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _collElem$[ebp], eax
; Line 481
	mov	eax, DWORD PTR _collElem$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 482
	mov	eax, DWORD PTR _collations$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 483
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN6@ucol_prepa:
; Line 484
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@ucol_prepa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1844				; 00000734H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@ucol_prepa:
	DD	5
	DD	$LN13@ucol_prepa
$LN13@ucol_prepa:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN8@ucol_prepa
	DD	-792					; fffffce8H
	DD	704					; 000002c0H
	DD	$LN9@ucol_prepa
	DD	-1312					; fffffae0H
	DD	512					; 00000200H
	DD	$LN10@ucol_prepa
	DD	-1612					; fffff9b4H
	DD	256					; 00000100H
	DD	$LN11@ucol_prepa
	DD	-1636					; fffff99cH
	DD	4
	DD	$LN12@ucol_prepa
$LN12@ucol_prepa:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN11@ucol_prepa:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@ucol_prepa:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@ucol_prepa:
	DB	115					; 00000073H
	DB	0
$LN8@ucol_prepa:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_ucol_prepareShortStringOpen_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_spec$ = 8						; size = 4
?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z PROC ; ucol_sit_initCollatorSpecs, COMDAT
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 324
	push	704					; 000002c0H
	push	0
	mov	eax, DWORD PTR _spec$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 326
	mov	DWORD PTR _i$[ebp], 0
; Line 327
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ucol_sit_i
$LN2@ucol_sit_i:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ucol_sit_i:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN4@ucol_sit_i
; Line 328
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [ecx+eax*4+460], -1
; Line 329
	jmp	SHORT $LN2@ucol_sit_i
$LN4@ucol_sit_i:
; Line 330
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z ENDP ; ucol_sit_initCollatorSpecs
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_definition$ = -8					; size = 4
_s$ = 8							; size = 4
_string$ = 12						; size = 4
_parseError$ = 16					; size = 4
_status$ = 20						; size = 4
?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z PROC ; ucol_sit_readSpecs, COMDAT
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 336
	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR _definition$[ebp], eax
$LN5@ucol_sit_r:
; Line 337
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ucol_sit_r
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@ucol_sit_r
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	call	?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z ; ucol_sit_readOption
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _string$[ebp], eax
$LN3@ucol_sit_r:
; Line 340
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@ucol_sit_r
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 95					; 0000005fH
	jne	SHORT $LN2@ucol_sit_r
; Line 341
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 1
	mov	DWORD PTR _string$[ebp], eax
; Line 342
	jmp	SHORT $LN3@ucol_sit_r
$LN2@ucol_sit_r:
; Line 343
	jmp	SHORT $LN5@ucol_sit_r
$LN4@ucol_sit_r:
; Line 344
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_sit_r
; Line 345
	mov	eax, DWORD PTR _string$[ebp]
	sub	eax, DWORD PTR _definition$[ebp]
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN1@ucol_sit_r:
; Line 347
	mov	eax, DWORD PTR _string$[ebp]
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z ENDP ; ucol_sit_readSpecs
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_end$39637 = -20					; size = 4
_i$ = -8						; size = 4
_start$ = 8						; size = 4
_spec$ = 12						; size = 4
_status$ = 16						; size = 4
?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z PROC ; ucol_sit_readOption, COMDAT
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 303
	mov	DWORD PTR _i$[ebp], 0
; Line 305
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ucol_sit_r@2
$LN3@ucol_sit_r@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ucol_sit_r@2:
	cmp	DWORD PTR _i$[ebp], 17			; 00000011H
	jge	SHORT $LN2@ucol_sit_r@2
; Line 306
	mov	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	movsx	eax, BYTE PTR _options[edx]
	cmp	ecx, eax
	jne	SHORT $LN1@ucol_sit_r@2
; Line 307
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _spec$[ebp]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+eax*8+568], edx
; Line 308
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _options[edx+8]
	push	eax
	mov	ecx, DWORD PTR _spec$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _options[edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$39637[ebp], eax
; Line 309
	mov	eax, DWORD PTR _end$39637[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [edx+ecx*8+572], eax
; Line 310
	mov	eax, DWORD PTR _end$39637[ebp]
	jmp	SHORT $LN5@ucol_sit_r@2
$LN1@ucol_sit_r@2:
; Line 312
	jmp	$LN3@ucol_sit_r@2
$LN2@ucol_sit_r@2:
; Line 313
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 317
	mov	eax, DWORD PTR _start$[ebp]
$LN5@ucol_sit_r@2:
; Line 318
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_readOption@@YAPBDPBDPAUCollatorSpec@@PAW4UErrorCode@@@Z ENDP ; ucol_sit_readOption
_TEXT	ENDS
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
EXTRN	_strcat:PROC
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z PROC ; ucol_sit_calculateWholeLocale, COMDAT
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 391
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+192]
	test	ecx, ecx
	jne	$LN9@ucol_sit_c
; Line 393
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
; Line 395
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN7@ucol_sit_c
; Line 396
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
; Line 397
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
$LN7@ucol_sit_c:
; Line 400
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+64]
	test	ecx, ecx
	je	SHORT $LN6@ucol_sit_c
; Line 401
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
; Line 402
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN5@ucol_sit_c
$LN6@ucol_sit_c:
; Line 403
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN5@ucol_sit_c
; Line 404
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
$LN5@ucol_sit_c:
; Line 407
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN3@ucol_sit_c
; Line 408
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
; Line 409
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
$LN3@ucol_sit_c:
; Line 413
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+128]
	test	ecx, ecx
	je	SHORT $LN2@ucol_sit_c
; Line 414
	push	OFFSET _collationKeyword
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
; Line 415
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
$LN2@ucol_sit_c:
; Line 419
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+160]
	test	ecx, ecx
	je	SHORT $LN9@ucol_sit_c
; Line 420
	push	OFFSET _providerKeyword
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_strcat
	add	esp, 8
; Line 421
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 192				; 000000c0H
	push	ecx
	call	_strcat
	add	esp, 8
$LN9@ucol_sit_c:
; Line 424
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z ENDP ; ucol_sit_calculateWholeLocale
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucol_openFromShortString_56
EXTRN	_ucol_restoreVariableTop_56:PROC
EXTRN	_ucol_setVariableTop_56:PROC
EXTRN	_ucol_close_56:PROC
EXTRN	_ucol_setAttribute_56:PROC
EXTRN	_ucol_getAttribute_56:PROC
EXTRN	_ucol_open_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_openFromShortString_56
_TEXT	SEGMENT
_i$ = -1348						; size = 4
_result$ = -1336					; size = 4
_buffer$ = -1324					; size = 512
_s$ = -804						; size = 704
_string$ = -92						; size = 4
_internalParseError$ = -80				; size = 72
__$ArrayPad$ = -4					; size = 4
_definition$ = 8					; size = 4
_forceDefaults$ = 12					; size = 1
_parseError$ = 16					; size = 4
_status$ = 20						; size = 4
_ucol_openFromShortString_56 PROC			; COMDAT
; Line 492
	push	ebp
	mov	ebp, esp
	sub	esp, 1544				; 00000608H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1544]
	mov	ecx, 386				; 00000182H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 496
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@ucol_openF
	xor	eax, eax
	jmp	$LN14@ucol_openF
$LN13@ucol_openF:
; Line 500
	cmp	DWORD PTR _parseError$[ebp], 0
	jne	SHORT $LN12@ucol_openF
; Line 501
	lea	eax, DWORD PTR _internalParseError$[ebp]
	mov	DWORD PTR _parseError$[ebp], eax
$LN12@ucol_openF:
; Line 503
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax], 0
; Line 504
	mov	eax, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 505
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 506
	xor	eax, eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	WORD PTR [ecx+40], ax
; Line 514
	mov	eax, DWORD PTR _definition$[ebp]
	mov	DWORD PTR _string$[ebp], eax
; Line 516
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z ; ucol_sit_initCollatorSpecs
	add	esp, 4
; Line 517
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _definition$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z ; ucol_sit_readSpecs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _string$[ebp], eax
; Line 518
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_calculateWholeLocale@@YAXPAUCollatorSpec@@@Z ; ucol_sit_calculateWholeLocale
	add	esp, 4
; Line 521
	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 522
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	512					; 00000200H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$[ebp+192]
	push	edx
	call	_uloc_canonicalize_56
	add	esp, 16					; 00000010H
; Line 524
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_ucol_open_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 525
	mov	DWORD PTR _i$[ebp], 0
; Line 527
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@ucol_openF
$LN10@ucol_openF:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@ucol_openF:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN9@ucol_openF
; Line 528
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _s$[ebp+eax*4+460], -1
	je	$LN8@ucol_openF
; Line 529
	movsx	eax, BYTE PTR _forceDefaults$[ebp]
	test	eax, eax
	jne	SHORT $LN6@ucol_openF
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _s$[ebp+ecx*4+460]
	je	SHORT $LN7@ucol_openF
$LN6@ucol_openF:
; Line 530
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _s$[ebp+ecx*4+460]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_ucol_setAttribute_56
	add	esp, 16					; 00000010H
$LN7@ucol_openF:
; Line 533
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucol_openF
; Line 534
	mov	eax, DWORD PTR _string$[ebp]
	sub	eax, DWORD PTR _definition$[ebp]
	mov	ecx, DWORD PTR _parseError$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 535
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_ucol_close_56
	add	esp, 4
; Line 536
	xor	eax, eax
	jmp	$LN14@ucol_openF
$LN8@ucol_openF:
; Line 540
	jmp	$LN10@ucol_openF
$LN9@ucol_openF:
; Line 541
	movsx	eax, BYTE PTR _s$[ebp+564]
	test	eax, eax
	je	SHORT $LN4@ucol_openF
; Line 542
	movzx	eax, WORD PTR _s$[ebp+496]
	test	eax, eax
	je	SHORT $LN3@ucol_openF
; Line 543
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp+560]
	push	ecx
	lea	edx, DWORD PTR _s$[ebp+496]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_ucol_setVariableTop_56
	add	esp, 16					; 00000010H
; Line 544
	jmp	SHORT $LN4@ucol_openF
$LN3@ucol_openF:
; Line 545
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp+492]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_ucol_restoreVariableTop_56
	add	esp, 12					; 0000000cH
$LN4@ucol_openF:
; Line 550
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_openF
; Line 551
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_ucol_close_56
	add	esp, 4
; Line 552
	mov	DWORD PTR _result$[ebp], 0
$LN1@ucol_openF:
; Line 556
	mov	eax, DWORD PTR _result$[ebp]
$LN14@ucol_openF:
; Line 557
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ucol_openF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1544				; 00000608H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@ucol_openF:
	DD	3
	DD	$LN19@ucol_openF
$LN19@ucol_openF:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN16@ucol_openF
	DD	-804					; fffffcdcH
	DD	704					; 000002c0H
	DD	$LN17@ucol_openF
	DD	-1324					; fffffad4H
	DD	512					; 00000200H
	DD	$LN18@ucol_openF
$LN18@ucol_openF:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN17@ucol_openF:
	DB	115					; 00000073H
	DB	0
$LN16@ucol_openF:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_ucol_openFromShortString_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getShortDefinitionString_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getShortDefinitionString_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_locale$ = 12						; size = 4
_dst$ = 16						; size = 4
_capacity$ = 20						; size = 4
_status$ = 24						; size = 4
_ucol_getShortDefinitionString_56 PROC			; COMDAT
; Line 566
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 567
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucol_getSh
	xor	eax, eax
	jmp	SHORT $LN3@ucol_getSh
$LN2@ucol_getSh:
; Line 568
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN1@ucol_getSh
; Line 569
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 570
	xor	eax, eax
	jmp	SHORT $LN3@ucol_getSh
$LN1@ucol_getSh:
; Line 572
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coll$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _coll$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_getSh:
; Line 573
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getShortDefinitionString_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucol_normalizeShortDefinitionString_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_normalizeShortDefinitionString_56
_TEXT	SEGMENT
_s$ = -792						; size = 704
_pe$ = -80						; size = 72
__$ArrayPad$ = -4					; size = 4
_definition$ = 8					; size = 4
_destination$ = 12					; size = 4
_capacity$ = 16						; size = 4
_parseError$ = 20					; size = 4
_status$ = 24						; size = 4
_ucol_normalizeShortDefinitionString_56 PROC		; COMDAT
; Line 581
	push	ebp
	mov	ebp, esp
	sub	esp, 988				; 000003dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-988]
	mov	ecx, 247				; 000000f7H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 583
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucol_norma
; Line 584
	xor	eax, eax
	jmp	SHORT $LN4@ucol_norma
$LN3@ucol_norma:
; Line 587
	cmp	DWORD PTR _destination$[ebp], 0
	je	SHORT $LN2@ucol_norma
; Line 588
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _destination$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN2@ucol_norma:
; Line 592
	cmp	DWORD PTR _parseError$[ebp], 0
	jne	SHORT $LN1@ucol_norma
; Line 593
	lea	eax, DWORD PTR _pe$[ebp]
	mov	DWORD PTR _parseError$[ebp], eax
$LN1@ucol_norma:
; Line 598
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_initCollatorSpecs@@YAXPAUCollatorSpec@@@Z ; ucol_sit_initCollatorSpecs
	add	esp, 4
; Line 599
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _definition$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_readSpecs@@YAPBDPAUCollatorSpec@@PBDPAUUParseError@@PAW4UErrorCode@@@Z ; ucol_sit_readSpecs
	add	esp, 16					; 00000010H
; Line 600
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destination$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z ; ucol_sit_dumpSpecs
	add	esp, 16					; 00000010H
$LN4@ucol_norma:
; Line 601
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ucol_norma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 988				; 000003dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@ucol_norma:
	DD	2
	DD	$LN8@ucol_norma
$LN8@ucol_norma:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN6@ucol_norma
	DD	-792					; fffffce8H
	DD	704					; 000002c0H
	DD	$LN7@ucol_norma
$LN7@ucol_norma:
	DB	115					; 00000073H
	DB	0
$LN6@ucol_norma:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_ucol_normalizeShortDefinitionString_56 ENDP
_TEXT	ENDS
EXTRN	__imp__strncat:PROC
EXTRN	_uprv_toupper_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_optName$ = -41						; size = 1
_len$ = -32						; size = 4
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_s$ = 8							; size = 4
_destination$ = 12					; size = 4
_capacity$ = 16						; size = 4
_status$ = 20						; size = 4
?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z PROC ; ucol_sit_dumpSpecs, COMDAT
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
; Line 354
	mov	DWORD PTR _len$[ebp], 0
; Line 356
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN16@ucol_sit_d
; Line 357
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@ucol_sit_d
$LN14@ucol_sit_d:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@ucol_sit_d:
	cmp	DWORD PTR _i$[ebp], 17			; 00000011H
	jge	$LN13@ucol_sit_d
; Line 358
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [ecx+eax*8+568], 0
	je	$LN12@ucol_sit_d
; Line 359
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN11@ucol_sit_d
; Line 360
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jge	SHORT $LN10@ucol_sit_d
; Line 361
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _destination$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN10@ucol_sit_d:
; Line 363
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
$LN11@ucol_sit_d:
; Line 365
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+568]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _optName$[ebp], al
; Line 366
	movsx	eax, BYTE PTR _optName$[ebp]
	cmp	eax, 76					; 0000004cH
	je	SHORT $LN8@ucol_sit_d
	movsx	eax, BYTE PTR _optName$[ebp]
	cmp	eax, 82					; 00000052H
	je	SHORT $LN8@ucol_sit_d
	movsx	eax, BYTE PTR _optName$[ebp]
	cmp	eax, 86					; 00000056H
	je	SHORT $LN8@ucol_sit_d
	movsx	eax, BYTE PTR _optName$[ebp]
	cmp	eax, 75					; 0000004bH
	jne	SHORT $LN9@ucol_sit_d
$LN8@ucol_sit_d:
; Line 367
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN7@ucol_sit_d
$LN6@ucol_sit_d:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@ucol_sit_d:
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8+572]
	jge	SHORT $LN5@ucol_sit_d
; Line 368
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jge	SHORT $LN4@ucol_sit_d
; Line 369
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+568]
	mov	eax, DWORD PTR _j$[ebp]
	movzx	ecx, BYTE PTR [edx+eax]
	push	ecx
	call	_uprv_toupper_56
	add	esp, 4
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _destination$[ebp]
	mov	BYTE PTR [ecx+edx], al
$LN4@ucol_sit_d:
; Line 371
	jmp	SHORT $LN6@ucol_sit_d
$LN5@ucol_sit_d:
; Line 372
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, DWORD PTR [ecx+eax*8+572]
	mov	DWORD PTR _len$[ebp], edx
	jmp	SHORT $LN12@ucol_sit_d
$LN9@ucol_sit_d:
; Line 374
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, DWORD PTR [ecx+eax*8+572]
	mov	DWORD PTR _len$[ebp], edx
; Line 375
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jge	SHORT $LN12@ucol_sit_d
; Line 376
	push	1
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+568]
	push	edx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+572]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+568]
	push	edx
	mov	eax, DWORD PTR _destination$[ebp]
	push	eax
	call	DWORD PTR __imp__strncat
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@ucol_sit_d:
; Line 380
	jmp	$LN14@ucol_sit_d
$LN13@ucol_sit_d:
; Line 381
	mov	eax, DWORD PTR _len$[ebp]
	jmp	SHORT $LN17@ucol_sit_d
	jmp	SHORT $LN17@ucol_sit_d
$LN16@ucol_sit_d:
; Line 383
	xor	eax, eax
$LN17@ucol_sit_d:
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ucol_sit_dumpSpecs@@YAHPAUCollatorSpec@@PADHPAW4UErrorCode@@@Z ENDP ; ucol_sit_dumpSpecs
_TEXT	ENDS
PUBLIC	_ucol_getContractionsAndExpansions_56
PUBLIC	_ucol_getContractions_56
EXTRN	_uset_getItemCount_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getContractions_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_contractions$ = 12					; size = 4
_status$ = 16						; size = 4
_ucol_getContractions_56 PROC				; COMDAT
; Line 615
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 616
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _contractions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _coll$[ebp]
	push	edx
	call	_ucol_getContractionsAndExpansions_56
	add	esp, 20					; 00000014H
; Line 617
	mov	eax, DWORD PTR _contractions$[ebp]
	push	eax
	call	_uset_getItemCount_56
	add	esp, 4
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getContractions_56 ENDP
_TEXT	ENDS
EXTRN	?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedCollator::internalGetContractionsAndExpansions
EXTRN	__imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getContractionsAndExpansions_56
_TEXT	SEGMENT
_rbc$ = -8						; size = 4
_coll$ = 8						; size = 4
_contractions$ = 12					; size = 4
_expansions$ = 16					; size = 4
_addPrefixes$ = 20					; size = 1
_status$ = 24						; size = 4
_ucol_getContractionsAndExpansions_56 PROC		; COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 637
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucol_getCo
; Line 638
	jmp	SHORT $LN4@ucol_getCo
$LN3@ucol_getCo:
; Line 640
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_getCo
; Line 641
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 642
	jmp	SHORT $LN4@ucol_getCo
$LN2@ucol_getCo:
; Line 644
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	mov	DWORD PTR _rbc$[ebp], eax
; Line 645
	cmp	DWORD PTR _rbc$[ebp], 0
	jne	SHORT $LN1@ucol_getCo
; Line 646
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 647
	jmp	SHORT $LN4@ucol_getCo
$LN1@ucol_getCo:
; Line 652
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _addPrefixes$[ebp]
	push	ecx
	mov	esi, esp
	mov	edx, DWORD PTR _expansions$[ebp]
	push	edx
	call	DWORD PTR __imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	eax, DWORD PTR _contractions$[ebp]
	push	eax
	call	DWORD PTR __imp_?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _rbc$[ebp]
	call	?internalGetContractionsAndExpansions@RuleBasedCollator@icu_56@@QBEXPAVUnicodeSet@2@0CAAW4UErrorCode@@@Z ; icu_56::RuleBasedCollator::internalGetContractionsAndExpansions
$LN4@ucol_getCo:
; Line 653
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getContractionsAndExpansions_56 ENDP
_TEXT	ENDS
END

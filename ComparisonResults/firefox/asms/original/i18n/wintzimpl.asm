; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\wintzimpl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::BasicTimeZone::operator=
EXTRN	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::TimeZone::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::BasicTimeZone::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::BasicTimeZone::operator=
_TEXT	ENDS
PUBLIC	_uprv_getWindowsTimeZoneInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_getWindowsTimeZoneInfo
_TEXT	SEGMENT
_zoneInfo$ = 8						; size = 4
_icuid$ = 12						; size = 4
_length$ = 16						; size = 4
_uprv_getWindowsTimeZoneInfo PROC			; COMDAT
; File d:\mozilla\intl\icu\source\i18n\wintzimpl.cpp
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icuid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zoneInfo$[ebp]
	push	edx
	call	?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z ; getWindowsTimeZoneInfo
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@uprv_getWi
; Line 151
	mov	al, 1
	jmp	SHORT $LN3@uprv_getWi
; Line 152
	jmp	SHORT $LN3@uprv_getWi
$LN2@uprv_getWi:
; Line 153
	xor	al, al
$LN3@uprv_getWi:
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_getWindowsTimeZoneInfo ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	_memset:PROC
EXTRN	?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:PROC ; icu_56::TimeZone::createTimeZone
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z$0
__ehfuncinfo$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z
_TEXT	SEGMENT
$T75523 = -393						; size = 1
_standardDate$68896 = -192				; size = 16
_daylightDate$68895 = -168				; size = 16
_standardBias$68894 = -144				; size = 4
_daylightBias$68893 = -132				; size = 4
_bias$68892 = -120					; size = 4
_tz$ = -108						; size = 4
_id$ = -96						; size = 64
_result$ = -21						; size = 1
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_zoneInfo$ = 8						; size = 4
_icuid$ = 12						; size = 4
_length$ = 16						; size = 4
?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z PROC ; getWindowsTimeZoneInfo, COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	mov	BYTE PTR _result$[ebp], 0
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icuid$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 119
	lea	eax, DWORD PTR _id$[ebp]
	push	eax
	call	?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ; icu_56::TimeZone::createTimeZone
	add	esp, 4
	mov	DWORD PTR _tz$[ebp], eax
; Line 121
	cmp	DWORD PTR _tz$[ebp], 0
	je	$LN2@getWindows
; Line 128
	lea	eax, DWORD PTR _standardBias$68894[ebp]
	push	eax
	lea	ecx, DWORD PTR _daylightBias$68893[ebp]
	push	ecx
	lea	edx, DWORD PTR _bias$68892[ebp]
	push	edx
	lea	eax, DWORD PTR _standardDate$68896[ebp]
	push	eax
	lea	ecx, DWORD PTR _daylightDate$68895[ebp]
	push	ecx
	mov	edx, DWORD PTR _tz$[ebp]
	push	edx
	call	?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z ; getSystemTimeInformation
	add	esp, 24					; 00000018H
	movsx	eax, al
	test	eax, eax
	je	$LN2@getWindows
; Line 129
	push	172					; 000000acH
	push	0
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 130
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	mov	ecx, DWORD PTR _bias$68892[ebp]
	mov	DWORD PTR [eax], ecx
; Line 131
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	mov	ecx, DWORD PTR _daylightBias$68893[ebp]
	mov	DWORD PTR [eax+168], ecx
; Line 132
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	mov	ecx, DWORD PTR _standardBias$68894[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 133
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	add	eax, 152				; 00000098H
	mov	ecx, DWORD PTR _daylightDate$68895[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _daylightDate$68895[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _daylightDate$68895[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _daylightDate$68895[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 134
	mov	eax, DWORD PTR _zoneInfo$[ebp]
	add	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _standardDate$68896[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _standardDate$68896[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _standardDate$68896[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _standardDate$68896[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 136
	mov	BYTE PTR _result$[ebp], 1
$LN2@getWindows:
; Line 140
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T75523[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T75523[ebp]
; Line 141
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getWindows
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@getWindows:
	DD	6
	DD	$LN13@getWindows
$LN13@getWindows:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@getWindows
	DD	-120					; ffffff88H
	DD	4
	DD	$LN7@getWindows
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN8@getWindows
	DD	-144					; ffffff70H
	DD	4
	DD	$LN9@getWindows
	DD	-168					; ffffff58H
	DD	16					; 00000010H
	DD	$LN10@getWindows
	DD	-192					; ffffff40H
	DD	16					; 00000010H
	DD	$LN11@getWindows
$LN11@getWindows:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN10@getWindows:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN9@getWindows:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN8@getWindows:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN7@getWindows:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN6@getWindows:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getWindowsTimeZoneInfo@@YACPAU_TIME_ZONE_INFORMATION@@PB_WH@Z ENDP ; getWindowsTimeZoneInfo
PUBLIC	??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@ ; `string'
PUBLIC	??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@ ; `string'
PUBLIC	??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f ; `getSystemTimeInformation'::`2'::__LINE__Var
EXTRN	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleMillisInDay
EXTRN	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleDayOfWeek
EXTRN	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleWeekInMonth
EXTRN	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ:PROC	; icu_56::DateTimeRule::getRuleMonth
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
EXTRN	__imp___wassert:PROC
EXTRN	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ:PROC ; icu_56::DateTimeRule::getDateRuleType
EXTRN	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ:PROC ; icu_56::AnnualTimeZoneRule::getRule
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
EXTRN	_uprv_getUTCtime_56:PROC
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@
CONST	SEGMENT
??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@ DB 'd'
	DB	00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 'R', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '(', 00H, ')'
	DB	00H, '-', 00H, '>', 00H, 'g', 00H, 'e', 00H, 't', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'R', 00H, 'u', 00H, 'l', 00H, 'e'
	DB	00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'R', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, ':', 00H, ':', 00H, 'D', 00H, 'O'
	DB	00H, 'W', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@
CONST	SEGMENT
??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, '-', 00H, '>', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 'R', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '(', 00H, ')'
	DB	00H, '-', 00H, '>', 00H, 'g', 00H, 'e', 00H, 't', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'R', 00H, 'u', 00H, 'l', 00H, 'e'
	DB	00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'R', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, ':', 00H, ':', 00H, 'D', 00H, 'O'
	DB	00H, 'W', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'w', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, 'z', 00H, 'i', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f
_DATA	SEGMENT
?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f DD 024H ; `getSystemTimeInformation'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z
_TEXT	SEGMENT
tv281 = -388						; size = 4
tv270 = -388						; size = 4
tv259 = -388						; size = 4
$T75549 = -380						; size = 4
$T75550 = -368						; size = 4
$T75553 = -356						; size = 4
$T75554 = -344						; size = 4
$T75557 = -332						; size = 4
$T75558 = -320						; size = 4
_mil$68872 = -116					; size = 4
_sec$68871 = -104					; size = 4
_min$68870 = -92					; size = 4
_hour$68869 = -80					; size = 4
_dst$ = -68						; size = 4
_std$ = -56						; size = 4
_initial$ = -44						; size = 4
_btz$ = -32						; size = 4
_result$ = -17						; size = 1
_status$ = -8						; size = 4
_tz$ = 8						; size = 4
_daylightDate$ = 12					; size = 4
_standardDate$ = 16					; size = 4
_bias$ = 20						; size = 4
_daylightBias$ = 24					; size = 4
_standardBias$ = 28					; size = 4
?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z PROC ; getSystemTimeInformation, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	DWORD PTR _status$[ebp], 0
; Line 38
	mov	BYTE PTR _result$[ebp], 1
; Line 39
	mov	eax, DWORD PTR _tz$[ebp]
	mov	DWORD PTR _btz$[ebp], eax
; Line 40
	mov	DWORD PTR _initial$[ebp], 0
; Line 41
	mov	DWORD PTR _std$[ebp], 0
	mov	DWORD PTR _dst$[ebp], 0
; Line 43
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	lea	edx, DWORD PTR _std$[ebp]
	push	edx
	lea	eax, DWORD PTR _initial$[ebp]
	push	eax
	call	_uprv_getUTCtime_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _btz$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btz$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN7@getSystemT
; Line 45
	cmp	DWORD PTR _std$[ebp], 0
	je	SHORT $LN5@getSystemT
	cmp	DWORD PTR _dst$[ebp], 0
	jne	$LN6@getSystemT
$LN5@getSystemT:
; Line 46
	mov	ecx, DWORD PTR _initial$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	imul	eax, -1
	mov	edx, DWORD PTR _bias$[ebp]
	mov	DWORD PTR [edx], eax
; Line 47
	mov	eax, DWORD PTR _standardBias$[ebp]
	mov	DWORD PTR [eax], 0
; Line 48
	mov	eax, DWORD PTR _daylightBias$[ebp]
	mov	DWORD PTR [eax], 0
; Line 51
	xor	eax, eax
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+14], ax
	xor	edx, edx
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [eax+12], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [edx+10], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+8], ax
	xor	edx, edx
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [eax+6], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [edx+4], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+2], ax
	xor	edx, edx
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [eax], dx
; Line 53
	xor	eax, eax
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+14], ax
	xor	edx, edx
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [eax+12], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [edx+10], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+8], ax
	xor	edx, edx
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [eax+6], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [edx+4], cx
	xor	eax, eax
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+2], ax
	xor	edx, edx
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [eax], dx
; Line 54
	jmp	$LN4@getSystemT
$LN6@getSystemT:
; Line 55
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	cmp	eax, 1
	je	SHORT $LN10@getSystemT
	mov	eax, DWORD PTR ?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f
	add	eax, 19					; 00000013H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GO@IJDADKJN@?$AAs?$AAt?$AAd?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@getSystemT:
; Line 56
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	cmp	eax, 1
	je	SHORT $LN11@getSystemT
	mov	eax, DWORD PTR ?__LINE__Var@?1??getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z@4JA@2539c79f
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FM@MJEBNFFH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GO@MPAAJIJJ@?$AAd?$AAs?$AAt?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAR?$AAu?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAg?$AAe?$AAt?$AAD?$AAa?$AAt?$AAe?$AAR?$AAu?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$CI@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@getSystemT:
; Line 58
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	imul	eax, -1
	mov	edx, DWORD PTR _bias$[ebp]
	mov	DWORD PTR [edx], eax
; Line 59
	mov	eax, DWORD PTR _standardBias$[ebp]
	mov	DWORD PTR [eax], 0
; Line 60
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	imul	eax, -1
	mov	edx, DWORD PTR _daylightBias$[ebp]
	mov	DWORD PTR [edx], eax
; Line 63
	xor	eax, eax
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx], ax
; Line 64
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	add	eax, 1
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 65
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 66
	mov	eax, DWORD PTR _standardDate$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	jge	SHORT $LN3@getSystemT
; Line 67
	mov	eax, 5
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+6], ax
$LN3@getSystemT:
; Line 69
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	sub	eax, 1
	mov	ecx, DWORD PTR _standardDate$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 71
	mov	ecx, DWORD PTR _std$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMillisInDay
	mov	DWORD PTR _mil$68872[ebp], eax
; Line 72
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _hour$68869[ebp], eax
; Line 73
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 74
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _min$68870[ebp], eax
; Line 75
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 76
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _sec$68871[ebp], eax
; Line 77
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 79
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	cx, WORD PTR _hour$68869[ebp]
	mov	WORD PTR [eax+8], cx
; Line 80
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	cx, WORD PTR _min$68870[ebp]
	mov	WORD PTR [eax+10], cx
; Line 81
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	cx, WORD PTR _sec$68871[ebp]
	mov	WORD PTR [eax+12], cx
; Line 82
	mov	eax, DWORD PTR _standardDate$[ebp]
	mov	cx, WORD PTR _mil$68872[ebp]
	mov	WORD PTR [eax+14], cx
; Line 84
	xor	eax, eax
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx], ax
; Line 85
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	add	eax, 1
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 86
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 87
	mov	eax, DWORD PTR _daylightDate$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	jge	SHORT $LN2@getSystemT
; Line 88
	mov	eax, 5
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+6], ax
$LN2@getSystemT:
; Line 90
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	sub	eax, 1
	mov	ecx, DWORD PTR _daylightDate$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 92
	mov	ecx, DWORD PTR _dst$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	ecx, eax
	call	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMillisInDay
	mov	DWORD PTR _mil$68872[ebp], eax
; Line 93
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _hour$68869[ebp], eax
; Line 94
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 95
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _min$68870[ebp], eax
; Line 96
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 97
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _sec$68871[ebp], eax
; Line 98
	mov	eax, DWORD PTR _mil$68872[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _mil$68872[ebp], edx
; Line 100
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	cx, WORD PTR _hour$68869[ebp]
	mov	WORD PTR [eax+8], cx
; Line 101
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	cx, WORD PTR _min$68870[ebp]
	mov	WORD PTR [eax+10], cx
; Line 102
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	cx, WORD PTR _sec$68871[ebp]
	mov	WORD PTR [eax+12], cx
; Line 103
	mov	eax, DWORD PTR _daylightDate$[ebp]
	mov	cx, WORD PTR _mil$68872[ebp]
	mov	WORD PTR [eax+14], cx
$LN4@getSystemT:
; Line 105
	jmp	SHORT $LN1@getSystemT
$LN7@getSystemT:
; Line 106
	mov	BYTE PTR _result$[ebp], 0
$LN1@getSystemT:
; Line 109
	mov	eax, DWORD PTR _initial$[ebp]
	mov	DWORD PTR $T75550[ebp], eax
	mov	ecx, DWORD PTR $T75550[ebp]
	mov	DWORD PTR $T75549[ebp], ecx
	cmp	DWORD PTR $T75549[ebp], 0
	je	SHORT $LN12@getSystemT
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T75549[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T75549[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv259[ebp], eax
	jmp	SHORT $LN13@getSystemT
$LN12@getSystemT:
	mov	DWORD PTR tv259[ebp], 0
$LN13@getSystemT:
; Line 110
	mov	eax, DWORD PTR _std$[ebp]
	mov	DWORD PTR $T75554[ebp], eax
	mov	ecx, DWORD PTR $T75554[ebp]
	mov	DWORD PTR $T75553[ebp], ecx
	cmp	DWORD PTR $T75553[ebp], 0
	je	SHORT $LN14@getSystemT
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T75553[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T75553[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv270[ebp], eax
	jmp	SHORT $LN15@getSystemT
$LN14@getSystemT:
	mov	DWORD PTR tv270[ebp], 0
$LN15@getSystemT:
; Line 111
	mov	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR $T75558[ebp], eax
	mov	ecx, DWORD PTR $T75558[ebp]
	mov	DWORD PTR $T75557[ebp], ecx
	cmp	DWORD PTR $T75557[ebp], 0
	je	SHORT $LN16@getSystemT
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T75557[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T75557[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv281[ebp], eax
	jmp	SHORT $LN17@getSystemT
$LN16@getSystemT:
	mov	DWORD PTR tv281[ebp], 0
$LN17@getSystemT:
; Line 113
	mov	al, BYTE PTR _result$[ebp]
; Line 114
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@getSystemT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@getSystemT:
	DD	4
	DD	$LN22@getSystemT
$LN22@getSystemT:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN18@getSystemT
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN19@getSystemT
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN20@getSystemT
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN21@getSystemT
$LN21@getSystemT:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN20@getSystemT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	0
$LN19@getSystemT:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN18@getSystemT:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?getSystemTimeInformation@@YACPAVTimeZone@icu_56@@AAU_SYSTEMTIME@@1AAH22@Z ENDP ; getSystemTimeInformation
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::SpoofImpl::getStaticClassID'::`2'::classID
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::IdentifierInfo::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::IdentifierInfo::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4IdentifierInfo@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::IdentifierInfo::operator=
_TEXT	ENDS
PUBLIC	?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ	; icu_56::SpoofImpl::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ PROC	; icu_56::SpoofImpl::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ ENDP	; icu_56::SpoofImpl::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ	; icu_56::SpoofImpl::getDynamicClassID
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ PROC	; icu_56::SpoofImpl::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@SpoofImpl@icu_56@@SAPAXXZ ; icu_56::SpoofImpl::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ ENDP	; icu_56::SpoofImpl::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_7SpoofImpl@icu_56@@6B@			; icu_56::SpoofImpl::`vftable'
PUBLIC	??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::SpoofImpl
PUBLIC	??_R4SpoofImpl@icu_56@@6B@			; icu_56::SpoofImpl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpoofImpl@icu_56@@@8			; icu_56::SpoofImpl `RTTI Type Descriptor'
PUBLIC	??_R3SpoofImpl@icu_56@@8			; icu_56::SpoofImpl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpoofImpl@icu_56@@8			; icu_56::SpoofImpl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpoofImpl@icu_56@@8		; icu_56::SpoofImpl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	_uprv_strdup_56:PROC
EXTRN	__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@HH@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ESpoofImpl@icu_56@@UAEPAXI@Z:PROC		; icu_56::SpoofImpl::`vector deleting destructor'
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpoofImpl@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpoofImpl@icu_56@@8 DD FLAT:??_R0?AVSpoofImpl@icu_56@@@8 ; icu_56::SpoofImpl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpoofImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SpoofImpl@icu_56@@8
rdata$r	SEGMENT
??_R2SpoofImpl@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SpoofImpl@icu_56@@8 ; icu_56::SpoofImpl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SpoofImpl@icu_56@@8
rdata$r	SEGMENT
??_R3SpoofImpl@icu_56@@8 DD 00H				; icu_56::SpoofImpl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SpoofImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpoofImpl@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSpoofImpl@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::SpoofImpl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpoofImpl@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SpoofImpl@icu_56@@6B@
rdata$r	SEGMENT
??_R4SpoofImpl@icu_56@@6B@ DD 00H			; icu_56::SpoofImpl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpoofImpl@icu_56@@@8
	DD	FLAT:??_R3SpoofImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT ??_7SpoofImpl@icu_56@@6B@
CONST	SEGMENT
??_7SpoofImpl@icu_56@@6B@ DD FLAT:??_R4SpoofImpl@icu_56@@6B@ ; icu_56::SpoofImpl::`vftable'
	DD	FLAT:??_ESpoofImpl@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@SpoofImpl@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv129 = -256						; size = 4
$T77837 = -248						; size = 4
$T77838 = -236						; size = 4
_allowedCharsSet$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_status$ = 12						; size = 4
??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::SpoofImpl, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SpoofImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 65535		; 0000ffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 33
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@SpoofImpl
; Line 34
	jmp	$LN4@SpoofImpl
$LN3@SpoofImpl:
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 805306368		; 30000000H
; Line 38
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77838[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T77838[ebp], 0
	je	SHORT $LN6@SpoofImpl
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	ecx, DWORD PTR $T77838[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T77838[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T77838[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T77838[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN7@SpoofImpl
$LN6@SpoofImpl:
	mov	DWORD PTR tv129[ebp], 0
$LN7@SpoofImpl:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T77837[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T77837[ebp]
	mov	DWORD PTR _allowedCharsSet$[ebp], ecx
; Line 39
	mov	esi, esp
	mov	ecx, DWORD PTR _allowedCharsSet$[ebp]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allowedCharsSet$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 41
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	_uprv_strdup_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@SpoofImpl
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@SpoofImpl
$LN1@SpoofImpl:
; Line 43
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 44
	jmp	SHORT $LN4@SpoofImpl
$LN2@SpoofImpl:
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 944111087		; 3845fdefH
$LN4@SpoofImpl:
; Line 47
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T77838[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SpoofImpl@icu_56@@QAE@PAVSpoofData@1@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::SpoofImpl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??1SpoofImpl@icu_56@@UAE@XZ			; icu_56::SpoofImpl::~SpoofImpl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSpoofImpl@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSpoofImpl@icu_56@@UAEPAXI@Z PROC			; icu_56::SpoofImpl::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SpoofImpl@icu_56@@UAE@XZ		; icu_56::SpoofImpl::~SpoofImpl
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSpoofImpl@icu_56@@UAEPAXI@Z ENDP			; icu_56::SpoofImpl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0SpoofImpl@icu_56@@QAE@XZ			; icu_56::SpoofImpl::SpoofImpl
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
xdata$x	SEGMENT
__unwindtable$??0SpoofImpl@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$1
__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SpoofImpl@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SpoofImpl@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv92 = -256						; size = 4
$T77862 = -248						; size = 4
$T77863 = -236						; size = 4
_allowedCharsSet$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0SpoofImpl@icu_56@@QAE@XZ PROC			; icu_56::SpoofImpl::SpoofImpl, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SpoofImpl@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SpoofImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 944111087		; 3845fdefH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 65535		; 0000ffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 53
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77863[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T77863[ebp], 0
	je	SHORT $LN3@SpoofImpl@2
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	ecx, DWORD PTR $T77863[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T77863[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T77863[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T77863[ebp]
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN4@SpoofImpl@2
$LN3@SpoofImpl@2:
	mov	DWORD PTR tv92[ebp], 0
$LN4@SpoofImpl@2:
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T77862[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T77862[ebp]
	mov	DWORD PTR _allowedCharsSet$[ebp], ecx
; Line 54
	mov	esi, esp
	mov	ecx, DWORD PTR _allowedCharsSet$[ebp]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _allowedCharsSet$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 56
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	_uprv_strdup_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 805306368		; 30000000H
; Line 58
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@XZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T77863[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0SpoofImpl@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SpoofImpl@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SpoofImpl@icu_56@@QAE@XZ ENDP			; icu_56::SpoofImpl::SpoofImpl
PUBLIC	?addReference@SpoofData@icu_56@@QAEPAV12@XZ	; icu_56::SpoofData::addReference
PUBLIC	??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::SpoofImpl
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_status$ = 12						; size = 4
??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z PROC	; icu_56::SpoofImpl::SpoofImpl, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SpoofImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 65535		; 0000ffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 65
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@SpoofImpl@3
; Line 66
	jmp	$LN4@SpoofImpl@3
$LN3@SpoofImpl@3:
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 70
	mov	eax, DWORD PTR _src$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN2@SpoofImpl@3
; Line 71
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?addReference@SpoofData@icu_56@@QAEPAV12@XZ ; icu_56::SpoofData::addReference
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN2@SpoofImpl@3:
; Line 73
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@SpoofImpl@3
; Line 75
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@SpoofImpl@3:
; Line 77
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_strdup_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
$LN4@SpoofImpl@3:
; Line 79
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SpoofImpl@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z ENDP	; icu_56::SpoofImpl::SpoofImpl
PUBLIC	?removeReference@SpoofData@icu_56@@QAEXXZ	; icu_56::SpoofData::removeReference
EXTRN	_uprv_free_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SpoofImpl@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SpoofImpl@icu_56@@UAE@XZ$0
__ehfuncinfo$??1SpoofImpl@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SpoofImpl@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SpoofImpl@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv132 = -268						; size = 4
tv90 = -268						; size = 4
$T77885 = -260						; size = 4
$T77886 = -248						; size = 4
$T77889 = -236						; size = 4
$T77890 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SpoofImpl@icu_56@@UAE@XZ PROC			; icu_56::SpoofImpl::~SpoofImpl, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SpoofImpl@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SpoofImpl@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@SpoofImpl@4
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?removeReference@SpoofData@icu_56@@QAEXXZ ; icu_56::SpoofData::removeReference
$LN1@SpoofImpl@4:
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T77886[ebp], ecx
	mov	edx, DWORD PTR $T77886[ebp]
	mov	DWORD PTR $T77885[ebp], edx
	cmp	DWORD PTR $T77885[ebp], 0
	je	SHORT $LN4@SpoofImpl@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T77885[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T77885[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN5@SpoofImpl@4
$LN4@SpoofImpl@4:
	mov	DWORD PTR tv90[ebp], 0
$LN5@SpoofImpl@4:
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T77890[ebp], ecx
	mov	edx, DWORD PTR $T77890[ebp]
	mov	DWORD PTR $T77889[ebp], edx
	cmp	DWORD PTR $T77889[ebp], 0
	je	SHORT $LN6@SpoofImpl@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T77889[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T77889[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN2@SpoofImpl@4
$LN6@SpoofImpl@4:
	mov	DWORD PTR tv132[ebp], 0
$LN2@SpoofImpl@4:
; Line 90
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SpoofImpl@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1SpoofImpl@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SpoofImpl@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SpoofImpl@icu_56@@UAE@XZ ENDP			; icu_56::SpoofImpl::~SpoofImpl
PUBLIC	?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z ; icu_56::SpoofData::validateDataVersion
PUBLIC	?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::validateThis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_This$ = -8						; size = 4
_sc$ = 8						; size = 4
_status$ = 12						; size = 4
?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::validateThis, COMDAT
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@validateTh
; Line 98
	xor	eax, eax
	jmp	SHORT $LN6@validateTh
$LN5@validateTh:
; Line 100
	cmp	DWORD PTR _sc$[ebp], 0
	jne	SHORT $LN4@validateTh
; Line 101
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 102
	xor	eax, eax
	jmp	SHORT $LN6@validateTh
$LN4@validateTh:
; Line 104
	mov	eax, DWORD PTR _sc$[ebp]
	mov	DWORD PTR _This$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _This$[ebp]
	cmp	DWORD PTR [eax+4], 944111087		; 3845fdefH
	jne	SHORT $LN2@validateTh
	mov	eax, DWORD PTR _This$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN3@validateTh
$LN2@validateTh:
; Line 107
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 108
	xor	eax, eax
	jmp	SHORT $LN6@validateTh
$LN3@validateTh:
; Line 110
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _This$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z ; icu_56::SpoofData::validateDataVersion
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@validateTh
; Line 111
	xor	eax, eax
	jmp	SHORT $LN6@validateTh
$LN1@validateTh:
; Line 113
	mov	eax, DWORD PTR _This$[ebp]
$LN6@validateTh:
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::validateThis
_TEXT	ENDS
PUBLIC	?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::validateThis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_status$ = 12						; size = 4
?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::validateThis, COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 118
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sc$[ebp]
	push	ecx
	call	?validateThis@SpoofImpl@icu_56@@SAPBV12@PBUUSpoofChecker@@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::validateThis
	add	esp, 8
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?validateThis@SpoofImpl@icu_56@@SAPAV12@PAUUSpoofChecker@@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::validateThis
_TEXT	ENDS
PUBLIC	??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@ ; `string'
PUBLIC	??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA ; `icu_56::SpoofImpl::confusableLookup'::`2'::__LINE__Var
PUBLIC	?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z ; icu_56::SpoofImpl::confusableLookup
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
;	COMDAT ??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@
CONST	SEGMENT
??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@ DB 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '+', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'L', 00H, 'e', 00H, 'n', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, 'f', 00H, 'S', 00H, 'p', 00H, 'o', 00H, 'o', 00H, 'f'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H
	DB	'f', 00H, 'R', 00H, 'a', 00H, 'w', 00H, 'D', 00H, 'a', 00H, 't'
	DB	00H, 'a', 00H, '-', 00H, '>', 00H, 'f', 00H, 'C', 00H, 'F', 00H
	DB	'U', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'L', 00H
	DB	'e', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@ DB 'i'
	DB	00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'L', 00H, 'e', 00H, 'n'
	DB	00H, 'g', 00H, 't', 00H, 'h', 00H, 's', 00H, 'L', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'u', 00H
	DB	's', 00H, 'p', 00H, 'o', 00H, 'o', 00H, 'f', 00H, '_', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA DD 084H ; `icu_56::SpoofImpl::confusableLookup'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_src$ = -188						; size = 4
_stringLengthsLimit$70736 = -176			; size = 4
_ix$ = -164						; size = 4
_value$ = -152						; size = 2
_keyTableIndex$ = -140					; size = 4
_stringLen$ = -128					; size = 4
_i$70727 = -116						; size = 4
_altMid$70715 = -104					; size = 4
_keyFlags$ = -92					; size = 4
_i$70711 = -80						; size = 4
_delta$70702 = -68					; size = 4
_midc$ = -56						; size = 4
_limit$ = -44						; size = 4
_mid$ = -32						; size = 4
_low$ = -20						; size = 4
_this$ = -8						; size = 4
_inChar$ = 8						; size = 4
_tableMask$ = 12					; size = 4
_dest$ = 16						; size = 4
?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z PROC ; icu_56::SpoofImpl::confusableLookup, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _low$[ebp], edx
; Line 136
	mov	DWORD PTR _mid$[ebp], 0
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _low$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _limit$[ebp], edx
$LN27@confusable:
; Line 140
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _low$[ebp]
	sar	eax, 2
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _delta$70702[ebp], eax
; Line 141
	mov	eax, DWORD PTR _delta$70702[ebp]
	mov	ecx, DWORD PTR _low$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _mid$[ebp], edx
; Line 142
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2097151				; 001fffffH
	mov	DWORD PTR _midc$[ebp], ecx
; Line 143
	mov	eax, DWORD PTR _inChar$[ebp]
	cmp	eax, DWORD PTR _midc$[ebp]
	jne	SHORT $LN24@confusable
; Line 144
	jmp	SHORT $foundChar$70705
	jmp	SHORT $foundChar$70705
	jmp	SHORT $LN26@confusable
$LN24@confusable:
; Line 145
	mov	eax, DWORD PTR _inChar$[ebp]
	cmp	eax, DWORD PTR _midc$[ebp]
	jge	SHORT $LN21@confusable
; Line 146
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
; Line 147
	jmp	SHORT $LN26@confusable
$LN21@confusable:
; Line 148
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _low$[ebp], eax
$LN26@confusable:
; Line 150
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 4
	cmp	DWORD PTR _low$[ebp], eax
	jb	SHORT $LN27@confusable
; Line 151
	mov	eax, DWORD PTR _low$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 152
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2097151				; 001fffffH
	mov	DWORD PTR _midc$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _inChar$[ebp]
	cmp	eax, DWORD PTR _midc$[ebp]
	je	SHORT $foundChar$70705
; Line 155
	mov	DWORD PTR _i$70711[ebp], 0
; Line 156
	mov	esi, esp
	mov	eax, DWORD PTR _inChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	eax, DWORD PTR _i$70711[ebp]
	jmp	$LN28@confusable
$foundChar$70705:
; Line 160
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -16777216				; ff000000H
	mov	DWORD PTR _keyFlags$[ebp], ecx
; Line 161
	mov	eax, DWORD PTR _keyFlags$[ebp]
	and	eax, DWORD PTR _tableMask$[ebp]
	jne	$foundKey$70720
; Line 164
	mov	eax, DWORD PTR _keyFlags$[ebp]
	and	eax, 268435456				; 10000000H
	je	$LN17@confusable
; Line 166
	mov	eax, DWORD PTR _mid$[ebp]
	sub	eax, 4
	mov	DWORD PTR _altMid$70715[ebp], eax
	jmp	SHORT $LN16@confusable
$LN15@confusable:
	mov	eax, DWORD PTR _altMid$70715[ebp]
	sub	eax, 4
	mov	DWORD PTR _altMid$70715[ebp], eax
$LN16@confusable:
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16777215				; 00ffffffH
	cmp	ecx, DWORD PTR _inChar$[ebp]
	jne	SHORT $LN14@confusable
; Line 167
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -16777216				; ff000000H
	mov	DWORD PTR _keyFlags$[ebp], ecx
; Line 168
	mov	eax, DWORD PTR _keyFlags$[ebp]
	and	eax, DWORD PTR _tableMask$[ebp]
	je	SHORT $LN13@confusable
; Line 169
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 170
	jmp	SHORT $foundKey$70720
	jmp	SHORT $foundKey$70720
$LN13@confusable:
; Line 172
	jmp	SHORT $LN15@confusable
$LN14@confusable:
; Line 173
	mov	eax, DWORD PTR _mid$[ebp]
	add	eax, 4
	mov	DWORD PTR _altMid$70715[ebp], eax
	jmp	SHORT $LN11@confusable
$LN10@confusable:
	mov	eax, DWORD PTR _altMid$70715[ebp]
	add	eax, 4
	mov	DWORD PTR _altMid$70715[ebp], eax
$LN11@confusable:
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16777215				; 00ffffffH
	cmp	ecx, DWORD PTR _inChar$[ebp]
	jne	SHORT $LN17@confusable
; Line 174
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -16777216				; ff000000H
	mov	DWORD PTR _keyFlags$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _keyFlags$[ebp]
	and	eax, DWORD PTR _tableMask$[ebp]
	je	SHORT $LN8@confusable
; Line 176
	mov	eax, DWORD PTR _altMid$70715[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 177
	jmp	SHORT $foundKey$70720
	jmp	SHORT $foundKey$70720
$LN8@confusable:
; Line 179
	jmp	SHORT $LN10@confusable
$LN17@confusable:
; Line 183
	mov	DWORD PTR _i$70727[ebp], 0
; Line 184
	mov	esi, esp
	mov	eax, DWORD PTR _inChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 185
	mov	eax, DWORD PTR _i$70727[ebp]
	jmp	$LN28@confusable
$foundKey$70720:
; Line 189
	mov	eax, DWORD PTR _keyFlags$[ebp]
	sar	eax, 29					; 0000001dH
	and	eax, 3
	add	eax, 1
	mov	DWORD PTR _stringLen$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _mid$[ebp]
	sub	edx, DWORD PTR [ecx+20]
	sar	edx, 2
	mov	DWORD PTR _keyTableIndex$[ebp], edx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _keyTableIndex$[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _value$[ebp], cx
; Line 195
	cmp	DWORD PTR _stringLen$[ebp], 1
	jne	SHORT $LN6@confusable
; Line 196
	mov	esi, esp
	movzx	eax, WORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	mov	eax, 1
	jmp	$LN28@confusable
$LN6@confusable:
; Line 207
	cmp	DWORD PTR _stringLen$[ebp], 4
	jne	$LN5@confusable
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _stringLengthsLimit$70736[ebp], eax
; Line 209
	mov	DWORD PTR _ix$[ebp], 0
	jmp	SHORT $LN4@confusable
$LN3@confusable:
	mov	eax, DWORD PTR _ix$[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$[ebp], eax
$LN4@confusable:
	mov	eax, DWORD PTR _ix$[ebp]
	cmp	eax, DWORD PTR _stringLengthsLimit$70736[ebp]
	jge	SHORT $LN2@confusable
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _ix$[ebp]
	movzx	ecx, WORD PTR [edx+eax*4]
	movzx	edx, WORD PTR _value$[ebp]
	cmp	ecx, edx
	jl	SHORT $LN1@confusable
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _ix$[ebp]
	movzx	ecx, WORD PTR [edx+eax*4+2]
	mov	DWORD PTR _stringLen$[ebp], ecx
; Line 212
	jmp	SHORT $LN2@confusable
$LN1@confusable:
; Line 214
	jmp	SHORT $LN3@confusable
$LN2@confusable:
; Line 215
	mov	eax, DWORD PTR _ix$[ebp]
	cmp	eax, DWORD PTR _stringLengthsLimit$70736[ebp]
	jl	SHORT $LN5@confusable
	mov	ecx, DWORD PTR ?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA
	add	ecx, 83					; 00000053H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DA@KKAONOPC@?$AAi?$AAx?$AA?5?$AA?$DM?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@confusable:
; Line 218
	movzx	eax, WORD PTR _value$[ebp]
	add	eax, DWORD PTR _stringLen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx+32]
	jle	SHORT $LN31@confusable
	mov	edx, DWORD PTR ?__LINE__Var@?1??confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@3@@Z@4JA
	add	edx, 86					; 00000056H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1HM@IDMFLPP@?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CL?$AA?5?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AAL?$AAe?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@confusable:
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR _value$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	DWORD PTR _src$[ebp], ecx
; Line 220
	mov	esi, esp
	mov	eax, DWORD PTR _stringLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 221
	mov	eax, DWORD PTR _stringLen$[ebp]
$LN28@confusable:
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?confusableLookup@SpoofImpl@icu_56@@QBEHHHAAVUnicodeString@2@@Z ENDP ; icu_56::SpoofImpl::confusableLookup
_TEXT	ENDS
PUBLIC	??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::SpoofImpl::wholeScriptCheck'::`2'::__LINE__Var
PUBLIC	?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::wholeScriptCheck
EXTRN	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z:PROC ; icu_56::ScriptSet::intersect
EXTRN	?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z:PROC ; icu_56::ScriptSet::intersect
EXTRN	_uscript_getScript_56:PROC
EXTRN	_utrie2_get32_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	?setAll@ScriptSet@icu_56@@QAEAAV12@XZ:PROC	; icu_56::ScriptSet::setAll
;	COMDAT ??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@ DB 'c'
	DB	00H, 'p', 00H, 'S', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H
	DB	't', 00H, ' ', 00H, '>', 00H, ' ', 00H, 'U', 00H, 'S', 00H, 'C'
	DB	00H, 'R', 00H, 'I', 00H, 'P', 00H, 'T', 00H, '_', 00H, 'I', 00H
	DB	'N', 00H, 'H', 00H, 'E', 00H, 'R', 00H, 'I', 00H, 'T', 00H, 'E'
	DB	00H, 'D', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA DD 0edH ; `icu_56::SpoofImpl::wholeScriptCheck'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv71 = -280						; size = 4
_cpScript$70764 = -80					; size = 4
_index$70762 = -68					; size = 4
_c$70760 = -56						; size = 4
_inputIdx$70756 = -44					; size = 4
_length$ = -32						; size = 4
_table$ = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_result$ = 12						; size = 4
_status$ = 16						; size = 4
?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::wholeScriptCheck, COMDAT
; _this$ = ecx
; Line 237
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8
	je	SHORT $LN9@wholeScrip
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN10@wholeScrip
$LN9@wholeScrip:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR tv71[ebp], ecx
$LN10@wholeScrip:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _table$[ebp], edx
; Line 241
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setAll@ScriptSet@icu_56@@QAEAAV12@XZ	; icu_56::ScriptSet::setAll
; Line 242
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 243
	mov	DWORD PTR _inputIdx$70756[ebp], 0
$LN6@wholeScrip:
	mov	eax, DWORD PTR _inputIdx$70756[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN7@wholeScrip
; Line 244
	mov	esi, esp
	mov	eax, DWORD PTR _inputIdx$70756[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$70760[ebp], eax
; Line 245
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$70760[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _inputIdx$70756[ebp]
	mov	DWORD PTR _inputIdx$70756[ebp], ecx
; Line 246
	mov	eax, DWORD PTR _c$70760[ebp]
	push	eax
	mov	ecx, DWORD PTR _table$[ebp]
	push	ecx
	call	_utrie2_get32_56
	add	esp, 8
	mov	DWORD PTR _index$70762[ebp], eax
; Line 247
	cmp	DWORD PTR _index$70762[ebp], 0
	jne	SHORT $LN4@wholeScrip
; Line 252
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$70760[ebp]
	push	ecx
	call	_uscript_getScript_56
	add	esp, 8
	mov	DWORD PTR _cpScript$70764[ebp], eax
; Line 253
	cmp	DWORD PTR _cpScript$70764[ebp], 1
	jg	SHORT $LN11@wholeScrip
	mov	eax, DWORD PTR ?__LINE__Var@?1??wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@3@PAVScriptSet@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DK@FHBGJMNE@?$AAc?$AAp?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AA?$DO?$AA?5?$AAU?$AAS?$AAC?$AAR?$AAI?$AAP?$AAT?$AA_?$AAI?$AAN?$AAH?$AAE?$AAR?$AAI?$AAT?$AAE?$AAD?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@wholeScrip:
; Line 254
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cpScript$70764[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?intersect@ScriptSet@icu_56@@QAEAAV12@W4UScriptCode@@AAW4UErrorCode@@@Z ; icu_56::ScriptSet::intersect
	jmp	SHORT $LN3@wholeScrip
$LN4@wholeScrip:
; Line 255
	cmp	DWORD PTR _index$70762[ebp], 1
	jne	SHORT $LN2@wholeScrip
; Line 257
	jmp	SHORT $LN3@wholeScrip
$LN2@wholeScrip:
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _index$70762[ebp]
	imul	edx, 24					; 00000018H
	add	edx, DWORD PTR [ecx+44]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?intersect@ScriptSet@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::ScriptSet::intersect
$LN3@wholeScrip:
; Line 260
	jmp	$LN6@wholeScrip
$LN7@wholeScrip:
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?wholeScriptCheck@SpoofImpl@icu_56@@QBEXABVUnicodeString@2@PAVScriptSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::wholeScriptCheck
_TEXT	ENDS
PUBLIC	?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::addScriptChars
PUBLIC	?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z ; icu_56::SpoofImpl::setAllowedLocales
EXTRN	__imp_?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC
EXTRN	__imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z:PROC
EXTRN	_uprv_strndup_56:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$2
__ehfuncinfo$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv211 = -508						; size = 4
tv162 = -508						; size = 4
tv144 = -508						; size = 4
$T77915 = -500						; size = 4
$T77916 = -488						; size = 4
$T77919 = -476						; size = 4
$T77920 = -464						; size = 4
$T77923 = -452						; size = 4
$T77924 = -440						; size = 4
_tmpLocalesList$ = -236					; size = 4
_tempSet$ = -224					; size = 52
_locale$70794 = -164					; size = 4
_trimmedEnd$70789 = -152				; size = 4
_localeListCount$ = -140				; size = 4
_localesListEnd$ = -128					; size = 4
_locEnd$ = -116						; size = 4
_locStart$ = -104					; size = 4
_tmpSet$ = -92						; size = 4
_allowedChars$ = -80					; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_localesList$ = 8					; size = 4
_status$ = 12						; size = 4
?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::setAllowedLocales, COMDAT
; _this$ = ecx
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 496				; 000001f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 265
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 266
	mov	DWORD PTR _tmpSet$[ebp], 0
; Line 267
	mov	eax, DWORD PTR _localesList$[ebp]
	mov	DWORD PTR _locStart$[ebp], eax
; Line 268
	mov	DWORD PTR _locEnd$[ebp], 0
; Line 269
	mov	eax, DWORD PTR _localesList$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _localesList$[ebp]
	mov	DWORD PTR _localesListEnd$[ebp], eax
; Line 270
	mov	DWORD PTR _localeListCount$[ebp], 0
$LN16@setAllowed:
; Line 274
	mov	esi, esp
	push	44					; 0000002cH
	mov	eax, DWORD PTR _locStart$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _locEnd$[ebp], eax
; Line 275
	cmp	DWORD PTR _locEnd$[ebp], 0
	jne	SHORT $LN12@setAllowed
; Line 276
	mov	eax, DWORD PTR _localesListEnd$[ebp]
	mov	DWORD PTR _locEnd$[ebp], eax
$LN12@setAllowed:
; Line 278
	mov	eax, DWORD PTR _locStart$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN11@setAllowed
; Line 279
	mov	eax, DWORD PTR _locStart$[ebp]
	add	eax, 1
	mov	DWORD PTR _locStart$[ebp], eax
; Line 280
	jmp	SHORT $LN12@setAllowed
$LN11@setAllowed:
; Line 281
	mov	eax, DWORD PTR _locEnd$[ebp]
	sub	eax, 1
	mov	DWORD PTR _trimmedEnd$70789[ebp], eax
$LN10@setAllowed:
; Line 282
	mov	eax, DWORD PTR _trimmedEnd$70789[ebp]
	cmp	eax, DWORD PTR _locStart$[ebp]
	jbe	SHORT $LN9@setAllowed
	mov	eax, DWORD PTR _trimmedEnd$70789[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN9@setAllowed
; Line 283
	mov	eax, DWORD PTR _trimmedEnd$70789[ebp]
	sub	eax, 1
	mov	DWORD PTR _trimmedEnd$70789[ebp], eax
; Line 284
	jmp	SHORT $LN10@setAllowed
$LN9@setAllowed:
; Line 285
	mov	eax, DWORD PTR _trimmedEnd$70789[ebp]
	cmp	eax, DWORD PTR _locStart$[ebp]
	ja	SHORT $LN8@setAllowed
; Line 286
	jmp	$LN14@setAllowed
$LN8@setAllowed:
; Line 288
	mov	eax, DWORD PTR _trimmedEnd$70789[ebp]
	add	eax, 1
	sub	eax, DWORD PTR _locStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locStart$[ebp]
	push	ecx
	call	_uprv_strndup_56
	add	esp, 8
	mov	DWORD PTR _locale$70794[ebp], eax
; Line 289
	mov	eax, DWORD PTR _localeListCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _localeListCount$[ebp], eax
; Line 294
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$70794[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::addScriptChars
; Line 295
	mov	eax, DWORD PTR _locale$70794[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 296
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@setAllowed
; Line 297
	jmp	SHORT $LN14@setAllowed
$LN7@setAllowed:
; Line 299
	mov	eax, DWORD PTR _locEnd$[ebp]
	add	eax, 1
	mov	DWORD PTR _locStart$[ebp], eax
; Line 300
	mov	eax, DWORD PTR _locStart$[ebp]
	cmp	eax, DWORD PTR _localesListEnd$[ebp]
	jb	$LN16@setAllowed
$LN14@setAllowed:
; Line 303
	cmp	DWORD PTR _localeListCount$[ebp], 0
	jne	$LN6@setAllowed
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 305
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	_uprv_strdup_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 306
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77916[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T77916[ebp], 0
	je	SHORT $LN19@setAllowed
	mov	esi, esp
	push	1114111					; 0010ffffH
	push	0
	mov	ecx, DWORD PTR $T77916[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T77916[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T77916[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T77916[ebp]
	mov	DWORD PTR tv144[ebp], edx
	jmp	SHORT $LN20@setAllowed
$LN19@setAllowed:
	mov	DWORD PTR tv144[ebp], 0
$LN20@setAllowed:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T77915[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T77915[ebp]
	mov	DWORD PTR _tmpSet$[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN4@setAllowed
	cmp	DWORD PTR _tmpSet$[ebp], 0
	jne	SHORT $LN5@setAllowed
$LN4@setAllowed:
; Line 308
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 309
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@setAllowed
$LN5@setAllowed:
; Line 311
	mov	esi, esp
	mov	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T77920[ebp], ecx
	mov	edx, DWORD PTR $T77920[ebp]
	mov	DWORD PTR $T77919[ebp], edx
	cmp	DWORD PTR $T77919[ebp], 0
	je	SHORT $LN21@setAllowed
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T77919[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T77919[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN22@setAllowed
$LN21@setAllowed:
	mov	DWORD PTR tv162[ebp], 0
$LN22@setAllowed:
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSet$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 315
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@setAllowed
$LN6@setAllowed:
; Line 320
	mov	esi, esp
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 321
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	4106					; 0000100aH
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 322
	mov	esi, esp
	lea	eax, DWORD PTR _tempSet$[ebp]
	push	eax
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 323
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	4106					; 0000100aH
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 324
	mov	esi, esp
	lea	eax, DWORD PTR _tempSet$[ebp]
	push	eax
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 328
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@setAllowed
; Line 329
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@setAllowed
$LN3@setAllowed:
; Line 333
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tmpSet$[ebp], eax
; Line 334
	mov	eax, DWORD PTR _localesList$[ebp]
	push	eax
	call	_uprv_strdup_56
	add	esp, 4
	mov	DWORD PTR _tmpLocalesList$[ebp], eax
; Line 335
	cmp	DWORD PTR _tmpSet$[ebp], 0
	je	SHORT $LN1@setAllowed
	cmp	DWORD PTR _tmpLocalesList$[ebp], 0
	jne	SHORT $LN2@setAllowed
$LN1@setAllowed:
; Line 336
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 337
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@setAllowed
$LN2@setAllowed:
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpLocalesList$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 341
	mov	esi, esp
	mov	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T77924[ebp], ecx
	mov	edx, DWORD PTR $T77924[ebp]
	mov	DWORD PTR $T77923[ebp], edx
	cmp	DWORD PTR $T77923[ebp], 0
	je	SHORT $LN23@setAllowed
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T77923[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T77923[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv211[ebp], eax
	jmp	SHORT $LN24@setAllowed
$LN23@setAllowed:
	mov	DWORD PTR tv211[ebp], 0
$LN24@setAllowed:
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSet$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 345
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@setAllowed:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@setAllowed
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN32@setAllowed:
	DD	2
	DD	$LN31@setAllowed
$LN31@setAllowed:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN28@setAllowed
	DD	-224					; ffffff20H
	DD	52					; 00000034H
	DD	$LN29@setAllowed
$LN29@setAllowed:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN28@setAllowed:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _allowedChars$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T77916[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _tempSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setAllowedLocales@SpoofImpl@icu_56@@QAEXPBDAAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::setAllowedLocales
PUBLIC	?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z ; icu_56::SpoofImpl::getAllowedLocales
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::getAllowedLocales, COMDAT
; _this$ = ecx
; Line 348
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 349
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 350
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getAllowedLocales@SpoofImpl@icu_56@@QAEPBDAAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::getAllowedLocales
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uscript_getCode_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -236						; size = 4
_tmpSet$ = -224						; size = 52
_numScripts$ = -164					; size = 4
_scripts$ = -152					; size = 120
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_allowedChars$ = 12					; size = 4
_status$ = 16						; size = 4
?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::addScriptChars, COMDAT
; _this$ = ecx
; Line 356
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-432]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 359
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	30					; 0000001eH
	lea	ecx, DWORD PTR _scripts$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uscript_getCode_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numScripts$[ebp], eax
; Line 360
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@addScriptC
; Line 361
	jmp	$LN6@addScriptC
$LN5@addScriptC:
; Line 363
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], -127			; ffffff81H
	jne	SHORT $LN4@addScriptC
; Line 364
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 365
	jmp	$LN6@addScriptC
$LN4@addScriptC:
; Line 367
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 369
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@addScriptC
$LN2@addScriptC:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@addScriptC:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numScripts$[ebp]
	jge	SHORT $LN1@addScriptC
; Line 370
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _scripts$[ebp+ecx*4]
	push	edx
	push	4106					; 0000100aH
	lea	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_?applyIntPropertyValue@UnicodeSet@icu_56@@QAEAAV12@W4UProperty@@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 371
	mov	esi, esp
	lea	eax, DWORD PTR _tmpSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _allowedChars$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _allowedChars$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 372
	jmp	SHORT $LN2@addScriptC
$LN1@addScriptC:
; Line 373
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@addScriptC:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@addScriptC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 432				; 000001b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN13@addScriptC:
	DD	2
	DD	$LN12@addScriptC
$LN12@addScriptC:
	DD	-152					; ffffff68H
	DD	120					; 00000078H
	DD	$LN9@addScriptC
	DD	-224					; ffffff20H
	DD	52					; 00000034H
	DD	$LN10@addScriptC
$LN10@addScriptC:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN9@addScriptC:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpSet$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-436]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addScriptChars@SpoofImpl@icu_56@@QAEXPBDPAVUnicodeSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::addScriptChars
PUBLIC	??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1 ; `icu_56::SpoofImpl::ScanHex'::`2'::__LINE__Var
PUBLIC	?ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z ; icu_56::SpoofImpl::ScanHex
;	COMDAT ??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@ DB 'd'
	DB	00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'V', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '0', 00H, 'x'
	DB	00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 'm', 00H, 'i', 00H, 't', 00H, '-', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1
_DATA	SEGMENT
?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1 DD 017dH ; `icu_56::SpoofImpl::ScanHex'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_digitVal$70852 = -32					; size = 4
_i$ = -20						; size = 4
_val$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
_status$ = 20						; size = 4
?ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::ScanHex, COMDAT
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@ScanHex
; Line 383
	xor	eax, eax
	jmp	$LN8@ScanHex
$LN7@ScanHex:
; Line 385
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	test	eax, eax
	jg	SHORT $LN10@ScanHex
	mov	ecx, DWORD PTR ?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@OLOFFFKJ@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?9?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@ScanHex:
; Line 386
	mov	DWORD PTR _val$[ebp], 0
; Line 388
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN6@ScanHex
$LN5@ScanHex:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@ScanHex:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN4@ScanHex
; Line 389
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	sub	edx, 48					; 00000030H
	mov	DWORD PTR _digitVal$70852[ebp], edx
; Line 390
	cmp	DWORD PTR _digitVal$70852[ebp], 9
	jle	SHORT $LN3@ScanHex
; Line 391
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	sub	edx, 55					; 00000037H
	mov	DWORD PTR _digitVal$70852[ebp], edx
$LN3@ScanHex:
; Line 393
	cmp	DWORD PTR _digitVal$70852[ebp], 15	; 0000000fH
	jle	SHORT $LN2@ScanHex
; Line 394
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	sub	edx, 87					; 00000057H
	mov	DWORD PTR _digitVal$70852[ebp], edx
$LN2@ScanHex:
; Line 396
	cmp	DWORD PTR _digitVal$70852[ebp], 15	; 0000000fH
	jle	SHORT $LN11@ScanHex
	mov	eax, DWORD PTR ?__LINE__Var@?1??ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z@4JA@c90339c1
	add	eax, 15					; 0000000fH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@MCBNKMDK@?$AAd?$AAi?$AAg?$AAi?$AAt?$AAV?$AAa?$AAl?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAf?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@ScanHex:
; Line 397
	mov	eax, DWORD PTR _val$[ebp]
	shl	eax, 4
	mov	DWORD PTR _val$[ebp], eax
; Line 398
	mov	eax, DWORD PTR _val$[ebp]
	add	eax, DWORD PTR _digitVal$70852[ebp]
	mov	DWORD PTR _val$[ebp], eax
; Line 399
	jmp	$LN5@ScanHex
$LN4@ScanHex:
; Line 400
	cmp	DWORD PTR _val$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN1@ScanHex
; Line 401
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 402
	mov	DWORD PTR _val$[ebp], 0
$LN1@ScanHex:
; Line 404
	mov	eax, DWORD PTR _val$[ebp]
$LN8@ScanHex:
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ScanHex@SpoofImpl@icu_56@@SAHPB_WHHAAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::ScanHex
_TEXT	ENDS
PUBLIC	?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z ; icu_56::SpoofImpl::getIdentifierInfo
EXTRN	??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::IdentifierInfo::IdentifierInfo
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv131 = -304						; size = 4
tv83 = -304						; size = 4
$T77963 = -296						; size = 4
$T77964 = -284						; size = 4
$T77967 = -272						; size = 4
$T77968 = -260						; size = 4
_m$70867 = -56						; size = 4
_nonConstThis$ = -44					; size = 4
_returnIdInfo$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofImpl::getIdentifierInfo, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	mov	DWORD PTR _returnIdInfo$[ebp], 0
; Line 417
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getIdentif
; Line 418
	mov	eax, DWORD PTR _returnIdInfo$[ebp]
	jmp	$LN5@getIdentif
$LN4@getIdentif:
; Line 420
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _nonConstThis$[ebp], eax
; Line 422
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _m$70867[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 423
	mov	eax, DWORD PTR _nonConstThis$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _returnIdInfo$[ebp], ecx
; Line 424
	mov	eax, DWORD PTR _nonConstThis$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 425
	mov	esi, esp
	lea	ecx, DWORD PTR _m$70867[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 426
	cmp	DWORD PTR _returnIdInfo$[ebp], 0
	jne	$LN3@getIdentif
; Line 427
	mov	esi, esp
	push	28					; 0000001cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77964[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T77964[ebp], 0
	je	SHORT $LN7@getIdentif
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T77964[ebp]
	call	??0IdentifierInfo@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::IdentifierInfo::IdentifierInfo
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN8@getIdentif
$LN7@getIdentif:
	mov	DWORD PTR tv83[ebp], 0
$LN8@getIdentif:
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T77963[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T77963[ebp]
	mov	DWORD PTR _returnIdInfo$[ebp], edx
; Line 428
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getIdentif
	cmp	DWORD PTR _returnIdInfo$[ebp], 0
	jne	SHORT $LN2@getIdentif
; Line 429
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@getIdentif:
; Line 431
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getIdentif
	cmp	DWORD PTR _returnIdInfo$[ebp], 0
	je	SHORT $LN3@getIdentif
; Line 432
	mov	eax, DWORD PTR _returnIdInfo$[ebp]
	mov	DWORD PTR $T77968[ebp], eax
	mov	ecx, DWORD PTR $T77968[ebp]
	mov	DWORD PTR $T77967[ebp], ecx
	cmp	DWORD PTR $T77967[ebp], 0
	je	SHORT $LN9@getIdentif
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77967[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77967[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN10@getIdentif
$LN9@getIdentif:
	mov	DWORD PTR tv131[ebp], 0
$LN10@getIdentif:
; Line 433
	mov	DWORD PTR _returnIdInfo$[ebp], 0
$LN3@getIdentif:
; Line 436
	mov	eax, DWORD PTR _returnIdInfo$[ebp]
$LN5@getIdentif:
; Line 437
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@getIdentif
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN16@getIdentif:
	DD	1
	DD	$LN15@getIdentif
$LN15@getIdentif:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN13@getIdentif
$LN13@getIdentif:
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T77964[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getIdentifierInfo@SpoofImpl@icu_56@@QBEPAVIdentifierInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofImpl::getIdentifierInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z ; icu_56::SpoofImpl::releaseIdentifierInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z
_TEXT	SEGMENT
tv78 = -256						; size = 4
$T77986 = -248						; size = 4
$T77987 = -236						; size = 4
_m$70884 = -32						; size = 4
_nonConstThis$70882 = -20				; size = 4
_this$ = -8						; size = 4
_idInfo$ = 8						; size = 4
?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z PROC ; icu_56::SpoofImpl::releaseIdentifierInfo, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
; Line 440
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 441
	cmp	DWORD PTR _idInfo$[ebp], 0
	je	$LN3@releaseIde
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _nonConstThis$70882[ebp], eax
; Line 444
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _m$70884[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 445
	mov	eax, DWORD PTR _nonConstThis$70882[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN1@releaseIde
; Line 446
	mov	eax, DWORD PTR _nonConstThis$70882[ebp]
	mov	ecx, DWORD PTR _idInfo$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 447
	mov	DWORD PTR _idInfo$[ebp], 0
$LN1@releaseIde:
; Line 449
	mov	esi, esp
	lea	ecx, DWORD PTR _m$70884[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 450
	mov	eax, DWORD PTR _idInfo$[ebp]
	mov	DWORD PTR $T77987[ebp], eax
	mov	ecx, DWORD PTR $T77987[ebp]
	mov	DWORD PTR $T77986[ebp], ecx
	cmp	DWORD PTR $T77986[ebp], 0
	je	SHORT $LN5@releaseIde
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T77986[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T77986[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN3@releaseIde
$LN5@releaseIde:
	mov	DWORD PTR tv78[ebp], 0
$LN3@releaseIde:
; Line 452
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@releaseIde
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@releaseIde:
	DD	1
	DD	$LN9@releaseIde
$LN9@releaseIde:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@releaseIde
$LN8@releaseIde:
	DB	109					; 0000006dH
	DB	0
?releaseIdentifierInfo@SpoofImpl@icu_56@@QBEXPAVIdentifierInfo@2@@Z ENDP ; icu_56::SpoofImpl::releaseIdentifierInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_rawData$ = 8						; size = 4
_status$ = 12						; size = 4
?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofData::validateDataVersion, COMDAT
; Line 464
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 469
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@validateDa
	cmp	DWORD PTR _rawData$[ebp], 0
	je	SHORT $LN1@validateDa
	mov	eax, DWORD PTR _rawData$[ebp]
	cmp	DWORD PTR [eax], 944111087		; 3845fdefH
	jne	SHORT $LN1@validateDa
	mov	eax, DWORD PTR _rawData$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 1
	jg	SHORT $LN1@validateDa
	mov	eax, DWORD PTR _rawData$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jle	SHORT $LN2@validateDa
$LN1@validateDa:
; Line 470
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 471
	xor	al, al
	jmp	SHORT $LN3@validateDa
$LN2@validateDa:
; Line 473
	mov	al, 1
$LN3@validateDa:
; Line 474
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofData::validateDataVersion
_TEXT	ENDS
PUBLIC	??_GSpoofData@icu_56@@QAEPAXI@Z			; icu_56::SpoofData::`scalar deleting destructor'
PUBLIC	??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ; icu_56::SpoofData::SpoofData
PUBLIC	??_C@_03OJDKECCP@cfu?$AA@			; `string'
PUBLIC	??_C@_0M@NKAJOPKO@confusables?$AA@		; `string'
PUBLIC	?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::SpoofData::getDefault
EXTRN	_udata_openChoice_56:PROC
;	COMDAT ??_C@_03OJDKECCP@cfu?$AA@
CONST	SEGMENT
??_C@_03OJDKECCP@cfu?$AA@ DB 'cfu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NKAJOPKO@confusables?$AA@
CONST	SEGMENT
??_C@_0M@NKAJOPKO@confusables?$AA@ DB 'confusables', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -280						; size = 4
tv84 = -280						; size = 4
$T77998 = -272						; size = 4
$T77999 = -260						; size = 4
$T78002 = -248						; size = 4
$T78003 = -236						; size = 4
_This$ = -32						; size = 4
_udm$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofData::getDefault, COMDAT
; Line 507
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 511
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z ; icu_56::spoofDataIsAcceptable
	push	OFFSET ??_C@_0M@NKAJOPKO@confusables?$AA@
	push	OFFSET ??_C@_03OJDKECCP@cfu?$AA@
	push	0
	call	_udata_openChoice_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _udm$[ebp], eax
; Line 512
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getDefault
; Line 513
	xor	eax, eax
	jmp	$LN4@getDefault
$LN3@getDefault:
; Line 515
	mov	esi, esp
	push	48					; 00000030H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T77999[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T77999[ebp], 0
	je	SHORT $LN6@getDefault
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _udm$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T77999[ebp]
	call	??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ; icu_56::SpoofData::SpoofData
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN7@getDefault
$LN6@getDefault:
	mov	DWORD PTR tv84[ebp], 0
$LN7@getDefault:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T77998[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T77998[ebp]
	mov	DWORD PTR _This$[ebp], eax
; Line 516
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getDefault
; Line 517
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T78003[ebp], eax
	mov	ecx, DWORD PTR $T78003[ebp]
	mov	DWORD PTR $T78002[ebp], ecx
	cmp	DWORD PTR $T78002[ebp], 0
	je	SHORT $LN8@getDefault
	push	1
	mov	ecx, DWORD PTR $T78002[ebp]
	call	??_GSpoofData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN9@getDefault
$LN8@getDefault:
	mov	DWORD PTR tv92[ebp], 0
$LN9@getDefault:
; Line 518
	xor	eax, eax
	jmp	SHORT $LN4@getDefault
$LN2@getDefault:
; Line 520
	cmp	DWORD PTR _This$[ebp], 0
	jne	SHORT $LN1@getDefault
; Line 521
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@getDefault:
; Line 523
	mov	eax, DWORD PTR _This$[ebp]
$LN4@getDefault:
; Line 524
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T77999[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDefault@SpoofData@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofData::getDefault
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z
_TEXT	SEGMENT
_version$70901 = -8					; size = 4
_context$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_pInfo$ = 20						; size = 4
?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z PROC ; icu_56::spoofDataIsAcceptable, COMDAT
; Line 479
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 489
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 20					; 00000014H
	jl	$LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 67					; 00000043H
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	cmp	ecx, 102				; 00000066H
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 117				; 00000075H
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+11]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN3@spoofDataI
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	cmp	ecx, 1
	jne	SHORT $LN3@spoofDataI
; Line 490
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _version$70901[ebp], eax
; Line 491
	cmp	DWORD PTR _version$70901[ebp], 0
	je	SHORT $LN2@spoofDataI
; Line 492
	push	1
	mov	eax, DWORD PTR _pInfo$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	mov	ecx, DWORD PTR _pInfo$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _version$70901[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@spoofDataI:
; Line 494
	mov	al, 1
	jmp	SHORT $LN4@spoofDataI
; Line 495
	jmp	SHORT $LN4@spoofDataI
$LN3@spoofDataI:
; Line 496
	xor	al, al
$LN4@spoofDataI:
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?spoofDataIsAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z ENDP ; icu_56::spoofDataIsAcceptable
_TEXT	ENDS
PUBLIC	??1SpoofData@icu_56@@QAE@XZ			; icu_56::SpoofData::~SpoofData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSpoofData@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSpoofData@icu_56@@QAEPAXI@Z PROC			; icu_56::SpoofData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SpoofData@icu_56@@QAE@XZ		; icu_56::SpoofData::~SpoofData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSpoofData@icu_56@@QAEPAXI@Z ENDP			; icu_56::SpoofData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::SpoofData::initPtrs
PUBLIC	?reset@SpoofData@icu_56@@QAEXXZ			; icu_56::SpoofData::reset
EXTRN	_udata_getMemory_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_udm$ = 8						; size = 4
_status$ = 12						; size = 4
??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z PROC ; icu_56::SpoofData::SpoofData, COMDAT
; _this$ = ecx
; Line 527
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 528
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@SpoofData@icu_56@@QAEXXZ		; icu_56::SpoofData::reset
; Line 529
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@SpoofData
; Line 530
	jmp	SHORT $LN2@SpoofData
$LN1@SpoofData:
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _udm$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 535
	mov	eax, DWORD PTR _udm$[ebp]
	push	eax
	call	_udata_getMemory_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 536
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z ; icu_56::SpoofData::validateDataVersion
	add	esp, 8
; Line 537
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::SpoofData::initPtrs
$LN2@SpoofData:
; Line 538
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0SpoofData@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z ENDP ; icu_56::SpoofData::SpoofData
_TEXT	ENDS
PUBLIC	??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z	; icu_56::SpoofData::SpoofData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ncData$ = -20						; size = 4
_this$ = -8						; size = 4
_data$ = 8						; size = 4
_length$ = 12						; size = 4
_status$ = 16						; size = 4
??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z PROC	; icu_56::SpoofData::SpoofData, COMDAT
; _this$ = ecx
; Line 542
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 543
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@SpoofData@icu_56@@QAEXXZ		; icu_56::SpoofData::reset
; Line 544
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@SpoofData@2
; Line 545
	jmp	SHORT $LN4@SpoofData@2
$LN3@SpoofData@2:
; Line 547
	cmp	DWORD PTR _length$[ebp], 128		; 00000080H
	jae	SHORT $LN2@SpoofData@2
; Line 548
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 549
	jmp	SHORT $LN4@SpoofData@2
$LN2@SpoofData@2:
; Line 551
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _ncData$[ebp], eax
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ncData$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 553
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _length$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN1@SpoofData@2
; Line 554
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 555
	jmp	SHORT $LN4@SpoofData@2
$LN1@SpoofData@2:
; Line 557
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?validateDataVersion@SpoofData@icu_56@@SACPBUSpoofDataHeader@2@AAW4UErrorCode@@@Z ; icu_56::SpoofData::validateDataVersion
	add	esp, 8
; Line 558
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::SpoofData::initPtrs
$LN4@SpoofData@2:
; Line 559
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0SpoofData@icu_56@@QAE@PBXHAAW4UErrorCode@@@Z ENDP	; icu_56::SpoofData::SpoofData
_TEXT	ENDS
PUBLIC	??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@ ; `string'
PUBLIC	?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA ; `icu_56::SpoofData::SpoofData'::`2'::__LINE__Var
PUBLIC	??0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::SpoofData::SpoofData
EXTRN	_memset:PROC
EXTRN	_uprv_malloc_56:PROC
;	COMDAT ??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@
CONST	SEGMENT
??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@ DB 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H
	DB	'f', 00H, '(', 00H, 'S', 00H, 'p', 00H, 'o', 00H, 'o', 00H, 'f'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'H', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA DD 0234H ; `icu_56::SpoofData::SpoofData'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ??0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_initialSize$ = -20					; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
??0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z PROC	; icu_56::SpoofData::SpoofData, COMDAT
; _this$ = ecx
; Line 564
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 565
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@SpoofData@icu_56@@QAEXXZ		; icu_56::SpoofData::reset
; Line 566
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@SpoofData@3
; Line 567
	jmp	$LN3@SpoofData@3
$LN2@SpoofData@3:
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 573
	mov	DWORD PTR _initialSize$[ebp], 128	; 00000080H
; Line 574
	cmp	DWORD PTR _initialSize$[ebp], 128	; 00000080H
	je	SHORT $LN5@SpoofData@3
	mov	eax, DWORD PTR ?__LINE__Var@?1???0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z@4JA
	add	eax, 10					; 0000000aH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EO@KDBEJCDP@?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAS?$AAp?$AAo?$AAo?$AAf?$AAD?$AAa?$AAt?$AAa?$AAH@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@SpoofData@3:
; Line 576
	mov	eax, DWORD PTR _initialSize$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 577
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _initialSize$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 578
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@SpoofData@3
; Line 579
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 580
	jmp	SHORT $LN3@SpoofData@3
$LN1@SpoofData@3:
; Line 582
	mov	eax, DWORD PTR _initialSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 584
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 944111087		; 3845fdefH
; Line 585
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+4], 1
; Line 586
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+5], 0
; Line 587
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+6], 0
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+7], 0
; Line 589
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::SpoofData::initPtrs
$LN3@SpoofData@3:
; Line 590
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0SpoofData@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP	; icu_56::SpoofData::SpoofData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@SpoofData@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@SpoofData@icu_56@@QAEXXZ PROC			; icu_56::SpoofData::reset, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 596
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 597
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 600
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 1
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 604
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 606
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 608
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@SpoofData@icu_56@@QAEXXZ ENDP			; icu_56::SpoofData::reset
_TEXT	ENDS
EXTRN	_utrie2_openFromSerialized_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z PROC	; icu_56::SpoofData::initPtrs, COMDAT
; _this$ = ecx
; Line 626
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 628
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 631
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@initPtrs
; Line 632
	jmp	$LN9@initPtrs
$LN8@initPtrs:
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN7@initPtrs
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN7@initPtrs:
; Line 637
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN6@initPtrs
; Line 638
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN6@initPtrs:
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN5@initPtrs
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN5@initPtrs:
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+28], 0
	je	SHORT $LN4@initPtrs
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN4@initPtrs:
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN3@initPtrs
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN3@initPtrs
; Line 649
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+44]
	push	ecx
	push	0
	call	_utrie2_openFromSerialized_56
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
$LN3@initPtrs:
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN2@initPtrs
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+52], 0
	je	SHORT $LN2@initPtrs
; Line 653
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+52]
	push	ecx
	push	0
	call	_utrie2_openFromSerialized_56
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], eax
$LN2@initPtrs:
; Line 656
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+60], 0
	je	SHORT $LN9@initPtrs
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+60]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax
$LN9@initPtrs:
; Line 659
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP	; icu_56::SpoofData::initPtrs
_TEXT	ENDS
EXTRN	_udata_close_56:PROC
EXTRN	_utrie2_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1SpoofData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SpoofData@icu_56@@QAE@XZ PROC			; icu_56::SpoofData::~SpoofData, COMDAT
; _this$ = ecx
; Line 662
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_utrie2_close_56
	add	esp, 4
; Line 664
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_utrie2_close_56
	add	esp, 4
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@SpoofData@4
; Line 668
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@SpoofData@4:
; Line 670
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 671
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@SpoofData@4
; Line 672
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_udata_close_56
	add	esp, 4
$LN1@SpoofData@4:
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 675
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SpoofData@icu_56@@QAE@XZ ENDP			; icu_56::SpoofData::~SpoofData
_TEXT	ENDS
PUBLIC	?umtx_atomic_dec@icu_56@@YAHPCJ@Z		; icu_56::umtx_atomic_dec
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeReference@SpoofData@icu_56@@QAEXXZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
$T78032 = -224						; size = 4
$T78033 = -212						; size = 4
_this$ = -8						; size = 4
?removeReference@SpoofData@icu_56@@QAEXXZ PROC		; icu_56::SpoofData::removeReference, COMDAT
; _this$ = ecx
; Line 678
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 679
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	?umtx_atomic_dec@icu_56@@YAHPCJ@Z	; icu_56::umtx_atomic_dec
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@removeRefe
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T78033[ebp], eax
	mov	ecx, DWORD PTR $T78033[ebp]
	mov	DWORD PTR $T78032[ebp], ecx
	cmp	DWORD PTR $T78032[ebp], 0
	je	SHORT $LN4@removeRefe
	push	1
	mov	ecx, DWORD PTR $T78032[ebp]
	call	??_GSpoofData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN2@removeRefe
$LN4@removeRefe:
	mov	DWORD PTR tv72[ebp], 0
$LN2@removeRefe:
; Line 682
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?removeReference@SpoofData@icu_56@@QAEXXZ ENDP		; icu_56::SpoofData::removeReference
_TEXT	ENDS
EXTRN	__imp__InterlockedDecrement@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_atomic_dec@icu_56@@YAHPCJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_atomic_dec@icu_56@@YAHPCJ@Z PROC			; icu_56::umtx_atomic_dec, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedDecrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_atomic_dec@icu_56@@YAHPCJ@Z ENDP			; icu_56::umtx_atomic_dec
_TEXT	ENDS
PUBLIC	?umtx_atomic_inc@icu_56@@YAHPCJ@Z		; icu_56::umtx_atomic_inc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addReference@SpoofData@icu_56@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?addReference@SpoofData@icu_56@@QAEPAV12@XZ PROC	; icu_56::SpoofData::addReference, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
; Line 685
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 686
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	?umtx_atomic_inc@icu_56@@YAHPCJ@Z	; icu_56::umtx_atomic_inc
	add	esp, 4
; Line 687
	mov	eax, DWORD PTR _this$[ebp]
; Line 688
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?addReference@SpoofData@icu_56@@QAEPAV12@XZ ENDP	; icu_56::SpoofData::addReference
_TEXT	ENDS
EXTRN	__imp__InterlockedIncrement@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_atomic_inc@icu_56@@YAHPCJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_atomic_inc@icu_56@@YAHPCJ@Z PROC			; icu_56::umtx_atomic_inc, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedIncrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_atomic_inc@icu_56@@YAHPCJ@Z ENDP			; icu_56::umtx_atomic_inc
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA ; `icu_56::SpoofData::reserveSpace'::`2'::__LINE__Var
PUBLIC	?reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z ; icu_56::SpoofData::reserveSpace
EXTRN	_uprv_realloc_56:PROC
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\uspoof_impl.cpp
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA DD 02b3H ; `icu_56::SpoofData::reserveSpace'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_returnOffset$ = -20					; size = 4
_this$ = -8						; size = 4
_numBytes$ = 8						; size = 4
_status$ = 12						; size = 4
?reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z PROC ; icu_56::SpoofData::reserveSpace, COMDAT
; _this$ = ecx
; Line 691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 692
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@reserveSpa
; Line 693
	xor	eax, eax
	jmp	$LN3@reserveSpa
$LN2@reserveSpa:
; Line 695
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN1@reserveSpa
; Line 696
	xor	eax, eax
	jne	SHORT $LN5@reserveSpa
	mov	ecx, DWORD PTR ?__LINE__Var@?1??reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z@4JA
	add	ecx, 5
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GA@GIKCGJBN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@reserveSpa:
; Line 697
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 698
	xor	eax, eax
	jmp	SHORT $LN3@reserveSpa
$LN1@reserveSpa:
; Line 701
	mov	eax, DWORD PTR _numBytes$[ebp]
	add	eax, 15					; 0000000fH
	and	eax, -16				; fffffff0H
	mov	DWORD PTR _numBytes$[ebp], eax
; Line 702
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _returnOffset$[ebp], ecx
; Line 703
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _numBytes$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 704
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 705
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+8], eax
; Line 706
	mov	eax, DWORD PTR _numBytes$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _returnOffset$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 707
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initPtrs@SpoofData@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::SpoofData::initPtrs
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _returnOffset$[ebp]
$LN3@reserveSpa:
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reserveSpace@SpoofData@icu_56@@QAEPAXHAAW4UErrorCode@@@Z ENDP ; icu_56::SpoofData::reserveSpace
_TEXT	ENDS
PUBLIC	??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@ ; `string'
PUBLIC	??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@ ; `string'
PUBLIC	??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@ ; `string'
PUBLIC	_uspoof_swap_56
EXTRN	_utrie2_swap_56:PROC
EXTRN	_udata_swapDataHeader_56:PROC
EXTRN	_udata_printError_56:PROC
;	COMDAT ??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@
CONST	SEGMENT
??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@ DB 'u'
	DB	'spoof_swap(): too few bytes (%d after ICU Data header) for sp'
	DB	'oof data.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@
CONST	SEGMENT
??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@ DB 'uspoof'
	DB	'_swap(): Spoof Data header is invalid.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@
CONST	SEGMENT
??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@ DB 'us'
	DB	'poof_swap(): data format %02x.%02x.%02x.%02x (format version '
	DB	'%02x %02x %02x %02x) is not recognized', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _uspoof_swap_56
_TEXT	SEGMENT
_magic$ = -128						; size = 4
_sectionLength$ = -116					; size = 4
_sectionStart$ = -104					; size = 4
_outputDH$ = -92					; size = 4
_outBytes$ = -80					; size = 4
_totalSize$ = -68					; size = 4
_spoofDataLength$ = -56					; size = 4
_spoofDH$ = -44						; size = 4
_inBytes$ = -32						; size = 4
_headerSize$ = -20					; size = 4
_pInfo$ = -8						; size = 4
_ds$ = 8						; size = 4
_inData$ = 12						; size = 4
_length$ = 16						; size = 4
_outData$ = 20						; size = 4
_status$ = 24						; size = 4
_uspoof_swap_56 PROC					; COMDAT
; Line 723
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 725
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN11@uspoof_swa
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@uspoof_swa
$LN11@uspoof_swa:
; Line 726
	xor	eax, eax
	jmp	$LN13@uspoof_swa
$LN12@uspoof_swa:
; Line 728
	cmp	DWORD PTR _ds$[ebp], 0
	je	SHORT $LN9@uspoof_swa
	cmp	DWORD PTR _inData$[ebp], 0
	je	SHORT $LN9@uspoof_swa
	cmp	DWORD PTR _length$[ebp], -1
	jl	SHORT $LN9@uspoof_swa
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN10@uspoof_swa
	cmp	DWORD PTR _outData$[ebp], 0
	jne	SHORT $LN10@uspoof_swa
$LN9@uspoof_swa:
; Line 729
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 730
	xor	eax, eax
	jmp	$LN13@uspoof_swa
$LN10@uspoof_swa:
; Line 737
	mov	eax, DWORD PTR _inData$[ebp]
	add	eax, 4
	mov	DWORD PTR _pInfo$[ebp], eax
; Line 742
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 67					; 00000043H
	jne	SHORT $LN7@uspoof_swa
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	cmp	ecx, 102				; 00000066H
	jne	SHORT $LN7@uspoof_swa
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 117				; 00000075H
	jne	SHORT $LN7@uspoof_swa
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+11]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN7@uspoof_swa
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	cmp	ecx, 1
	je	SHORT $LN8@uspoof_swa
$LN7@uspoof_swa:
; Line 748
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+15]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+14]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+13]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+11]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	push	eax
	push	OFFSET ??_C@_0GH@HLOIAILC@uspoof_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 40					; 00000028H
; Line 749
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 750
	xor	eax, eax
	jmp	$LN13@uspoof_swa
$LN8@uspoof_swa:
; Line 759
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _inData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_swapDataHeader_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _headerSize$[ebp], eax
; Line 766
	mov	eax, DWORD PTR _inData$[ebp]
	add	eax, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR _inBytes$[ebp], eax
; Line 767
	mov	eax, DWORD PTR _inBytes$[ebp]
	mov	DWORD PTR _spoofDH$[ebp], eax
; Line 769
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 944111087				; 3845fdefH
	jne	SHORT $LN5@uspoof_swa
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 128				; 00000080H
	jae	SHORT $LN6@uspoof_swa
$LN5@uspoof_swa:
; Line 771
	push	OFFSET ??_C@_0CO@HCMJHHPB@uspoof_swap?$CI?$CJ?3?5Spoof?5Data?5header@
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_printError_56
	add	esp, 8
; Line 772
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 773
	xor	eax, eax
	jmp	$LN13@uspoof_swa
$LN6@uspoof_swa:
; Line 779
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _spoofDataLength$[ebp], eax
; Line 780
	mov	eax, DWORD PTR _headerSize$[ebp]
	add	eax, DWORD PTR _spoofDataLength$[ebp]
	mov	DWORD PTR _totalSize$[ebp], eax
; Line 781
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@uspoof_swa
; Line 782
	mov	eax, DWORD PTR _totalSize$[ebp]
	jmp	$LN13@uspoof_swa
$LN4@uspoof_swa:
; Line 788
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _totalSize$[ebp]
	jge	SHORT $LN3@uspoof_swa
; Line 790
	mov	eax, DWORD PTR _spoofDataLength$[ebp]
	push	eax
	push	OFFSET ??_C@_0EJ@JCDCNMPF@uspoof_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_printError_56
	add	esp, 12					; 0000000cH
; Line 791
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 8
; Line 792
	xor	eax, eax
	jmp	$LN13@uspoof_swa
$LN3@uspoof_swa:
; Line 801
	mov	eax, DWORD PTR _outData$[ebp]
	add	eax, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR _outBytes$[ebp], eax
; Line 802
	mov	eax, DWORD PTR _outBytes$[ebp]
	mov	DWORD PTR _outputDH$[ebp], eax
; Line 812
	mov	eax, DWORD PTR _inBytes$[ebp]
	cmp	eax, DWORD PTR _outBytes$[ebp]
	je	SHORT $LN2@uspoof_swa
; Line 813
	mov	eax, DWORD PTR _spoofDataLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _outBytes$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN2@uspoof_swa:
; Line 817
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 818
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 2
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 819
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 822
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 823
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 824
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 827
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 828
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 829
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 832
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 833
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 2
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 834
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 837
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 838
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 839
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_utrie2_swap_56
	add	esp, 20					; 00000014H
; Line 842
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 843
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 844
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_utrie2_swap_56
	add	esp, 20					; 00000014H
; Line 847
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sectionStart$[ebp], eax
; Line 848
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	imul	eax, 24					; 00000018H
	mov	DWORD PTR _sectionLength$[ebp], eax
; Line 849
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outBytes$[ebp]
	add	ecx, DWORD PTR _sectionStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sectionLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _sectionStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 856
	mov	esi, esp
	mov	eax, DWORD PTR _spoofDH$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _magic$[ebp], eax
; Line 857
	mov	esi, esp
	mov	eax, DWORD PTR _magic$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outputDH$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 859
	mov	eax, DWORD PTR _outputDH$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _spoofDH$[ebp]
	add	ecx, 4
	cmp	eax, ecx
	je	SHORT $LN1@uspoof_swa
; Line 860
	push	1
	mov	eax, DWORD PTR _spoofDH$[ebp]
	add	eax, 4
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	mov	ecx, DWORD PTR _spoofDH$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _outputDH$[ebp]
	add	edx, 4
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@uspoof_swa:
; Line 863
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outputDH$[ebp]
	add	ecx, 8
	push	ecx
	push	120					; 00000078H
	mov	edx, DWORD PTR _spoofDH$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 865
	mov	eax, DWORD PTR _totalSize$[ebp]
$LN13@uspoof_swa:
; Line 866
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uspoof_swap_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

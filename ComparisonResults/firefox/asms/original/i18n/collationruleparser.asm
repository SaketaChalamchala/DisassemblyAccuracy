; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\collationruleparser.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05ODNOIFML@digit?$AA@			; `string'
PUBLIC	??_C@_08JLPCGLMH@currency?$AA@			; `string'
PUBLIC	??_C@_06OJHAJCPM@symbol?$AA@			; `string'
PUBLIC	??_C@_05KOBGHFJJ@punct?$AA@			; `string'
PUBLIC	??_C@_05OLNILLAB@space?$AA@			; `string'
PUBLIC	??_C@_0O@DKGCMODK@last?5trailing?$AA@		; `string'
PUBLIC	??_C@_0P@NBKAIBHC@first?5trailing?$AA@		; `string'
PUBLIC	??_C@_0O@JAOPHGFB@last?5implicit?$AA@		; `string'
PUBLIC	??_C@_0P@HLCNDJBJ@first?5implicit?$AA@		; `string'
PUBLIC	??_C@_0N@PLHCDOCG@last?5regular?$AA@		; `string'
PUBLIC	??_C@_0O@DHALEJOD@first?5regular?$AA@		; `string'
PUBLIC	??_C@_0O@KOLFKDHL@last?5variable?$AA@		; `string'
PUBLIC	??_C@_0P@EFHHOMDD@first?5variable?$AA@		; `string'
PUBLIC	??_C@_0BH@HLEEAHBC@last?5primary?5ignorable?$AA@ ; `string'
PUBLIC	??_C@_0BI@MJLCBDKP@first?5primary?5ignorable?$AA@ ; `string'
PUBLIC	??_C@_0BJ@OMCBOOON@last?5secondary?5ignorable?$AA@ ; `string'
PUBLIC	??_C@_0BK@KHJAFIJD@first?5secondary?5ignorable?$AA@ ; `string'
PUBLIC	??_C@_0BI@DPELFMFB@last?5tertiary?5ignorable?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IKCJGFHE@first?5tertiary?5ignorable?$AA@ ; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
PUBLIC	?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB	; icu_56::CollationData::JAMO_CE32S_LENGTH
PUBLIC	?POS_LEAD@CollationRuleParser@icu_56@@2_WB	; icu_56::CollationRuleParser::POS_LEAD
PUBLIC	?POS_BASE@CollationRuleParser@icu_56@@2_WB	; icu_56::CollationRuleParser::POS_BASE
PUBLIC	?STRENGTH_MASK@CollationRuleParser@icu_56@@0HB	; icu_56::CollationRuleParser::STRENGTH_MASK
PUBLIC	?STARRED_FLAG@CollationRuleParser@icu_56@@0HB	; icu_56::CollationRuleParser::STARRED_FLAG
PUBLIC	?OFFSET_SHIFT@CollationRuleParser@icu_56@@0HB	; icu_56::CollationRuleParser::OFFSET_SHIFT
PUBLIC	?CHECK_FCD@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CHECK_FCD
PUBLIC	?NUMERIC@CollationSettings@icu_56@@2HB		; icu_56::CollationSettings::NUMERIC
PUBLIC	?SHIFTED@CollationSettings@icu_56@@2HB		; icu_56::CollationSettings::SHIFTED
PUBLIC	?ALTERNATE_MASK@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::ALTERNATE_MASK
PUBLIC	?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::MAX_VARIABLE_SHIFT
PUBLIC	?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::MAX_VARIABLE_MASK
PUBLIC	?UPPER_FIRST@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::UPPER_FIRST
PUBLIC	?CASE_FIRST@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CASE_FIRST
PUBLIC	?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::CASE_FIRST_AND_UPPER_MASK
PUBLIC	?CASE_LEVEL@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CASE_LEVEL
PUBLIC	?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::BACKWARD_SECONDARY
PUBLIC	?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::STRENGTH_SHIFT
PUBLIC	?STRENGTH_MASK@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::STRENGTH_MASK
;	COMDAT ??_C@_05ODNOIFML@digit?$AA@
CONST	SEGMENT
??_C@_05ODNOIFML@digit?$AA@ DB 'digit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLPCGLMH@currency?$AA@
CONST	SEGMENT
??_C@_08JLPCGLMH@currency?$AA@ DB 'currency', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OJHAJCPM@symbol?$AA@
CONST	SEGMENT
??_C@_06OJHAJCPM@symbol?$AA@ DB 'symbol', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KOBGHFJJ@punct?$AA@
CONST	SEGMENT
??_C@_05KOBGHFJJ@punct?$AA@ DB 'punct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OLNILLAB@space?$AA@
CONST	SEGMENT
??_C@_05OLNILLAB@space?$AA@ DB 'space', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKGCMODK@last?5trailing?$AA@
CONST	SEGMENT
??_C@_0O@DKGCMODK@last?5trailing?$AA@ DB 'last trailing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBKAIBHC@first?5trailing?$AA@
CONST	SEGMENT
??_C@_0P@NBKAIBHC@first?5trailing?$AA@ DB 'first trailing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JAOPHGFB@last?5implicit?$AA@
CONST	SEGMENT
??_C@_0O@JAOPHGFB@last?5implicit?$AA@ DB 'last implicit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HLCNDJBJ@first?5implicit?$AA@
CONST	SEGMENT
??_C@_0P@HLCNDJBJ@first?5implicit?$AA@ DB 'first implicit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PLHCDOCG@last?5regular?$AA@
CONST	SEGMENT
??_C@_0N@PLHCDOCG@last?5regular?$AA@ DB 'last regular', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DHALEJOD@first?5regular?$AA@
CONST	SEGMENT
??_C@_0O@DHALEJOD@first?5regular?$AA@ DB 'first regular', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KOLFKDHL@last?5variable?$AA@
CONST	SEGMENT
??_C@_0O@KOLFKDHL@last?5variable?$AA@ DB 'last variable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EFHHOMDD@first?5variable?$AA@
CONST	SEGMENT
??_C@_0P@EFHHOMDD@first?5variable?$AA@ DB 'first variable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HLEEAHBC@last?5primary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BH@HLEEAHBC@last?5primary?5ignorable?$AA@ DB 'last primary ignorab'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MJLCBDKP@first?5primary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BI@MJLCBDKP@first?5primary?5ignorable?$AA@ DB 'first primary ignor'
	DB	'able', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OMCBOOON@last?5secondary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BJ@OMCBOOON@last?5secondary?5ignorable?$AA@ DB 'last secondary ign'
	DB	'orable', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KHJAFIJD@first?5secondary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BK@KHJAFIJD@first?5secondary?5ignorable?$AA@ DB 'first secondary i'
	DB	'gnorable', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DPELFMFB@last?5tertiary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BI@DPELFMFB@last?5tertiary?5ignorable?$AA@ DB 'last tertiary ignor'
	DB	'able', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IKCJGFHE@first?5tertiary?5ignorable?$AA@
CONST	SEGMENT
??_C@_0BJ@IKCJGFHE@first?5tertiary?5ignorable?$AA@ DB 'first tertiary ign'
	DB	'orable', 00H				; `string'
CONST	ENDS
CONST	SEGMENT
_BEFORE	DW	05bH
	DW	062H
	DW	065H
	DW	066H
	DW	06fH
	DW	072H
	DW	065H
	DW	00H
_positions DD	FLAT:??_C@_0BJ@IKCJGFHE@first?5tertiary?5ignorable?$AA@
	DD	FLAT:??_C@_0BI@DPELFMFB@last?5tertiary?5ignorable?$AA@
	DD	FLAT:??_C@_0BK@KHJAFIJD@first?5secondary?5ignorable?$AA@
	DD	FLAT:??_C@_0BJ@OMCBOOON@last?5secondary?5ignorable?$AA@
	DD	FLAT:??_C@_0BI@MJLCBDKP@first?5primary?5ignorable?$AA@
	DD	FLAT:??_C@_0BH@HLEEAHBC@last?5primary?5ignorable?$AA@
	DD	FLAT:??_C@_0P@EFHHOMDD@first?5variable?$AA@
	DD	FLAT:??_C@_0O@KOLFKDHL@last?5variable?$AA@
	DD	FLAT:??_C@_0O@DHALEJOD@first?5regular?$AA@
	DD	FLAT:??_C@_0N@PLHCDOCG@last?5regular?$AA@
	DD	FLAT:??_C@_0P@HLCNDJBJ@first?5implicit?$AA@
	DD	FLAT:??_C@_0O@JAOPHGFB@last?5implicit?$AA@
	DD	FLAT:??_C@_0P@NBKAIBHC@first?5trailing?$AA@
	DD	FLAT:??_C@_0O@DKGCMODK@last?5trailing?$AA@
_gSpecialReorderCodes DD FLAT:??_C@_05OLNILLAB@space?$AA@
	DD	FLAT:??_C@_05KOBGHFJJ@punct?$AA@
	DD	FLAT:??_C@_06OJHAJCPM@symbol?$AA@
	DD	FLAT:??_C@_08JLPCGLMH@currency?$AA@
	DD	FLAT:??_C@_05ODNOIFML@digit?$AA@
?sp@?1??readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@3@@Z@4_WB DW 020H ; `icu_56::CollationRuleParser::readWords'::`2'::sp
CONST	ENDS
;	COMDAT ?STRENGTH_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?STRENGTH_MASK@CollationSettings@icu_56@@2HB DD 0f000H	; icu_56::CollationSettings::STRENGTH_MASK
CONST	ENDS
;	COMDAT ?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB DD 0cH	; icu_56::CollationSettings::STRENGTH_SHIFT
CONST	ENDS
;	COMDAT ?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB DD 0800H ; icu_56::CollationSettings::BACKWARD_SECONDARY
CONST	ENDS
;	COMDAT ?CASE_LEVEL@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_LEVEL@CollationSettings@icu_56@@2HB DD 0400H	; icu_56::CollationSettings::CASE_LEVEL
CONST	ENDS
;	COMDAT ?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB DD 0300H ; icu_56::CollationSettings::CASE_FIRST_AND_UPPER_MASK
CONST	ENDS
;	COMDAT ?CASE_FIRST@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_FIRST@CollationSettings@icu_56@@2HB DD 0200H	; icu_56::CollationSettings::CASE_FIRST
CONST	ENDS
;	COMDAT ?UPPER_FIRST@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?UPPER_FIRST@CollationSettings@icu_56@@2HB DD 0100H	; icu_56::CollationSettings::UPPER_FIRST
CONST	ENDS
;	COMDAT ?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB DD 070H ; icu_56::CollationSettings::MAX_VARIABLE_MASK
CONST	ENDS
;	COMDAT ?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB DD 04H ; icu_56::CollationSettings::MAX_VARIABLE_SHIFT
CONST	ENDS
;	COMDAT ?ALTERNATE_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?ALTERNATE_MASK@CollationSettings@icu_56@@2HB DD 0cH	; icu_56::CollationSettings::ALTERNATE_MASK
CONST	ENDS
;	COMDAT ?SHIFTED@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?SHIFTED@CollationSettings@icu_56@@2HB DD 04H		; icu_56::CollationSettings::SHIFTED
CONST	ENDS
;	COMDAT ?NUMERIC@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?NUMERIC@CollationSettings@icu_56@@2HB DD 02H		; icu_56::CollationSettings::NUMERIC
CONST	ENDS
;	COMDAT ?CHECK_FCD@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CHECK_FCD@CollationSettings@icu_56@@2HB DD 01H		; icu_56::CollationSettings::CHECK_FCD
CONST	ENDS
;	COMDAT ?OFFSET_SHIFT@CollationRuleParser@icu_56@@0HB
CONST	SEGMENT
?OFFSET_SHIFT@CollationRuleParser@icu_56@@0HB DD 08H	; icu_56::CollationRuleParser::OFFSET_SHIFT
CONST	ENDS
;	COMDAT ?STARRED_FLAG@CollationRuleParser@icu_56@@0HB
CONST	SEGMENT
?STARRED_FLAG@CollationRuleParser@icu_56@@0HB DD 010H	; icu_56::CollationRuleParser::STARRED_FLAG
CONST	ENDS
;	COMDAT ?STRENGTH_MASK@CollationRuleParser@icu_56@@0HB
CONST	SEGMENT
?STRENGTH_MASK@CollationRuleParser@icu_56@@0HB DD 0fH	; icu_56::CollationRuleParser::STRENGTH_MASK
CONST	ENDS
;	COMDAT ?POS_BASE@CollationRuleParser@icu_56@@2_WB
CONST	SEGMENT
?POS_BASE@CollationRuleParser@icu_56@@2_WB DW 02800H	; icu_56::CollationRuleParser::POS_BASE
CONST	ENDS
;	COMDAT ?POS_LEAD@CollationRuleParser@icu_56@@2_WB
CONST	SEGMENT
?POS_LEAD@CollationRuleParser@icu_56@@2_WB DW 0fffeH	; icu_56::CollationRuleParser::POS_LEAD
CONST	ENDS
;	COMDAT ?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB
CONST	SEGMENT
?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB DD 043H	; icu_56::CollationData::JAMO_CE32S_LENGTH
CONST	ENDS
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ; icu_56::CollationData::CollationData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nfc$ = 8						; size = 4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z PROC ; icu_56::CollationData::CollationData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationdata.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nfc$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 301989888		; 12000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ENDP ; icu_56::CollationData::CollationData
_TEXT	ENDS
PUBLIC	?getCE32@CollationData@icu_56@@QBEIH@Z		; icu_56::CollationData::getCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv138 = -220						; size = 4
tv139 = -216						; size = 4
tv140 = -212						; size = 4
tv141 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32@CollationData@icu_56@@QBEIH@Z PROC		; icu_56::CollationData::getCE32, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [ecx]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv141[ebp], eax
	jmp	$LN10@getCE32
$LN9@getCE32:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@getCE32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR [edx]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv140[ebp], edx
	jmp	$LN8@getCE32
$LN7@getCE32:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@getCE32
	mov	DWORD PTR tv139[ebp], 128		; 00000080H
	jmp	SHORT $LN6@getCE32
$LN5@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN4@getCE32
$LN3@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv138[ebp], ecx
$LN4@getCE32:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv139[ebp], edx
$LN6@getCE32:
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv140[ebp], eax
$LN8@getCE32:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv141[ebp], ecx
$LN10@getCE32:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32@CollationData@icu_56@@QBEIH@Z ENDP		; icu_56::CollationData::getCE32
_TEXT	ENDS
PUBLIC	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getCE32FromSupplementary, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32Fro
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN4@getCE32Fro
$LN3@getCE32Fro:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv84[ebp], ecx
$LN4@getCE32Fro:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getCE32FromSupplementary
_TEXT	ENDS
PUBLIC	?isDigit@CollationData@icu_56@@QBECH@Z		; icu_56::CollationData::isDigit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDigit@CollationData@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv75 = -212						; size = 4
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isDigit@CollationData@icu_56@@QBECH@Z PROC		; icu_56::CollationData::isDigit, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	cmp	DWORD PTR _c$[ebp], 1632		; 00000660H
	jge	SHORT $LN5@isDigit
	cmp	DWORD PTR _c$[ebp], 57			; 00000039H
	jg	SHORT $LN3@isDigit
	cmp	DWORD PTR _c$[ebp], 48			; 00000030H
	jl	SHORT $LN3@isDigit
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@isDigit
$LN3@isDigit:
	mov	DWORD PTR tv67[ebp], 0
$LN4@isDigit:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@isDigit
$LN5@isDigit:
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR tv75[ebp], edx
$LN6@isDigit:
	mov	al, BYTE PTR tv75[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isDigit@CollationData@icu_56@@QBECH@Z ENDP		; icu_56::CollationData::isDigit
_TEXT	ENDS
PUBLIC	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z
_TEXT	SEGMENT
tv86 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_numeric$ = 12						; size = 1
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z PROC	; icu_56::CollationData::isUnsafeBackward, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
	movsx	edx, BYTE PTR _numeric$[ebp]
	test	edx, edx
	je	SHORT $LN3@isUnsafeBa
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDigit@CollationData@icu_56@@QBECH@Z	; icu_56::CollationData::isDigit
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
$LN3@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN5@isUnsafeBa
$LN4@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 1
$LN5@isUnsafeBa:
	mov	al, BYTE PTR tv86[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ENDP	; icu_56::CollationData::isUnsafeBackward
_TEXT	ENDS
PUBLIC	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressibleLeadByte, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _b$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressibleLeadByte
_TEXT	ENDS
PUBLIC	?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressiblePrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressiblePrimary, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressiblePrimary
_TEXT	ENDS
PUBLIC	?readCE32@CollationData@icu_56@@SAIPB_W@Z	; icu_56::CollationData::readCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readCE32@CollationData@icu_56@@SAIPB_W@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?readCE32@CollationData@icu_56@@SAIPB_W@Z PROC		; icu_56::CollationData::readCE32, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [eax]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	or	eax, edx
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readCE32@CollationData@icu_56@@SAIPB_W@Z ENDP		; icu_56::CollationData::readCE32
_TEXT	ENDS
PUBLIC	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
EXTRN	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:PROC ; icu_56::Collation::getThreeBytePrimaryForOffsetData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z
_TEXT	SEGMENT
_dataCE$ = -24						; size = 8
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_ce32$ = 12						; size = 4
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z PROC ; icu_56::CollationData::getCEFromOffsetCE32, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _dataCE$[ebp], ecx
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _dataCE$[ebp+4], edx
; Line 115
	mov	eax, DWORD PTR _dataCE$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _dataCE$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z ; icu_56::Collation::getThreeBytePrimaryForOffsetData
	add	esp, 12					; 0000000cH
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ENDP ; icu_56::CollationData::getCEFromOffsetCE32
_TEXT	ENDS
PUBLIC	?getFCD16@CollationData@icu_56@@QBEGH@Z		; icu_56::CollationData::getFCD16
EXTRN	__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16@CollationData@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16@CollationData@icu_56@@QBEGH@Z PROC		; icu_56::CollationData::getFCD16, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	DWORD PTR __imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16@CollationData@icu_56@@QBEGH@Z ENDP		; icu_56::CollationData::getFCD16
_TEXT	ENDS
PUBLIC	?setSink@CollationRuleParser@icu_56@@QAEXPAVSink@12@@Z ; icu_56::CollationRuleParser::setSink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSink@CollationRuleParser@icu_56@@QAEXPAVSink@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sinkAlias$ = 8						; size = 4
?setSink@CollationRuleParser@icu_56@@QAEXPAVSink@12@@Z PROC ; icu_56::CollationRuleParser::setSink, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationruleparser.h
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sinkAlias$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setSink@CollationRuleParser@icu_56@@QAEXPAVSink@12@@Z ENDP ; icu_56::CollationRuleParser::setSink
_TEXT	ENDS
PUBLIC	?setImporter@CollationRuleParser@icu_56@@QAEXPAVImporter@12@@Z ; icu_56::CollationRuleParser::setImporter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setImporter@CollationRuleParser@icu_56@@QAEXPAVImporter@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_importerAlias$ = 8					; size = 4
?setImporter@CollationRuleParser@icu_56@@QAEXPAVImporter@12@@Z PROC ; icu_56::CollationRuleParser::setImporter, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _importerAlias$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setImporter@CollationRuleParser@icu_56@@QAEXPAVImporter@12@@Z ENDP ; icu_56::CollationRuleParser::setImporter
_TEXT	ENDS
PUBLIC	?getErrorReason@CollationRuleParser@icu_56@@QBEPBDXZ ; icu_56::CollationRuleParser::getErrorReason
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getErrorReason@CollationRuleParser@icu_56@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getErrorReason@CollationRuleParser@icu_56@@QBEPBDXZ PROC ; icu_56::CollationRuleParser::getErrorReason, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getErrorReason@CollationRuleParser@icu_56@@QBEPBDXZ ENDP ; icu_56::CollationRuleParser::getErrorReason
_TEXT	ENDS
PUBLIC	??_7Sink@CollationRuleParser@icu_56@@6B@	; icu_56::CollationRuleParser::Sink::`vftable'
PUBLIC	??0Sink@CollationRuleParser@icu_56@@QAE@XZ	; icu_56::CollationRuleParser::Sink::Sink
PUBLIC	??_R4Sink@CollationRuleParser@icu_56@@6B@	; icu_56::CollationRuleParser::Sink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSink@CollationRuleParser@icu_56@@@8	; icu_56::CollationRuleParser::Sink `RTTI Type Descriptor'
PUBLIC	??_R3Sink@CollationRuleParser@icu_56@@8		; icu_56::CollationRuleParser::Sink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Sink@CollationRuleParser@icu_56@@8		; icu_56::CollationRuleParser::Sink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Sink@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Sink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESink@CollationRuleParser@icu_56@@UAEPAXI@Z	; icu_56::CollationRuleParser::Sink::`vector deleting destructor'
PUBLIC	?suppressContractions@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::Sink::suppressContractions
PUBLIC	?optimize@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::Sink::optimize
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Sink@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Sink@CollationRuleParser@icu_56@@8 DD FLAT:??_R0?AVSink@CollationRuleParser@icu_56@@@8 ; icu_56::CollationRuleParser::Sink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Sink@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Sink@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R2Sink@CollationRuleParser@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Sink@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Sink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Sink@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R3Sink@CollationRuleParser@icu_56@@8 DD 00H		; icu_56::CollationRuleParser::Sink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Sink@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSink@CollationRuleParser@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSink@CollationRuleParser@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationRuleParser::Sink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSink@CollationRuleParser@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Sink@CollationRuleParser@icu_56@@6B@
rdata$r	SEGMENT
??_R4Sink@CollationRuleParser@icu_56@@6B@ DD 00H	; icu_56::CollationRuleParser::Sink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSink@CollationRuleParser@icu_56@@@8
	DD	FLAT:??_R3Sink@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Sink@CollationRuleParser@icu_56@@6B@
CONST	SEGMENT
??_7Sink@CollationRuleParser@icu_56@@6B@ DD FLAT:??_R4Sink@CollationRuleParser@icu_56@@6B@ ; icu_56::CollationRuleParser::Sink::`vftable'
	DD	FLAT:??_ESink@CollationRuleParser@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?suppressContractions@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z
	DD	FLAT:?optimize@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Sink@CollationRuleParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Sink@CollationRuleParser@icu_56@@QAE@XZ PROC		; icu_56::CollationRuleParser::Sink::Sink, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Sink@CollationRuleParser@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Sink@CollationRuleParser@icu_56@@QAE@XZ ENDP		; icu_56::CollationRuleParser::Sink::Sink
_TEXT	ENDS
PUBLIC	??0Sink@CollationRuleParser@icu_56@@QAE@ABV012@@Z ; icu_56::CollationRuleParser::Sink::Sink
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Sink@CollationRuleParser@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Sink@CollationRuleParser@icu_56@@QAE@ABV012@@Z PROC	; icu_56::CollationRuleParser::Sink::Sink, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Sink@CollationRuleParser@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Sink@CollationRuleParser@icu_56@@QAE@ABV012@@Z ENDP	; icu_56::CollationRuleParser::Sink::Sink
_TEXT	ENDS
PUBLIC	??4Sink@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::CollationRuleParser::Sink::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Sink@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Sink@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::CollationRuleParser::Sink::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Sink@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::CollationRuleParser::Sink::operator=
_TEXT	ENDS
PUBLIC	??1Sink@CollationRuleParser@icu_56@@UAE@XZ	; icu_56::CollationRuleParser::Sink::~Sink
PUBLIC	??_GSink@CollationRuleParser@icu_56@@UAEPAXI@Z	; icu_56::CollationRuleParser::Sink::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSink@CollationRuleParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSink@CollationRuleParser@icu_56@@UAEPAXI@Z PROC	; icu_56::CollationRuleParser::Sink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Sink@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Sink::~Sink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSink@CollationRuleParser@icu_56@@UAEPAXI@Z ENDP	; icu_56::CollationRuleParser::Sink::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ESink@CollationRuleParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESink@CollationRuleParser@icu_56@@UAEPAXI@Z PROC	; icu_56::CollationRuleParser::Sink::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Sink@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Sink::~Sink
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Sink@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Sink::~Sink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESink@CollationRuleParser@icu_56@@UAEPAXI@Z ENDP	; icu_56::CollationRuleParser::Sink::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Importer@CollationRuleParser@icu_56@@6B@	; icu_56::CollationRuleParser::Importer::`vftable'
PUBLIC	??0Importer@CollationRuleParser@icu_56@@QAE@XZ	; icu_56::CollationRuleParser::Importer::Importer
PUBLIC	??_R4Importer@CollationRuleParser@icu_56@@6B@	; icu_56::CollationRuleParser::Importer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVImporter@CollationRuleParser@icu_56@@@8	; icu_56::CollationRuleParser::Importer `RTTI Type Descriptor'
PUBLIC	??_R3Importer@CollationRuleParser@icu_56@@8	; icu_56::CollationRuleParser::Importer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Importer@CollationRuleParser@icu_56@@8	; icu_56::CollationRuleParser::Importer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EImporter@CollationRuleParser@icu_56@@UAEPAXI@Z ; icu_56::CollationRuleParser::Importer::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 DD FLAT:??_R0?AVImporter@CollationRuleParser@icu_56@@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Importer@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R2Importer@CollationRuleParser@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R3Importer@CollationRuleParser@icu_56@@8 DD 00H	; icu_56::CollationRuleParser::Importer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Importer@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVImporter@CollationRuleParser@icu_56@@@8
_DATA	SEGMENT
??_R0?AVImporter@CollationRuleParser@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationRuleParser::Importer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVImporter@CollationRuleParser@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Importer@CollationRuleParser@icu_56@@6B@
rdata$r	SEGMENT
??_R4Importer@CollationRuleParser@icu_56@@6B@ DD 00H	; icu_56::CollationRuleParser::Importer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVImporter@CollationRuleParser@icu_56@@@8
	DD	FLAT:??_R3Importer@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Importer@CollationRuleParser@icu_56@@6B@
CONST	SEGMENT
??_7Importer@CollationRuleParser@icu_56@@6B@ DD FLAT:??_R4Importer@CollationRuleParser@icu_56@@6B@ ; icu_56::CollationRuleParser::Importer::`vftable'
	DD	FLAT:??_EImporter@CollationRuleParser@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Importer@CollationRuleParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Importer@CollationRuleParser@icu_56@@QAE@XZ PROC	; icu_56::CollationRuleParser::Importer::Importer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Importer@CollationRuleParser@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Importer@CollationRuleParser@icu_56@@QAE@XZ ENDP	; icu_56::CollationRuleParser::Importer::Importer
_TEXT	ENDS
PUBLIC	??0Importer@CollationRuleParser@icu_56@@QAE@ABV012@@Z ; icu_56::CollationRuleParser::Importer::Importer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Importer@CollationRuleParser@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0Importer@CollationRuleParser@icu_56@@QAE@ABV012@@Z PROC ; icu_56::CollationRuleParser::Importer::Importer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Importer@CollationRuleParser@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Importer@CollationRuleParser@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::CollationRuleParser::Importer::Importer
_TEXT	ENDS
PUBLIC	??4Importer@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::CollationRuleParser::Importer::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Importer@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Importer@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::CollationRuleParser::Importer::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Importer@CollationRuleParser@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::CollationRuleParser::Importer::operator=
_TEXT	ENDS
PUBLIC	??1Importer@CollationRuleParser@icu_56@@UAE@XZ	; icu_56::CollationRuleParser::Importer::~Importer
PUBLIC	??_GImporter@CollationRuleParser@icu_56@@UAEPAXI@Z ; icu_56::CollationRuleParser::Importer::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImporter@CollationRuleParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GImporter@CollationRuleParser@icu_56@@UAEPAXI@Z PROC	; icu_56::CollationRuleParser::Importer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Importer@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Importer::~Importer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImporter@CollationRuleParser@icu_56@@UAEPAXI@Z ENDP	; icu_56::CollationRuleParser::Importer::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EImporter@CollationRuleParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EImporter@CollationRuleParser@icu_56@@UAEPAXI@Z PROC	; icu_56::CollationRuleParser::Importer::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1Importer@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Importer::~Importer
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Importer@CollationRuleParser@icu_56@@UAE@XZ ; icu_56::CollationRuleParser::Importer::~Importer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EImporter@CollationRuleParser@icu_56@@UAEPAXI@Z ENDP	; icu_56::CollationRuleParser::Importer::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CollationSettings@icu_56@@6B@		; icu_56::CollationSettings::`vftable'
PUBLIC	??0CollationSettings@icu_56@@QAE@XZ		; icu_56::CollationSettings::CollationSettings
PUBLIC	??_R4CollationSettings@icu_56@@6B@		; icu_56::CollationSettings::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUCollationSettings@icu_56@@@8		; icu_56::CollationSettings `RTTI Type Descriptor'
PUBLIC	??_R3CollationSettings@icu_56@@8		; icu_56::CollationSettings::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollationSettings@icu_56@@8		; icu_56::CollationSettings::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollationSettings@icu_56@@8	; icu_56::CollationSettings::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SharedObject@icu_56@@8		; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSharedObject@icu_56@@@8			; icu_56::SharedObject `RTTI Type Descriptor'
PUBLIC	??_R3SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Base Class Array'
PUBLIC	??_ECollationSettings@icu_56@@UAEPAXI@Z		; icu_56::CollationSettings::`vector deleting destructor'
EXTRN	__imp_??0SharedObject@icu_56@@QAE@XZ:PROC
;	COMDAT ??_R2SharedObject@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\collationsettings.h
rdata$r	SEGMENT
??_R2SharedObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8 ; icu_56::SharedObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R3SharedObject@icu_56@@8 DD 00H			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSharedObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSharedObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SharedObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSharedObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SharedObject@icu_56@@8 DD FLAT:??_R0?AVSharedObject@icu_56@@@8 ; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollationSettings@icu_56@@8 DD FLAT:??_R0?AUCollationSettings@icu_56@@@8 ; icu_56::CollationSettings::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R2CollationSettings@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollationSettings@icu_56@@8 ; icu_56::CollationSettings::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R3CollationSettings@icu_56@@8 DD 00H			; icu_56::CollationSettings::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCollationSettings@icu_56@@@8
_DATA	SEGMENT
??_R0?AUCollationSettings@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationSettings `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCollationSettings@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollationSettings@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollationSettings@icu_56@@6B@ DD 00H		; icu_56::CollationSettings::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUCollationSettings@icu_56@@@8
	DD	FLAT:??_R3CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollationSettings@icu_56@@6B@
CONST	SEGMENT
??_7CollationSettings@icu_56@@6B@ DD FLAT:??_R4CollationSettings@icu_56@@6B@ ; icu_56::CollationSettings::`vftable'
	DD	FLAT:??_ECollationSettings@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollationSettings@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollationSettings@icu_56@@QAE@XZ PROC		; icu_56::CollationSettings::CollationSettings, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SharedObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationSettings@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 8208		; 00002010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollationSettings@icu_56@@QAE@XZ ENDP		; icu_56::CollationSettings::CollationSettings
_TEXT	ENDS
PUBLIC	??9CollationSettings@icu_56@@QBECABU01@@Z	; icu_56::CollationSettings::operator!=
EXTRN	??8CollationSettings@icu_56@@QBECABU01@@Z:PROC	; icu_56::CollationSettings::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CollationSettings@icu_56@@QBECABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9CollationSettings@icu_56@@QBECABU01@@Z PROC		; icu_56::CollationSettings::operator!=, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8CollationSettings@icu_56@@QBECABU01@@Z ; icu_56::CollationSettings::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CollationSettings@icu_56@@QBECABU01@@Z ENDP		; icu_56::CollationSettings::operator!=
_TEXT	ENDS
PUBLIC	?hasReordering@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::hasReordering
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasReordering@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasReordering@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::hasReordering, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasReordering@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::hasReordering
_TEXT	ENDS
PUBLIC	?reorder@CollationSettings@icu_56@@QBEII@Z	; icu_56::CollationSettings::reorder
EXTRN	?reorderEx@CollationSettings@icu_56@@ABEII@Z:PROC ; icu_56::CollationSettings::reorderEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reorder@CollationSettings@icu_56@@QBEII@Z
_TEXT	SEGMENT
_b$ = -17						; size = 1
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?reorder@CollationSettings@icu_56@@QBEII@Z PROC		; icu_56::CollationSettings::reorder, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	al, BYTE PTR [eax+edx]
	mov	BYTE PTR _b$[ebp], al
; Line 136
	movzx	eax, BYTE PTR _b$[ebp]
	test	eax, eax
	jne	SHORT $LN2@reorder
	cmp	DWORD PTR _p$[ebp], 1
	ja	SHORT $LN3@reorder
$LN2@reorder:
; Line 137
	movzx	eax, BYTE PTR _b$[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	and	ecx, 16777215				; 00ffffffH
	or	eax, ecx
	jmp	SHORT $LN4@reorder
; Line 138
	jmp	SHORT $LN4@reorder
$LN3@reorder:
; Line 139
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reorderEx@CollationSettings@icu_56@@ABEII@Z ; icu_56::CollationSettings::reorderEx
$LN4@reorder:
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reorder@CollationSettings@icu_56@@QBEII@Z ENDP		; icu_56::CollationSettings::reorder
_TEXT	ENDS
PUBLIC	?getStrength@CollationSettings@icu_56@@SAHH@Z	; icu_56::CollationSettings::getStrength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStrength@CollationSettings@icu_56@@SAHH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?getStrength@CollationSettings@icu_56@@SAHH@Z PROC	; icu_56::CollationSettings::getStrength, COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	mov	eax, DWORD PTR _options$[ebp]
	sar	eax, 12					; 0000000cH
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStrength@CollationSettings@icu_56@@SAHH@Z ENDP	; icu_56::CollationSettings::getStrength
_TEXT	ENDS
PUBLIC	?getStrength@CollationSettings@icu_56@@QBEHXZ	; icu_56::CollationSettings::getStrength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStrength@CollationSettings@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getStrength@CollationSettings@icu_56@@QBEHXZ PROC	; icu_56::CollationSettings::getStrength, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?getStrength@CollationSettings@icu_56@@SAHH@Z ; icu_56::CollationSettings::getStrength
	add	esp, 4
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStrength@CollationSettings@icu_56@@QBEHXZ ENDP	; icu_56::CollationSettings::getStrength
_TEXT	ENDS
PUBLIC	?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z ; icu_56::CollationSettings::getFlag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bit$ = 8						; size = 4
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z PROC ; icu_56::CollationSettings::getFlag, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, DWORD PTR _bit$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 16					; 00000010H
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z ENDP ; icu_56::CollationSettings::getFlag
_TEXT	ENDS
PUBLIC	?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ; icu_56::CollationSettings::getCaseFirst
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ
_TEXT	SEGMENT
tv69 = -220						; size = 4
_option$ = -20						; size = 4
_this$ = -8						; size = 4
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ PROC ; icu_56::CollationSettings::getCaseFirst, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 768				; 00000300H
	mov	DWORD PTR _option$[ebp], ecx
; Line 166
	jne	SHORT $LN3@getCaseFir
	mov	DWORD PTR tv69[ebp], 16			; 00000010H
	jmp	SHORT $LN4@getCaseFir
$LN3@getCaseFir:
	xor	eax, eax
	cmp	DWORD PTR _option$[ebp], 512		; 00000200H
	setne	al
	add	eax, 24					; 00000018H
	mov	DWORD PTR tv69[ebp], eax
$LN4@getCaseFir:
	mov	eax, DWORD PTR tv69[ebp]
; Line 167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ENDP ; icu_56::CollationSettings::getCaseFirst
_TEXT	ENDS
PUBLIC	?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ; icu_56::CollationSettings::getAlternateHandling
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ PROC ; icu_56::CollationSettings::getAlternateHandling, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 21					; 00000015H
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ENDP ; icu_56::CollationSettings::getAlternateHandling
_TEXT	ENDS
PUBLIC	?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ ; icu_56::CollationSettings::getMaxVariable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ PROC ; icu_56::CollationSettings::getMaxVariable, COMDAT
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, 112				; 00000070H
	sar	eax, 4
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ ENDP ; icu_56::CollationSettings::getMaxVariable
_TEXT	ENDS
PUBLIC	?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::isTertiaryWithCaseBits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z PROC ; icu_56::CollationSettings::isTertiaryWithCaseBits, COMDAT
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 186
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1536				; 00000600H
	cmp	eax, 512				; 00000200H
	sete	al
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ENDP ; icu_56::CollationSettings::isTertiaryWithCaseBits
_TEXT	ENDS
PUBLIC	?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z ; icu_56::CollationSettings::getTertiaryMask
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z PROC	; icu_56::CollationSettings::getTertiaryMask, COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	call	?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::isTertiaryWithCaseBits
	add	esp, 4
	movsx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, 49152				; 0000c000H
	add	eax, 16191				; 00003f3fH
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z ENDP	; icu_56::CollationSettings::getTertiaryMask
_TEXT	ENDS
PUBLIC	?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z PROC ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst, COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1792				; 00000700H
	cmp	eax, 768				; 00000300H
	sete	al
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z ENDP ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst
_TEXT	ENDS
PUBLIC	?dontCheckFCD@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::dontCheckFCD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dontCheckFCD@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::dontCheckFCD, COMDAT
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	sete	al
; Line 202
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::dontCheckFCD
_TEXT	ENDS
PUBLIC	?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ ; icu_56::CollationSettings::hasBackwardSecondary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ PROC ; icu_56::CollationSettings::hasBackwardSecondary, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2048				; 00000800H
	setne	al
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ ENDP ; icu_56::CollationSettings::hasBackwardSecondary
_TEXT	ENDS
PUBLIC	?isNumeric@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::isNumeric
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNumeric@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNumeric@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::isNumeric, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2
	setne	al
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNumeric@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::isNumeric
_TEXT	ENDS
PUBLIC	??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z	; icu_56::CollationSettings::operator=
EXTRN	__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_$S1$72504 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z PROC	; icu_56::CollationSettings::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+52], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+56], edx
	mov	DWORD PTR _$S1$72504[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S1$72504[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$72504[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S1$72504[ebp], 384		; 00000180H
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _$S1$72504[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S1$72504[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [esi+edx*2+60]
	mov	WORD PTR [ecx+eax*2+60], dx
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z ENDP	; icu_56::CollationSettings::operator=
_TEXT	ENDS
PUBLIC	??_GCollationSettings@icu_56@@UAEPAXI@Z		; icu_56::CollationSettings::`scalar deleting destructor'
EXTRN	??1CollationSettings@icu_56@@UAE@XZ:PROC	; icu_56::CollationSettings::~CollationSettings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollationSettings@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollationSettings@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationSettings::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationSettings@icu_56@@UAE@XZ	; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollationSettings@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationSettings::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ECollationSettings@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollationSettings@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationSettings::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1CollationSettings@icu_56@@UAE@XZ ; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	828					; 0000033cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationSettings@icu_56@@UAE@XZ	; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollationSettings@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationSettings::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isBogus@CollationTailoring@icu_56@@QAECXZ	; icu_56::CollationTailoring::isBogus
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isBogus@CollationTailoring@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isBogus@CollationTailoring@icu_56@@QAECXZ PROC		; icu_56::CollationTailoring::isBogus, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationtailoring.h
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isBogus@CollationTailoring@icu_56@@QAECXZ ENDP		; icu_56::CollationTailoring::isBogus
_TEXT	ENDS
PUBLIC	??4CollationTailoring@icu_56@@QAEAAU01@ABU01@@Z	; icu_56::CollationTailoring::operator=
EXTRN	__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationTailoring@icu_56@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_$S2$73039 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationTailoring@icu_56@@QAEAAU01@ABU01@@Z PROC	; icu_56::CollationTailoring::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	DWORD PTR __imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _$S2$73039[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S2$73039[ebp]
	add	eax, 1
	mov	DWORD PTR _$S2$73039[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S2$73039[ebp], 4
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S2$73039[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S2$73039[ebp]
	mov	dl, BYTE PTR [ecx+296]
	mov	BYTE PTR [eax+296], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	mov	DWORD PTR [eax+300], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+304]
	mov	DWORD PTR [eax+304], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+308]
	mov	DWORD PTR [eax+308], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	mov	DWORD PTR [eax+312], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+316]
	mov	DWORD PTR [eax+316], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	mov	DWORD PTR [eax+320], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	DWORD PTR [eax+324], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR [eax+332]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	DWORD PTR [eax+332], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationTailoring@icu_56@@QAEAAU01@ABU01@@Z ENDP	; icu_56::CollationTailoring::operator=
_TEXT	ENDS
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Sink@CollationRuleParser@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Sink@CollationRuleParser@icu_56@@UAE@XZ PROC		; icu_56::CollationRuleParser::Sink::~Sink, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationruleparser.cpp
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Sink@CollationRuleParser@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Sink@CollationRuleParser@icu_56@@UAE@XZ ENDP		; icu_56::CollationRuleParser::Sink::~Sink
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?suppressContractions@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?suppressContractions@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::Sink::suppressContractions, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?suppressContractions@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::Sink::suppressContractions
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?optimize@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?optimize@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::Sink::optimize, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?optimize@Sink@CollationRuleParser@icu_56@@UAEXABVUnicodeSet@3@AAPBDAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::Sink::optimize
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1Importer@CollationRuleParser@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Importer@CollationRuleParser@icu_56@@UAE@XZ PROC	; icu_56::CollationRuleParser::Importer::~Importer, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Importer@CollationRuleParser@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Importer@CollationRuleParser@icu_56@@UAE@XZ ENDP	; icu_56::CollationRuleParser::Importer::~Importer
_TEXT	ENDS
PUBLIC	??0CollationRuleParser@icu_56@@QAE@PBUCollationData@1@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::CollationRuleParser
EXTRN	__imp_?getNFCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationRuleParser@icu_56@@QAE@PBUCollationData@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_base$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0CollationRuleParser@icu_56@@QAE@PBUCollationData@1@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::CollationRuleParser, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp_?getNFDInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp_?getNFCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _base$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CollationRuleParser@icu_56@@QAE@PBUCollationData@1@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::CollationRuleParser
_TEXT	ENDS
PUBLIC	??1CollationRuleParser@icu_56@@QAE@XZ		; icu_56::CollationRuleParser::~CollationRuleParser
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CollationRuleParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CollationRuleParser@icu_56@@QAE@XZ PROC		; icu_56::CollationRuleParser::~CollationRuleParser, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CollationRuleParser@icu_56@@QAE@XZ ENDP		; icu_56::CollationRuleParser::~CollationRuleParser
_TEXT	ENDS
PUBLIC	?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parse
PUBLIC	?parse@CollationRuleParser@icu_56@@QAEXABVUnicodeString@2@AAUCollationSettings@2@PAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parse@CollationRuleParser@icu_56@@QAEXABVUnicodeString@2@AAUCollationSettings@2@PAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ruleString$ = 8					; size = 4
_outSettings$ = 12					; size = 4
_outParseError$ = 16					; size = 4
_errorCode$ = 20					; size = 4
?parse@CollationRuleParser@icu_56@@QAEXABVUnicodeString@2@AAUCollationSettings@2@PAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parse, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parse
	jmp	SHORT $LN3@parse
$LN2@parse:
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outSettings$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outParseError$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN1@parse
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 0
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+4], -1
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	xor	edx, edx
	mov	WORD PTR [ecx+8], dx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	xor	edx, edx
	mov	WORD PTR [ecx+40], dx
$LN1@parse:
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 83
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleString$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parse
$LN3@parse:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?parse@CollationRuleParser@icu_56@@QAEXABVUnicodeString@2@AAUCollationSettings@2@PAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parse
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
PUBLIC	??_C@_0CH@OKLMFKOG@expected?5a?5reset?5or?5setting?5or?5c@ ; `string'
PUBLIC	?skipComment@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipComment
PUBLIC	?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseSetting
PUBLIC	?parseRuleChain@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRuleChain
EXTRN	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setFlag
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
;	COMDAT ??_C@_0CH@OKLMFKOG@expected?5a?5reset?5or?5setting?5or?5c@
; File d:\mozilla\intl\icu\source\i18n\collationruleparser.cpp
CONST	SEGMENT
??_C@_0CH@OKLMFKOG@expected?5a?5reset?5or?5setting?5or?5c@ DB 'expected a'
	DB	' reset or setting or comment', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv89 = -220						; size = 4
_c$73386 = -20						; size = 2
_this$ = -8						; size = 4
_ruleString$ = 8					; size = 4
_errorCode$ = 12					; size = 4
?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parse, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parse@2
	jmp	$LN14@parse@2
$LN13@parse@2:
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ruleString$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN12@parse@2:
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], eax
	jge	$LN14@parse@2
; Line 93
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$73386[ebp], ax
; Line 94
	movzx	eax, WORD PTR _c$73386[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@parse@2
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 96
	jmp	SHORT $LN12@parse@2
$LN10@parse@2:
; Line 98
	movzx	eax, WORD PTR _c$73386[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	sub	ecx, 33					; 00000021H
	mov	DWORD PTR tv89[ebp], ecx
	cmp	DWORD PTR tv89[ebp], 58			; 0000003aH
	ja	$LN2@parse@2
	mov	edx, DWORD PTR tv89[ebp]
	movzx	eax, BYTE PTR $LN17@parse@2[edx]
	jmp	DWORD PTR $LN18@parse@2[eax*4]
$LN7@parse@2:
; Line 100
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRuleChain@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRuleChain
; Line 101
	jmp	SHORT $LN8@parse@2
$LN6@parse@2:
; Line 103
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseSetting
; Line 104
	jmp	SHORT $LN8@parse@2
$LN5@parse@2:
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipComment@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipComment
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 107
	jmp	SHORT $LN8@parse@2
$LN4@parse@2:
; Line 110
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	17					; 00000011H
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setFlag
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 112
	jmp	SHORT $LN8@parse@2
$LN3@parse@2:
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 117
	jmp	SHORT $LN8@parse@2
$LN2@parse@2:
; Line 119
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CH@OKLMFKOG@expected?5a?5reset?5or?5setting?5or?5c@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
$LN8@parse@2:
; Line 122
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parse@2
	jmp	SHORT $LN14@parse@2
$LN1@parse@2:
; Line 123
	jmp	$LN12@parse@2
$LN14@parse@2:
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN18@parse@2:
	DD	$LN3@parse@2
	DD	$LN5@parse@2
	DD	$LN7@parse@2
	DD	$LN4@parse@2
	DD	$LN6@parse@2
	DD	$LN2@parse@2
$LN17@parse@2:
	DB	0
	DB	5
	DB	1
	DB	5
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parse
_TEXT	ENDS
PUBLIC	?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseStarredCharacters
PUBLIC	?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRelationStrings
PUBLIC	??_C@_0DG@JIFJBLAG@reset?9before?5strength?5followed?5b@ ; `string'
PUBLIC	??_C@_0DG@JGIOFIGN@reset?9before?5strength?5differs?5fr@ ; `string'
PUBLIC	??_C@_0CB@KCOAKEOM@reset?5not?5followed?5by?5a?5relation@ ; `string'
PUBLIC	?parseRelationOperator@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRelationOperator
PUBLIC	?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseResetAndPosition
;	COMDAT ??_C@_0DG@JIFJBLAG@reset?9before?5strength?5followed?5b@
CONST	SEGMENT
??_C@_0DG@JIFJBLAG@reset?9before?5strength?5followed?5b@ DB 'reset-before'
	DB	' strength followed by a stronger relation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JGIOFIGN@reset?9before?5strength?5differs?5fr@
CONST	SEGMENT
??_C@_0DG@JGIOFIGN@reset?9before?5strength?5differs?5fr@ DB 'reset-before'
	DB	' strength differs from its first relation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KCOAKEOM@reset?5not?5followed?5by?5a?5relation@
CONST	SEGMENT
??_C@_0CB@KCOAKEOM@reset?5not?5followed?5by?5a?5relation@ DB 'reset not f'
	DB	'ollowed by a relation', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseRuleChain@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$73423 = -68						; size = 4
_strength$73415 = -56					; size = 4
_result$73409 = -44					; size = 4
_isFirstRelation$ = -29					; size = 1
_resetStrength$ = -20					; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?parseRuleChain@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseRuleChain, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseResetAndPosition
	mov	DWORD PTR _resetStrength$[ebp], eax
; Line 129
	mov	BYTE PTR _isFirstRelation$[ebp], 1
$LN14@parseRuleC:
; Line 131
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRelationOperator@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRelationOperator
	mov	DWORD PTR _result$73409[ebp], eax
; Line 132
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@parseRuleC
	jmp	$LN15@parseRuleC
$LN12@parseRuleC:
; Line 133
	cmp	DWORD PTR _result$73409[ebp], 0
	jge	SHORT $LN11@parseRuleC
; Line 134
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], eax
	jge	SHORT $LN10@parseRuleC
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN10@parseRuleC
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipComment@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipComment
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 137
	jmp	$LN14@parseRuleC
$LN10@parseRuleC:
; Line 139
	movsx	eax, BYTE PTR _isFirstRelation$[ebp]
	test	eax, eax
	je	SHORT $LN9@parseRuleC
; Line 140
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CB@KCOAKEOM@reset?5not?5followed?5by?5a?5relation@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
$LN9@parseRuleC:
; Line 142
	jmp	$LN15@parseRuleC
$LN11@parseRuleC:
; Line 144
	mov	eax, DWORD PTR _result$73409[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _strength$73415[ebp], eax
; Line 145
	cmp	DWORD PTR _resetStrength$[ebp], 15	; 0000000fH
	jge	SHORT $LN8@parseRuleC
; Line 147
	movsx	eax, BYTE PTR _isFirstRelation$[ebp]
	test	eax, eax
	je	SHORT $LN7@parseRuleC
; Line 148
	mov	eax, DWORD PTR _strength$73415[ebp]
	cmp	eax, DWORD PTR _resetStrength$[ebp]
	je	SHORT $LN6@parseRuleC
; Line 149
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DG@JGIOFIGN@reset?9before?5strength?5differs?5fr@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 150
	jmp	SHORT $LN15@parseRuleC
$LN6@parseRuleC:
; Line 152
	jmp	SHORT $LN8@parseRuleC
$LN7@parseRuleC:
; Line 153
	mov	eax, DWORD PTR _strength$73415[ebp]
	cmp	eax, DWORD PTR _resetStrength$[ebp]
	jge	SHORT $LN8@parseRuleC
; Line 154
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DG@JIFJBLAG@reset?9before?5strength?5followed?5b@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 155
	jmp	SHORT $LN15@parseRuleC
$LN8@parseRuleC:
; Line 159
	mov	eax, DWORD PTR _result$73409[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR _i$73423[ebp], eax
; Line 160
	mov	eax, DWORD PTR _result$73409[ebp]
	and	eax, 16					; 00000010H
	jne	SHORT $LN3@parseRuleC
; Line 161
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$73423[ebp]
	push	ecx
	mov	edx, DWORD PTR _strength$73415[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseRelationStrings
; Line 162
	jmp	SHORT $LN2@parseRuleC
$LN3@parseRuleC:
; Line 163
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$73423[ebp]
	push	ecx
	mov	edx, DWORD PTR _strength$73415[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseStarredCharacters
$LN2@parseRuleC:
; Line 165
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseRuleC
	jmp	SHORT $LN15@parseRuleC
$LN1@parseRuleC:
; Line 166
	mov	BYTE PTR _isFirstRelation$[ebp], 0
; Line 167
	jmp	$LN14@parseRuleC
$LN15@parseRuleC:
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?parseRuleChain@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseRuleChain
_TEXT	ENDS
PUBLIC	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
PUBLIC	?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseTailoringString
PUBLIC	?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseSpecialPosition
PUBLIC	??_C@_0BH@KJPAEHJ@reset?5without?5position?$AA@	; `string'
PUBLIC	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0BH@KJPAEHJ@reset?5without?5position?$AA@
CONST	SEGMENT
??_C@_0BH@KJPAEHJ@reset?5without?5position?$AA@ DB 'reset without positio'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T81310 = -348						; size = 4
_str$ = -144						; size = 64
_resetStrength$ = -72					; size = 4
_c$ = -60						; size = 2
_j$ = -48						; size = 4
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseResetAndPosition, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseReset
	or	eax, -1
	jmp	$LN8@parseReset
$LN7@parseReset:
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _i$[ebp], eax
; Line 182
	mov	esi, esp
	push	7
	push	0
	push	OFFSET _BEFORE
	push	7
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	$LN6@parseReset
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 7
	mov	DWORD PTR _j$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$[ebp], eax
	jge	$LN6@parseReset
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN6@parseReset
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _j$[ebp], eax
	mov	esi, DWORD PTR _j$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN6@parseReset
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$[ebp], ax
	movzx	edx, WORD PTR _c$[ebp]
	cmp	edx, 49					; 00000031H
	jl	SHORT $LN6@parseReset
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 51					; 00000033H
	jg	SHORT $LN6@parseReset
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 93					; 0000005dH
	jne	SHORT $LN6@parseReset
; Line 184
	movzx	eax, WORD PTR _c$[ebp]
	sub	eax, 49					; 00000031H
	mov	DWORD PTR _resetStrength$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _i$[ebp], eax
; Line 186
	jmp	SHORT $LN5@parseReset
$LN6@parseReset:
; Line 187
	mov	DWORD PTR _resetStrength$[ebp], 15	; 0000000fH
$LN5@parseReset:
; Line 189
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jl	SHORT $LN4@parseReset
; Line 190
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0BH@KJPAEHJ@reset?5without?5position?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 191
	or	eax, -1
	jmp	$LN8@parseReset
$LN4@parseReset:
; Line 193
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 194
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 91					; 0000005bH
	jne	SHORT $LN3@parseReset
; Line 195
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseSpecialPosition
	mov	DWORD PTR _i$[ebp], eax
; Line 196
	jmp	SHORT $LN2@parseReset
$LN3@parseReset:
; Line 197
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseTailoringString
	mov	DWORD PTR _i$[ebp], eax
$LN2@parseReset:
; Line 199
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _resetStrength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseReset
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
$LN1@parseReset:
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 202
	mov	eax, DWORD PTR _resetStrength$[ebp]
	mov	DWORD PTR $T81310[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T81310[ebp]
$LN8@parseReset:
; Line 203
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@parseReset
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@parseReset:
	DD	1
	DD	$LN13@parseReset
$LN13@parseReset:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN11@parseReset
$LN11@parseReset:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseResetAndPosition@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseResetAndPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseRelationOperator@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv86 = -244						; size = 4
tv83 = -244						; size = 4
_c$ = -44						; size = 2
_i$ = -32						; size = 4
_strength$ = -20					; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?parseRelationOperator@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseRelationOperator, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@parseRelat
	or	eax, -1
	jmp	$LN18@parseRelat
$LN17@parseRelat:
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 209
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], eax
	jl	SHORT $LN16@parseRelat
	or	eax, -1
	jmp	$LN18@parseRelat
$LN16@parseRelat:
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _i$[ebp], ecx
; Line 212
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv83[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$[ebp], ax
; Line 213
	movzx	eax, WORD PTR _c$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	sub	ecx, 44					; 0000002cH
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 17			; 00000011H
	ja	$LN1@parseRelat
	mov	edx, DWORD PTR tv86[ebp]
	movzx	eax, BYTE PTR $LN20@parseRelat[edx]
	jmp	DWORD PTR $LN21@parseRelat[eax*4]
$LN13@parseRelat:
; Line 215
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN12@parseRelat
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 60					; 0000003cH
	jne	$LN12@parseRelat
; Line 216
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 217
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN11@parseRelat
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 60					; 0000003cH
	jne	SHORT $LN11@parseRelat
; Line 218
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN10@parseRelat
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 60					; 0000003cH
	jne	SHORT $LN10@parseRelat
; Line 220
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 221
	mov	DWORD PTR _strength$[ebp], 3
; Line 222
	jmp	SHORT $LN9@parseRelat
$LN10@parseRelat:
; Line 223
	mov	DWORD PTR _strength$[ebp], 2
$LN9@parseRelat:
; Line 225
	jmp	SHORT $LN8@parseRelat
$LN11@parseRelat:
; Line 226
	mov	DWORD PTR _strength$[ebp], 1
$LN8@parseRelat:
; Line 228
	jmp	SHORT $LN7@parseRelat
$LN12@parseRelat:
; Line 229
	mov	DWORD PTR _strength$[ebp], 0
$LN7@parseRelat:
; Line 231
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN6@parseRelat
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 42					; 0000002aH
	jne	SHORT $LN6@parseRelat
; Line 232
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 233
	mov	eax, DWORD PTR _strength$[ebp]
	or	eax, 16					; 00000010H
	mov	DWORD PTR _strength$[ebp], eax
$LN6@parseRelat:
; Line 235
	jmp	SHORT $LN14@parseRelat
$LN5@parseRelat:
; Line 237
	mov	DWORD PTR _strength$[ebp], 1
; Line 238
	jmp	SHORT $LN14@parseRelat
$LN4@parseRelat:
; Line 240
	mov	DWORD PTR _strength$[ebp], 2
; Line 241
	jmp	SHORT $LN14@parseRelat
$LN3@parseRelat:
; Line 243
	mov	DWORD PTR _strength$[ebp], 15		; 0000000fH
; Line 244
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@parseRelat
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 42					; 0000002aH
	jne	SHORT $LN2@parseRelat
; Line 245
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 246
	mov	eax, DWORD PTR _strength$[ebp]
	or	eax, 16					; 00000010H
	mov	DWORD PTR _strength$[ebp], eax
$LN2@parseRelat:
; Line 248
	jmp	SHORT $LN14@parseRelat
$LN1@parseRelat:
; Line 250
	or	eax, -1
	jmp	SHORT $LN18@parseRelat
$LN14@parseRelat:
; Line 252
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, DWORD PTR [eax+36]
	shl	ecx, 8
	or	ecx, DWORD PTR _strength$[ebp]
	mov	eax, ecx
$LN18@parseRelat:
; Line 253
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@parseRelat:
	DD	$LN4@parseRelat
	DD	$LN5@parseRelat
	DD	$LN13@parseRelat
	DD	$LN3@parseRelat
	DD	$LN1@parseRelat
$LN20@parseRelat:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	2
	DB	3
?parseRelationOperator@CollationRuleParser@icu_56@@AAEHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseRelationOperator
_TEXT	ENDS
PUBLIC	??_C@_0EF@LAJJEBMG@in?5?8prefix?$HMstr?8?0?5prefix?5and?5str?5@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
;	COMDAT ??_C@_0EF@LAJJEBMG@in?5?8prefix?$HMstr?8?0?5prefix?5and?5str?5@
CONST	SEGMENT
??_C@_0EF@LAJJEBMG@in?5?8prefix?$HMstr?8?0?5prefix?5and?5str?5@ DB 'in '''
	DB	'prefix|str'', prefix and str must each start with an NFC boun'
	DB	'dary', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$2
__ehfuncinfo$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv148 = -476						; size = 4
tv91 = -476						; size = 4
_c$73487 = -276						; size = 4
_prefix0$73486 = -264					; size = 4
_next$ = -252						; size = 2
_extension$ = -240					; size = 64
_str$ = -168						; size = 64
_prefix$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_strength$ = 8						; size = 4
_i$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseRelationStrings, COMDAT
; _this$ = ecx
; Line 256
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-476]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 260
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 261
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseTailoringString
	mov	DWORD PTR _i$[ebp], eax
; Line 262
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@parseRelat@2
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@parseRelat@2
$LN8@parseRelat@2:
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN11@parseRelat@2
	mov	esi, esp
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN12@parseRelat@2
$LN11@parseRelat@2:
	mov	DWORD PTR tv91[ebp], 0
$LN12@parseRelat@2:
	mov	cx, WORD PTR tv91[ebp]
	mov	WORD PTR _next$[ebp], cx
; Line 264
	movzx	eax, WORD PTR _next$[ebp]
	cmp	eax, 124				; 0000007cH
	jne	$LN7@parseRelat@2
; Line 265
	mov	esi, esp
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseTailoringString
	mov	DWORD PTR _i$[ebp], eax
; Line 267
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@parseRelat@2
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@parseRelat@2
$LN6@parseRelat@2:
; Line 268
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN13@parseRelat@2
	mov	esi, esp
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN14@parseRelat@2
$LN13@parseRelat@2:
	mov	DWORD PTR tv148[ebp], 0
$LN14@parseRelat@2:
	mov	cx, WORD PTR tv148[ebp]
	mov	WORD PTR _next$[ebp], cx
$LN7@parseRelat@2:
; Line 270
	movzx	eax, WORD PTR _next$[ebp]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@parseRelat@2
; Line 271
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _extension$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseTailoringString
	mov	DWORD PTR _i$[ebp], eax
$LN5@parseRelat@2:
; Line 273
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN4@parseRelat@2
; Line 274
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _prefix0$73486[ebp], eax
; Line 275
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73487[ebp], eax
; Line 276
	mov	esi, esp
	mov	eax, DWORD PTR _prefix0$73486[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@parseRelat@2
	mov	esi, esp
	mov	eax, DWORD PTR _c$73487[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@parseRelat@2
$LN2@parseRelat@2:
; Line 278
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0EF@LAJJEBMG@in?5?8prefix?$HMstr?8?0?5prefix?5and?5str?5@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 279
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@parseRelat@2
$LN4@parseRelat@2:
; Line 282
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _extension$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strength$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 283
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseRelat@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
$LN1@parseRelat@2:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 285
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@parseRelat@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@parseRelat@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN23@parseRelat@2:
	DD	3
	DD	$LN22@parseRelat@2
$LN22@parseRelat@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN18@parseRelat@2
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN19@parseRelat@2
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN20@parseRelat@2
$LN20@parseRelat@2:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN19@parseRelat@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN18@parseRelat@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _prefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _extension$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseRelationStrings@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseRelationStrings
PUBLIC	??_C@_0EA@NDIJBDJI@starred?9relation?5string?5range?5co@ ; `string'
PUBLIC	??_C@_0DD@BJFBJDJF@starred?9relation?5string?5range?5co@ ; `string'
PUBLIC	??_C@_0DD@KGLACHPN@starred?9relation?5string?5range?5is@ ; `string'
PUBLIC	??_C@_0DI@MINBJLJG@range?5start?5greater?5than?5end?5in?5@ ; `string'
PUBLIC	??_C@_0CN@GGLAOGDJ@range?5without?5end?5in?5starred?9rel@ ; `string'
PUBLIC	??_C@_0CP@BENIOOEJ@range?5without?5start?5in?5starred?9r@ ; `string'
PUBLIC	??_C@_0CN@FELJADLI@starred?9relation?5string?5is?5not?5a@ ; `string'
PUBLIC	??_C@_0CA@PMJKDBBB@missing?5starred?9relation?5string?$AA@ ; `string'
PUBLIC	?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseString
PUBLIC	__$ArrayPad$
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
;	COMDAT ??_C@_0EA@NDIJBDJI@starred?9relation?5string?5range?5co@
CONST	SEGMENT
??_C@_0EA@NDIJBDJI@starred?9relation?5string?5range?5co@ DB 'starred-rela'
	DB	'tion string range contains U+FFFD, U+FFFE or U+FFFF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@BJFBJDJF@starred?9relation?5string?5range?5co@
CONST	SEGMENT
??_C@_0DD@BJFBJDJF@starred?9relation?5string?5range?5co@ DB 'starred-rela'
	DB	'tion string range contains a surrogate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KGLACHPN@starred?9relation?5string?5range?5is@
CONST	SEGMENT
??_C@_0DD@KGLACHPN@starred?9relation?5string?5range?5is@ DB 'starred-rela'
	DB	'tion string range is not all NFD-inert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MINBJLJG@range?5start?5greater?5than?5end?5in?5@
CONST	SEGMENT
??_C@_0DI@MINBJLJG@range?5start?5greater?5than?5end?5in?5@ DB 'range star'
	DB	't greater than end in starred-relation string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@GGLAOGDJ@range?5without?5end?5in?5starred?9rel@
CONST	SEGMENT
??_C@_0CN@GGLAOGDJ@range?5without?5end?5in?5starred?9rel@ DB 'range witho'
	DB	'ut end in starred-relation string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BENIOOEJ@range?5without?5start?5in?5starred?9r@
CONST	SEGMENT
??_C@_0CP@BENIOOEJ@range?5without?5start?5in?5starred?9r@ DB 'range witho'
	DB	'ut start in starred-relation string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@FELJADLI@starred?9relation?5string?5is?5not?5a@
CONST	SEGMENT
??_C@_0CN@FELJADLI@starred?9relation?5string?5is?5not?5a@ DB 'starred-rel'
	DB	'ation string is not all NFD-inert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PMJKDBBB@missing?5starred?9relation?5string?$AA@
CONST	SEGMENT
??_C@_0CA@PMJKDBBB@missing?5starred?9relation?5string?$AA@ DB 'missing st'
	DB	'arred-relation string', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$3
__ehfuncinfo$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv267 = -564						; size = 4
tv293 = -560						; size = 4
$T73514 = -552						; size = 64
_s$73527 = -288						; size = 64
_c$73524 = -216						; size = 4
_c$73511 = -204						; size = 4
_j$ = -192						; size = 4
_prev$ = -180						; size = 4
_raw$ = -168						; size = 64
_empty$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_strength$ = 8						; size = 4
_i$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseStarredCharacters, COMDAT
; _this$ = ecx
; Line 288
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 289
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 290
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseString
	mov	DWORD PTR _i$[ebp], eax
; Line 291
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@parseStarr
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN20@parseStarr:
; Line 292
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN19@parseStarr
; Line 293
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@PMJKDBBB@missing?5starred?9relation?5string?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 294
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN19@parseStarr:
; Line 296
	mov	DWORD PTR _prev$[ebp], -1
; Line 297
	mov	DWORD PTR _j$[ebp], 0
$LN16@parseStarr:
; Line 299
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$[ebp], eax
	jge	$LN15@parseStarr
; Line 300
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73511[ebp], eax
; Line 301
	mov	esi, esp
	mov	eax, DWORD PTR _c$73511[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@parseStarr
; Line 302
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CN@FELJADLI@starred?9relation?5string?5is?5not?5a@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 303
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN14@parseStarr:
; Line 305
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _empty$[ebp]
	push	edx
	mov	edi, esp
	mov	eax, DWORD PTR _c$73511[ebp]
	push	eax
	lea	ecx, DWORD PTR $T73514[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv293[ebp], eax
	mov	ecx, DWORD PTR tv293[ebp]
	mov	DWORD PTR tv267[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv267[ebp]
	push	edx
	lea	eax, DWORD PTR _empty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73514[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 306
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseStarr
; Line 307
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
; Line 308
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN13@parseStarr:
; Line 310
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$73511[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _j$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _c$73511[ebp]
	mov	DWORD PTR _prev$[ebp], eax
; Line 312
	jmp	$LN16@parseStarr
$LN15@parseStarr:
; Line 313
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN11@parseStarr
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 45					; 0000002dH
	je	SHORT $LN12@parseStarr
$LN11@parseStarr:
; Line 314
	jmp	$LN17@parseStarr
$LN12@parseStarr:
; Line 316
	cmp	DWORD PTR _prev$[ebp], 0
	jge	SHORT $LN10@parseStarr
; Line 317
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CP@BENIOOEJ@range?5without?5start?5in?5starred?9r@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 318
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN10@parseStarr:
; Line 320
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseString
	mov	DWORD PTR _i$[ebp], eax
; Line 321
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseStarr
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN9@parseStarr:
; Line 322
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@parseStarr
; Line 323
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CN@GGLAOGDJ@range?5without?5end?5in?5starred?9rel@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 324
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN8@parseStarr:
; Line 326
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73524[ebp], eax
; Line 327
	mov	eax, DWORD PTR _c$73524[ebp]
	cmp	eax, DWORD PTR _prev$[ebp]
	jge	SHORT $LN7@parseStarr
; Line 328
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@MINBJLJG@range?5start?5greater?5than?5end?5in?5@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 329
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN7@parseStarr:
; Line 332
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN6@parseStarr:
; Line 333
	mov	eax, DWORD PTR _prev$[ebp]
	add	eax, 1
	mov	DWORD PTR _prev$[ebp], eax
	mov	ecx, DWORD PTR _prev$[ebp]
	cmp	ecx, DWORD PTR _c$73524[ebp]
	jg	$LN5@parseStarr
; Line 334
	mov	esi, esp
	mov	eax, DWORD PTR _prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@parseStarr
; Line 335
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@KGLACHPN@starred?9relation?5string?5range?5is@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 336
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN4@parseStarr:
; Line 338
	mov	eax, DWORD PTR _prev$[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN3@parseStarr
; Line 339
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@BJFBJDJF@starred?9relation?5string?5range?5co@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 340
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN3@parseStarr:
; Line 342
	cmp	DWORD PTR _prev$[ebp], 65533		; 0000fffdH
	jl	SHORT $LN2@parseStarr
	cmp	DWORD PTR _prev$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN2@parseStarr
; Line 343
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0EA@NDIJBDJI@starred?9relation?5string?5range?5co@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 344
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN2@parseStarr:
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _prev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _empty$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$73527[ebp]
	push	eax
	lea	ecx, DWORD PTR _empty$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strength$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 348
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseStarr
; Line 349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
; Line 350
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@parseStarr
$LN1@parseStarr:
; Line 352
	jmp	$LN6@parseStarr
$LN5@parseStarr:
; Line 353
	mov	DWORD PTR _prev$[ebp], -1
; Line 354
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$73524[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
; Line 355
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@parseStarr
$LN17@parseStarr:
; Line 356
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 357
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@parseStarr:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@parseStarr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN32@parseStarr:
	DD	3
	DD	$LN31@parseStarr
$LN31@parseStarr:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN27@parseStarr
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN28@parseStarr
	DD	-288					; fffffee0H
	DD	64					; 00000040H
	DD	$LN29@parseStarr
$LN29@parseStarr:
	DB	115					; 00000073H
	DB	0
$LN28@parseStarr:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
$LN27@parseStarr:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _empty$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73514[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$73527[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseStarredCharacters@CollationRuleParser@icu_56@@AAEXHHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseStarredCharacters
PUBLIC	??_C@_0BI@FOFLBFEJ@missing?5relation?5string?$AA@ ; `string'
;	COMDAT ??_C@_0BI@FOFLBFEJ@missing?5relation?5string?$AA@
CONST	SEGMENT
??_C@_0BI@FOFLBFEJ@missing?5relation?5string?$AA@ DB 'missing relation st'
	DB	'ring', 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_raw$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseTailoringString, COMDAT
; _this$ = ecx
; Line 360
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 361
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseString
	mov	DWORD PTR _i$[ebp], eax
; Line 362
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseTailo
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@parseTailo
; Line 363
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0BI@FOFLBFEJ@missing?5relation?5string?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
$LN1@parseTailo:
; Line 365
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
; Line 366
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseTailoringString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseTailoringString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??_C@_0CJ@GONDGJLB@string?5contains?5U?$CLFFFD?0?5U?$CLFFFE?5o@ ; `string'
PUBLIC	??_C@_0CG@CCJNDPCL@string?5contains?5an?5unpaired?5surr@ ; `string'
PUBLIC	??_C@_0CP@LJFMBKPM@backslash?5escape?5at?5the?5end?5of?5t@ ; `string'
PUBLIC	??_C@_0DD@IJOMIMMD@quoted?5literal?5text?5missing?5term@ ; `string'
PUBLIC	?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z ; icu_56::CollationRuleParser::isSyntaxChar
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT ??_C@_0CJ@GONDGJLB@string?5contains?5U?$CLFFFD?0?5U?$CLFFFE?5o@
; File d:\mozilla\intl\icu\source\i18n\collationruleparser.cpp
CONST	SEGMENT
??_C@_0CJ@GONDGJLB@string?5contains?5U?$CLFFFD?0?5U?$CLFFFE?5o@ DB 'strin'
	DB	'g contains U+FFFD, U+FFFE or U+FFFF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CCJNDPCL@string?5contains?5an?5unpaired?5surr@
CONST	SEGMENT
??_C@_0CG@CCJNDPCL@string?5contains?5an?5unpaired?5surr@ DB 'string conta'
	DB	'ins an unpaired surrogate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LJFMBKPM@backslash?5escape?5at?5the?5end?5of?5t@
CONST	SEGMENT
??_C@_0CP@LJFMBKPM@backslash?5escape?5at?5the?5end?5of?5t@ DB 'backslash '
	DB	'escape at the end of the rule string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@IJOMIMMD@quoted?5literal?5text?5missing?5term@
CONST	SEGMENT
??_C@_0DD@IJOMIMMD@quoted?5literal?5text?5missing?5term@ DB 'quoted liter'
	DB	'al text missing terminating apostrophe', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv141 = -244						; size = 4
tv77 = -244						; size = 4
_c$73585 = -44						; size = 4
_j$73581 = -32						; size = 4
_c$73557 = -20						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_raw$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseString, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN23@parseStrin
	mov	eax, DWORD PTR _i$[ebp]
	jmp	$LN24@parseStrin
$LN23@parseStrin:
; Line 371
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@parseStrin:
; Line 372
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN21@parseStrin
; Line 373
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	DWORD PTR _c$73557[ebp], ecx
; Line 374
	mov	eax, DWORD PTR _c$73557[ebp]
	push	eax
	call	?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z ; icu_56::CollationRuleParser::isSyntaxChar
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN20@parseStrin
; Line 375
	cmp	DWORD PTR _c$73557[ebp], 39		; 00000027H
	jne	$LN19@parseStrin
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN17@parseStrin
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 39					; 00000027H
	jne	SHORT $LN17@parseStrin
; Line 378
	mov	esi, esp
	push	39					; 00000027H
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 379
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 380
	jmp	$LN22@parseStrin
$LN17@parseStrin:
; Line 384
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jne	SHORT $LN15@parseStrin
; Line 385
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@IJOMIMMD@quoted?5literal?5text?5missing?5term@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 386
	mov	eax, DWORD PTR _i$[ebp]
	jmp	$LN24@parseStrin
$LN15@parseStrin:
; Line 388
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	DWORD PTR _c$73557[ebp], ecx
; Line 389
	cmp	DWORD PTR _c$73557[ebp], 39		; 00000027H
	jne	SHORT $LN14@parseStrin
; Line 390
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN13@parseStrin
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 39					; 00000027H
	jne	SHORT $LN13@parseStrin
; Line 393
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 394
	jmp	SHORT $LN14@parseStrin
$LN13@parseStrin:
; Line 395
	jmp	SHORT $LN16@parseStrin
$LN14@parseStrin:
; Line 398
	mov	esi, esp
	movzx	eax, WORD PTR _c$73557[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 399
	jmp	$LN17@parseStrin
$LN16@parseStrin:
	jmp	$LN11@parseStrin
$LN19@parseStrin:
; Line 400
	cmp	DWORD PTR _c$73557[ebp], 92		; 0000005cH
	jne	SHORT $LN10@parseStrin
; Line 401
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jne	SHORT $LN9@parseStrin
; Line 402
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CP@LJFMBKPM@backslash?5escape?5at?5the?5end?5of?5t@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 403
	mov	eax, DWORD PTR _i$[ebp]
	jmp	$LN24@parseStrin
$LN9@parseStrin:
; Line 405
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73557[ebp], eax
; Line 406
	mov	esi, esp
	mov	eax, DWORD PTR _c$73557[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 407
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$73557[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
; Line 408
	jmp	SHORT $LN11@parseStrin
$LN10@parseStrin:
; Line 410
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 411
	jmp	SHORT $LN21@parseStrin
$LN11@parseStrin:
; Line 412
	jmp	SHORT $LN7@parseStrin
$LN20@parseStrin:
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _c$73557[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@parseStrin
; Line 415
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 416
	jmp	SHORT $LN21@parseStrin
; Line 417
	jmp	SHORT $LN7@parseStrin
$LN6@parseStrin:
; Line 418
	mov	esi, esp
	movzx	eax, WORD PTR _c$73557[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@parseStrin:
; Line 420
	jmp	$LN22@parseStrin
$LN21@parseStrin:
; Line 421
	mov	DWORD PTR _j$73581[ebp], 0
$LN4@parseStrin:
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$73581[ebp], eax
	jge	$LN3@parseStrin
; Line 422
	mov	esi, esp
	mov	eax, DWORD PTR _j$73581[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$73585[ebp], eax
; Line 423
	mov	eax, DWORD PTR _c$73585[ebp]
	and	eax, -2048				; fffff800H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN2@parseStrin
; Line 424
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@CCJNDPCL@string?5contains?5an?5unpaired?5surr@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 425
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN24@parseStrin
$LN2@parseStrin:
; Line 427
	cmp	DWORD PTR _c$73585[ebp], 65533		; 0000fffdH
	jl	SHORT $LN1@parseStrin
	cmp	DWORD PTR _c$73585[ebp], 65535		; 0000ffffH
	jg	SHORT $LN1@parseStrin
; Line 428
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@GONDGJLB@string?5contains?5U?$CLFFFD?0?5U?$CLFFFE?5o@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 429
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN24@parseStrin
$LN1@parseStrin:
; Line 431
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$73585[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _j$73581[ebp]
	mov	DWORD PTR _j$73581[ebp], ecx
; Line 432
	jmp	$LN4@parseStrin
$LN3@parseStrin:
; Line 433
	mov	eax, DWORD PTR _i$[ebp]
$LN24@parseStrin:
; Line 434
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseString@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseString
_TEXT	ENDS
PUBLIC	??_C@_0CD@MHDNPMDC@not?5a?5valid?5special?5reset?5positi@ ; `string'
PUBLIC	??_C@_1BK@JAAKAMLC@?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CAFKKCOP@?$AAt?$AAo?$AAp?$AA?$AA@	; `string'
PUBLIC	?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z ; icu_56::CollationRuleParser::readWords
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
;	COMDAT ??_C@_0CD@MHDNPMDC@not?5a?5valid?5special?5reset?5positi@
CONST	SEGMENT
??_C@_0CD@MHDNPMDC@not?5a?5valid?5special?5reset?5positi@ DB 'not a valid'
	DB	' special reset position', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@JAAKAMLC@?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@JAAKAMLC@?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@ DB 'v'
	DB	00H, 'a', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CAFKKCOP@?$AAt?$AAo?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_17CAFKKCOP@?$AAt?$AAo?$AAp?$AA?$AA@ DB 't', 00H, 'o', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv188 = -624						; size = 4
tv185 = -624						; size = 4
tv182 = -624						; size = 4
tv198 = -620						; size = 4
tv195 = -620						; size = 4
tv192 = -620						; size = 4
$T81380 = -609						; size = 1
$T81381 = -600						; size = 4
$T81382 = -585						; size = 1
$T81383 = -576						; size = 4
$T81384 = -561						; size = 1
$T81385 = -552						; size = 4
$T81386 = -540						; size = 4
$T73621 = -528						; size = 64
$T73628 = -456						; size = 64
$T73636 = -384						; size = 64
_pos$73616 = -120					; size = 4
_j$ = -108						; size = 4
_raw$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_i$ = 8							; size = 4
_str$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseSpecialPosition, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 612				; 00000264H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 153				; 00000099H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@parseSpeci
	xor	eax, eax
	jmp	$LN9@parseSpeci
$LN8@parseSpeci:
; Line 460
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 461
	lea	eax, DWORD PTR _raw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z ; icu_56::CollationRuleParser::readWords
	mov	DWORD PTR _j$[ebp], eax
; Line 462
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jle	$LN7@parseSpeci
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 93					; 0000005dH
	jne	$LN7@parseSpeci
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN7@parseSpeci
; Line 463
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 464
	mov	DWORD PTR _pos$73616[ebp], 0
	jmp	SHORT $LN6@parseSpeci
$LN5@parseSpeci:
	mov	eax, DWORD PTR _pos$73616[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$73616[ebp], eax
$LN6@parseSpeci:
	cmp	DWORD PTR _pos$73616[ebp], 14		; 0000000eH
	jge	$LN4@parseSpeci
; Line 465
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _pos$73616[ebp]
	mov	ecx, DWORD PTR _positions[eax*4]
	push	ecx
	lea	ecx, DWORD PTR $T73621[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv192[ebp], eax
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv182[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR tv182[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81380[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T73621[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, BYTE PTR $T81380[ebp]
	test	ecx, ecx
	je	SHORT $LN3@parseSpeci
; Line 466
	mov	eax, DWORD PTR _pos$73616[ebp]
	add	eax, 10240				; 00002800H
	mov	esi, esp
	push	eax
	mov	edi, esp
	push	65534					; 0000fffeH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 467
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR $T81381[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T81381[ebp]
	jmp	$LN9@parseSpeci
$LN3@parseSpeci:
; Line 469
	jmp	$LN5@parseSpeci
$LN4@parseSpeci:
; Line 470
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17CAFKKCOP@?$AAt?$AAo?$AAp?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73628[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv185[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv185[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81382[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T73628[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81382[ebp]
	test	edx, edx
	je	SHORT $LN2@parseSpeci
; Line 471
	mov	esi, esp
	push	10249					; 00002809H
	mov	edi, esp
	push	65534					; 0000fffeH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 472
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR $T81383[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T81383[ebp]
	jmp	$LN9@parseSpeci
$LN2@parseSpeci:
; Line 474
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BK@JAAKAMLC@?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73636[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv198[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	ecx, DWORD PTR tv188[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81384[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T73636[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81384[ebp]
	test	edx, edx
	je	SHORT $LN7@parseSpeci
; Line 475
	mov	esi, esp
	push	10247					; 00002807H
	mov	edi, esp
	push	65534					; 0000fffeH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 476
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR $T81385[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T81385[ebp]
	jmp	SHORT $LN9@parseSpeci
$LN7@parseSpeci:
; Line 479
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CD@MHDNPMDC@not?5a?5valid?5special?5reset?5positi@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 480
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR $T81386[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T81386[ebp]
$LN9@parseSpeci:
; Line 481
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@parseSpeci
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN18@parseSpeci:
	DD	1
	DD	$LN17@parseSpeci
$LN17@parseSpeci:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN15@parseSpeci
$LN15@parseSpeci:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73621[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73628[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73636[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-628]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseSpecialPosition@CollationRuleParser@icu_56@@AAEHHAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseSpecialPosition
PUBLIC	??_C@_0BL@CMGJGMFP@not?5a?5valid?5setting?1option?$AA@ ; `string'
PUBLIC	??_C@_1CK@OEACKGNA@?$AAs?$AAu?$AAp?$AAp?$AAr?$AAe?$AAs?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAa?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@FNPCJIJC@?$AAo?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseUnicodeSet
PUBLIC	??_C@_0BI@PKNLPAE@?$FLimport?5langTag?$FN?5failed?$AA@ ; `string'
PUBLIC	??_C@_08FODBPBCG@standard?$AA@			; `string'
PUBLIC	??_C@_0CC@CFBNMOCB@?$FLimport?5langTag?$FN?5is?5not?5supporte@ ; `string'
PUBLIC	??_C@_09FPAMBNKH@collation?$AA@			; `string'
PUBLIC	??_C@_04NBFCGMPH@root?$AA@			; `string'
PUBLIC	??_C@_03MBICDIME@und?$AA@			; `string'
PUBLIC	??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@ ; `string'
PUBLIC	??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CA@EGHIPOGN@?$FLhiraganaQ?5on?$FN?5is?5not?5supported?$AA@ ; `string'
PUBLIC	??_C@_1BE@DLOIGDN@?$AAh?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AAQ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@BKAKDPIB@?$AAn?$AAu?$AAm?$AAe?$AAr?$AAi?$AAc?$AAO?$AAr?$AAd?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@OIGBMPEN@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ; icu_56::CollationRuleParser::getOnOffValue
PUBLIC	??_C@_1BE@MHJPDKLL@?$AAc?$AAa?$AAs?$AAe?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@PLNFCNIC@?$AAu?$AAp?$AAp?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@LGAECJJD@?$AAl?$AAo?$AAw?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@	; `string'
PUBLIC	??_C@_1BE@PDPMKCFI@?$AAc?$AAa?$AAs?$AAe?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@KHCAMCJP@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HA@IPCPGAHJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z@4JA ; `icu_56::CollationRuleParser::parseSetting'::`2'::__LINE__Var
PUBLIC	??_C@_1BC@JJBOMMFD@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@DPCMHGPB@?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@BPFMAOAO@?$AAp?$AAu?$AAn?$AAc?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@LPGODFOM@?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@NFFOADJK@?$AAm?$AAa?$AAx?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@PHALGBCH@?$AAs?$AAh?$AAi?$AAf?$AAt?$AAe?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@CPFFKCKH@?$AAn?$AAo?$AAn?$AA?9?$AAi?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@MFAHMDMC@?$AAa?$AAl?$AAt?$AAe?$AAr?$AAn?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@HAIMOHKM@?$AAs?$AAt?$AAr?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@MOCGBDAP@?$AAb?$AAa?$AAc?$AAk?$AAw?$AAa?$AAr?$AAd?$AAs?$AA?5?$AA2?$AA?$AA@ ; `string'
PUBLIC	?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseReordering
PUBLIC	??_C@_1BA@CGCIDNPH@?$AAr?$AAe?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CB@KJPJKFHJ@expected?5a?5setting?1option?5at?5?8?$FL?8@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	_uloc_getKeywordValue_56:PROC
EXTRN	_strcpy:PROC
EXTRN	_memcmp:PROC
EXTRN	_uloc_getBaseName_56:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
EXTRN	_uloc_forLanguageTag_56:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	?setCaseFirst@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setCaseFirst
EXTRN	__imp___wassert:PROC
EXTRN	?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z:PROC ; icu_56::CollationData::getLastPrimaryForGroup
EXTRN	?setMaxVariable@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setMaxVariable
EXTRN	?setAlternateHandling@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setAlternateHandling
EXTRN	?setStrength@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setStrength
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z:PROC
EXTRN	__imp_?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z:PROC
;	COMDAT ??_C@_0BL@CMGJGMFP@not?5a?5valid?5setting?1option?$AA@
CONST	SEGMENT
??_C@_0BL@CMGJGMFP@not?5a?5valid?5setting?1option?$AA@ DB 'not a valid se'
	DB	'tting/option', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OEACKGNA@?$AAs?$AAu?$AAp?$AAp?$AAr?$AAe?$AAs?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAa?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@OEACKGNA@?$AAs?$AAu?$AAp?$AAp?$AAr?$AAe?$AAs?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAa?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@ DB 's'
	DB	00H, 'u', 00H, 'p', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@FNPCJIJC@?$AAo?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@FNPCJIJC@?$AAo?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAe?$AA?$AA@ DB 'o'
	DB	00H, 'p', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PKNLPAE@?$FLimport?5langTag?$FN?5failed?$AA@
CONST	SEGMENT
??_C@_0BI@PKNLPAE@?$FLimport?5langTag?$FN?5failed?$AA@ DB '[import langTa'
	DB	'g] failed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FODBPBCG@standard?$AA@
CONST	SEGMENT
??_C@_08FODBPBCG@standard?$AA@ DB 'standard', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CFBNMOCB@?$FLimport?5langTag?$FN?5is?5not?5supporte@
CONST	SEGMENT
??_C@_0CC@CFBNMOCB@?$FLimport?5langTag?$FN?5is?5not?5supporte@ DB '[impor'
	DB	't langTag] is not supported', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FPAMBNKH@collation?$AA@
CONST	SEGMENT
??_C@_09FPAMBNKH@collation?$AA@ DB 'collation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBFCGMPH@root?$AA@
CONST	SEGMENT
??_C@_04NBFCGMPH@root?$AA@ DB 'root', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MBICDIME@und?$AA@
CONST	SEGMENT
??_C@_03MBICDIME@und?$AA@ DB 'und', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@
CONST	SEGMENT
??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@ DB 'expected '
	DB	'language tag in [import langTag]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@ DB 'i', 00H, 'm'
	DB	00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EGHIPOGN@?$FLhiraganaQ?5on?$FN?5is?5not?5supported?$AA@
CONST	SEGMENT
??_C@_0CA@EGHIPOGN@?$FLhiraganaQ?5on?$FN?5is?5not?5supported?$AA@ DB '[hi'
	DB	'raganaQ on] is not supported', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DLOIGDN@?$AAh?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AAQ?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@DLOIGDN@?$AAh?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AAQ?$AA?$AA@ DB 'h'
	DB	00H, 'i', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'a', 00H, 'n', 00H
	DB	'a', 00H, 'Q', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@BKAKDPIB@?$AAn?$AAu?$AAm?$AAe?$AAr?$AAi?$AAc?$AAO?$AAr?$AAd?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@BKAKDPIB@?$AAn?$AAu?$AAm?$AAe?$AAr?$AAi?$AAc?$AAO?$AAr?$AAd?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'n'
	DB	00H, 'u', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'c', 00H
	DB	'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@OIGBMPEN@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@OIGBMPEN@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'n'
	DB	00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MHJPDKLL@?$AAc?$AAa?$AAs?$AAe?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@MHJPDKLL@?$AAc?$AAa?$AAs?$AAe?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@ DB 'c'
	DB	00H, 'a', 00H, 's', 00H, 'e', 00H, 'L', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PLNFCNIC@?$AAu?$AAp?$AAp?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@PLNFCNIC@?$AAu?$AAp?$AAp?$AAe?$AAr?$AA?$AA@ DB 'u', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LGAECJJD@?$AAl?$AAo?$AAw?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@LGAECJJD@?$AAl?$AAo?$AAw?$AAe?$AAr?$AA?$AA@ DB 'l', 00H, 'o', 00H
	DB	'w', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@ DB 'o', 00H, 'f', 00H, 'f', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PDPMKCFI@?$AAc?$AAa?$AAs?$AAe?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@PDPMKCFI@?$AAc?$AAa?$AAs?$AAe?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?$AA@ DB 'c'
	DB	00H, 'a', 00H, 's', 00H, 'e', 00H, 'F', 00H, 'i', 00H, 'r', 00H
	DB	's', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@KHCAMCJP@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@KHCAMCJP@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 's'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'v', 00H, 'a', 00H, 'r', 00H, 'i'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'o', 00H
	DB	'p', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@IPCPGAHJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1HA@IPCPGAHJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'r', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 'p', 00H
	DB	'a', 00H, 'r', 00H, 's', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z@4JA DD 01e4H ; `icu_56::CollationRuleParser::parseSetting'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BC@JJBOMMFD@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@JJBOMMFD@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'y', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@DPCMHGPB@?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1O@DPCMHGPB@?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?$AA@ DB 's', 00H, 'y'
	DB	00H, 'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BPFMAOAO@?$AAp?$AAu?$AAn?$AAc?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1M@BPFMAOAO@?$AAp?$AAu?$AAn?$AAc?$AAt?$AA?$AA@ DB 'p', 00H, 'u', 00H
	DB	'n', 00H, 'c', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LPGODFOM@?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@LPGODFOM@?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@ DB 's', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@NFFOADJK@?$AAm?$AAa?$AAx?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@NFFOADJK@?$AAm?$AAa?$AAx?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'x', 00H, 'V', 00H, 'a', 00H, 'r', 00H, 'i', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@PHALGBCH@?$AAs?$AAh?$AAi?$AAf?$AAt?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@PHALGBCH@?$AAs?$AAh?$AAi?$AAf?$AAt?$AAe?$AAd?$AA?$AA@ DB 's', 00H
	DB	'h', 00H, 'i', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@CPFFKCKH@?$AAn?$AAo?$AAn?$AA?9?$AAi?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@CPFFKCKH@?$AAn?$AAo?$AAn?$AA?9?$AAi?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'n'
	DB	00H, 'o', 00H, 'n', 00H, '-', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'o', 00H, 'r', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MFAHMDMC@?$AAa?$AAl?$AAt?$AAe?$AAr?$AAn?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@MFAHMDMC@?$AAa?$AAl?$AAt?$AAe?$AAr?$AAn?$AAa?$AAt?$AAe?$AA?$AA@ DB 'a'
	DB	00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@HAIMOHKM@?$AAs?$AAt?$AAr?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@HAIMOHKM@?$AAs?$AAt?$AAr?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MOCGBDAP@?$AAb?$AAa?$AAc?$AAk?$AAw?$AAa?$AAr?$AAd?$AAs?$AA?5?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MOCGBDAP@?$AAb?$AAa?$AAc?$AAk?$AAw?$AAa?$AAr?$AAd?$AAs?$AA?5?$AA2?$AA?$AA@ DB 'b'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, 'w', 00H, 'a', 00H, 'r', 00H
	DB	'd', 00H, 's', 00H, ' ', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@CGCIDNPH@?$AAr?$AAe?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@CGCIDNPH@?$AAr?$AAe?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@ DB 'r', 00H
	DB	'e', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KJPJKFHJ@expected?5a?5setting?1option?5at?5?8?$FL?8@
CONST	SEGMENT
??_C@_0CB@KJPJKFHJ@expected?5a?5setting?1option?5at?5?8?$FL?8@ DB 'expect'
	DB	'ed a setting/option at ''[''', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	01bH
	DD	FLAT:__unwindtable$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$8
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$9
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$10
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$11
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$12
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$13
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$14
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$15
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$16
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$17
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$18
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$19
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$20
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$21
	DD	03H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$25
	DD	018H
	DD	FLAT:__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$26
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv199 = -3064						; size = 4
tv144 = -3064						; size = 4
tv880 = -3060						; size = 4
tv876 = -3060						; size = 4
tv850 = -3060						; size = 4
tv846 = -3060						; size = 4
tv842 = -3060						; size = 4
tv838 = -3060						; size = 4
tv834 = -3060						; size = 4
tv830 = -3060						; size = 4
tv828 = -3060						; size = 4
tv826 = -3060						; size = 4
tv824 = -3060						; size = 4
tv820 = -3060						; size = 4
tv818 = -3060						; size = 4
tv816 = -3060						; size = 4
tv814 = -3060						; size = 4
tv812 = -3060						; size = 4
tv808 = -3060						; size = 4
tv806 = -3060						; size = 4
tv804 = -3060						; size = 4
tv798 = -3060						; size = 4
tv791 = -3060						; size = 4
tv786 = -3060						; size = 4
tv953 = -3056						; size = 4
tv950 = -3056						; size = 4
tv944 = -3056						; size = 4
tv941 = -3056						; size = 4
tv938 = -3056						; size = 4
tv935 = -3056						; size = 4
tv932 = -3056						; size = 4
tv929 = -3056						; size = 4
tv926 = -3056						; size = 4
tv923 = -3056						; size = 4
tv920 = -3056						; size = 4
tv917 = -3056						; size = 4
tv914 = -3056						; size = 4
tv911 = -3056						; size = 4
tv908 = -3056						; size = 4
tv905 = -3056						; size = 4
tv902 = -3056						; size = 4
tv899 = -3056						; size = 4
tv896 = -3056						; size = 4
tv892 = -3056						; size = 4
tv888 = -3056						; size = 4
tv884 = -3056						; size = 4
tv644 = -3056						; size = 4
$T73738 = -3048						; size = 64
$T73744 = -2976						; size = 64
$T73750 = -2904						; size = 64
$T73756 = -2832						; size = 64
$T73763 = -2760						; size = 64
$T73771 = -2688						; size = 64
$T73779 = -2616						; size = 64
$T73787 = -2544						; size = 64
$T73797 = -2472						; size = 64
$T73836 = -2400						; size = 64
$T73843 = -2328						; size = 64
$T81403 = -2253						; size = 1
$T81407 = -2241						; size = 1
$T81408 = -2229						; size = 1
$T81411 = -2217						; size = 1
$T81412 = -2205						; size = 1
$T81413 = -2193						; size = 1
$T81414 = -2181						; size = 1
$T81415 = -2169						; size = 1
$T81416 = -2157						; size = 1
$T81417 = -2145						; size = 1
$T81418 = -2133						; size = 1
$T81420 = -2121						; size = 1
$T81421 = -2109						; size = 1
$T81422 = -2097						; size = 1
$T81423 = -2085						; size = 1
$T81424 = -2073						; size = 1
$T81425 = -2061						; size = 1
$T81426 = -2049						; size = 1
$T81427 = -2037						; size = 1
$T81428 = -2025						; size = 1
$T81431 = -2013						; size = 1
$T81432 = -2001						; size = 1
$T81434 = -1992						; size = 4
$T73658 = -1980						; size = 64
$T73663 = -1908						; size = 64
$T73672 = -1836						; size = 64
$T73684 = -1764						; size = 64
$T73690 = -1692						; size = 64
$T73696 = -1620						; size = 64
$T73703 = -1548						; size = 64
$T73709 = -1476						; size = 64
$T73715 = -1404						; size = 64
$T73721 = -1332						; size = 64
$T73727 = -1260						; size = 64
_set$73833 = -996					; size = 52
_outerRuleIndex$73828 = -936				; size = 4
_outerRules$73827 = -924				; size = 4
_importedRules$73822 = -912				; size = 64
_collationType$73815 = -840				; size = 96
_baseID$73809 = -736					; size = 157
_length$73805 = -568					; size = 4
_parsedLength$73804 = -556				; size = 4
_localeID$73803 = -544					; size = 157
_lang$73801 = -376					; size = 56
_value$73791 = -312					; size = 4
_value$73783 = -300					; size = 4
_value$73775 = -288					; size = 4
_value$73767 = -276					; size = 4
_value$73742 = -264					; size = 4
_value$73707 = -252					; size = 4
_value$73688 = -240					; size = 4
_c$73677 = -228						; size = 2
_value$73676 = -216					; size = 4
_valueIndex$73668 = -204				; size = 4
_v$73667 = -192						; size = 64
_j$ = -120						; size = 4
_i$ = -108						; size = 4
_raw$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseSetting, COMDAT
; _this$ = ecx
; Line 484
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3052				; 00000becH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-3064]
	mov	ecx, 763				; 000002fbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T81434[ebp], 0
; Line 485
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN73@parseSetti
	jmp	$LN74@parseSetti
$LN73@parseSetti:
; Line 486
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 487
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 488
	lea	eax, DWORD PTR _raw$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z ; icu_56::CollationRuleParser::readWords
	mov	DWORD PTR _j$[ebp], eax
; Line 489
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jle	SHORT $LN71@parseSetti
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN72@parseSetti
$LN71@parseSetti:
; Line 490
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CB@KJPJKFHJ@expected?5a?5setting?1option?5at?5?8?$FL?8@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
$LN72@parseSetti:
; Line 492
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 93					; 0000005dH
	jne	$LN70@parseSetti
; Line 493
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 495
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BA@CGCIDNPH@?$AAr?$AAe?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73658[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv884[ebp], eax
	mov	eax, DWORD PTR tv884[ebp]
	mov	DWORD PTR tv786[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T81434[ebp]
	or	ecx, 1
	mov	DWORD PTR $T81434[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv786[ebp]
	push	edx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN77@parseSetti
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 7
	je	SHORT $LN76@parseSetti
	mov	esi, esp
	push	7
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN77@parseSetti
$LN76@parseSetti:
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN78@parseSetti
$LN77@parseSetti:
	mov	DWORD PTR tv144[ebp], 0
$LN78@parseSetti:
	mov	dl, BYTE PTR tv144[ebp]
	mov	BYTE PTR $T81403[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T81434[ebp]
	and	eax, 1
	je	SHORT $LN87@parseSetti
	and	DWORD PTR $T81434[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T73658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN87@parseSetti:
	movzx	ecx, BYTE PTR $T81403[ebp]
	test	ecx, ecx
	je	SHORT $LN69@parseSetti
; Line 496
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseReordering
; Line 497
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 498
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN69@parseSetti:
; Line 500
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BI@MOCGBDAP@?$AAb?$AAa?$AAc?$AAk?$AAw?$AAa?$AAr?$AAd?$AAs?$AA?5?$AA2?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73663[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv888[ebp], eax
	mov	eax, DWORD PTR tv888[ebp]
	mov	DWORD PTR tv791[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv791[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81407[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T73663[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81407[ebp]
	test	edx, edx
	je	SHORT $LN68@parseSetti
; Line 502
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	17					; 00000011H
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setFlag
; Line 503
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 504
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN68@parseSetti:
; Line 506
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 507
	mov	esi, esp
	push	32					; 00000020H
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _valueIndex$73668[ebp], eax
; Line 508
	cmp	DWORD PTR _valueIndex$73668[ebp], 0
	jl	SHORT $LN67@parseSetti
; Line 509
	mov	eax, DWORD PTR _valueIndex$73668[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 510
	mov	esi, esp
	mov	eax, DWORD PTR _valueIndex$73668[ebp]
	push	eax
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN67@parseSetti:
; Line 512
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@HAIMOHKM@?$AAs?$AAt?$AAr?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73672[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv892[ebp], eax
	mov	eax, DWORD PTR tv892[ebp]
	mov	DWORD PTR tv798[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T81434[ebp]
	or	ecx, 2
	mov	DWORD PTR $T81434[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv798[ebp]
	push	edx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN79@parseSetti
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN79@parseSetti
	mov	DWORD PTR tv199[ebp], 1
	jmp	SHORT $LN80@parseSetti
$LN79@parseSetti:
	mov	DWORD PTR tv199[ebp], 0
$LN80@parseSetti:
	mov	cl, BYTE PTR tv199[ebp]
	mov	BYTE PTR $T81408[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T81434[ebp]
	and	edx, 2
	je	SHORT $LN92@parseSetti
	and	DWORD PTR $T81434[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T73672[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN92@parseSetti:
	movzx	eax, BYTE PTR $T81408[ebp]
	test	eax, eax
	je	$LN66@parseSetti
; Line 513
	mov	DWORD PTR _value$73676[ebp], -1
; Line 514
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$73677[ebp], ax
; Line 515
	movzx	eax, WORD PTR _c$73677[ebp]
	cmp	eax, 49					; 00000031H
	jl	SHORT $LN65@parseSetti
	movzx	eax, WORD PTR _c$73677[ebp]
	cmp	eax, 52					; 00000034H
	jg	SHORT $LN65@parseSetti
; Line 516
	movzx	eax, WORD PTR _c$73677[ebp]
	sub	eax, 49					; 00000031H
	mov	DWORD PTR _value$73676[ebp], eax
	jmp	SHORT $LN64@parseSetti
$LN65@parseSetti:
; Line 517
	movzx	eax, WORD PTR _c$73677[ebp]
	cmp	eax, 73					; 00000049H
	jne	SHORT $LN64@parseSetti
; Line 518
	mov	DWORD PTR _value$73676[ebp], 15		; 0000000fH
$LN64@parseSetti:
; Line 520
	cmp	DWORD PTR _value$73676[ebp], -1
	je	SHORT $LN62@parseSetti
; Line 521
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73676[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setStrength@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setStrength
; Line 522
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 523
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN62@parseSetti:
; Line 524
	jmp	$LN61@parseSetti
$LN66@parseSetti:
; Line 525
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@MFAHMDMC@?$AAa?$AAl?$AAt?$AAe?$AAr?$AAn?$AAa?$AAt?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73684[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv896[ebp], eax
	mov	eax, DWORD PTR tv896[ebp]
	mov	DWORD PTR tv804[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	mov	ecx, DWORD PTR tv804[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81411[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81411[ebp]
	test	edx, edx
	je	$LN60@parseSetti
; Line 526
	mov	DWORD PTR _value$73688[ebp], -1
; Line 527
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@CPFFKCKH@?$AAn?$AAo?$AAn?$AA?9?$AAi?$AAg?$AAn?$AAo?$AAr?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73690[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv899[ebp], eax
	mov	eax, DWORD PTR tv899[ebp]
	mov	DWORD PTR tv806[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	ecx, DWORD PTR tv806[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81412[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73690[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81412[ebp]
	test	edx, edx
	je	SHORT $LN59@parseSetti
; Line 528
	mov	DWORD PTR _value$73688[ebp], 21		; 00000015H
	jmp	$LN58@parseSetti
$LN59@parseSetti:
; Line 529
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BA@PHALGBCH@?$AAs?$AAh?$AAi?$AAf?$AAt?$AAe?$AAd?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv902[ebp], eax
	mov	eax, DWORD PTR tv902[ebp]
	mov	DWORD PTR tv808[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	esi, esp
	mov	ecx, DWORD PTR tv808[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81413[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81413[ebp]
	test	edx, edx
	je	SHORT $LN58@parseSetti
; Line 530
	mov	DWORD PTR _value$73688[ebp], 20		; 00000014H
$LN58@parseSetti:
; Line 532
	cmp	DWORD PTR _value$73688[ebp], -1
	je	SHORT $LN56@parseSetti
; Line 533
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73688[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setAlternateHandling@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setAlternateHandling
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 535
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN56@parseSetti:
; Line 536
	jmp	$LN61@parseSetti
$LN60@parseSetti:
; Line 537
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BI@NFFOADJK@?$AAm?$AAa?$AAx?$AAV?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73703[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv905[ebp], eax
	mov	eax, DWORD PTR tv905[ebp]
	mov	DWORD PTR tv812[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	mov	ecx, DWORD PTR tv812[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81414[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73703[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81414[ebp]
	test	edx, edx
	je	$LN54@parseSetti
; Line 538
	mov	DWORD PTR _value$73707[ebp], -1
; Line 539
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@LPGODFOM@?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73709[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv908[ebp], eax
	mov	eax, DWORD PTR tv908[ebp]
	mov	DWORD PTR tv814[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	esi, esp
	mov	ecx, DWORD PTR tv814[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81415[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73709[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81415[ebp]
	test	edx, edx
	je	SHORT $LN53@parseSetti
; Line 540
	mov	DWORD PTR _value$73707[ebp], 0
	jmp	$LN52@parseSetti
$LN53@parseSetti:
; Line 541
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@BPFMAOAO@?$AAp?$AAu?$AAn?$AAc?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73715[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv911[ebp], eax
	mov	eax, DWORD PTR tv911[ebp]
	mov	DWORD PTR tv816[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	mov	ecx, DWORD PTR tv816[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81416[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73715[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81416[ebp]
	test	edx, edx
	je	SHORT $LN51@parseSetti
; Line 542
	mov	DWORD PTR _value$73707[ebp], 1
	jmp	$LN52@parseSetti
$LN51@parseSetti:
; Line 543
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1O@DPCMHGPB@?$AAs?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73721[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv914[ebp], eax
	mov	eax, DWORD PTR tv914[ebp]
	mov	DWORD PTR tv818[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	esi, esp
	mov	ecx, DWORD PTR tv818[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81417[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73721[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81417[ebp]
	test	edx, edx
	je	SHORT $LN49@parseSetti
; Line 544
	mov	DWORD PTR _value$73707[ebp], 2
	jmp	$LN52@parseSetti
$LN49@parseSetti:
; Line 545
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@JJBOMMFD@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73727[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv917[ebp], eax
	mov	eax, DWORD PTR tv917[ebp]
	mov	DWORD PTR tv820[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	mov	ecx, DWORD PTR tv820[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81418[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73727[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81418[ebp]
	test	edx, edx
	je	SHORT $LN52@parseSetti
; Line 546
	mov	DWORD PTR _value$73707[ebp], 3
$LN52@parseSetti:
; Line 548
	cmp	DWORD PTR _value$73707[ebp], -1
	je	$LN46@parseSetti
; Line 549
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73707[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setMaxVariable@CollationSettings@icu_56@@QAEXHHAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setMaxVariable
; Line 551
	mov	eax, DWORD PTR _value$73707[ebp]
	add	eax, 4096				; 00001000H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getLastPrimaryForGroup
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+24], eax
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $LN81@parseSetti
	mov	edx, DWORD PTR ?__LINE__Var@?1??parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z@4JA
	add	edx, 68					; 00000044H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1HA@IPCPGAHJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DG@KHCAMCJP@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAv?$AAa?$AAr?$AAi?$AAa?$AAb?$AAl?$AAe?$AAT?$AAo?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN81@parseSetti:
; Line 553
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 554
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN46@parseSetti:
; Line 555
	jmp	$LN61@parseSetti
$LN54@parseSetti:
; Line 556
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@PDPMKCFI@?$AAc?$AAa?$AAs?$AAe?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73738[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv920[ebp], eax
	mov	eax, DWORD PTR tv920[ebp]
	mov	DWORD PTR tv824[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	esi, esp
	mov	ecx, DWORD PTR tv824[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81420[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73738[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81420[ebp]
	test	edx, edx
	je	$LN44@parseSetti
; Line 557
	mov	DWORD PTR _value$73742[ebp], -1
; Line 558
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73744[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv923[ebp], eax
	mov	eax, DWORD PTR tv923[ebp]
	mov	DWORD PTR tv826[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	esi, esp
	mov	ecx, DWORD PTR tv826[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81421[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73744[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81421[ebp]
	test	edx, edx
	je	SHORT $LN43@parseSetti
; Line 559
	mov	DWORD PTR _value$73742[ebp], 16		; 00000010H
	jmp	$LN42@parseSetti
$LN43@parseSetti:
; Line 560
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@LGAECJJD@?$AAl?$AAo?$AAw?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73750[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv926[ebp], eax
	mov	eax, DWORD PTR tv926[ebp]
	mov	DWORD PTR tv828[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	esi, esp
	mov	ecx, DWORD PTR tv828[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81422[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73750[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81422[ebp]
	test	edx, edx
	je	SHORT $LN41@parseSetti
; Line 561
	mov	DWORD PTR _value$73742[ebp], 24		; 00000018H
	jmp	$LN42@parseSetti
$LN41@parseSetti:
; Line 562
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@PLNFCNIC@?$AAu?$AAp?$AAp?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73756[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv929[ebp], eax
	mov	eax, DWORD PTR tv929[ebp]
	mov	DWORD PTR tv830[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	esi, esp
	mov	ecx, DWORD PTR tv830[ebp]
	push	ecx
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81423[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73756[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81423[ebp]
	test	edx, edx
	je	SHORT $LN42@parseSetti
; Line 563
	mov	DWORD PTR _value$73742[ebp], 25		; 00000019H
$LN42@parseSetti:
; Line 565
	cmp	DWORD PTR _value$73742[ebp], -1
	je	SHORT $LN38@parseSetti
; Line 566
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73742[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setCaseFirst@CollationSettings@icu_56@@QAEXW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setCaseFirst
; Line 567
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 568
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN38@parseSetti:
; Line 569
	jmp	$LN61@parseSetti
$LN44@parseSetti:
; Line 570
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@MHJPDKLL@?$AAc?$AAa?$AAs?$AAe?$AAL?$AAe?$AAv?$AAe?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73763[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv932[ebp], eax
	mov	eax, DWORD PTR tv932[ebp]
	mov	DWORD PTR tv834[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	esi, esp
	mov	ecx, DWORD PTR tv834[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81424[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73763[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81424[ebp]
	test	edx, edx
	je	$LN36@parseSetti
; Line 571
	lea	eax, DWORD PTR _v$73667[ebp]
	push	eax
	call	?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ; icu_56::CollationRuleParser::getOnOffValue
	add	esp, 4
	mov	DWORD PTR _value$73767[ebp], eax
; Line 572
	cmp	DWORD PTR _value$73767[ebp], -1
	je	SHORT $LN35@parseSetti
; Line 573
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73767[ebp]
	push	ecx
	push	1024					; 00000400H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setFlag
; Line 574
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 575
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN35@parseSetti:
; Line 576
	jmp	$LN61@parseSetti
$LN36@parseSetti:
; Line 577
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BM@OIGBMPEN@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73771[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv935[ebp], eax
	mov	eax, DWORD PTR tv935[ebp]
	mov	DWORD PTR tv838[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	esi, esp
	mov	ecx, DWORD PTR tv838[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81425[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73771[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81425[ebp]
	test	edx, edx
	je	SHORT $LN33@parseSetti
; Line 578
	lea	eax, DWORD PTR _v$73667[ebp]
	push	eax
	call	?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ; icu_56::CollationRuleParser::getOnOffValue
	add	esp, 4
	mov	DWORD PTR _value$73775[ebp], eax
; Line 579
	cmp	DWORD PTR _value$73775[ebp], -1
	je	SHORT $LN32@parseSetti
; Line 580
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73775[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setFlag
; Line 581
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 582
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN32@parseSetti:
; Line 583
	jmp	$LN61@parseSetti
$LN33@parseSetti:
; Line 584
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CA@BKAKDPIB@?$AAn?$AAu?$AAm?$AAe?$AAr?$AAi?$AAc?$AAO?$AAr?$AAd?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73779[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv938[ebp], eax
	mov	eax, DWORD PTR tv938[ebp]
	mov	DWORD PTR tv842[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	esi, esp
	mov	ecx, DWORD PTR tv842[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81426[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73779[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81426[ebp]
	test	edx, edx
	je	SHORT $LN30@parseSetti
; Line 585
	lea	eax, DWORD PTR _v$73667[ebp]
	push	eax
	call	?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ; icu_56::CollationRuleParser::getOnOffValue
	add	esp, 4
	mov	DWORD PTR _value$73783[ebp], eax
; Line 586
	cmp	DWORD PTR _value$73783[ebp], -1
	je	SHORT $LN29@parseSetti
; Line 587
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _value$73783[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setFlag@CollationSettings@icu_56@@QAEXHW4UColAttributeValue@@HAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setFlag
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 589
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN29@parseSetti:
; Line 590
	jmp	$LN61@parseSetti
$LN30@parseSetti:
; Line 591
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BE@DLOIGDN@?$AAh?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AAQ?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73787[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv941[ebp], eax
	mov	eax, DWORD PTR tv941[ebp]
	mov	DWORD PTR tv846[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	esi, esp
	mov	ecx, DWORD PTR tv846[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81427[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73787[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81427[ebp]
	test	edx, edx
	je	SHORT $LN27@parseSetti
; Line 592
	lea	eax, DWORD PTR _v$73667[ebp]
	push	eax
	call	?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ; icu_56::CollationRuleParser::getOnOffValue
	add	esp, 4
	mov	DWORD PTR _value$73791[ebp], eax
; Line 593
	cmp	DWORD PTR _value$73791[ebp], -1
	je	SHORT $LN26@parseSetti
; Line 594
	cmp	DWORD PTR _value$73791[ebp], 17		; 00000011H
	jne	SHORT $LN25@parseSetti
; Line 595
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@EGHIPOGN@?$FLhiraganaQ?5on?$FN?5is?5not?5supported?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
$LN25@parseSetti:
; Line 597
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 598
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN26@parseSetti:
; Line 599
	jmp	$LN61@parseSetti
$LN27@parseSetti:
; Line 600
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73797[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv944[ebp], eax
	mov	eax, DWORD PTR tv944[ebp]
	mov	DWORD PTR tv850[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	esi, esp
	mov	ecx, DWORD PTR tv850[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81428[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T73797[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81428[ebp]
	test	edx, edx
	je	$LN61@parseSetti
; Line 601
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
; Line 602
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$73667[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 603
	mov	eax, DWORD PTR _errorCode$[ebp]
	cmp	DWORD PTR [eax], 7
	jne	SHORT $LN22@parseSetti
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN22@parseSetti:
; Line 608
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsedLength$73804[ebp]
	push	ecx
	push	157					; 0000009dH
	lea	edx, DWORD PTR _localeID$73803[ebp]
	push	edx
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uloc_forLanguageTag_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _length$73805[ebp], eax
; Line 610
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN20@parseSetti
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _parsedLength$73804[ebp], eax
	jne	SHORT $LN20@parseSetti
	cmp	DWORD PTR _length$73805[ebp], 157	; 0000009dH
	jl	SHORT $LN21@parseSetti
$LN20@parseSetti:
; Line 611
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 612
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 613
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN21@parseSetti:
; Line 617
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _baseID$73809[ebp]
	push	ecx
	lea	edx, DWORD PTR _localeID$73803[ebp]
	push	edx
	call	_uloc_getBaseName_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _length$73805[ebp], eax
; Line 618
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN18@parseSetti
	cmp	DWORD PTR _length$73805[ebp], 96	; 00000060H
	jl	SHORT $LN19@parseSetti
$LN18@parseSetti:
; Line 619
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 620
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 621
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN19@parseSetti:
; Line 623
	cmp	DWORD PTR _length$73805[ebp], 3
	jne	SHORT $LN17@parseSetti
	push	3
	push	OFFSET ??_C@_03MBICDIME@und?$AA@
	lea	eax, DWORD PTR _baseID$73809[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN17@parseSetti
; Line 624
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	lea	eax, DWORD PTR _baseID$73809[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN17@parseSetti:
; Line 630
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	96					; 00000060H
	lea	ecx, DWORD PTR _collationType$73815[ebp]
	push	ecx
	push	OFFSET ??_C@_09FPAMBNKH@collation?$AA@
	lea	edx, DWORD PTR _localeID$73803[ebp]
	push	edx
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _length$73805[ebp], eax
; Line 631
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN15@parseSetti
	cmp	DWORD PTR _length$73805[ebp], 96	; 00000060H
	jl	SHORT $LN16@parseSetti
$LN15@parseSetti:
; Line 632
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 633
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CK@EHKMAIPB@expected?5language?5tag?5in?5?$FLimport@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 634
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN16@parseSetti:
; Line 636
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN14@parseSetti
; Line 637
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CC@CFBNMOCB@?$FLimport?5langTag?$FN?5is?5not?5supporte@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 638
	jmp	$LN13@parseSetti
$LN14@parseSetti:
; Line 639
	mov	esi, esp
	lea	ecx, DWORD PTR _importedRules$73822[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
; Line 641
	cmp	DWORD PTR _length$73805[ebp], 0
	jle	SHORT $LN82@parseSetti
	lea	eax, DWORD PTR _collationType$73815[ebp]
	mov	DWORD PTR tv644[ebp], eax
	jmp	SHORT $LN83@parseSetti
$LN82@parseSetti:
	mov	DWORD PTR tv644[ebp], OFFSET ??_C@_08FODBPBCG@standard?$AA@
$LN83@parseSetti:
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	lea	eax, DWORD PTR _importedRules$73822[ebp]
	push	eax
	mov	ecx, DWORD PTR tv644[ebp]
	push	ecx
	lea	edx, DWORD PTR _baseID$73809[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 642
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN12@parseSetti
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN11@parseSetti
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], OFFSET ??_C@_0BI@PKNLPAE@?$FLimport?5langTag?$FN?5failed?$AA@
$LN11@parseSetti:
; Line 646
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
; Line 647
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	esi, esp
	lea	ecx, DWORD PTR _importedRules$73822[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN12@parseSetti:
; Line 649
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _outerRules$73827[ebp], ecx
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _outerRuleIndex$73828[ebp], ecx
; Line 651
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _importedRules$73822[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parse
; Line 652
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@parseSetti
; Line 653
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN10@parseSetti
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _outerRuleIndex$73828[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN10@parseSetti:
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outerRules$73827[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 658
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 659
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	esi, esp
	lea	ecx, DWORD PTR _importedRules$73822[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@parseSetti:
; Line 660
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN61@parseSetti:
; Line 662
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@parseSetti
$LN70@parseSetti:
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 91					; 0000005bH
	jne	$LN8@parseSetti
; Line 663
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
; Line 664
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _set$73833[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::parseUnicodeSet
	mov	DWORD PTR _j$[ebp], eax
; Line 665
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@parseSetti
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
$LN6@parseSetti:
; Line 666
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@FNPCJIJC@?$AAo?$AAp?$AAt?$AAi?$AAm?$AAi?$AAz?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73836[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv950[ebp], eax
	mov	eax, DWORD PTR tv950[ebp]
	mov	DWORD PTR tv876[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	esi, esp
	mov	ecx, DWORD PTR tv876[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81431[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	esi, esp
	lea	ecx, DWORD PTR $T73836[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81431[ebp]
	test	edx, edx
	je	$LN5@parseSetti
; Line 667
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _set$73833[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 668
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@parseSetti
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
$LN4@parseSetti:
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 670
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN74@parseSetti
	jmp	$LN3@parseSetti
$LN5@parseSetti:
; Line 671
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1CK@OEACKGNA@?$AAs?$AAu?$AAp?$AAp?$AAr?$AAe?$AAs?$AAs?$AAC?$AAo?$AAn?$AAt?$AAr?$AAa?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73843[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv953[ebp], eax
	mov	eax, DWORD PTR tv953[ebp]
	mov	DWORD PTR tv880[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	esi, esp
	mov	ecx, DWORD PTR tv880[ebp]
	push	ecx
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81432[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	esi, esp
	lea	ecx, DWORD PTR $T73843[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81432[ebp]
	test	edx, edx
	je	$LN3@parseSetti
; Line 672
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	edx, DWORD PTR _set$73833[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 673
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseSetti
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
$LN1@parseSetti:
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 675
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN74@parseSetti
$LN3@parseSetti:
; Line 677
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@parseSetti:
; Line 678
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@CMGJGMFP@not?5a?5valid?5setting?1option?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 679
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN74@parseSetti:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN126@parseSetti
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 3064				; 00000bf8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN126@parseSetti:
	DD	9
	DD	$LN125@parseSetti
$LN125@parseSetti:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN115@parseSetti
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN116@parseSetti
	DD	-376					; fffffe88H
	DD	56					; 00000038H
	DD	$LN117@parseSetti
	DD	-544					; fffffde0H
	DD	157					; 0000009dH
	DD	$LN118@parseSetti
	DD	-556					; fffffdd4H
	DD	4
	DD	$LN119@parseSetti
	DD	-736					; fffffd20H
	DD	157					; 0000009dH
	DD	$LN120@parseSetti
	DD	-840					; fffffcb8H
	DD	96					; 00000060H
	DD	$LN121@parseSetti
	DD	-912					; fffffc70H
	DD	64					; 00000040H
	DD	$LN122@parseSetti
	DD	-996					; fffffc1cH
	DD	52					; 00000034H
	DD	$LN123@parseSetti
$LN123@parseSetti:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN122@parseSetti:
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN121@parseSetti:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN120@parseSetti:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN119@parseSetti:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN118@parseSetti:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN117@parseSetti:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN116@parseSetti:
	DB	118					; 00000076H
	DB	0
$LN115@parseSetti:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T81434[ebp]
	and	eax, 1
	je	$LN86@parseSetti
	and	DWORD PTR $T81434[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T73658[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN86@parseSetti:
	ret	0
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73663[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _v$73667[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$4:
	mov	eax, DWORD PTR $T81434[ebp]
	and	eax, 2
	je	$LN91@parseSetti
	and	DWORD PTR $T81434[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T73672[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN91@parseSetti:
	ret	0
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73690[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73703[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73709[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73715[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73721[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73727[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73738[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73744[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$15:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73750[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$16:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73756[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73763[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$18:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73771[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$19:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73779[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$20:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73787[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$21:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73797[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$22:
	mov	esi, esp
	lea	ecx, DWORD PTR _lang$73801[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$23:
	mov	esi, esp
	lea	ecx, DWORD PTR _importedRules$73822[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$24:
	mov	esi, esp
	lea	ecx, DWORD PTR _set$73833[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$25:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73836[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z$26:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73843[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3068]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseSetting@CollationRuleParser@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseSetting
PUBLIC	??_C@_0BP@HEBEBLDP@unknown?5script?5or?5reorder?5code?$AA@ ; `string'
PUBLIC	?getReorderCode@CollationRuleParser@icu_56@@SAHPBD@Z ; icu_56::CollationRuleParser::getReorderCode
PUBLIC	__$ArrayPad$
EXTRN	?setReordering@CollationSettings@icu_56@@QAEXABUCollationData@2@PBHHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationSettings::setReordering
EXTRN	__imp_?getBuffer@UVector32@icu_56@@QBEPAHXZ:PROC
EXTRN	__imp_?size@UVector32@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?clear@CharString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
EXTRN	__imp_??1UVector32@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	?resetReordering@CollationSettings@icu_56@@QAEXXZ:PROC ; icu_56::CollationSettings::resetReordering
;	COMDAT ??_C@_0BP@HEBEBLDP@unknown?5script?5or?5reorder?5code?$AA@
CONST	SEGMENT
??_C@_0BP@HEBEBLDP@unknown?5script?5or?5reorder?5code?$AA@ DB 'unknown sc'
	DB	'ript or reorder code', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv173 = -428						; size = 4
tv182 = -424						; size = 4
$T73866 = -416						; size = 64
_code$73868 = -152					; size = 4
_limit$73863 = -140					; size = 4
_word$ = -128						; size = 56
_reorderCodes$ = -64					; size = 20
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_raw$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseReordering, COMDAT
; _this$ = ecx
; Line 682
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-428]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 683
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseReord
	jmp	$LN10@parseReord
$LN9@parseReord:
; Line 684
	mov	DWORD PTR _i$[ebp], 7
; Line 685
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jne	SHORT $LN8@parseReord
; Line 687
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?resetReordering@CollationSettings@icu_56@@QAEXXZ ; icu_56::CollationSettings::resetReordering
; Line 688
	jmp	$LN10@parseReord
$LN8@parseReord:
; Line 691
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 692
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseReord
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN10@parseReord
$LN7@parseReord:
; Line 693
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
$LN6@parseReord:
; Line 694
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN5@parseReord
; Line 695
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 696
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$73863[ebp], eax
; Line 697
	cmp	DWORD PTR _limit$73863[ebp], 0
	jge	SHORT $LN4@parseReord
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$73863[ebp], eax
$LN4@parseReord:
; Line 698
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _limit$73863[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	lea	eax, DWORD PTR $T73866[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv182[ebp], eax
	mov	ecx, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv173[ebp]
	push	edx
	mov	edi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_?clear@CharString@icu_56@@QAEAAV12@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73866[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 699
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseReord
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN10@parseReord
$LN3@parseReord:
; Line 700
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?getReorderCode@CollationRuleParser@icu_56@@SAHPBD@Z ; icu_56::CollationRuleParser::getReorderCode
	add	esp, 4
	mov	DWORD PTR _code$73868[ebp], eax
; Line 701
	cmp	DWORD PTR _code$73868[ebp], 0
	jge	SHORT $LN2@parseReord
; Line 702
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@HEBEBLDP@unknown?5script?5or?5reorder?5code?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 703
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN10@parseReord
$LN2@parseReord:
; Line 705
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _code$73868[ebp]
	push	ecx
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 706
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseReord
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN10@parseReord
$LN1@parseReord:
; Line 707
	mov	eax, DWORD PTR _limit$73863[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 708
	jmp	$LN6@parseReord
$LN5@parseReord:
; Line 709
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_?getBuffer@UVector32@icu_56@@QBEPAHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setReordering@CollationSettings@icu_56@@QAEXABUCollationData@2@PBHHAAW4UErrorCode@@@Z ; icu_56::CollationSettings::setReordering
; Line 710
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@parseReord:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@parseReord
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 428				; 000001acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN19@parseReord:
	DD	2
	DD	$LN18@parseReord
$LN18@parseReord:
	DD	-64					; ffffffc0H
	DD	20					; 00000014H
	DD	$LN15@parseReord
	DD	-128					; ffffff80H
	DD	56					; 00000038H
	DD	$LN16@parseReord
$LN16@parseReord:
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN15@parseReord:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _reorderCodes$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _word$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73866[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-432]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseReordering@CollationRuleParser@icu_56@@AAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseReordering
PUBLIC	??_C@_06HJADPOOM@others?$AA@			; `string'
EXTRN	_u_getPropertyValueEnum_56:PROC
EXTRN	_uprv_stricmp_56:PROC
;	COMDAT ??_C@_06HJADPOOM@others?$AA@
CONST	SEGMENT
??_C@_06HJADPOOM@others?$AA@ DB 'others', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getReorderCode@CollationRuleParser@icu_56@@SAHPBD@Z
_TEXT	SEGMENT
_script$ = -20						; size = 4
_i$73881 = -8						; size = 4
_word$ = 8						; size = 4
?getReorderCode@CollationRuleParser@icu_56@@SAHPBD@Z PROC ; icu_56::CollationRuleParser::getReorderCode, COMDAT
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 718
	mov	DWORD PTR _i$73881[ebp], 0
	jmp	SHORT $LN6@getReorder
$LN5@getReorder:
	mov	eax, DWORD PTR _i$73881[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73881[ebp], eax
$LN6@getReorder:
	cmp	DWORD PTR _i$73881[ebp], 5
	jge	SHORT $LN4@getReorder
; Line 719
	mov	eax, DWORD PTR _i$73881[ebp]
	mov	ecx, DWORD PTR _gSpecialReorderCodes[eax*4]
	push	ecx
	mov	edx, DWORD PTR _word$[ebp]
	push	edx
	call	_uprv_stricmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@getReorder
; Line 720
	mov	eax, DWORD PTR _i$73881[ebp]
	add	eax, 4096				; 00001000H
	jmp	SHORT $LN7@getReorder
$LN3@getReorder:
; Line 722
	jmp	SHORT $LN5@getReorder
$LN4@getReorder:
; Line 723
	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	push	4106					; 0000100aH
	call	_u_getPropertyValueEnum_56
	add	esp, 8
	mov	DWORD PTR _script$[ebp], eax
; Line 724
	cmp	DWORD PTR _script$[ebp], 0
	jl	SHORT $LN2@getReorder
; Line 725
	mov	eax, DWORD PTR _script$[ebp]
	jmp	SHORT $LN7@getReorder
$LN2@getReorder:
; Line 727
	push	OFFSET ??_C@_06HJADPOOM@others?$AA@
	mov	eax, DWORD PTR _word$[ebp]
	push	eax
	call	_uprv_stricmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@getReorder
; Line 728
	mov	eax, 103				; 00000067H
	jmp	SHORT $LN7@getReorder
$LN1@getReorder:
; Line 730
	or	eax, -1
$LN7@getReorder:
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getReorderCode@CollationRuleParser@icu_56@@SAHPBD@Z ENDP ; icu_56::CollationRuleParser::getReorderCode
_TEXT	ENDS
PUBLIC	??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@		; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@ DB 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z$1
__ehfuncinfo$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv91 = -384						; size = 4
tv89 = -384						; size = 4
tv95 = -380						; size = 4
tv92 = -380						; size = 4
$T73895 = -372						; size = 64
$T73901 = -300						; size = 64
$T81503 = -225						; size = 1
$T81504 = -213						; size = 1
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z PROC ; icu_56::CollationRuleParser::getOnOffValue, COMDAT
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 735
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73895[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81503[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73895[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81503[ebp]
	test	edx, edx
	je	SHORT $LN4@getOnOffVa
; Line 736
	mov	eax, 17					; 00000011H
	jmp	$LN5@getOnOffVa
	jmp	$LN5@getOnOffVa
$LN4@getOnOffVa:
; Line 737
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_17FDPGNGBJ@?$AAo?$AAf?$AAf?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T73901[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv91[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T81504[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73901[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T81504[ebp]
	test	edx, edx
	je	SHORT $LN2@getOnOffVa
; Line 738
	mov	eax, 16					; 00000010H
	jmp	SHORT $LN5@getOnOffVa
; Line 739
	jmp	SHORT $LN5@getOnOffVa
$LN2@getOnOffVa:
; Line 740
	or	eax, -1
$LN5@getOnOffVa:
; Line 742
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73895[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73901[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getOnOffValue@CollationRuleParser@icu_56@@CA?AW4UColAttributeValue@@ABVUnicodeString@2@@Z ENDP ; icu_56::CollationRuleParser::getOnOffValue
PUBLIC	??_C@_0DI@LNPCOIEG@missing?5option?9terminating?5?8?$FN?8?5a@ ; `string'
PUBLIC	??_C@_0BP@EEPGDHAK@not?5a?5valid?5UnicodeSet?5pattern?$AA@ ; `string'
PUBLIC	??_C@_0CH@CGMCKNCJ@unbalanced?5UnicodeSet?5pattern?5br@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_0DI@LNPCOIEG@missing?5option?9terminating?5?8?$FN?8?5a@
CONST	SEGMENT
??_C@_0DI@LNPCOIEG@missing?5option?9terminating?5?8?$FN?8?5a@ DB 'missing'
	DB	' option-terminating '']'' after UnicodeSet pattern', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EEPGDHAK@not?5a?5valid?5UnicodeSet?5pattern?$AA@
CONST	SEGMENT
??_C@_0BP@EEPGDHAK@not?5a?5valid?5UnicodeSet?5pattern?$AA@ DB 'not a vali'
	DB	'd UnicodeSet pattern', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CGMCKNCJ@unbalanced?5UnicodeSet?5pattern?5br@
CONST	SEGMENT
??_C@_0CH@CGMCKNCJ@unbalanced?5UnicodeSet?5pattern?5br@ DB 'unbalanced Un'
	DB	'icodeSet pattern brackets', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv152 = -336						; size = 4
tv153 = -332						; size = 4
tv75 = -332						; size = 4
$T73923 = -324						; size = 64
_c$73918 = -60						; size = 2
_j$ = -48						; size = 4
_level$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_i$ = 8							; size = 4
_set$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::parseUnicodeSet, COMDAT
; _this$ = ecx
; Line 745
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	DWORD PTR _level$[ebp], 0
; Line 748
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _j$[ebp], eax
$LN10@parseUnico:
; Line 750
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$[ebp], eax
	jne	SHORT $LN8@parseUnico
; Line 751
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CH@CGMCKNCJ@unbalanced?5UnicodeSet?5pattern?5br@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 752
	mov	eax, DWORD PTR _j$[ebp]
	jmp	$LN11@parseUnico
$LN8@parseUnico:
; Line 754
	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$73918[ebp], ax
; Line 755
	movzx	eax, WORD PTR _c$73918[ebp]
	cmp	eax, 91					; 0000005bH
	jne	SHORT $LN7@parseUnico
; Line 756
	mov	eax, DWORD PTR _level$[ebp]
	add	eax, 1
	mov	DWORD PTR _level$[ebp], eax
	jmp	SHORT $LN6@parseUnico
$LN7@parseUnico:
; Line 757
	movzx	eax, WORD PTR _c$73918[ebp]
	cmp	eax, 93					; 0000005dH
	jne	SHORT $LN6@parseUnico
; Line 758
	mov	eax, DWORD PTR _level$[ebp]
	sub	eax, 1
	mov	DWORD PTR _level$[ebp], eax
	jne	SHORT $LN6@parseUnico
	jmp	SHORT $LN9@parseUnico
$LN6@parseUnico:
; Line 760
	jmp	$LN10@parseUnico
$LN9@parseUnico:
; Line 761
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	lea	eax, DWORD PTR $T73923[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv153[ebp], eax
	mov	edx, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv152[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv152[ebp]
	push	eax
	mov	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73923[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 762
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseUnico
; Line 763
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 764
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@EEPGDHAK@not?5a?5valid?5UnicodeSet?5pattern?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 765
	mov	eax, DWORD PTR _j$[ebp]
	jmp	SHORT $LN11@parseUnico
$LN3@parseUnico:
; Line 767
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _j$[ebp], eax
; Line 768
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _j$[ebp], eax
	je	SHORT $LN1@parseUnico
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 93					; 0000005dH
	je	SHORT $LN2@parseUnico
$LN1@parseUnico:
; Line 769
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@LNPCOIEG@missing?5option?9terminating?5?8?$FN?8?5a@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::CollationRuleParser::setParseError
; Line 770
	mov	eax, DWORD PTR _j$[ebp]
	jmp	SHORT $LN11@parseUnico
$LN2@parseUnico:
; Line 772
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	mov	eax, DWORD PTR _j$[ebp]
$LN11@parseUnico:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73923[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseUnicodeSet@CollationRuleParser@icu_56@@AAEHHAAVUnicodeSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::parseUnicodeSet
EXTRN	__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_c$73940 = -20						; size = 2
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_raw$ = 12						; size = 4
?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z PROC ; icu_56::CollationRuleParser::readWords, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 778
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 779
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _i$[ebp], eax
$LN8@readWords:
; Line 781
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jl	SHORT $LN6@readWords
	xor	eax, eax
	jmp	$LN9@readWords
$LN6@readWords:
; Line 782
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$73940[ebp], ax
; Line 783
	movzx	eax, WORD PTR _c$73940[ebp]
	push	eax
	call	?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z ; icu_56::CollationRuleParser::isSyntaxChar
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@readWords
	movzx	eax, WORD PTR _c$73940[ebp]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN5@readWords
	movzx	eax, WORD PTR _c$73940[ebp]
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN5@readWords
; Line 784
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@readWords
	mov	eax, DWORD PTR _i$[ebp]
	jmp	$LN9@readWords
$LN4@readWords:
; Line 785
	mov	esi, esp
	push	1
	push	OFFSET ?sp@?1??readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@3@@Z@4_WB
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@readWords
; Line 786
	mov	esi, esp
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@readWords:
; Line 788
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN9@readWords
$LN5@readWords:
; Line 790
	movzx	eax, WORD PTR _c$73940[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@readWords
; Line 791
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 792
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ; icu_56::CollationRuleParser::skipWhiteSpace
	mov	DWORD PTR _i$[ebp], eax
; Line 793
	jmp	SHORT $LN1@readWords
$LN2@readWords:
; Line 794
	mov	esi, esp
	movzx	eax, WORD PTR _c$73940[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 795
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN1@readWords:
; Line 797
	jmp	$LN8@readWords
$LN9@readWords:
; Line 798
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?readWords@CollationRuleParser@icu_56@@ABEHHAAVUnicodeString@2@@Z ENDP ; icu_56::CollationRuleParser::readWords
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?skipComment@CollationRuleParser@icu_56@@ABEHH@Z
_TEXT	SEGMENT
tv72 = -220						; size = 4
_c$73953 = -20						; size = 2
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?skipComment@CollationRuleParser@icu_56@@ABEHH@Z PROC	; icu_56::CollationRuleParser::skipComment, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN4@skipCommen:
; Line 803
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN3@skipCommen
; Line 804
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$73953[ebp], ax
; Line 806
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN1@skipCommen
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN1@skipCommen
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN1@skipCommen
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 133				; 00000085H
	je	SHORT $LN1@skipCommen
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 8232				; 00002028H
	je	SHORT $LN1@skipCommen
	movzx	eax, WORD PTR _c$73953[ebp]
	cmp	eax, 8233				; 00002029H
	jne	SHORT $LN2@skipCommen
$LN1@skipCommen:
; Line 810
	jmp	SHORT $LN3@skipCommen
$LN2@skipCommen:
; Line 812
	jmp	$LN4@skipCommen
$LN3@skipCommen:
; Line 813
	mov	eax, DWORD PTR _i$[ebp]
; Line 814
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skipComment@CollationRuleParser@icu_56@@ABEHH@Z ENDP	; icu_56::CollationRuleParser::skipComment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_reason$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z PROC ; icu_56::CollationRuleParser::setParseError, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 818
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@setParseEr
	jmp	SHORT $LN3@setParseEr
$LN2@setParseEr:
; Line 821
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 3
; Line 822
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _reason$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 823
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@setParseEr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ; icu_56::CollationRuleParser::setErrorContext
$LN3@setParseEr:
; Line 824
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setParseError@CollationRuleParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ENDP ; icu_56::CollationRuleParser::setParseError
_TEXT	ENDS
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ
_TEXT	SEGMENT
_length$ = -32						; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ PROC ; icu_56::CollationRuleParser::setErrorContext, COMDAT
; _this$ = ecx
; Line 827
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 828
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN6@setErrorCo
	jmp	$LN7@setErrorCo
$LN6@setErrorCo:
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+4], eax
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 0
; Line 837
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 15					; 0000000fH
	mov	DWORD PTR _start$[ebp], ecx
; Line 838
	jns	SHORT $LN5@setErrorCo
; Line 839
	mov	DWORD PTR _start$[ebp], 0
	jmp	SHORT $LN4@setErrorCo
$LN5@setErrorCo:
; Line 840
	cmp	DWORD PTR _start$[ebp], 0
	jle	SHORT $LN4@setErrorCo
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	and	edx, -1024				; fffffc00H
	cmp	edx, 56320				; 0000dc00H
	jne	SHORT $LN4@setErrorCo
; Line 841
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
$LN4@setErrorCo:
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR _length$[ebp], ecx
; Line 844
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	xor	edx, edx
	mov	eax, DWORD PTR _length$[ebp]
	mov	WORD PTR [ecx+eax*2+8], dx
; Line 848
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR _length$[ebp], eax
; Line 849
	cmp	DWORD PTR _length$[ebp], 16		; 00000010H
	jl	SHORT $LN2@setErrorCo
; Line 850
	mov	DWORD PTR _length$[ebp], 15		; 0000000fH
; Line 851
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _length$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN2@setErrorCo
; Line 852
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
$LN2@setErrorCo:
; Line 855
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 40					; 00000028H
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 856
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	xor	edx, edx
	mov	eax, DWORD PTR _length$[ebp]
	mov	WORD PTR [ecx+eax*2+40], dx
$LN7@setErrorCo:
; Line 857
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setErrorContext@CollationRuleParser@icu_56@@AAEXXZ ENDP ; icu_56::CollationRuleParser::setErrorContext
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z
_TEXT	SEGMENT
tv72 = -193						; size = 1
_c$ = 8							; size = 4
?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z PROC	; icu_56::CollationRuleParser::isSyntaxChar, COMDAT
; Line 860
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 863
	cmp	DWORD PTR _c$[ebp], 33			; 00000021H
	jl	SHORT $LN3@isSyntaxCh
	cmp	DWORD PTR _c$[ebp], 126			; 0000007eH
	jg	SHORT $LN3@isSyntaxCh
	cmp	DWORD PTR _c$[ebp], 47			; 0000002fH
	jle	SHORT $LN5@isSyntaxCh
	cmp	DWORD PTR _c$[ebp], 58			; 0000003aH
	jl	SHORT $LN4@isSyntaxCh
	cmp	DWORD PTR _c$[ebp], 64			; 00000040H
	jle	SHORT $LN5@isSyntaxCh
$LN4@isSyntaxCh:
	cmp	DWORD PTR _c$[ebp], 91			; 0000005bH
	jl	SHORT $LN6@isSyntaxCh
	cmp	DWORD PTR _c$[ebp], 96			; 00000060H
	jle	SHORT $LN5@isSyntaxCh
$LN6@isSyntaxCh:
	cmp	DWORD PTR _c$[ebp], 123			; 0000007bH
	jl	SHORT $LN3@isSyntaxCh
$LN5@isSyntaxCh:
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN7@isSyntaxCh
$LN3@isSyntaxCh:
	mov	BYTE PTR tv72[ebp], 0
$LN7@isSyntaxCh:
	mov	al, BYTE PTR tv72[ebp]
; Line 864
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSyntaxChar@CollationRuleParser@icu_56@@CACH@Z ENDP	; icu_56::CollationRuleParser::isSyntaxChar
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z PROC ; icu_56::CollationRuleParser::skipWhiteSpace, COMDAT
; _this$ = ecx
; Line 867
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN2@skipWhiteS:
; Line 868
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN1@skipWhiteS
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@skipWhiteS
; Line 869
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 870
	jmp	SHORT $LN2@skipWhiteS
$LN1@skipWhiteS:
; Line 871
	mov	eax, DWORD PTR _i$[ebp]
; Line 872
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?skipWhiteSpace@CollationRuleParser@icu_56@@ABEHH@Z ENDP ; icu_56::CollationRuleParser::skipWhiteSpace
_TEXT	ENDS
END

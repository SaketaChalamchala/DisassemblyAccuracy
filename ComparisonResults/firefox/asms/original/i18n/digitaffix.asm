; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\digitaffix.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?countChar32@DigitAffix@icu_56@@QBEHXZ		; icu_56::DigitAffix::countChar32
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@DigitAffix@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@DigitAffix@icu_56@@QBEHXZ PROC		; icu_56::DigitAffix::countChar32, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitaffix.h
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@DigitAffix@icu_56@@QBEHXZ ENDP		; icu_56::DigitAffix::countChar32
_TEXT	ENDS
PUBLIC	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::DigitAffix::toString, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::DigitAffix::toString
_TEXT	ENDS
PUBLIC	?equals@DigitAffix@icu_56@@QBECABV12@@Z		; icu_56::DigitAffix::equals
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitAffix::equals, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv76[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitAffix::equals
_TEXT	ENDS
PUBLIC	??1DigitAffix@icu_56@@QAE@XZ			; icu_56::DigitAffix::~DigitAffix
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffix@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0
__ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DigitAffix@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffix@icu_56@@QAE@XZ PROC			; icu_56::DigitAffix::~DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DigitAffix@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffix@icu_56@@QAE@XZ ENDP			; icu_56::DigitAffix::~DigitAffix
PUBLIC	??0DigitAffix@icu_56@@QAE@ABV01@@Z		; icu_56::DigitAffix::DigitAffix
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffix@icu_56@@QAE@ABV01@@Z PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::DigitAffix::operator=
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitAffix::operator=
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??_7FieldPositionHandler@icu_56@@6B@		; icu_56::FieldPositionHandler::`vftable'
PUBLIC	??0FieldPositionHandler@icu_56@@QAE@XZ		; icu_56::FieldPositionHandler::FieldPositionHandler
PUBLIC	??_R4FieldPositionHandler@icu_56@@6B@		; icu_56::FieldPositionHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPositionHandler@icu_56@@@8		; icu_56::FieldPositionHandler `RTTI Type Descriptor'
PUBLIC	??_R3FieldPositionHandler@icu_56@@8		; icu_56::FieldPositionHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPositionHandler@icu_56@@8		; icu_56::FieldPositionHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8	; icu_56::FieldPositionHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPositionHandler@icu_56@@UAEPAXI@Z	; icu_56::FieldPositionHandler::`vector deleting destructor'
EXTRN	?addAttribute@FieldPositionHandler@icu_56@@UAEXHHH@Z:PROC ; icu_56::FieldPositionHandler::addAttribute
EXTRN	?shiftLast@FieldPositionHandler@icu_56@@UAEXH@Z:PROC ; icu_56::FieldPositionHandler::shiftLast
EXTRN	?isRecording@FieldPositionHandler@icu_56@@UBECXZ:PROC ; icu_56::FieldPositionHandler::isRecording
;	COMDAT ??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8 DD FLAT:??_R0?AVFieldPositionHandler@icu_56@@@8 ; icu_56::FieldPositionHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPositionHandler@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8 ; icu_56::FieldPositionHandler::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPositionHandler@icu_56@@8 DD 00H		; icu_56::FieldPositionHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPositionHandler@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPositionHandler@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPositionHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPositionHandler@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPositionHandler@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPositionHandler@icu_56@@6B@ DD 00H		; icu_56::FieldPositionHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPositionHandler@icu_56@@@8
	DD	FLAT:??_R3FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPositionHandler@icu_56@@6B@
CONST	SEGMENT
??_7FieldPositionHandler@icu_56@@6B@ DD FLAT:??_R4FieldPositionHandler@icu_56@@6B@ ; icu_56::FieldPositionHandler::`vftable'
	DD	FLAT:??_EFieldPositionHandler@icu_56@@UAEPAXI@Z
	DD	FLAT:?addAttribute@FieldPositionHandler@icu_56@@UAEXHHH@Z
	DD	FLAT:?shiftLast@FieldPositionHandler@icu_56@@UAEXH@Z
	DD	FLAT:?isRecording@FieldPositionHandler@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPositionHandler@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPositionHandler@icu_56@@QAE@XZ PROC		; icu_56::FieldPositionHandler::FieldPositionHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPositionHandler@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPositionHandler@icu_56@@QAE@XZ ENDP		; icu_56::FieldPositionHandler::FieldPositionHandler
_TEXT	ENDS
PUBLIC	??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z	; icu_56::FieldPositionHandler::FieldPositionHandler
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z PROC	; icu_56::FieldPositionHandler::FieldPositionHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@FieldPosit
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@FieldPosit
$LN3@FieldPosit:
	mov	DWORD PTR tv68[ebp], 0
$LN4@FieldPosit:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPositionHandler@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::FieldPositionHandler::FieldPositionHandler
_TEXT	ENDS
PUBLIC	??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionHandler::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionHandler::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionHandler::operator=
_TEXT	ENDS
PUBLIC	??_GFieldPositionHandler@icu_56@@UAEPAXI@Z	; icu_56::FieldPositionHandler::`scalar deleting destructor'
EXTRN	??1FieldPositionHandler@icu_56@@UAE@XZ:PROC	; icu_56::FieldPositionHandler::~FieldPositionHandler
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPositionHandler@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPositionHandler@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPositionHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPositionHandler@icu_56@@UAE@XZ	; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPositionHandler@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPositionHandler::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPositionHandler@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPositionHandler@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPositionHandler::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1FieldPositionHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPositionHandler@icu_56@@UAE@XZ	; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPositionHandler@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPositionHandler::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0DigitAffix@icu_56@@QAE@XZ			; icu_56::DigitAffix::DigitAffix
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitaffix.cpp
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@XZ$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DigitAffix@icu_56@@QAE@XZ PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 20
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@XZ ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	??0DigitAffix@icu_56@@QAE@PB_WHH@Z		; icu_56::DigitAffix::DigitAffix
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@HHH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@PB_WHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@PB_WHH@Z$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@PB_WHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@PB_WHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@PB_WHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
_charCount$ = 12					; size = 4
_fieldId$ = 16						; size = 4
??0DigitAffix@icu_56@@QAE@PB_WHH@Z PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@PB_WHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _charCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	eax, DWORD PTR _charCount$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fieldId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _charCount$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@HHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 26
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@PB_WHH@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@PB_WHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@PB_WHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@PB_WHH@Z ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	?remove@DigitAffix@icu_56@@QAEXXZ		; icu_56::DigitAffix::remove
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@DigitAffix@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@DigitAffix@icu_56@@QAEXXZ PROC			; icu_56::DigitAffix::remove, COMDAT
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@DigitAffix@icu_56@@QAEXXZ ENDP			; icu_56::DigitAffix::remove
_TEXT	ENDS
PUBLIC	?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z	; icu_56::DigitAffix::appendUChar
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 2
_fieldId$ = 12						; size = 4
?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z PROC		; icu_56::DigitAffix::appendUChar, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	movzx	eax, WORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	esi, esp
	movzx	eax, WORD PTR _fieldId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z ENDP		; icu_56::DigitAffix::appendUChar
_TEXT	ENDS
PUBLIC	??1UnicodeStringAppender@icu_56@@QAE@XZ		; icu_56::UnicodeStringAppender::~UnicodeStringAppender
PUBLIC	?append@UnicodeStringAppender@icu_56@@QAEX_W@Z	; icu_56::UnicodeStringAppender::append
PUBLIC	??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::UnicodeStringAppender::UnicodeStringAppender
PUBLIC	__$ArrayPad$
PUBLIC	?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::DigitAffix::append
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z$0
__ehfuncinfo$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_i$35464 = -128						; size = 4
_len$35463 = -116					; size = 4
_appender$35462 = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
_fieldId$ = 12						; size = 4
?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z PROC ; icu_56::DigitAffix::append, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR _appender$35462[ebp]
	call	??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::UnicodeStringAppender::UnicodeStringAppender
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 45
	mov	esi, esp
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$35463[ebp], eax
; Line 46
	mov	DWORD PTR _i$35464[ebp], 0
	jmp	SHORT $LN3@append
$LN2@append:
	mov	eax, DWORD PTR _i$35464[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35464[ebp], eax
$LN3@append:
	mov	eax, DWORD PTR _i$35464[ebp]
	cmp	eax, DWORD PTR _len$35463[ebp]
	jge	SHORT $LN1@append
; Line 47
	movzx	eax, WORD PTR _fieldId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _appender$35462[ebp]
	call	?append@UnicodeStringAppender@icu_56@@QAEX_W@Z ; icu_56::UnicodeStringAppender::append
; Line 48
	jmp	SHORT $LN2@append
$LN1@append:
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _appender$35462[ebp]
	call	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
; Line 50
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@append
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN10@append:
	DD	1
	DD	$LN9@append
$LN9@append:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN7@append
$LN7@append:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z$0:
	lea	ecx, DWORD PTR _appender$35462[ebp]
	jmp	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
__ehhandler$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ENDP ; icu_56::DigitAffix::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dest$ = 8						; size = 4
??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z PROC ; icu_56::UnicodeStringAppender::UnicodeStringAppender, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unistrappender.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z ENDP ; icu_56::UnicodeStringAppender::UnicodeStringAppender
_TEXT	ENDS
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@UnicodeStringAppender@icu_56@@QAEX_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 2
?append@UnicodeStringAppender@icu_56@@QAEX_W@Z PROC	; icu_56::UnicodeStringAppender::append, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 32			; 00000020H
	jne	SHORT $LN1@append@2
; Line 48
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN1@append@2:
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR [edx+ecx*2+8], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@UnicodeStringAppender@icu_56@@QAEX_W@Z ENDP	; icu_56::UnicodeStringAppender::append
_TEXT	ENDS
PUBLIC	?flush@UnicodeStringAppender@icu_56@@QAEXXZ	; icu_56::UnicodeStringAppender::flush
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1UnicodeStringAppender@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1UnicodeStringAppender@icu_56@@QAE@XZ PROC		; icu_56::UnicodeStringAppender::~UnicodeStringAppender, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flush@UnicodeStringAppender@icu_56@@QAEXXZ ; icu_56::UnicodeStringAppender::flush
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UnicodeStringAppender@icu_56@@QAE@XZ ENDP		; icu_56::UnicodeStringAppender::~UnicodeStringAppender
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flush@UnicodeStringAppender@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?flush@UnicodeStringAppender@icu_56@@QAEXXZ PROC	; icu_56::UnicodeStringAppender::flush, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@flush
; Line 67
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@flush:
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?flush@UnicodeStringAppender@icu_56@@QAEXXZ ENDP	; icu_56::UnicodeStringAppender::flush
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::DigitAffix::setTo
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitaffix.cpp
xdata$x	SEGMENT
__unwindtable$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z$0
__ehfuncinfo$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_i$35476 = -128						; size = 4
_len$35475 = -116					; size = 4
_appender$35474 = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
_fieldId$ = 12						; size = 4
?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z PROC ; icu_56::DigitAffix::setTo, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR _appender$35474[ebp]
	call	??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::UnicodeStringAppender::UnicodeStringAppender
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 58
	mov	esi, esp
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$35475[ebp], eax
; Line 59
	mov	DWORD PTR _i$35476[ebp], 0
	jmp	SHORT $LN3@setTo
$LN2@setTo:
	mov	eax, DWORD PTR _i$35476[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35476[ebp], eax
$LN3@setTo:
	mov	eax, DWORD PTR _i$35476[ebp]
	cmp	eax, DWORD PTR _len$35475[ebp]
	jge	SHORT $LN1@setTo
; Line 60
	movzx	eax, WORD PTR _fieldId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _appender$35474[ebp]
	call	?append@UnicodeStringAppender@icu_56@@QAEX_W@Z ; icu_56::UnicodeStringAppender::append
; Line 61
	jmp	SHORT $LN2@setTo
$LN1@setTo:
; Line 62
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _appender$35474[ebp]
	call	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
; Line 63
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@setTo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@setTo:
	DD	1
	DD	$LN9@setTo
$LN9@setTo:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN7@setTo
$LN7@setTo:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z$0:
	lea	ecx, DWORD PTR _appender$35474[ebp]
	jmp	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
__ehhandler$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setTo@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ENDP ; icu_56::DigitAffix::setTo
PUBLIC	__$ArrayPad$
PUBLIC	?append@DigitAffix@icu_56@@QAEXPB_WHH@Z		; icu_56::DigitAffix::append
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z$0
__ehfuncinfo$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?append@DigitAffix@icu_56@@QAEXPB_WHH@Z
_TEXT	SEGMENT
_i$35488 = -116						; size = 4
_appender$35487 = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
_charCount$ = 12					; size = 4
_fieldId$ = 16						; size = 4
?append@DigitAffix@icu_56@@QAEXPB_WHH@Z PROC		; icu_56::DigitAffix::append, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	esi, esp
	mov	eax, DWORD PTR _charCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR _appender$35487[ebp]
	call	??0UnicodeStringAppender@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::UnicodeStringAppender::UnicodeStringAppender
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 70
	mov	DWORD PTR _i$35488[ebp], 0
	jmp	SHORT $LN3@append@3
$LN2@append@3:
	mov	eax, DWORD PTR _i$35488[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35488[ebp], eax
$LN3@append@3:
	mov	eax, DWORD PTR _i$35488[ebp]
	cmp	eax, DWORD PTR _charCount$[ebp]
	jge	SHORT $LN1@append@3
; Line 71
	movzx	eax, WORD PTR _fieldId$[ebp]
	push	eax
	lea	ecx, DWORD PTR _appender$35487[ebp]
	call	?append@UnicodeStringAppender@icu_56@@QAEX_W@Z ; icu_56::UnicodeStringAppender::append
; Line 72
	jmp	SHORT $LN2@append@3
$LN1@append@3:
; Line 73
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _appender$35487[ebp]
	call	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
; Line 74
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@append@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN10@append@3:
	DD	1
	DD	$LN9@append@3
$LN9@append@3:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN7@append@3
$LN7@append@3:
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z$0:
	lea	ecx, DWORD PTR _appender$35487[ebp]
	jmp	??1UnicodeStringAppender@icu_56@@QAE@XZ	; icu_56::UnicodeStringAppender::~UnicodeStringAppender
__ehhandler$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?append@DigitAffix@icu_56@@QAEXPB_WHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?append@DigitAffix@icu_56@@QAEXPB_WHH@Z ENDP		; icu_56::DigitAffix::append
PUBLIC	??_C@_1FC@LJCDPMAK@?$AAf?$AAA?$AAf?$AAf?$AAi?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAA?$AAn?$AAn?$AAo?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4@ ; `string'
PUBLIC	??_C@_1FO@HLNNALKA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??format@DigitAffix@icu_56@@QBEAAVUnicodeString@3@AAVFieldPositionHandler@3@AAV43@@Z@4JA ; `icu_56::DigitAffix::format'::`2'::__LINE__Var
PUBLIC	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitAffix::format
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1FC@LJCDPMAK@?$AAf?$AAA?$AAf?$AAf?$AAi?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAA?$AAn?$AAn?$AAo?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4@
CONST	SEGMENT
??_C@_1FC@LJCDPMAK@?$AAf?$AAA?$AAf?$AAf?$AAi?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAA?$AAn?$AAn?$AAo?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4@ DB 'f'
	DB	00H, 'A', 00H, 'f', 00H, 'f', 00H, 'i', 00H, 'x', 00H, '.', 00H
	DB	'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '('
	DB	00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'f', 00H
	DB	'A', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, '.', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@HLNNALKA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FO@HLNNALKA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'd', 00H
	DB	'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'a', 00H, 'f', 00H, 'f'
	DB	00H, 'i', 00H, 'x', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??format@DigitAffix@icu_56@@QBEAAVUnicodeString@3@AAVFieldPositionHandler@3@AAV43@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??format@DigitAffix@icu_56@@QBEAAVUnicodeString@3@AAVFieldPositionHandler@3@AAV43@@Z@4JA DD 04dH ; `icu_56::DigitAffix::format'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z
_TEXT	SEGMENT
_id$35513 = -80						; size = 4
_i$35509 = -68						; size = 4
_lastIdStart$ = -56					; size = 4
_lastId$ = -44						; size = 4
_appendToStart$ = -32					; size = 4
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
_appendTo$ = 12						; size = 4
?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z PROC ; icu_56::DigitAffix::format, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 78
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 79
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN8@format
; Line 80
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN9@format
$LN8@format:
; Line 82
	mov	eax, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@format
; Line 83
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@format
$LN7@format:
; Line 85
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	edi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	je	SHORT $LN11@format
	mov	eax, DWORD PTR ?__LINE__Var@?1??format@DigitAffix@icu_56@@QBEAAVUnicodeString@3@AAVFieldPositionHandler@3@AAV43@@Z@4JA
	add	eax, 8
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FO@HLNNALKA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FC@LJCDPMAK@?$AAf?$AAA?$AAf?$AAf?$AAi?$AAx?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAA?$AAn?$AAn?$AAo?$AAt?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@format:
; Line 86
	mov	esi, esp
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _appendToStart$[ebp], eax
; Line 87
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	mov	DWORD PTR _lastId$[ebp], eax
; Line 88
	mov	DWORD PTR _lastIdStart$[ebp], 0
; Line 89
	mov	DWORD PTR _i$35509[ebp], 1
	jmp	SHORT $LN6@format
$LN5@format:
	mov	eax, DWORD PTR _i$35509[ebp]
	add	eax, 1
	mov	DWORD PTR _i$35509[ebp], eax
$LN6@format:
	mov	eax, DWORD PTR _i$35509[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	SHORT $LN4@format
; Line 90
	mov	esi, esp
	mov	eax, DWORD PTR _i$35509[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	DWORD PTR _id$35513[ebp], ecx
; Line 91
	mov	eax, DWORD PTR _id$35513[ebp]
	cmp	eax, DWORD PTR _lastId$[ebp]
	je	SHORT $LN3@format
; Line 92
	cmp	DWORD PTR _lastId$[ebp], 11		; 0000000bH
	je	SHORT $LN2@format
; Line 93
	mov	eax, DWORD PTR _appendToStart$[ebp]
	add	eax, DWORD PTR _i$35509[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _appendToStart$[ebp]
	add	ecx, DWORD PTR _lastIdStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lastId$[ebp]
	push	edx
	mov	eax, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@format:
; Line 95
	mov	eax, DWORD PTR _id$35513[ebp]
	mov	DWORD PTR _lastId$[ebp], eax
; Line 96
	mov	eax, DWORD PTR _i$35509[ebp]
	mov	DWORD PTR _lastIdStart$[ebp], eax
$LN3@format:
; Line 98
	jmp	SHORT $LN5@format
$LN4@format:
; Line 99
	cmp	DWORD PTR _lastId$[ebp], 11		; 0000000bH
	je	SHORT $LN1@format
; Line 100
	mov	eax, DWORD PTR _appendToStart$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _appendToStart$[ebp]
	add	ecx, DWORD PTR _lastIdStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lastId$[ebp]
	push	edx
	mov	eax, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@format:
; Line 102
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@format:
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ENDP ; icu_56::DigitAffix::format
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\csrucode.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_Unicode@icu_56@@6B@		; icu_56::CharsetRecog_Unicode::`vftable'
PUBLIC	??1CharsetRecog_Unicode@icu_56@@UAE@XZ		; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
PUBLIC	??_R4CharsetRecog_Unicode@icu_56@@6B@		; icu_56::CharsetRecog_Unicode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_Unicode@icu_56@@@8		; icu_56::CharsetRecog_Unicode `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_Unicode@icu_56@@8		; icu_56::CharsetRecog_Unicode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_Unicode@icu_56@@8		; icu_56::CharsetRecog_Unicode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8	; icu_56::CharsetRecog_Unicode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8	; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCharsetRecognizer@icu_56@@@8		; icu_56::CharsetRecognizer `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecognizer@icu_56@@8		; icu_56::CharsetRecognizer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecognizer@icu_56@@8		; icu_56::CharsetRecognizer::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1CharsetRecognizer@icu_56@@UAE@XZ:PROC	; icu_56::CharsetRecognizer::~CharsetRecognizer
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
EXTRN	?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ:PROC ; icu_56::CharsetRecognizer::getLanguage
EXTRN	??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z:PROC	; icu_56::CharsetRecog_Unicode::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\csrucode.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecognizer@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecognizer@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecognizer@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecognizer@icu_56@@8 DD 00H			; icu_56::CharsetRecognizer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CharsetRecognizer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecognizer@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecognizer@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecognizer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecognizer@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8 DD FLAT:??_R0?AVCharsetRecognizer@icu_56@@@8 ; icu_56::CharsetRecognizer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecognizer@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_Unicode@icu_56@@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_Unicode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_Unicode@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_Unicode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8 ; icu_56::CharsetRecog_Unicode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_Unicode@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_Unicode@icu_56@@8 DD 00H		; icu_56::CharsetRecog_Unicode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CharsetRecog_Unicode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_Unicode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_Unicode@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_Unicode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_Unicode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_Unicode@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_Unicode@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_Unicode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_Unicode@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_Unicode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_Unicode@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_Unicode@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_Unicode@icu_56@@6B@ ; icu_56::CharsetRecog_Unicode::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:__purecall
	DD	FLAT:??_ECharsetRecog_Unicode@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_Unicode@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_Unicode@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_Unicode@icu_56@@6B@
; Line 20
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecognizer@icu_56@@UAE@XZ	; icu_56::CharsetRecognizer::~CharsetRecognizer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_Unicode@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
_TEXT	ENDS
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z PROC		; icu_56::CharsetRecog_Unicode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_Unicode@icu_56@@UAE@XZ	; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_Unicode@icu_56@@UAEPAXI@Z ENDP		; icu_56::CharsetRecog_Unicode::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_UTF_16_BE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_16_BE::`vftable'
PUBLIC	??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE
PUBLIC	??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_16_BE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8	; icu_56::CharsetRecog_UTF_16_BE `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_UTF_16_BE@icu_56@@8		; icu_56::CharsetRecog_UTF_16_BE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_UTF_16_BE@icu_56@@8		; icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_UTF_16_BE::getName
PUBLIC	?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_16_BE::match
EXTRN	??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z:PROC ; icu_56::CharsetRecog_UTF_16_BE::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_UTF_16_BE@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_16_BE@icu_56@@8 ; icu_56::CharsetRecog_UTF_16_BE::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_UTF_16_BE@icu_56@@8 DD 00H		; icu_56::CharsetRecog_UTF_16_BE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_UTF_16_BE `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_UTF_16_BE@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_UTF_16_BE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_UTF_16_BE@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_UTF_16_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_UTF_16_BE@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_UTF_16_BE@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_UTF_16_BE@icu_56@@6B@ ; icu_56::CharsetRecog_UTF_16_BE::`vftable'
	DD	FLAT:?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
	DD	FLAT:??_ECharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_UTF_16_BE@icu_56@@6B@
; Line 25
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_Unicode@icu_56@@UAE@XZ	; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z PROC	; icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_16_BE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_UTF_16_BE@icu_56@@UAEPAXI@Z ENDP	; icu_56::CharsetRecog_UTF_16_BE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_08NLKHJAFK@UTF?916BE?$AA@			; `string'
;	COMDAT ??_C@_08NLKHJAFK@UTF?916BE?$AA@
CONST	SEGMENT
??_C@_08NLKHJAFK@UTF?916BE?$AA@ DB 'UTF-16BE', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ PROC	; icu_56::CharsetRecog_UTF_16_BE::getName, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, OFFSET ??_C@_08NLKHJAFK@UTF?916BE?$AA@
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@CharsetRecog_UTF_16_BE@icu_56@@UBEPBDXZ ENDP	; icu_56::CharsetRecog_UTF_16_BE::getName
_TEXT	ENDS
EXTRN	?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z:PROC ; icu_56::CharsetMatch::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
_TEXT	SEGMENT
tv67 = -280						; size = 4
_codeUnit$6582 = -80					; size = 2
_charIndex$6578 = -68					; size = 4
_bytesToCheck$ = -56					; size = 4
_length$ = -44						; size = 4
_confidence$ = -32					; size = 4
_input$ = -20						; size = 4
_this$ = -8						; size = 4
_textIn$ = 8						; size = 4
_results$ = 12						; size = 4
?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z PROC ; icu_56::CharsetRecog_UTF_16_BE::match, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _input$[ebp], ecx
; Line 56
	mov	DWORD PTR _confidence$[ebp], 10		; 0000000aH
; Line 57
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _length$[ebp], ecx
; Line 59
	cmp	DWORD PTR _length$[ebp], 30		; 0000001eH
	jle	SHORT $LN10@match
	mov	DWORD PTR tv67[ebp], 30			; 0000001eH
	jmp	SHORT $LN11@match
$LN10@match:
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv67[ebp], eax
$LN11@match:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _bytesToCheck$[ebp], ecx
; Line 60
	mov	DWORD PTR _charIndex$6578[ebp], 0
	jmp	SHORT $LN7@match
$LN6@match:
	mov	eax, DWORD PTR _charIndex$6578[ebp]
	add	eax, 2
	mov	DWORD PTR _charIndex$6578[ebp], eax
$LN7@match:
	mov	eax, DWORD PTR _bytesToCheck$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _charIndex$6578[ebp], eax
	jge	SHORT $LN5@match
; Line 61
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _charIndex$6578[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 8
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _charIndex$6578[ebp]
	movzx	eax, BYTE PTR [edx+1]
	or	ecx, eax
	mov	WORD PTR _codeUnit$6582[ebp], cx
; Line 62
	cmp	DWORD PTR _charIndex$6578[ebp], 0
	jne	SHORT $LN4@match
	movzx	eax, WORD PTR _codeUnit$6582[ebp]
	cmp	eax, 65279				; 0000feffH
	jne	SHORT $LN4@match
; Line 63
	mov	DWORD PTR _confidence$[ebp], 100	; 00000064H
; Line 64
	jmp	SHORT $LN5@match
$LN4@match:
; Line 66
	mov	eax, DWORD PTR _confidence$[ebp]
	push	eax
	movzx	ecx, WORD PTR _codeUnit$6582[ebp]
	push	ecx
	call	?adjustConfidence@icu_56@@YAH_WH@Z	; icu_56::adjustConfidence
	add	esp, 8
	mov	DWORD PTR _confidence$[ebp], eax
; Line 67
	cmp	DWORD PTR _confidence$[ebp], 0
	je	SHORT $LN2@match
	cmp	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jne	SHORT $LN3@match
$LN2@match:
; Line 68
	jmp	SHORT $LN5@match
$LN3@match:
; Line 70
	jmp	SHORT $LN6@match
$LN5@match:
; Line 71
	cmp	DWORD PTR _bytesToCheck$[ebp], 4
	jge	SHORT $LN1@match
	cmp	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jge	SHORT $LN1@match
; Line 72
	mov	DWORD PTR _confidence$[ebp], 0
$LN1@match:
; Line 74
	push	0
	push	0
	mov	eax, DWORD PTR _confidence$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textIn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _results$[ebp]
	call	?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z ; icu_56::CharsetMatch::set
; Line 75
	cmp	DWORD PTR _confidence$[ebp], 0
	setg	al
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?match@CharsetRecog_UTF_16_BE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ENDP ; icu_56::CharsetRecog_UTF_16_BE::match
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?adjustConfidence@icu_56@@YAH_WH@Z
_TEXT	SEGMENT
_codeUnit$ = 8						; size = 2
_confidence$ = 12					; size = 4
?adjustConfidence@icu_56@@YAH_WH@Z PROC			; icu_56::adjustConfidence, COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	movzx	eax, WORD PTR _codeUnit$[ebp]
	test	eax, eax
	jne	SHORT $LN8@adjustConf
; Line 40
	mov	eax, DWORD PTR _confidence$[ebp]
	sub	eax, 10					; 0000000aH
	mov	DWORD PTR _confidence$[ebp], eax
	jmp	SHORT $LN7@adjustConf
$LN8@adjustConf:
; Line 41
	movzx	eax, WORD PTR _codeUnit$[ebp]
	cmp	eax, 32					; 00000020H
	jl	SHORT $LN4@adjustConf
	movzx	eax, WORD PTR _codeUnit$[ebp]
	cmp	eax, 255				; 000000ffH
	jle	SHORT $LN5@adjustConf
$LN4@adjustConf:
	movzx	eax, WORD PTR _codeUnit$[ebp]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN7@adjustConf
$LN5@adjustConf:
; Line 42
	mov	eax, DWORD PTR _confidence$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _confidence$[ebp], eax
$LN7@adjustConf:
; Line 44
	cmp	DWORD PTR _confidence$[ebp], 0
	jge	SHORT $LN3@adjustConf
; Line 45
	mov	DWORD PTR _confidence$[ebp], 0
	jmp	SHORT $LN2@adjustConf
$LN3@adjustConf:
; Line 46
	cmp	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jle	SHORT $LN2@adjustConf
; Line 47
	mov	DWORD PTR _confidence$[ebp], 100	; 00000064H
$LN2@adjustConf:
; Line 49
	mov	eax, DWORD PTR _confidence$[ebp]
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?adjustConfidence@icu_56@@YAH_WH@Z ENDP			; icu_56::adjustConfidence
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_UTF_16_LE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_16_LE::`vftable'
PUBLIC	??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE
PUBLIC	??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_16_LE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8	; icu_56::CharsetRecog_UTF_16_LE `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_UTF_16_LE@icu_56@@8		; icu_56::CharsetRecog_UTF_16_LE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_UTF_16_LE@icu_56@@8		; icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_UTF_16_LE::getName
PUBLIC	?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_16_LE::match
EXTRN	??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z:PROC ; icu_56::CharsetRecog_UTF_16_LE::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_UTF_16_LE@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_16_LE@icu_56@@8 ; icu_56::CharsetRecog_UTF_16_LE::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_UTF_16_LE@icu_56@@8 DD 00H		; icu_56::CharsetRecog_UTF_16_LE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_UTF_16_LE `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_UTF_16_LE@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_UTF_16_LE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_UTF_16_LE@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_UTF_16_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_UTF_16_LE@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_UTF_16_LE@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_UTF_16_LE@icu_56@@6B@ ; icu_56::CharsetRecog_UTF_16_LE::`vftable'
	DD	FLAT:?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
	DD	FLAT:??_ECharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_UTF_16_LE@icu_56@@6B@
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_Unicode@icu_56@@UAE@XZ	; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z PROC	; icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_16_LE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_UTF_16_LE@icu_56@@UAEPAXI@Z ENDP	; icu_56::CharsetRecog_UTF_16_LE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_08NBDJLNFA@UTF?916LE?$AA@			; `string'
;	COMDAT ??_C@_08NBDJLNFA@UTF?916LE?$AA@
CONST	SEGMENT
??_C@_08NBDJLNFA@UTF?916LE?$AA@ DB 'UTF-16LE', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ PROC	; icu_56::CharsetRecog_UTF_16_LE::getName, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	eax, OFFSET ??_C@_08NBDJLNFA@UTF?916LE?$AA@
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@CharsetRecog_UTF_16_LE@icu_56@@UBEPBDXZ ENDP	; icu_56::CharsetRecog_UTF_16_LE::getName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
_TEXT	SEGMENT
tv67 = -280						; size = 4
_codeUnit$6611 = -80					; size = 2
_charIndex$6607 = -68					; size = 4
_bytesToCheck$ = -56					; size = 4
_length$ = -44						; size = 4
_confidence$ = -32					; size = 4
_input$ = -20						; size = 4
_this$ = -8						; size = 4
_textIn$ = 8						; size = 4
_results$ = 12						; size = 4
?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z PROC ; icu_56::CharsetRecog_UTF_16_LE::match, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _input$[ebp], ecx
; Line 91
	mov	DWORD PTR _confidence$[ebp], 10		; 0000000aH
; Line 92
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _length$[ebp], ecx
; Line 94
	cmp	DWORD PTR _length$[ebp], 30		; 0000001eH
	jle	SHORT $LN11@match@2
	mov	DWORD PTR tv67[ebp], 30			; 0000001eH
	jmp	SHORT $LN12@match@2
$LN11@match@2:
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR tv67[ebp], eax
$LN12@match@2:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _bytesToCheck$[ebp], ecx
; Line 95
	mov	DWORD PTR _charIndex$6607[ebp], 0
	jmp	SHORT $LN8@match@2
$LN7@match@2:
	mov	eax, DWORD PTR _charIndex$6607[ebp]
	add	eax, 2
	mov	DWORD PTR _charIndex$6607[ebp], eax
$LN8@match@2:
	mov	eax, DWORD PTR _bytesToCheck$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _charIndex$6607[ebp], eax
	jge	$LN6@match@2
; Line 96
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _charIndex$6607[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _charIndex$6607[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	WORD PTR _codeUnit$6611[ebp], cx
; Line 97
	cmp	DWORD PTR _charIndex$6607[ebp], 0
	jne	SHORT $LN5@match@2
	movzx	eax, WORD PTR _codeUnit$6611[ebp]
	cmp	eax, 65279				; 0000feffH
	jne	SHORT $LN5@match@2
; Line 98
	mov	DWORD PTR _confidence$[ebp], 100	; 00000064H
; Line 99
	cmp	DWORD PTR _length$[ebp], 4
	jl	SHORT $LN4@match@2
	mov	eax, DWORD PTR _input$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	jne	SHORT $LN4@match@2
	mov	eax, DWORD PTR _input$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	test	ecx, ecx
	jne	SHORT $LN4@match@2
; Line 100
	mov	DWORD PTR _confidence$[ebp], 0
$LN4@match@2:
; Line 102
	jmp	SHORT $LN6@match@2
$LN5@match@2:
; Line 104
	mov	eax, DWORD PTR _confidence$[ebp]
	push	eax
	movzx	ecx, WORD PTR _codeUnit$6611[ebp]
	push	ecx
	call	?adjustConfidence@icu_56@@YAH_WH@Z	; icu_56::adjustConfidence
	add	esp, 8
	mov	DWORD PTR _confidence$[ebp], eax
; Line 105
	cmp	DWORD PTR _confidence$[ebp], 0
	je	SHORT $LN2@match@2
	cmp	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jne	SHORT $LN3@match@2
$LN2@match@2:
; Line 106
	jmp	SHORT $LN6@match@2
$LN3@match@2:
; Line 108
	jmp	$LN7@match@2
$LN6@match@2:
; Line 109
	cmp	DWORD PTR _bytesToCheck$[ebp], 4
	jge	SHORT $LN1@match@2
	cmp	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jge	SHORT $LN1@match@2
; Line 110
	mov	DWORD PTR _confidence$[ebp], 0
$LN1@match@2:
; Line 112
	push	0
	push	0
	mov	eax, DWORD PTR _confidence$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textIn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _results$[ebp]
	call	?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z ; icu_56::CharsetMatch::set
; Line 113
	cmp	DWORD PTR _confidence$[ebp], 0
	setg	al
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?match@CharsetRecog_UTF_16_LE@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ENDP ; icu_56::CharsetRecog_UTF_16_LE::match
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_UTF_32@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32::`vftable'
PUBLIC	??1CharsetRecog_UTF_32@icu_56@@UAE@XZ		; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32
PUBLIC	??_R4CharsetRecog_UTF_32@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_UTF_32@icu_56@@@8		; icu_56::CharsetRecog_UTF_32 `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_UTF_32@icu_56@@8		; icu_56::CharsetRecog_UTF_32::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_UTF_32@icu_56@@8		; icu_56::CharsetRecog_UTF_32::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8	; icu_56::CharsetRecog_UTF_32::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ; icu_56::CharsetRecog_UTF_32::match
EXTRN	??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z:PROC	; icu_56::CharsetRecog_UTF_32::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_UTF_32@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_UTF_32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_UTF_32@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_UTF_32@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8 ; icu_56::CharsetRecog_UTF_32::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_UTF_32@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_UTF_32@icu_56@@8 DD 00H		; icu_56::CharsetRecog_UTF_32::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CharsetRecog_UTF_32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_UTF_32@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_UTF_32@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_UTF_32 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_UTF_32@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_UTF_32@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_UTF_32@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_UTF_32::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_UTF_32@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_UTF_32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_UTF_32@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_UTF_32@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_UTF_32@icu_56@@6B@ ; icu_56::CharsetRecog_UTF_32::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
	DD	FLAT:??_ECharsetRecog_UTF_32@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_UTF_32@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_UTF_32@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_UTF_32@icu_56@@6B@
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_Unicode@icu_56@@UAE@XZ	; icu_56::CharsetRecog_Unicode::~CharsetRecog_Unicode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_UTF_32@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z PROC		; icu_56::CharsetRecog_UTF_32::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_32@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_UTF_32@icu_56@@UAEPAXI@Z ENDP		; icu_56::CharsetRecog_UTF_32::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
_TEXT	SEGMENT
_ch$6640 = -104						; size = 4
_i$6636 = -92						; size = 4
_confidence$ = -80					; size = 4
_hasBOM$ = -65						; size = 1
_numInvalid$ = -56					; size = 4
_numValid$ = -44					; size = 4
_limit$ = -32						; size = 4
_input$ = -20						; size = 4
_this$ = -8						; size = 4
_textIn$ = 8						; size = 4
_results$ = 12						; size = 4
?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z PROC ; icu_56::CharsetRecog_UTF_32::match, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _input$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _textIn$[ebp]
	mov	eax, DWORD PTR [eax+24]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	shl	eax, 2
	mov	DWORD PTR _limit$[ebp], eax
; Line 125
	mov	DWORD PTR _numValid$[ebp], 0
; Line 126
	mov	DWORD PTR _numInvalid$[ebp], 0
; Line 127
	mov	BYTE PTR _hasBOM$[ebp], 0
; Line 128
	mov	DWORD PTR _confidence$[ebp], 0
; Line 130
	cmp	DWORD PTR _limit$[ebp], 0
	jle	SHORT $LN16@match@3
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 65279				; 0000feffH
	jne	SHORT $LN16@match@3
; Line 131
	mov	BYTE PTR _hasBOM$[ebp], 1
$LN16@match@3:
; Line 134
	mov	DWORD PTR _i$6636[ebp], 0
	jmp	SHORT $LN15@match@3
$LN14@match@3:
	mov	eax, DWORD PTR _i$6636[ebp]
	add	eax, 4
	mov	DWORD PTR _i$6636[ebp], eax
$LN15@match@3:
	mov	eax, DWORD PTR _i$6636[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN13@match@3
; Line 135
	mov	esi, esp
	mov	eax, DWORD PTR _i$6636[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$6640[ebp], eax
; Line 137
	cmp	DWORD PTR _ch$6640[ebp], 0
	jl	SHORT $LN11@match@3
	cmp	DWORD PTR _ch$6640[ebp], 1114111	; 0010ffffH
	jge	SHORT $LN11@match@3
	cmp	DWORD PTR _ch$6640[ebp], 55296		; 0000d800H
	jl	SHORT $LN12@match@3
	cmp	DWORD PTR _ch$6640[ebp], 57343		; 0000dfffH
	jg	SHORT $LN12@match@3
$LN11@match@3:
; Line 138
	mov	eax, DWORD PTR _numInvalid$[ebp]
	add	eax, 1
	mov	DWORD PTR _numInvalid$[ebp], eax
; Line 139
	jmp	SHORT $LN10@match@3
$LN12@match@3:
; Line 140
	mov	eax, DWORD PTR _numValid$[ebp]
	add	eax, 1
	mov	DWORD PTR _numValid$[ebp], eax
$LN10@match@3:
; Line 142
	jmp	SHORT $LN14@match@3
$LN13@match@3:
; Line 147
	movzx	eax, BYTE PTR _hasBOM$[ebp]
	test	eax, eax
	je	SHORT $LN9@match@3
	cmp	DWORD PTR _numInvalid$[ebp], 0
	jne	SHORT $LN9@match@3
; Line 148
	mov	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jmp	SHORT $LN8@match@3
$LN9@match@3:
; Line 149
	movzx	eax, BYTE PTR _hasBOM$[ebp]
	test	eax, eax
	je	SHORT $LN7@match@3
	mov	eax, DWORD PTR _numInvalid$[ebp]
	imul	eax, 10					; 0000000aH
	cmp	DWORD PTR _numValid$[ebp], eax
	jle	SHORT $LN7@match@3
; Line 150
	mov	DWORD PTR _confidence$[ebp], 80		; 00000050H
	jmp	SHORT $LN8@match@3
$LN7@match@3:
; Line 151
	cmp	DWORD PTR _numValid$[ebp], 3
	jle	SHORT $LN5@match@3
	cmp	DWORD PTR _numInvalid$[ebp], 0
	jne	SHORT $LN5@match@3
; Line 152
	mov	DWORD PTR _confidence$[ebp], 100	; 00000064H
	jmp	SHORT $LN8@match@3
$LN5@match@3:
; Line 153
	cmp	DWORD PTR _numValid$[ebp], 0
	jle	SHORT $LN3@match@3
	cmp	DWORD PTR _numInvalid$[ebp], 0
	jne	SHORT $LN3@match@3
; Line 154
	mov	DWORD PTR _confidence$[ebp], 80		; 00000050H
	jmp	SHORT $LN8@match@3
$LN3@match@3:
; Line 155
	mov	eax, DWORD PTR _numInvalid$[ebp]
	imul	eax, 10					; 0000000aH
	cmp	DWORD PTR _numValid$[ebp], eax
	jle	SHORT $LN8@match@3
; Line 157
	mov	DWORD PTR _confidence$[ebp], 25		; 00000019H
$LN8@match@3:
; Line 160
	push	0
	push	0
	mov	eax, DWORD PTR _confidence$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textIn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _results$[ebp]
	call	?set@CharsetMatch@icu_56@@QAEXPAVInputText@2@PBVCharsetRecognizer@2@HPBD2@Z ; icu_56::CharsetMatch::set
; Line 161
	cmp	DWORD PTR _confidence$[ebp], 0
	setg	al
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z ENDP ; icu_56::CharsetRecog_UTF_32::match
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_UTF_32_BE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32_BE::`vftable'
PUBLIC	??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE
PUBLIC	??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32_BE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8	; icu_56::CharsetRecog_UTF_32_BE `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_UTF_32_BE@icu_56@@8		; icu_56::CharsetRecog_UTF_32_BE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_UTF_32_BE@icu_56@@8		; icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_UTF_32_BE::getName
PUBLIC	?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z ; icu_56::CharsetRecog_UTF_32_BE::getChar
EXTRN	??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z:PROC ; icu_56::CharsetRecog_UTF_32_BE::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_UTF_32_BE@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_32_BE@icu_56@@8 ; icu_56::CharsetRecog_UTF_32_BE::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_UTF_32_BE@icu_56@@8 DD 00H		; icu_56::CharsetRecog_UTF_32_BE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_UTF_32_BE `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_UTF_32_BE@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_UTF_32_BE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_UTF_32_BE@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_UTF_32_BE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_UTF_32_BE@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_UTF_32_BE@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_UTF_32_BE@icu_56@@6B@ ; icu_56::CharsetRecog_UTF_32_BE::`vftable'
	DD	FLAT:?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
	DD	FLAT:??_ECharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z
	DD	FLAT:?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_UTF_32_BE@icu_56@@6B@
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_32@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z PROC	; icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_32_BE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_UTF_32_BE@icu_56@@UAEPAXI@Z ENDP	; icu_56::CharsetRecog_UTF_32_BE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_08COAFFEGN@UTF?932BE?$AA@			; `string'
;	COMDAT ??_C@_08COAFFEGN@UTF?932BE?$AA@
CONST	SEGMENT
??_C@_08COAFFEGN@UTF?932BE?$AA@ DB 'UTF-32BE', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ PROC	; icu_56::CharsetRecog_UTF_32_BE::getName, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 171
	mov	eax, OFFSET ??_C@_08COAFFEGN@UTF?932BE?$AA@
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@CharsetRecog_UTF_32_BE@icu_56@@UBEPBDXZ ENDP	; icu_56::CharsetRecog_UTF_32_BE::getName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
_index$ = 12						; size = 4
?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z PROC	; icu_56::CharsetRecog_UTF_32_BE::getChar, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _index$[ebp]
	movzx	eax, BYTE PTR [eax]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	or	eax, edx
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?getChar@CharsetRecog_UTF_32_BE@icu_56@@MBEHPBEH@Z ENDP	; icu_56::CharsetRecog_UTF_32_BE::getChar
_TEXT	ENDS
PUBLIC	??_7CharsetRecog_UTF_32_LE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32_LE::`vftable'
PUBLIC	??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE
PUBLIC	??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@		; icu_56::CharsetRecog_UTF_32_LE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8	; icu_56::CharsetRecog_UTF_32_LE `RTTI Type Descriptor'
PUBLIC	??_R3CharsetRecog_UTF_32_LE@icu_56@@8		; icu_56::CharsetRecog_UTF_32_LE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CharsetRecog_UTF_32_LE@icu_56@@8		; icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8	; icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ ; icu_56::CharsetRecog_UTF_32_LE::getName
PUBLIC	?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z ; icu_56::CharsetRecog_UTF_32_LE::getChar
EXTRN	??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z:PROC ; icu_56::CharsetRecog_UTF_32_LE::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8 DD FLAT:??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8 ; icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	SEGMENT
??_R2CharsetRecog_UTF_32_LE@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_32_LE@icu_56@@8 ; icu_56::CharsetRecog_UTF_32_LE::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_UTF_32@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecog_Unicode@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CharsetRecognizer@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	SEGMENT
??_R3CharsetRecog_UTF_32_LE@icu_56@@8 DD 00H		; icu_56::CharsetRecog_UTF_32_LE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CharsetRecog_UTF_32_LE `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCharsetRecog_UTF_32_LE@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@
rdata$r	SEGMENT
??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@ DD 00H		; icu_56::CharsetRecog_UTF_32_LE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCharsetRecog_UTF_32_LE@icu_56@@@8
	DD	FLAT:??_R3CharsetRecog_UTF_32_LE@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CharsetRecog_UTF_32_LE@icu_56@@6B@
CONST	SEGMENT
??_7CharsetRecog_UTF_32_LE@icu_56@@6B@ DD FLAT:??_R4CharsetRecog_UTF_32_LE@icu_56@@6B@ ; icu_56::CharsetRecog_UTF_32_LE::`vftable'
	DD	FLAT:?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ
	DD	FLAT:?getLanguage@CharsetRecognizer@icu_56@@UBEPBDXZ
	DD	FLAT:?match@CharsetRecog_UTF_32@icu_56@@UBECPAVInputText@2@PAVCharsetMatch@2@@Z
	DD	FLAT:??_ECharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z
	DD	FLAT:?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ PROC		; icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CharsetRecog_UTF_32_LE@icu_56@@6B@
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_32@icu_56@@UAE@XZ	; icu_56::CharsetRecog_UTF_32::~CharsetRecog_UTF_32
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ ENDP		; icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z PROC	; icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CharsetRecog_UTF_32_LE@icu_56@@UAE@XZ ; icu_56::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCharsetRecog_UTF_32_LE@icu_56@@UAEPAXI@Z ENDP	; icu_56::CharsetRecog_UTF_32_LE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_08CEJLHJGH@UTF?932LE?$AA@			; `string'
;	COMDAT ??_C@_08CEJLHJGH@UTF?932LE?$AA@
CONST	SEGMENT
??_C@_08CEJLHJGH@UTF?932LE?$AA@ DB 'UTF-32LE', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ PROC	; icu_56::CharsetRecog_UTF_32_LE::getName, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	mov	eax, OFFSET ??_C@_08CEJLHJGH@UTF?932LE?$AA@
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getName@CharsetRecog_UTF_32_LE@icu_56@@UBEPBDXZ ENDP	; icu_56::CharsetRecog_UTF_32_LE::getName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
_index$ = 12						; size = 4
?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z PROC	; icu_56::CharsetRecog_UTF_32_LE::getChar, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _index$[ebp]
	movzx	eax, BYTE PTR [eax+3]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
; Line 194
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?getChar@CharsetRecog_UTF_32_LE@icu_56@@MBEHPBEH@Z ENDP	; icu_56::CharsetRecog_UTF_32_LE::getChar
_TEXT	ENDS
END

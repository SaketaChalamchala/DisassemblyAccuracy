; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\decimfmtimpl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T50782 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T50782[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T50782[ebp]
	or	ecx, 1
	mov	DWORD PTR $T50782[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T37633 = -312						; size = 64
_i$37628 = -45						; size = 1
_sym$37626 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$37626[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$37626[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$37628[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$37628[ebp]
	add	al, 1
	mov	BYTE PTR _i$37628[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$37628[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$37626[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$37626[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$37626[ebp]
	push	eax
	lea	ecx, DWORD PTR $T37633[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$37628[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T50799 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T50799[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T50799[ebp]
	or	ecx, 1
	mov	DWORD PTR $T50799[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	?countChar32@DigitAffix@icu_56@@QBEHXZ		; icu_56::DigitAffix::countChar32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@DigitAffix@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@DigitAffix@icu_56@@QBEHXZ PROC		; icu_56::DigitAffix::countChar32, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitaffix.h
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@DigitAffix@icu_56@@QBEHXZ ENDP		; icu_56::DigitAffix::countChar32
_TEXT	ENDS
PUBLIC	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::DigitAffix::toString, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::DigitAffix::toString
_TEXT	ENDS
PUBLIC	?equals@DigitAffix@icu_56@@QBECABV12@@Z		; icu_56::DigitAffix::equals
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitAffix::equals, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv76[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitAffix::equals
_TEXT	ENDS
PUBLIC	??1DigitAffix@icu_56@@QAE@XZ			; icu_56::DigitAffix::~DigitAffix
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffix@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0
__ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DigitAffix@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffix@icu_56@@QAE@XZ PROC			; icu_56::DigitAffix::~DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DigitAffix@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffix@icu_56@@QAE@XZ ENDP			; icu_56::DigitAffix::~DigitAffix
PUBLIC	??0DigitAffix@icu_56@@QAE@ABV01@@Z		; icu_56::DigitAffix::DigitAffix
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffix@icu_56@@QAE@ABV01@@Z PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::DigitAffix::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitAffix::operator=
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\pluralaffix.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z	; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherVariant$ = 8					; size = 4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z PROC	; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP	; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
PUBLIC	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralAffix::getOtherVariant, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralAffix::getOtherVariant
_TEXT	ENDS
PUBLIC	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
PUBLIC	?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z	; icu_56::PluralAffix::eq
PUBLIC	?equals@PluralAffix@icu_56@@QBECABV12@@Z	; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@PluralAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@PluralAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::PluralAffix::equals, COMDAT
; _this$ = ecx
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	push	OFFSET ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ; icu_56::PluralAffix::eq
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@PluralAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z PROC	; icu_56::PluralAffix::eq, COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	call	?equals@DigitAffix@icu_56@@QBECABV12@@Z	; icu_56::DigitAffix::equals
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ENDP	; icu_56::PluralAffix::eq
_TEXT	ENDS
PUBLIC	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	??1PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::~PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::~PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::~PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABV01@@Z		; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAffix@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
PUBLIC	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PluralAffix::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PluralAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PluralAffix::operator=
_TEXT	ENDS
PUBLIC	?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::CurrencyAffixInfo::getSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::CurrencyAffixInfo::getSymbol, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\affixpatternparser.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getSymbol
_TEXT	ENDS
PUBLIC	?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::CurrencyAffixInfo::getISO
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::CurrencyAffixInfo::getISO, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getISO
_TEXT	ENDS
PUBLIC	?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ ; icu_56::CurrencyAffixInfo::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ PROC ; icu_56::CurrencyAffixInfo::getLong, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getLong
_TEXT	ENDS
PUBLIC	?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::CurrencyAffixInfo::setSymbol, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	esi, esp
	mov	eax, DWORD PTR _symbol$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+280], 0
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::CurrencyAffixInfo::setSymbol
_TEXT	ENDS
PUBLIC	?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setISO
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iso$ = 8						; size = 4
?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::CurrencyAffixInfo::setISO, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	esi, esp
	mov	eax, DWORD PTR _iso$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+280], 0
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::CurrencyAffixInfo::setISO
_TEXT	ENDS
PUBLIC	?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z	; icu_56::CurrencyAffixInfo::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv88 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z PROC	; icu_56::CurrencyAffixInfo::equals, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@2
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@2
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+280]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+280]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@2
	mov	BYTE PTR tv88[ebp], 1
	jmp	SHORT $LN4@equals@2
$LN3@equals@2:
	mov	BYTE PTR tv88[ebp], 0
$LN4@equals@2:
	mov	al, BYTE PTR tv88[ebp]
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z ENDP	; icu_56::CurrencyAffixInfo::equals
_TEXT	ENDS
PUBLIC	?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ	; icu_56::CurrencyAffixInfo::isDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ PROC	; icu_56::CurrencyAffixInfo::isDefault, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+280]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ ENDP	; icu_56::CurrencyAffixInfo::isDefault
_TEXT	ENDS
PUBLIC	??1CurrencyAffixInfo@icu_56@@QAE@XZ		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CurrencyAffixInfo@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$1
__ehfuncinfo$??1CurrencyAffixInfo@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CurrencyAffixInfo@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CurrencyAffixInfo@icu_56@@QAE@XZ PROC		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1CurrencyAffixInfo@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CurrencyAffixInfo@icu_56@@QAE@XZ ENDP		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo
PUBLIC	??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z	; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CurrencyAffixInfo::CurrencyAffixInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+280]
	mov	BYTE PTR [eax+280], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
PUBLIC	??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CurrencyAffixInfo::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CurrencyAffixInfo::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+280]
	mov	BYTE PTR [eax+280], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CurrencyAffixInfo::operator=
_TEXT	ENDS
PUBLIC	??0AffixPattern@icu_56@@QAE@XZ			; icu_56::AffixPattern::AffixPattern
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPattern@icu_56@@QAE@XZ$0
__ehfuncinfo$??0AffixPattern@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AffixPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0AffixPattern@icu_56@@QAE@XZ PROC			; icu_56::AffixPattern::AffixPattern, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+129], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+130], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 143
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPattern@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPattern@icu_56@@QAE@XZ ENDP			; icu_56::AffixPattern::AffixPattern
PUBLIC	?usesCurrency@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesCurrency@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesCurrency@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesCurrency, COMDAT
; _this$ = ecx
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+128]
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesCurrency@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesCurrency
_TEXT	ENDS
PUBLIC	?usesPercent@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesPercent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesPercent@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesPercent@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesPercent, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+129]
; Line 191
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesPercent@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesPercent
_TEXT	ENDS
PUBLIC	?usesPermill@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesPermill
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesPermill@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesPermill@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesPermill, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+130]
; Line 195
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesPermill@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesPermill
_TEXT	ENDS
PUBLIC	?countChar32@AffixPattern@icu_56@@QBEHXZ	; icu_56::AffixPattern::countChar32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@AffixPattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@AffixPattern@icu_56@@QBEHXZ PROC		; icu_56::AffixPattern::countChar32, COMDAT
; _this$ = ecx
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+132]
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@AffixPattern@icu_56@@QBEHXZ ENDP		; icu_56::AffixPattern::countChar32
_TEXT	ENDS
PUBLIC	?equals@AffixPattern@icu_56@@QBECABV12@@Z	; icu_56::AffixPattern::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@AffixPattern@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv94 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@AffixPattern@icu_56@@QBECABV12@@Z PROC		; icu_56::AffixPattern::equals, COMDAT
; _this$ = ecx
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 278
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@3
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+128]
	mov	eax, DWORD PTR _other$[ebp]
	movsx	ecx, BYTE PTR [eax+128]
	cmp	edx, ecx
	jne	SHORT $LN3@equals@3
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+129]
	mov	ecx, DWORD PTR _other$[ebp]
	movsx	edx, BYTE PTR [ecx+129]
	cmp	eax, edx
	jne	SHORT $LN3@equals@3
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+130]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+130]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+132]
	cmp	eax, DWORD PTR [edx+132]
	jne	SHORT $LN3@equals@3
	mov	BYTE PTR tv94[ebp], 1
	jmp	SHORT $LN4@equals@3
$LN3@equals@3:
	mov	BYTE PTR tv94[ebp], 0
$LN4@equals@3:
	mov	al, BYTE PTR tv94[ebp]
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@AffixPattern@icu_56@@QBECABV12@@Z ENDP		; icu_56::AffixPattern::equals
_TEXT	ENDS
PUBLIC	??1AffixPattern@icu_56@@QAE@XZ			; icu_56::AffixPattern::~AffixPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AffixPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AffixPattern@icu_56@@QAE@XZ$0
__ehfuncinfo$??1AffixPattern@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AffixPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AffixPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AffixPattern@icu_56@@QAE@XZ PROC			; icu_56::AffixPattern::~AffixPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AffixPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AffixPattern@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1AffixPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AffixPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AffixPattern@icu_56@@QAE@XZ ENDP			; icu_56::AffixPattern::~AffixPattern
PUBLIC	??0AffixPattern@icu_56@@QAE@ABV01@@Z		; icu_56::AffixPattern::AffixPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPattern@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPattern@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0AffixPattern@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPattern@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0AffixPattern@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AffixPattern::AffixPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+128], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+129]
	mov	BYTE PTR [eax+129], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+130]
	mov	BYTE PTR [eax+130], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPattern@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPattern@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPattern@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AffixPattern::AffixPattern
PUBLIC	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::AffixPattern::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::AffixPattern::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+128], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+129]
	mov	BYTE PTR [eax+129], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+130]
	mov	BYTE PTR [eax+130], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::AffixPattern::operator=
_TEXT	ENDS
PUBLIC	??0AffixPatternIterator@icu_56@@QAE@XZ		; icu_56::AffixPatternIterator::AffixPatternIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0AffixPatternIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0AffixPatternIterator@icu_56@@QAE@XZ PROC		; icu_56::AffixPatternIterator::AffixPatternIterator, COMDAT
; _this$ = ecx
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0AffixPatternIterator@icu_56@@QAE@XZ ENDP		; icu_56::AffixPatternIterator::AffixPatternIterator
_TEXT	ENDS
PUBLIC	?equals@AffixPatternParser@icu_56@@QBECABV12@@Z	; icu_56::AffixPatternParser::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@AffixPatternParser@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv90 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@AffixPatternParser@icu_56@@QBECABV12@@Z PROC	; icu_56::AffixPatternParser::equals, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@4
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@4
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@4
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@4
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN4@equals@4
$LN3@equals@4:
	mov	BYTE PTR tv90[ebp], 0
$LN4@equals@4:
	mov	al, BYTE PTR tv90[ebp]
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@AffixPatternParser@icu_56@@QBECABV12@@Z ENDP	; icu_56::AffixPatternParser::equals
_TEXT	ENDS
PUBLIC	??1AffixPatternParser@icu_56@@QAE@XZ		; icu_56::AffixPatternParser::~AffixPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AffixPatternParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$2
__ehfuncinfo$??1AffixPatternParser@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1AffixPatternParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AffixPatternParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AffixPatternParser@icu_56@@QAE@XZ PROC		; icu_56::AffixPatternParser::~AffixPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AffixPatternParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1AffixPatternParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AffixPatternParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AffixPatternParser@icu_56@@QAE@XZ ENDP		; icu_56::AffixPatternParser::~AffixPatternParser
PUBLIC	??0AffixPatternParser@icu_56@@QAE@ABV01@@Z	; icu_56::AffixPatternParser::AffixPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0AffixPatternParser@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AffixPatternParser::AffixPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPatternParser@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AffixPatternParser::AffixPatternParser
PUBLIC	??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::AffixPatternParser::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::AffixPatternParser::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::AffixPatternParser::operator=
_TEXT	ENDS
PUBLIC	??0DigitAffixesAndPadding@icu_56@@QAE@XZ	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitaffixesandpadding.h
xdata$x	SEGMENT
__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$2
__ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffixesAndPadding@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DigitAffixesAndPadding@icu_56@@QAE@XZ PROC		; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+608], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+612], 42			; 0000002aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+616], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffixesAndPadding@icu_56@@QAE@XZ ENDP		; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
PUBLIC	?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z ; icu_56::DigitAffixesAndPadding::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv131 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z PROC ; icu_56::DigitAffixesAndPadding::equals, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@5
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 152				; 00000098H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	eax, al
	test	eax, eax
	je	$LN3@equals@5
	mov	ecx, DWORD PTR _rhs$[ebp]
	add	ecx, 304				; 00000130H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@5
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+608]
	cmp	ecx, DWORD PTR [eax+608]
	jne	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+616]
	cmp	ecx, DWORD PTR [eax+616]
	jne	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+612]
	cmp	ecx, DWORD PTR [eax+612]
	jne	SHORT $LN3@equals@5
	mov	BYTE PTR tv131[ebp], 1
	jmp	SHORT $LN4@equals@5
$LN3@equals@5:
	mov	BYTE PTR tv131[ebp], 0
$LN4@equals@5:
	mov	al, BYTE PTR tv131[ebp]
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z ENDP ; icu_56::DigitAffixesAndPadding::equals
_TEXT	ENDS
PUBLIC	??1DigitAffixesAndPadding@icu_56@@QAE@XZ	; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffixesAndPadding@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$2
__ehfuncinfo$??1DigitAffixesAndPadding@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffixesAndPadding@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffixesAndPadding@icu_56@@QAE@XZ PROC		; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??1DigitAffixesAndPadding@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffixesAndPadding@icu_56@@QAE@XZ ENDP		; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding
PUBLIC	??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z PROC	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 304				; 00000130H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+608]
	mov	DWORD PTR [eax+608], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+612]
	mov	DWORD PTR [eax+612], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+616]
	mov	DWORD PTR [eax+616], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
PUBLIC	??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitAffixesAndPadding::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::DigitAffixesAndPadding::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 304				; 00000130H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+608]
	mov	DWORD PTR [eax+608], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+612]
	mov	DWORD PTR [eax+612], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+616]
	mov	DWORD PTR [eax+616], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::DigitAffixesAndPadding::operator=
_TEXT	ENDS
PUBLIC	??0DigitFormatterOptions@icu_56@@QAE@XZ		; icu_56::DigitFormatterOptions::DigitFormatterOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitFormatterOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitFormatterOptions@icu_56@@QAE@XZ PROC		; icu_56::DigitFormatterOptions::DigitFormatterOptions, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitformatter.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitFormatterOptions@icu_56@@QAE@XZ ENDP		; icu_56::DigitFormatterOptions::DigitFormatterOptions
_TEXT	ENDS
PUBLIC	?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z PROC	; icu_56::DigitFormatterOptions::equals, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ENDP	; icu_56::DigitFormatterOptions::equals
_TEXT	ENDS
PUBLIC	?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ ; icu_56::DigitFormatterOptions::isFastFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ PROC ; icu_56::DigitFormatterOptions::isFastFormattable, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	sete	al
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ ENDP ; icu_56::DigitFormatterOptions::isFastFormattable
_TEXT	ENDS
PUBLIC	??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitFormatterOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DigitFormatterOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DigitFormatterOptions::operator=
_TEXT	ENDS
PUBLIC	??0DigitFormatterIntOptions@icu_56@@QAE@XZ	; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitFormatterIntOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitFormatterIntOptions@icu_56@@QAE@XZ PROC		; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitFormatterIntOptions@icu_56@@QAE@XZ ENDP		; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
_TEXT	ENDS
PUBLIC	?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterIntOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z PROC ; icu_56::DigitFormatterIntOptions::equals, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ENDP ; icu_56::DigitFormatterIntOptions::equals
_TEXT	ENDS
PUBLIC	??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitFormatterIntOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::DigitFormatterIntOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::DigitFormatterIntOptions::operator=
_TEXT	ENDS
PUBLIC	?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::SciFormatterOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z PROC	; icu_56::SciFormatterOptions::equals, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterOptions::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@6
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterIntOptions::equals
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@6
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals@6
$LN3@equals@6:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals@6:
	mov	al, BYTE PTR tv76[ebp]
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z ENDP	; icu_56::SciFormatterOptions::equals
_TEXT	ENDS
PUBLIC	??0SciFormatterOptions@icu_56@@QAE@XZ		; icu_56::SciFormatterOptions::SciFormatterOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SciFormatterOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SciFormatterOptions@icu_56@@QAE@XZ PROC		; icu_56::SciFormatterOptions::SciFormatterOptions, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitFormatterOptions@icu_56@@QAE@XZ	; icu_56::DigitFormatterOptions::DigitFormatterOptions
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	??0DigitFormatterIntOptions@icu_56@@QAE@XZ ; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SciFormatterOptions@icu_56@@QAE@XZ ENDP		; icu_56::SciFormatterOptions::SciFormatterOptions
_TEXT	ENDS
PUBLIC	??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::SciFormatterOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::SciFormatterOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::SciFormatterOptions::operator=
_TEXT	ENDS
PUBLIC	?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitFormatter::formatNaN
EXTRN	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z:PROC ; icu_56::DigitAffix::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
_appendTo$ = 12						; size = 4
?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z PROC ; icu_56::DigitFormatter::formatNaN, COMDAT
; _this$ = ecx
; Line 246
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _appendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitAffix::format
; Line 248
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ENDP ; icu_56::DigitFormatter::formatNaN
_TEXT	ENDS
PUBLIC	?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ ; icu_56::DigitFormatter::countChar32ForNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ PROC	; icu_56::DigitFormatter::countChar32ForNaN, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	ecx, eax
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ ENDP	; icu_56::DigitFormatter::countChar32ForNaN
_TEXT	ENDS
PUBLIC	?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitFormatter::formatInfinity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
_appendTo$ = 12						; size = 4
?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z PROC ; icu_56::DigitFormatter::formatInfinity, COMDAT
; _this$ = ecx
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 257
	mov	eax, DWORD PTR _appendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitAffix::format
; Line 258
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ENDP ; icu_56::DigitFormatter::formatInfinity
_TEXT	ENDS
PUBLIC	?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ ; icu_56::DigitFormatter::countChar32ForInfinity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ PROC ; icu_56::DigitFormatter::countChar32ForInfinity, COMDAT
; _this$ = ecx
; Line 260
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 261
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	ecx, eax
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ ENDP ; icu_56::DigitFormatter::countChar32ForInfinity
_TEXT	ENDS
PUBLIC	??1DigitFormatter@icu_56@@QAE@XZ		; icu_56::DigitFormatter::~DigitFormatter
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DigitFormatter@icu_56@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1DigitFormatter@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DigitFormatter@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitFormatter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitFormatter@icu_56@@QAE@XZ PROC			; icu_56::DigitFormatter::~DigitFormatter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitFormatter@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??1DigitFormatter@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitFormatter@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitFormatter@icu_56@@QAE@XZ ENDP			; icu_56::DigitFormatter::~DigitFormatter
PUBLIC	??0DigitFormatter@icu_56@@QAE@ABV01@@Z		; icu_56::DigitFormatter::DigitFormatter
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DigitFormatter@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DigitFormatter@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitFormatter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitFormatter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::DigitFormatter::DigitFormatter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 10					; 0000000aH
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 40					; 00000028H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 104				; 00000068H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 168				; 000000a8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 232				; 000000e8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+552]
	mov	BYTE PTR [eax+552], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 556				; 0000022cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitFormatter@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitFormatter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::DigitFormatter::DigitFormatter
PUBLIC	??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitFormatter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$39930 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DigitFormatter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _$S1$39930[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$39930[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$39930[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$39930[ebp], 10		; 0000000aH
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _$S1$39930[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S1$39930[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 40					; 00000028H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 104				; 00000068H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 168				; 000000a8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 232				; 000000e8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+552]
	mov	BYTE PTR [eax+552], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 556				; 0000022cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DigitFormatter::operator=
_TEXT	ENDS
PUBLIC	??0DigitGrouping@icu_56@@QAE@XZ			; icu_56::DigitGrouping::DigitGrouping
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitGrouping@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitGrouping@icu_56@@QAE@XZ PROC			; icu_56::DigitGrouping::DigitGrouping, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitgrouping.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitGrouping@icu_56@@QAE@XZ ENDP			; icu_56::DigitGrouping::DigitGrouping
_TEXT	ENDS
PUBLIC	?equals@DigitGrouping@icu_56@@QBECABV12@@Z	; icu_56::DigitGrouping::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitGrouping@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv71 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitGrouping@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitGrouping::equals, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@equals@7
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@equals@7
$LN3@equals@7:
	mov	BYTE PTR tv71[ebp], 0
$LN4@equals@7:
	mov	al, BYTE PTR tv71[ebp]
; Line 39
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitGrouping@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitGrouping::equals
_TEXT	ENDS
PUBLIC	?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ	; icu_56::DigitGrouping::isGroupingUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ PROC	; icu_56::DigitGrouping::isGroupingUsed, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ ENDP	; icu_56::DigitGrouping::isGroupingUsed
_TEXT	ENDS
PUBLIC	??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitGrouping::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitGrouping::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitGrouping::operator=
_TEXT	ENDS
PUBLIC	??0DigitInterval@icu_56@@QAE@XZ			; icu_56::DigitInterval::DigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitInterval@icu_56@@QAE@XZ PROC			; icu_56::DigitInterval::DigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitinterval.h
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitInterval@icu_56@@QAE@XZ ENDP			; icu_56::DigitInterval::DigitInterval
_TEXT	ENDS
PUBLIC	?clear@DigitInterval@icu_56@@QAEXXZ		; icu_56::DigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@DigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@DigitInterval@icu_56@@QAEXXZ PROC		; icu_56::DigitInterval::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@DigitInterval@icu_56@@QAEXXZ ENDP		; icu_56::DigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@DigitInterval@icu_56@@QBECABV12@@Z	; icu_56::DigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitInterval@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitInterval::equals, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@8
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals@8
$LN3@equals@8:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals@8:
	mov	al, BYTE PTR tv68[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitInterval@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitInterval::equals
_TEXT	ENDS
PUBLIC	?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_smallest$ = 8						; size = 4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	xor	eax, eax
	cmp	DWORD PTR _smallest$[ebp], 0
	setge	al
	sub	eax, 1
	and	eax, DWORD PTR _smallest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_largest$ = 8						; size = 4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	xor	eax, eax
	cmp	DWORD PTR _largest$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _largest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getIntDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getIntDigitCount, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getIntDigitCount
_TEXT	ENDS
PUBLIC	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getFracDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getFracDigitCount, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -2147483648		; 80000000H
	jne	SHORT $LN3@getFracDig
	mov	DWORD PTR tv68[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@getFracDig
$LN3@getFracDig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	neg	edx
	mov	DWORD PTR tv68[ebp], edx
$LN4@getFracDig:
	mov	eax, DWORD PTR tv68[ebp]
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getFracDigitCount
_TEXT	ENDS
PUBLIC	?length@DigitInterval@icu_56@@QBEHXZ		; icu_56::DigitInterval::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@DigitInterval@icu_56@@QBEHXZ PROC		; icu_56::DigitInterval::length, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+4]
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@DigitInterval@icu_56@@QBEHXZ ENDP		; icu_56::DigitInterval::length
_TEXT	ENDS
PUBLIC	?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitInterval::operator=
_TEXT	ENDS
PUBLIC	??0SignificantDigitInterval@icu_56@@QAE@XZ	; icu_56::SignificantDigitInterval::SignificantDigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SignificantDigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SignificantDigitInterval@icu_56@@QAE@XZ PROC		; icu_56::SignificantDigitInterval::SignificantDigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\significantdigitinterval.h
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SignificantDigitInterval@icu_56@@QAE@XZ ENDP		; icu_56::SignificantDigitInterval::SignificantDigitInterval
_TEXT	ENDS
PUBLIC	?clear@SignificantDigitInterval@icu_56@@QAEXXZ	; icu_56::SignificantDigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@SignificantDigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@SignificantDigitInterval@icu_56@@QAEXXZ PROC	; icu_56::SignificantDigitInterval::clear, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@SignificantDigitInterval@icu_56@@QAEXXZ ENDP	; icu_56::SignificantDigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ; icu_56::SignificantDigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z PROC ; icu_56::SignificantDigitInterval::equals, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@9
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals@9
$LN3@equals@9:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals@9:
	mov	al, BYTE PTR tv68[ebp]
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ENDP ; icu_56::SignificantDigitInterval::equals
_TEXT	ENDS
PUBLIC	?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z PROC	; icu_56::SignificantDigitInterval::setMax, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	cmp	DWORD PTR _count$[ebp], 0
	jg	SHORT $LN3@setMax
	mov	DWORD PTR tv65[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@setMax
$LN3@setMax:
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN4@setMax:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR [ecx], edx
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ENDP	; icu_56::SignificantDigitInterval::setMax
_TEXT	ENDS
PUBLIC	?getMax@SignificantDigitInterval@icu_56@@QBEHXZ	; icu_56::SignificantDigitInterval::getMax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMax@SignificantDigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMax@SignificantDigitInterval@icu_56@@QBEHXZ PROC	; icu_56::SignificantDigitInterval::getMax, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMax@SignificantDigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::SignificantDigitInterval::getMax
_TEXT	ENDS
PUBLIC	?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMin
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z PROC	; icu_56::SignificantDigitInterval::setMin, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	xor	eax, eax
	cmp	DWORD PTR _count$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ENDP	; icu_56::SignificantDigitInterval::setMin
_TEXT	ENDS
PUBLIC	?getMin@SignificantDigitInterval@icu_56@@QBEHXZ	; icu_56::SignificantDigitInterval::getMin
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMin@SignificantDigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMin@SignificantDigitInterval@icu_56@@QBEHXZ PROC	; icu_56::SignificantDigitInterval::getMin, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMin@SignificantDigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::SignificantDigitInterval::getMin
_TEXT	ENDS
PUBLIC	?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ ; icu_56::SignificantDigitInterval::isNoConstraints
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ PROC ; icu_56::SignificantDigitInterval::isNoConstraints, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@isNoConstr
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 2147483647		; 7fffffffH
	jne	SHORT $LN3@isNoConstr
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@isNoConstr
$LN3@isNoConstr:
	mov	BYTE PTR tv67[ebp], 0
$LN4@isNoConstr:
	mov	al, BYTE PTR tv67[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ ENDP ; icu_56::SignificantDigitInterval::isNoConstraints
_TEXT	ENDS
PUBLIC	??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::SignificantDigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::SignificantDigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::SignificantDigitInterval::operator=
_TEXT	ENDS
PUBLIC	?equals@FixedPrecision@icu_56@@QBECABV12@@Z	; icu_56::FixedPrecision::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@FixedPrecision@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv135 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@FixedPrecision@icu_56@@QBECABV12@@Z PROC	; icu_56::FixedPrecision::equals, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\precision.h
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@DigitInterval@icu_56@@QBECABV12@@Z ; icu_56::DigitInterval::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@10
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?equals@DigitInterval@icu_56@@QBECABV12@@Z ; icu_56::DigitInterval::equals
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@10
	mov	ecx, DWORD PTR _rhs$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ; icu_56::SignificantDigitInterval::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@10
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@10
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+136]
	mov	ecx, DWORD PTR _rhs$[ebp]
	movsx	edx, BYTE PTR [ecx+136]
	cmp	eax, edx
	jne	SHORT $LN3@equals@10
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx+137]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+140]
	cmp	eax, DWORD PTR [edx+140]
	jne	SHORT $LN3@equals@10
	mov	BYTE PTR tv135[ebp], 1
	jmp	SHORT $LN4@equals@10
$LN3@equals@10:
	mov	BYTE PTR tv135[ebp], 0
$LN4@equals@10:
	mov	al, BYTE PTR tv135[ebp]
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@FixedPrecision@icu_56@@QBECABV12@@Z ENDP	; icu_56::FixedPrecision::equals
_TEXT	ENDS
PUBLIC	??1FixedPrecision@icu_56@@QAE@XZ		; icu_56::FixedPrecision::~FixedPrecision
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1FixedPrecision@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FixedPrecision@icu_56@@QAE@XZ PROC			; icu_56::FixedPrecision::~FixedPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FixedPrecision@icu_56@@QAE@XZ ENDP			; icu_56::FixedPrecision::~FixedPrecision
_TEXT	ENDS
PUBLIC	??0FixedPrecision@icu_56@@QAE@ABV01@@Z		; icu_56::FixedPrecision::FixedPrecision
EXTRN	??0DigitList@icu_56@@QAE@ABV01@@Z:PROC		; icu_56::DigitList::DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedPrecision@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FixedPrecision@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FixedPrecision::FixedPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR [eax+140], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FixedPrecision@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FixedPrecision::FixedPrecision
_TEXT	ENDS
PUBLIC	??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FixedPrecision::operator=
EXTRN	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::DigitList::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FixedPrecision::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR [eax+140], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FixedPrecision::operator=
_TEXT	ENDS
PUBLIC	?equals@ScientificPrecision@icu_56@@QBECABV12@@Z ; icu_56::ScientificPrecision::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@ScientificPrecision@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@ScientificPrecision@icu_56@@QBECABV12@@Z PROC	; icu_56::ScientificPrecision::equals, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 271
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@FixedPrecision@icu_56@@QBECABV12@@Z ; icu_56::FixedPrecision::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@11
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	cmp	ecx, DWORD PTR [eax+144]
	jne	SHORT $LN3@equals@11
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN4@equals@11
$LN3@equals@11:
	mov	BYTE PTR tv72[ebp], 0
$LN4@equals@11:
	mov	al, BYTE PTR tv72[ebp]
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@ScientificPrecision@icu_56@@QBECABV12@@Z ENDP	; icu_56::ScientificPrecision::equals
_TEXT	ENDS
PUBLIC	??1ScientificPrecision@icu_56@@QAE@XZ		; icu_56::ScientificPrecision::~ScientificPrecision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ScientificPrecision@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ScientificPrecision@icu_56@@QAE@XZ PROC		; icu_56::ScientificPrecision::~ScientificPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FixedPrecision@icu_56@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScientificPrecision@icu_56@@QAE@XZ ENDP		; icu_56::ScientificPrecision::~ScientificPrecision
_TEXT	ENDS
PUBLIC	??0ScientificPrecision@icu_56@@QAE@ABV01@@Z	; icu_56::ScientificPrecision::ScientificPrecision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScientificPrecision@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0ScientificPrecision@icu_56@@QAE@ABV01@@Z PROC	; icu_56::ScientificPrecision::ScientificPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FixedPrecision@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR [eax+144], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScientificPrecision@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::ScientificPrecision::ScientificPrecision
_TEXT	ENDS
PUBLIC	??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::ScientificPrecision::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::ScientificPrecision::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR [eax+144], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::ScientificPrecision::operator=
_TEXT	ENDS
PUBLIC	??_7FieldPositionHandler@icu_56@@6B@		; icu_56::FieldPositionHandler::`vftable'
PUBLIC	??0FieldPositionHandler@icu_56@@QAE@XZ		; icu_56::FieldPositionHandler::FieldPositionHandler
PUBLIC	??_R4FieldPositionHandler@icu_56@@6B@		; icu_56::FieldPositionHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPositionHandler@icu_56@@@8		; icu_56::FieldPositionHandler `RTTI Type Descriptor'
PUBLIC	??_R3FieldPositionHandler@icu_56@@8		; icu_56::FieldPositionHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPositionHandler@icu_56@@8		; icu_56::FieldPositionHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8	; icu_56::FieldPositionHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPositionHandler@icu_56@@UAEPAXI@Z	; icu_56::FieldPositionHandler::`vector deleting destructor'
EXTRN	?addAttribute@FieldPositionHandler@icu_56@@UAEXHHH@Z:PROC ; icu_56::FieldPositionHandler::addAttribute
EXTRN	?shiftLast@FieldPositionHandler@icu_56@@UAEXH@Z:PROC ; icu_56::FieldPositionHandler::shiftLast
EXTRN	?isRecording@FieldPositionHandler@icu_56@@UBECXZ:PROC ; icu_56::FieldPositionHandler::isRecording
;	COMDAT ??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8 DD FLAT:??_R0?AVFieldPositionHandler@icu_56@@@8 ; icu_56::FieldPositionHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPositionHandler@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPositionHandler@icu_56@@8 ; icu_56::FieldPositionHandler::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPositionHandler@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPositionHandler@icu_56@@8 DD 00H		; icu_56::FieldPositionHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPositionHandler@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPositionHandler@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPositionHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPositionHandler@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPositionHandler@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPositionHandler@icu_56@@6B@ DD 00H		; icu_56::FieldPositionHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPositionHandler@icu_56@@@8
	DD	FLAT:??_R3FieldPositionHandler@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPositionHandler@icu_56@@6B@
CONST	SEGMENT
??_7FieldPositionHandler@icu_56@@6B@ DD FLAT:??_R4FieldPositionHandler@icu_56@@6B@ ; icu_56::FieldPositionHandler::`vftable'
	DD	FLAT:??_EFieldPositionHandler@icu_56@@UAEPAXI@Z
	DD	FLAT:?addAttribute@FieldPositionHandler@icu_56@@UAEXHHH@Z
	DD	FLAT:?shiftLast@FieldPositionHandler@icu_56@@UAEXH@Z
	DD	FLAT:?isRecording@FieldPositionHandler@icu_56@@UBECXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPositionHandler@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPositionHandler@icu_56@@QAE@XZ PROC		; icu_56::FieldPositionHandler::FieldPositionHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPositionHandler@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPositionHandler@icu_56@@QAE@XZ ENDP		; icu_56::FieldPositionHandler::FieldPositionHandler
_TEXT	ENDS
PUBLIC	??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z	; icu_56::FieldPositionHandler::FieldPositionHandler
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z PROC	; icu_56::FieldPositionHandler::FieldPositionHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@FieldPosit
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@FieldPosit
$LN3@FieldPosit:
	mov	DWORD PTR tv68[ebp], 0
$LN4@FieldPosit:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPositionHandler@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPositionHandler@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::FieldPositionHandler::FieldPositionHandler
_TEXT	ENDS
PUBLIC	??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionHandler::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionHandler::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionHandler@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionHandler::operator=
_TEXT	ENDS
PUBLIC	??_GFieldPositionHandler@icu_56@@UAEPAXI@Z	; icu_56::FieldPositionHandler::`scalar deleting destructor'
EXTRN	??1FieldPositionHandler@icu_56@@UAE@XZ:PROC	; icu_56::FieldPositionHandler::~FieldPositionHandler
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPositionHandler@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPositionHandler@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPositionHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPositionHandler@icu_56@@UAE@XZ	; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPositionHandler@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPositionHandler::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPositionHandler@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPositionHandler@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPositionHandler::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1FieldPositionHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPositionHandler@icu_56@@UAE@XZ	; icu_56::FieldPositionHandler::~FieldPositionHandler
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPositionHandler@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPositionHandler::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FixedDecimal::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FixedDecimal::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 12					; 0000000cH
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FixedDecimal::operator=
_TEXT	ENDS
PUBLIC	??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
PUBLIC	??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
PUBLIC	??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
EXTRN	__imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::count
EXTRN	?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::reset
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3PluralAvailableLocalesEnumeration@icu_56@@8 DD 00H	; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralAvailableLocalesEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ DD 00H ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ DD FLAT:??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
	DD	FLAT:??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
_TEXT	ENDS
PUBLIC	??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::operator=
EXTRN	__imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
EXTRN	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ:PROC ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	120					; 00000078H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ValueFormatter@icu_56@@6B@			; icu_56::ValueFormatter::`vftable'
PUBLIC	??0ValueFormatter@icu_56@@QAE@XZ		; icu_56::ValueFormatter::ValueFormatter
PUBLIC	??_R4ValueFormatter@icu_56@@6B@			; icu_56::ValueFormatter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVValueFormatter@icu_56@@@8		; icu_56::ValueFormatter `RTTI Type Descriptor'
PUBLIC	??_R3ValueFormatter@icu_56@@8			; icu_56::ValueFormatter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ValueFormatter@icu_56@@8			; icu_56::ValueFormatter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ValueFormatter@icu_56@@8		; icu_56::ValueFormatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EValueFormatter@icu_56@@UAEPAXI@Z		; icu_56::ValueFormatter::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ValueFormatter@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\valueformatter.h
rdata$r	SEGMENT
??_R1A@?0A@EA@ValueFormatter@icu_56@@8 DD FLAT:??_R0?AVValueFormatter@icu_56@@@8 ; icu_56::ValueFormatter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ValueFormatter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ValueFormatter@icu_56@@8
rdata$r	SEGMENT
??_R2ValueFormatter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ValueFormatter@icu_56@@8 ; icu_56::ValueFormatter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ValueFormatter@icu_56@@8
rdata$r	SEGMENT
??_R3ValueFormatter@icu_56@@8 DD 00H			; icu_56::ValueFormatter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ValueFormatter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVValueFormatter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVValueFormatter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ValueFormatter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVValueFormatter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ValueFormatter@icu_56@@6B@
rdata$r	SEGMENT
??_R4ValueFormatter@icu_56@@6B@ DD 00H			; icu_56::ValueFormatter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVValueFormatter@icu_56@@@8
	DD	FLAT:??_R3ValueFormatter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ValueFormatter@icu_56@@6B@
CONST	SEGMENT
??_7ValueFormatter@icu_56@@6B@ DD FLAT:??_R4ValueFormatter@icu_56@@6B@ ; icu_56::ValueFormatter::`vftable'
	DD	FLAT:??_EValueFormatter@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ValueFormatter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ValueFormatter@icu_56@@QAE@XZ PROC			; icu_56::ValueFormatter::ValueFormatter, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ValueFormatter@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 2
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ValueFormatter@icu_56@@QAE@XZ ENDP			; icu_56::ValueFormatter::ValueFormatter
_TEXT	ENDS
PUBLIC	??_GValueFormatter@icu_56@@UAEPAXI@Z		; icu_56::ValueFormatter::`scalar deleting destructor'
EXTRN	??1ValueFormatter@icu_56@@UAE@XZ:PROC		; icu_56::ValueFormatter::~ValueFormatter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GValueFormatter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GValueFormatter@icu_56@@UAEPAXI@Z PROC		; icu_56::ValueFormatter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GValueFormatter@icu_56@@UAEPAXI@Z ENDP		; icu_56::ValueFormatter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EValueFormatter@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EValueFormatter@icu_56@@UAEPAXI@Z PROC		; icu_56::ValueFormatter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EValueFormatter@icu_56@@UAEPAXI@Z ENDP		; icu_56::ValueFormatter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::VisibleDigits
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\visibledigits.h
xdata$x	SEGMENT
__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::VisibleDigits, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [eax+88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::VisibleDigits
PUBLIC	?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ; icu_56::VisibleDigits::getInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ PROC ; icu_56::VisibleDigits::getInterval, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ENDP ; icu_56::VisibleDigits::getInterval
_TEXT	ENDS
PUBLIC	??1VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::~VisibleDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::~VisibleDigits, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::~VisibleDigits
_TEXT	ENDS
PUBLIC	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
PUBLIC	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getMantissa, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getMantissa
_TEXT	ENDS
PUBLIC	?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getExponent, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+208]
	test	ecx, ecx
	je	SHORT $LN3@getExponen
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@getExponen
$LN3@getExponen:
	mov	DWORD PTR tv68[ebp], 0
$LN4@getExponen:
	mov	eax, DWORD PTR tv68[ebp]
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getExponent
_TEXT	ENDS
PUBLIC	?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ	; icu_56::VisibleDigitsWithExponent::clear
EXTRN	?clear@VisibleDigits@icu_56@@AAEXXZ:PROC	; icu_56::VisibleDigits::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ PROC	; icu_56::VisibleDigitsWithExponent::clear, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ ENDP	; icu_56::VisibleDigitsWithExponent::clear
_TEXT	ENDS
PUBLIC	?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isNegative
EXTRN	?isNegative@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNegative
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isNegative, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNegative@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNegative
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isNegative
_TEXT	ENDS
PUBLIC	?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ	; icu_56::VisibleDigitsWithExponent::isNaN
EXTRN	?isNaN@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC	; icu_56::VisibleDigitsWithExponent::isNaN, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNaN@VisibleDigits@icu_56@@QBECXZ	; icu_56::VisibleDigits::isNaN
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP	; icu_56::VisibleDigitsWithExponent::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isInfinite
EXTRN	?isInfinite@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isInfinite, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInfinite@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isInfinite
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isInfinite
_TEXT	ENDS
PUBLIC	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
PUBLIC	?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
PUBLIC	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
PUBLIC	??_7DecimalFormatImpl@icu_56@@6B@		; icu_56::DecimalFormatImpl::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::DecimalFormatImpl
PUBLIC	??_R4DecimalFormatImpl@icu_56@@6B@		; icu_56::DecimalFormatImpl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDecimalFormatImpl@icu_56@@@8		; icu_56::DecimalFormatImpl `RTTI Type Descriptor'
PUBLIC	??_R3DecimalFormatImpl@icu_56@@8		; icu_56::DecimalFormatImpl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DecimalFormatImpl@icu_56@@8		; icu_56::DecimalFormatImpl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DecimalFormatImpl@icu_56@@8	; icu_56::DecimalFormatImpl::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	??0DigitFormatter@icu_56@@QAE@XZ:PROC		; icu_56::DigitFormatter::DigitFormatter
EXTRN	??0ScientificPrecision@icu_56@@QAE@XZ:PROC	; icu_56::ScientificPrecision::ScientificPrecision
EXTRN	??0CurrencyAffixInfo@icu_56@@QAE@XZ:PROC	; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
EXTRN	??0AffixPatternParser@icu_56@@QAE@XZ:PROC	; icu_56::AffixPatternParser::AffixPatternParser
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_EDecimalFormatImpl@icu_56@@UAEPAXI@Z:PROC	; icu_56::DecimalFormatImpl::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@DecimalFormatImpl@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@DecimalFormatImpl@icu_56@@8 DD FLAT:??_R0?AVDecimalFormatImpl@icu_56@@@8 ; icu_56::DecimalFormatImpl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DecimalFormatImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DecimalFormatImpl@icu_56@@8
rdata$r	SEGMENT
??_R2DecimalFormatImpl@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DecimalFormatImpl@icu_56@@8 ; icu_56::DecimalFormatImpl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DecimalFormatImpl@icu_56@@8
rdata$r	SEGMENT
??_R3DecimalFormatImpl@icu_56@@8 DD 00H			; icu_56::DecimalFormatImpl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DecimalFormatImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDecimalFormatImpl@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDecimalFormatImpl@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DecimalFormatImpl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDecimalFormatImpl@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DecimalFormatImpl@icu_56@@6B@
rdata$r	SEGMENT
??_R4DecimalFormatImpl@icu_56@@6B@ DD 00H		; icu_56::DecimalFormatImpl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDecimalFormatImpl@icu_56@@@8
	DD	FLAT:??_R3DecimalFormatImpl@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DecimalFormatImpl@icu_56@@6B@
CONST	SEGMENT
??_7DecimalFormatImpl@icu_56@@6B@ DD FLAT:??_R4DecimalFormatImpl@icu_56@@6B@ ; icu_56::DecimalFormatImpl::`vftable'
	DD	FLAT:??_EDecimalFormatImpl@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$11
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv189 = -328						; size = 4
$T51262 = -320						; size = 4
$T51263 = -308						; size = 4
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_super$ = 8						; size = 4
_locale$ = 12						; size = 4
_pattern$ = 16						; size = 4
_status$ = 20						; size = 4
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::DecimalFormatImpl, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormatImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _super$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0DigitGrouping@icu_56@@QAE@XZ		; icu_56::DigitGrouping::DigitGrouping
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+696], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+700], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+704], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+708], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	??0AffixPatternParser@icu_56@@QAE@XZ	; icu_56::AffixPatternParser::AffixPatternParser
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	??0CurrencyAffixInfo@icu_56@@QAE@XZ	; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	??0ScientificPrecision@icu_56@@QAE@XZ	; icu_56::ScientificPrecision::ScientificPrecision
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	call	??0DigitGrouping@icu_56@@QAE@XZ		; icu_56::DigitGrouping::DigitGrouping
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1420				; 0000058cH
	call	??0SciFormatterOptions@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	??0DigitFormatter@icu_56@@QAE@XZ	; icu_56::DigitFormatter::DigitFormatter
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	??0DigitAffixesAndPadding@icu_56@@QAE@XZ ; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 57
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@DecimalFor
; Line 58
	jmp	$LN3@DecimalFor
$LN2@DecimalFor:
; Line 61
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51263[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T51263[ebp], 0
	je	SHORT $LN5@DecimalFor
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T51263[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN6@DecimalFor
$LN5@DecimalFor:
	mov	DWORD PTR tv189[ebp], 0
$LN6@DecimalFor:
	mov	edx, DWORD PTR tv189[ebp]
	mov	DWORD PTR $T51262[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T51262[ebp]
	mov	DWORD PTR [eax+696], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+696], 0
	jne	SHORT $LN1@DecimalFor
; Line 63
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 64
	jmp	SHORT $LN3@DecimalFor
$LN1@DecimalFor:
; Line 67
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 68
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
$LN3@DecimalFor:
; Line 69
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@DecimalFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN22@DecimalFor:
	DD	1
	DD	$LN21@DecimalFor
$LN21@DecimalFor:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN19@DecimalFor
$LN19@DecimalFor:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	jmp	??1AffixPatternParser@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	jmp	??1CurrencyAffixInfo@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	jmp	??1ScientificPrecision@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	jmp	??1DigitFormatter@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	jmp	??1DigitAffixesAndPadding@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z$11:
	mov	esi, esp
	mov	eax, DWORD PTR $T51263[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVLocale@1@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::DecimalFormatImpl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??1DecimalFormatImpl@icu_56@@UAE@XZ		; icu_56::DecimalFormatImpl::~DecimalFormatImpl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDecimalFormatImpl@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDecimalFormatImpl@icu_56@@UAEPAXI@Z PROC		; icu_56::DecimalFormatImpl::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DecimalFormatImpl@icu_56@@UAE@XZ	; icu_56::DecimalFormatImpl::~DecimalFormatImpl
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDecimalFormatImpl@icu_56@@UAEPAXI@Z ENDP		; icu_56::DecimalFormatImpl::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::DecimalFormatImpl
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.cpp
xdata$x	SEGMENT
__ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_super$ = 8						; size = 4
_pattern$ = 12						; size = 4
_symbolsToAdopt$ = 16					; size = 4
_parseError$ = 20					; size = 4
_status$ = 24						; size = 4
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::DecimalFormatImpl, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormatImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _super$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0DigitGrouping@icu_56@@QAE@XZ		; icu_56::DigitGrouping::DigitGrouping
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _symbolsToAdopt$[ebp]
	mov	DWORD PTR [eax+696], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+700], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+704], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+708], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	??0AffixPatternParser@icu_56@@QAE@XZ	; icu_56::AffixPatternParser::AffixPatternParser
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	??0CurrencyAffixInfo@icu_56@@QAE@XZ	; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	??0ScientificPrecision@icu_56@@QAE@XZ	; icu_56::ScientificPrecision::ScientificPrecision
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	call	??0DigitGrouping@icu_56@@QAE@XZ		; icu_56::DigitGrouping::DigitGrouping
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1420				; 0000058cH
	call	??0SciFormatterOptions@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	??0DigitFormatter@icu_56@@QAE@XZ	; icu_56::DigitFormatter::DigitFormatter
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	??0DigitAffixesAndPadding@icu_56@@QAE@XZ ; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 84
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 85
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	jmp	??1AffixPatternParser@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	jmp	??1CurrencyAffixInfo@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	jmp	??1ScientificPrecision@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	jmp	??1DigitFormatter@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	jmp	??1DigitAffixesAndPadding@icu_56@@QAE@XZ
__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::DecimalFormatImpl
PUBLIC	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::DecimalFormatImpl
EXTRN	??0PluralRules@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::PluralRules::PluralRules
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$11
	DD	0aH
	DD	FLAT:__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$12
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv239 = -268						; size = 4
tv221 = -268						; size = 4
$T51313 = -260						; size = 4
$T51314 = -248						; size = 4
$T51317 = -236						; size = 4
$T51318 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_super$ = 8						; size = 4
_other$ = 12						; size = 4
_status$ = 16						; size = 4
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::DecimalFormatImpl, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormatImpl@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _super$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+120], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax+124], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax+128], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 140				; 0000008cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 288				; 00000120H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 560				; 00000230H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+696]
	mov	DWORD PTR [eax+696], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+700]
	mov	DWORD PTR [eax+700], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+704], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+708]
	mov	BYTE PTR [eax+708], dl
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 712				; 000002c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 968				; 000003c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1256				; 000004e8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	??0ScientificPrecision@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1408				; 00000580H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _other$[ebp]
	mov	cx, WORD PTR [eax+1420]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+1420], cx
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1424				; 00000590H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 2044				; 000007fcH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 114
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51314[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T51314[ebp], 0
	je	SHORT $LN6@DecimalFor@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	mov	ecx, DWORD PTR $T51314[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv221[ebp], eax
	jmp	SHORT $LN7@DecimalFor@2
$LN6@DecimalFor@2:
	mov	DWORD PTR tv221[ebp], 0
$LN7@DecimalFor@2:
	mov	edx, DWORD PTR tv221[ebp]
	mov	DWORD PTR $T51313[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T51313[ebp]
	mov	DWORD PTR [eax+696], ecx
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+696], 0
	jne	SHORT $LN3@DecimalFor@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@DecimalFor@2
; Line 116
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@DecimalFor@2:
; Line 118
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+704], 0
	je	$LN4@DecimalFor@2
; Line 119
	mov	esi, esp
	push	8
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51318[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T51318[ebp], 0
	je	SHORT $LN8@DecimalFor@2
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	push	ecx
	mov	ecx, DWORD PTR $T51318[ebp]
	call	??0PluralRules@icu_56@@QAE@ABV01@@Z	; icu_56::PluralRules::PluralRules
	mov	DWORD PTR tv239[ebp], eax
	jmp	SHORT $LN9@DecimalFor@2
$LN8@DecimalFor@2:
	mov	DWORD PTR tv239[ebp], 0
$LN9@DecimalFor@2:
	mov	edx, DWORD PTR tv239[ebp]
	mov	DWORD PTR $T51317[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T51317[ebp]
	mov	DWORD PTR [eax+704], ecx
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+704], 0
	jne	SHORT $LN4@DecimalFor@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@DecimalFor@2
; Line 121
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN4@DecimalFor@2:
; Line 124
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	jmp	??1AffixPatternParser@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	jmp	??1CurrencyAffixInfo@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	jmp	??1ScientificPrecision@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	jmp	??1DigitFormatter@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	jmp	??1DigitAffixesAndPadding@icu_56@@QAE@XZ
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$11:
	mov	esi, esp
	mov	eax, DWORD PTR $T51314[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z$12:
	mov	esi, esp
	mov	eax, DWORD PTR $T51318[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::DecimalFormatImpl
PUBLIC	?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::assign
EXTRN	??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::PluralRules::operator=
EXTRN	??4DecimalFormatSymbols@icu_56@@QAEAAV01@ABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv214 = -268						; size = 4
tv199 = -268						; size = 4
$T51342 = -260						; size = 4
$T51343 = -248						; size = 4
$T51346 = -236						; size = 4
$T51347 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
_status$ = 12						; size = 4
?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::assign, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@assign
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN6@assign
$LN5@assign:
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN7@assign
$LN6@assign:
; Line 132
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 133
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+120], edx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax+124], edx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax+128], edx
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
; Line 140
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 140				; 0000008cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 141
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 142
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 288				; 00000120H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 143
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 144
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 560				; 00000230H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+700]
	mov	DWORD PTR [eax+700], edx
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+708]
	mov	BYTE PTR [eax+708], dl
; Line 147
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 712				; 000002c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z
; Line 148
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 968				; 000003c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z
; Line 149
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1256				; 000004e8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z
; Line 150
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1408				; 00000580H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 151
	mov	eax, DWORD PTR _other$[ebp]
	mov	cx, WORD PTR [eax+1420]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+1420], cx
; Line 152
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1424				; 00000590H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z
; Line 153
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 2044				; 000007fcH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z
; Line 154
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+696]
	call	??4DecimalFormatSymbols@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DecimalFormatSymbols::operator=
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+704], 0
	je	SHORT $LN4@assign
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+704], 0
	je	SHORT $LN4@assign
; Line 156
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+704]
	call	??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralRules::operator=
; Line 157
	jmp	$LN3@assign
$LN4@assign:
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	mov	DWORD PTR $T51343[ebp], ecx
	mov	edx, DWORD PTR $T51343[ebp]
	mov	DWORD PTR $T51342[ebp], edx
	cmp	DWORD PTR $T51342[ebp], 0
	je	SHORT $LN9@assign
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51342[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51342[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN10@assign
$LN9@assign:
	mov	DWORD PTR tv199[ebp], 0
$LN10@assign:
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+704]
	mov	DWORD PTR [eax+704], edx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+704], 0
	je	$LN3@assign
; Line 161
	mov	esi, esp
	push	8
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51347[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51347[ebp], 0
	je	SHORT $LN11@assign
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	push	ecx
	mov	ecx, DWORD PTR $T51347[ebp]
	call	??0PluralRules@icu_56@@QAE@ABV01@@Z	; icu_56::PluralRules::PluralRules
	mov	DWORD PTR tv214[ebp], eax
	jmp	SHORT $LN12@assign
$LN11@assign:
	mov	DWORD PTR tv214[ebp], 0
$LN12@assign:
	mov	edx, DWORD PTR tv214[ebp]
	mov	DWORD PTR $T51346[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T51346[ebp]
	mov	DWORD PTR [eax+704], ecx
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+704], 0
	jne	SHORT $LN3@assign
; Line 163
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN7@assign
$LN3@assign:
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 169
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51347[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::assign
PUBLIC	??8DecimalFormatImpl@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatImpl::operator==
EXTRN	?equals@DigitFormatter@icu_56@@QBECABV12@@Z:PROC ; icu_56::DigitFormatter::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8DecimalFormatImpl@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv244 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8DecimalFormatImpl@icu_56@@QBECABV01@@Z PROC		; icu_56::DecimalFormatImpl::operator==, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN1@operator@3
; Line 174
	mov	al, 1
	jmp	$LN2@operator@3
$LN1@operator@3:
; Line 200
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	cmp	ecx, DWORD PTR [eax+120]
	jne	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	cmp	ecx, DWORD PTR [eax+124]
	jne	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	cmp	ecx, DWORD PTR [eax+128]
	jne	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	cmp	ecx, DWORD PTR [eax+132]
	jne	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+136]
	mov	ecx, DWORD PTR _other$[ebp]
	movsx	edx, BYTE PTR [ecx+136]
	cmp	eax, edx
	jne	$LN5@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+137]
	cmp	ecx, eax
	jne	$LN5@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 140				; 0000008cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?equals@DigitGrouping@icu_56@@QBECABV12@@Z ; icu_56::DigitGrouping::equals
	movsx	edx, al
	test	edx, edx
	je	$LN5@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 288				; 00000120H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	eax, al
	test	eax, eax
	je	$LN5@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 424				; 000001a8H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	edx, al
	test	edx, edx
	je	$LN5@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 560				; 00000230H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+700]
	cmp	ecx, DWORD PTR [eax+700]
	jne	$LN5@operator@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 712				; 000002c8H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?equals@AffixPatternParser@icu_56@@QBECABV12@@Z ; icu_56::AffixPatternParser::equals
	movsx	eax, al
	test	eax, eax
	je	$LN5@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 968				; 000003c8H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z ; icu_56::CurrencyAffixInfo::equals
	movsx	edx, al
	test	edx, edx
	je	$LN5@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1256				; 000004e8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?equals@ScientificPrecision@icu_56@@QBECABV12@@Z ; icu_56::ScientificPrecision::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 1408				; 00000580H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	call	?equals@DigitGrouping@icu_56@@QBECABV12@@Z ; icu_56::DigitGrouping::equals
	movsx	eax, al
	test	eax, eax
	je	$LN5@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 1420				; 0000058cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1420				; 0000058cH
	call	?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::SciFormatterOptions::equals
	movsx	edx, al
	test	edx, edx
	je	$LN5@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 1424				; 00000590H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	?equals@DigitFormatter@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatter::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 2044				; 000007fcH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z ; icu_56::DigitAffixesAndPadding::equals
	movsx	eax, al
	test	eax, eax
	je	$LN5@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+696]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [edx+704]
	cmp	ecx, DWORD PTR [eax+704]
	je	SHORT $LN6@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+704], 0
	je	SHORT $LN5@operator@3
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+704], 0
	je	SHORT $LN5@operator@3
	mov	esi, esp
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+704]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+704]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator@3
$LN6@operator@3:
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+708]
	mov	ecx, DWORD PTR _other$[ebp]
	movsx	edx, BYTE PTR [ecx+708]
	cmp	eax, edx
	jne	SHORT $LN5@operator@3
	mov	BYTE PTR tv244[ebp], 1
	jmp	SHORT $LN7@operator@3
$LN5@operator@3:
	mov	BYTE PTR tv244[ebp], 0
$LN7@operator@3:
	mov	al, BYTE PTR tv244[ebp]
$LN2@operator@3:
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8DecimalFormatImpl@icu_56@@QBECABV01@@Z ENDP		; icu_56::DecimalFormatImpl::operator==
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DecimalFormatImpl@icu_56@@UAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??1DecimalFormatImpl@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DecimalFormatImpl@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormatImpl@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv149 = -268						; size = 4
tv137 = -268						; size = 4
$T51365 = -260						; size = 4
$T51366 = -248						; size = 4
$T51369 = -236						; size = 4
$T51370 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormatImpl@icu_56@@UAE@XZ PROC		; icu_56::DecimalFormatImpl::~DecimalFormatImpl, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormatImpl@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormatImpl@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	mov	DWORD PTR $T51366[ebp], ecx
	mov	edx, DWORD PTR $T51366[ebp]
	mov	DWORD PTR $T51365[ebp], edx
	cmp	DWORD PTR $T51365[ebp], 0
	je	SHORT $LN3@DecimalFor@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51365[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51365[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@DecimalFor@3
$LN3@DecimalFor@3:
	mov	DWORD PTR tv137[ebp], 0
$LN4@DecimalFor@3:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	mov	DWORD PTR $T51370[ebp], ecx
	mov	edx, DWORD PTR $T51370[ebp]
	mov	DWORD PTR $T51369[ebp], edx
	cmp	DWORD PTR $T51369[ebp], 0
	je	SHORT $LN5@DecimalFor@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51369[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51369[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN1@DecimalFor@3
$LN5@DecimalFor@3:
	mov	DWORD PTR tv149[ebp], 0
$LN1@DecimalFor@3:
; Line 206
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	??1DigitFormatter@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	??1ScientificPrecision@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	??1CurrencyAffixInfo@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	??1AffixPatternParser@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	jmp	??1AffixPatternParser@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	jmp	??1CurrencyAffixInfo@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	jmp	??1ScientificPrecision@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	jmp	??1DigitFormatter@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatImpl@icu_56@@UAE@XZ$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	jmp	??1DigitAffixesAndPadding@icu_56@@QAE@XZ
__ehhandler$??1DecimalFormatImpl@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormatImpl@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormatImpl@icu_56@@UAE@XZ ENDP		; icu_56::DecimalFormatImpl::~DecimalFormatImpl
PUBLIC	?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ; icu_56::DecimalFormatImpl::prepareValueFormatter
EXTRN	?prepareFixedDecimalFormatting@ValueFormatter@icu_56@@QAEXABVDigitFormatter@2@ABVDigitGrouping@2@ABVFixedPrecision@2@ABVDigitFormatterOptions@2@@Z:PROC ; icu_56::ValueFormatter::prepareFixedDecimalFormatting
EXTRN	?prepareScientificFormatting@ValueFormatter@icu_56@@QAEXABVDigitFormatter@2@ABVScientificPrecision@2@ABVSciFormatterOptions@2@@Z:PROC ; icu_56::ValueFormatter::prepareScientificFormatting
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vf$ = 8						; size = 4
?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::prepareValueFormatter, COMDAT
; _this$ = ecx
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN1@prepareVal
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1420				; 0000058cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1424				; 00000590H
	push	edx
	mov	ecx, DWORD PTR _vf$[ebp]
	call	?prepareScientificFormatting@ValueFormatter@icu_56@@QAEXABVDigitFormatter@2@ABVScientificPrecision@2@ABVSciFormatterOptions@2@@Z ; icu_56::ValueFormatter::prepareScientificFormatting
; Line 213
	mov	eax, DWORD PTR _vf$[ebp]
	jmp	SHORT $LN2@prepareVal
$LN1@prepareVal:
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1420				; 0000058cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1408				; 00000580H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1424				; 00000590H
	push	eax
	mov	ecx, DWORD PTR _vf$[ebp]
	call	?prepareFixedDecimalFormatting@ValueFormatter@icu_56@@QAEXABVDigitFormatter@2@ABVDigitGrouping@2@ABVFixedPrecision@2@ABVDigitFormatterOptions@2@@Z ; icu_56::ValueFormatter::prepareFixedDecimalFormatting
; Line 217
	mov	eax, DWORD PTR _vf$[ebp]
$LN2@prepareVal:
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::prepareValueFormatter
_TEXT	ENDS
PUBLIC	?getPatternScale@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::getPatternScale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPatternScale@DecimalFormatImpl@icu_56@@ABEHXZ
_TEXT	SEGMENT
tv139 = -229						; size = 1
tv84 = -229						; size = 1
_usesPermill$ = -29					; size = 1
_usesPercent$ = -17					; size = 1
_this$ = -8						; size = 4
?getPatternScale@DecimalFormatImpl@icu_56@@ABEHXZ PROC	; icu_56::DecimalFormatImpl::getPatternScale, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?usesPercent@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPercent
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?usesPercent@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPercent
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?usesPercent@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPercent
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?usesPercent@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPercent
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@getPattern
	mov	BYTE PTR tv84[ebp], 0
	jmp	SHORT $LN6@getPattern
$LN5@getPattern:
	mov	BYTE PTR tv84[ebp], 1
$LN6@getPattern:
	mov	cl, BYTE PTR tv84[ebp]
	mov	BYTE PTR _usesPercent$[ebp], cl
; Line 226
	movsx	eax, BYTE PTR _usesPercent$[ebp]
	test	eax, eax
	je	SHORT $LN2@getPattern
; Line 227
	mov	eax, 2
	jmp	SHORT $LN3@getPattern
$LN2@getPattern:
; Line 232
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?usesPermill@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPermill
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?usesPermill@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPermill
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?usesPermill@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPermill
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN7@getPattern
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?usesPermill@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesPermill
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@getPattern
	mov	BYTE PTR tv139[ebp], 0
	jmp	SHORT $LN8@getPattern
$LN7@getPattern:
	mov	BYTE PTR tv139[ebp], 1
$LN8@getPattern:
	mov	cl, BYTE PTR tv139[ebp]
	mov	BYTE PTR _usesPermill$[ebp], cl
; Line 233
	movsx	eax, BYTE PTR _usesPermill$[ebp]
	test	eax, eax
	je	SHORT $LN1@getPattern
; Line 234
	mov	eax, 3
	jmp	SHORT $LN3@getPattern
$LN1@getPattern:
; Line 236
	xor	eax, eax
$LN3@getPattern:
; Line 237
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getPatternScale@DecimalFormatImpl@icu_56@@ABEHXZ ENDP	; icu_56::DecimalFormatImpl::getPatternScale
_TEXT	ENDS
PUBLIC	?setMultiplierScale@DecimalFormatImpl@icu_56@@AAEXH@Z ; icu_56::DecimalFormatImpl::setMultiplierScale
EXTRN	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z:PROC ; icu_56::DigitList::shiftDecimalRight
EXTRN	?set@DigitList@icu_56@@QAEXH@Z:PROC		; icu_56::DigitList::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMultiplierScale@DecimalFormatImpl@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_scale$ = 8						; size = 4
?setMultiplierScale@DecimalFormatImpl@icu_56@@AAEXH@Z PROC ; icu_56::DecimalFormatImpl::setMultiplierScale, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	cmp	DWORD PTR _scale$[ebp], 0
	jne	SHORT $LN2@setMultipl
; Line 244
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 245
	jmp	SHORT $LN3@setMultipl
$LN2@setMultipl:
; Line 246
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 247
	mov	eax, DWORD PTR _scale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
$LN3@setMultipl:
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMultiplierScale@DecimalFormatImpl@icu_56@@AAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setMultiplierScale
_TEXT	ENDS
PUBLIC	?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt32
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
EXTRN	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ:PROC	; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
EXTRN	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z:PROC ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51402 = -240						; size = 4
_handler$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 256
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 257
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 258
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt32
	mov	DWORD PTR $T51402[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
	mov	eax, DWORD PTR $T51402[ebp]
; Line 259
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@format:
	DD	1
	DD	$LN6@format
$LN6@format:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN4@format
$LN4@format:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
EXTRN	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ:PROC ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
EXTRN	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z:PROC ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51415 = -248						; size = 4
_handler$ = -44						; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 266
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 268
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt32
	mov	DWORD PTR $T51415[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	eax, DWORD PTR $T51415[ebp]
; Line 269
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@format@2:
	DD	1
	DD	$LN6@format@2
$LN6@format@2:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN4@format@2
$LN4@format@2:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeFormatWithDigitList<int>
EXTRN	?formatInt32@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@HABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitAffixesAndPadding::formatInt32
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51428 = -264						; size = 4
_vf$ = -60						; size = 32
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_handler$ = 16						; size = 4
_status$ = 20						; size = 4
?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatInt32, COMDAT
; _this$ = ecx
; Line 323
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeFormatWithDigitList<int>
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@formatInt3
; Line 325
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	SHORT $LN2@formatInt3
$LN1@formatInt3:
; Line 327
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??0ValueFormatter@icu_56@@QAE@XZ	; icu_56::ValueFormatter::ValueFormatter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 334
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+704]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	lea	edx, DWORD PTR _vf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ; icu_56::DecimalFormatImpl::prepareValueFormatter
	push	eax
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?formatInt32@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@HABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DigitAffixesAndPadding::formatInt32
	mov	DWORD PTR $T51428[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR $T51428[ebp]
$LN2@formatInt3:
; Line 335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@formatInt3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@formatInt3:
	DD	1
	DD	$LN7@formatInt3
$LN7@formatInt3:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN5@formatInt3
$LN5@formatInt3:
	DB	118					; 00000076H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _vf$[ebp]
	jmp	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
__ehhandler$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatInt32
PUBLIC	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt64
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51442 = -452						; size = 4
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_handler$ = 20						; size = 4
_status$ = 24						; size = 4
?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatInt64, COMDAT
; _this$ = ecx
; Line 342
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 343
	cmp	DWORD PTR _number$[ebp+4], -1
	jl	SHORT $LN1@formatInt6
	jg	SHORT $LN5@formatInt6
	cmp	DWORD PTR _number$[ebp], -2147483648	; 80000000H
	jb	SHORT $LN1@formatInt6
$LN5@formatInt6:
	cmp	DWORD PTR _number$[ebp+4], 0
	jg	SHORT $LN1@formatInt6
	jl	SHORT $LN6@formatInt6
	cmp	DWORD PTR _number$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@formatInt6
$LN6@formatInt6:
; Line 344
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatInt32@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@HAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt32
	jmp	SHORT $LN2@formatInt6
$LN1@formatInt6:
; Line 346
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 347
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Line 349
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
	mov	DWORD PTR $T51442[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR $T51442[ebp]
$LN2@formatInt6:
; Line 350
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@formatInt6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN10@formatInt6:
	DD	1
	DD	$LN9@formatInt6
$LN9@formatInt6:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN7@formatInt6
$LN7@formatInt6:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatInt64
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDouble
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51458 = -452						; size = 4
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_handler$ = 20						; size = 4
_status$ = 24						; size = 4
?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatDouble, COMDAT
; _this$ = ecx
; Line 357
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 359
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Line 361
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
	mov	DWORD PTR $T51458[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR $T51458[ebp]
; Line 362
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@formatDoub
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN7@formatDoub:
	DD	1
	DD	$LN6@formatDoub
$LN6@formatDoub:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN4@formatDoub
$LN4@formatDoub:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatDouble
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51471 = -240						; size = 4
_handler$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 371
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDouble
	mov	DWORD PTR $T51471[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
	mov	eax, DWORD PTR $T51471[ebp]
; Line 372
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN7@format@3:
	DD	1
	DD	$LN6@format@3
$LN6@format@3:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN4@format@3
$LN4@format@3:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDigitList
PUBLIC	__$ArrayPad$
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51485 = -364						; size = 4
_handler$ = -160					; size = 8
_dl$ = -144						; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 380
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 381
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _dl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDigitList
	mov	DWORD PTR $T51485[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T51485[ebp]
; Line 383
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@format@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN9@format@4:
	DD	2
	DD	$LN8@format@4
$LN8@format@4:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN5@format@4
	DD	-160					; ffffff60H
	DD	8
	DD	$LN6@format@4
$LN6@format@4:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@format@4:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _dl$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51500 = -240						; size = 4
_handler$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 390
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 391
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 392
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt64
	mov	DWORD PTR $T51500[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
	mov	eax, DWORD PTR $T51500[ebp]
; Line 393
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN7@format@5:
	DD	1
	DD	$LN6@format@5
$LN6@format@5:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN4@format@5
$LN4@format@5:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51513 = -248						; size = 4
_handler$ = -44						; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_posIter$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 400
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 401
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatInt64@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@_JAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatInt64
	mov	DWORD PTR $T51513[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	eax, DWORD PTR $T51513[ebp]
; Line 403
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN7@format@6:
	DD	1
	DD	$LN6@format@6
$LN6@format@6:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN4@format@6
$LN4@format@6:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51526 = -248						; size = 4
_handler$ = -44						; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_posIter$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 410
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 411
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 412
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatDouble@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@NAAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDouble
	mov	DWORD PTR $T51526[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	eax, DWORD PTR $T51526[ebp]
; Line 413
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN7@format@7:
	DD	1
	DD	$LN6@format@7
$LN6@format@7:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN4@format@7
$LN4@format@7:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	__$ArrayPad$
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51540 = -372						; size = 4
_handler$ = -168					; size = 16
_dl$ = -144						; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 420
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 422
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 423
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _dl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDigitList
	mov	DWORD PTR $T51540[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T51540[ebp]
; Line 424
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@format@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN9@format@8:
	DD	2
	DD	$LN8@format@8
$LN8@format@8:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN5@format@8
	DD	-168					; ffffff58H
	DD	16					; 00000010H
	DD	$LN6@format@8
$LN6@format@8:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@format@8:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _dl$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	__$ArrayPad$
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
EXTRN	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z:PROC ; icu_56::DigitList::set
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51556 = -372						; size = 4
_handler$ = -168					; size = 16
_dl$ = -144						; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 431
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 432
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 433
	push	0
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dl$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 434
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 435
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _dl$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatDigitList
	mov	DWORD PTR $T51556[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T51556[ebp]
; Line 436
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@format@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN9@format@9:
	DD	2
	DD	$LN8@format@9
$LN8@format@9:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN5@format@9
	DD	-168					; ffffff58H
	DD	16					; 00000010H
	DD	$LN6@format@9
$LN6@format@9:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@format@9:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _dl$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51571 = -240						; size = 4
_handler$ = -36						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_digits$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 443
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 444
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionOnlyHandler@icu_56@@QAE@AAVFieldPosition@1@@Z ; icu_56::FieldPositionOnlyHandler::FieldPositionOnlyHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 446
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
	mov	DWORD PTR $T51571[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
	mov	eax, DWORD PTR $T51571[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@format@10:
	DD	1
	DD	$LN6@format@10
$LN6@format@10:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN4@format@10
$LN4@format@10:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionOnlyHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionOnlyHandler::~FieldPositionOnlyHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51584 = -248						; size = 4
_handler$ = -44						; size = 16
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_digits$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::format, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 455
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0FieldPositionIteratorHandler@icu_56@@QAE@PAVFieldPositionIterator@1@AAW4UErrorCode@@@Z ; icu_56::FieldPositionIteratorHandler::FieldPositionIteratorHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 457
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
	mov	DWORD PTR $T51584[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _handler$[ebp]
	call	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
	mov	eax, DWORD PTR $T51584[ebp]
; Line 458
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@format@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@format@11:
	DD	1
	DD	$LN6@format@11
$LN6@format@11:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN4@format@11
$LN4@format@11:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _handler$[ebp]
	jmp	??1FieldPositionIteratorHandler@icu_56@@UAE@XZ ; icu_56::FieldPositionIteratorHandler::~FieldPositionIteratorHandler
__ehhandler$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::format
PUBLIC	?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::adjustDigitList
EXTRN	?reduce@DigitList@icu_56@@QAEXXZ:PROC		; icu_56::DigitList::reduce
EXTRN	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitList::mult
EXTRN	?isZero@DigitList@icu_56@@QBECXZ:PROC		; icu_56::DigitList::isZero
EXTRN	?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z:PROC ; icu_56::DigitList::setRoundingMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_status$ = 12						; size = 4
?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::adjustDigitList, COMDAT
; _this$ = ecx
; Line 462
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ; icu_56::DigitList::setRoundingMode
; Line 464
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@adjustDigi
; Line 465
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
$LN2@adjustDigi:
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN1@adjustDigi
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
$LN1@adjustDigi:
; Line 470
	mov	ecx, DWORD PTR _number$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 471
	mov	eax, DWORD PTR _number$[ebp]
; Line 472
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::adjustDigitList
_TEXT	ENDS
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51600 = -452						; size = 4
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_handler$ = 16						; size = 4
_status$ = 20						; size = 4
?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatDigitList, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 480
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 481
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Line 483
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
	mov	DWORD PTR $T51600[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR $T51600[ebp]
; Line 484
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@formatDigi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN7@formatDigi:
	DD	1
	DD	$LN6@formatDigi
$LN6@formatDigi:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN4@formatDigi
$LN4@formatDigi:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatDigitList
PUBLIC	?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatAdjustedDigitList
EXTRN	?format@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@AAVDigitList@2@ABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitAffixesAndPadding::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51613 = -264						; size = 4
_vf$ = -60						; size = 32
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_handler$ = 16						; size = 4
_status$ = 20						; size = 4
?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatAdjustedDigitList, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 492
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??0ValueFormatter@icu_56@@QAE@XZ	; icu_56::ValueFormatter::ValueFormatter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 499
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+704]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	lea	edx, DWORD PTR _vf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ; icu_56::DecimalFormatImpl::prepareValueFormatter
	push	eax
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?format@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@AAVDigitList@2@ABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DigitAffixesAndPadding::format
	mov	DWORD PTR $T51613[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR $T51613[ebp]
; Line 500
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@formatAdju
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN7@formatAdju:
	DD	1
	DD	$LN6@formatAdju
$LN6@formatAdju:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN4@formatAdju
$LN4@formatAdju:
	DB	118					; 00000076H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _vf$[ebp]
	jmp	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
__ehhandler$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatAdjustedDigitList
EXTRN	?format@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@ABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitAffixesAndPadding::format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51626 = -264						; size = 4
_vf$ = -60						; size = 32
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_digits$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_handler$ = 16						; size = 4
_status$ = 20						; size = 4
?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 508
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??0ValueFormatter@icu_56@@QAE@XZ	; icu_56::ValueFormatter::ValueFormatter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 515
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+704]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	lea	edx, DWORD PTR _vf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ; icu_56::DecimalFormatImpl::prepareValueFormatter
	push	eax
	mov	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?format@DigitAffixesAndPadding@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@ABVValueFormatter@2@AAVFieldPositionHandler@2@PBVPluralRules@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DigitAffixesAndPadding::format
	mov	DWORD PTR $T51626[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR $T51626[ebp]
; Line 516
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@formatVisi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN7@formatVisi:
	DD	1
	DD	$LN6@formatVisi
$LN6@formatVisi:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN4@formatVisi
$LN4@formatVisi:
	DB	118					; 00000076H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _vf$[ebp]
	jmp	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
__ehhandler$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?formatVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::formatVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::getFixedDecimal
EXTRN	?initVisibleDigits@FixedPrecision@icu_56@@QBEAAVVisibleDigits@2@NAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FixedPrecision::initVisibleDigits
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51640 = -340						; size = 4
_digits$ = -136						; size = 104
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_result$ = 16						; size = 4
_status$ = 20						; size = 4
?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::getFixedDecimal, COMDAT
; _this$ = ecx
; Line 531
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 532
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getFixedDe
; Line 533
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN2@getFixedDe
$LN1@getFixedDe:
; Line 535
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 536
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigits@FixedPrecision@icu_56@@QBEAAVVisibleDigits@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::FixedPrecision::initVisibleDigits
; Line 537
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	call	?initFixedDecimal@icu_56@@YAAAVFixedDecimal@1@ABVVisibleDigits@1@AAV21@@Z ; icu_56::initFixedDecimal
	add	esp, 8
	mov	DWORD PTR $T51640[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	eax, DWORD PTR $T51640[ebp]
$LN2@getFixedDe:
; Line 538
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getFixedDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN8@getFixedDe:
	DD	1
	DD	$LN7@getFixedDe
$LN7@getFixedDe:
	DD	-136					; ffffff78H
	DD	104					; 00000068H
	DD	$LN5@getFixedDe
$LN5@getFixedDe:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@NAAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::getFixedDecimal
EXTRN	?getFixedDecimal@VisibleDigits@icu_56@@QBEXAANAA_J11AAHAAC@Z:PROC ; icu_56::VisibleDigits::getFixedDecimal
EXTRN	?isNaNOrInfinity@VisibleDigits@icu_56@@QBECXZ:PROC ; icu_56::VisibleDigits::isNaNOrInfinity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initFixedDecimal@icu_56@@YAAAVFixedDecimal@1@ABVVisibleDigits@1@AAV21@@Z
_TEXT	SEGMENT
_digits$ = 8						; size = 4
_result$ = 12						; size = 4
?initFixedDecimal@icu_56@@YAAAVFixedDecimal@1@ABVVisibleDigits@1@AAV21@@Z PROC ; icu_56::initFixedDecimal, COMDAT
; Line 519
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 520
	mov	eax, DWORD PTR _result$[ebp]
	fldz
	fstp	QWORD PTR [eax]
; Line 521
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isNegative@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNegative
	mov	ecx, DWORD PTR _result$[ebp]
	mov	BYTE PTR [ecx+41], al
; Line 522
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isNaNOrInfinity@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNaNOrInfinity
	mov	ecx, DWORD PTR _result$[ebp]
	mov	BYTE PTR [ecx+42], al
; Line 526
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?getFixedDecimal@VisibleDigits@icu_56@@QBEXAANAA_J11AAHAAC@Z ; icu_56::VisibleDigits::getFixedDecimal
; Line 527
	mov	eax, DWORD PTR _result$[ebp]
; Line 528
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initFixedDecimal@icu_56@@YAAAVFixedDecimal@1@ABVVisibleDigits@1@AAV21@@Z ENDP ; icu_56::initFixedDecimal
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::getFixedDecimal
EXTRN	?initVisibleDigits@FixedPrecision@icu_56@@QBEAAVVisibleDigits@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FixedPrecision::initVisibleDigits
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51656 = -340						; size = 4
_digits$ = -136						; size = 104
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_result$ = 12						; size = 4
_status$ = 16						; size = 4
?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::getFixedDecimal, COMDAT
; _this$ = ecx
; Line 542
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 543
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getFixedDe@2
; Line 544
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN2@getFixedDe@2
$LN1@getFixedDe@2:
; Line 546
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 547
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigits@FixedPrecision@icu_56@@QBEAAVVisibleDigits@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::FixedPrecision::initVisibleDigits
; Line 548
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	call	?initFixedDecimal@icu_56@@YAAAVFixedDecimal@1@ABVVisibleDigits@1@AAV21@@Z ; icu_56::initFixedDecimal
	add	esp, 8
	mov	DWORD PTR $T51656[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	eax, DWORD PTR $T51656[ebp]
$LN2@getFixedDe@2:
; Line 549
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getFixedDe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN8@getFixedDe@2:
	DD	1
	DD	$LN7@getFixedDe@2
$LN7@getFixedDe@2:
	DD	-136					; ffffff78H
	DD	104					; 00000068H
	DD	$LN5@getFixedDe@2
$LN5@getFixedDe@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFixedDecimal@DecimalFormatImpl@icu_56@@QBEAAVFixedDecimal@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::getFixedDecimal
PUBLIC	??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<__int64>
EXTRN	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
EXTRN	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_digits$ = 16						; size = 4
_status$ = 20						; size = 4
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 555
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 557
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<__int64>
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@initVisibl
; Line 558
	mov	eax, DWORD PTR _digits$[ebp]
	jmp	SHORT $LN4@initVisibl
$LN3@initVisibl:
; Line 560
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN2@initVisibl
; Line 562
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Line 563
	jmp	SHORT $LN1@initVisibl
$LN2@initVisibl:
; Line 565
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
$LN1@initVisibl:
; Line 567
	mov	eax, DWORD PTR _digits$[ebp]
$LN4@initVisibl:
; Line 568
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
_TEXT	ENDS
PUBLIC	??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<double>
EXTRN	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
EXTRN	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_digits$ = 16						; size = 4
_status$ = 20						; size = 4
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 576
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<double>
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@initVisibl@2
; Line 577
	mov	eax, DWORD PTR _digits$[ebp]
	jmp	SHORT $LN4@initVisibl@2
$LN3@initVisibl@2:
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN2@initVisibl@2
; Line 581
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Line 582
	jmp	SHORT $LN1@initVisibl@2
$LN2@initVisibl@2:
; Line 584
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
$LN1@initVisibl@2:
; Line 586
	mov	eax, DWORD PTR _digits$[ebp]
$LN4@initVisibl@2:
; Line 587
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
_TEXT	ENDS
PUBLIC	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_digits$ = 12						; size = 4
_status$ = 16						; size = 4
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 594
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::adjustDigitList
; Line 595
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Line 596
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
_TEXT	ENDS
EXTRN	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
EXTRN	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_digits$ = 12						; size = 4
_status$ = 16						; size = 4
?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted, COMDAT
; _this$ = ecx
; Line 602
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN2@initVisibl@3
; Line 605
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@ScientificPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::ScientificPrecision::initVisibleDigitsWithExponent
; Line 606
	jmp	SHORT $LN1@initVisibl@3
$LN2@initVisibl@3:
; Line 608
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1256				; 000004e8H
	call	?initVisibleDigitsWithExponent@FixedPrecision@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::FixedPrecision::initVisibleDigitsWithExponent
$LN1@initVisibl@3:
; Line 610
	mov	eax, DWORD PTR _digits$[ebp]
; Line 611
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
_TEXT	ENDS
PUBLIC	?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::round
EXTRN	?round@ValueFormatter@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::ValueFormatter::round
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51677 = -264						; size = 4
_vf$ = -60						; size = 32
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_status$ = 12						; size = 4
?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::round, COMDAT
; _this$ = ecx
; Line 615
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 616
	mov	ecx, DWORD PTR _number$[ebp]
	call	?isNaN@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isNaN
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@round
	mov	ecx, DWORD PTR _number$[ebp]
	call	?isInfinite@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isInfinite
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@round
$LN1@round:
; Line 617
	mov	eax, DWORD PTR _number$[ebp]
	jmp	SHORT $LN3@round
$LN2@round:
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adjustDigitList@DecimalFormatImpl@icu_56@@ABEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::adjustDigitList
; Line 620
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??0ValueFormatter@icu_56@@QAE@XZ	; icu_56::ValueFormatter::ValueFormatter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 621
	lea	eax, DWORD PTR _vf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?prepareValueFormatter@DecimalFormatImpl@icu_56@@ABEAAVValueFormatter@2@AAV32@@Z ; icu_56::DecimalFormatImpl::prepareValueFormatter
; Line 622
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vf$[ebp]
	call	?round@ValueFormatter@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::ValueFormatter::round
	mov	DWORD PTR $T51677[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _vf$[ebp]
	call	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
	mov	eax, DWORD PTR $T51677[ebp]
$LN3@round:
; Line 623
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@round
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN9@round:
	DD	1
	DD	$LN8@round
$LN8@round:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN6@round
$LN6@round:
	DB	118					; 00000076H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _vf$[ebp]
	jmp	??1ValueFormatter@icu_56@@UAE@XZ	; icu_56::ValueFormatter::~ValueFormatter
__ehhandler$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::round
PUBLIC	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
PUBLIC	?setMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMinimumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormatImpl::setMinimumSignificantDigits, COMDAT
; _this$ = ecx
; Line 626
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newValue$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 628
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+137], 1
; Line 629
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setMinimumSignificantDigits
_TEXT	ENDS
PUBLIC	?setMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMaximumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormatImpl::setMaximumSignificantDigits, COMDAT
; _this$ = ecx
; Line 633
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newValue$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+137], 1
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 637
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setMaximumSignificantDigits
_TEXT	ENDS
PUBLIC	?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z PROC ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits, COMDAT
; _this$ = ecx
; Line 640
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _min$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+137], 1
; Line 644
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 645
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z ENDP ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits
_TEXT	ENDS
PUBLIC	?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setScientificNotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormatImpl::setScientificNotation, COMDAT
; _this$ = ecx
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 649
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newValue$[ebp]
	mov	BYTE PTR [eax+136], cl
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 651
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormatImpl::setScientificNotation
_TEXT	ENDS
PUBLIC	?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setSignificantDigitsUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormatImpl::setSignificantDigitsUsed, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 655
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newValue$[ebp]
	mov	BYTE PTR [eax+137], cl
; Line 656
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormatImpl::setSignificantDigitsUsed
_TEXT	ENDS
PUBLIC	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
PUBLIC	?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z PROC	; icu_56::DecimalFormatImpl::setGroupingSize, COMDAT
; _this$ = ecx
; Line 660
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 661
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newValue$[ebp]
	mov	DWORD PTR [eax+140], ecx
; Line 662
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
; Line 663
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP	; icu_56::DecimalFormatImpl::setGroupingSize
_TEXT	ENDS
PUBLIC	?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setSecondaryGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormatImpl::setSecondaryGroupingSize, COMDAT
; _this$ = ecx
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newValue$[ebp]
	mov	DWORD PTR [eax+144], ecx
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
; Line 669
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setSecondaryGroupingSize
_TEXT	ENDS
PUBLIC	?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMinimumGroupingDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormatImpl::setMinimumGroupingDigits, COMDAT
; _this$ = ecx
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 673
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newValue$[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 674
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
; Line 675
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setMinimumGroupingDigits
_TEXT	ENDS
PUBLIC	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
PUBLIC	?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::setCurrencyUsage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_currencyUsage$ = 8					; size = 4
_status$ = 12						; size = 4
?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::setCurrencyUsage, COMDAT
; _this$ = ecx
; Line 679
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _currencyUsage$[ebp]
	mov	DWORD PTR [eax+700], ecx
; Line 681
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 682
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::setCurrencyUsage
_TEXT	ENDS
PUBLIC	?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z ; icu_56::DecimalFormatImpl::setRoundingIncrement
EXTRN	?set@DigitList@icu_56@@QAEXN@Z:PROC		; icu_56::DigitList::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z PROC ; icu_56::DecimalFormatImpl::setRoundingIncrement, COMDAT
; _this$ = ecx
; Line 685
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 686
	fldz
	fcomp	QWORD PTR _d$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@setRoundin
; Line 687
	sub	esp, 8
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 688
	jmp	SHORT $LN1@setRoundin
$LN2@setRoundin:
; Line 689
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
$LN1@setRoundin:
; Line 691
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z ENDP ; icu_56::DecimalFormatImpl::setRoundingIncrement
_TEXT	ENDS
PUBLIC	?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ ; icu_56::DecimalFormatImpl::getRoundingIncrement
EXTRN	?getDouble@DigitList@icu_56@@QBENXZ:PROC	; icu_56::DigitList::getDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ PROC ; icu_56::DecimalFormatImpl::getRoundingIncrement, COMDAT
; _this$ = ecx
; Line 694
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 695
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
; Line 696
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ ENDP ; icu_56::DecimalFormatImpl::getRoundingIncrement
_TEXT	ENDS
PUBLIC	?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ	; icu_56::DecimalFormatImpl::getMultiplier
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormatImpl::getMultiplier, COMDAT
; _this$ = ecx
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 700
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@getMultipl
; Line 701
	mov	eax, 1
	jmp	SHORT $LN2@getMultipl
$LN1@getMultipl:
; Line 703
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
	call	__ftol2_sse
$LN2@getMultipl:
; Line 704
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormatImpl::getMultiplier
_TEXT	ENDS
PUBLIC	?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMultiplier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_m$ = 8							; size = 4
?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z PROC	; icu_56::DecimalFormatImpl::setMultiplier, COMDAT
; _this$ = ecx
; Line 707
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	cmp	DWORD PTR _m$[ebp], 0
	je	SHORT $LN2@setMultipl@2
	cmp	DWORD PTR _m$[ebp], 1
	jne	SHORT $LN3@setMultipl@2
$LN2@setMultipl@2:
; Line 709
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 710
	jmp	SHORT $LN4@setMultipl@2
$LN3@setMultipl@2:
; Line 711
	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
$LN4@setMultipl@2:
; Line 713
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP	; icu_56::DecimalFormatImpl::setMultiplier
_TEXT	ENDS
PUBLIC	?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setPositivePrefix
EXTRN	?addLiteral@AffixPattern@icu_56@@QAEXPB_WHH@Z:PROC ; icu_56::AffixPattern::addLiteral
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	?remove@AffixPattern@icu_56@@QAEXXZ:PROC	; icu_56::AffixPattern::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormatImpl::setPositivePrefix, COMDAT
; _this$ = ecx
; Line 716
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?remove@AffixPattern@icu_56@@QAEXXZ	; icu_56::AffixPattern::remove
; Line 718
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?addLiteral@AffixPattern@icu_56@@QAEXPB_WHH@Z ; icu_56::AffixPattern::addLiteral
; Line 719
	mov	DWORD PTR _status$[ebp], 0
; Line 720
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 721
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setPositiv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@setPositiv:
	DD	1
	DD	$LN4@setPositiv
$LN4@setPositiv:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@setPositiv
$LN3@setPositiv:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormatImpl::setPositivePrefix
_TEXT	ENDS
PUBLIC	?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setPositiveSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormatImpl::setPositiveSuffix, COMDAT
; _this$ = ecx
; Line 724
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 725
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?remove@AffixPattern@icu_56@@QAEXXZ	; icu_56::AffixPattern::remove
; Line 726
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?addLiteral@AffixPattern@icu_56@@QAEXPB_WHH@Z ; icu_56::AffixPattern::addLiteral
; Line 727
	mov	DWORD PTR _status$[ebp], 0
; Line 728
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 729
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setPositiv@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@setPositiv@2:
	DD	1
	DD	$LN4@setPositiv@2
$LN4@setPositiv@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@setPositiv@2
$LN3@setPositiv@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormatImpl::setPositiveSuffix
_TEXT	ENDS
PUBLIC	?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setNegativePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormatImpl::setNegativePrefix, COMDAT
; _this$ = ecx
; Line 732
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 733
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?remove@AffixPattern@icu_56@@QAEXXZ	; icu_56::AffixPattern::remove
; Line 734
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?addLiteral@AffixPattern@icu_56@@QAEXPB_WHH@Z ; icu_56::AffixPattern::addLiteral
; Line 735
	mov	DWORD PTR _status$[ebp], 0
; Line 736
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 737
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setNegativ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@setNegativ:
	DD	1
	DD	$LN4@setNegativ
$LN4@setNegativ:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@setNegativ
$LN3@setNegativ:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormatImpl::setNegativePrefix
_TEXT	ENDS
PUBLIC	?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setNegativeSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormatImpl::setNegativeSuffix, COMDAT
; _this$ = ecx
; Line 740
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 741
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?remove@AffixPattern@icu_56@@QAEXXZ	; icu_56::AffixPattern::remove
; Line 742
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?addLiteral@AffixPattern@icu_56@@QAEXPB_WHH@Z ; icu_56::AffixPattern::addLiteral
; Line 743
	mov	DWORD PTR _status$[ebp], 0
; Line 744
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 745
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setNegativ@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@setNegativ@2:
	DD	1
	DD	$LN4@setNegativ@2
$LN4@setNegativ@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@setNegativ@2
$LN3@setNegativ@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormatImpl::setNegativeSuffix
_TEXT	ENDS
PUBLIC	?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getPositivePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::getPositivePrefix, COMDAT
; _this$ = ecx
; Line 748
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 750
	mov	eax, DWORD PTR _result$[ebp]
; Line 751
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::getPositivePrefix
_TEXT	ENDS
PUBLIC	?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getPositiveSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::getPositiveSuffix, COMDAT
; _this$ = ecx
; Line 754
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 755
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2196				; 00000894H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 756
	mov	eax, DWORD PTR _result$[ebp]
; Line 757
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::getPositiveSuffix
_TEXT	ENDS
PUBLIC	?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getNegativePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::getNegativePrefix, COMDAT
; _this$ = ecx
; Line 760
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 761
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2348				; 0000092cH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 762
	mov	eax, DWORD PTR _result$[ebp]
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::getNegativePrefix
_TEXT	ENDS
PUBLIC	?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getNegativeSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::getNegativeSuffix, COMDAT
; _this$ = ecx
; Line 766
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 767
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2500				; 000009c4H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 768
	mov	eax, DWORD PTR _result$[ebp]
; Line 769
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::getNegativeSuffix
_TEXT	ENDS
PUBLIC	?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::adoptDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T51745 = -236						; size = 4
$T51746 = -224						; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_symbolsToAdopt$ = 8					; size = 4
?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z PROC ; icu_56::DecimalFormatImpl::adoptDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 772
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 773
	cmp	DWORD PTR _symbolsToAdopt$[ebp], 0
	jne	SHORT $LN1@adoptDecim
; Line 774
	jmp	SHORT $LN2@adoptDecim
$LN1@adoptDecim:
; Line 776
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	mov	DWORD PTR $T51746[ebp], ecx
	mov	edx, DWORD PTR $T51746[ebp]
	mov	DWORD PTR $T51745[ebp], edx
	cmp	DWORD PTR $T51745[ebp], 0
	je	SHORT $LN4@adoptDecim
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51745[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51745[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN5@adoptDecim
$LN4@adoptDecim:
	mov	DWORD PTR tv76[ebp], 0
$LN5@adoptDecim:
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _symbolsToAdopt$[ebp]
	mov	DWORD PTR [eax+696], ecx
; Line 778
	mov	DWORD PTR _status$[ebp], 0
; Line 779
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
$LN2@adoptDecim:
; Line 780
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@adoptDecim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN8@adoptDecim:
	DD	1
	DD	$LN7@adoptDecim
$LN7@adoptDecim:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@adoptDecim
$LN6@adoptDecim:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ENDP ; icu_56::DecimalFormatImpl::adoptDecimalFormatSymbols
_TEXT	ENDS
PUBLIC	?updateForApplyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPatternFavorCurrencyPrecision
PUBLIC	__$ArrayPad$
PUBLIC	?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPatternFavorCurrencyPrecision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_perror$ = -92						; size = 72
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyPatternFavorCurrencyPrecision, COMDAT
; _this$ = ecx
; Line 784
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 786
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 787
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateForApplyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPatternFavorCurrencyPrecision
; Line 788
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@applyPatte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@applyPatte:
	DD	1
	DD	$LN4@applyPatte
$LN4@applyPatte:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN3@applyPatte
$LN3@applyPatte:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyPatternFavorCurrencyPrecision
_TEXT	ENDS
PUBLIC	?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPattern
PUBLIC	__$ArrayPad$
PUBLIC	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_perror$ = -92						; size = 72
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyPattern, COMDAT
; _this$ = ecx
; Line 792
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 794
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 795
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPattern
; Line 796
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@applyPatte@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@applyPatte@2:
	DD	1
	DD	$LN4@applyPatte@2
$LN4@applyPatte@2:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN3@applyPatte@2
$LN3@applyPatte@2:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyPattern
_TEXT	ENDS
PUBLIC	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_perror$ = 12						; size = 4
_status$ = 16						; size = 4
?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyPattern, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 803
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPattern
; Line 804
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyPattern
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_perror$ = -92						; size = 72
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyLocalizedPattern, COMDAT
; _this$ = ecx
; Line 808
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 811
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPattern
; Line 812
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@applyLocal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@applyLocal:
	DD	1
	DD	$LN4@applyLocal
$LN4@applyLocal:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN3@applyLocal
$LN3@applyLocal:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyLocalizedPattern
_TEXT	ENDS
PUBLIC	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_perror$ = 12						; size = 4
_status$ = 16						; size = 4
?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyLocalizedPattern, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 818
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 819
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateForApplyPattern
; Line 820
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyLocalizedPattern
_TEXT	ENDS
PUBLIC	??1DecimalFormatPatternParser@icu_56@@QAE@XZ	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser
PUBLIC	??1DecimalFormatPattern@icu_56@@QAE@XZ		; icu_56::DecimalFormatPattern::~DecimalFormatPattern
PUBLIC	__$ArrayPad$
EXTRN	?clear@DigitList@icu_56@@QAEXXZ:PROC		; icu_56::DigitList::clear
EXTRN	?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z:PROC ; icu_56::NumberFormat::setGroupingUsed
EXTRN	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumFractionDigits
EXTRN	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumFractionDigits
EXTRN	?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumIntegerDigits
EXTRN	?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumIntegerDigits
EXTRN	?applyPatternWithoutExpandAffix@DecimalFormatPatternParser@icu_56@@QAEXABVUnicodeString@2@AAUDecimalFormatPattern@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatPatternParser::applyPatternWithoutExpandAffix
EXTRN	??0DecimalFormatPattern@icu_56@@QAE@XZ:PROC	; icu_56::DecimalFormatPattern::DecimalFormatPattern
EXTRN	?useSymbols@DecimalFormatPatternParser@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DecimalFormatPatternParser::useSymbols
EXTRN	??0DecimalFormatPatternParser@icu_56@@QAE@XZ:PROC ; icu_56::DecimalFormatPatternParser::DecimalFormatPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv220 = -1888						; size = 4
tv219 = -1888						; size = 4
_out$ = -1688						; size = 1000
_patternParser$ = -680					; size = 648
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_localized$ = 12					; size = 1
_perror$ = 16						; size = 4
_status$ = 20						; size = 4
?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::applyPattern, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1876				; 00000754H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1888]
	mov	ecx, 469				; 000001d5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 826
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@applyPatte@3
; Line 827
	jmp	$LN13@applyPatte@3
$LN12@applyPatte@3:
; Line 829
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??0DecimalFormatPatternParser@icu_56@@QAE@XZ ; icu_56::DecimalFormatPatternParser::DecimalFormatPatternParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 830
	movsx	eax, BYTE PTR _localized$[ebp]
	test	eax, eax
	je	SHORT $LN11@applyPatte@3
; Line 831
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	?useSymbols@DecimalFormatPatternParser@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatPatternParser::useSymbols
$LN11@applyPatte@3:
; Line 833
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0DecimalFormatPattern@icu_56@@QAE@XZ	; icu_56::DecimalFormatPattern::DecimalFormatPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 835
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _perror$[ebp]
	push	ecx
	lea	edx, DWORD PTR _out$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	?applyPatternWithoutExpandAffix@DecimalFormatPatternParser@icu_56@@QAEXABVUnicodeString@2@AAUDecimalFormatPattern@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatPatternParser::applyPatternWithoutExpandAffix
; Line 836
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@applyPatte@3
; Line 837
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	jmp	$LN13@applyPatte@3
$LN10@applyPatte@3:
; Line 839
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _out$[ebp+28]
	mov	BYTE PTR [eax+136], cl
; Line 840
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _out$[ebp+16]
	mov	BYTE PTR [eax+137], cl
; Line 841
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMinimumIntegerDigits
; Line 842
	mov	eax, DWORD PTR _out$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMaximumIntegerDigits
; Line 843
	mov	eax, DWORD PTR _out$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMinimumFractionDigits
; Line 844
	mov	eax, DWORD PTR _out$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMaximumFractionDigits
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+20]
	mov	DWORD PTR [eax+128], ecx
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+24]
	mov	DWORD PTR [eax+132], ecx
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+32]
	mov	DWORD PTR [eax+1400], ecx
; Line 848
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _out$[ebp+36]
	mov	BYTE PTR [eax+1421], cl
; Line 849
	movzx	eax, BYTE PTR _out$[ebp+44]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z ; icu_56::NumberFormat::setGroupingUsed
; Line 850
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+48]
	mov	DWORD PTR [eax+140], ecx
; Line 851
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+52]
	mov	DWORD PTR [eax+144], ecx
; Line 852
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _out$[ebp+60]
	mov	BYTE PTR [eax+1420], cl
; Line 853
	movsx	eax, BYTE PTR _out$[ebp+68]
	test	eax, eax
	je	SHORT $LN9@applyPatte@3
; Line 854
	lea	eax, DWORD PTR _out$[ebp+72]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
; Line 855
	jmp	SHORT $LN8@applyPatte@3
$LN9@applyPatte@3:
; Line 856
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?clear@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::clear
$LN8@applyPatte@3:
; Line 858
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp+184]
	mov	DWORD PTR [eax+2656], ecx
; Line 859
	lea	eax, DWORD PTR _out$[ebp+448]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 860
	lea	eax, DWORD PTR _out$[ebp+584]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 861
	lea	eax, DWORD PTR _out$[ebp+720]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 862
	lea	eax, DWORD PTR _out$[ebp+856]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
; Line 869
	cmp	DWORD PTR _out$[ebp+64], 0
	jne	SHORT $LN15@applyPatte@3
	mov	DWORD PTR tv219[ebp], 0
	jmp	SHORT $LN16@applyPatte@3
$LN15@applyPatte@3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	mov	esi, eax
	add	esi, DWORD PTR _out$[ebp+64]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	add	esi, eax
	mov	DWORD PTR tv219[ebp], esi
$LN16@applyPatte@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv219[ebp]
	mov	DWORD PTR [eax+2660], ecx
; Line 870
	mov	eax, DWORD PTR _out$[ebp+992]
	mov	DWORD PTR tv220[ebp], eax
	cmp	DWORD PTR tv220[ebp], 3
	ja	SHORT $LN6@applyPatte@3
	mov	ecx, DWORD PTR tv220[ebp]
	jmp	DWORD PTR $LN24@applyPatte@3[ecx*4]
$LN5@applyPatte@3:
; Line 872
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2652], 0
; Line 873
	jmp	SHORT $LN6@applyPatte@3
$LN4@applyPatte@3:
; Line 875
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2652], 1
; Line 876
	jmp	SHORT $LN6@applyPatte@3
$LN3@applyPatte@3:
; Line 878
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2652], 2
; Line 879
	jmp	SHORT $LN6@applyPatte@3
$LN2@applyPatte@3:
; Line 881
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2652], 3
$LN6@applyPatte@3:
; Line 886
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
$LN13@applyPatte@3:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@applyPatte@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1888				; 00000760H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN23@applyPatte@3:
	DD	2
	DD	$LN22@applyPatte@3
$LN22@applyPatte@3:
	DD	-680					; fffffd58H
	DD	648					; 00000288H
	DD	$LN19@applyPatte@3
	DD	-1688					; fffff968H
	DD	1000					; 000003e8H
	DD	$LN20@applyPatte@3
$LN20@applyPatte@3:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN19@applyPatte@3:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
	npad	2
$LN24@applyPatte@3:
	DD	$LN5@applyPatte@3
	DD	$LN4@applyPatte@3
	DD	$LN3@applyPatte@3
	DD	$LN2@applyPatte@3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _patternParser$[ebp]
	jmp	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
__unwindfunclet$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??1DecimalFormatPattern@icu_56@@QAE@XZ
__ehhandler$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1892]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPattern@DecimalFormatImpl@icu_56@@AAEXABVUnicodeString@2@CAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::applyPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DecimalFormatPatternParser@icu_56@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DecimalFormatPatternParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$8
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormatPatternParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormatPatternParser@icu_56@@QAE@XZ PROC	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DecimalFormatPatternParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormatPatternParser@icu_56@@QAE@XZ ENDP	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DecimalFormatPattern@icu_56@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1DecimalFormatPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DecimalFormatPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormatPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormatPattern@icu_56@@QAE@XZ PROC		; icu_56::DecimalFormatPattern::~DecimalFormatPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 856				; 00000358H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 720				; 000002d0H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 720				; 000002d0H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__ehhandler$??1DecimalFormatPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormatPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormatPattern@icu_56@@QAE@XZ ENDP		; icu_56::DecimalFormatPattern::~DecimalFormatPattern
PUBLIC	?updatePrecisionForFixed@DecimalFormatImpl@icu_56@@AAEXXZ ; icu_56::DecimalFormatImpl::updatePrecisionForFixed
PUBLIC	?updatePrecisionForScientific@DecimalFormatImpl@icu_56@@AAEXXZ ; icu_56::DecimalFormatImpl::updatePrecisionForScientific
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ PROC	; icu_56::DecimalFormatImpl::updatePrecision, COMDAT
; _this$ = ecx
; Line 889
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN2@updatePrec
; Line 891
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecisionForScientific@DecimalFormatImpl@icu_56@@AAEXXZ ; icu_56::DecimalFormatImpl::updatePrecisionForScientific
; Line 892
	jmp	SHORT $LN3@updatePrec
$LN2@updatePrec:
; Line 893
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecisionForFixed@DecimalFormatImpl@icu_56@@AAEXXZ ; icu_56::DecimalFormatImpl::updatePrecisionForFixed
$LN3@updatePrec:
; Line 895
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ENDP	; icu_56::DecimalFormatImpl::updatePrecision
_TEXT	ENDS
PUBLIC	?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z ; icu_56::DecimalFormatImpl::extractMinMaxDigits
PUBLIC	?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z ; icu_56::DecimalFormatImpl::extractSigDigits
EXTRN	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z:PROC ; icu_56::DigitInterval::setIntDigitCount
EXTRN	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z:PROC ; icu_56::DigitInterval::setFracDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updatePrecisionForScientific@DecimalFormatImpl@icu_56@@AAEXXZ
_TEXT	SEGMENT
_min$ = -52						; size = 8
_max$ = -36						; size = 8
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?updatePrecisionForScientific@DecimalFormatImpl@icu_56@@AAEXXZ PROC ; icu_56::DecimalFormatImpl::updatePrecisionForScientific, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1256				; 000004e8H
	mov	DWORD PTR _result$[ebp], eax
; Line 962
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	test	ecx, ecx
	je	SHORT $LN1@updatePrec@2
; Line 963
	push	-1
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 964
	push	1
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 965
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 966
	push	1
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 967
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	?clear@SignificantDigitInterval@icu_56@@QAEXXZ ; icu_56::SignificantDigitInterval::clear
; Line 968
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z ; icu_56::DecimalFormatImpl::extractSigDigits
; Line 969
	jmp	SHORT $LN2@updatePrec@2
$LN1@updatePrec@2:
; Line 971
	lea	ecx, DWORD PTR _max$[ebp]
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
; Line 972
	lea	ecx, DWORD PTR _min$[ebp]
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
; Line 973
	lea	eax, DWORD PTR _max$[ebp]
	push	eax
	lea	ecx, DWORD PTR _min$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z ; icu_56::DecimalFormatImpl::extractMinMaxDigits
; Line 976
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	lea	eax, DWORD PTR _max$[ebp]
	push	eax
	lea	ecx, DWORD PTR _min$[ebp]
	push	ecx
	call	?updatePrecisionForScientificMinMax@icu_56@@YAXABVDigitInterval@1@0AAV21@1AAVSignificantDigitInterval@1@@Z ; icu_56::updatePrecisionForScientificMinMax
	add	esp, 20					; 00000014H
$LN2@updatePrec@2:
; Line 977
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@updatePrec@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@updatePrec@2:
	DD	2
	DD	$LN6@updatePrec@2
$LN6@updatePrec@2:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN4@updatePrec@2
	DD	-52					; ffffffccH
	DD	8
	DD	$LN5@updatePrec@2
$LN5@updatePrec@2:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN4@updatePrec@2:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?updatePrecisionForScientific@DecimalFormatImpl@icu_56@@AAEXXZ ENDP ; icu_56::DecimalFormatImpl::updatePrecisionForScientific
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updatePrecisionForScientificMinMax@icu_56@@YAXABVDigitInterval@1@0AAV21@1AAVSignificantDigitInterval@1@@Z
_TEXT	SEGMENT
tv81 = -289						; size = 1
_minSigDigits$42935 = -92				; size = 4
_maxSigDigits$ = -80					; size = 4
_fixedIntDigitCount$42930 = -68				; size = 4
_bExponentGrouping$ = -53				; size = 1
_minFracDigitCount$ = -44				; size = 4
_maxFracDigitCount$ = -32				; size = 4
_minIntDigitCount$ = -20				; size = 4
_maxIntDigitCount$ = -8					; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
_resultMin$ = 16					; size = 4
_resultMax$ = 20					; size = 4
_resultSignificant$ = 24				; size = 4
?updatePrecisionForScientificMinMax@icu_56@@YAXABVDigitInterval@1@0AAV21@1AAVSignificantDigitInterval@1@@Z PROC ; icu_56::updatePrecisionForScientificMinMax, COMDAT
; Line 902
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 903
	push	0
	mov	ecx, DWORD PTR _resultMin$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 904
	push	0
	mov	ecx, DWORD PTR _resultMin$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 905
	mov	ecx, DWORD PTR _resultSignificant$[ebp]
	call	?clear@SignificantDigitInterval@icu_56@@QAEXXZ ; icu_56::SignificantDigitInterval::clear
; Line 906
	mov	ecx, DWORD PTR _resultMax$[ebp]
	call	?clear@DigitInterval@icu_56@@QAEXXZ	; icu_56::DigitInterval::clear
; Line 908
	mov	ecx, DWORD PTR _max$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	mov	DWORD PTR _maxIntDigitCount$[ebp], eax
; Line 909
	mov	ecx, DWORD PTR _min$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	mov	DWORD PTR _minIntDigitCount$[ebp], eax
; Line 910
	mov	ecx, DWORD PTR _max$[ebp]
	call	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getFracDigitCount
	mov	DWORD PTR _maxFracDigitCount$[ebp], eax
; Line 911
	mov	ecx, DWORD PTR _min$[ebp]
	call	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getFracDigitCount
	mov	DWORD PTR _minFracDigitCount$[ebp], eax
; Line 921
	cmp	DWORD PTR _maxIntDigitCount$[ebp], 8
	jle	SHORT $LN6@updatePrec@3
; Line 922
	mov	eax, DWORD PTR _minIntDigitCount$[ebp]
	mov	DWORD PTR _maxIntDigitCount$[ebp], eax
$LN6@updatePrec@3:
; Line 927
	cmp	DWORD PTR _maxIntDigitCount$[ebp], 1
	jle	SHORT $LN9@updatePrec@3
	mov	eax, DWORD PTR _minIntDigitCount$[ebp]
	cmp	eax, DWORD PTR _maxIntDigitCount$[ebp]
	jge	SHORT $LN9@updatePrec@3
	mov	BYTE PTR tv81[ebp], 1
	jmp	SHORT $LN10@updatePrec@3
$LN9@updatePrec@3:
	mov	BYTE PTR tv81[ebp], 0
$LN10@updatePrec@3:
	mov	cl, BYTE PTR tv81[ebp]
	mov	BYTE PTR _bExponentGrouping$[ebp], cl
; Line 928
	movsx	eax, BYTE PTR _bExponentGrouping$[ebp]
	test	eax, eax
	je	SHORT $LN5@updatePrec@3
; Line 929
	mov	eax, DWORD PTR _maxIntDigitCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultMax$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 933
	push	1
	mov	ecx, DWORD PTR _resultMin$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 934
	jmp	SHORT $LN4@updatePrec@3
$LN5@updatePrec@3:
; Line 938
	mov	eax, DWORD PTR _maxIntDigitCount$[ebp]
	mov	DWORD PTR _fixedIntDigitCount$42930[ebp], eax
; Line 943
	cmp	DWORD PTR _fixedIntDigitCount$42930[ebp], 0
	jne	SHORT $LN3@updatePrec@3
	cmp	DWORD PTR _minFracDigitCount$[ebp], 0
	je	SHORT $LN2@updatePrec@3
	cmp	DWORD PTR _maxFracDigitCount$[ebp], 0
	jne	SHORT $LN3@updatePrec@3
$LN2@updatePrec@3:
; Line 944
	mov	DWORD PTR _fixedIntDigitCount$42930[ebp], 1
$LN3@updatePrec@3:
; Line 946
	mov	eax, DWORD PTR _fixedIntDigitCount$42930[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultMax$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 947
	mov	eax, DWORD PTR _fixedIntDigitCount$42930[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultMin$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
$LN4@updatePrec@3:
; Line 951
	mov	eax, DWORD PTR _minIntDigitCount$[ebp]
	add	eax, DWORD PTR _maxFracDigitCount$[ebp]
	mov	DWORD PTR _maxSigDigits$[ebp], eax
; Line 952
	cmp	DWORD PTR _maxSigDigits$[ebp], 0
	jle	SHORT $LN7@updatePrec@3
; Line 953
	mov	eax, DWORD PTR _minIntDigitCount$[ebp]
	add	eax, DWORD PTR _minFracDigitCount$[ebp]
	mov	DWORD PTR _minSigDigits$42935[ebp], eax
; Line 954
	mov	eax, DWORD PTR _minSigDigits$42935[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultSignificant$[ebp]
	call	?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMin
; Line 955
	mov	eax, DWORD PTR _maxSigDigits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultSignificant$[ebp]
	call	?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMax
$LN7@updatePrec@3:
; Line 957
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?updatePrecisionForScientificMinMax@icu_56@@YAXABVDigitInterval@1@0AAV21@1AAVSignificantDigitInterval@1@@Z ENDP ; icu_56::updatePrecisionForScientificMinMax
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updatePrecisionForFixed@DecimalFormatImpl@icu_56@@AAEXXZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?updatePrecisionForFixed@DecimalFormatImpl@icu_56@@AAEXXZ PROC ; icu_56::DecimalFormatImpl::updatePrecisionForFixed, COMDAT
; _this$ = ecx
; Line 980
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 981
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1256				; 000004e8H
	mov	DWORD PTR _result$[ebp], eax
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	test	ecx, ecx
	jne	SHORT $LN2@updatePrec@4
; Line 983
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z ; icu_56::DecimalFormatImpl::extractMinMaxDigits
; Line 984
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 16					; 00000010H
	call	?clear@SignificantDigitInterval@icu_56@@QAEXXZ ; icu_56::SignificantDigitInterval::clear
; Line 985
	jmp	SHORT $LN3@updatePrec@4
$LN2@updatePrec@4:
; Line 986
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z ; icu_56::DecimalFormatImpl::extractSigDigits
; Line 987
	push	1
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 988
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 989
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 8
	call	?clear@DigitInterval@icu_56@@QAEXXZ	; icu_56::DigitInterval::clear
$LN3@updatePrec@4:
; Line 991
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?updatePrecisionForFixed@DecimalFormatImpl@icu_56@@AAEXXZ ENDP ; icu_56::DecimalFormatImpl::updatePrecisionForFixed
_TEXT	ENDS
EXTRN	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMaximumFractionDigits
EXTRN	?getMinimumFractionDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMinimumFractionDigits
EXTRN	?getMaximumIntegerDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMaximumIntegerDigits
EXTRN	?getMinimumIntegerDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMinimumIntegerDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z PROC ; icu_56::DecimalFormatImpl::extractMinMaxDigits, COMDAT
; _this$ = ecx
; Line 995
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 996
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getMinimumIntegerDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumIntegerDigits
	push	eax
	mov	ecx, DWORD PTR _min$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 997
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getMaximumIntegerDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMaximumIntegerDigits
	push	eax
	mov	ecx, DWORD PTR _max$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 998
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getMinimumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumFractionDigits
	push	eax
	mov	ecx, DWORD PTR _min$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 999
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMaximumFractionDigits
	push	eax
	mov	ecx, DWORD PTR _max$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 1000
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z ENDP ; icu_56::DecimalFormatImpl::extractMinMaxDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_sig$ = 8						; size = 4
?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z PROC ; icu_56::DecimalFormatImpl::extractSigDigits, COMDAT
; _this$ = ecx
; Line 1004
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jge	SHORT $LN3@extractSig
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@extractSig
$LN3@extractSig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR tv68[ebp], edx
$LN4@extractSig:
	mov	eax, DWORD PTR tv68[ebp]
	push	eax
	mov	ecx, DWORD PTR _sig$[ebp]
	call	?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMin
; Line 1006
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	jge	SHORT $LN5@extractSig
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN6@extractSig
$LN5@extractSig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR tv74[ebp], edx
$LN6@extractSig:
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR _sig$[ebp]
	call	?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMax
; Line 1007
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z ENDP ; icu_56::DecimalFormatImpl::extractSigDigits
_TEXT	ENDS
EXTRN	?clear@DigitGrouping@icu_56@@QAEXXZ:PROC	; icu_56::DigitGrouping::clear
EXTRN	?isGroupingUsed@NumberFormat@icu_56@@QBECXZ:PROC ; icu_56::NumberFormat::isGroupingUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ PROC	; icu_56::DecimalFormatImpl::updateGrouping, COMDAT
; _this$ = ecx
; Line 1010
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?isGroupingUsed@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isGroupingUsed
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@updateGrou
; Line 1012
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 140				; 0000008cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1013
	jmp	SHORT $LN3@updateGrou
$LN2@updateGrou:
; Line 1014
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1408				; 00000580H
	call	?clear@DigitGrouping@icu_56@@QAEXXZ	; icu_56::DigitGrouping::clear
$LN3@updateGrou:
; Line 1016
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ENDP	; icu_56::DecimalFormatImpl::updateGrouping
_TEXT	ENDS
PUBLIC	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
PUBLIC	?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateCurrency, COMDAT
; _this$ = ecx
; Line 1019
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1020
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 1021
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateCurrency
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormatting, COMDAT
; _this$ = ecx
; Line 1026
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1027
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 1028
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormatting
_TEXT	ENDS
PUBLIC	?updateFormattingLocalizedNegativeSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativeSuffix
PUBLIC	?updateFormattingLocalizedNegativePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativePrefix
PUBLIC	?updateFormattingLocalizedPositiveSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositiveSuffix
PUBLIC	?updateFormattingLocalizedPositivePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositivePrefix
PUBLIC	?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingCurrencyAffixInfo
PUBLIC	?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingPluralRules
PUBLIC	?updateFormattingAffixParser@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingAffixParser
PUBLIC	?updateFormattingFixedPointFormatter@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingFixedPointFormatter
PUBLIC	?updateFormattingUsesCurrency@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingUsesCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_updatePrecisionBasedOnCurrency$ = 12			; size = 1
_status$ = 16						; size = 4
?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormatting, COMDAT
; _this$ = ecx
; Line 1034
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1035
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@updateForm
; Line 1036
	jmp	$LN2@updateForm
$LN1@updateForm:
; Line 1041
	lea	eax, DWORD PTR _changedFormattingFields$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingUsesCurrency@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingUsesCurrency
; Line 1042
	lea	eax, DWORD PTR _changedFormattingFields$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingFixedPointFormatter@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingFixedPointFormatter
; Line 1043
	lea	eax, DWORD PTR _changedFormattingFields$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingAffixParser@DecimalFormatImpl@icu_56@@AAEXAAH@Z ; icu_56::DecimalFormatImpl::updateFormattingAffixParser
; Line 1044
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingPluralRules
; Line 1048
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _updatePrecisionBasedOnCurrency$[ebp]
	push	ecx
	lea	edx, DWORD PTR _changedFormattingFields$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingCurrencyAffixInfo
; Line 1050
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingLocalizedPositivePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositivePrefix
; Line 1052
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingLocalizedPositiveSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositiveSuffix
; Line 1054
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingLocalizedNegativePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativePrefix
; Line 1056
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _changedFormattingFields$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormattingLocalizedNegativeSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativeSuffix
$LN2@updateForm:
; Line 1057
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormatting
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateFormattingUsesCurrency@DecimalFormatImpl@icu_56@@AAEXAAH@Z
_TEXT	SEGMENT
tv86 = -217						; size = 1
_newUsesCurrency$ = -17					; size = 1
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
?updateFormattingUsesCurrency@DecimalFormatImpl@icu_56@@AAEXAAH@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingUsesCurrency, COMDAT
; _this$ = ecx
; Line 1061
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1062
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 15					; 0000000fH
	jne	SHORT $LN2@updateForm@2
; Line 1064
	jmp	$LN3@updateForm@2
$LN2@updateForm@2:
; Line 1070
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?usesCurrency@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesCurrency
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@updateForm@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?usesCurrency@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesCurrency
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@updateForm@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?usesCurrency@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesCurrency
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN5@updateForm@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?usesCurrency@AffixPattern@icu_56@@QBECXZ ; icu_56::AffixPattern::usesCurrency
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@updateForm@2
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN6@updateForm@2
$LN5@updateForm@2:
	mov	BYTE PTR tv86[ebp], 1
$LN6@updateForm@2:
	mov	cl, BYTE PTR tv86[ebp]
	mov	BYTE PTR _newUsesCurrency$[ebp], cl
; Line 1071
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+708]
	movsx	edx, BYTE PTR _newUsesCurrency$[ebp]
	cmp	ecx, edx
	je	SHORT $LN3@updateForm@2
; Line 1072
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _newUsesCurrency$[ebp]
	mov	BYTE PTR [eax+708], cl
; Line 1073
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _changedFormattingFields$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@updateForm@2:
; Line 1075
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateFormattingUsesCurrency@DecimalFormatImpl@icu_56@@AAEXAAH@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingUsesCurrency
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1Locale@icu_56@@UAE@XZ:PROC
EXTRN	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::PluralRules::forLocale
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv135 = -476						; size = 4
tv136 = -472						; size = 4
tv131 = -472						; size = 4
$T51864 = -464						; size = 4
$T51865 = -452						; size = 4
$T42995 = -440						; size = 204
_newRules$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingPluralRules, COMDAT
; _this$ = ecx
; Line 1079
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-476]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1080
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 80					; 00000050H
	jne	SHORT $LN5@updateForm@3
; Line 1083
	jmp	$LN6@updateForm@3
$LN5@updateForm@3:
; Line 1085
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@updateForm@3
; Line 1086
	jmp	$LN6@updateForm@3
$LN4@updateForm@3:
; Line 1088
	mov	DWORD PTR _newRules$[ebp], 0
; Line 1089
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+708]
	test	ecx, ecx
	je	SHORT $LN3@updateForm@3
; Line 1090
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42995[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv136[ebp], eax
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	call	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
	add	esp, 8
	mov	DWORD PTR _newRules$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T42995[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1091
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@updateForm@3
; Line 1092
	jmp	SHORT $LN6@updateForm@3
$LN3@updateForm@3:
; Line 1098
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	cmp	ecx, DWORD PTR _newRules$[ebp]
	je	SHORT $LN6@updateForm@3
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+704]
	mov	DWORD PTR $T51865[ebp], ecx
	mov	edx, DWORD PTR $T51865[ebp]
	mov	DWORD PTR $T51864[ebp], edx
	cmp	DWORD PTR $T51864[ebp], 0
	je	SHORT $LN8@updateForm@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51864[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51864[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN9@updateForm@3
$LN8@updateForm@3:
	mov	DWORD PTR tv131[ebp], 0
$LN9@updateForm@3:
; Line 1100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newRules$[ebp]
	mov	DWORD PTR [eax+704], ecx
; Line 1101
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _changedFormattingFields$[ebp]
	mov	DWORD PTR [edx], ecx
$LN6@updateForm@3:
; Line 1103
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T42995[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateFormattingPluralRules@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingPluralRules
PUBLIC	__$ArrayPad$
EXTRN	?adjustPrecision@CurrencyAffixInfo@icu_56@@SAXPB_WW4UCurrencyUsage@@AAVFixedPrecision@2@AAW4UErrorCode@@@Z:PROC ; icu_56::CurrencyAffixInfo::adjustPrecision
EXTRN	??0FixedPrecision@icu_56@@QAE@XZ:PROC		; icu_56::FixedPrecision::FixedPrecision
EXTRN	?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::setCurrency
EXTRN	_ucurr_forLocale_56:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
EXTRN	?getCurrency@NumberFormat@icu_56@@QBEPB_WXZ:PROC ; icu_56::NumberFormat::getCurrency
EXTRN	?set@CurrencyAffixInfo@icu_56@@QAEXPBDPBVPluralRules@2@PB_WAAW4UErrorCode@@@Z:PROC ; icu_56::CurrencyAffixInfo::set
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$2
__ehfuncinfo$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv226 = -844						; size = 4
tv224 = -844						; size = 4
tv232 = -840						; size = 4
tv229 = -840						; size = 4
$T43015 = -832						; size = 204
$T43019 = -620						; size = 204
_precision$43025 = -216					; size = 144
_customCurrencySymbol$43021 = -61			; size = 1
_localeCurr$43013 = -52					; size = 8
_currency$43012 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_changedFormattingFields$ = 8				; size = 4
_updatePrecisionBasedOnCurrency$ = 12			; size = 1
_status$ = 16						; size = 4
?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingCurrencyAffixInfo, COMDAT
; _this$ = ecx
; Line 1109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 832				; 00000340H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-844]
	mov	ecx, 208				; 000000d0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1112
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 240				; 000000f0H
	jne	SHORT $LN14@updateForm@4
; Line 1114
	jmp	$LN15@updateForm@4
$LN14@updateForm@4:
; Line 1116
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@updateForm@4
; Line 1117
	jmp	$LN15@updateForm@4
$LN13@updateForm@4:
; Line 1119
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+708]
	test	ecx, ecx
	jne	SHORT $LN12@updateForm@4
; Line 1120
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ ; icu_56::CurrencyAffixInfo::isDefault
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@updateForm@4
; Line 1122
	jmp	$LN15@updateForm@4
$LN11@updateForm@4:
; Line 1124
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?set@CurrencyAffixInfo@icu_56@@QAEXPBDPBVPluralRules@2@PB_WAAW4UErrorCode@@@Z ; icu_56::CurrencyAffixInfo::set
; Line 1125
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@updateForm@4
; Line 1126
	jmp	$LN15@updateForm@4
$LN10@updateForm@4:
; Line 1128
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _changedFormattingFields$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1129
	jmp	$LN15@updateForm@4
$LN12@updateForm@4:
; Line 1130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCurrency@NumberFormat@icu_56@@QBEPB_WXZ ; icu_56::NumberFormat::getCurrency
	mov	DWORD PTR _currency$43012[ebp], eax
; Line 1132
	mov	eax, DWORD PTR _currency$43012[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	$LN8@updateForm@4
; Line 1133
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	4
	lea	ecx, DWORD PTR _localeCurr$43013[ebp]
	push	ecx
	lea	edx, DWORD PTR $T43015[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv229[ebp], eax
	mov	ecx, DWORD PTR tv229[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv224[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_ucurr_forLocale_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43015[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1134
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@updateForm@4
; Line 1135
	lea	eax, DWORD PTR _localeCurr$43013[ebp]
	mov	DWORD PTR _currency$43012[ebp], eax
; Line 1136
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$43012[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z ; icu_56::NumberFormat::setCurrency
; Line 1137
	jmp	SHORT $LN8@updateForm@4
$LN7@updateForm@4:
; Line 1138
	mov	DWORD PTR _currency$43012[ebp], 0
; Line 1139
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN8@updateForm@4:
; Line 1143
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$43012[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+704]
	push	eax
	lea	ecx, DWORD PTR $T43019[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv232[ebp], eax
	mov	eax, DWORD PTR tv232[ebp]
	mov	DWORD PTR tv226[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv226[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?set@CurrencyAffixInfo@icu_56@@QAEXPBDPBVPluralRules@2@PB_WAAW4UErrorCode@@@Z ; icu_56::CurrencyAffixInfo::set
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T43019[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1144
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@updateForm@4
; Line 1145
	jmp	$LN15@updateForm@4
$LN5@updateForm@4:
; Line 1147
	mov	BYTE PTR _customCurrencySymbol$43021[ebp], 0
; Line 1150
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@updateForm@4
; Line 1152
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setSymbol
; Line 1153
	mov	BYTE PTR _customCurrencySymbol$43021[ebp], 1
$LN4@updateForm@4:
; Line 1155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@updateForm@4
; Line 1157
	push	9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	call	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 968				; 000003c8H
	call	?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setISO
; Line 1158
	mov	BYTE PTR _customCurrencySymbol$43021[ebp], 1
$LN3@updateForm@4:
; Line 1160
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _changedFormattingFields$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1161
	cmp	DWORD PTR _currency$43012[ebp], 0
	je	$LN15@updateForm@4
	movsx	eax, BYTE PTR _customCurrencySymbol$43021[ebp]
	test	eax, eax
	jne	$LN15@updateForm@4
	movsx	eax, BYTE PTR _updatePrecisionBasedOnCurrency$[ebp]
	test	eax, eax
	je	$LN15@updateForm@4
; Line 1162
	lea	ecx, DWORD PTR _precision$43025[ebp]
	call	??0FixedPrecision@icu_56@@QAE@XZ	; icu_56::FixedPrecision::FixedPrecision
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1164
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _precision$43025[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+700]
	push	eax
	mov	ecx, DWORD PTR _currency$43012[ebp]
	push	ecx
	call	?adjustPrecision@CurrencyAffixInfo@icu_56@@SAXPB_WW4UCurrencyUsage@@AAVFixedPrecision@2@AAW4UErrorCode@@@Z ; icu_56::CurrencyAffixInfo::adjustPrecision
	add	esp, 16					; 00000010H
; Line 1165
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@updateForm@4
; Line 1166
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _precision$43025[ebp]
	call	??1FixedPrecision@icu_56@@QAE@XZ
	jmp	SHORT $LN15@updateForm@4
$LN1@updateForm@4:
; Line 1169
	lea	ecx, DWORD PTR _precision$43025[ebp]
	call	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getFracDigitCount
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMinimumFractionDigits
; Line 1171
	lea	ecx, DWORD PTR _precision$43025[ebp+8]
	call	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getFracDigitCount
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMaximumFractionDigits
; Line 1172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 1174
	lea	eax, DWORD PTR _precision$43025[ebp+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _precision$43025[ebp]
	call	??1FixedPrecision@icu_56@@QAE@XZ
$LN15@updateForm@4:
; Line 1178
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@updateForm@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 844				; 0000034cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN24@updateForm@4:
	DD	2
	DD	$LN23@updateForm@4
$LN23@updateForm@4:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN20@updateForm@4
	DD	-216					; ffffff28H
	DD	144					; 00000090H
	DD	$LN21@updateForm@4
$LN21@updateForm@4:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN20@updateForm@4:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43015[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43019[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _precision$43025[ebp]
	jmp	??1FixedPrecision@icu_56@@QAE@XZ
__ehhandler$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-848]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateFormattingCurrencyAffixInfo@DecimalFormatImpl@icu_56@@AAEXAAHCAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingCurrencyAffixInfo
EXTRN	?setDecimalFormatSymbols@DigitFormatter@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DigitFormatter::setDecimalFormatSymbols
EXTRN	?setDecimalFormatSymbolsForMonetary@DigitFormatter@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DigitFormatter::setDecimalFormatSymbolsForMonetary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateFormattingFixedPointFormatter@DecimalFormatImpl@icu_56@@AAEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
?updateFormattingFixedPointFormatter@DecimalFormatImpl@icu_56@@AAEXAAH@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingFixedPointFormatter, COMDAT
; _this$ = ecx
; Line 1182
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1183
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 80					; 00000050H
	jne	SHORT $LN3@updateForm@5
; Line 1185
	jmp	SHORT $LN4@updateForm@5
$LN3@updateForm@5:
; Line 1187
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+708]
	test	ecx, ecx
	je	SHORT $LN2@updateForm@5
; Line 1188
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	?setDecimalFormatSymbolsForMonetary@DigitFormatter@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z ; icu_56::DigitFormatter::setDecimalFormatSymbolsForMonetary
; Line 1189
	jmp	SHORT $LN4@updateForm@5
$LN2@updateForm@5:
; Line 1190
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1424				; 00000590H
	call	?setDecimalFormatSymbols@DigitFormatter@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z ; icu_56::DigitFormatter::setDecimalFormatSymbols
$LN4@updateForm@5:
; Line 1192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateFormattingFixedPointFormatter@DecimalFormatImpl@icu_56@@AAEXAAH@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingFixedPointFormatter
_TEXT	ENDS
EXTRN	?setDecimalFormatSymbols@AffixPatternParser@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z:PROC ; icu_56::AffixPatternParser::setDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateFormattingAffixParser@DecimalFormatImpl@icu_56@@AAEXAAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
?updateFormattingAffixParser@DecimalFormatImpl@icu_56@@AAEXAAH@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingAffixParser, COMDAT
; _this$ = ecx
; Line 1196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1197
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 16					; 00000010H
	jne	SHORT $LN1@updateForm@6
; Line 1199
	jmp	SHORT $LN2@updateForm@6
$LN1@updateForm@6:
; Line 1201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+696]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?setDecimalFormatSymbols@AffixPatternParser@icu_56@@QAEXABVDecimalFormatSymbols@2@@Z ; icu_56::AffixPatternParser::setDecimalFormatSymbols
; Line 1202
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _changedFormattingFields$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@updateForm@6:
; Line 1203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateFormattingAffixParser@DecimalFormatImpl@icu_56@@AAEXAAH@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingAffixParser
_TEXT	ENDS
EXTRN	?parse@AffixPatternParser@icu_56@@QBEAAVPluralAffix@2@ABVAffixPattern@2@ABVCurrencyAffixInfo@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::AffixPatternParser::parse
EXTRN	?remove@PluralAffix@icu_56@@QAEXXZ:PROC		; icu_56::PluralAffix::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateFormattingLocalizedPositivePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormattingLocalizedPositivePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositivePrefix, COMDAT
; _this$ = ecx
; Line 1207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1208
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@updateForm@7
; Line 1209
	jmp	SHORT $LN3@updateForm@7
$LN2@updateForm@7:
; Line 1212
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 769				; 00000301H
	jne	SHORT $LN1@updateForm@7
; Line 1214
	jmp	SHORT $LN3@updateForm@7
$LN1@updateForm@7:
; Line 1216
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	call	?remove@PluralAffix@icu_56@@QAEXXZ	; icu_56::PluralAffix::remove
; Line 1221
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2044				; 000007fcH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?parse@AffixPatternParser@icu_56@@QBEAAVPluralAffix@2@ABVAffixPattern@2@ABVCurrencyAffixInfo@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::AffixPatternParser::parse
$LN3@updateForm@7:
; Line 1222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?updateFormattingLocalizedPositivePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositivePrefix
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateFormattingLocalizedPositiveSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormattingLocalizedPositiveSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositiveSuffix, COMDAT
; _this$ = ecx
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1227
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@updateForm@8
; Line 1228
	jmp	SHORT $LN3@updateForm@8
$LN2@updateForm@8:
; Line 1231
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 772				; 00000304H
	jne	SHORT $LN1@updateForm@8
; Line 1233
	jmp	SHORT $LN3@updateForm@8
$LN1@updateForm@8:
; Line 1235
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2196				; 00000894H
	call	?remove@PluralAffix@icu_56@@QAEXXZ	; icu_56::PluralAffix::remove
; Line 1240
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2196				; 00000894H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?parse@AffixPatternParser@icu_56@@QBEAAVPluralAffix@2@ABVAffixPattern@2@ABVCurrencyAffixInfo@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::AffixPatternParser::parse
$LN3@updateForm@8:
; Line 1241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?updateFormattingLocalizedPositiveSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingLocalizedPositiveSuffix
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateFormattingLocalizedNegativePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormattingLocalizedNegativePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativePrefix, COMDAT
; _this$ = ecx
; Line 1245
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1246
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@updateForm@9
; Line 1247
	jmp	SHORT $LN3@updateForm@9
$LN2@updateForm@9:
; Line 1250
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 770				; 00000302H
	jne	SHORT $LN1@updateForm@9
; Line 1252
	jmp	SHORT $LN3@updateForm@9
$LN1@updateForm@9:
; Line 1254
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2348				; 0000092cH
	call	?remove@PluralAffix@icu_56@@QAEXXZ	; icu_56::PluralAffix::remove
; Line 1259
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2348				; 0000092cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 288				; 00000120H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?parse@AffixPatternParser@icu_56@@QBEAAVPluralAffix@2@ABVAffixPattern@2@ABVCurrencyAffixInfo@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::AffixPatternParser::parse
$LN3@updateForm@9:
; Line 1260
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?updateFormattingLocalizedNegativePrefix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativePrefix
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateFormattingLocalizedNegativeSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_changedFormattingFields$ = 8				; size = 4
_status$ = 12						; size = 4
?updateFormattingLocalizedNegativeSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativeSuffix, COMDAT
; _this$ = ecx
; Line 1264
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1265
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@updateForm@10
; Line 1266
	jmp	SHORT $LN3@updateForm@10
$LN2@updateForm@10:
; Line 1269
	mov	eax, DWORD PTR _changedFormattingFields$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 776				; 00000308H
	jne	SHORT $LN1@updateForm@10
; Line 1271
	jmp	SHORT $LN3@updateForm@10
$LN1@updateForm@10:
; Line 1273
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2500				; 000009c4H
	call	?remove@PluralAffix@icu_56@@QAEXXZ	; icu_56::PluralAffix::remove
; Line 1278
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2500				; 000009c4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 968				; 000003c8H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 560				; 00000230H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 712				; 000002c8H
	call	?parse@AffixPatternParser@icu_56@@QBEAAVPluralAffix@2@ABVAffixPattern@2@ABVCurrencyAffixInfo@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::AffixPatternParser::parse
$LN3@updateForm@10:
; Line 1279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?updateFormattingLocalizedNegativeSuffix@DecimalFormatImpl@icu_56@@AAEXAAHAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateFormattingLocalizedNegativeSuffix
_TEXT	ENDS
PUBLIC	?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?updateForApplyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?updateForApplyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateForApplyPatternFavorCurrencyPrecision, COMDAT
; _this$ = ecx
; Line 1283
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1284
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	1007					; 000003efH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
; Line 1285
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateForApplyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateForApplyPatternFavorCurrencyPrecision
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateForApplyPattern, COMDAT
; _this$ = ecx
; Line 1288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1289
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1007					; 000003efH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
; Line 1290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateForApplyPattern@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateForApplyPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateAll, COMDAT
; _this$ = ecx
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1294
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	1023					; 000003ffH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateAll
; Line 1295
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?updateAll@DecimalFormatImpl@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_formattingFlags$ = 8					; size = 4
_updatePrecisionBasedOnCurrency$ = 12			; size = 1
_status$ = 16						; size = 4
?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::updateAll, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@updateAll
; Line 1303
	jmp	SHORT $LN2@updateAll
$LN1@updateAll:
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 1306
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
; Line 1308
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _updatePrecisionBasedOnCurrency$[ebp]
	push	ecx
	mov	edx, DWORD PTR _formattingFlags$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateFormatting@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateFormatting
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPatternScale@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::getPatternScale
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMultiplierScale@DecimalFormatImpl@icu_56@@AAEXH@Z ; icu_56::DecimalFormatImpl::setMultiplierScale
$LN2@updateAll:
; Line 1310
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?updateAll@DecimalFormatImpl@icu_56@@AAEXHCAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::updateAll
_TEXT	ENDS
PUBLIC	?computeExponentPatternLength@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::computeExponentPatternLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?computeExponentPatternLength@DecimalFormatImpl@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?computeExponentPatternLength@DecimalFormatImpl@icu_56@@ABEHXZ PROC ; icu_56::DecimalFormatImpl::computeExponentPatternLength, COMDAT
; _this$ = ecx
; Line 1352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1353
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN1@computeExp
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1421]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1400]
	lea	eax, DWORD PTR [ecx+eax+1]
	jmp	SHORT $LN2@computeExp
$LN1@computeExp:
; Line 1356
	xor	eax, eax
$LN2@computeExp:
; Line 1357
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?computeExponentPatternLength@DecimalFormatImpl@icu_56@@ABEHXZ ENDP ; icu_56::DecimalFormatImpl::computeExponentPatternLength
_TEXT	ENDS
PUBLIC	?countFractionDigitAndDecimalPatternLength@DecimalFormatImpl@icu_56@@ABEHH@Z ; icu_56::DecimalFormatImpl::countFractionDigitAndDecimalPatternLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countFractionDigitAndDecimalPatternLength@DecimalFormatImpl@icu_56@@ABEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fracDigitCount$ = 8					; size = 4
?countFractionDigitAndDecimalPatternLength@DecimalFormatImpl@icu_56@@ABEHH@Z PROC ; icu_56::DecimalFormatImpl::countFractionDigitAndDecimalPatternLength, COMDAT
; _this$ = ecx
; Line 1361
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1362
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1420]
	test	ecx, ecx
	jne	SHORT $LN1@countFract
	cmp	DWORD PTR _fracDigitCount$[ebp], 0
	jne	SHORT $LN1@countFract
; Line 1363
	xor	eax, eax
	jmp	SHORT $LN2@countFract
$LN1@countFract:
; Line 1365
	mov	eax, DWORD PTR _fracDigitCount$[ebp]
	add	eax, 1
$LN2@countFract:
; Line 1366
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?countFractionDigitAndDecimalPatternLength@DecimalFormatImpl@icu_56@@ABEHH@Z ENDP ; icu_56::DecimalFormatImpl::countFractionDigitAndDecimalPatternLength
_TEXT	ENDS
PUBLIC	?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z ; icu_56::DecimalFormatImpl::toNumberPattern
EXTRN	?isSeparatorAt@DigitGrouping@icu_56@@QBECHH@Z:PROC ; icu_56::DigitGrouping::isSeparatorAt
EXTRN	?contains@DigitInterval@icu_56@@QBECH@Z:PROC	; icu_56::DigitInterval::contains
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	?getDigitByExponent@DigitList@icu_56@@QBEEH@Z:PROC ; icu_56::DigitList::getDigitByExponent
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	?expandToContainDigit@DigitInterval@icu_56@@QAEXH@Z:PROC ; icu_56::DigitInterval::expandToContainDigit
EXTRN	?getUpperExponent@DigitList@icu_56@@QBEHXZ:PROC	; icu_56::DigitList::getUpperExponent
EXTRN	?shrinkToFitWithin@DigitInterval@icu_56@@QAEXABV12@@Z:PROC ; icu_56::DigitInterval::shrinkToFitWithin
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z
_TEXT	SEGMENT
$T51917 = -449						; size = 1
$T51918 = -437						; size = 1
_i$43173 = -236						; size = 4
_i$43145 = -224						; size = 4
_minDigitPos$ = -212					; size = 4
_maxDigitPos$ = -200					; size = 4
_digitsNeeded$43138 = -188				; size = 4
_mininumLengthForMantissaIntPart$43137 = -176		; size = 4
_minimumLengthForMantissa$43136 = -164			; size = 4
_minLengthToDescribeGrouping$ = -152			; size = 4
_sigInterval$43125 = -140				; size = 8
_roundingIncrementUpperExp$ = -124			; size = 4
_roundingIncrementLowerExp$ = -112			; size = 4
_fullInterval$ = -100					; size = 8
_sigMax$ = -84						; size = 4
_sigMin$ = -72						; size = 4
_maxInterval$ = -60					; size = 8
_minInterval$ = -44					; size = 8
_grouping$ = -28					; size = 12
_this$ = -8						; size = 4
_hasPadding$ = 8					; size = 1
_minimumLength$ = 12					; size = 4
_result$ = 16						; size = 4
?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z PROC ; icu_56::DecimalFormatImpl::toNumberPattern, COMDAT
; _this$ = ecx
; Line 1370
	push	ebp
	mov	ebp, esp
	sub	esp, 456				; 000001c8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	BYTE PTR $T51917[ebp], 0
	mov	BYTE PTR $T51918[ebp], 0
; Line 1373
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1408				; 00000580H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _grouping$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _grouping$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _grouping$[ebp+8], eax
; Line 1374
	mov	DWORD PTR _grouping$[ebp+8], 0
; Line 1377
	lea	ecx, DWORD PTR _minInterval$[ebp]
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
; Line 1380
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
; Line 1388
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
; Line 1392
	mov	DWORD PTR _roundingIncrementLowerExp$[ebp], 0
; Line 1393
	mov	DWORD PTR _roundingIncrementUpperExp$[ebp], 0
; Line 1395
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	test	ecx, ecx
	je	SHORT $LN34@toNumberPa
; Line 1396
	lea	ecx, DWORD PTR _sigInterval$43125[ebp]
	call	??0SignificantDigitInterval@icu_56@@QAE@XZ ; icu_56::SignificantDigitInterval::SignificantDigitInterval
; Line 1397
	lea	eax, DWORD PTR _sigInterval$43125[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractSigDigits@DecimalFormatImpl@icu_56@@ABEXAAVSignificantDigitInterval@2@@Z ; icu_56::DecimalFormatImpl::extractSigDigits
; Line 1398
	lea	ecx, DWORD PTR _sigInterval$43125[ebp]
	call	?getMax@SignificantDigitInterval@icu_56@@QBEHXZ ; icu_56::SignificantDigitInterval::getMax
	mov	BYTE PTR $T51917[ebp], 1
	mov	DWORD PTR _sigMax$[ebp], eax
; Line 1399
	lea	ecx, DWORD PTR _sigInterval$43125[ebp]
	call	?getMin@SignificantDigitInterval@icu_56@@QBEHXZ ; icu_56::SignificantDigitInterval::getMin
	mov	BYTE PTR $T51918[ebp], 1
	mov	DWORD PTR _sigMin$[ebp], eax
; Line 1400
	push	0
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?setFracDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setFracDigitCount
; Line 1401
	cmp	BYTE PTR $T51917[ebp], 0
	jne	SHORT $LN37@toNumberPa
	push	OFFSET $LN38@toNumberPa
	call	__RTC_UninitUse
	add	esp, 4
$LN37@toNumberPa:
	mov	eax, DWORD PTR _sigMax$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 1402
	jmp	$LN33@toNumberPa
$LN34@toNumberPa:
; Line 1403
	lea	eax, DWORD PTR _maxInterval$[ebp]
	push	eax
	lea	ecx, DWORD PTR _minInterval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractMinMaxDigits@DecimalFormatImpl@icu_56@@ABEXAAVDigitInterval@2@0@Z ; icu_56::DecimalFormatImpl::extractMinMaxDigits
; Line 1404
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	SHORT $LN32@toNumberPa
; Line 1405
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	cmp	eax, 8
	jle	SHORT $LN31@toNumberPa
; Line 1406
	push	1
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 1407
	lea	eax, DWORD PTR _maxInterval$[ebp]
	push	eax
	lea	ecx, DWORD PTR _minInterval$[ebp]
	call	?shrinkToFitWithin@DigitInterval@icu_56@@QAEXABV12@@Z ; icu_56::DigitInterval::shrinkToFitWithin
$LN31@toNumberPa:
; Line 1408
	jmp	SHORT $LN30@toNumberPa
$LN32@toNumberPa:
; Line 1409
	movsx	eax, BYTE PTR _hasPadding$[ebp]
	test	eax, eax
	je	SHORT $LN29@toNumberPa
; Line 1412
	lea	ecx, DWORD PTR _minInterval$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	push	eax
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
; Line 1413
	jmp	SHORT $LN30@toNumberPa
$LN29@toNumberPa:
; Line 1415
	lea	ecx, DWORD PTR _minInterval$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
$LN30@toNumberPa:
; Line 1417
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN27@toNumberPa
; Line 1419
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?getLowerExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getLowerExponent
	mov	DWORD PTR _roundingIncrementLowerExp$[ebp], eax
; Line 1421
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	mov	DWORD PTR _roundingIncrementUpperExp$[ebp], eax
; Line 1423
	mov	eax, DWORD PTR _roundingIncrementLowerExp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?expandToContainDigit@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::expandToContainDigit
; Line 1424
	mov	eax, DWORD PTR _roundingIncrementUpperExp$[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _maxInterval$[ebp]
	call	?expandToContainDigit@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::expandToContainDigit
$LN27@toNumberPa:
; Line 1426
	mov	eax, DWORD PTR _maxInterval$[ebp]
	mov	DWORD PTR _fullInterval$[ebp], eax
	mov	ecx, DWORD PTR _maxInterval$[ebp+4]
	mov	DWORD PTR _fullInterval$[ebp+4], ecx
$LN33@toNumberPa:
; Line 1430
	lea	eax, DWORD PTR _grouping$[ebp]
	push	eax
	call	?getMinimumLengthToDescribeGrouping@icu_56@@YAHABVDigitGrouping@1@@Z ; icu_56::getMinimumLengthToDescribeGrouping
	add	esp, 4
	mov	DWORD PTR _minLengthToDescribeGrouping$[ebp], eax
; Line 1431
	cmp	DWORD PTR _minLengthToDescribeGrouping$[ebp], 0
	jle	SHORT $LN26@toNumberPa
; Line 1433
	lea	eax, DWORD PTR _grouping$[ebp]
	push	eax
	call	?getMinimumLengthToDescribeGrouping@icu_56@@YAHABVDigitGrouping@1@@Z ; icu_56::getMinimumLengthToDescribeGrouping
	add	esp, 4
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?expandToContainDigit@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::expandToContainDigit
$LN26@toNumberPa:
; Line 1438
	movsx	eax, BYTE PTR _hasPadding$[ebp]
	test	eax, eax
	je	$LN25@toNumberPa
; Line 1442
	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeExponentPatternLength@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::computeExponentPatternLength
	mov	ecx, DWORD PTR _minimumLength$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _minimumLengthForMantissa$43136[ebp], ecx
; Line 1446
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getFracDigitCount
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countFractionDigitAndDecimalPatternLength@DecimalFormatImpl@icu_56@@ABEHH@Z ; icu_56::DecimalFormatImpl::countFractionDigitAndDecimalPatternLength
	mov	ecx, DWORD PTR _minimumLengthForMantissa$43136[ebp]
	sub	ecx, eax
	mov	DWORD PTR _mininumLengthForMantissaIntPart$43137[ebp], ecx
; Line 1454
	lea	eax, DWORD PTR _digitsNeeded$43138[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	push	eax
	mov	ecx, DWORD PTR _mininumLengthForMantissaIntPart$43137[ebp]
	push	ecx
	lea	edx, DWORD PTR _grouping$[ebp]
	push	edx
	call	?getLeftDigitsForLeftLength@icu_56@@YACABVDigitGrouping@1@HHAAH@Z ; icu_56::getLeftDigitsForLeftLength
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN24@toNumberPa
; Line 1457
	mov	eax, DWORD PTR _digitsNeeded$43138[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
	jmp	SHORT $LN25@toNumberPa
$LN24@toNumberPa:
; Line 1458
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getIntDigitCount
	cmp	DWORD PTR _digitsNeeded$43138[ebp], eax
	jle	SHORT $LN25@toNumberPa
; Line 1465
	mov	esi, esp
	push	35					; 00000023H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1466
	mov	eax, DWORD PTR _digitsNeeded$43138[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?setIntDigitCount@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setIntDigitCount
$LN25@toNumberPa:
; Line 1469
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getMostSignificantExclusive
	mov	DWORD PTR _maxDigitPos$[ebp], eax
; Line 1470
	lea	ecx, DWORD PTR _fullInterval$[ebp]
	call	?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getLeastSignificantInclusive
	mov	DWORD PTR _minDigitPos$[ebp], eax
; Line 1471
	mov	eax, DWORD PTR _maxDigitPos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$43145[ebp], eax
	jmp	SHORT $LN21@toNumberPa
$LN20@toNumberPa:
	mov	eax, DWORD PTR _i$43145[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$43145[ebp], eax
$LN21@toNumberPa:
	mov	eax, DWORD PTR _i$43145[ebp]
	cmp	eax, DWORD PTR _minDigitPos$[ebp]
	jl	$LN19@toNumberPa
; Line 1472
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1420]
	test	ecx, ecx
	jne	SHORT $LN18@toNumberPa
	cmp	DWORD PTR _i$43145[ebp], -1
	jne	SHORT $LN18@toNumberPa
; Line 1473
	mov	esi, esp
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@toNumberPa:
; Line 1475
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	test	ecx, ecx
	je	$LN17@toNumberPa
; Line 1477
	cmp	BYTE PTR $T51917[ebp], 0
	jne	SHORT $LN39@toNumberPa
	push	OFFSET $LN38@toNumberPa
	call	__RTC_UninitUse
	add	esp, 4
$LN39@toNumberPa:
	mov	eax, DWORD PTR _i$43145[ebp]
	cmp	eax, DWORD PTR _sigMax$[ebp]
	jge	SHORT $LN15@toNumberPa
	cmp	BYTE PTR $T51917[ebp], 0
	jne	SHORT $LN40@toNumberPa
	push	OFFSET $LN38@toNumberPa
	call	__RTC_UninitUse
	add	esp, 4
$LN40@toNumberPa:
	cmp	BYTE PTR $T51918[ebp], 0
	jne	SHORT $LN41@toNumberPa
	push	OFFSET $LN42@toNumberPa
	call	__RTC_UninitUse
	add	esp, 4
$LN41@toNumberPa:
	mov	eax, DWORD PTR _sigMax$[ebp]
	sub	eax, DWORD PTR _sigMin$[ebp]
	cmp	DWORD PTR _i$43145[ebp], eax
	jge	SHORT $LN16@toNumberPa
$LN15@toNumberPa:
; Line 1478
	mov	esi, esp
	push	35					; 00000023H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1479
	jmp	SHORT $LN14@toNumberPa
$LN16@toNumberPa:
; Line 1480
	mov	esi, esp
	push	64					; 00000040H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@toNumberPa:
; Line 1482
	jmp	$LN13@toNumberPa
$LN17@toNumberPa:
; Line 1483
	mov	eax, DWORD PTR _i$43145[ebp]
	cmp	eax, DWORD PTR _roundingIncrementUpperExp$[ebp]
	jge	SHORT $LN12@toNumberPa
	mov	eax, DWORD PTR _i$43145[ebp]
	cmp	eax, DWORD PTR _roundingIncrementLowerExp$[ebp]
	jl	SHORT $LN12@toNumberPa
; Line 1484
	mov	eax, DWORD PTR _i$43145[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1280				; 00000500H
	call	?getDigitByExponent@DigitList@icu_56@@QBEEH@Z ; icu_56::DigitList::getDigitByExponent
	movzx	ecx, al
	add	ecx, 48					; 00000030H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN13@toNumberPa
$LN12@toNumberPa:
; Line 1485
	mov	eax, DWORD PTR _i$43145[ebp]
	push	eax
	lea	ecx, DWORD PTR _minInterval$[ebp]
	call	?contains@DigitInterval@icu_56@@QBECH@Z	; icu_56::DigitInterval::contains
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@toNumberPa
; Line 1486
	mov	esi, esp
	push	48					; 00000030H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1487
	jmp	SHORT $LN13@toNumberPa
$LN10@toNumberPa:
; Line 1488
	mov	esi, esp
	push	35					; 00000023H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@toNumberPa:
; Line 1491
	mov	eax, DWORD PTR _i$43145[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$43145[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _grouping$[ebp]
	call	?isSeparatorAt@DigitGrouping@icu_56@@QBECHH@Z ; icu_56::DigitGrouping::isSeparatorAt
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@toNumberPa
; Line 1492
	mov	esi, esp
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@toNumberPa:
; Line 1494
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1420]
	test	ecx, ecx
	je	SHORT $LN7@toNumberPa
	cmp	DWORD PTR _i$43145[ebp], 0
	jne	SHORT $LN7@toNumberPa
; Line 1495
	mov	esi, esp
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@toNumberPa:
; Line 1497
	jmp	$LN20@toNumberPa
$LN19@toNumberPa:
; Line 1498
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+136]
	test	ecx, ecx
	je	$LN6@toNumberPa
; Line 1499
	mov	esi, esp
	push	69					; 00000045H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1500
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1421]
	test	ecx, ecx
	je	SHORT $LN5@toNumberPa
; Line 1501
	mov	esi, esp
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@toNumberPa:
; Line 1503
	mov	DWORD PTR _i$43173[ebp], 0
	jmp	SHORT $LN4@toNumberPa
$LN3@toNumberPa:
	mov	eax, DWORD PTR _i$43173[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43173[ebp], eax
$LN4@toNumberPa:
	cmp	DWORD PTR _i$43173[ebp], 1
	jl	SHORT $LN1@toNumberPa
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$43173[ebp]
	cmp	ecx, DWORD PTR [eax+1400]
	jge	SHORT $LN6@toNumberPa
$LN1@toNumberPa:
; Line 1504
	mov	esi, esp
	push	48					; 00000030H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1505
	jmp	SHORT $LN3@toNumberPa
$LN6@toNumberPa:
; Line 1507
	mov	eax, DWORD PTR _result$[ebp]
; Line 1508
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN50@toNumberPa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN50@toNumberPa:
	DD	6
	DD	$LN49@toNumberPa
$LN49@toNumberPa:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN43@toNumberPa
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN44@toNumberPa
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN45@toNumberPa
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN46@toNumberPa
	DD	-140					; ffffff74H
	DD	8
	DD	$LN47@toNumberPa
	DD	-188					; ffffff44H
	DD	4
	DD	$LN48@toNumberPa
$LN48@toNumberPa:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN47@toNumberPa:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN46@toNumberPa:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN45@toNumberPa:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN44@toNumberPa:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN43@toNumberPa:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN42@toNumberPa:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	77					; 0000004dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN38@toNumberPa:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z ENDP ; icu_56::DecimalFormatImpl::toNumberPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMinimumLengthToDescribeGrouping@icu_56@@YAHABVDigitGrouping@1@@Z
_TEXT	SEGMENT
_grouping$ = 8						; size = 4
?getMinimumLengthToDescribeGrouping@icu_56@@YAHABVDigitGrouping@1@@Z PROC ; icu_56::getMinimumLengthToDescribeGrouping, COMDAT
; Line 1314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1315
	mov	eax, DWORD PTR _grouping$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN2@getMinimum
; Line 1316
	xor	eax, eax
	jmp	SHORT $LN3@getMinimum
$LN2@getMinimum:
; Line 1318
	mov	eax, DWORD PTR _grouping$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jg	SHORT $LN1@getMinimum
; Line 1319
	mov	eax, DWORD PTR _grouping$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 1
	jmp	SHORT $LN3@getMinimum
$LN1@getMinimum:
; Line 1321
	mov	eax, DWORD PTR _grouping$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _grouping$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	eax, DWORD PTR [ecx+eax+1]
$LN3@getMinimum:
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumLengthToDescribeGrouping@icu_56@@YAHABVDigitGrouping@1@@Z ENDP ; icu_56::getMinimumLengthToDescribeGrouping
_TEXT	ENDS
EXTRN	?getSeparatorCount@DigitGrouping@icu_56@@QBEHH@Z:PROC ; icu_56::DigitGrouping::getSeparatorCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLeftDigitsForLeftLength@icu_56@@YACABVDigitGrouping@1@HHAAH@Z
_TEXT	SEGMENT
_lengthSoFar$ = -8					; size = 4
_grouping$ = 8						; size = 4
_desiredLength$ = 12					; size = 4
_minLeftDigits$ = 16					; size = 4
_leftDigits$ = 20					; size = 4
?getLeftDigitsForLeftLength@icu_56@@YACABVDigitGrouping@1@HHAAH@Z PROC ; icu_56::getLeftDigitsForLeftLength, COMDAT
; Line 1341
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1342
	mov	eax, DWORD PTR _leftDigits$[ebp]
	mov	ecx, DWORD PTR _minLeftDigits$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1343
	mov	eax, DWORD PTR _leftDigits$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _grouping$[ebp]
	call	?getSeparatorCount@DigitGrouping@icu_56@@QBEHH@Z ; icu_56::DigitGrouping::getSeparatorCount
	mov	edx, DWORD PTR _leftDigits$[ebp]
	add	eax, DWORD PTR [edx]
	mov	DWORD PTR _lengthSoFar$[ebp], eax
$LN2@getLeftDig:
; Line 1344
	mov	eax, DWORD PTR _lengthSoFar$[ebp]
	cmp	eax, DWORD PTR _desiredLength$[ebp]
	jge	SHORT $LN1@getLeftDig
; Line 1345
	mov	eax, DWORD PTR _leftDigits$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _leftDigits$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _grouping$[ebp]
	call	?isSeparatorAt@DigitGrouping@icu_56@@QBECHH@Z ; icu_56::DigitGrouping::isSeparatorAt
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _lengthSoFar$[ebp]
	mov	DWORD PTR _lengthSoFar$[ebp], ecx
; Line 1346
	mov	eax, DWORD PTR _leftDigits$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _leftDigits$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1347
	jmp	SHORT $LN2@getLeftDig
$LN1@getLeftDig:
; Line 1348
	mov	eax, DWORD PTR _lengthSoFar$[ebp]
	cmp	eax, DWORD PTR _desiredLength$[ebp]
	sete	al
; Line 1349
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getLeftDigitsForLeftLength@icu_56@@YACABVDigitGrouping@1@HHAAH@Z ENDP ; icu_56::getLeftDigitsForLeftLength
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::toPattern
EXTRN	?append@AffixPattern@icu_56@@QAEAAV12@ABV12@@Z:PROC ; icu_56::AffixPattern::append
EXTRN	?add@AffixPattern@icu_56@@QAEXW4ETokenType@12@@Z:PROC ; icu_56::AffixPattern::add
EXTRN	?toUserString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::AffixPattern::toUserString
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$1
__ehfuncinfo$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
$T51941 = -444						; size = 4
_withNegative$ = -240					; size = 136
_padSpec$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormatImpl::toPattern, COMDAT
; _this$ = ecx
; Line 1511
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1512
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1513
	mov	esi, esp
	lea	ecx, DWORD PTR _padSpec$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1514
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2660], 0
	jle	SHORT $LN11@toPattern
; Line 1515
	mov	esi, esp
	push	42					; 0000002aH
	lea	ecx, DWORD PTR _padSpec$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1516
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2656]
	push	ecx
	lea	ecx, DWORD PTR _padSpec$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@toPattern:
; Line 1518
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 0
	jne	SHORT $LN10@toPattern
; Line 1519
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@toPattern:
; Line 1521
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?toUserString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toUserString
; Line 1522
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 1
	jne	SHORT $LN9@toPattern
; Line 1523
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@toPattern:
; Line 1528
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+2660]
	sub	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	sub	esi, eax
	push	esi
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+2660], 0
	setg	al
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z ; icu_56::DecimalFormatImpl::toNumberPattern
; Line 1529
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 2
	jne	SHORT $LN8@toPattern
; Line 1530
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@toPattern:
; Line 1532
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?toUserString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toUserString
; Line 1533
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 3
	jne	SHORT $LN7@toPattern
; Line 1534
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@toPattern:
; Line 1536
	lea	ecx, DWORD PTR _withNegative$[ebp]
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1537
	push	4
	lea	ecx, DWORD PTR _withNegative$[ebp]
	call	?add@AffixPattern@icu_56@@QAEXW4ETokenType@12@@Z ; icu_56::AffixPattern::add
; Line 1538
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	lea	ecx, DWORD PTR _withNegative$[ebp]
	call	?append@AffixPattern@icu_56@@QAEAAV12@ABV12@@Z ; icu_56::AffixPattern::append
; Line 1540
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 560				; 00000230H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@toPattern
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 288				; 00000120H
	push	eax
	lea	ecx, DWORD PTR _withNegative$[ebp]
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN6@toPattern
$LN5@toPattern:
; Line 1541
	mov	esi, esp
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1542
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 0
	jne	SHORT $LN4@toPattern
; Line 1543
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@toPattern:
; Line 1545
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?toUserString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toUserString
; Line 1546
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 1
	jne	SHORT $LN3@toPattern
; Line 1547
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@toPattern:
; Line 1552
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+2660]
	sub	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	sub	esi, eax
	push	esi
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+2660], 0
	setg	al
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?toNumberPattern@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@CHAAV32@@Z ; icu_56::DecimalFormatImpl::toNumberPattern
; Line 1553
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 2
	jne	SHORT $LN2@toPattern
; Line 1554
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@toPattern:
; Line 1556
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?toUserString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toUserString
; Line 1557
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2652], 3
	jne	SHORT $LN6@toPattern
; Line 1558
	mov	esi, esp
	lea	eax, DWORD PTR _padSpec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@toPattern:
; Line 1561
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T51941[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _withNegative$[ebp]
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _padSpec$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51941[ebp]
; Line 1562
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@toPattern
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN20@toPattern:
	DD	2
	DD	$LN19@toPattern
$LN19@toPattern:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN16@toPattern
	DD	-240					; ffffff10H
	DD	136					; 00000088H
	DD	$LN17@toPattern
$LN17@toPattern:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN16@toPattern:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _padSpec$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z$1:
	lea	ecx, DWORD PTR _withNegative$[ebp]
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__ehhandler$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-452]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormatImpl::toPattern
PUBLIC	?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::getOldFormatWidth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ PROC ; icu_56::DecimalFormatImpl::getOldFormatWidth, COMDAT
; _this$ = ecx
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2660], 0
	jne	SHORT $LN1@getOldForm
; Line 1567
	xor	eax, eax
	jmp	SHORT $LN2@getOldForm
$LN1@getOldForm:
; Line 1569
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+2660]
	sub	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	sub	esi, eax
	mov	eax, esi
$LN2@getOldForm:
; Line 1570
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ ENDP ; icu_56::DecimalFormatImpl::getOldFormatWidth
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z PROC ; icu_56::DecimalFormatImpl::getConstSymbol, COMDAT
; _this$ = ecx
; Line 1574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1575
	mov	eax, DWORD PTR _symbol$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+696]
	call	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Line 1576
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ENDP ; icu_56::DecimalFormatImpl::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ ; icu_56::DecimalFormatImpl::isParseFastpath
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ$0
__ehfuncinfo$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ
_TEXT	SEGMENT
tv90 = -377						; size = 1
$T51961 = -369						; size = 1
_negative$ = -168					; size = 136
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ PROC	; icu_56::DecimalFormatImpl::isParseFastpath, COMDAT
; _this$ = ecx
; Line 1579
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1580
	lea	ecx, DWORD PTR _negative$[ebp]
	call	??0AffixPattern@icu_56@@QAE@XZ		; icu_56::AffixPattern::AffixPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1581
	push	4
	lea	ecx, DWORD PTR _negative$[ebp]
	call	?add@AffixPattern@icu_56@@QAEXW4ETokenType@12@@Z ; icu_56::AffixPattern::add
; Line 1587
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2660], 0
	jne	SHORT $LN3@isParseFas
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	test	eax, eax
	jne	SHORT $LN3@isParseFas
	lea	ecx, DWORD PTR _negative$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 288				; 00000120H
	call	?equals@AffixPattern@icu_56@@QBECABV12@@Z ; icu_56::AffixPattern::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@isParseFas
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	test	eax, eax
	jne	SHORT $LN3@isParseFas
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?countChar32@AffixPattern@icu_56@@QBEHXZ ; icu_56::AffixPattern::countChar32
	test	eax, eax
	jne	SHORT $LN3@isParseFas
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN4@isParseFas
$LN3@isParseFas:
	mov	BYTE PTR tv90[ebp], 0
$LN4@isParseFas:
	mov	al, BYTE PTR tv90[ebp]
	mov	BYTE PTR $T51961[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _negative$[ebp]
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	al, BYTE PTR $T51961[ebp]
; Line 1588
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@isParseFas
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@isParseFas:
	DD	1
	DD	$LN8@isParseFas
$LN8@isParseFas:
	DD	-168					; ffffff58H
	DD	136					; 00000088H
	DD	$LN6@isParseFas
$LN6@isParseFas:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ$0:
	lea	ecx, DWORD PTR _negative$[ebp]
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__ehhandler$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ ENDP	; icu_56::DecimalFormatImpl::isParseFastpath
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
_TEXT	ENDS
PUBLIC	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
EXTRN	??0DigitAffix@icu_56@@QAE@XZ:PROC		; icu_56::DigitAffix::DigitAffix
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\pluralmap.h
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_otherVariant$ = 8					; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -260						; size = 4
tv89 = -256						; size = 4
$T52056 = -248						; size = 4
$T52057 = -236						; size = 4
_i$44969 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 88
	mov	DWORD PTR _i$44969[ebp], 1
	jmp	SHORT $LN3@PluralMap
$LN2@PluralMap:
	mov	eax, DWORD PTR _i$44969[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44969[ebp], eax
$LN3@PluralMap:
	cmp	DWORD PTR _i$44969[ebp], 6
	jge	$LN4@PluralMap
; Line 90
	mov	eax, DWORD PTR _i$44969[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN8@PluralMap
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52057[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T52057[ebp], 0
	je	SHORT $LN6@PluralMap
	mov	edx, DWORD PTR _i$44969[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+128]
	push	ecx
	mov	ecx, DWORD PTR $T52057[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN7@PluralMap
$LN6@PluralMap:
	mov	DWORD PTR tv89[ebp], 0
$LN7@PluralMap:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T52056[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T52056[ebp]
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@PluralMap
$LN8@PluralMap:
	mov	DWORD PTR tv90[ebp], 0
$LN9@PluralMap:
	mov	ecx, DWORD PTR _i$44969[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
; Line 91
	jmp	$LN2@PluralMap
$LN4@PluralMap:
; Line 92
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T52057[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??_GDigitAffix@icu_56@@QAEPAXI@Z		; icu_56::DigitAffix::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv148 = -280						; size = 4
tv94 = -280						; size = 4
$T52072 = -272						; size = 4
$T52073 = -260						; size = 4
$T52076 = -248						; size = 4
$T52077 = -236						; size = 4
_i$44981 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::operator=, COMDAT
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN10@operator@4
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN11@operator@4
$LN10@operator@4:
; Line 98
	mov	DWORD PTR _i$44981[ebp], 0
	jmp	SHORT $LN9@operator@4
$LN8@operator@4:
	mov	eax, DWORD PTR _i$44981[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44981[ebp], eax
$LN9@operator@4:
	cmp	DWORD PTR _i$44981[ebp], 6
	jge	$LN7@operator@4
; Line 99
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator@4
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator@4
; Line 100
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	jmp	$LN5@operator@4
$LN6@operator@4:
; Line 101
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN4@operator@4
; Line 102
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T52073[ebp], edx
	mov	eax, DWORD PTR $T52073[ebp]
	mov	DWORD PTR $T52072[ebp], eax
	cmp	DWORD PTR $T52072[ebp], 0
	je	SHORT $LN13@operator@4
	push	1
	mov	ecx, DWORD PTR $T52072[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN14@operator@4
$LN13@operator@4:
	mov	DWORD PTR tv94[ebp], 0
$LN14@operator@4:
; Line 103
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
	jmp	$LN5@operator@4
$LN4@operator@4:
; Line 104
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN5@operator@4
; Line 105
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52077[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T52077[ebp], 0
	je	SHORT $LN15@operator@4
	mov	eax, DWORD PTR _i$44981[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	ecx, DWORD PTR $T52077[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN16@operator@4
$LN15@operator@4:
	mov	DWORD PTR tv148[ebp], 0
$LN16@operator@4:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T52076[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _i$44981[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T52076[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
$LN5@operator@4:
; Line 109
	jmp	$LN8@operator@4
$LN7@operator@4:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
$LN11@operator@4:
; Line 111
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T52077[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv74 = -256						; size = 4
$T52089 = -248						; size = 4
$T52090 = -236						; size = 4
_i$45000 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 114
	mov	DWORD PTR _i$45000[ebp], 1
	jmp	SHORT $LN3@PluralMap@2
$LN2@PluralMap@2:
	mov	eax, DWORD PTR _i$45000[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45000[ebp], eax
$LN3@PluralMap@2:
	cmp	DWORD PTR _i$45000[ebp], 6
	jge	SHORT $LN4@PluralMap@2
; Line 115
	mov	eax, DWORD PTR _i$45000[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T52090[ebp], edx
	mov	eax, DWORD PTR $T52090[ebp]
	mov	DWORD PTR $T52089[ebp], eax
	cmp	DWORD PTR $T52089[ebp], 0
	je	SHORT $LN6@PluralMap@2
	push	1
	mov	ecx, DWORD PTR $T52089[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN7@PluralMap@2
$LN6@PluralMap@2:
	mov	DWORD PTR tv74[ebp], 0
$LN7@PluralMap@2:
; Line 116
	jmp	SHORT $LN2@PluralMap@2
$LN4@PluralMap@2:
; Line 117
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	__$ArrayPad$
PUBLIC	?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0
__ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
_TEXT	SEGMENT
tv86 = -400						; size = 4
tv87 = -396						; size = 4
tv81 = -396						; size = 4
$T52103 = -388						; size = 4
$T52104 = -376						; size = 4
$T45009 = -364						; size = 128
_i$45010 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::clear, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	lea	ecx, DWORD PTR $T45009[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv86[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T45009[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
; Line 124
	mov	DWORD PTR _i$45010[ebp], 1
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR _i$45010[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45010[ebp], eax
$LN3@clear:
	cmp	DWORD PTR _i$45010[ebp], 6
	jge	SHORT $LN4@clear
; Line 125
	mov	eax, DWORD PTR _i$45010[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T52104[ebp], edx
	mov	eax, DWORD PTR $T52104[ebp]
	mov	DWORD PTR $T52103[ebp], eax
	cmp	DWORD PTR $T52103[ebp], 0
	je	SHORT $LN6@clear
	push	1
	mov	ecx, DWORD PTR $T52103[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@clear
$LN6@clear:
	mov	DWORD PTR tv81[ebp], 0
$LN7@clear:
; Line 126
	mov	eax, DWORD PTR _i$45010[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 127
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 128
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T45009[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::clear
PUBLIC	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::next, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _idx$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
	jmp	SHORT $LN4@next
$LN3@next:
; Line 140
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN4@next:
	cmp	DWORD PTR _idx$[ebp], 6
	jge	SHORT $LN2@next
; Line 141
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN1@next
; Line 142
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 143
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	jmp	SHORT $LN5@next
$LN1@next:
; Line 145
	jmp	SHORT $LN3@next
$LN2@next:
; Line 146
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 147
	xor	eax, eax
$LN5@next:
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::next
_TEXT	ENDS
PUBLIC	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
	mov	DWORD PTR _result$[ebp], eax
; Line 155
	mov	eax, DWORD PTR _result$[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getOther, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 173
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@get
	cmp	DWORD PTR _index$[ebp], 6
	jge	SHORT $LN1@get
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN2@get
$LN1@get:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	jmp	SHORT $LN3@get
$LN2@get:
; Line 176
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN3@get:
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
_TEXT	ENDS
PUBLIC	?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _defaultValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _category$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z
_TEXT	SEGMENT
_i$45051 = -20						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
_eqFunc$ = 12						; size = 4
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::equals, COMDAT
; _this$ = ecx
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	DWORD PTR _i$45051[ebp], 0
	jmp	SHORT $LN7@equals@12
$LN6@equals@12:
	mov	eax, DWORD PTR _i$45051[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45051[ebp], eax
$LN7@equals@12:
	cmp	DWORD PTR _i$45051[ebp], 6
	jge	SHORT $LN5@equals@12
; Line 241
	mov	eax, DWORD PTR _i$45051[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$45051[ebp]
	mov	esi, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	cmp	eax, DWORD PTR [esi+edx*4+128]
	jne	SHORT $LN4@equals@12
; Line 242
	jmp	SHORT $LN6@equals@12
$LN4@equals@12:
; Line 244
	mov	eax, DWORD PTR _i$45051[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN2@equals@12
	mov	eax, DWORD PTR _i$45051[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN3@equals@12
$LN2@equals@12:
; Line 245
	xor	al, al
	jmp	SHORT $LN8@equals@12
$LN3@equals@12:
; Line 247
	mov	esi, esp
	mov	eax, DWORD PTR _i$45051[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$45051[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	call	DWORD PTR _eqFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@equals@12
; Line 248
	xor	al, al
	jmp	SHORT $LN8@equals@12
$LN1@equals@12:
; Line 250
	jmp	$LN6@equals@12
$LN5@equals@12:
; Line 251
	mov	al, 1
$LN8@equals@12:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::equals
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -288						; size = 4
tv88 = -284						; size = 4
tv85 = -280						; size = 4
$T52136 = -272						; size = 4
$T52137 = -260						; size = 4
$T52140 = -248						; size = 4
$T52141 = -236						; size = 4
_index$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getMutable
; Line 263
	xor	eax, eax
	jmp	$LN6@getMutable
$LN5@getMutable:
; Line 265
	mov	eax, DWORD PTR _category$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 266
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@getMutable
	cmp	DWORD PTR _index$[ebp], 6
	jl	SHORT $LN4@getMutable
$LN3@getMutable:
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 268
	xor	eax, eax
	jmp	$LN6@getMutable
$LN4@getMutable:
; Line 270
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	$LN2@getMutable
; Line 272
	cmp	DWORD PTR _defaultValue$[ebp], 0
	jne	SHORT $LN12@getMutable
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52137[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T52137[ebp], 0
	je	SHORT $LN8@getMutable
	mov	ecx, DWORD PTR $T52137[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN9@getMutable
$LN8@getMutable:
	mov	DWORD PTR tv85[ebp], 0
$LN9@getMutable:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T52136[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T52136[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	jmp	SHORT $LN13@getMutable
$LN12@getMutable:
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T52141[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T52141[ebp], 0
	je	SHORT $LN10@getMutable
	mov	edx, DWORD PTR _defaultValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T52141[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN11@getMutable
$LN10@getMutable:
	mov	DWORD PTR tv93[ebp], 0
$LN11@getMutable:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T52140[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T52140[ebp]
	mov	DWORD PTR tv88[ebp], ecx
$LN13@getMutable:
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [eax+edx*4+128], ecx
$LN2@getMutable:
; Line 274
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN1@getMutable
; Line 275
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@getMutable:
; Line 277
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN6@getMutable:
; Line 278
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T52137[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T52141[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_i$45079 = -20						; size = 4
_this$ = -8						; size = 4
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew, COMDAT
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 282
	mov	DWORD PTR _i$45079[ebp], 1
	jmp	SHORT $LN3@initialize
$LN2@initialize:
	mov	eax, DWORD PTR _i$45079[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45079[ebp], eax
$LN3@initialize:
	cmp	DWORD PTR _i$45079[ebp], 6
	jge	SHORT $LN4@initialize
; Line 283
	mov	eax, DWORD PTR _i$45079[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 284
	jmp	SHORT $LN2@initialize
$LN4@initialize:
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GDigitAffix@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDigitAffix@icu_56@@QAEPAXI@Z PROC			; icu_56::DigitAffix::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDigitAffix@icu_56@@QAEPAXI@Z ENDP			; icu_56::DigitAffix::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$47505 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$47505[ebp], eax
; Line 597
	cmp	DWORD PTR _p$47505[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$47505[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$47505[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$47505[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.cpp
xdata$x	SEGMENT
__unwindtable$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T52165 = -477						; size = 1
$T52166 = -465						; size = 1
_digits$47546 = -264					; size = 112
_digits$47543 = -144					; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_handler$ = 16						; size = 4
_status$ = 20						; size = 4
??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::maybeFormatWithDigitList<int>, COMDAT
; _this$ = ecx
; Line 276
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	jne	$LN2@maybeForma
; Line 278
	lea	ecx, DWORD PTR _digits$47543[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 279
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$47543[ebp]
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 280
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	lea	ecx, DWORD PTR _digits$47543[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47543[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 282
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _digits$47543[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatAdjustedDigitList
; Line 283
	mov	BYTE PTR $T52165[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47543[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52165[ebp]
	jmp	SHORT $LN3@maybeForma
$LN2@maybeForma:
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN1@maybeForma
; Line 286
	lea	ecx, DWORD PTR _digits$47546[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 287
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$47546[ebp]
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47546[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 289
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	lea	eax, DWORD PTR _digits$47546[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?formatAdjustedDigitList@DecimalFormatImpl@icu_56@@ABEAAVUnicodeString@2@AAVDigitList@2@AAV32@AAVFieldPositionHandler@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::formatAdjustedDigitList
; Line 290
	mov	BYTE PTR $T52166[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47546[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52166[ebp]
	jmp	SHORT $LN3@maybeForma
$LN1@maybeForma:
; Line 292
	xor	al, al
$LN3@maybeForma:
; Line 293
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@maybeForma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN11@maybeForma:
	DD	2
	DD	$LN10@maybeForma
$LN10@maybeForma:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN7@maybeForma
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN8@maybeForma
$LN8@maybeForma:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN7@maybeForma:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$47543[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _digits$47546[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-488]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$maybeFormatWithDigitList@H@DecimalFormatImpl@icu_56@@ABECHAAVUnicodeString@1@AAVFieldPositionHandler@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::maybeFormatWithDigitList<int>
PUBLIC	__$ArrayPad$
EXTRN	?set@DigitList@icu_56@@QAEX_J@Z:PROC		; icu_56::DigitList::set
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T52182 = -477						; size = 1
$T52183 = -465						; size = 1
_digits$47554 = -264					; size = 112
_digits$47551 = -144					; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_visibleDigits$ = 16					; size = 4
_status$ = 20						; size = 4
??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<__int64>, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	jne	$LN2@maybeInitV
; Line 301
	lea	ecx, DWORD PTR _digits$47551[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 302
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _digits$47551[ebp]
	call	?set@DigitList@icu_56@@QAEX_J@Z		; icu_56::DigitList::set
; Line 303
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	lea	ecx, DWORD PTR _digits$47551[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47551[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visibleDigits$[ebp]
	push	ecx
	lea	edx, DWORD PTR _digits$47551[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Line 306
	mov	BYTE PTR $T52182[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47551[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52182[ebp]
	jmp	SHORT $LN3@maybeInitV
$LN2@maybeInitV:
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN1@maybeInitV
; Line 309
	lea	ecx, DWORD PTR _digits$47554[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 310
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _digits$47554[ebp]
	call	?set@DigitList@icu_56@@QAEX_J@Z		; icu_56::DigitList::set
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47554[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 312
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visibleDigits$[ebp]
	push	ecx
	lea	edx, DWORD PTR _digits$47554[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Line 313
	mov	BYTE PTR $T52183[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47554[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52183[ebp]
	jmp	SHORT $LN3@maybeInitV
$LN1@maybeInitV:
; Line 315
	xor	al, al
$LN3@maybeInitV:
; Line 316
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@maybeInitV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN11@maybeInitV:
	DD	2
	DD	$LN10@maybeInitV
$LN10@maybeInitV:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN7@maybeInitV
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN8@maybeInitV
$LN8@maybeInitV:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN7@maybeInitV:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$47551[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _digits$47554[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-488]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$maybeInitVisibleDigitsFromDigitList@_J@DecimalFormatImpl@icu_56@@ABEC_JAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<__int64>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T52199 = -477						; size = 1
$T52200 = -465						; size = 1
_digits$47562 = -264					; size = 112
_digits$47559 = -144					; size = 112
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 8
_visibleDigits$ = 16					; size = 4
_status$ = 20						; size = 4
??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<double>, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	jne	$LN2@maybeInitV@2
; Line 301
	lea	ecx, DWORD PTR _digits$47559[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 302
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _digits$47559[ebp]
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 303
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	lea	ecx, DWORD PTR _digits$47559[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
; Line 304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47559[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visibleDigits$[ebp]
	push	ecx
	lea	edx, DWORD PTR _digits$47559[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Line 306
	mov	BYTE PTR $T52199[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47559[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52199[ebp]
	jmp	SHORT $LN3@maybeInitV@2
$LN2@maybeInitV@2:
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN1@maybeInitV@2
; Line 309
	lea	ecx, DWORD PTR _digits$47562[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 310
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _digits$47562[ebp]
	call	?set@DigitList@icu_56@@QAEXN@Z		; icu_56::DigitList::set
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	lea	ecx, DWORD PTR _digits$47562[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 312
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visibleDigits$[ebp]
	push	ecx
	lea	edx, DWORD PTR _digits$47562[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsFromAdjusted@DecimalFormatImpl@icu_56@@ABEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsFromAdjusted
; Line 313
	mov	BYTE PTR $T52200[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$47562[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T52200[ebp]
	jmp	SHORT $LN3@maybeInitV@2
$LN1@maybeInitV@2:
; Line 315
	xor	al, al
$LN3@maybeInitV@2:
; Line 316
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@maybeInitV@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@maybeInitV@2:
	DD	2
	DD	$LN10@maybeInitV@2
$LN10@maybeInitV@2:
	DD	-144					; ffffff70H
	DD	112					; 00000070H
	DD	$LN7@maybeInitV@2
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN8@maybeInitV@2
$LN8@maybeInitV@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN7@maybeInitV@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$47559[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _digits$47562[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-488]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$maybeInitVisibleDigitsFromDigitList@N@DecimalFormatImpl@icu_56@@ABECNAAVVisibleDigitsWithExponent@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatImpl::maybeInitVisibleDigitsFromDigitList<double>
END

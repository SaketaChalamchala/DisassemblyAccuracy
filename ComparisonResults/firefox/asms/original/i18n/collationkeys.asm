; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\collationkeys.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
PUBLIC	?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB	; icu_56::CollationData::JAMO_CE32S_LENGTH
PUBLIC	?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB ; icu_56::CollationIterator::CEBuffer::INITIAL_CAPACITY
PUBLIC	?SEC_COMMON_LOW@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::SEC_COMMON_LOW
PUBLIC	?SEC_COMMON_MIDDLE@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::SEC_COMMON_MIDDLE
PUBLIC	?SEC_COMMON_HIGH@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::SEC_COMMON_HIGH
PUBLIC	?SEC_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB	; icu_56::CollationKeys::SEC_COMMON_MAX_COUNT
PUBLIC	?CASE_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_LOW
PUBLIC	?CASE_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_MIDDLE
PUBLIC	?CASE_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_HIGH
PUBLIC	?CASE_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_MAX_COUNT
PUBLIC	?CASE_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_LOW
PUBLIC	?CASE_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_HIGH
PUBLIC	?CASE_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_MAX_COUNT
PUBLIC	?TER_ONLY_COMMON_LOW@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::TER_ONLY_COMMON_LOW
PUBLIC	?TER_ONLY_COMMON_MIDDLE@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_ONLY_COMMON_MIDDLE
PUBLIC	?TER_ONLY_COMMON_HIGH@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::TER_ONLY_COMMON_HIGH
PUBLIC	?TER_ONLY_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::TER_ONLY_COMMON_MAX_COUNT
PUBLIC	?TER_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_LOW
PUBLIC	?TER_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_MIDDLE
PUBLIC	?TER_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_HIGH
PUBLIC	?TER_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_MAX_COUNT
PUBLIC	?TER_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_LOW
PUBLIC	?TER_UPPER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_MIDDLE
PUBLIC	?TER_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_HIGH
PUBLIC	?TER_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_MAX_COUNT
PUBLIC	?QUAT_COMMON_LOW@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::QUAT_COMMON_LOW
PUBLIC	?QUAT_COMMON_MIDDLE@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::QUAT_COMMON_MIDDLE
PUBLIC	?QUAT_COMMON_HIGH@CollationKeys@icu_56@@0IB	; icu_56::CollationKeys::QUAT_COMMON_HIGH
PUBLIC	?QUAT_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB ; icu_56::CollationKeys::QUAT_COMMON_MAX_COUNT
PUBLIC	?QUAT_SHIFTED_LIMIT_BYTE@CollationKeys@icu_56@@0IB ; icu_56::CollationKeys::QUAT_SHIFTED_LIMIT_BYTE
PUBLIC	?CHECK_FCD@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CHECK_FCD
PUBLIC	?NUMERIC@CollationSettings@icu_56@@2HB		; icu_56::CollationSettings::NUMERIC
PUBLIC	?SHIFTED@CollationSettings@icu_56@@2HB		; icu_56::CollationSettings::SHIFTED
PUBLIC	?ALTERNATE_MASK@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::ALTERNATE_MASK
PUBLIC	?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::MAX_VARIABLE_SHIFT
PUBLIC	?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::MAX_VARIABLE_MASK
PUBLIC	?UPPER_FIRST@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::UPPER_FIRST
PUBLIC	?CASE_FIRST@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CASE_FIRST
PUBLIC	?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::CASE_FIRST_AND_UPPER_MASK
PUBLIC	?CASE_LEVEL@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::CASE_LEVEL
PUBLIC	?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB ; icu_56::CollationSettings::BACKWARD_SECONDARY
PUBLIC	?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::STRENGTH_SHIFT
PUBLIC	?STRENGTH_MASK@CollationSettings@icu_56@@2HB	; icu_56::CollationSettings::STRENGTH_MASK
CONST	SEGMENT
_levelMasks DD	02H
	DD	06H
	DD	016H
	DD	036H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
CONST	ENDS
;	COMDAT ?STRENGTH_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?STRENGTH_MASK@CollationSettings@icu_56@@2HB DD 0f000H	; icu_56::CollationSettings::STRENGTH_MASK
CONST	ENDS
;	COMDAT ?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?STRENGTH_SHIFT@CollationSettings@icu_56@@2HB DD 0cH	; icu_56::CollationSettings::STRENGTH_SHIFT
CONST	ENDS
;	COMDAT ?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?BACKWARD_SECONDARY@CollationSettings@icu_56@@2HB DD 0800H ; icu_56::CollationSettings::BACKWARD_SECONDARY
CONST	ENDS
;	COMDAT ?CASE_LEVEL@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_LEVEL@CollationSettings@icu_56@@2HB DD 0400H	; icu_56::CollationSettings::CASE_LEVEL
CONST	ENDS
;	COMDAT ?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_FIRST_AND_UPPER_MASK@CollationSettings@icu_56@@2HB DD 0300H ; icu_56::CollationSettings::CASE_FIRST_AND_UPPER_MASK
CONST	ENDS
;	COMDAT ?CASE_FIRST@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CASE_FIRST@CollationSettings@icu_56@@2HB DD 0200H	; icu_56::CollationSettings::CASE_FIRST
CONST	ENDS
;	COMDAT ?UPPER_FIRST@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?UPPER_FIRST@CollationSettings@icu_56@@2HB DD 0100H	; icu_56::CollationSettings::UPPER_FIRST
CONST	ENDS
;	COMDAT ?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?MAX_VARIABLE_MASK@CollationSettings@icu_56@@2HB DD 070H ; icu_56::CollationSettings::MAX_VARIABLE_MASK
CONST	ENDS
;	COMDAT ?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?MAX_VARIABLE_SHIFT@CollationSettings@icu_56@@2HB DD 04H ; icu_56::CollationSettings::MAX_VARIABLE_SHIFT
CONST	ENDS
;	COMDAT ?ALTERNATE_MASK@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?ALTERNATE_MASK@CollationSettings@icu_56@@2HB DD 0cH	; icu_56::CollationSettings::ALTERNATE_MASK
CONST	ENDS
;	COMDAT ?SHIFTED@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?SHIFTED@CollationSettings@icu_56@@2HB DD 04H		; icu_56::CollationSettings::SHIFTED
CONST	ENDS
;	COMDAT ?NUMERIC@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?NUMERIC@CollationSettings@icu_56@@2HB DD 02H		; icu_56::CollationSettings::NUMERIC
CONST	ENDS
;	COMDAT ?CHECK_FCD@CollationSettings@icu_56@@2HB
CONST	SEGMENT
?CHECK_FCD@CollationSettings@icu_56@@2HB DD 01H		; icu_56::CollationSettings::CHECK_FCD
CONST	ENDS
;	COMDAT ?QUAT_SHIFTED_LIMIT_BYTE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?QUAT_SHIFTED_LIMIT_BYTE@CollationKeys@icu_56@@0IB DD 01bH ; icu_56::CollationKeys::QUAT_SHIFTED_LIMIT_BYTE
CONST	ENDS
;	COMDAT ?QUAT_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?QUAT_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 071H ; icu_56::CollationKeys::QUAT_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?QUAT_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?QUAT_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 0fcH	; icu_56::CollationKeys::QUAT_COMMON_HIGH
CONST	ENDS
;	COMDAT ?QUAT_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?QUAT_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 08cH	; icu_56::CollationKeys::QUAT_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?QUAT_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?QUAT_COMMON_LOW@CollationKeys@icu_56@@0IB DD 01cH	; icu_56::CollationKeys::QUAT_COMMON_LOW
CONST	ENDS
;	COMDAT ?TER_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?TER_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 021H ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?TER_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 0c5H ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_HIGH
CONST	ENDS
;	COMDAT ?TER_UPPER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_UPPER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 0a5H ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?TER_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB DD 085H ; icu_56::CollationKeys::TER_UPPER_FIRST_COMMON_LOW
CONST	ENDS
;	COMDAT ?TER_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?TER_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 021H ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?TER_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 045H ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_HIGH
CONST	ENDS
;	COMDAT ?TER_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 025H ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?TER_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB DD 05H ; icu_56::CollationKeys::TER_LOWER_FIRST_COMMON_LOW
CONST	ENDS
;	COMDAT ?TER_ONLY_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?TER_ONLY_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 061H ; icu_56::CollationKeys::TER_ONLY_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?TER_ONLY_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_ONLY_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 0c5H	; icu_56::CollationKeys::TER_ONLY_COMMON_HIGH
CONST	ENDS
;	COMDAT ?TER_ONLY_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_ONLY_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 065H ; icu_56::CollationKeys::TER_ONLY_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?TER_ONLY_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?TER_ONLY_COMMON_LOW@CollationKeys@icu_56@@0IB DD 05H	; icu_56::CollationKeys::TER_ONLY_COMMON_LOW
CONST	ENDS
;	COMDAT ?CASE_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?CASE_UPPER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 0dH ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?CASE_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?CASE_UPPER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 0fH ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_HIGH
CONST	ENDS
;	COMDAT ?CASE_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?CASE_UPPER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB DD 03H ; icu_56::CollationKeys::CASE_UPPER_FIRST_COMMON_LOW
CONST	ENDS
;	COMDAT ?CASE_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?CASE_LOWER_FIRST_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 07H ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?CASE_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?CASE_LOWER_FIRST_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 0dH ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_HIGH
CONST	ENDS
;	COMDAT ?CASE_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?CASE_LOWER_FIRST_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 07H ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?CASE_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?CASE_LOWER_FIRST_COMMON_LOW@CollationKeys@icu_56@@0IB DD 01H ; icu_56::CollationKeys::CASE_LOWER_FIRST_COMMON_LOW
CONST	ENDS
;	COMDAT ?SEC_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB
CONST	SEGMENT
?SEC_COMMON_MAX_COUNT@CollationKeys@icu_56@@0HB DD 021H	; icu_56::CollationKeys::SEC_COMMON_MAX_COUNT
CONST	ENDS
;	COMDAT ?SEC_COMMON_HIGH@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?SEC_COMMON_HIGH@CollationKeys@icu_56@@0IB DD 045H	; icu_56::CollationKeys::SEC_COMMON_HIGH
CONST	ENDS
;	COMDAT ?SEC_COMMON_MIDDLE@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?SEC_COMMON_MIDDLE@CollationKeys@icu_56@@0IB DD 025H	; icu_56::CollationKeys::SEC_COMMON_MIDDLE
CONST	ENDS
;	COMDAT ?SEC_COMMON_LOW@CollationKeys@icu_56@@0IB
CONST	SEGMENT
?SEC_COMMON_LOW@CollationKeys@icu_56@@0IB DD 05H	; icu_56::CollationKeys::SEC_COMMON_LOW
CONST	ENDS
;	COMDAT ?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB
CONST	SEGMENT
?INITIAL_CAPACITY@CEBuffer@CollationIterator@icu_56@@0HB DD 028H ; icu_56::CollationIterator::CEBuffer::INITIAL_CAPACITY
CONST	ENDS
;	COMDAT ?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB
CONST	SEGMENT
?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB DD 043H	; icu_56::CollationData::JAMO_CE32S_LENGTH
CONST	ENDS
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ; icu_56::CollationData::CollationData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nfc$ = 8						; size = 4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z PROC ; icu_56::CollationData::CollationData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationdata.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nfc$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 301989888		; 12000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ENDP ; icu_56::CollationData::CollationData
_TEXT	ENDS
PUBLIC	?getCE32@CollationData@icu_56@@QBEIH@Z		; icu_56::CollationData::getCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv138 = -220						; size = 4
tv139 = -216						; size = 4
tv140 = -212						; size = 4
tv141 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32@CollationData@icu_56@@QBEIH@Z PROC		; icu_56::CollationData::getCE32, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [ecx]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv141[ebp], eax
	jmp	$LN10@getCE32
$LN9@getCE32:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@getCE32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR [edx]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv140[ebp], edx
	jmp	$LN8@getCE32
$LN7@getCE32:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@getCE32
	mov	DWORD PTR tv139[ebp], 128		; 00000080H
	jmp	SHORT $LN6@getCE32
$LN5@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN4@getCE32
$LN3@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv138[ebp], ecx
$LN4@getCE32:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv139[ebp], edx
$LN6@getCE32:
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv140[ebp], eax
$LN8@getCE32:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv141[ebp], ecx
$LN10@getCE32:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32@CollationData@icu_56@@QBEIH@Z ENDP		; icu_56::CollationData::getCE32
_TEXT	ENDS
PUBLIC	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getCE32FromSupplementary, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32Fro
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN4@getCE32Fro
$LN3@getCE32Fro:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv84[ebp], ecx
$LN4@getCE32Fro:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getCE32FromSupplementary
_TEXT	ENDS
PUBLIC	?isDigit@CollationData@icu_56@@QBECH@Z		; icu_56::CollationData::isDigit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDigit@CollationData@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv75 = -212						; size = 4
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isDigit@CollationData@icu_56@@QBECH@Z PROC		; icu_56::CollationData::isDigit, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	cmp	DWORD PTR _c$[ebp], 1632		; 00000660H
	jge	SHORT $LN5@isDigit
	cmp	DWORD PTR _c$[ebp], 57			; 00000039H
	jg	SHORT $LN3@isDigit
	cmp	DWORD PTR _c$[ebp], 48			; 00000030H
	jl	SHORT $LN3@isDigit
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@isDigit
$LN3@isDigit:
	mov	DWORD PTR tv67[ebp], 0
$LN4@isDigit:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@isDigit
$LN5@isDigit:
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR tv75[ebp], edx
$LN6@isDigit:
	mov	al, BYTE PTR tv75[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isDigit@CollationData@icu_56@@QBECH@Z ENDP		; icu_56::CollationData::isDigit
_TEXT	ENDS
PUBLIC	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z
_TEXT	SEGMENT
tv86 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_numeric$ = 12						; size = 1
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z PROC	; icu_56::CollationData::isUnsafeBackward, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
	movsx	edx, BYTE PTR _numeric$[ebp]
	test	edx, edx
	je	SHORT $LN3@isUnsafeBa
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDigit@CollationData@icu_56@@QBECH@Z	; icu_56::CollationData::isDigit
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
$LN3@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN5@isUnsafeBa
$LN4@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 1
$LN5@isUnsafeBa:
	mov	al, BYTE PTR tv86[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ENDP	; icu_56::CollationData::isUnsafeBackward
_TEXT	ENDS
PUBLIC	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressibleLeadByte, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _b$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressibleLeadByte
_TEXT	ENDS
PUBLIC	?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressiblePrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressiblePrimary, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressiblePrimary
_TEXT	ENDS
PUBLIC	?readCE32@CollationData@icu_56@@SAIPB_W@Z	; icu_56::CollationData::readCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readCE32@CollationData@icu_56@@SAIPB_W@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?readCE32@CollationData@icu_56@@SAIPB_W@Z PROC		; icu_56::CollationData::readCE32, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [eax]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	or	eax, edx
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readCE32@CollationData@icu_56@@SAIPB_W@Z ENDP		; icu_56::CollationData::readCE32
_TEXT	ENDS
PUBLIC	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
EXTRN	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:PROC ; icu_56::Collation::getThreeBytePrimaryForOffsetData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z
_TEXT	SEGMENT
_dataCE$ = -24						; size = 8
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_ce32$ = 12						; size = 4
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z PROC ; icu_56::CollationData::getCEFromOffsetCE32, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _dataCE$[ebp], ecx
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _dataCE$[ebp+4], edx
; Line 115
	mov	eax, DWORD PTR _dataCE$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _dataCE$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z ; icu_56::Collation::getThreeBytePrimaryForOffsetData
	add	esp, 12					; 0000000cH
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ENDP ; icu_56::CollationData::getCEFromOffsetCE32
_TEXT	ENDS
PUBLIC	?getFCD16@CollationData@icu_56@@QBEGH@Z		; icu_56::CollationData::getFCD16
EXTRN	__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16@CollationData@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16@CollationData@icu_56@@QBEGH@Z PROC		; icu_56::CollationData::getFCD16, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	DWORD PTR __imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16@CollationData@icu_56@@QBEGH@Z ENDP		; icu_56::CollationData::getFCD16
_TEXT	ENDS
PUBLIC	??0CEBuffer@CollationIterator@icu_56@@QAE@XZ	; icu_56::CollationIterator::CEBuffer::CEBuffer
PUBLIC	??_7CollationIterator@icu_56@@6B@		; icu_56::CollationIterator::`vftable'
PUBLIC	??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z ; icu_56::CollationIterator::CollationIterator
PUBLIC	??_R4CollationIterator@icu_56@@6B@		; icu_56::CollationIterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollationIterator@icu_56@@@8		; icu_56::CollationIterator `RTTI Type Descriptor'
PUBLIC	??_R3CollationIterator@icu_56@@8		; icu_56::CollationIterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollationIterator@icu_56@@8		; icu_56::CollationIterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollationIterator@icu_56@@8	; icu_56::CollationIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollationIterator@icu_56@@UAEPAXI@Z		; icu_56::CollationIterator::`vector deleting destructor'
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	??8CollationIterator@icu_56@@UBECABV01@@Z:PROC	; icu_56::CollationIterator::operator==
EXTRN	__purecall:PROC
EXTRN	?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationIterator::handleNextCE32
EXTRN	?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ:PROC ; icu_56::CollationIterator::handleGetTrailSurrogate
EXTRN	?foundNULTerminator@CollationIterator@icu_56@@MAECXZ:PROC ; icu_56::CollationIterator::foundNULTerminator
EXTRN	?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ:PROC ; icu_56::CollationIterator::forbidSurrogateCodePoints
EXTRN	?getDataCE32@CollationIterator@icu_56@@MBEIH@Z:PROC ; icu_56::CollationIterator::getDataCE32
EXTRN	?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z:PROC ; icu_56::CollationIterator::getCE32FromBuilderData
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\collationiterator.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollationIterator@icu_56@@8 DD FLAT:??_R0?AVCollationIterator@icu_56@@@8 ; icu_56::CollationIterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R2CollationIterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollationIterator@icu_56@@8 ; icu_56::CollationIterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollationIterator@icu_56@@8
rdata$r	SEGMENT
??_R3CollationIterator@icu_56@@8 DD 00H			; icu_56::CollationIterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollationIterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollationIterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationIterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollationIterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollationIterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollationIterator@icu_56@@6B@ DD 00H		; icu_56::CollationIterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollationIterator@icu_56@@@8
	DD	FLAT:??_R3CollationIterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollationIterator@icu_56@@6B@
CONST	SEGMENT
??_7CollationIterator@icu_56@@6B@ DD FLAT:??_R4CollationIterator@icu_56@@6B@ ; icu_56::CollationIterator::`vftable'
	DD	FLAT:??_ECollationIterator@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:??8CollationIterator@icu_56@@UBECABV01@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?handleNextCE32@CollationIterator@icu_56@@MAEIAAHAAW4UErrorCode@@@Z
	DD	FLAT:?handleGetTrailSurrogate@CollationIterator@icu_56@@MAE_WXZ
	DD	FLAT:?foundNULTerminator@CollationIterator@icu_56@@MAECXZ
	DD	FLAT:?forbidSurrogateCodePoints@CollationIterator@icu_56@@MBECXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getDataCE32@CollationIterator@icu_56@@MBEIH@Z
	DD	FLAT:?getCE32FromBuilderData@CollationIterator@icu_56@@MAEIIAAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0
__ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_d$ = 8							; size = 4
_numeric$ = 12						; size = 1
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z PROC ; icu_56::CollationIterator::CollationIterator, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationIterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CEBuffer@CollationIterator@icu_56@@QAE@XZ ; icu_56::CollationIterator::CEBuffer::CEBuffer
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _numeric$[ebp]
	mov	BYTE PTR [eax+372], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CollationIterator@icu_56@@QAE@PBUCollationData@1@C@Z ENDP ; icu_56::CollationIterator::CollationIterator
PUBLIC	??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CEBuffer@CollationIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ PROC	; icu_56::CollationIterator::CEBuffer::CEBuffer, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEBuffer@CollationIterator@icu_56@@QAE@XZ ENDP	; icu_56::CollationIterator::CEBuffer::CEBuffer
_TEXT	ENDS
PUBLIC	??9CollationIterator@icu_56@@QBECABV01@@Z	; icu_56::CollationIterator::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CollationIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9CollationIterator@icu_56@@QBECABV01@@Z PROC		; icu_56::CollationIterator::operator!=, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CollationIterator@icu_56@@QBECABV01@@Z ENDP		; icu_56::CollationIterator::operator!=
_TEXT	ENDS
PUBLIC	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
PUBLIC	?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::incLength
PUBLIC	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
PUBLIC	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
EXTRN	?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z:PROC ; icu_56::CollationIterator::nextCEFromCE32
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv379 = -260						; size = 4
tv377 = -260						; size = 4
tv196 = -256						; size = 4
tv180 = -256						; size = 4
tv153 = -256						; size = 4
tv141 = -256						; size = 4
tv75 = -256						; size = 4
_d$ = -56						; size = 4
_t$ = -44						; size = 4
_ce32$ = -32						; size = 4
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::nextCE, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+16]
	jge	SHORT $LN8@nextCE
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
	jmp	$LN9@nextCE
$LN8@nextCE:
; Line 118
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::incLength
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@nextCE
; Line 119
	mov	eax, 16777472				; 01000100H
	mov	edx, 1
	jmp	$LN9@nextCE
$LN7@nextCE:
; Line 122
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ce32$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _t$[ebp], eax
; Line 124
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jae	SHORT $LN6@nextCE
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv141[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR _t$[ebp]
	shl	edx, 8
	mov	esi, edx
	xor	edi, edi
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	mov	ebx, eax
	xor	eax, eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, -65536				; ffff0000H
	xor	edx, edx
	mov	DWORD PTR tv377[ebp], eax
	mov	eax, ecx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, ebx
	mov	ebx, DWORD PTR tv377[ebp]
	or	edx, ebx
	or	eax, esi
	or	edx, edi
	push	edx
	push	eax
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	$LN9@nextCE
$LN6@nextCE:
; Line 133
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jne	$LN5@nextCE
; Line 134
	cmp	DWORD PTR _c$[ebp], 0
	jge	SHORT $LN4@nextCE
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv153[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	push	1
	push	16777472				; 01000100H
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	$LN9@nextCE
$LN4@nextCE:
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _d$[ebp], edx
; Line 138
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 139
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _t$[ebp], eax
; Line 140
	cmp	DWORD PTR _t$[ebp], 192			; 000000c0H
	jae	SHORT $LN3@nextCE
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv180[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	edx, DWORD PTR _t$[ebp]
	shl	edx, 8
	mov	esi, edx
	xor	edi, edi
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	mov	ebx, eax
	xor	eax, eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, -65536				; ffff0000H
	xor	edx, edx
	mov	DWORD PTR tv379[ebp], eax
	mov	eax, ecx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, ebx
	mov	ebx, DWORD PTR tv379[ebp]
	or	edx, ebx
	or	eax, esi
	or	edx, edi
	push	edx
	push	eax
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	SHORT $LN9@nextCE
$LN3@nextCE:
; Line 145
	jmp	SHORT $LN2@nextCE
$LN5@nextCE:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _d$[ebp], ecx
$LN2@nextCE:
; Line 148
	cmp	DWORD PTR _t$[ebp], 193			; 000000c1H
	jne	SHORT $LN1@nextCE
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR tv196[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _t$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	push	edx
	push	eax
	mov	edx, DWORD PTR tv196[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
	jmp	SHORT $LN9@nextCE
$LN1@nextCE:
; Line 153
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextCEFromCE32@CollationIterator@icu_56@@AAE_JPBUCollationData@2@HIAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCEFromCE32
$LN9@nextCE:
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@nextCE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@nextCE:
	DD	1
	DD	$LN12@nextCE
$LN12@nextCE:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@nextCE
$LN11@nextCE:
	DB	99					; 00000063H
	DB	0
?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::nextCE
_TEXT	ENDS
EXTRN	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z:PROC ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z PROC ; icu_56::CollationIterator::CEBuffer::incLength, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 40			; 00000028H
	jl	SHORT $LN2@incLength
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureAppendCapacity@CEBuffer@CollationIterator@icu_56@@QAECHAAW4UErrorCode@@@Z ; icu_56::CollationIterator::CEBuffer::ensureAppendCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@incLength
$LN2@incLength:
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 62
	mov	al, 1
	jmp	SHORT $LN4@incLength
; Line 63
	jmp	SHORT $LN4@incLength
$LN3@incLength:
; Line 64
	xor	al, al
$LN4@incLength:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?incLength@CEBuffer@CollationIterator@icu_56@@QAECAAW4UErrorCode@@@Z ENDP ; icu_56::CollationIterator::CEBuffer::incLength
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_ce$ = 12						; size = 8
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z PROC	; icu_56::CollationIterator::CEBuffer::set, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, DWORD PTR _ce$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ce$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _ce$[ebp]
	mov	edx, DWORD PTR _ce$[ebp+4]
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ENDP	; icu_56::CollationIterator::CEBuffer::set
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z PROC	; icu_56::CollationIterator::CEBuffer::get, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z ; icu_56::MaybeStackArray<__int64,40>::operator[]
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ENDP	; icu_56::CollationIterator::CEBuffer::get
_TEXT	ENDS
PUBLIC	?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z ; icu_56::CollationIterator::setCurrentCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ce$ = 8						; size = 8
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z PROC	; icu_56::CollationIterator::setCurrentCE, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _ce$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ce$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?set@CEBuffer@CollationIterator@icu_56@@QAE_JH_J@Z ; icu_56::CollationIterator::CEBuffer::set
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setCurrentCE@CollationIterator@icu_56@@QAEX_J@Z ENDP	; icu_56::CollationIterator::setCurrentCE
_TEXT	ENDS
PUBLIC	?getCEsLength@CollationIterator@icu_56@@QBEHXZ	; icu_56::CollationIterator::getCEsLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEsLength@CollationIterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEsLength@CollationIterator@icu_56@@QBEHXZ PROC	; icu_56::CollationIterator::getCEsLength, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEsLength@CollationIterator@icu_56@@QBEHXZ ENDP	; icu_56::CollationIterator::getCEsLength
_TEXT	ENDS
PUBLIC	?getCE@CollationIterator@icu_56@@QBE_JH@Z	; icu_56::CollationIterator::getCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE@CollationIterator@icu_56@@QBE_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getCE@CollationIterator@icu_56@@QBE_JH@Z PROC		; icu_56::CollationIterator::getCE, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@CEBuffer@CollationIterator@icu_56@@QBE_JH@Z ; icu_56::CollationIterator::CEBuffer::get
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE@CollationIterator@icu_56@@QBE_JH@Z ENDP		; icu_56::CollationIterator::getCE
_TEXT	ENDS
PUBLIC	?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ; icu_56::CollationIterator::CEBuffer::getCEs
PUBLIC	?getCEs@CollationIterator@icu_56@@QBEPB_JXZ	; icu_56::CollationIterator::getCEs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEs@CollationIterator@icu_56@@QBEPB_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ PROC	; icu_56::CollationIterator::getCEs, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ; icu_56::CollationIterator::CEBuffer::getCEs
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEs@CollationIterator@icu_56@@QBEPB_JXZ ENDP	; icu_56::CollationIterator::getCEs
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ; icu_56::MaybeStackArray<__int64,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ PROC ; icu_56::CollationIterator::CEBuffer::getCEs, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ; icu_56::MaybeStackArray<__int64,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCEs@CEBuffer@CollationIterator@icu_56@@QBEPB_JXZ ENDP ; icu_56::CollationIterator::CEBuffer::getCEs
_TEXT	ENDS
PUBLIC	?clearCEs@CollationIterator@icu_56@@QAEXXZ	; icu_56::CollationIterator::clearCEs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearCEs@CollationIterator@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearCEs@CollationIterator@icu_56@@QAEXXZ PROC		; icu_56::CollationIterator::clearCEs, COMDAT
; _this$ = ecx
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], 0
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clearCEs@CollationIterator@icu_56@@QAEXXZ ENDP		; icu_56::CollationIterator::clearCEs
_TEXT	ENDS
PUBLIC	?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ ; icu_56::CollationIterator::clearCEsIfNoneRemaining
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ PROC ; icu_56::CollationIterator::clearCEsIfNoneRemaining, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN2@clearCEsIf
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearCEs@CollationIterator@icu_56@@QAEXXZ ; icu_56::CollationIterator::clearCEs
$LN2@clearCEsIf:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ ENDP ; icu_56::CollationIterator::clearCEsIfNoneRemaining
_TEXT	ENDS
PUBLIC	??_GCollationIterator@icu_56@@UAEPAXI@Z		; icu_56::CollationIterator::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1CollationIterator@icu_56@@UAE@XZ:PROC	; icu_56::CollationIterator::~CollationIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollationIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollationIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationIterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationIterator@icu_56@@UAE@XZ	; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollationIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationIterator::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECollationIterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollationIterator@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationIterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CollationIterator@icu_56@@UAE@XZ ; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	376					; 00000178H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationIterator@icu_56@@UAE@XZ	; icu_56::CollationIterator::~CollationIterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollationIterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationIterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollationKeys::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::CollationKeys::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationKeys@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::CollationKeys::operator=
_TEXT	ENDS
PUBLIC	??_7CollationSettings@icu_56@@6B@		; icu_56::CollationSettings::`vftable'
PUBLIC	??0CollationSettings@icu_56@@QAE@XZ		; icu_56::CollationSettings::CollationSettings
PUBLIC	??_R4CollationSettings@icu_56@@6B@		; icu_56::CollationSettings::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUCollationSettings@icu_56@@@8		; icu_56::CollationSettings `RTTI Type Descriptor'
PUBLIC	??_R3CollationSettings@icu_56@@8		; icu_56::CollationSettings::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollationSettings@icu_56@@8		; icu_56::CollationSettings::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollationSettings@icu_56@@8	; icu_56::CollationSettings::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SharedObject@icu_56@@8		; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSharedObject@icu_56@@@8			; icu_56::SharedObject `RTTI Type Descriptor'
PUBLIC	??_R3SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Base Class Array'
PUBLIC	??_ECollationSettings@icu_56@@UAEPAXI@Z		; icu_56::CollationSettings::`vector deleting destructor'
EXTRN	__imp_??0SharedObject@icu_56@@QAE@XZ:PROC
;	COMDAT ??_R2SharedObject@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\collationsettings.h
rdata$r	SEGMENT
??_R2SharedObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8 ; icu_56::SharedObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R3SharedObject@icu_56@@8 DD 00H			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSharedObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSharedObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SharedObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSharedObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SharedObject@icu_56@@8 DD FLAT:??_R0?AVSharedObject@icu_56@@@8 ; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollationSettings@icu_56@@8 DD FLAT:??_R0?AUCollationSettings@icu_56@@@8 ; icu_56::CollationSettings::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R2CollationSettings@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollationSettings@icu_56@@8 ; icu_56::CollationSettings::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollationSettings@icu_56@@8
rdata$r	SEGMENT
??_R3CollationSettings@icu_56@@8 DD 00H			; icu_56::CollationSettings::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCollationSettings@icu_56@@@8
_DATA	SEGMENT
??_R0?AUCollationSettings@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationSettings `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCollationSettings@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollationSettings@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollationSettings@icu_56@@6B@ DD 00H		; icu_56::CollationSettings::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUCollationSettings@icu_56@@@8
	DD	FLAT:??_R3CollationSettings@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollationSettings@icu_56@@6B@
CONST	SEGMENT
??_7CollationSettings@icu_56@@6B@ DD FLAT:??_R4CollationSettings@icu_56@@6B@ ; icu_56::CollationSettings::`vftable'
	DD	FLAT:??_ECollationSettings@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollationSettings@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollationSettings@icu_56@@QAE@XZ PROC		; icu_56::CollationSettings::CollationSettings, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SharedObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollationSettings@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 8208		; 00002010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollationSettings@icu_56@@QAE@XZ ENDP		; icu_56::CollationSettings::CollationSettings
_TEXT	ENDS
PUBLIC	??9CollationSettings@icu_56@@QBECABU01@@Z	; icu_56::CollationSettings::operator!=
EXTRN	??8CollationSettings@icu_56@@QBECABU01@@Z:PROC	; icu_56::CollationSettings::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CollationSettings@icu_56@@QBECABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9CollationSettings@icu_56@@QBECABU01@@Z PROC		; icu_56::CollationSettings::operator!=, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8CollationSettings@icu_56@@QBECABU01@@Z ; icu_56::CollationSettings::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CollationSettings@icu_56@@QBECABU01@@Z ENDP		; icu_56::CollationSettings::operator!=
_TEXT	ENDS
PUBLIC	?hasReordering@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::hasReordering
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasReordering@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasReordering@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::hasReordering, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasReordering@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::hasReordering
_TEXT	ENDS
PUBLIC	?reorder@CollationSettings@icu_56@@QBEII@Z	; icu_56::CollationSettings::reorder
EXTRN	?reorderEx@CollationSettings@icu_56@@ABEII@Z:PROC ; icu_56::CollationSettings::reorderEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reorder@CollationSettings@icu_56@@QBEII@Z
_TEXT	SEGMENT
_b$ = -17						; size = 1
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?reorder@CollationSettings@icu_56@@QBEII@Z PROC		; icu_56::CollationSettings::reorder, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	al, BYTE PTR [eax+edx]
	mov	BYTE PTR _b$[ebp], al
; Line 136
	movzx	eax, BYTE PTR _b$[ebp]
	test	eax, eax
	jne	SHORT $LN2@reorder
	cmp	DWORD PTR _p$[ebp], 1
	ja	SHORT $LN3@reorder
$LN2@reorder:
; Line 137
	movzx	eax, BYTE PTR _b$[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	and	ecx, 16777215				; 00ffffffH
	or	eax, ecx
	jmp	SHORT $LN4@reorder
; Line 138
	jmp	SHORT $LN4@reorder
$LN3@reorder:
; Line 139
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reorderEx@CollationSettings@icu_56@@ABEII@Z ; icu_56::CollationSettings::reorderEx
$LN4@reorder:
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reorder@CollationSettings@icu_56@@QBEII@Z ENDP		; icu_56::CollationSettings::reorder
_TEXT	ENDS
PUBLIC	?getStrength@CollationSettings@icu_56@@SAHH@Z	; icu_56::CollationSettings::getStrength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStrength@CollationSettings@icu_56@@SAHH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?getStrength@CollationSettings@icu_56@@SAHH@Z PROC	; icu_56::CollationSettings::getStrength, COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	mov	eax, DWORD PTR _options$[ebp]
	sar	eax, 12					; 0000000cH
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStrength@CollationSettings@icu_56@@SAHH@Z ENDP	; icu_56::CollationSettings::getStrength
_TEXT	ENDS
PUBLIC	?getStrength@CollationSettings@icu_56@@QBEHXZ	; icu_56::CollationSettings::getStrength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStrength@CollationSettings@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getStrength@CollationSettings@icu_56@@QBEHXZ PROC	; icu_56::CollationSettings::getStrength, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?getStrength@CollationSettings@icu_56@@SAHH@Z ; icu_56::CollationSettings::getStrength
	add	esp, 4
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStrength@CollationSettings@icu_56@@QBEHXZ ENDP	; icu_56::CollationSettings::getStrength
_TEXT	ENDS
PUBLIC	?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z ; icu_56::CollationSettings::getFlag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bit$ = 8						; size = 4
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z PROC ; icu_56::CollationSettings::getFlag, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, DWORD PTR _bit$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 16					; 00000010H
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getFlag@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@H@Z ENDP ; icu_56::CollationSettings::getFlag
_TEXT	ENDS
PUBLIC	?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ; icu_56::CollationSettings::getCaseFirst
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ
_TEXT	SEGMENT
tv69 = -220						; size = 4
_option$ = -20						; size = 4
_this$ = -8						; size = 4
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ PROC ; icu_56::CollationSettings::getCaseFirst, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 768				; 00000300H
	mov	DWORD PTR _option$[ebp], ecx
; Line 166
	jne	SHORT $LN3@getCaseFir
	mov	DWORD PTR tv69[ebp], 16			; 00000010H
	jmp	SHORT $LN4@getCaseFir
$LN3@getCaseFir:
	xor	eax, eax
	cmp	DWORD PTR _option$[ebp], 512		; 00000200H
	setne	al
	add	eax, 24					; 00000018H
	mov	DWORD PTR tv69[ebp], eax
$LN4@getCaseFir:
	mov	eax, DWORD PTR tv69[ebp]
; Line 167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCaseFirst@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ENDP ; icu_56::CollationSettings::getCaseFirst
_TEXT	ENDS
PUBLIC	?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ; icu_56::CollationSettings::getAlternateHandling
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ PROC ; icu_56::CollationSettings::getAlternateHandling, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 21					; 00000015H
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlternateHandling@CollationSettings@icu_56@@QBE?AW4UColAttributeValue@@XZ ENDP ; icu_56::CollationSettings::getAlternateHandling
_TEXT	ENDS
PUBLIC	?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ ; icu_56::CollationSettings::getMaxVariable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ PROC ; icu_56::CollationSettings::getMaxVariable, COMDAT
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, 112				; 00000070H
	sar	eax, 4
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaxVariable@CollationSettings@icu_56@@QBE?AW4MaxVariable@12@XZ ENDP ; icu_56::CollationSettings::getMaxVariable
_TEXT	ENDS
PUBLIC	?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::isTertiaryWithCaseBits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z PROC ; icu_56::CollationSettings::isTertiaryWithCaseBits, COMDAT
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 186
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1536				; 00000600H
	cmp	eax, 512				; 00000200H
	sete	al
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ENDP ; icu_56::CollationSettings::isTertiaryWithCaseBits
_TEXT	ENDS
PUBLIC	?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z ; icu_56::CollationSettings::getTertiaryMask
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z PROC	; icu_56::CollationSettings::getTertiaryMask, COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	call	?isTertiaryWithCaseBits@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::isTertiaryWithCaseBits
	add	esp, 4
	movsx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, 49152				; 0000c000H
	add	eax, 16191				; 00003f3fH
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z ENDP	; icu_56::CollationSettings::getTertiaryMask
_TEXT	ENDS
PUBLIC	?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z
_TEXT	SEGMENT
_options$ = 8						; size = 4
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z PROC ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst, COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1792				; 00000700H
	cmp	eax, 768				; 00000300H
	sete	al
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sortsTertiaryUpperCaseFirst@CollationSettings@icu_56@@SACH@Z ENDP ; icu_56::CollationSettings::sortsTertiaryUpperCaseFirst
_TEXT	ENDS
PUBLIC	?dontCheckFCD@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::dontCheckFCD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dontCheckFCD@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::dontCheckFCD, COMDAT
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	sete	al
; Line 202
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dontCheckFCD@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::dontCheckFCD
_TEXT	ENDS
PUBLIC	?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ ; icu_56::CollationSettings::hasBackwardSecondary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ PROC ; icu_56::CollationSettings::hasBackwardSecondary, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2048				; 00000800H
	setne	al
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?hasBackwardSecondary@CollationSettings@icu_56@@QBECXZ ENDP ; icu_56::CollationSettings::hasBackwardSecondary
_TEXT	ENDS
PUBLIC	?isNumeric@CollationSettings@icu_56@@QBECXZ	; icu_56::CollationSettings::isNumeric
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNumeric@CollationSettings@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNumeric@CollationSettings@icu_56@@QBECXZ PROC	; icu_56::CollationSettings::isNumeric, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 2
	setne	al
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNumeric@CollationSettings@icu_56@@QBECXZ ENDP	; icu_56::CollationSettings::isNumeric
_TEXT	ENDS
PUBLIC	??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z	; icu_56::CollationSettings::operator=
EXTRN	__imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_$S1$72703 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z PROC	; icu_56::CollationSettings::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4SharedObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+52], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+56], edx
	mov	DWORD PTR _$S1$72703[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S1$72703[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$72703[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S1$72703[ebp], 384		; 00000180H
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _$S1$72703[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S1$72703[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [esi+edx*2+60]
	mov	WORD PTR [ecx+eax*2+60], dx
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationSettings@icu_56@@QAEAAU01@ABU01@@Z ENDP	; icu_56::CollationSettings::operator=
_TEXT	ENDS
PUBLIC	??_GCollationSettings@icu_56@@UAEPAXI@Z		; icu_56::CollationSettings::`scalar deleting destructor'
EXTRN	??1CollationSettings@icu_56@@UAE@XZ:PROC	; icu_56::CollationSettings::~CollationSettings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollationSettings@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollationSettings@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationSettings::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationSettings@icu_56@@UAE@XZ	; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollationSettings@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationSettings::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ECollationSettings@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollationSettings@icu_56@@UAEPAXI@Z PROC		; icu_56::CollationSettings::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1CollationSettings@icu_56@@UAE@XZ ; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	828					; 0000033cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollationSettings@icu_56@@UAE@XZ	; icu_56::CollationSettings::~CollationSettings
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollationSettings@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollationSettings::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SortKeyByteSink@icu_56@@6B@			; icu_56::SortKeyByteSink::`vftable'
PUBLIC	??1SortKeyByteSink@icu_56@@UAE@XZ		; icu_56::SortKeyByteSink::~SortKeyByteSink
PUBLIC	??_R4SortKeyByteSink@icu_56@@6B@		; icu_56::SortKeyByteSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSortKeyByteSink@icu_56@@@8		; icu_56::SortKeyByteSink `RTTI Type Descriptor'
PUBLIC	??_R3SortKeyByteSink@icu_56@@8			; icu_56::SortKeyByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SortKeyByteSink@icu_56@@8			; icu_56::SortKeyByteSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8		; icu_56::SortKeyByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ByteSink@icu_56@@8		; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVByteSink@icu_56@@@8			; icu_56::ByteSink `RTTI Type Descriptor'
PUBLIC	??_R3ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ByteSink@icu_56@@8				; icu_56::ByteSink::`RTTI Base Class Array'
PUBLIC	?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z	; icu_56::SortKeyByteSink::Append
PUBLIC	?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z ; icu_56::SortKeyByteSink::GetAppendBuffer
EXTRN	__imp_??1ByteSink@icu_56@@UAE@XZ:PROC
EXTRN	??_ESortKeyByteSink@icu_56@@UAEPAXI@Z:PROC	; icu_56::SortKeyByteSink::`vector deleting destructor'
EXTRN	?Flush@ByteSink@icu_56@@UAEXXZ:PROC		; icu_56::ByteSink::Flush
;	COMDAT ??_R2ByteSink@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\collationkeys.cpp
rdata$r	SEGMENT
??_R2ByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8 ; icu_56::ByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3ByteSink@icu_56@@8 DD 00H				; icu_56::ByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ByteSink@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ByteSink@icu_56@@8 DD FLAT:??_R0?AVByteSink@icu_56@@@8 ; icu_56::ByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8 DD FLAT:??_R0?AVSortKeyByteSink@icu_56@@@8 ; icu_56::SortKeyByteSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SortKeyByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SortKeyByteSink@icu_56@@8
rdata$r	SEGMENT
??_R2SortKeyByteSink@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SortKeyByteSink@icu_56@@8 ; icu_56::SortKeyByteSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ByteSink@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SortKeyByteSink@icu_56@@8
rdata$r	SEGMENT
??_R3SortKeyByteSink@icu_56@@8 DD 00H			; icu_56::SortKeyByteSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SortKeyByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSortKeyByteSink@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSortKeyByteSink@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SortKeyByteSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSortKeyByteSink@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SortKeyByteSink@icu_56@@6B@
rdata$r	SEGMENT
??_R4SortKeyByteSink@icu_56@@6B@ DD 00H			; icu_56::SortKeyByteSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSortKeyByteSink@icu_56@@@8
	DD	FLAT:??_R3SortKeyByteSink@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SortKeyByteSink@icu_56@@6B@
CONST	SEGMENT
??_7SortKeyByteSink@icu_56@@6B@ DD FLAT:??_R4SortKeyByteSink@icu_56@@6B@ ; icu_56::SortKeyByteSink::`vftable'
	DD	FLAT:??_ESortKeyByteSink@icu_56@@UAEPAXI@Z
	DD	FLAT:?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z
	DD	FLAT:?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z
	DD	FLAT:?Flush@ByteSink@icu_56@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1SortKeyByteSink@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SortKeyByteSink@icu_56@@UAE@XZ PROC			; icu_56::SortKeyByteSink::~SortKeyByteSink, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SortKeyByteSink@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ByteSink@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SortKeyByteSink@icu_56@@UAE@XZ ENDP			; icu_56::SortKeyByteSink::~SortKeyByteSink
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GSortKeyByteSink@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSortKeyByteSink@icu_56@@UAEPAXI@Z PROC		; icu_56::SortKeyByteSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SortKeyByteSink@icu_56@@UAE@XZ	; icu_56::SortKeyByteSink::~SortKeyByteSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSortKeyByteSink@icu_56@@UAEPAXI@Z ENDP		; icu_56::SortKeyByteSink::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z
_TEXT	SEGMENT
_available$ = -44					; size = 4
_length$ = -32						; size = 4
_ignoreRest$72742 = -20					; size = 4
_this$ = -8						; size = 4
_bytes$ = 8						; size = 4
_n$ = 12						; size = 4
?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z PROC		; icu_56::SortKeyByteSink::Append, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _n$[ebp], 0
	jle	SHORT $LN7@Append
	cmp	DWORD PTR _bytes$[ebp], 0
	jne	SHORT $LN8@Append
$LN7@Append:
; Line 30
	jmp	$LN9@Append
$LN8@Append:
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN6@Append
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _ignoreRest$72742[ebp], ecx
; Line 34
	js	SHORT $LN5@Append
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ignoreRest$72742[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 36
	jmp	$LN9@Append
; Line 37
	jmp	SHORT $LN6@Append
$LN5@Append:
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bytes$[ebp]
	add	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _ignoreRest$72742[ebp]
	neg	eax
	mov	DWORD PTR _n$[ebp], eax
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN6@Append:
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _length$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR _bytes$[ebp]
	jne	SHORT $LN3@Append
; Line 46
	jmp	SHORT $LN9@Append
$LN3@Append:
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR _available$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _n$[ebp]
	cmp	eax, DWORD PTR _available$[ebp]
	jg	SHORT $LN2@Append
; Line 50
	push	1
	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _length$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 51
	jmp	SHORT $LN9@Append
$LN2@Append:
; Line 52
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@Append:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Append@SortKeyByteSink@icu_56@@UAEXPBDH@Z ENDP		; icu_56::SortKeyByteSink::Append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z
_TEXT	SEGMENT
_available$ = -20					; size = 4
_this$ = -8						; size = 4
_min_capacity$ = 8					; size = 4
_desired_capacity_hint$ = 12				; size = 4
_scratch$ = 16						; size = 4
_scratch_capacity$ = 20					; size = 4
_result_capacity$ = 24					; size = 4
?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z PROC ; icu_56::SortKeyByteSink::GetAppendBuffer, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	cmp	DWORD PTR _min_capacity$[ebp], 1
	jl	SHORT $LN6@GetAppendB
	mov	eax, DWORD PTR _scratch_capacity$[ebp]
	cmp	eax, DWORD PTR _min_capacity$[ebp]
	jge	SHORT $LN7@GetAppendB
$LN6@GetAppendB:
; Line 63
	mov	eax, DWORD PTR _result_capacity$[ebp]
	mov	DWORD PTR [eax], 0
; Line 64
	xor	eax, eax
	jmp	$LN8@GetAppendB
$LN7@GetAppendB:
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN5@GetAppendB
; Line 68
	mov	eax, DWORD PTR _result_capacity$[ebp]
	mov	ecx, DWORD PTR _scratch_capacity$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 69
	mov	eax, DWORD PTR _scratch$[ebp]
	jmp	$LN8@GetAppendB
$LN5@GetAppendB:
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _available$[ebp], edx
; Line 72
	mov	eax, DWORD PTR _available$[ebp]
	cmp	eax, DWORD PTR _min_capacity$[ebp]
	jl	SHORT $LN4@GetAppendB
; Line 73
	mov	eax, DWORD PTR _result_capacity$[ebp]
	mov	ecx, DWORD PTR _available$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
	jmp	SHORT $LN8@GetAppendB
	jmp	SHORT $LN8@GetAppendB
$LN4@GetAppendB:
; Line 75
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _desired_capacity_hint$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAppendB
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _result_capacity$[ebp]
	mov	DWORD PTR [eax], edx
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
	jmp	SHORT $LN8@GetAppendB
; Line 78
	jmp	SHORT $LN8@GetAppendB
$LN2@GetAppendB:
; Line 79
	mov	eax, DWORD PTR _result_capacity$[ebp]
	mov	ecx, DWORD PTR _scratch_capacity$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 80
	mov	eax, DWORD PTR _scratch$[ebp]
$LN8@GetAppendB:
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetAppendBuffer@SortKeyByteSink@icu_56@@UAEPADHHPADHPAH@Z ENDP ; icu_56::SortKeyByteSink::GetAppendBuffer
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z	; icu_56::MaybeStackArray<unsigned char,40>::operator[]
PUBLIC	?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
PUBLIC	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
PUBLIC	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z
_TEXT	SEGMENT
tv79 = -208						; size = 4
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+52], eax
	jl	SHORT $LN1@appendByte
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@appendByte
$LN1@appendByte:
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv79[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax], cl
$LN3@appendByte:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
_TEXT	ENDS
PUBLIC	??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA ; `icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16'::`2'::__LINE__Var
PUBLIC	?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB '('
	DB	00H, 'w', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'f', 00H, 'f', 00H, 'f', 00H, 'f', 00H, ')', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 's', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA DD 084H ; `icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z
_TEXT	SEGMENT
tv134 = -244						; size = 4
tv92 = -244						; size = 4
_appendLength$ = -44					; size = 4
_b1$ = -29						; size = 1
_b0$ = -17						; size = 1
_this$ = -8						; size = 4
_w$ = 8							; size = 4
?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _w$[ebp]
	and	eax, 65535				; 0000ffffH
	jne	SHORT $LN6@appendWeig
	mov	ecx, DWORD PTR ?__LINE__Var@?1??appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@appendWeig:
; Line 134
	mov	eax, DWORD PTR _w$[ebp]
	shr	eax, 8
	mov	BYTE PTR _b0$[ebp], al
; Line 135
	mov	al, BYTE PTR _w$[ebp]
	mov	BYTE PTR _b1$[ebp], al
; Line 136
	movzx	eax, BYTE PTR _b1$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 1
	mov	DWORD PTR _appendLength$[ebp], eax
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+52]
	add	esi, DWORD PTR _appendLength$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
	cmp	esi, eax
	jle	SHORT $LN2@appendWeig
	mov	eax, DWORD PTR _appendLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@appendWeig
$LN2@appendWeig:
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv92[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _b0$[ebp]
	mov	BYTE PTR [eax], cl
; Line 139
	movzx	eax, BYTE PTR _b1$[ebp]
	test	eax, eax
	je	SHORT $LN4@appendWeig
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv134[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _b1$[ebp]
	mov	BYTE PTR [eax], cl
$LN4@appendWeig:
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
_TEXT	ENDS
PUBLIC	??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA ; `icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32'::`2'::__LINE__Var
PUBLIC	?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32
;	COMDAT ??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'w', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA DD 092H ; `icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z
_TEXT	SEGMENT
tv86 = -236						; size = 4
tv171 = -232						; size = 4
tv159 = -232						; size = 4
tv147 = -232						; size = 4
tv136 = -232						; size = 4
tv87 = -232						; size = 4
_appendLength$ = -32					; size = 4
_bytes$ = -20						; size = 4
_this$ = -8						; size = 4
_w$ = 8							; size = 4
?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32, COMDAT
; _this$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 147
	cmp	DWORD PTR _w$[ebp], 0
	jne	SHORT $LN8@appendWeig@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@PAAHJHJA@?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@appendWeig@2:
; Line 148
	mov	eax, DWORD PTR _w$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _bytes$[ebp], al
	mov	eax, DWORD PTR _w$[ebp]
	shr	eax, 16					; 00000010H
	mov	BYTE PTR _bytes$[ebp+1], al
	mov	eax, DWORD PTR _w$[ebp]
	shr	eax, 8
	mov	BYTE PTR _bytes$[ebp+2], al
	mov	al, BYTE PTR _w$[ebp]
	mov	BYTE PTR _bytes$[ebp+3], al
; Line 149
	movzx	eax, BYTE PTR _bytes$[ebp+1]
	test	eax, eax
	jne	SHORT $LN11@appendWeig@2
	mov	DWORD PTR tv87[ebp], 1
	jmp	SHORT $LN12@appendWeig@2
$LN11@appendWeig@2:
	movzx	ecx, BYTE PTR _bytes$[ebp+2]
	test	ecx, ecx
	jne	SHORT $LN9@appendWeig@2
	mov	DWORD PTR tv86[ebp], 2
	jmp	SHORT $LN10@appendWeig@2
$LN9@appendWeig@2:
	movzx	edx, BYTE PTR _bytes$[ebp+3]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	edx, 3
	mov	DWORD PTR tv86[ebp], edx
$LN10@appendWeig@2:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv87[ebp], eax
$LN12@appendWeig@2:
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR _appendLength$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+52]
	add	esi, DWORD PTR _appendLength$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
	cmp	esi, eax
	jle	SHORT $LN4@appendWeig@2
	mov	eax, DWORD PTR _appendLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	$LN6@appendWeig@2
$LN4@appendWeig@2:
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv136[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _bytes$[ebp]
	mov	BYTE PTR [eax], cl
; Line 152
	movzx	eax, BYTE PTR _bytes$[ebp+1]
	test	eax, eax
	je	$LN6@appendWeig@2
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv147[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _bytes$[ebp+1]
	mov	BYTE PTR [eax], cl
; Line 154
	movzx	eax, BYTE PTR _bytes$[ebp+2]
	test	eax, eax
	je	SHORT $LN6@appendWeig@2
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv159[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv159[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _bytes$[ebp+2]
	mov	BYTE PTR [eax], cl
; Line 156
	movzx	eax, BYTE PTR _bytes$[ebp+3]
	test	eax, eax
	je	SHORT $LN6@appendWeig@2
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv171[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _bytes$[ebp+3]
	mov	BYTE PTR [eax], cl
$LN6@appendWeig@2:
; Line 162
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@appendWeig@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@appendWeig@2:
	DD	1
	DD	$LN14@appendWeig@2
$LN14@appendWeig@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@appendWeig@2
$LN13@appendWeig@2:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA ; `icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16'::`2'::__LINE__Var
PUBLIC	?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16
;	COMDAT ?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA DD 0a5H ; `icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z
_TEXT	SEGMENT
tv94 = -244						; size = 4
_appendLength$ = -44					; size = 4
_b1$ = -29						; size = 1
_b0$ = -17						; size = 1
_this$ = -8						; size = 4
_w$ = 8							; size = 4
?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 166
	mov	eax, DWORD PTR _w$[ebp]
	and	eax, 65535				; 0000ffffH
	jne	SHORT $LN7@appendReve
	mov	ecx, DWORD PTR ?__LINE__Var@?1??appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@OFFILMJK@?$AA?$CI?$AAw?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AAf?$AAf?$AAf?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@appendReve:
; Line 167
	mov	eax, DWORD PTR _w$[ebp]
	shr	eax, 8
	mov	BYTE PTR _b0$[ebp], al
; Line 168
	mov	al, BYTE PTR _w$[ebp]
	mov	BYTE PTR _b1$[ebp], al
; Line 169
	movzx	eax, BYTE PTR _b1$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 1
	mov	DWORD PTR _appendLength$[ebp], eax
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+52]
	add	esi, DWORD PTR _appendLength$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
	cmp	esi, eax
	jle	SHORT $LN3@appendReve
	mov	eax, DWORD PTR _appendLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@appendReve
$LN3@appendReve:
; Line 171
	movzx	eax, BYTE PTR _b1$[ebp]
	test	eax, eax
	jne	SHORT $LN2@appendReve
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR tv94[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	mov	edx, DWORD PTR tv94[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	cl, BYTE PTR _b0$[ebp]
	mov	BYTE PTR [eax], cl
; Line 173
	jmp	SHORT $LN5@appendReve
$LN2@appendReve:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	dl, BYTE PTR _b1$[ebp]
	mov	BYTE PTR [eax], dl
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	dl, BYTE PTR _b0$[ebp]
	mov	BYTE PTR [eax], dl
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], ecx
$LN5@appendReve:
; Line 179
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z ; icu_56::MaybeStackArray<unsigned char,40>::resize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z
_TEXT	SEGMENT
_altCapacity$ = -32					; size = 4
_newCapacity$ = -20					; size = 4
_this$ = -8						; size = 4
_appendCapacity$ = 8					; size = 4
?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+56]
	test	ecx, ecx
	jne	SHORT $LN4@ensureCapa
; Line 183
	xor	al, al
	jmp	SHORT $LN5@ensureCapa
$LN4@ensureCapa:
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
	shl	eax, 1
	mov	DWORD PTR _newCapacity$[ebp], eax
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _appendCapacity$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _altCapacity$[ebp], eax
; Line 187
	mov	eax, DWORD PTR _newCapacity$[ebp]
	cmp	eax, DWORD PTR _altCapacity$[ebp]
	jge	SHORT $LN3@ensureCapa
; Line 188
	mov	eax, DWORD PTR _altCapacity$[ebp]
	mov	DWORD PTR _newCapacity$[ebp], eax
$LN3@ensureCapa:
; Line 190
	cmp	DWORD PTR _newCapacity$[ebp], 200	; 000000c8H
	jge	SHORT $LN2@ensureCapa
; Line 191
	mov	DWORD PTR _newCapacity$[ebp], 200	; 000000c8H
$LN2@ensureCapa:
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR _newCapacity$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z ; icu_56::MaybeStackArray<unsigned char,40>::resize
	test	eax, eax
	jne	SHORT $LN1@ensureCapa
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], 0
	xor	al, al
	jmp	SHORT $LN5@ensureCapa
$LN1@ensureCapa:
; Line 196
	mov	al, 1
$LN5@ensureCapa:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ensureCapacity@SortKeyLevel@?A0x25640a5d@icu_56@@AAECH@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::ensureCapacity
_TEXT	ENDS
PUBLIC	??_7LevelCallback@CollationKeys@icu_56@@6B@	; icu_56::CollationKeys::LevelCallback::`vftable'
PUBLIC	??1LevelCallback@CollationKeys@icu_56@@UAE@XZ	; icu_56::CollationKeys::LevelCallback::~LevelCallback
PUBLIC	??_R4LevelCallback@CollationKeys@icu_56@@6B@	; icu_56::CollationKeys::LevelCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLevelCallback@CollationKeys@icu_56@@@8	; icu_56::CollationKeys::LevelCallback `RTTI Type Descriptor'
PUBLIC	??_R3LevelCallback@CollationKeys@icu_56@@8	; icu_56::CollationKeys::LevelCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LevelCallback@CollationKeys@icu_56@@8	; icu_56::CollationKeys::LevelCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8 ; icu_56::CollationKeys::LevelCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z ; icu_56::CollationKeys::LevelCallback::needToWrite
EXTRN	??_ELevelCallback@CollationKeys@icu_56@@UAEPAXI@Z:PROC ; icu_56::CollationKeys::LevelCallback::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8 DD FLAT:??_R0?AVLevelCallback@CollationKeys@icu_56@@@8 ; icu_56::CollationKeys::LevelCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LevelCallback@CollationKeys@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2LevelCallback@CollationKeys@icu_56@@8
rdata$r	SEGMENT
??_R2LevelCallback@CollationKeys@icu_56@@8 DD FLAT:??_R1A@?0A@EA@LevelCallback@CollationKeys@icu_56@@8 ; icu_56::CollationKeys::LevelCallback::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3LevelCallback@CollationKeys@icu_56@@8
rdata$r	SEGMENT
??_R3LevelCallback@CollationKeys@icu_56@@8 DD 00H	; icu_56::CollationKeys::LevelCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2LevelCallback@CollationKeys@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLevelCallback@CollationKeys@icu_56@@@8
_DATA	SEGMENT
??_R0?AVLevelCallback@CollationKeys@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationKeys::LevelCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLevelCallback@CollationKeys@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LevelCallback@CollationKeys@icu_56@@6B@
rdata$r	SEGMENT
??_R4LevelCallback@CollationKeys@icu_56@@6B@ DD 00H	; icu_56::CollationKeys::LevelCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLevelCallback@CollationKeys@icu_56@@@8
	DD	FLAT:??_R3LevelCallback@CollationKeys@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7LevelCallback@CollationKeys@icu_56@@6B@
CONST	SEGMENT
??_7LevelCallback@CollationKeys@icu_56@@6B@ DD FLAT:??_R4LevelCallback@CollationKeys@icu_56@@6B@ ; icu_56::CollationKeys::LevelCallback::`vftable'
	DD	FLAT:??_ELevelCallback@CollationKeys@icu_56@@UAEPAXI@Z
	DD	FLAT:?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1LevelCallback@CollationKeys@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LevelCallback@CollationKeys@icu_56@@UAE@XZ PROC	; icu_56::CollationKeys::LevelCallback::~LevelCallback, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LevelCallback@CollationKeys@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LevelCallback@CollationKeys@icu_56@@UAE@XZ ENDP	; icu_56::CollationKeys::LevelCallback::~LevelCallback
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z PROC	; icu_56::CollationKeys::LevelCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LevelCallback@CollationKeys@icu_56@@UAE@XZ ; icu_56::CollationKeys::LevelCallback::~LevelCallback
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLevelCallback@CollationKeys@icu_56@@UAEPAXI@Z ENDP	; icu_56::CollationKeys::LevelCallback::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z PROC ; icu_56::CollationKeys::LevelCallback::needToWrite, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?needToWrite@LevelCallback@CollationKeys@icu_56@@UAECW4Level@Collation@3@@Z ENDP ; icu_56::CollationKeys::LevelCallback::needToWrite
_TEXT	ENDS
PUBLIC	??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z	; icu_56::`anonymous namespace'::SortKeyLevel::operator[]
PUBLIC	?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo
PUBLIC	?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ	; icu_56::`anonymous namespace'::SortKeyLevel::isOk
PUBLIC	??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@ ; `string'
PUBLIC	?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isEmpty
PUBLIC	??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48 ; `icu_56::CollationKeys::writeSortKeyUpToQuaternary'::`2'::__LINE__Var
PUBLIC	?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ ; icu_56::`anonymous namespace'::SortKeyLevel::length
PUBLIC	?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ ; icu_56::`anonymous namespace'::SortKeyLevel::data
PUBLIC	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ	; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
PUBLIC	?IsOk@SortKeyByteSink@icu_56@@QBECXZ		; icu_56::SortKeyByteSink::IsOk
PUBLIC	?Overflowed@SortKeyByteSink@icu_56@@QBECXZ	; icu_56::SortKeyByteSink::Overflowed
PUBLIC	?Append@SortKeyByteSink@icu_56@@QAEXI@Z		; icu_56::SortKeyByteSink::Append
PUBLIC	??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ	; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
PUBLIC	__$ArrayPad$
PUBLIC	?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z ; icu_56::CollationKeys::writeSortKeyUpToQuaternary
EXTRN	__allshr:PROC
;	COMDAT ??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB '('
	DB	00H, 'c', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'f', 00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'c', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@ DB '0'
	DB	00H, 'x', 00H, '8', 00H, '6', 00H, '0', 00H, '0', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, 't', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 'x', 00H, 'b', 00H, 'f', 00H, 'f', 00H, 'f', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@ DB '('
	DB	00H, 'l', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, '3', 00H
	DB	'2', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'c'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, ')', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 'x', 00H, 'c', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@ DB '('
	DB	00H, 'c', 00H, ' ', 00H, '&', 00H, ' ', 00H, '0', 00H, 'x', 00H
	DB	'c', 00H, '0', 00H, ')', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 'x', 00H, 'c', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48
_DATA	SEGMENT
?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48 DD 0e5H ; `icu_56::CollationKeys::writeSortKeyUpToQuaternary'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$3
__ehfuncinfo$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv338 = -968						; size = 4
tv219 = -968						; size = 4
_c$73142 = -765						; size = 1
_i$73138 = -756						; size = 4
_b$73137 = -741						; size = 1
_length$73136 = -732					; size = 4
_ok$ = -717						; size = 1
_b$73126 = -708						; size = 4
_q$73115 = -696						; size = 4
_b$73111 = -684						; size = 4
_b$73095 = -672						; size = 4
_b$73085 = -660						; size = 4
_t$73075 = -648						; size = 4
_b$73064 = -636						; size = 4
_c$73052 = -624						; size = 4
_b$73047 = -609						; size = 1
_q$73043 = -600						; size = 4
_p$73042 = -588						; size = 4
_last$73040 = -576					; size = 4
_secs$73039 = -564					; size = 4
_b$73032 = -552						; size = 4
_remainder$73031 = -540					; size = 4
_b$73026 = -528						; size = 4
_s$73015 = -516						; size = 4
_lower32$73011 = -504					; size = 4
_buffer$73006 = -492					; size = 3
_p2$73003 = -477					; size = 1
_p1$72994 = -468					; size = 4
_isCompressible$72992 = -453				; size = 1
_p$72973 = -444						; size = 4
_ce$72972 = -432					; size = 8
_secSegmentStart$ = -416				; size = 4
_prevSecondary$ = -404					; size = 4
_commonQuaternaries$ = -392				; size = 4
_commonTertiaries$ = -380				; size = 4
_commonSecondaries$ = -368				; size = 4
_commonCases$ = -356					; size = 4
_prevReorderedPrimary$ = -344				; size = 4
_quaternaries$ = -332					; size = 60
_tertiaries$ = -264					; size = 60
_secondaries$ = -196					; size = 60
_cases$ = -128						; size = 60
_tertiaryMask$ = -60					; size = 4
_variableTop$ = -48					; size = 4
_levels$ = -36						; size = 4
_options$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iter$ = 8						; size = 4
_compressibleBytes$ = 12				; size = 4
_settings$ = 16						; size = 4
_sink$ = 20						; size = 4
_minLevel$ = 24						; size = 4
_callback$ = 28						; size = 4
_preflight$ = 32					; size = 1
_errorCode$ = 36					; size = 4
?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z PROC ; icu_56::CollationKeys::writeSortKeyUpToQuaternary, COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 956				; 000003bcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-968]
	mov	ecx, 239				; 000000efH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 230
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN136@writeSortK
	jmp	$LN137@writeSortK
$LN136@writeSortK:
; Line 232
	mov	eax, DWORD PTR _settings$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _options$[ebp], ecx
; Line 234
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	call	?getStrength@CollationSettings@icu_56@@SAHH@Z ; icu_56::CollationSettings::getStrength
	add	esp, 4
	mov	ecx, DWORD PTR _levelMasks[eax*4]
	mov	DWORD PTR _levels$[ebp], ecx
; Line 235
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 1024				; 00000400H
	je	SHORT $LN135@writeSortK
; Line 236
	mov	eax, DWORD PTR _levels$[ebp]
	or	eax, 8
	mov	DWORD PTR _levels$[ebp], eax
$LN135@writeSortK:
; Line 239
	mov	eax, 1
	mov	ecx, DWORD PTR _minLevel$[ebp]
	shl	eax, cl
	sub	eax, 1
	not	eax
	and	eax, DWORD PTR _levels$[ebp]
	mov	DWORD PTR _levels$[ebp], eax
; Line 240
	jne	SHORT $LN134@writeSortK
	jmp	$LN137@writeSortK
$LN134@writeSortK:
; Line 243
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 12					; 0000000cH
	jne	SHORT $LN133@writeSortK
; Line 244
	mov	DWORD PTR _variableTop$[ebp], 0
; Line 245
	jmp	SHORT $LN132@writeSortK
$LN133@writeSortK:
; Line 247
	mov	eax, DWORD PTR _settings$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	DWORD PTR _variableTop$[ebp], ecx
$LN132@writeSortK:
; Line 250
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	call	?getTertiaryMask@CollationSettings@icu_56@@SAIH@Z ; icu_56::CollationSettings::getTertiaryMask
	add	esp, 4
	mov	DWORD PTR _tertiaryMask$[ebp], eax
; Line 252
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 253
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 254
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 255
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 257
	mov	DWORD PTR _prevReorderedPrimary$[ebp], 0
; Line 258
	mov	DWORD PTR _commonCases$[ebp], 0
; Line 259
	mov	DWORD PTR _commonSecondaries$[ebp], 0
; Line 260
	mov	DWORD PTR _commonTertiaries$[ebp], 0
; Line 261
	mov	DWORD PTR _commonQuaternaries$[ebp], 0
; Line 263
	mov	DWORD PTR _prevSecondary$[ebp], 0
; Line 264
	mov	DWORD PTR _secSegmentStart$[ebp], 0
$LN131@writeSortK:
; Line 268
	mov	ecx, DWORD PTR _iter$[ebp]
	call	?clearCEsIfNoneRemaining@CollationIterator@icu_56@@QAEXXZ ; icu_56::CollationIterator::clearCEsIfNoneRemaining
; Line 269
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	call	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
	mov	DWORD PTR _ce$72972[ebp], eax
	mov	DWORD PTR _ce$72972[ebp+4], edx
; Line 270
	mov	eax, DWORD PTR _ce$72972[ebp]
	mov	edx, DWORD PTR _ce$72972[ebp+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	mov	DWORD PTR _p$72973[ebp], eax
; Line 271
	mov	eax, DWORD PTR _p$72973[ebp]
	cmp	eax, DWORD PTR _variableTop$[ebp]
	jae	$LN129@writeSortK
	cmp	DWORD PTR _p$72973[ebp], 33554432	; 02000000H
	jbe	$LN129@writeSortK
; Line 274
	cmp	DWORD PTR _commonQuaternaries$[ebp], 0
	je	SHORT $LN125@writeSortK
; Line 275
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonQuaternaries$[ebp], eax
$LN127@writeSortK:
; Line 276
	cmp	DWORD PTR _commonQuaternaries$[ebp], 113 ; 00000071H
	jl	SHORT $LN126@writeSortK
; Line 277
	push	140					; 0000008cH
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 278
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	sub	eax, 113				; 00000071H
	mov	DWORD PTR _commonQuaternaries$[ebp], eax
; Line 279
	jmp	SHORT $LN127@writeSortK
$LN126@writeSortK:
; Line 281
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 282
	mov	DWORD PTR _commonQuaternaries$[ebp], 0
$LN125@writeSortK:
; Line 285
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 32					; 00000020H
	je	SHORT $LN119@writeSortK
; Line 286
	mov	ecx, DWORD PTR _settings$[ebp]
	call	?hasReordering@CollationSettings@icu_56@@QBECXZ ; icu_56::CollationSettings::hasReordering
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN121@writeSortK
; Line 287
	mov	eax, DWORD PTR _p$72973[ebp]
	push	eax
	mov	ecx, DWORD PTR _settings$[ebp]
	call	?reorder@CollationSettings@icu_56@@QBEII@Z ; icu_56::CollationSettings::reorder
	mov	DWORD PTR _p$72973[ebp], eax
$LN121@writeSortK:
; Line 289
	mov	eax, DWORD PTR _p$72973[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 27					; 0000001bH
	jb	SHORT $LN120@writeSortK
; Line 292
	push	27					; 0000001bH
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
$LN120@writeSortK:
; Line 294
	mov	eax, DWORD PTR _p$72973[ebp]
	push	eax
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendWeight32@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight32
$LN119@writeSortK:
; Line 297
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iter$[ebp]
	call	?nextCE@CollationIterator@icu_56@@QAE_JAAW4UErrorCode@@@Z ; icu_56::CollationIterator::nextCE
	mov	DWORD PTR _ce$72972[ebp], eax
	mov	DWORD PTR _ce$72972[ebp+4], edx
; Line 298
	mov	eax, DWORD PTR _ce$72972[ebp]
	mov	edx, DWORD PTR _ce$72972[ebp+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	mov	DWORD PTR _p$72973[ebp], eax
; Line 299
	cmp	DWORD PTR _p$72973[ebp], 0
	je	SHORT $LN119@writeSortK
; Line 300
	mov	eax, DWORD PTR _p$72973[ebp]
	cmp	eax, DWORD PTR _variableTop$[ebp]
	jae	SHORT $LN129@writeSortK
	cmp	DWORD PTR _p$72973[ebp], 33554432	; 02000000H
	ja	$LN125@writeSortK
$LN129@writeSortK:
; Line 306
	cmp	DWORD PTR _p$72973[ebp], 1
	jbe	$LN115@writeSortK
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 2
	je	$LN115@writeSortK
; Line 308
	mov	eax, DWORD PTR _p$72973[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _compressibleBytes$[ebp]
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR _isCompressible$72992[ebp], dl
; Line 309
	mov	ecx, DWORD PTR _settings$[ebp]
	call	?hasReordering@CollationSettings@icu_56@@QBECXZ ; icu_56::CollationSettings::hasReordering
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN114@writeSortK
; Line 310
	mov	eax, DWORD PTR _p$72973[ebp]
	push	eax
	mov	ecx, DWORD PTR _settings$[ebp]
	call	?reorder@CollationSettings@icu_56@@QBEII@Z ; icu_56::CollationSettings::reorder
	mov	DWORD PTR _p$72973[ebp], eax
$LN114@writeSortK:
; Line 312
	mov	eax, DWORD PTR _p$72973[ebp]
	shr	eax, 24					; 00000018H
	mov	DWORD PTR _p1$72994[ebp], eax
; Line 313
	movsx	eax, BYTE PTR _isCompressible$72992[ebp]
	test	eax, eax
	je	SHORT $LN112@writeSortK
	mov	eax, DWORD PTR _prevReorderedPrimary$[ebp]
	shr	eax, 24					; 00000018H
	cmp	DWORD PTR _p1$72994[ebp], eax
	je	SHORT $LN113@writeSortK
$LN112@writeSortK:
; Line 314
	cmp	DWORD PTR _prevReorderedPrimary$[ebp], 0
	je	SHORT $LN111@writeSortK
; Line 315
	mov	eax, DWORD PTR _p$72973[ebp]
	cmp	eax, DWORD PTR _prevReorderedPrimary$[ebp]
	jae	SHORT $LN110@writeSortK
; Line 318
	cmp	DWORD PTR _p1$72994[ebp], 2
	jbe	SHORT $LN109@writeSortK
; Line 319
	push	3
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
$LN109@writeSortK:
; Line 321
	jmp	SHORT $LN111@writeSortK
$LN110@writeSortK:
; Line 322
	push	255					; 000000ffH
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
$LN111@writeSortK:
; Line 325
	mov	eax, DWORD PTR _p1$72994[ebp]
	push	eax
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 326
	movsx	eax, BYTE PTR _isCompressible$72992[ebp]
	test	eax, eax
	je	SHORT $LN107@writeSortK
; Line 327
	mov	eax, DWORD PTR _p$72973[ebp]
	mov	DWORD PTR _prevReorderedPrimary$[ebp], eax
; Line 328
	jmp	SHORT $LN113@writeSortK
$LN107@writeSortK:
; Line 329
	mov	DWORD PTR _prevReorderedPrimary$[ebp], 0
$LN113@writeSortK:
; Line 332
	mov	eax, DWORD PTR _p$72973[ebp]
	shr	eax, 16					; 00000010H
	mov	BYTE PTR _p2$73003[ebp], al
; Line 333
	movsx	eax, BYTE PTR _p2$73003[ebp]
	test	eax, eax
	je	SHORT $LN105@writeSortK
; Line 334
	mov	al, BYTE PTR _p2$73003[ebp]
	mov	BYTE PTR _buffer$73006[ebp], al
	mov	eax, DWORD PTR _p$72973[ebp]
	shr	eax, 8
	mov	BYTE PTR _buffer$73006[ebp+1], al
	mov	al, BYTE PTR _p$72973[ebp]
	mov	BYTE PTR _buffer$73006[ebp+2], al
; Line 335
	movsx	eax, BYTE PTR _buffer$73006[ebp+1]
	test	eax, eax
	jne	SHORT $LN139@writeSortK
	mov	DWORD PTR tv219[ebp], 1
	jmp	SHORT $LN140@writeSortK
$LN139@writeSortK:
	movsx	ecx, BYTE PTR _buffer$73006[ebp+2]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 2
	mov	DWORD PTR tv219[ebp], ecx
$LN140@writeSortK:
	mov	esi, esp
	mov	edx, DWORD PTR tv219[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$73006[ebp]
	push	eax
	mov	ecx, DWORD PTR _sink$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sink$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN105@writeSortK:
; Line 340
	movsx	eax, BYTE PTR _preflight$[ebp]
	test	eax, eax
	jne	SHORT $LN115@writeSortK
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Overflowed@SortKeyByteSink@icu_56@@QBECXZ ; icu_56::SortKeyByteSink::Overflowed
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN115@writeSortK
; Line 341
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN103@writeSortK
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?IsOk@SortKeyByteSink@icu_56@@QBECXZ	; icu_56::SortKeyByteSink::IsOk
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN103@writeSortK
; Line 342
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN103@writeSortK:
; Line 344
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN115@writeSortK:
; Line 348
	mov	eax, DWORD PTR _ce$72972[ebp]
	mov	DWORD PTR _lower32$73011[ebp], eax
; Line 349
	cmp	DWORD PTR _lower32$73011[ebp], 0
	jne	SHORT $LN102@writeSortK
	jmp	$LN131@writeSortK
$LN102@writeSortK:
; Line 351
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 4
	je	$LN101@writeSortK
; Line 352
	mov	eax, DWORD PTR _lower32$73011[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _s$73015[ebp], eax
; Line 353
	cmp	DWORD PTR _s$73015[ebp], 0
	jne	SHORT $LN100@writeSortK
; Line 355
	jmp	$LN101@writeSortK
$LN100@writeSortK:
; Line 357
	cmp	DWORD PTR _s$73015[ebp], 1280		; 00000500H
	jne	SHORT $LN98@writeSortK
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 2048				; 00000800H
	je	SHORT $LN97@writeSortK
	cmp	DWORD PTR _p$72973[ebp], 33554432	; 02000000H
	je	SHORT $LN98@writeSortK
$LN97@writeSortK:
; Line 360
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	add	eax, 1
	mov	DWORD PTR _commonSecondaries$[ebp], eax
	jmp	$LN101@writeSortK
$LN98@writeSortK:
; Line 361
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 2048				; 00000800H
	jne	$LN95@writeSortK
; Line 362
	cmp	DWORD PTR _commonSecondaries$[ebp], 0
	je	$LN94@writeSortK
; Line 363
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonSecondaries$[ebp], eax
$LN93@writeSortK:
; Line 364
	cmp	DWORD PTR _commonSecondaries$[ebp], 33	; 00000021H
	jl	SHORT $LN92@writeSortK
; Line 365
	push	37					; 00000025H
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 366
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	sub	eax, 33					; 00000021H
	mov	DWORD PTR _commonSecondaries$[ebp], eax
; Line 367
	jmp	SHORT $LN93@writeSortK
$LN92@writeSortK:
; Line 369
	cmp	DWORD PTR _s$73015[ebp], 1280		; 00000500H
	jae	SHORT $LN91@writeSortK
; Line 370
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	add	eax, 5
	mov	DWORD PTR _b$73026[ebp], eax
; Line 371
	jmp	SHORT $LN90@writeSortK
$LN91@writeSortK:
; Line 372
	mov	eax, 69					; 00000045H
	sub	eax, DWORD PTR _commonSecondaries$[ebp]
	mov	DWORD PTR _b$73026[ebp], eax
$LN90@writeSortK:
; Line 374
	mov	eax, DWORD PTR _b$73026[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 375
	mov	DWORD PTR _commonSecondaries$[ebp], 0
$LN94@writeSortK:
; Line 377
	mov	eax, DWORD PTR _s$73015[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
; Line 378
	jmp	$LN101@writeSortK
$LN95@writeSortK:
; Line 379
	cmp	DWORD PTR _commonSecondaries$[ebp], 0
	je	$LN88@writeSortK
; Line 380
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonSecondaries$[ebp], eax
; Line 382
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	cdq
	mov	ecx, 33					; 00000021H
	idiv	ecx
	mov	DWORD PTR _remainder$73031[ebp], edx
; Line 384
	cmp	DWORD PTR _prevSecondary$[ebp], 1280	; 00000500H
	jae	SHORT $LN87@writeSortK
; Line 385
	mov	eax, DWORD PTR _remainder$73031[ebp]
	add	eax, 5
	mov	DWORD PTR _b$73032[ebp], eax
; Line 386
	jmp	SHORT $LN86@writeSortK
$LN87@writeSortK:
; Line 387
	mov	eax, 69					; 00000045H
	sub	eax, DWORD PTR _remainder$73031[ebp]
	mov	DWORD PTR _b$73032[ebp], eax
$LN86@writeSortK:
; Line 389
	mov	eax, DWORD PTR _b$73032[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 390
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	sub	eax, DWORD PTR _remainder$73031[ebp]
	mov	DWORD PTR _commonSecondaries$[ebp], eax
$LN85@writeSortK:
; Line 392
	cmp	DWORD PTR _commonSecondaries$[ebp], 0
	jle	SHORT $LN88@writeSortK
; Line 393
	push	37					; 00000025H
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 394
	mov	eax, DWORD PTR _commonSecondaries$[ebp]
	sub	eax, 33					; 00000021H
	mov	DWORD PTR _commonSecondaries$[ebp], eax
; Line 395
	jmp	SHORT $LN85@writeSortK
$LN88@writeSortK:
; Line 398
	cmp	DWORD PTR _p$72973[ebp], 0
	jbe	$LN83@writeSortK
	cmp	DWORD PTR _p$72973[ebp], 33554432	; 02000000H
	ja	$LN83@writeSortK
; Line 401
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ ; icu_56::`anonymous namespace'::SortKeyLevel::data
	mov	DWORD PTR _secs$73039[ebp], eax
; Line 402
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ ; icu_56::`anonymous namespace'::SortKeyLevel::length
	sub	eax, 1
	mov	DWORD PTR _last$73040[ebp], eax
; Line 403
	mov	eax, DWORD PTR _secSegmentStart$[ebp]
	cmp	eax, DWORD PTR _last$73040[ebp]
	jge	SHORT $LN82@writeSortK
; Line 404
	mov	eax, DWORD PTR _secs$73039[ebp]
	add	eax, DWORD PTR _secSegmentStart$[ebp]
	mov	DWORD PTR _p$73042[ebp], eax
; Line 405
	mov	eax, DWORD PTR _secs$73039[ebp]
	add	eax, DWORD PTR _last$73040[ebp]
	mov	DWORD PTR _q$73043[ebp], eax
$LN81@writeSortK:
; Line 407
	mov	eax, DWORD PTR _p$73042[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$73047[ebp], cl
; Line 408
	mov	eax, DWORD PTR _p$73042[ebp]
	mov	ecx, DWORD PTR _q$73043[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$73042[ebp]
	add	eax, 1
	mov	DWORD PTR _p$73042[ebp], eax
; Line 409
	mov	eax, DWORD PTR _q$73043[ebp]
	mov	cl, BYTE PTR _b$73047[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _q$73043[ebp]
	sub	edx, 1
	mov	DWORD PTR _q$73043[ebp], edx
; Line 410
	mov	eax, DWORD PTR _p$73042[ebp]
	cmp	eax, DWORD PTR _q$73043[ebp]
	jb	SHORT $LN81@writeSortK
$LN82@writeSortK:
; Line 413
	cmp	DWORD PTR _p$72973[ebp], 1
	setne	al
	add	al, 1
	movzx	ecx, al
	push	ecx
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 414
	mov	DWORD PTR _prevSecondary$[ebp], 0
; Line 415
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ ; icu_56::`anonymous namespace'::SortKeyLevel::length
	mov	DWORD PTR _secSegmentStart$[ebp], eax
; Line 416
	jmp	SHORT $LN101@writeSortK
$LN83@writeSortK:
; Line 417
	mov	eax, DWORD PTR _s$73015[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendReverseWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendReverseWeight16
; Line 418
	mov	eax, DWORD PTR _s$73015[ebp]
	mov	DWORD PTR _prevSecondary$[ebp], eax
$LN101@writeSortK:
; Line 423
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 8
	je	$LN77@writeSortK
; Line 425
	mov	eax, DWORD PTR _options$[ebp]
	push	eax
	call	?getStrength@CollationSettings@icu_56@@SAHH@Z ; icu_56::CollationSettings::getStrength
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN141@writeSortK
	xor	ecx, ecx
	cmp	DWORD PTR _p$72973[ebp], 0
	sete	cl
	mov	DWORD PTR tv338[ebp], ecx
	jmp	SHORT $LN142@writeSortK
$LN141@writeSortK:
	mov	edx, 65535				; 0000ffffH
	cmp	edx, DWORD PTR _lower32$73011[ebp]
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR tv338[ebp], eax
$LN142@writeSortK:
	cmp	DWORD PTR tv338[ebp], 0
	je	SHORT $LN76@writeSortK
; Line 429
	jmp	$LN77@writeSortK
$LN76@writeSortK:
; Line 430
	mov	eax, DWORD PTR _lower32$73011[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _c$73052[ebp], eax
; Line 431
	mov	eax, DWORD PTR _c$73052[ebp]
	and	eax, 192				; 000000c0H
	cmp	eax, 192				; 000000c0H
	jne	SHORT $LN143@writeSortK
	mov	ecx, DWORD PTR ?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48
	add	ecx, 202				; 000000caH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CG@KEGHOICE@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN143@writeSortK:
; Line 432
	mov	eax, DWORD PTR _c$73052[ebp]
	and	eax, 192				; 000000c0H
	jne	SHORT $LN74@writeSortK
	cmp	DWORD PTR _c$73052[ebp], 1
	jbe	SHORT $LN74@writeSortK
; Line 433
	mov	eax, DWORD PTR _commonCases$[ebp]
	add	eax, 1
	mov	DWORD PTR _commonCases$[ebp], eax
; Line 434
	jmp	$LN77@writeSortK
$LN74@writeSortK:
; Line 435
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 256				; 00000100H
	jne	$LN72@writeSortK
; Line 441
	cmp	DWORD PTR _commonCases$[ebp], 0
	je	$LN71@writeSortK
	cmp	DWORD PTR _c$73052[ebp], 1
	ja	SHORT $LN70@writeSortK
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isEmpty
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN71@writeSortK
$LN70@writeSortK:
; Line 442
	mov	eax, DWORD PTR _commonCases$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonCases$[ebp], eax
$LN69@writeSortK:
; Line 443
	cmp	DWORD PTR _commonCases$[ebp], 7
	jl	SHORT $LN68@writeSortK
; Line 444
	push	112					; 00000070H
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 445
	mov	eax, DWORD PTR _commonCases$[ebp]
	sub	eax, 7
	mov	DWORD PTR _commonCases$[ebp], eax
; Line 446
	jmp	SHORT $LN69@writeSortK
$LN68@writeSortK:
; Line 448
	cmp	DWORD PTR _c$73052[ebp], 1
	ja	SHORT $LN67@writeSortK
; Line 449
	mov	eax, DWORD PTR _commonCases$[ebp]
	add	eax, 1
	mov	DWORD PTR _b$73064[ebp], eax
; Line 450
	jmp	SHORT $LN66@writeSortK
$LN67@writeSortK:
; Line 451
	mov	eax, 13					; 0000000dH
	sub	eax, DWORD PTR _commonCases$[ebp]
	mov	DWORD PTR _b$73064[ebp], eax
$LN66@writeSortK:
; Line 453
	mov	eax, DWORD PTR _b$73064[ebp]
	shl	eax, 4
	push	eax
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 454
	mov	DWORD PTR _commonCases$[ebp], 0
$LN71@writeSortK:
; Line 456
	cmp	DWORD PTR _c$73052[ebp], 1
	jbe	SHORT $LN65@writeSortK
; Line 457
	mov	eax, DWORD PTR _c$73052[ebp]
	shr	eax, 6
	add	eax, 13					; 0000000dH
	shl	eax, 4
	mov	DWORD PTR _c$73052[ebp], eax
$LN65@writeSortK:
; Line 459
	jmp	SHORT $LN64@writeSortK
$LN72@writeSortK:
; Line 463
	cmp	DWORD PTR _commonCases$[ebp], 0
	je	SHORT $LN63@writeSortK
; Line 464
	mov	eax, DWORD PTR _commonCases$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonCases$[ebp], eax
$LN62@writeSortK:
; Line 465
	cmp	DWORD PTR _commonCases$[ebp], 13	; 0000000dH
	jl	SHORT $LN61@writeSortK
; Line 466
	push	48					; 00000030H
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 467
	mov	eax, DWORD PTR _commonCases$[ebp]
	sub	eax, 13					; 0000000dH
	mov	DWORD PTR _commonCases$[ebp], eax
; Line 468
	jmp	SHORT $LN62@writeSortK
$LN61@writeSortK:
; Line 469
	mov	eax, DWORD PTR _commonCases$[ebp]
	add	eax, 3
	shl	eax, 4
	push	eax
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 470
	mov	DWORD PTR _commonCases$[ebp], 0
$LN63@writeSortK:
; Line 472
	cmp	DWORD PTR _c$73052[ebp], 1
	jbe	SHORT $LN64@writeSortK
; Line 473
	mov	eax, DWORD PTR _c$73052[ebp]
	shr	eax, 6
	mov	ecx, 3
	sub	ecx, eax
	shl	ecx, 4
	mov	DWORD PTR _c$73052[ebp], ecx
$LN64@writeSortK:
; Line 478
	mov	eax, DWORD PTR _c$73052[ebp]
	push	eax
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
$LN77@writeSortK:
; Line 483
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 16					; 00000010H
	je	$LN59@writeSortK
; Line 484
	mov	eax, DWORD PTR _lower32$73011[ebp]
	and	eax, DWORD PTR _tertiaryMask$[ebp]
	mov	DWORD PTR _t$73075[ebp], eax
; Line 485
	mov	eax, DWORD PTR _lower32$73011[ebp]
	and	eax, 49152				; 0000c000H
	cmp	eax, 49152				; 0000c000H
	jne	SHORT $LN144@writeSortK
	mov	ecx, DWORD PTR ?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48
	add	ecx, 256				; 00000100H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DK@KLPHBKCE@?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AA3?$AA2?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AAx?$AAc?$AA0?$AA0?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN144@writeSortK:
; Line 486
	cmp	DWORD PTR _t$73075[ebp], 1280		; 00000500H
	jne	SHORT $LN58@writeSortK
; Line 487
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	add	eax, 1
	mov	DWORD PTR _commonTertiaries$[ebp], eax
	jmp	$LN59@writeSortK
$LN58@writeSortK:
; Line 488
	mov	eax, DWORD PTR _tertiaryMask$[ebp]
	and	eax, 32768				; 00008000H
	jne	$LN56@writeSortK
; Line 491
	cmp	DWORD PTR _commonTertiaries$[ebp], 0
	je	$LN55@writeSortK
; Line 492
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonTertiaries$[ebp], eax
$LN54@writeSortK:
; Line 493
	cmp	DWORD PTR _commonTertiaries$[ebp], 97	; 00000061H
	jl	SHORT $LN53@writeSortK
; Line 494
	push	101					; 00000065H
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 495
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 97					; 00000061H
	mov	DWORD PTR _commonTertiaries$[ebp], eax
; Line 496
	jmp	SHORT $LN54@writeSortK
$LN53@writeSortK:
; Line 498
	cmp	DWORD PTR _t$73075[ebp], 1280		; 00000500H
	jae	SHORT $LN52@writeSortK
; Line 499
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	add	eax, 5
	mov	DWORD PTR _b$73085[ebp], eax
; Line 500
	jmp	SHORT $LN51@writeSortK
$LN52@writeSortK:
; Line 501
	mov	eax, 197				; 000000c5H
	sub	eax, DWORD PTR _commonTertiaries$[ebp]
	mov	DWORD PTR _b$73085[ebp], eax
$LN51@writeSortK:
; Line 503
	mov	eax, DWORD PTR _b$73085[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 504
	mov	DWORD PTR _commonTertiaries$[ebp], 0
$LN55@writeSortK:
; Line 506
	cmp	DWORD PTR _t$73075[ebp], 1280		; 00000500H
	jbe	SHORT $LN50@writeSortK
	mov	eax, DWORD PTR _t$73075[ebp]
	add	eax, 49152				; 0000c000H
	mov	DWORD PTR _t$73075[ebp], eax
$LN50@writeSortK:
; Line 507
	mov	eax, DWORD PTR _t$73075[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
	jmp	$LN59@writeSortK
$LN56@writeSortK:
; Line 508
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 256				; 00000100H
	jne	$LN48@writeSortK
; Line 511
	cmp	DWORD PTR _commonTertiaries$[ebp], 0
	je	$LN47@writeSortK
; Line 512
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonTertiaries$[ebp], eax
$LN46@writeSortK:
; Line 513
	cmp	DWORD PTR _commonTertiaries$[ebp], 33	; 00000021H
	jl	SHORT $LN45@writeSortK
; Line 514
	push	37					; 00000025H
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 515
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 33					; 00000021H
	mov	DWORD PTR _commonTertiaries$[ebp], eax
; Line 516
	jmp	SHORT $LN46@writeSortK
$LN45@writeSortK:
; Line 518
	cmp	DWORD PTR _t$73075[ebp], 1280		; 00000500H
	jae	SHORT $LN44@writeSortK
; Line 519
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	add	eax, 5
	mov	DWORD PTR _b$73095[ebp], eax
; Line 520
	jmp	SHORT $LN43@writeSortK
$LN44@writeSortK:
; Line 521
	mov	eax, 69					; 00000045H
	sub	eax, DWORD PTR _commonTertiaries$[ebp]
	mov	DWORD PTR _b$73095[ebp], eax
$LN43@writeSortK:
; Line 523
	mov	eax, DWORD PTR _b$73095[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 524
	mov	DWORD PTR _commonTertiaries$[ebp], 0
$LN47@writeSortK:
; Line 526
	cmp	DWORD PTR _t$73075[ebp], 1280		; 00000500H
	jbe	SHORT $LN42@writeSortK
	mov	eax, DWORD PTR _t$73075[ebp]
	add	eax, 16384				; 00004000H
	mov	DWORD PTR _t$73075[ebp], eax
$LN42@writeSortK:
; Line 527
	mov	eax, DWORD PTR _t$73075[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
; Line 528
	jmp	$LN59@writeSortK
$LN48@writeSortK:
; Line 542
	cmp	DWORD PTR _t$73075[ebp], 256		; 00000100H
	ja	SHORT $LN40@writeSortK
	jmp	$LN39@writeSortK
$LN40@writeSortK:
; Line 544
	cmp	DWORD PTR _lower32$73011[ebp], 65535	; 0000ffffH
	jbe	SHORT $LN38@writeSortK
; Line 546
	mov	eax, DWORD PTR _t$73075[ebp]
	xor	eax, 49152				; 0000c000H
	mov	DWORD PTR _t$73075[ebp], eax
; Line 547
	cmp	DWORD PTR _t$73075[ebp], 50432		; 0000c500H
	jae	SHORT $LN37@writeSortK
; Line 548
	mov	eax, DWORD PTR _t$73075[ebp]
	sub	eax, 16384				; 00004000H
	mov	DWORD PTR _t$73075[ebp], eax
$LN37@writeSortK:
; Line 550
	jmp	SHORT $LN39@writeSortK
$LN38@writeSortK:
; Line 552
	cmp	DWORD PTR _t$73075[ebp], 34304		; 00008600H
	jb	SHORT $LN145@writeSortK
	cmp	DWORD PTR _t$73075[ebp], 49151		; 0000bfffH
	jbe	SHORT $LN146@writeSortK
$LN145@writeSortK:
	mov	eax, DWORD PTR ?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48
	add	eax, 323				; 00000143H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DG@FLKDDFPI@?$AA0?$AAx?$AA8?$AA6?$AA0?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAb?$AAf?$AAf?$AAf?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN146@writeSortK:
; Line 553
	mov	eax, DWORD PTR _t$73075[ebp]
	add	eax, 16384				; 00004000H
	mov	DWORD PTR _t$73075[ebp], eax
$LN39@writeSortK:
; Line 555
	cmp	DWORD PTR _commonTertiaries$[ebp], 0
	je	$LN35@writeSortK
; Line 556
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonTertiaries$[ebp], eax
$LN34@writeSortK:
; Line 557
	cmp	DWORD PTR _commonTertiaries$[ebp], 33	; 00000021H
	jl	SHORT $LN33@writeSortK
; Line 558
	push	165					; 000000a5H
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 559
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	sub	eax, 33					; 00000021H
	mov	DWORD PTR _commonTertiaries$[ebp], eax
; Line 560
	jmp	SHORT $LN34@writeSortK
$LN33@writeSortK:
; Line 562
	cmp	DWORD PTR _t$73075[ebp], 34048		; 00008500H
	jae	SHORT $LN32@writeSortK
; Line 563
	mov	eax, DWORD PTR _commonTertiaries$[ebp]
	add	eax, 133				; 00000085H
	mov	DWORD PTR _b$73111[ebp], eax
; Line 564
	jmp	SHORT $LN31@writeSortK
$LN32@writeSortK:
; Line 565
	mov	eax, 197				; 000000c5H
	sub	eax, DWORD PTR _commonTertiaries$[ebp]
	mov	DWORD PTR _b$73111[ebp], eax
$LN31@writeSortK:
; Line 567
	mov	eax, DWORD PTR _b$73111[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 568
	mov	DWORD PTR _commonTertiaries$[ebp], 0
$LN35@writeSortK:
; Line 570
	mov	eax, DWORD PTR _t$73075[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendWeight16@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendWeight16
$LN59@writeSortK:
; Line 574
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 32					; 00000020H
	je	$LN30@writeSortK
; Line 575
	mov	eax, DWORD PTR _lower32$73011[ebp]
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _q$73115[ebp], eax
; Line 576
	mov	eax, DWORD PTR _q$73115[ebp]
	and	eax, 192				; 000000c0H
	jne	SHORT $LN29@writeSortK
	cmp	DWORD PTR _q$73115[ebp], 256		; 00000100H
	jbe	SHORT $LN29@writeSortK
; Line 577
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	add	eax, 1
	mov	DWORD PTR _commonQuaternaries$[ebp], eax
; Line 578
	jmp	$LN30@writeSortK
$LN29@writeSortK:
; Line 580
	cmp	DWORD PTR _q$73115[ebp], 256		; 00000100H
	jne	SHORT $LN27@writeSortK
	mov	eax, DWORD PTR _options$[ebp]
	and	eax, 12					; 0000000cH
	jne	SHORT $LN27@writeSortK
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isEmpty
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN27@writeSortK
; Line 588
	push	1
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 589
	jmp	$LN30@writeSortK
$LN27@writeSortK:
; Line 590
	cmp	DWORD PTR _q$73115[ebp], 256		; 00000100H
	jne	SHORT $LN25@writeSortK
; Line 591
	mov	DWORD PTR _q$73115[ebp], 1
; Line 592
	jmp	SHORT $LN24@writeSortK
$LN25@writeSortK:
; Line 593
	mov	eax, DWORD PTR _q$73115[ebp]
	shr	eax, 6
	and	eax, 3
	add	eax, 252				; 000000fcH
	mov	DWORD PTR _q$73115[ebp], eax
$LN24@writeSortK:
; Line 595
	cmp	DWORD PTR _commonQuaternaries$[ebp], 0
	je	$LN23@writeSortK
; Line 596
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	sub	eax, 1
	mov	DWORD PTR _commonQuaternaries$[ebp], eax
$LN22@writeSortK:
; Line 597
	cmp	DWORD PTR _commonQuaternaries$[ebp], 113 ; 00000071H
	jl	SHORT $LN21@writeSortK
; Line 598
	push	140					; 0000008cH
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 599
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	sub	eax, 113				; 00000071H
	mov	DWORD PTR _commonQuaternaries$[ebp], eax
; Line 600
	jmp	SHORT $LN22@writeSortK
$LN21@writeSortK:
; Line 602
	cmp	DWORD PTR _q$73115[ebp], 28		; 0000001cH
	jae	SHORT $LN20@writeSortK
; Line 603
	mov	eax, DWORD PTR _commonQuaternaries$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR _b$73126[ebp], eax
; Line 604
	jmp	SHORT $LN19@writeSortK
$LN20@writeSortK:
; Line 605
	mov	eax, 252				; 000000fcH
	sub	eax, DWORD PTR _commonQuaternaries$[ebp]
	mov	DWORD PTR _b$73126[ebp], eax
$LN19@writeSortK:
; Line 607
	mov	eax, DWORD PTR _b$73126[ebp]
	push	eax
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
; Line 608
	mov	DWORD PTR _commonQuaternaries$[ebp], 0
$LN23@writeSortK:
; Line 610
	mov	eax, DWORD PTR _q$73115[ebp]
	push	eax
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendByte@SortKeyLevel@?A0x25640a5d@icu_56@@QAEXI@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendByte
$LN30@writeSortK:
; Line 614
	mov	eax, DWORD PTR _lower32$73011[ebp]
	shr	eax, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN18@writeSortK
	jmp	SHORT $LN130@writeSortK
$LN18@writeSortK:
; Line 615
	jmp	$LN131@writeSortK
$LN130@writeSortK:
; Line 617
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@writeSortK
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN17@writeSortK:
; Line 620
	mov	BYTE PTR _ok$[ebp], 1
; Line 621
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 4
	je	$LN16@writeSortK
; Line 622
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN15@writeSortK
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN15@writeSortK:
; Line 623
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isOk
	movsx	eax, al
	movsx	ecx, BYTE PTR _ok$[ebp]
	and	ecx, eax
	mov	BYTE PTR _ok$[ebp], cl
; Line 624
	push	1
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 625
	mov	eax, DWORD PTR _sink$[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo
$LN16@writeSortK:
; Line 628
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 8
	je	$LN14@writeSortK
; Line 629
	mov	esi, esp
	push	3
	mov	eax, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN13@writeSortK
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN13@writeSortK:
; Line 630
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isOk
	movsx	eax, al
	movsx	ecx, BYTE PTR _ok$[ebp]
	and	ecx, eax
	mov	BYTE PTR _ok$[ebp], cl
; Line 631
	push	1
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 633
	lea	ecx, DWORD PTR _cases$[ebp]
	call	?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ ; icu_56::`anonymous namespace'::SortKeyLevel::length
	sub	eax, 1
	mov	DWORD PTR _length$73136[ebp], eax
; Line 634
	mov	BYTE PTR _b$73137[ebp], 0
; Line 635
	mov	DWORD PTR _i$73138[ebp], 0
	jmp	SHORT $LN12@writeSortK
$LN11@writeSortK:
	mov	eax, DWORD PTR _i$73138[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73138[ebp], eax
$LN12@writeSortK:
	mov	eax, DWORD PTR _i$73138[ebp]
	cmp	eax, DWORD PTR _length$73136[ebp]
	jge	$LN10@writeSortK
; Line 636
	mov	eax, DWORD PTR _i$73138[ebp]
	push	eax
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z ; icu_56::`anonymous namespace'::SortKeyLevel::operator[]
	mov	BYTE PTR _c$73142[ebp], al
; Line 637
	movzx	eax, BYTE PTR _c$73142[ebp]
	and	eax, 15					; 0000000fH
	jne	SHORT $LN147@writeSortK
	movzx	ecx, BYTE PTR _c$73142[ebp]
	test	ecx, ecx
	jne	SHORT $LN148@writeSortK
$LN147@writeSortK:
	mov	edx, DWORD PTR ?__LINE__Var@?1??writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@3@PBCABUCollationSettings@3@AAVSortKeyByteSink@3@W4Level@Collation@3@AAVLevelCallback@23@CAAW4UErrorCode@@@Z@4JA@60516f48
	add	edx, 408				; 00000198H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DC@OJPACKBA@?$AA?$CI?$AAc?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AAf?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN148@writeSortK:
; Line 638
	movzx	eax, BYTE PTR _b$73137[ebp]
	test	eax, eax
	jne	SHORT $LN9@writeSortK
; Line 639
	mov	al, BYTE PTR _c$73142[ebp]
	mov	BYTE PTR _b$73137[ebp], al
; Line 640
	jmp	SHORT $LN8@writeSortK
$LN9@writeSortK:
; Line 641
	movzx	eax, BYTE PTR _b$73137[ebp]
	movzx	ecx, BYTE PTR _c$73142[ebp]
	sar	ecx, 4
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 642
	mov	BYTE PTR _b$73137[ebp], 0
$LN8@writeSortK:
; Line 644
	jmp	$LN11@writeSortK
$LN10@writeSortK:
; Line 645
	movzx	eax, BYTE PTR _b$73137[ebp]
	test	eax, eax
	je	SHORT $LN14@writeSortK
; Line 646
	movzx	eax, BYTE PTR _b$73137[ebp]
	push	eax
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
$LN14@writeSortK:
; Line 650
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 16					; 00000010H
	je	$LN6@writeSortK
; Line 651
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@writeSortK
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN5@writeSortK:
; Line 652
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isOk
	movsx	eax, al
	movsx	ecx, BYTE PTR _ok$[ebp]
	and	ecx, eax
	mov	BYTE PTR _ok$[ebp], cl
; Line 653
	push	1
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 654
	mov	eax, DWORD PTR _sink$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo
$LN6@writeSortK:
; Line 657
	mov	eax, DWORD PTR _levels$[ebp]
	and	eax, 32					; 00000020H
	je	$LN4@writeSortK
; Line 658
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@writeSortK
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	jmp	$LN137@writeSortK
$LN3@writeSortK:
; Line 659
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ; icu_56::`anonymous namespace'::SortKeyLevel::isOk
	movsx	eax, al
	movsx	ecx, BYTE PTR _ok$[ebp]
	and	ecx, eax
	mov	BYTE PTR _ok$[ebp], cl
; Line 660
	push	1
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?Append@SortKeyByteSink@icu_56@@QAEXI@Z	; icu_56::SortKeyByteSink::Append
; Line 661
	mov	eax, DWORD PTR _sink$[ebp]
	push	eax
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo
$LN4@writeSortK:
; Line 664
	movsx	eax, BYTE PTR _ok$[ebp]
	test	eax, eax
	je	SHORT $LN1@writeSortK
	mov	ecx, DWORD PTR _sink$[ebp]
	call	?IsOk@SortKeyByteSink@icu_56@@QBECXZ	; icu_56::SortKeyByteSink::IsOk
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@writeSortK
$LN1@writeSortK:
; Line 665
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@writeSortK:
; Line 667
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _secondaries$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cases$[ebp]
	call	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
$LN137@writeSortK:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN161@writeSortK
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 968				; 000003c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN161@writeSortK:
	DD	5
	DD	$LN160@writeSortK
$LN160@writeSortK:
	DD	-128					; ffffff80H
	DD	60					; 0000003cH
	DD	$LN154@writeSortK
	DD	-196					; ffffff3cH
	DD	60					; 0000003cH
	DD	$LN155@writeSortK
	DD	-264					; fffffef8H
	DD	60					; 0000003cH
	DD	$LN156@writeSortK
	DD	-332					; fffffeb4H
	DD	60					; 0000003cH
	DD	$LN157@writeSortK
	DD	-492					; fffffe14H
	DD	3
	DD	$LN158@writeSortK
$LN158@writeSortK:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN157@writeSortK:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN156@writeSortK:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN155@writeSortK:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN154@writeSortK:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _cases$[ebp]
	jmp	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _secondaries$[ebp]
	jmp	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _tertiaries$[ebp]
	jmp	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
__unwindfunclet$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _quaternaries$[ebp]
	jmp	??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
__ehhandler$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-972]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeSortKeyUpToQuaternary@CollationKeys@icu_56@@SAXAAVCollationIterator@2@PBCABUCollationSettings@2@AAVSortKeyByteSink@2@W4Level@Collation@2@AAVLevelCallback@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::CollationKeys::writeSortKeyUpToQuaternary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Append@SortKeyByteSink@icu_56@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?Append@SortKeyByteSink@icu_56@@QAEXI@Z PROC		; icu_56::SortKeyByteSink::Append, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationkeys.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jle	SHORT $LN4@Append@2
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 43
	jmp	SHORT $LN5@Append@2
$LN4@Append@2:
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+8]
	jl	SHORT $LN1@Append@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@Append@2
$LN1@Append@2:
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx+eax], dl
$LN2@Append@2:
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN5@Append@2:
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Append@SortKeyByteSink@icu_56@@QAEXI@Z ENDP		; icu_56::SortKeyByteSink::Append
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Overflowed@SortKeyByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Overflowed@SortKeyByteSink@icu_56@@QBECXZ PROC		; icu_56::SortKeyByteSink::Overflowed, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+8]
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Overflowed@SortKeyByteSink@icu_56@@QBECXZ ENDP		; icu_56::SortKeyByteSink::Overflowed
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsOk@SortKeyByteSink@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsOk@SortKeyByteSink@icu_56@@QBECXZ PROC		; icu_56::SortKeyByteSink::IsOk, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsOk@SortKeyByteSink@icu_56@@QBECXZ ENDP		; icu_56::SortKeyByteSink::IsOk
_TEXT	ENDS
PUBLIC	??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<unsigned char,40>::MaybeStackArray<unsigned char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationkeys.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<unsigned char,40>::MaybeStackArray<unsigned char,40>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], 1
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::SortKeyLevel
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<unsigned char,40>::~MaybeStackArray<unsigned char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel, COMDAT
; _this$ = ecx
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<unsigned char,40>::~MaybeStackArray<unsigned char,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SortKeyLevel@?A0x25640a5d@icu_56@@QAE@XZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::~SortKeyLevel
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::isOk, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+56]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isOk@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::isOk
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::isEmpty, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isEmpty@SortKeyLevel@?A0x25640a5d@icu_56@@QBECXZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::isEmpty
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::length, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@SortKeyLevel@?A0x25640a5d@icu_56@@QBEHXZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::length
_TEXT	ENDS
PUBLIC	??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z	; icu_56::MaybeStackArray<unsigned char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z PROC	; icu_56::`anonymous namespace'::SortKeyLevel::operator[], COMDAT
; _this$ = ecx
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	mov	al, BYTE PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??ASortKeyLevel@?A0x25640a5d@icu_56@@QBEEH@Z ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::operator[]
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ ; icu_56::MaybeStackArray<unsigned char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ PROC	; icu_56::`anonymous namespace'::SortKeyLevel::data, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ ; icu_56::MaybeStackArray<unsigned char,40>::getAlias
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?data@SortKeyLevel@?A0x25640a5d@icu_56@@QAEPAEXZ ENDP	; icu_56::`anonymous namespace'::SortKeyLevel::data
_TEXT	ENDS
PUBLIC	??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@ DB 'l'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, '[', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ']', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sink$ = 8						; size = 4
?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z PROC ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jle	SHORT $LN3@appendTo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z ; icu_56::MaybeStackArray<unsigned char,40>::operator[]
	movzx	eax, BYTE PTR [eax]
	cmp	eax, 1
	je	SHORT $LN4@appendTo
$LN3@appendTo:
	mov	esi, esp
	push	110					; 0000006eH
	push	OFFSET ??_C@_1GE@LPOANIMC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EA@OCDHCHOI@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$FL?$AAl?$AAe?$AAn?$AA?5?$AA?9?$AA?5?$AA1?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@appendTo:
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ ; icu_56::MaybeStackArray<unsigned char,40>::getAlias
	push	eax
	mov	edx, DWORD PTR _sink$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sink$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?appendTo@SortKeyLevel@?A0x25640a5d@icu_56@@QBEXAAVByteSink@3@@Z ENDP ; icu_56::`anonymous namespace'::SortKeyLevel::appendTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ PROC	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@_J$0CI@@icu_56@@QAE@XZ ENDP	; icu_56::MaybeStackArray<__int64,40>::MaybeStackArray<__int64,40>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ PROC ; icu_56::MaybeStackArray<__int64,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@_J$0CI@@icu_56@@QBEPA_JXZ ENDP ; icu_56::MaybeStackArray<__int64,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z PROC	; icu_56::MaybeStackArray<__int64,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QBEAB_JH@Z ENDP	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z PROC	; icu_56::MaybeStackArray<__int64,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@_J$0CI@@icu_56@@QAEAA_JH@Z ENDP	; icu_56::MaybeStackArray<__int64,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<unsigned char,40>::MaybeStackArray<unsigned char,40>, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<unsigned char,40>::MaybeStackArray<unsigned char,40>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<unsigned char,40>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<unsigned char,40>::~MaybeStackArray<unsigned char,40>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<unsigned char,40>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@E$0CI@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<unsigned char,40>::~MaybeStackArray<unsigned char,40>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackArray@E$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackArray<unsigned char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ PROC ; icu_56::MaybeStackArray<unsigned char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@E$0CI@@icu_56@@QBEPAEXZ ENDP ; icu_56::MaybeStackArray<unsigned char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z PROC	; icu_56::MaybeStackArray<unsigned char,40>::operator[], COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@E$0CI@@icu_56@@QBEABEH@Z ENDP	; icu_56::MaybeStackArray<unsigned char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z PROC	; icu_56::MaybeStackArray<unsigned char,40>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@E$0CI@@icu_56@@QAEAAEH@Z ENDP	; icu_56::MaybeStackArray<unsigned char,40>::operator[]
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<unsigned char,40>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<unsigned char,40>::releaseArray
_TEXT	ENDS
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z
_TEXT	SEGMENT
_p$77286 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z PROC ; icu_56::MaybeStackArray<unsigned char,40>::resize, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 416
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	$LN6@resize
; Line 420
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$77286[ebp], eax
; Line 421
	cmp	DWORD PTR _p$77286[ebp], 0
	je	SHORT $LN5@resize
; Line 422
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN4@resize
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 426
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@resize
; Line 427
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@resize:
; Line 429
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$77286[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@resize:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@E$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<unsigned char,40>::releaseArray
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$77286[ebp]
	mov	DWORD PTR [eax], ecx
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN5@resize:
; Line 436
	mov	eax, DWORD PTR _p$77286[ebp]
	jmp	SHORT $LN7@resize
; Line 437
	jmp	SHORT $LN7@resize
$LN6@resize:
; Line 438
	xor	eax, eax
$LN7@resize:
; Line 440
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackArray@E$0CI@@icu_56@@QAEPAEHH@Z ENDP ; icu_56::MaybeStackArray<unsigned char,40>::resize
_TEXT	ENDS
END

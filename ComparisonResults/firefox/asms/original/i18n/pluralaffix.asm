; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\pluralaffix.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?countChar32@DigitAffix@icu_56@@QBEHXZ		; icu_56::DigitAffix::countChar32
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@DigitAffix@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@DigitAffix@icu_56@@QBEHXZ PROC		; icu_56::DigitAffix::countChar32, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitaffix.h
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@DigitAffix@icu_56@@QBEHXZ ENDP		; icu_56::DigitAffix::countChar32
_TEXT	ENDS
PUBLIC	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::DigitAffix::toString, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::DigitAffix::toString
_TEXT	ENDS
PUBLIC	?equals@DigitAffix@icu_56@@QBECABV12@@Z		; icu_56::DigitAffix::equals
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitAffix::equals, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv76[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitAffix::equals
_TEXT	ENDS
PUBLIC	??1DigitAffix@icu_56@@QAE@XZ			; icu_56::DigitAffix::~DigitAffix
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffix@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0
__ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DigitAffix@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffix@icu_56@@QAE@XZ PROC			; icu_56::DigitAffix::~DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DigitAffix@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffix@icu_56@@QAE@XZ ENDP			; icu_56::DigitAffix::~DigitAffix
PUBLIC	??0DigitAffix@icu_56@@QAE@ABV01@@Z		; icu_56::DigitAffix::DigitAffix
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffix@icu_56@@QAE@ABV01@@Z PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::DigitAffix::operator=
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitAffix::operator=
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\pluralaffix.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z	; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherVariant$ = 8					; size = 4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z PROC	; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP	; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
PUBLIC	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralAffix::getOtherVariant, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralAffix::getOtherVariant
_TEXT	ENDS
PUBLIC	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
PUBLIC	?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z	; icu_56::PluralAffix::eq
PUBLIC	?equals@PluralAffix@icu_56@@QBECABV12@@Z	; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@PluralAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@PluralAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::PluralAffix::equals, COMDAT
; _this$ = ecx
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	push	OFFSET ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ; icu_56::PluralAffix::eq
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@PluralAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z PROC	; icu_56::PluralAffix::eq, COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	call	?equals@DigitAffix@icu_56@@QBECABV12@@Z	; icu_56::DigitAffix::equals
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ENDP	; icu_56::PluralAffix::eq
_TEXT	ENDS
PUBLIC	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	??1PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::~PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::~PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::~PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABV01@@Z		; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAffix@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
PUBLIC	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PluralAffix::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PluralAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PluralAffix::operator=
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
PUBLIC	?setVariant@PluralAffix@icu_56@@QAECPBDABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PluralAffix::setVariant
EXTRN	?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z:PROC ; icu_56::DigitAffix::append
EXTRN	?remove@DigitAffix@icu_56@@QAEXXZ:PROC		; icu_56::DigitAffix::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setVariant@PluralAffix@icu_56@@QAECPBDABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_current$ = -20						; size = 4
_this$ = -8						; size = 4
_variant$ = 8						; size = 4
_value$ = 12						; size = 4
_status$ = 16						; size = 4
?setVariant@PluralAffix@icu_56@@QAECPBDABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralAffix::setVariant, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\pluralaffix.cpp
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
	mov	DWORD PTR _current$[ebp], eax
; Line 22
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@setVariant
; Line 23
	xor	al, al
	jmp	SHORT $LN2@setVariant
$LN1@setVariant:
; Line 25
	mov	ecx, DWORD PTR _current$[ebp]
	call	?remove@DigitAffix@icu_56@@QAEXXZ	; icu_56::DigitAffix::remove
; Line 26
	push	11					; 0000000bH
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	call	?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::DigitAffix::append
; Line 27
	mov	al, 1
$LN2@setVariant:
; Line 28
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setVariant@PluralAffix@icu_56@@QAECPBDABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralAffix::setVariant
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::clear
PUBLIC	?remove@PluralAffix@icu_56@@QAEXXZ		; icu_56::PluralAffix::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@PluralAffix@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?remove@PluralAffix@icu_56@@QAEXXZ PROC			; icu_56::PluralAffix::remove, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\pluralaffix.cpp
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::clear
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?remove@PluralAffix@icu_56@@QAEXXZ ENDP			; icu_56::PluralAffix::remove
_TEXT	ENDS
PUBLIC	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
PUBLIC	?appendUChar@PluralAffix@icu_56@@QAEX_WH@Z	; icu_56::PluralAffix::appendUChar
EXTRN	?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z:PROC	; icu_56::DigitAffix::appendUChar
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendUChar@PluralAffix@icu_56@@QAEX_WH@Z
_TEXT	SEGMENT
_current$35372 = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 2
_fieldId$ = 12						; size = 4
?appendUChar@PluralAffix@icu_56@@QAEX_WH@Z PROC		; icu_56::PluralAffix::appendUChar, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	DWORD PTR _index$[ebp], -1
; Line 39
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35372[ebp], eax
	jmp	SHORT $LN3@appendUCha
$LN2@appendUCha:
; Line 40
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35372[ebp], eax
$LN3@appendUCha:
	cmp	DWORD PTR _current$35372[ebp], 0
	je	SHORT $LN4@appendUCha
; Line 41
	mov	eax, DWORD PTR _fieldId$[ebp]
	push	eax
	movzx	ecx, WORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _current$35372[ebp]
	call	?appendUChar@DigitAffix@icu_56@@QAEX_WH@Z ; icu_56::DigitAffix::appendUChar
; Line 42
	jmp	SHORT $LN2@appendUCha
$LN4@appendUCha:
; Line 43
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@appendUCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN8@appendUCha:
	DD	1
	DD	$LN7@appendUCha
$LN7@appendUCha:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@appendUCha
$LN6@appendUCha:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?appendUChar@PluralAffix@icu_56@@QAEX_WH@Z ENDP		; icu_56::PluralAffix::appendUChar
_TEXT	ENDS
PUBLIC	?append@PluralAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::PluralAffix::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@PluralAffix@icu_56@@QAEXABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_current$35382 = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 4
_fieldId$ = 12						; size = 4
?append@PluralAffix@icu_56@@QAEXABVUnicodeString@2@H@Z PROC ; icu_56::PluralAffix::append, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	DWORD PTR _index$[ebp], -1
; Line 49
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35382[ebp], eax
	jmp	SHORT $LN3@append
$LN2@append:
; Line 50
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35382[ebp], eax
$LN3@append:
	cmp	DWORD PTR _current$35382[ebp], 0
	je	SHORT $LN4@append
; Line 51
	mov	eax, DWORD PTR _fieldId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _current$35382[ebp]
	call	?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::DigitAffix::append
; Line 52
	jmp	SHORT $LN2@append
$LN4@append:
; Line 53
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@append
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@append:
	DD	1
	DD	$LN7@append
$LN7@append:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@append
$LN6@append:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?append@PluralAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ENDP ; icu_56::PluralAffix::append
_TEXT	ENDS
PUBLIC	?append@PluralAffix@icu_56@@QAEXPB_WHH@Z	; icu_56::PluralAffix::append
EXTRN	?append@DigitAffix@icu_56@@QAEXPB_WHH@Z:PROC	; icu_56::DigitAffix::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@PluralAffix@icu_56@@QAEXPB_WHH@Z
_TEXT	SEGMENT
_current$35393 = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 4
_charCount$ = 12					; size = 4
_fieldId$ = 16						; size = 4
?append@PluralAffix@icu_56@@QAEXPB_WHH@Z PROC		; icu_56::PluralAffix::append, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	DWORD PTR _index$[ebp], -1
; Line 59
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35393[ebp], eax
	jmp	SHORT $LN3@append@2
$LN2@append@2:
; Line 60
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35393[ebp], eax
$LN3@append@2:
	cmp	DWORD PTR _current$35393[ebp], 0
	je	SHORT $LN4@append@2
; Line 61
	mov	eax, DWORD PTR _fieldId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _charCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	ecx, DWORD PTR _current$35393[ebp]
	call	?append@DigitAffix@icu_56@@QAEXPB_WHH@Z	; icu_56::DigitAffix::append
; Line 62
	jmp	SHORT $LN2@append@2
$LN4@append@2:
; Line 63
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@append@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN8@append@2:
	DD	1
	DD	$LN7@append@2
$LN7@append@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@append@2
$LN6@append@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?append@PluralAffix@icu_56@@QAEXPB_WHH@Z ENDP		; icu_56::PluralAffix::append
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
PUBLIC	?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
PUBLIC	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
PUBLIC	?append@PluralAffix@icu_56@@QAECABV12@HAAW4UErrorCode@@@Z ; icu_56::PluralAffix::append
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@PluralAffix@icu_56@@QAECABV12@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_current$35408 = -32					; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
_fieldId$ = 12						; size = 4
_status$ = 16						; size = 4
?append@PluralAffix@icu_56@@QAECABV12@HAAW4UErrorCode@@@Z PROC ; icu_56::PluralAffix::append, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@append@3
; Line 69
	xor	al, al
	jmp	$LN7@append@3
$LN6@append@3:
; Line 71
	mov	DWORD PTR _index$[ebp], -1
$LN5@append@3:
; Line 72
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
	test	eax, eax
	je	SHORT $LN4@append@3
; Line 73
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Line 74
	jmp	SHORT $LN5@append@3
$LN4@append@3:
; Line 75
	mov	DWORD PTR _index$[ebp], -1
; Line 76
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35408[ebp], eax
	jmp	SHORT $LN3@append@3
$LN2@append@3:
; Line 77
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
	mov	DWORD PTR _current$35408[ebp], eax
$LN3@append@3:
	cmp	DWORD PTR _current$35408[ebp], 0
	je	SHORT $LN1@append@3
; Line 78
	mov	eax, DWORD PTR _fieldId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	ecx, DWORD PTR _current$35408[ebp]
	call	?append@DigitAffix@icu_56@@QAEXABVUnicodeString@2@H@Z ; icu_56::DigitAffix::append
; Line 79
	jmp	SHORT $LN2@append@3
$LN1@append@3:
; Line 80
	mov	al, 1
$LN7@append@3:
; Line 81
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@append@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN11@append@3:
	DD	1
	DD	$LN10@append@3
$LN10@append@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@append@3
$LN9@append@3:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?append@PluralAffix@icu_56@@QAECABV12@HAAW4UErrorCode@@@Z ENDP ; icu_56::PluralAffix::append
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
PUBLIC	?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@PBD@Z ; icu_56::PluralAffix::getByCategory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@PBD@Z PROC ; icu_56::PluralAffix::getByCategory, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@PBD@Z ENDP ; icu_56::PluralAffix::getByCategory
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
PUBLIC	?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ; icu_56::PluralAffix::getByCategory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z PROC ; icu_56::PluralAffix::getByCategory, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getByCategory@PluralAffix@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ENDP ; icu_56::PluralAffix::getByCategory
_TEXT	ENDS
PUBLIC	?hasMultipleVariants@PluralAffix@icu_56@@QBECXZ	; icu_56::PluralAffix::hasMultipleVariants
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasMultipleVariants@PluralAffix@icu_56@@QBECXZ
_TEXT	SEGMENT
_index$ = -20						; size = 4
_this$ = -8						; size = 4
?hasMultipleVariants@PluralAffix@icu_56@@QBECXZ PROC	; icu_56::PluralAffix::hasMultipleVariants, COMDAT
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	DWORD PTR _index$[ebp], 0
; Line 97
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
	test	eax, eax
	setne	al
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@hasMultipl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@hasMultipl:
	DD	1
	DD	$LN4@hasMultipl
$LN4@hasMultipl:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@hasMultipl
$LN3@hasMultipl:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?hasMultipleVariants@PluralAffix@icu_56@@QBECXZ ENDP	; icu_56::PluralAffix::hasMultipleVariants
_TEXT	ENDS
PUBLIC	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
EXTRN	??0DigitAffix@icu_56@@QAE@XZ:PROC		; icu_56::DigitAffix::DigitAffix
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\pluralmap.h
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_otherVariant$ = 8					; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -260						; size = 4
tv89 = -256						; size = 4
$T42257 = -248						; size = 4
$T42258 = -236						; size = 4
_i$37118 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 88
	mov	DWORD PTR _i$37118[ebp], 1
	jmp	SHORT $LN3@PluralMap
$LN2@PluralMap:
	mov	eax, DWORD PTR _i$37118[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37118[ebp], eax
$LN3@PluralMap:
	cmp	DWORD PTR _i$37118[ebp], 6
	jge	$LN4@PluralMap
; Line 90
	mov	eax, DWORD PTR _i$37118[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN8@PluralMap
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T42258[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T42258[ebp], 0
	je	SHORT $LN6@PluralMap
	mov	edx, DWORD PTR _i$37118[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+128]
	push	ecx
	mov	ecx, DWORD PTR $T42258[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN7@PluralMap
$LN6@PluralMap:
	mov	DWORD PTR tv89[ebp], 0
$LN7@PluralMap:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T42257[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T42257[ebp]
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@PluralMap
$LN8@PluralMap:
	mov	DWORD PTR tv90[ebp], 0
$LN9@PluralMap:
	mov	ecx, DWORD PTR _i$37118[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
; Line 91
	jmp	$LN2@PluralMap
$LN4@PluralMap:
; Line 92
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T42258[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??_GDigitAffix@icu_56@@QAEPAXI@Z		; icu_56::DigitAffix::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv148 = -280						; size = 4
tv94 = -280						; size = 4
$T42273 = -272						; size = 4
$T42274 = -260						; size = 4
$T42277 = -248						; size = 4
$T42278 = -236						; size = 4
_i$37130 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::operator=, COMDAT
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN10@operator
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN11@operator
$LN10@operator:
; Line 98
	mov	DWORD PTR _i$37130[ebp], 0
	jmp	SHORT $LN9@operator
$LN8@operator:
	mov	eax, DWORD PTR _i$37130[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37130[ebp], eax
$LN9@operator:
	cmp	DWORD PTR _i$37130[ebp], 6
	jge	$LN7@operator
; Line 99
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator
; Line 100
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	jmp	$LN5@operator
$LN6@operator:
; Line 101
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN4@operator
; Line 102
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T42274[ebp], edx
	mov	eax, DWORD PTR $T42274[ebp]
	mov	DWORD PTR $T42273[ebp], eax
	cmp	DWORD PTR $T42273[ebp], 0
	je	SHORT $LN13@operator
	push	1
	mov	ecx, DWORD PTR $T42273[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN14@operator
$LN13@operator:
	mov	DWORD PTR tv94[ebp], 0
$LN14@operator:
; Line 103
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
	jmp	$LN5@operator
$LN4@operator:
; Line 104
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN5@operator
; Line 105
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T42278[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T42278[ebp], 0
	je	SHORT $LN15@operator
	mov	eax, DWORD PTR _i$37130[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	ecx, DWORD PTR $T42278[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	DWORD PTR tv148[ebp], 0
$LN16@operator:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T42277[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _i$37130[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T42277[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
$LN5@operator:
; Line 109
	jmp	$LN8@operator
$LN7@operator:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
$LN11@operator:
; Line 111
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T42278[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv74 = -256						; size = 4
$T42290 = -248						; size = 4
$T42291 = -236						; size = 4
_i$37149 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 114
	mov	DWORD PTR _i$37149[ebp], 1
	jmp	SHORT $LN3@PluralMap@2
$LN2@PluralMap@2:
	mov	eax, DWORD PTR _i$37149[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37149[ebp], eax
$LN3@PluralMap@2:
	cmp	DWORD PTR _i$37149[ebp], 6
	jge	SHORT $LN4@PluralMap@2
; Line 115
	mov	eax, DWORD PTR _i$37149[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T42291[ebp], edx
	mov	eax, DWORD PTR $T42291[ebp]
	mov	DWORD PTR $T42290[ebp], eax
	cmp	DWORD PTR $T42290[ebp], 0
	je	SHORT $LN6@PluralMap@2
	push	1
	mov	ecx, DWORD PTR $T42290[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN7@PluralMap@2
$LN6@PluralMap@2:
	mov	DWORD PTR tv74[ebp], 0
$LN7@PluralMap@2:
; Line 116
	jmp	SHORT $LN2@PluralMap@2
$LN4@PluralMap@2:
; Line 117
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0
__ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
_TEXT	SEGMENT
tv86 = -400						; size = 4
tv87 = -396						; size = 4
tv81 = -396						; size = 4
$T37158 = -388						; size = 128
$T42304 = -252						; size = 4
$T42305 = -240						; size = 4
_i$37159 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::clear, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	lea	ecx, DWORD PTR $T37158[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv86[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T37158[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
; Line 124
	mov	DWORD PTR _i$37159[ebp], 1
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR _i$37159[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37159[ebp], eax
$LN3@clear:
	cmp	DWORD PTR _i$37159[ebp], 6
	jge	SHORT $LN4@clear
; Line 125
	mov	eax, DWORD PTR _i$37159[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T42305[ebp], edx
	mov	eax, DWORD PTR $T42305[ebp]
	mov	DWORD PTR $T42304[ebp], eax
	cmp	DWORD PTR $T42304[ebp], 0
	je	SHORT $LN6@clear
	push	1
	mov	ecx, DWORD PTR $T42304[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@clear
$LN6@clear:
	mov	DWORD PTR tv81[ebp], 0
$LN7@clear:
; Line 126
	mov	eax, DWORD PTR _i$37159[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 127
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 128
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T37158[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::next, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _idx$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
	jmp	SHORT $LN4@next
$LN3@next:
; Line 140
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN4@next:
	cmp	DWORD PTR _idx$[ebp], 6
	jge	SHORT $LN2@next
; Line 141
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN1@next
; Line 142
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 143
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	jmp	SHORT $LN5@next
$LN1@next:
; Line 145
	jmp	SHORT $LN3@next
$LN2@next:
; Line 146
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 147
	xor	eax, eax
$LN5@next:
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::next
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
	mov	DWORD PTR _result$[ebp], eax
; Line 155
	mov	eax, DWORD PTR _result$[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getOther, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 173
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@get
	cmp	DWORD PTR _index$[ebp], 6
	jge	SHORT $LN1@get
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN2@get
$LN1@get:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	jmp	SHORT $LN3@get
$LN2@get:
; Line 176
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN3@get:
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _defaultValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _category$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z
_TEXT	SEGMENT
_i$37200 = -20						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
_eqFunc$ = 12						; size = 4
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::equals, COMDAT
; _this$ = ecx
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	DWORD PTR _i$37200[ebp], 0
	jmp	SHORT $LN7@equals@2
$LN6@equals@2:
	mov	eax, DWORD PTR _i$37200[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37200[ebp], eax
$LN7@equals@2:
	cmp	DWORD PTR _i$37200[ebp], 6
	jge	SHORT $LN5@equals@2
; Line 241
	mov	eax, DWORD PTR _i$37200[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$37200[ebp]
	mov	esi, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	cmp	eax, DWORD PTR [esi+edx*4+128]
	jne	SHORT $LN4@equals@2
; Line 242
	jmp	SHORT $LN6@equals@2
$LN4@equals@2:
; Line 244
	mov	eax, DWORD PTR _i$37200[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN2@equals@2
	mov	eax, DWORD PTR _i$37200[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN3@equals@2
$LN2@equals@2:
; Line 245
	xor	al, al
	jmp	SHORT $LN8@equals@2
$LN3@equals@2:
; Line 247
	mov	esi, esp
	mov	eax, DWORD PTR _i$37200[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$37200[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	call	DWORD PTR _eqFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@equals@2
; Line 248
	xor	al, al
	jmp	SHORT $LN8@equals@2
$LN1@equals@2:
; Line 250
	jmp	$LN6@equals@2
$LN5@equals@2:
; Line 251
	mov	al, 1
$LN8@equals@2:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::equals
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -288						; size = 4
tv88 = -284						; size = 4
tv85 = -280						; size = 4
$T42337 = -272						; size = 4
$T42338 = -260						; size = 4
$T42341 = -248						; size = 4
$T42342 = -236						; size = 4
_index$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getMutable
; Line 263
	xor	eax, eax
	jmp	$LN6@getMutable
$LN5@getMutable:
; Line 265
	mov	eax, DWORD PTR _category$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 266
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@getMutable
	cmp	DWORD PTR _index$[ebp], 6
	jl	SHORT $LN4@getMutable
$LN3@getMutable:
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 268
	xor	eax, eax
	jmp	$LN6@getMutable
$LN4@getMutable:
; Line 270
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	$LN2@getMutable
; Line 272
	cmp	DWORD PTR _defaultValue$[ebp], 0
	jne	SHORT $LN12@getMutable
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T42338[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T42338[ebp], 0
	je	SHORT $LN8@getMutable
	mov	ecx, DWORD PTR $T42338[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN9@getMutable
$LN8@getMutable:
	mov	DWORD PTR tv85[ebp], 0
$LN9@getMutable:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T42337[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T42337[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	jmp	SHORT $LN13@getMutable
$LN12@getMutable:
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T42342[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T42342[ebp], 0
	je	SHORT $LN10@getMutable
	mov	edx, DWORD PTR _defaultValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T42342[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN11@getMutable
$LN10@getMutable:
	mov	DWORD PTR tv93[ebp], 0
$LN11@getMutable:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T42341[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T42341[ebp]
	mov	DWORD PTR tv88[ebp], ecx
$LN13@getMutable:
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [eax+edx*4+128], ecx
$LN2@getMutable:
; Line 274
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN1@getMutable
; Line 275
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@getMutable:
; Line 277
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN6@getMutable:
; Line 278
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T42338[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T42342[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_i$37228 = -20						; size = 4
_this$ = -8						; size = 4
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew, COMDAT
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 282
	mov	DWORD PTR _i$37228[ebp], 1
	jmp	SHORT $LN3@initialize
$LN2@initialize:
	mov	eax, DWORD PTR _i$37228[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37228[ebp], eax
$LN3@initialize:
	cmp	DWORD PTR _i$37228[ebp], 6
	jge	SHORT $LN4@initialize
; Line 283
	mov	eax, DWORD PTR _i$37228[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 284
	jmp	SHORT $LN2@initialize
$LN4@initialize:
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GDigitAffix@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDigitAffix@icu_56@@QAEPAXI@Z PROC			; icu_56::DigitAffix::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDigitAffix@icu_56@@QAEPAXI@Z ENDP			; icu_56::DigitAffix::`scalar deleting destructor'
_TEXT	ENDS
END

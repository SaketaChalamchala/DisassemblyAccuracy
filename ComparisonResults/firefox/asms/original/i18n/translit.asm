; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\translit.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
_BSS	SEGMENT
_registryMutex DB 020H DUP (?)
_registry DD	01H DUP (?)
?classID@?1??getStaticClassID@Transliterator@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::Transliterator::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_RB_DISPLAY_NAME_PREFIX DB '%Translit%%', 00H
_RB_SCRIPT_DISPLAY_NAME_PREFIX DB '%Translit%', 00H
	ORG $+1
_RB_DISPLAY_NAME_PATTERN DB 'TransliteratorNamePattern', 00H
	ORG $+2
_RB_RULE_BASED_IDS DB 'RuleBasedTransliteratorIDs', 00H
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??1Transliterator@icu_56@@UAE@XZ		; icu_56::Transliterator::~Transliterator
PUBLIC	??_GTransliterator@icu_56@@UAEPAXI@Z		; icu_56::Transliterator::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTransliterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTransliterator@icu_56@@UAEPAXI@Z PROC		; icu_56::Transliterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTransliterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::Transliterator::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ETransliterator@icu_56@@UAEPAXI@Z		; icu_56::Transliterator::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ETransliterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETransliterator@icu_56@@UAEPAXI@Z PROC		; icu_56::Transliterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	76					; 0000004cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETransliterator@icu_56@@UAEPAXI@Z ENDP		; icu_56::Transliterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ PROC ; icu_56::Transliterator::getMaximumContextLength, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\translit.h
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1314
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 1315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ENDP ; icu_56::Transliterator::getMaximumContextLength
_TEXT	ENDS
PUBLIC	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::setID, COMDAT
; _this$ = ecx
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	esi, esp
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1320
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::setID
_TEXT	ENDS
PUBLIC	?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ; icu_56::Transliterator::integerToken
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_i$ = 8							; size = 4
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z PROC ; icu_56::Transliterator::integerToken, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1327
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1328
	mov	eax, DWORD PTR _t$[ebp]
; Line 1329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@integerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@integerTok:
	DD	1
	DD	$LN4@integerTok
$LN4@integerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@integerTok
$LN3@integerTok:
	DB	116					; 00000074H
	DB	0
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ENDP ; icu_56::Transliterator::integerToken
_TEXT	ENDS
PUBLIC	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_p$ = 8							; size = 4
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z PROC ; icu_56::Transliterator::pointerToken, COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1333
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1334
	mov	eax, DWORD PTR _t$[ebp]
; Line 1335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pointerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pointerTok:
	DD	1
	DD	$LN4@pointerTok
$LN4@pointerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@pointerTok
$LN3@pointerTok:
	DB	116					; 00000074H
	DB	0
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ENDP ; icu_56::Transliterator::pointerToken
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ	; icu_56::PluralFormat::PluralSelector::PluralSelector
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
PUBLIC	??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPluralSelector@PluralFormat@icu_56@@@8	; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
PUBLIC	??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
EXTRN	?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::select
;	COMDAT ??_R2PluralSelector@PluralFormat@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\plurfmt.h
rdata$r	SEGMENT
??_R2PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelector@PluralFormat@icu_56@@8 DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelector@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorAdapter@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
	DD	FLAT:??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??_7PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`vftable'
PUBLIC	??_R4PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
PUBLIC	??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
;	COMDAT ??_R4PluralSelector@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelector@PluralFormat@icu_56@@6B@ DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelector@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelector@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelector@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelector::`vftable'
	DD	FLAT:??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ PROC	; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ ENDP	; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@PluralSele
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@PluralSele
$LN3@PluralSele:
	mov	DWORD PTR tv68[ebp], 0
$LN4@PluralSele:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
EXTRN	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelector::~PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
EXTRN	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ; icu_56::MessageFormat::getApostropheMode
EXTRN	__imp_?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ PROC ; icu_56::MessageFormat::getApostropheMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\msgfmt.h
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 524				; 0000020cH
	mov	esi, esp
	call	DWORD PTR __imp_?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ENDP ; icu_56::MessageFormat::getApostropheMode
_TEXT	ENDS
PUBLIC	?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z ; icu_56::MessageFormat::getArgTypeList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_listCount$ = 8						; size = 4
?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z PROC ; icu_56::MessageFormat::getArgTypeList, COMDAT
; _this$ = ecx
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1052
	mov	eax, DWORD PTR _listCount$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+636]
	mov	DWORD PTR [eax], edx
; Line 1053
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+632]
; Line 1054
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z ENDP ; icu_56::MessageFormat::getArgTypeList
_TEXT	ENDS
PUBLIC	??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`vftable'
PUBLIC	??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider
PUBLIC	??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::PluralSelectorProvider `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor'
EXTRN	?select@PluralSelectorProvider@MessageFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::PluralSelectorProvider::select
;	COMDAT ??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorProvider@MessageFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorProvider@MessageFormat@icu_56@@8 DD 00H ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorProvider@MessageFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ DD 00H ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`vftable'
	DD	FLAT:??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorProvider@MessageFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider
_TEXT	ENDS
PUBLIC	??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor'
EXTRN	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ:PROC ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7DummyFormat@MessageFormat@icu_56@@6B@	; icu_56::MessageFormat::DummyFormat::`vftable'
PUBLIC	??0DummyFormat@MessageFormat@icu_56@@QAE@XZ	; icu_56::MessageFormat::DummyFormat::DummyFormat
PUBLIC	??_R4DummyFormat@MessageFormat@icu_56@@6B@	; icu_56::MessageFormat::DummyFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDummyFormat@MessageFormat@icu_56@@@8	; icu_56::MessageFormat::DummyFormat `RTTI Type Descriptor'
PUBLIC	??_R3DummyFormat@MessageFormat@icu_56@@8	; icu_56::MessageFormat::DummyFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DummyFormat@MessageFormat@icu_56@@8	; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Format@icu_56@@8			; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFormat@icu_56@@@8			; icu_56::Format `RTTI Type Descriptor'
PUBLIC	??_R3Format@icu_56@@8				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Format@icu_56@@8				; icu_56::Format::`RTTI Base Class Array'
PUBLIC	??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor'
EXTRN	??0Format@icu_56@@IAE@XZ:PROC			; icu_56::Format::Format
EXTRN	??8DummyFormat@MessageFormat@icu_56@@UBECABVFormat@2@@Z:PROC ; icu_56::MessageFormat::DummyFormat::operator==
EXTRN	?clone@DummyFormat@MessageFormat@icu_56@@UBEPAVFormat@3@XZ:PROC ; icu_56::MessageFormat::DummyFormat::clone
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@PAVFieldPositionIterator@3@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAVFieldPosition@3@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
EXTRN	?parseObject@DummyFormat@MessageFormat@icu_56@@UBEXABVUnicodeString@3@AAVFormattable@3@AAVParsePosition@3@@Z:PROC ; icu_56::MessageFormat::DummyFormat::parseObject
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
;	COMDAT ??_R2Format@icu_56@@8
rdata$r	SEGMENT
??_R2Format@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Format@icu_56@@8 ; icu_56::Format::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Format@icu_56@@8
rdata$r	SEGMENT
??_R3Format@icu_56@@8 DD 00H				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Format `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Format@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Format@icu_56@@8 DD FLAT:??_R0?AVFormat@icu_56@@@8 ; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 DD FLAT:??_R0?AVDummyFormat@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R2DummyFormat@MessageFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R3DummyFormat@MessageFormat@icu_56@@8 DD 00H		; icu_56::MessageFormat::DummyFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDummyFormat@MessageFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDummyFormat@MessageFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MessageFormat::DummyFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDummyFormat@MessageFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DummyFormat@MessageFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4DummyFormat@MessageFormat@icu_56@@6B@ DD 00H	; icu_56::MessageFormat::DummyFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDummyFormat@MessageFormat@icu_56@@@8
	DD	FLAT:??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DummyFormat@MessageFormat@icu_56@@6B@
CONST	SEGMENT
??_7DummyFormat@MessageFormat@icu_56@@6B@ DD FLAT:??_R4DummyFormat@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::DummyFormat::`vftable'
	DD	FLAT:??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:??8DummyFormat@MessageFormat@icu_56@@UBECABVFormat@2@@Z
	DD	FLAT:?clone@DummyFormat@MessageFormat@icu_56@@UBEPAVFormat@3@XZ
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@PAVFieldPositionIterator@3@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAVFieldPosition@3@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@DummyFormat@MessageFormat@icu_56@@UBEXABVUnicodeString@3@AAVFormattable@3@AAVParsePosition@3@@Z
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DummyFormat@MessageFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DummyFormat@MessageFormat@icu_56@@QAE@XZ PROC	; icu_56::MessageFormat::DummyFormat::DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@XZ		; icu_56::Format::Format
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DummyFormat@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DummyFormat@MessageFormat@icu_56@@QAE@XZ ENDP	; icu_56::MessageFormat::DummyFormat::DummyFormat
_TEXT	ENDS
PUBLIC	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ	; icu_56::MessageFormat::DummyFormat::~DummyFormat
EXTRN	??1Format@icu_56@@UAE@XZ:PROC			; icu_56::Format::~Format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DummyFormat@MessageFormat@icu_56@@UAE@XZ PROC	; icu_56::MessageFormat::DummyFormat::~DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DummyFormat@MessageFormat@icu_56@@UAE@XZ ENDP	; icu_56::MessageFormat::DummyFormat::~DummyFormat
_TEXT	ENDS
PUBLIC	??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z ; icu_56::MessageFormat::DummyFormat::DummyFormat
EXTRN	??0Format@icu_56@@IAE@ABV01@@Z:PROC		; icu_56::Format::Format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z PROC	; icu_56::MessageFormat::DummyFormat::DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@ABV01@@Z		; icu_56::Format::Format
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DummyFormat@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z ENDP	; icu_56::MessageFormat::DummyFormat::DummyFormat
_TEXT	ENDS
PUBLIC	??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::MessageFormat::DummyFormat::operator=
EXTRN	??4Format@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::Format::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::MessageFormat::DummyFormat::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Format@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::Format::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::MessageFormat::DummyFormat::operator=
_TEXT	ENDS
PUBLIC	??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	320					; 00000140H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; File d:\mozilla\intl\icu\source\common\uinvchar.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	?getStaticClassID@Transliterator@icu_56@@SAPAXXZ ; icu_56::Transliterator::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@Transliterator@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@Transliterator@icu_56@@SAPAXXZ PROC	; icu_56::Transliterator::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\translit.cpp
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@Transliterator@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@Transliterator@icu_56@@SAPAXXZ ENDP	; icu_56::Transliterator::getStaticClassID
_TEXT	ENDS
PUBLIC	??_7Transliterator@icu_56@@6B@			; icu_56::Transliterator::`vftable'
PUBLIC	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
PUBLIC	??_R4Transliterator@icu_56@@6B@			; icu_56::Transliterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTransliterator@icu_56@@@8		; icu_56::Transliterator `RTTI Type Descriptor'
PUBLIC	??_R3Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Transliterator@icu_56@@8		; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@Transliterator@icu_56@@UBEPAV12@XZ	; icu_56::Transliterator::clone
PUBLIC	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::transliterate
PUBLIC	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z ; icu_56::Transliterator::transliterate
PUBLIC	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::transliterate
PUBLIC	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z ; icu_56::Transliterator::transliterate
PUBLIC	?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z ; icu_56::Transliterator::transliterate
PUBLIC	?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z ; icu_56::Transliterator::finishTransliteration
PUBLIC	?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z ; icu_56::Transliterator::filteredTransliterate
PUBLIC	?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::Transliterator::filteredTransliterate
PUBLIC	?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ ; icu_56::Transliterator::getID
PUBLIC	?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::Transliterator::toRules
PUBLIC	?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z ; icu_56::Transliterator::handleGetSourceSet
PUBLIC	?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::Transliterator::getTargetSet
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
;	COMDAT ??_R1A@?0A@EA@Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Transliterator@icu_56@@8 DD FLAT:??_R0?AVTransliterator@icu_56@@@8 ; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R2Transliterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Transliterator@icu_56@@8 ; icu_56::Transliterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R3Transliterator@icu_56@@8 DD 00H			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Transliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Transliterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4Transliterator@icu_56@@6B@ DD 00H			; icu_56::Transliterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTransliterator@icu_56@@@8
	DD	FLAT:??_R3Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7Transliterator@icu_56@@6B@
CONST	SEGMENT
??_7Transliterator@icu_56@@6B@ DD FLAT:??_R4Transliterator@icu_56@@6B@ ; icu_56::Transliterator::`vftable'
	DD	FLAT:??_ETransliterator@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?clone@Transliterator@icu_56@@UBEPAV12@XZ
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z
	DD	FLAT:?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
	DD	FLAT:?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ
	DD	FLAT:?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z
	DD	FLAT:?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z$1
__ehfuncinfo$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_theID$ = 8						; size = 4
_adoptedFilter$ = 12					; size = 4
??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z PROC ; icu_56::Transliterator::Transliterator, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Transliterator@icu_56@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _theID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptedFilter$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 133
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ENDP ; icu_56::Transliterator::Transliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Transliterator@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Transliterator@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1Transliterator@icu_56@@UAE@XZ$1
__ehfuncinfo$??1Transliterator@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1Transliterator@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1Transliterator@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T84727 = -236						; size = 4
$T84728 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1Transliterator@icu_56@@UAE@XZ PROC			; icu_56::Transliterator::~Transliterator, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1Transliterator@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Transliterator@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@Transliter
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T84728[ebp], ecx
	mov	edx, DWORD PTR $T84728[ebp]
	mov	DWORD PTR $T84727[ebp], edx
	cmp	DWORD PTR $T84727[ebp], 0
	je	SHORT $LN4@Transliter
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84727[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84727[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN2@Transliter
$LN4@Transliter:
	mov	DWORD PTR tv89[ebp], 0
$LN2@Transliter:
; Line 144
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Transliterator@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1Transliterator@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1Transliterator@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1Transliterator@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Transliterator@icu_56@@UAE@XZ ENDP			; icu_56::Transliterator::~Transliterator
PUBLIC	??0Transliterator@icu_56@@IAE@ABV01@@Z		; icu_56::Transliterator::Transliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Transliterator@icu_56@@IAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Transliterator@icu_56@@IAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Transliterator@icu_56@@IAE@ABV01@@Z$1
__ehfuncinfo$??0Transliterator@icu_56@@IAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Transliterator@icu_56@@IAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0Transliterator@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0Transliterator@icu_56@@IAE@ABV01@@Z PROC		; icu_56::Transliterator::Transliterator, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Transliterator@icu_56@@IAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Transliterator@icu_56@@6B@
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
; Line 154
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@Transliter@2
; Line 159
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
$LN2@Transliter@2:
; Line 161
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Transliterator@icu_56@@IAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0Transliterator@icu_56@@IAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0Transliterator@icu_56@@IAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Transliterator@icu_56@@IAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Transliterator@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::Transliterator::Transliterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clone@Transliterator@icu_56@@UBEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clone@Transliterator@icu_56@@UBEPAV12@XZ PROC		; icu_56::Transliterator::clone, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 164
	xor	eax, eax
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clone@Transliterator@icu_56@@UBEPAV12@XZ ENDP		; icu_56::Transliterator::clone
_TEXT	ENDS
PUBLIC	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
PUBLIC	??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::Transliterator::operator=
EXTRN	__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv91 = -208						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z PROC	; icu_56::Transliterator::operator=, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 171
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 173
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
; Line 176
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN3@operator@2
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
$LN4@operator@2:
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z ENDP	; icu_56::Transliterator::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?length@Replaceable@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z
_TEXT	SEGMENT
_offsets$ = -36						; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_text$ = 8						; size = 4
_start$ = 12						; size = 4
_limit$ = 16						; size = 4
?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z PROC ; icu_56::Transliterator::transliterate, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	cmp	DWORD PTR _start$[ebp], 0
	jl	SHORT $LN1@transliter
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jl	SHORT $LN1@transliter
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN2@transliter
$LN1@transliter:
; Line 194
	or	eax, -1
	jmp	SHORT $LN3@transliter
$LN2@transliter:
; Line 198
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _offsets$[ebp], eax
; Line 199
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _offsets$[ebp+4], eax
; Line 200
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _offsets$[ebp+8], eax
; Line 201
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _offsets$[ebp+12], eax
; Line 202
	mov	esi, esp
	push	1
	push	0
	lea	eax, DWORD PTR _offsets$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 203
	mov	eax, DWORD PTR _offsets$[ebp+12]
$LN3@transliter:
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@transliter
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@transliter:
	DD	1
	DD	$LN6@transliter
$LN6@transliter:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN5@transliter
$LN5@transliter:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z ENDP ; icu_56::Transliterator::transliterate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z PROC ; icu_56::Transliterator::transliterate, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	0
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 212
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z ENDP ; icu_56::Transliterator::transliterate
_TEXT	ENDS
PUBLIC	?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::_transliterate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_insertion$ = 16					; size = 4
_status$ = 20						; size = 4
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::transliterate, COMDAT
; _this$ = ecx
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _insertion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::_transliterate
; Line 283
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::transliterate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_str$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_insertion$ = 16					; size = 4
_status$ = 20						; size = 4
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::transliterate, COMDAT
; _this$ = ecx
; Line 303
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 304
	mov	esi, esp
	mov	eax, DWORD PTR _insertion$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::_transliterate
; Line 306
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@transliter@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN7@transliter@2:
	DD	1
	DD	$LN6@transliter@2
$LN6@transliter@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN4@transliter@2
$LN4@transliter@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::transliterate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_status$ = 16						; size = 4
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::transliterate, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::_transliterate
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::transliterate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z PROC ; icu_56::Transliterator::finishTransliteration, COMDAT
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 337
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?positionIsValid@icu_56@@YACAAUUTransPosition@@H@Z ; icu_56::positionIsValid
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@finishTran
; Line 338
	jmp	SHORT $LN2@finishTran
$LN1@finishTran:
; Line 341
	mov	esi, esp
	push	1
	push	0
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@finishTran:
; Line 342
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z ENDP ; icu_56::Transliterator::finishTransliteration
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?positionIsValid@icu_56@@YACAAUUTransPosition@@H@Z
_TEXT	SEGMENT
tv75 = -193						; size = 1
_index$ = 8						; size = 4
_len$ = 12						; size = 4
?positionIsValid@icu_56@@YACAAUUTransPosition@@H@Z PROC	; icu_56::positionIsValid, COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	eax, DWORD PTR _index$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN3@positionIs
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx]
	jl	SHORT $LN3@positionIs
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	cmp	eax, DWORD PTR [edx+8]
	jl	SHORT $LN3@positionIs
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+12]
	jl	SHORT $LN3@positionIs
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN3@positionIs
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@positionIs
$LN3@positionIs:
	mov	BYTE PTR tv75[ebp], 0
$LN4@positionIs:
	mov	al, BYTE PTR tv75[ebp]
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?positionIsValid@icu_56@@YACAAUUTransPosition@@H@Z ENDP	; icu_56::positionIsValid
_TEXT	ENDS
EXTRN	__imp_?charAt@Replaceable@icu_56@@QBE_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_insertion$ = 16					; size = 4
_status$ = 20						; size = 4
?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::_transliterate, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@transliter@3
; Line 356
	jmp	$LN5@transliter@3
$LN4@transliter@3:
; Line 359
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?positionIsValid@icu_56@@YACAAUUTransPosition@@H@Z ; icu_56::positionIsValid
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@transliter@3
; Line 360
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 361
	jmp	$LN5@transliter@3
$LN3@transliter@3:
; Line 365
	cmp	DWORD PTR _insertion$[ebp], 0
	je	SHORT $LN2@transliter@3
; Line 366
	mov	esi, esp
	mov	eax, DWORD PTR _insertion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 367
	mov	esi, esp
	mov	ecx, DWORD PTR _insertion$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _index$[ebp]
	add	eax, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 368
	mov	esi, esp
	mov	ecx, DWORD PTR _insertion$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _index$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN2@transliter@3:
; Line 372
	mov	eax, DWORD PTR _index$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jle	SHORT $LN1@transliter@3
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?charAt@Replaceable@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN1@transliter@3
; Line 377
	jmp	SHORT $LN5@transliter@3
$LN1@transliter@3:
; Line 380
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@transliter@3:
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_transliterate@Transliterator@icu_56@@ABEXAAVReplaceable@2@AAUUTransPosition@@PBVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::_transliterate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?char32At@Replaceable@icu_56@@QBEHH@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\translit.cpp
xdata$x	SEGMENT
__unwindtable$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z$1
__ehfuncinfo$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
_TEXT	SEGMENT
tv270 = -564						; size = 4
tv268 = -564						; size = 4
tv274 = -560						; size = 4
tv271 = -560						; size = 4
tv161 = -560						; size = 4
$T76780 = -552						; size = 64
$T76782 = -480						; size = 64
_limit$76784 = -216					; size = 4
_rs$76779 = -204					; size = 4
_charLength$76775 = -192				; size = 4
_totalDelta$76771 = -180				; size = 4
_uncommittedLength$76770 = -168				; size = 4
_passLimit$76769 = -156					; size = 4
_rollbackStart$76768 = -144				; size = 4
_passStart$76767 = -132					; size = 4
_rollbackOrigin$76766 = -120				; size = 4
_runLength$76765 = -108					; size = 4
_runLimit$76764 = -96					; size = 4
_runStart$76763 = -84					; size = 4
_delta$76761 = -72					; size = 4
_isIncrementalRun$76760 = -57				; size = 1
_c$76750 = -48						; size = 4
_globalLimit$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_incremental$ = 16					; size = 1
_rollback$ = 20						; size = 1
?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z PROC ; icu_56::Transliterator::filteredTransliterate, COMDAT
; _this$ = ecx
; Line 428
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 431
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN19@filteredTr
	movsx	eax, BYTE PTR _rollback$[ebp]
	test	eax, eax
	jne	SHORT $LN19@filteredTr
; Line 432
	mov	esi, esp
	movzx	eax, BYTE PTR _incremental$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 433
	jmp	$LN20@filteredTr
$LN19@filteredTr:
; Line 460
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _globalLimit$[ebp], ecx
$LN18@filteredTr:
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	$LN16@filteredTr
$LN15@filteredTr:
; Line 481
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _globalLimit$[ebp]
	jge	SHORT $LN14@filteredTr
	mov	esi, esp
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$76750[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _c$76750[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@filteredTr
; Line 482
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$76750[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	edx, DWORD PTR _index$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 483
	jmp	SHORT $LN15@filteredTr
$LN14@filteredTr:
; Line 486
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
$LN13@filteredTr:
; Line 488
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _globalLimit$[ebp]
	jge	SHORT $LN16@filteredTr
	mov	esi, esp
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$76750[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _c$76750[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@filteredTr
; Line 489
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$76750[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	edx, DWORD PTR _index$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 490
	jmp	SHORT $LN13@filteredTr
$LN16@filteredTr:
; Line 496
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN11@filteredTr
; Line 498
	jmp	$LN17@filteredTr
$LN11@filteredTr:
; Line 506
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _globalLimit$[ebp]
	jge	SHORT $LN22@filteredTr
	mov	DWORD PTR tv161[ebp], 0
	jmp	SHORT $LN23@filteredTr
$LN22@filteredTr:
	movsx	edx, BYTE PTR _incremental$[ebp]
	mov	DWORD PTR tv161[ebp], edx
$LN23@filteredTr:
	mov	al, BYTE PTR tv161[ebp]
	mov	BYTE PTR _isIncrementalRun$76760[ebp], al
; Line 538
	movsx	eax, BYTE PTR _rollback$[ebp]
	test	eax, eax
	je	$LN10@filteredTr
	movsx	eax, BYTE PTR _isIncrementalRun$76760[ebp]
	test	eax, eax
	je	$LN10@filteredTr
; Line 540
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _runStart$76763[ebp], ecx
; Line 541
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _runLimit$76764[ebp], ecx
; Line 542
	mov	eax, DWORD PTR _runLimit$76764[ebp]
	sub	eax, DWORD PTR _runStart$76763[ebp]
	mov	DWORD PTR _runLength$76765[ebp], eax
; Line 545
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@Replaceable@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rollbackOrigin$76766[ebp], eax
; Line 546
	mov	esi, esp
	mov	eax, DWORD PTR _rollbackOrigin$76766[ebp]
	push	eax
	mov	ecx, DWORD PTR _runLimit$76764[ebp]
	push	ecx
	mov	edx, DWORD PTR _runStart$76763[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 553
	mov	eax, DWORD PTR _runStart$76763[ebp]
	mov	DWORD PTR _passStart$76767[ebp], eax
; Line 554
	mov	eax, DWORD PTR _rollbackOrigin$76766[ebp]
	mov	DWORD PTR _rollbackStart$76768[ebp], eax
; Line 558
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _passLimit$76769[ebp], ecx
; Line 562
	mov	DWORD PTR _uncommittedLength$76770[ebp], 0
; Line 565
	mov	DWORD PTR _totalDelta$76771[ebp], 0
$LN9@filteredTr:
; Line 572
	mov	esi, esp
	mov	eax, DWORD PTR _passLimit$76769[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@Replaceable@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 65535				; 0000ffffH
	cmp	ecx, eax
	sbb	edx, edx
	neg	edx
	add	edx, 1
	mov	DWORD PTR _charLength$76775[ebp], edx
; Line 573
	mov	eax, DWORD PTR _passLimit$76769[ebp]
	add	eax, DWORD PTR _charLength$76775[ebp]
	mov	DWORD PTR _passLimit$76769[ebp], eax
; Line 574
	mov	eax, DWORD PTR _passLimit$76769[ebp]
	cmp	eax, DWORD PTR _runLimit$76764[ebp]
	jle	SHORT $LN7@filteredTr
; Line 575
	jmp	$LN8@filteredTr
$LN7@filteredTr:
; Line 577
	mov	eax, DWORD PTR _uncommittedLength$76770[ebp]
	add	eax, DWORD PTR _charLength$76775[ebp]
	mov	DWORD PTR _uncommittedLength$76770[ebp], eax
; Line 579
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _passLimit$76769[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 585
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 587
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _passLimit$76769[ebp]
	mov	DWORD PTR _delta$76761[ebp], ecx
; Line 592
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	je	$LN6@filteredTr
; Line 595
	mov	eax, DWORD PTR _rollbackStart$76768[ebp]
	add	eax, DWORD PTR _delta$76761[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	sub	edx, DWORD PTR _passStart$76767[ebp]
	sub	eax, edx
	mov	DWORD PTR _rs$76779[ebp], eax
; Line 598
	mov	esi, esp
	lea	ecx, DWORD PTR $T76780[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv271[ebp], eax
	mov	eax, DWORD PTR tv271[ebp]
	mov	DWORD PTR tv268[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv268[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _passStart$76767[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76780[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 601
	mov	esi, esp
	mov	eax, DWORD PTR _passStart$76767[ebp]
	push	eax
	mov	ecx, DWORD PTR _rs$76779[ebp]
	add	ecx, DWORD PTR _uncommittedLength$76770[ebp]
	push	ecx
	mov	edx, DWORD PTR _rs$76779[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 604
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _passStart$76767[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 605
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _passLimit$76769[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 606
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _delta$76761[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 612
	jmp	SHORT $LN5@filteredTr
$LN6@filteredTr:
; Line 614
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _passLimit$76769[ebp], ecx
	mov	edx, DWORD PTR _passLimit$76769[ebp]
	mov	DWORD PTR _passStart$76767[ebp], edx
; Line 620
	mov	eax, DWORD PTR _delta$76761[ebp]
	add	eax, DWORD PTR _uncommittedLength$76770[ebp]
	add	eax, DWORD PTR _rollbackStart$76768[ebp]
	mov	DWORD PTR _rollbackStart$76768[ebp], eax
; Line 621
	mov	DWORD PTR _uncommittedLength$76770[ebp], 0
; Line 624
	mov	eax, DWORD PTR _runLimit$76764[ebp]
	add	eax, DWORD PTR _delta$76761[ebp]
	mov	DWORD PTR _runLimit$76764[ebp], eax
; Line 625
	mov	eax, DWORD PTR _totalDelta$76771[ebp]
	add	eax, DWORD PTR _delta$76761[ebp]
	mov	DWORD PTR _totalDelta$76771[ebp], eax
$LN5@filteredTr:
; Line 627
	jmp	$LN9@filteredTr
$LN8@filteredTr:
; Line 632
	mov	eax, DWORD PTR _rollbackOrigin$76766[ebp]
	add	eax, DWORD PTR _totalDelta$76771[ebp]
	mov	DWORD PTR _rollbackOrigin$76766[ebp], eax
; Line 633
	mov	eax, DWORD PTR _globalLimit$[ebp]
	add	eax, DWORD PTR _totalDelta$76771[ebp]
	mov	DWORD PTR _globalLimit$[ebp], eax
; Line 636
	mov	esi, esp
	lea	ecx, DWORD PTR $T76782[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv274[ebp], eax
	mov	eax, DWORD PTR tv274[ebp]
	mov	DWORD PTR tv270[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv270[ebp]
	push	ecx
	mov	edx, DWORD PTR _rollbackOrigin$76766[ebp]
	add	edx, DWORD PTR _runLength$76765[ebp]
	push	edx
	mov	eax, DWORD PTR _rollbackOrigin$76766[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _text$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76782[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 639
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _passStart$76767[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 642
	jmp	SHORT $LN4@filteredTr
$LN10@filteredTr:
; Line 644
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _limit$76784[ebp], ecx
; Line 645
	mov	esi, esp
	movzx	eax, BYTE PTR _isIncrementalRun$76760[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 646
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _limit$76784[ebp]
	mov	DWORD PTR _delta$76761[ebp], ecx
; Line 655
	movsx	eax, BYTE PTR _incremental$[ebp]
	test	eax, eax
	jne	SHORT $LN3@filteredTr
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN3@filteredTr
; Line 657
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
$LN3@filteredTr:
; Line 663
	mov	eax, DWORD PTR _globalLimit$[ebp]
	add	eax, DWORD PTR _delta$76761[ebp]
	mov	DWORD PTR _globalLimit$[ebp], eax
$LN4@filteredTr:
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN1@filteredTr
	movsx	eax, BYTE PTR _isIncrementalRun$76760[ebp]
	test	eax, eax
	je	SHORT $LN2@filteredTr
$LN1@filteredTr:
; Line 667
	jmp	SHORT $LN17@filteredTr
$LN2@filteredTr:
; Line 672
	jmp	$LN18@filteredTr
$LN17@filteredTr:
; Line 676
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _globalLimit$[ebp]
	mov	DWORD PTR [eax+12], ecx
$LN20@filteredTr:
; Line 677
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76780[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76782[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z ENDP ; icu_56::Transliterator::filteredTransliterate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_incremental$ = 16					; size = 1
?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z PROC ; icu_56::Transliterator::filteredTransliterate, COMDAT
; _this$ = ecx
; Line 681
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 682
	mov	esi, esp
	push	0
	movzx	eax, BYTE PTR _incremental$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 683
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ENDP ; icu_56::Transliterator::filteredTransliterate
_TEXT	ENDS
PUBLIC	?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z ; icu_56::Transliterator::setMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_maxContextLength$ = 8					; size = 4
?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z PROC ; icu_56::Transliterator::setMaximumContextLength, COMDAT
; _this$ = ecx
; Line 689
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 690
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _maxContextLength$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 691
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z ENDP ; icu_56::Transliterator::setMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ PROC ; icu_56::Transliterator::getID, COMDAT
; _this$ = ecx
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 701
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 702
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ ENDP ; icu_56::Transliterator::getID
_TEXT	ENDS
PUBLIC	?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z ; icu_56::Transliterator::getDisplayName
PUBLIC	?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@@Z ; icu_56::Transliterator::getDisplayName
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@@Z
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_result$ = 12						; size = 4
?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@@Z PROC ; icu_56::Transliterator::getDisplayName, COMDAT
; Line 710
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 711
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z ; icu_56::Transliterator::getDisplayName
	add	esp, 12					; 0000000cH
; Line 712
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@AAV32@@Z ENDP ; icu_56::Transliterator::getDisplayName
_TEXT	ENDS
PUBLIC	??_C@_0BC@KHBAGMKF@icudt56l?9translit?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	??1MessageFormat@icu_56@@UAE@XZ:PROC		; icu_56::MessageFormat::~MessageFormat
EXTRN	?format@MessageFormat@icu_56@@QBEAAVUnicodeString@2@PBVFormattable@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::format
EXTRN	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::Formattable::operator=
EXTRN	??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z:PROC ; icu_56::Formattable::Formattable
EXTRN	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::Formattable::setString
EXTRN	?setLong@Formattable@icu_56@@QAEXH@Z:PROC	; icu_56::Formattable::setLong
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	??0MessageFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::MessageFormat
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@PBDAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
EXTRN	_strlen:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	__imp_??1ResourceBundle@icu_56@@UAE@XZ:PROC
EXTRN	?IDtoSTV@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@AAV32@11AAC@Z:PROC ; icu_56::TransliteratorIDParser::IDtoSTV
EXTRN	__imp_??0ResourceBundle@icu_56@@QAE@PBDABVLocale@1@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_0BC@KHBAGMKF@icudt56l?9translit?$AA@
CONST	SEGMENT
??_C@_0BC@KHBAGMKF@icudt56l?9translit?$AA@ DB 'icudt56l-translit', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$12
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z
_TEXT	SEGMENT
tv312 = -2768						; size = 4
tv304 = -2768						; size = 4
tv343 = -2764						; size = 4
tv339 = -2764						; size = 4
$T76832 = -2756						; size = 64
$T76848 = -2684						; size = 64
$T76850 = -2612						; size = 224
$T84814 = -2380						; size = 4
$T84815 = -2368						; size = 4
$T84816 = -2356						; size = 4
$T84817 = -2344						; size = 4
_pos$76851 = -2140					; size = 16
_j$76842 = -2116					; size = 4
_s$76840 = -2104					; size = 64
_nargs$76839 = -2032					; size = 4
_args$76835 = -2020					; size = 672
_msg$76834 = -1340					; size = 696
_resString$76828 = -636					; size = 64
_length$76824 = -564					; size = 4
_key$76823 = -552					; size = 200
_ID$ = -344						; size = 64
_sawSource$ = -269					; size = 1
_variant$ = -260					; size = 64
_target$ = -188						; size = 64
_source$ = -116						; size = 64
_bundle$ = -44						; size = 12
_status$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_inLocale$ = 12						; size = 4
_result$ = 16						; size = 4
?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z PROC ; icu_56::Transliterator::getDisplayName, COMDAT
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2756				; 00000ac4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2768]
	mov	ecx, 689				; 000002b1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 735
	mov	DWORD PTR _status$[ebp], 0
; Line 737
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@KHBAGMKF@icudt56l?9translit?$AA@
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??0ResourceBundle@icu_56@@QAE@PBDABVLocale@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 741
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 744
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 746
	lea	eax, DWORD PTR _sawSource$[ebp]
	push	eax
	lea	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	lea	edx, DWORD PTR _target$[ebp]
	push	edx
	lea	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	?IDtoSTV@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@AAV32@11AAC@Z ; icu_56::TransliteratorIDParser::IDtoSTV
	add	esp, 20					; 00000014H
; Line 747
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jge	SHORT $LN11@getDisplay
; Line 749
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T84814[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84814[ebp]
	jmp	$LN12@getDisplay
$LN11@getDisplay:
; Line 751
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN10@getDisplay
; Line 752
	mov	esi, esp
	push	47					; 0000002fH
	push	0
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@getDisplay:
; Line 754
	mov	esi, esp
	lea	eax, DWORD PTR _source$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 755
	mov	esi, esp
	lea	eax, DWORD PTR _variant$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	ebx, esp
	push	45					; 0000002dH
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 758
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	$LN9@getDisplay
; Line 760
	push	OFFSET _RB_DISPLAY_NAME_PREFIX
	lea	eax, DWORD PTR _key$76823[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 761
	push	OFFSET _RB_DISPLAY_NAME_PREFIX
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$76824[ebp], eax
; Line 762
	mov	esi, esp
	push	0
	mov	eax, 200				; 000000c8H
	sub	eax, DWORD PTR _length$76824[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$76824[ebp]
	lea	edx, DWORD PTR _key$76823[ebp+ecx]
	push	edx
	mov	eax, 200				; 000000c8H
	sub	eax, DWORD PTR _length$76824[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 765
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$76823[ebp]
	push	ecx
	lea	edx, DWORD PTR _resString$76828[ebp]
	push	edx
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@PBDAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 767
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN8@getDisplay
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN8@getDisplay
; Line 768
	mov	esi, esp
	lea	eax, DWORD PTR _resString$76828[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84815[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84815[ebp]
	jmp	$LN12@getDisplay
$LN8@getDisplay:
; Line 778
	mov	DWORD PTR _status$[ebp], 0
; Line 779
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _RB_DISPLAY_NAME_PATTERN
	lea	ecx, DWORD PTR $T76832[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@PBDAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv339[ebp], eax
	mov	edx, DWORD PTR tv339[ebp]
	mov	DWORD PTR tv304[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	eax, DWORD PTR tv304[ebp]
	push	eax
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T76832[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 781
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN7@getDisplay
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN7@getDisplay
; Line 782
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inLocale$[ebp]
	push	ecx
	lea	edx, DWORD PTR _resString$76828[ebp]
	push	edx
	lea	ecx, DWORD PTR _msg$76834[ebp]
	call	??0MessageFormat@icu_56@@QAE@ABVUnicodeString@1@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::MessageFormat::MessageFormat
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 786
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	OFFSET ??0Formattable@icu_56@@QAE@XZ	; icu_56::Formattable::Formattable
	push	3
	push	224					; 000000e0H
	lea	eax, DWORD PTR _args$76835[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 788
	push	2
	lea	ecx, DWORD PTR _args$76835[ebp]
	call	?setLong@Formattable@icu_56@@QAEXH@Z	; icu_56::Formattable::setLong
; Line 789
	lea	eax, DWORD PTR _source$[ebp]
	push	eax
	lea	ecx, DWORD PTR _args$76835[ebp+224]
	call	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::Formattable::setString
; Line 790
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _args$76835[ebp+448]
	call	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::Formattable::setString
; Line 791
	mov	DWORD PTR _nargs$76839[ebp], 3
; Line 794
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 795
	push	OFFSET _RB_SCRIPT_DISPLAY_NAME_PREFIX
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$76824[ebp], eax
; Line 796
	mov	DWORD PTR _j$76842[ebp], 1
	jmp	SHORT $LN6@getDisplay
$LN5@getDisplay:
	mov	eax, DWORD PTR _j$76842[ebp]
	add	eax, 1
	mov	DWORD PTR _j$76842[ebp], eax
$LN6@getDisplay:
	cmp	DWORD PTR _j$76842[ebp], 2
	jg	$LN4@getDisplay
; Line 797
	mov	DWORD PTR _status$[ebp], 0
; Line 798
	push	OFFSET _RB_SCRIPT_DISPLAY_NAME_PREFIX
	lea	eax, DWORD PTR _key$76823[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 799
	lea	eax, DWORD PTR _s$76840[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$76842[ebp]
	imul	ecx, 224				; 000000e0H
	lea	ecx, DWORD PTR _args$76835[ebp+ecx]
	call	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Line 800
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	$LN3@getDisplay
; Line 801
	mov	esi, esp
	push	0
	mov	eax, 200				; 000000c8H
	sub	eax, DWORD PTR _length$76824[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _length$76824[ebp]
	lea	edx, DWORD PTR _key$76823[ebp+ecx]
	push	edx
	mov	eax, 200				; 000000c8H
	sub	eax, DWORD PTR _length$76824[ebp]
	sub	eax, 1
	push	eax
	push	0
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 803
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$76823[ebp]
	push	ecx
	lea	edx, DWORD PTR $T76848[ebp]
	push	edx
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_?getStringEx@ResourceBundle@icu_56@@QBE?AVUnicodeString@2@PBDAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv343[ebp], eax
	mov	eax, DWORD PTR tv343[ebp]
	mov	DWORD PTR tv312[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	mov	ecx, DWORD PTR tv312[ebp]
	push	ecx
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	esi, esp
	lea	ecx, DWORD PTR $T76848[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 805
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@getDisplay
; Line 806
	lea	eax, DWORD PTR _resString$76828[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76850[ebp]
	call	??0Formattable@icu_56@@QAE@ABVUnicodeString@1@@Z ; icu_56::Formattable::Formattable
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T76850[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$76842[ebp]
	imul	edx, 224				; 000000e0H
	lea	ecx, DWORD PTR _args$76835[ebp+edx]
	call	??4Formattable@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::Formattable::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T76850[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
$LN3@getDisplay:
; Line 809
	jmp	$LN5@getDisplay
$LN4@getDisplay:
; Line 811
	mov	DWORD PTR _status$[ebp], 0
; Line 812
	lea	ecx, DWORD PTR _pos$76851[ebp]
	call	??0FieldPosition@icu_56@@QAE@XZ		; icu_56::FieldPosition::FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
; Line 813
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$76851[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	eax, DWORD PTR _nargs$76839[ebp]
	push	eax
	lea	ecx, DWORD PTR _args$76835[ebp]
	push	ecx
	lea	ecx, DWORD PTR _msg$76834[ebp]
	call	?format@MessageFormat@icu_56@@QBEAAVUnicodeString@2@PBVFormattable@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::MessageFormat::format
; Line 814
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN1@getDisplay
; Line 815
	mov	esi, esp
	lea	eax, DWORD PTR _variant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 816
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T84816[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _pos$76851[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	3
	push	224					; 000000e0H
	lea	ecx, DWORD PTR _args$76835[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _msg$76834[ebp]
	call	??1MessageFormat@icu_56@@UAE@XZ		; icu_56::MessageFormat::~MessageFormat
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84816[ebp]
	jmp	$LN12@getDisplay
$LN1@getDisplay:
; Line 818
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _pos$76851[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	3
	push	224					; 000000e0H
	lea	eax, DWORD PTR _args$76835[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _msg$76834[ebp]
	call	??1MessageFormat@icu_56@@UAE@XZ		; icu_56::MessageFormat::~MessageFormat
$LN7@getDisplay:
; Line 820
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@getDisplay:
; Line 825
	mov	esi, esp
	lea	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 826
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T84817[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84817[ebp]
$LN12@getDisplay:
; Line 827
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@getDisplay
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2768				; 00000ad0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN42@getDisplay:
	DD	13					; 0000000dH
	DD	$LN41@getDisplay
$LN41@getDisplay:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN27@getDisplay
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN28@getDisplay
	DD	-116					; ffffff8cH
	DD	64					; 00000040H
	DD	$LN29@getDisplay
	DD	-188					; ffffff44H
	DD	64					; 00000040H
	DD	$LN30@getDisplay
	DD	-260					; fffffefcH
	DD	64					; 00000040H
	DD	$LN31@getDisplay
	DD	-269					; fffffef3H
	DD	1
	DD	$LN32@getDisplay
	DD	-344					; fffffea8H
	DD	64					; 00000040H
	DD	$LN33@getDisplay
	DD	-552					; fffffdd8H
	DD	200					; 000000c8H
	DD	$LN34@getDisplay
	DD	-636					; fffffd84H
	DD	64					; 00000040H
	DD	$LN35@getDisplay
	DD	-1340					; fffffac4H
	DD	696					; 000002b8H
	DD	$LN36@getDisplay
	DD	-2020					; fffff81cH
	DD	672					; 000002a0H
	DD	$LN37@getDisplay
	DD	-2104					; fffff7c8H
	DD	64					; 00000040H
	DD	$LN38@getDisplay
	DD	-2140					; fffff7a4H
	DD	16					; 00000010H
	DD	$LN39@getDisplay
$LN39@getDisplay:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN38@getDisplay:
	DB	115					; 00000073H
	DB	0
$LN37@getDisplay:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN36@getDisplay:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN35@getDisplay:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN34@getDisplay:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN33@getDisplay:
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN32@getDisplay:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	83					; 00000053H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN31@getDisplay:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN30@getDisplay:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN29@getDisplay:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN28@getDisplay:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN27@getDisplay:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _bundle$[ebp]
	call	DWORD PTR __imp_??1ResourceBundle@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _variant$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _resString$76828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76832[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$7:
	lea	ecx, DWORD PTR _msg$76834[ebp]
	jmp	??1MessageFormat@icu_56@@UAE@XZ		; icu_56::MessageFormat::~MessageFormat
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$8:
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	3
	push	224					; 000000e0H
	lea	eax, DWORD PTR _args$76835[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$76840[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76848[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$11:
	lea	ecx, DWORD PTR $T76850[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__unwindfunclet$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z$12:
	lea	ecx, DWORD PTR _pos$76851[ebp]
	jmp	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
__ehhandler$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2772]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDisplayName@Transliterator@icu_56@@SAAAVUnicodeString@2@ABV32@ABVLocale@2@AAV32@@Z ENDP ; icu_56::Transliterator::getDisplayName
PUBLIC	?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ ; icu_56::Transliterator::getFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ PROC ; icu_56::Transliterator::getFilter, COMDAT
; _this$ = ecx
; Line 834
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
; Line 836
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ ENDP ; icu_56::Transliterator::getFilter
_TEXT	ENDS
PUBLIC	?orphanFilter@Transliterator@icu_56@@QAEPAVUnicodeFilter@2@XZ ; icu_56::Transliterator::orphanFilter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanFilter@Transliterator@icu_56@@QAEPAVUnicodeFilter@2@XZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
?orphanFilter@Transliterator@icu_56@@QAEPAVUnicodeFilter@2@XZ PROC ; icu_56::Transliterator::orphanFilter, COMDAT
; _this$ = ecx
; Line 844
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _result$[ebp], ecx
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
; Line 847
	mov	eax, DWORD PTR _result$[ebp]
; Line 848
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphanFilter@Transliterator@icu_56@@QAEPAVUnicodeFilter@2@XZ ENDP ; icu_56::Transliterator::orphanFilter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T84858 = -224						; size = 4
$T84859 = -212						; size = 4
_this$ = -8						; size = 4
_filterToAdopt$ = 8					; size = 4
?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z PROC ; icu_56::Transliterator::adoptFilter, COMDAT
; _this$ = ecx
; Line 858
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 859
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T84859[ebp], ecx
	mov	edx, DWORD PTR $T84859[ebp]
	mov	DWORD PTR $T84858[ebp], edx
	cmp	DWORD PTR $T84858[ebp], 0
	je	SHORT $LN3@adoptFilte
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84858[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84858[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@adoptFilte
$LN3@adoptFilte:
	mov	DWORD PTR tv75[ebp], 0
$LN4@adoptFilte:
; Line 860
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _filterToAdopt$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 861
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ENDP ; icu_56::Transliterator::adoptFilter
_TEXT	ENDS
PUBLIC	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
PUBLIC	__$ArrayPad$
PUBLIC	?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -92					; size = 72
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_status$ = 8						; size = 4
?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::createInverse, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 885
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
; Line 886
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@createInve
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@createInve:
	DD	1
	DD	$LN4@createInve
$LN4@createInve:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN3@createInve
$LN3@createInve:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::createInverse
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -80					; size = 72
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_dir$ = 12						; size = 4
_status$ = 16						; size = 4
?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::createInstance, COMDAT
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 894
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dir$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
; Line 895
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@createInst
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@createInst:
	DD	1
	DD	$LN4@createInst
$LN4@createInst:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN3@createInst
$LN3@createInst:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::createInstance
_TEXT	ENDS
PUBLIC	??_C@_1CA@BNPGFLJM@?$AAl?$AAi?$AAs?$AAt?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??createInstance@Transliterator@icu_56@@SAPAV23@ABVUnicodeString@3@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA@6f6f2232 ; `icu_56::Transliterator::createInstance'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::CompoundTransliterator::CompoundTransliterator
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
EXTRN	?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorIDParser::instantiateList
EXTRN	?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z:PROC ; icu_56::TransliteratorIDParser::parseCompoundID
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_1CA@BNPGFLJM@?$AAl?$AAi?$AAs?$AAt?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@BNPGFLJM@?$AAl?$AAi?$AAs?$AAt?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '.', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'l', 00H, 'i', 00H, 't'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??createInstance@Transliterator@icu_56@@SAPAV23@ABVUnicodeString@3@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA@6f6f2232
_DATA	SEGMENT
?__LINE__Var@?1??createInstance@Transliterator@icu_56@@SAPAV23@ABVUnicodeString@3@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA@6f6f2232 DD 0391H ; `icu_56::Transliterator::createInstance'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv153 = -412						; size = 4
$T84877 = -404						; size = 4
$T84878 = -392						; size = 4
$T84879 = -380						; size = 4
$T84881 = -368						; size = 4
$T84882 = -356						; size = 4
$T84885 = -344						; size = 4
_t$ = -140						; size = 4
_globalFilter$ = -128					; size = 4
_list$ = -116						; size = 24
_canonID$ = -84						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_dir$ = 12						; size = 4
_parseError$ = 16					; size = 4
_status$ = 20						; size = 4
?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::createInstance, COMDAT
; Line 913
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 400				; 00000190H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 914
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@createInst@2
; Line 915
	xor	eax, eax
	jmp	$LN12@createInst@2
$LN11@createInst@2:
; Line 918
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 919
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 920
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@createInst@2
; Line 921
	mov	DWORD PTR $T84877[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84877[ebp]
	jmp	$LN12@createInst@2
$LN10@createInst@2:
; Line 927
	lea	eax, DWORD PTR _globalFilter$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	lea	edx, DWORD PTR _canonID$[ebp]
	push	edx
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z ; icu_56::TransliteratorIDParser::parseCompoundID
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN9@createInst@2
; Line 928
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65569			; 00010021H
; Line 929
	mov	DWORD PTR $T84878[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84878[ebp]
	jmp	$LN12@createInst@2
$LN9@createInst@2:
; Line 932
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorIDParser::instantiateList
	add	esp, 8
; Line 933
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@createInst@2
; Line 934
	mov	DWORD PTR $T84879[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84879[ebp]
	jmp	$LN12@createInst@2
$LN8@createInst@2:
; Line 937
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jg	SHORT $LN14@createInst@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??createInstance@Transliterator@icu_56@@SAPAV23@ABVUnicodeString@3@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z@4JA@6f6f2232
	add	eax, 24					; 00000018H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@BNPGFLJM@?$AAl?$AAi?$AAs?$AAt?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@createInst@2:
; Line 938
	mov	DWORD PTR _t$[ebp], 0
; Line 940
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jg	SHORT $LN6@createInst@2
	mov	esi, esp
	push	59					; 0000003bH
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN7@createInst@2
$LN6@createInst@2:
; Line 946
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84882[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T84882[ebp], 0
	je	SHORT $LN15@createInst@2
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	lea	edx, DWORD PTR _list$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T84882[ebp]
	call	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN16@createInst@2
$LN15@createInst@2:
	mov	DWORD PTR tv153[ebp], 0
$LN16@createInst@2:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR $T84881[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T84881[ebp]
	mov	DWORD PTR _t$[ebp], ecx
; Line 948
	jmp	SHORT $LN5@createInst@2
$LN7@createInst@2:
; Line 949
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$[ebp], eax
$LN5@createInst@2:
; Line 952
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN4@createInst@2
; Line 953
	lea	eax, DWORD PTR _canonID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
; Line 954
	cmp	DWORD PTR _globalFilter$[ebp], 0
	je	SHORT $LN3@createInst@2
; Line 955
	mov	eax, DWORD PTR _globalFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
$LN3@createInst@2:
; Line 957
	jmp	SHORT $LN2@createInst@2
$LN4@createInst@2:
; Line 958
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createInst@2
; Line 959
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@createInst@2:
; Line 961
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T84885[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84885[ebp]
$LN12@createInst@2:
; Line 962
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@createInst@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN25@createInst@2:
	DD	3
	DD	$LN24@createInst@2
$LN24@createInst@2:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN20@createInst@2
	DD	-116					; ffffff8cH
	DD	24					; 00000018H
	DD	$LN21@createInst@2
	DD	-128					; ffffff80H
	DD	4
	DD	$LN22@createInst@2
$LN22@createInst@2:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN21@createInst@2:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN20@createInst@2:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _canonID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T84882[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-416]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::createInstance
PUBLIC	??_C@_19LFNABIBF@?$AAt?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??createBasicInstance@Transliterator@icu_56@@KAPAV23@ABVUnicodeString@3@PBV43@@Z@4JA@6f6f2232 ; `icu_56::Transliterator::createBasicInstance'::`2'::__LINE__Var
PUBLIC	??_GTransliteratorAlias@icu_56@@QAEPAXI@Z	; icu_56::TransliteratorAlias::`scalar deleting destructor'
PUBLIC	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
PUBLIC	__$ArrayPad$
PUBLIC	?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z ; icu_56::Transliterator::createBasicInstance
EXTRN	?create@TransliteratorAlias@icu_56@@QAEPAVTransliterator@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorAlias::create
EXTRN	??1TransliteratorParser@icu_56@@QAE@XZ:PROC	; icu_56::TransliteratorParser::~TransliteratorParser
EXTRN	?reget@TransliteratorRegistry@icu_56@@QAEPAVTransliterator@2@ABVUnicodeString@2@AAVTransliteratorParser@2@AAPAVTransliteratorAlias@2@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::reget
EXTRN	?parse@TransliteratorAlias@icu_56@@QBEXAAVTransliteratorParser@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorAlias::parse
EXTRN	??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorParser::TransliteratorParser
EXTRN	?isRuleBased@TransliteratorAlias@icu_56@@QBECXZ:PROC ; icu_56::TransliteratorAlias::isRuleBased
EXTRN	_umtx_unlock_56:PROC
EXTRN	?get@TransliteratorRegistry@icu_56@@QAEPAVTransliterator@2@ABVUnicodeString@2@AAPAVTransliteratorAlias@2@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::get
EXTRN	_umtx_lock_56:PROC
;	COMDAT ??_C@_19LFNABIBF@?$AAt?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_19LFNABIBF@?$AAt?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@ DB 't', 00H, '=', 00H
	DB	'=', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??createBasicInstance@Transliterator@icu_56@@KAPAV23@ABVUnicodeString@3@PBV43@@Z@4JA@6f6f2232
_DATA	SEGMENT
?__LINE__Var@?1??createBasicInstance@Transliterator@icu_56@@KAPAV23@ABVUnicodeString@3@PBV43@@Z@4JA@6f6f2232 DD 03cdH ; `icu_56::Transliterator::createBasicInstance'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z$0
__ehfuncinfo$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z
_TEXT	SEGMENT
tv193 = -856						; size = 4
tv188 = -856						; size = 4
tv173 = -856						; size = 4
tv151 = -856						; size = 4
tv95 = -856						; size = 4
tv90 = -856						; size = 4
$T84903 = -848						; size = 4
$T84904 = -836						; size = 4
$T84907 = -824						; size = 4
$T84908 = -812						; size = 4
$T84912 = -800						; size = 4
$T84913 = -788						; size = 4
$T84916 = -776						; size = 4
$T84917 = -764						; size = 4
$T84920 = -752						; size = 4
$T84921 = -740						; size = 4
$T84924 = -728						; size = 4
$T84925 = -716						; size = 4
_parser$76937 = -512					; size = 376
_t$ = -128						; size = 4
_alias$ = -116						; size = 4
_ec$ = -104						; size = 4
_pe$ = -92						; size = 72
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_canon$ = 12						; size = 4
?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z PROC ; icu_56::Transliterator::createBasicInstance, COMDAT
; Line 973
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 844				; 0000034cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-856]
	mov	ecx, 211				; 000000d3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 975
	mov	DWORD PTR _ec$[ebp], 0
; Line 976
	mov	DWORD PTR _alias$[ebp], 0
; Line 977
	mov	DWORD PTR _t$[ebp], 0
; Line 979
	push	OFFSET _registryMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 980
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN10@createBasi
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@createBasi
$LN10@createBasi:
; Line 981
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _registry
	call	?get@TransliteratorRegistry@icu_56@@QAEPAVTransliterator@2@ABVUnicodeString@2@AAPAVTransliteratorAlias@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::get
	mov	DWORD PTR _t$[ebp], eax
$LN11@createBasi:
; Line 983
	push	OFFSET _registryMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 985
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN8@createBasi
; Line 986
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T84904[ebp], eax
	mov	ecx, DWORD PTR $T84904[ebp]
	mov	DWORD PTR $T84903[ebp], ecx
	cmp	DWORD PTR $T84903[ebp], 0
	je	SHORT $LN14@createBasi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84903[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84903[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN15@createBasi
$LN14@createBasi:
	mov	DWORD PTR tv90[ebp], 0
$LN15@createBasi:
; Line 987
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR $T84908[ebp], eax
	mov	ecx, DWORD PTR $T84908[ebp]
	mov	DWORD PTR $T84907[ebp], ecx
	cmp	DWORD PTR $T84907[ebp], 0
	je	SHORT $LN16@createBasi
	push	1
	mov	ecx, DWORD PTR $T84907[ebp]
	call	??_GTransliteratorAlias@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN17@createBasi
$LN16@createBasi:
	mov	DWORD PTR tv95[ebp], 0
$LN17@createBasi:
; Line 988
	xor	eax, eax
	jmp	$LN12@createBasi
$LN8@createBasi:
; Line 998
	cmp	DWORD PTR _alias$[ebp], 0
	je	$LN7@createBasi
; Line 999
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN18@createBasi
	mov	eax, DWORD PTR ?__LINE__Var@?1??createBasicInstance@Transliterator@icu_56@@KAPAV23@ABVUnicodeString@3@PBV43@@Z@4JA@6f6f2232
	add	eax, 26					; 0000001aH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_19LFNABIBF@?$AAt?$AA?$DN?$AA?$DN?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@createBasi:
; Line 1003
	mov	ecx, DWORD PTR _alias$[ebp]
	call	?isRuleBased@TransliteratorAlias@icu_56@@QBECXZ ; icu_56::TransliteratorAlias::isRuleBased
	movsx	eax, al
	test	eax, eax
	je	$LN6@createBasi
; Line 1005
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parser$76937[ebp]
	call	??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::TransliteratorParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1006
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parser$76937[ebp]
	push	edx
	mov	ecx, DWORD PTR _alias$[ebp]
	call	?parse@TransliteratorAlias@icu_56@@QBEXAAVTransliteratorParser@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorAlias::parse
; Line 1007
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR $T84913[ebp], eax
	mov	ecx, DWORD PTR $T84913[ebp]
	mov	DWORD PTR $T84912[ebp], ecx
	cmp	DWORD PTR $T84912[ebp], 0
	je	SHORT $LN19@createBasi
	push	1
	mov	ecx, DWORD PTR $T84912[ebp]
	call	??_GTransliteratorAlias@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN20@createBasi
$LN19@createBasi:
	mov	DWORD PTR tv151[ebp], 0
$LN20@createBasi:
; Line 1008
	mov	DWORD PTR _alias$[ebp], 0
; Line 1011
	push	OFFSET _registryMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1012
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN4@createBasi
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@createBasi
$LN4@createBasi:
; Line 1013
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parser$76937[ebp]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?reget@TransliteratorRegistry@icu_56@@QAEPAVTransliterator@2@ABVUnicodeString@2@AAVTransliteratorParser@2@AAPAVTransliteratorAlias@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::reget
	mov	DWORD PTR _t$[ebp], eax
$LN5@createBasi:
; Line 1015
	push	OFFSET _registryMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 1018
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$76937[ebp]
	call	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
	jmp	SHORT $LN3@createBasi
$LN6@createBasi:
; Line 1019
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _alias$[ebp]
	call	?create@TransliteratorAlias@icu_56@@QAEPAVTransliterator@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorAlias::create
	mov	DWORD PTR _t$[ebp], eax
; Line 1020
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR $T84917[ebp], eax
	mov	ecx, DWORD PTR $T84917[ebp]
	mov	DWORD PTR $T84916[ebp], ecx
	cmp	DWORD PTR $T84916[ebp], 0
	je	SHORT $LN21@createBasi
	push	1
	mov	ecx, DWORD PTR $T84916[ebp]
	call	??_GTransliteratorAlias@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN22@createBasi
$LN21@createBasi:
	mov	DWORD PTR tv173[ebp], 0
$LN22@createBasi:
; Line 1021
	mov	DWORD PTR _alias$[ebp], 0
; Line 1022
	jmp	$LN7@createBasi
$LN3@createBasi:
; Line 1024
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN2@createBasi
; Line 1025
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T84921[ebp], eax
	mov	ecx, DWORD PTR $T84921[ebp]
	mov	DWORD PTR $T84920[ebp], ecx
	cmp	DWORD PTR $T84920[ebp], 0
	je	SHORT $LN23@createBasi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84920[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84920[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN24@createBasi
$LN23@createBasi:
	mov	DWORD PTR tv188[ebp], 0
$LN24@createBasi:
; Line 1026
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR $T84925[ebp], eax
	mov	ecx, DWORD PTR $T84925[ebp]
	mov	DWORD PTR $T84924[ebp], ecx
	cmp	DWORD PTR $T84924[ebp], 0
	je	SHORT $LN25@createBasi
	push	1
	mov	ecx, DWORD PTR $T84924[ebp]
	call	??_GTransliteratorAlias@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN26@createBasi
$LN25@createBasi:
	mov	DWORD PTR tv193[ebp], 0
$LN26@createBasi:
; Line 1027
	mov	DWORD PTR _t$[ebp], 0
; Line 1028
	jmp	SHORT $LN7@createBasi
$LN2@createBasi:
; Line 1030
	jmp	$LN8@createBasi
$LN7@createBasi:
; Line 1032
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN1@createBasi
	cmp	DWORD PTR _canon$[ebp], 0
	je	SHORT $LN1@createBasi
; Line 1033
	mov	eax, DWORD PTR _canon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
$LN1@createBasi:
; Line 1036
	mov	eax, DWORD PTR _t$[ebp]
$LN12@createBasi:
; Line 1037
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@createBasi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 856				; 00000358H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN34@createBasi:
	DD	4
	DD	$LN33@createBasi
$LN33@createBasi:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN28@createBasi
	DD	-104					; ffffff98H
	DD	4
	DD	$LN29@createBasi
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN30@createBasi
	DD	-512					; fffffe00H
	DD	376					; 00000178H
	DD	$LN31@createBasi
$LN31@createBasi:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN30@createBasi:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN29@createBasi:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN28@createBasi:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z$0:
	lea	ecx, DWORD PTR _parser$76937[ebp]
	jmp	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
__ehhandler$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-860]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createBasicInstance@Transliterator@icu_56@@KAPAV12@ABVUnicodeString@2@PBV32@@Z ENDP ; icu_56::Transliterator::createBasicInstance
EXTRN	??1TransliteratorAlias@icu_56@@QAE@XZ:PROC	; icu_56::TransliteratorAlias::~TransliteratorAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTransliteratorAlias@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTransliteratorAlias@icu_56@@QAEPAXI@Z PROC		; icu_56::TransliteratorAlias::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TransliteratorAlias@icu_56@@QAE@XZ	; icu_56::TransliteratorAlias::~TransliteratorAlias
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTransliteratorAlias@icu_56@@QAEPAXI@Z ENDP		; icu_56::TransliteratorAlias::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVNullTransliterator@icu_56@@@8		; icu_56::NullTransliterator `RTTI Type Descriptor'
PUBLIC	__$ArrayPad$
PUBLIC	?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createFromRules
EXTRN	?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ:PROC ; icu_56::TransliteratorParser::orphanCompoundFilter
EXTRN	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::CompoundTransliterator::CompoundTransliterator
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:PROC
EXTRN	?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB:BYTE ; icu_56::CompoundTransliterator::PASS_STRING
EXTRN	__imp_?isEmpty@UVector@icu_56@@QBECXZ:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??9type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@_W@Z:PROC
EXTRN	??0RuleBasedTransliterator@icu_56@@AAE@ABVUnicodeString@1@PAVTransliterationRuleData@1@C@Z:PROC ; icu_56::RuleBasedTransliterator::RuleBasedTransliterator
EXTRN	__imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z:PROC
EXTRN	??0NullTransliterator@icu_56@@QAE@XZ:PROC	; icu_56::NullTransliterator::NullTransliterator
EXTRN	?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorParser::parse
;	COMDAT ??_R0?AVNullTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNullTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NullTransliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNullTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$9
	DD	0cH
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$10
	DD	0dH
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$12
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv322 = -1424						; size = 4
tv385 = -1420						; size = 4
tv423 = -1416						; size = 4
tv368 = -1416						; size = 4
tv408 = -1412						; size = 4
tv380 = -1412						; size = 4
tv419 = -1408						; size = 4
tv366 = -1408						; size = 4
tv405 = -1404						; size = 4
tv375 = -1404						; size = 4
tv415 = -1400						; size = 4
tv364 = -1400						; size = 4
tv402 = -1396						; size = 4
tv341 = -1396						; size = 4
tv275 = -1396						; size = 4
tv254 = -1396						; size = 4
tv148 = -1396						; size = 4
tv93 = -1396						; size = 4
$T76982 = -1388						; size = 64
$T76983 = -1316						; size = 64
$T76985 = -1244						; size = 64
$T77012 = -1172						; size = 64
$T77013 = -1100						; size = 64
$T77014 = -1028						; size = 64
$T84946 = -956						; size = 4
$T84947 = -944						; size = 4
$T84948 = -932						; size = 4
$T84951 = -920						; size = 4
$T84952 = -908						; size = 4
$T84955 = -896						; size = 4
$T84956 = -884						; size = 4
$T84959 = -872						; size = 4
$T84960 = -860						; size = 4
$T84963 = -848						; size = 4
$T84964 = -836						; size = 4
$T84965 = -824						; size = 4
$T84968 = -812						; size = 4
$T84978 = -800						; size = 4
_temprbt$77011 = -596					; size = 4
_data$77009 = -584					; size = 4
_temp$77002 = -572					; size = 4
_idBlock$76999 = -560					; size = 4
_i$76994 = -548						; size = 4
_limit$76992 = -536					; size = 4
_passNumber$76991 = -524				; size = 4
_transliterators$76990 = -512				; size = 24
_filterPattern$76981 = -480				; size = 64
_parser$ = -408						; size = 376
_t$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_rules$ = 12						; size = 4
_dir$ = 16						; size = 4
_parseError$ = 20					; size = 4
_status$ = 24						; size = 4
?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::createFromRules, COMDAT
; Line 1053
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1412				; 00000584H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1424]
	mov	ecx, 353				; 00000161H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T84978[ebp], 0
; Line 1054
	mov	DWORD PTR _t$[ebp], 0
; Line 1056
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??0TransliteratorParser@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::TransliteratorParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1057
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dir$[ebp]
	push	edx
	mov	eax, DWORD PTR _rules$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?parse@TransliteratorParser@icu_56@@QAEXABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::TransliteratorParser::parse
; Line 1059
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@createFrom
; Line 1060
	mov	DWORD PTR $T84946[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
	mov	eax, DWORD PTR $T84946[ebp]
	jmp	$LN23@createFrom
$LN22@createFrom:
; Line 1064
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN21@createFrom
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN21@createFrom
; Line 1065
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84948[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84948[ebp], 0
	je	SHORT $LN25@createFrom
	mov	ecx, DWORD PTR $T84948[ebp]
	call	??0NullTransliterator@icu_56@@QAE@XZ	; icu_56::NullTransliterator::NullTransliterator
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN26@createFrom
$LN25@createFrom:
	mov	DWORD PTR tv93[ebp], 0
$LN26@createFrom:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T84947[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T84947[ebp]
	mov	DWORD PTR _t$[ebp], ecx
	jmp	$LN20@createFrom
$LN21@createFrom:
; Line 1067
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN19@createFrom
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN19@createFrom
; Line 1068
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84952[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T84952[ebp], 0
	je	SHORT $LN27@createFrom
	push	1
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84952[ebp]
	call	??0RuleBasedTransliterator@icu_56@@AAE@ABVUnicodeString@1@PAVTransliterationRuleData@1@C@Z ; icu_56::RuleBasedTransliterator::RuleBasedTransliterator
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN28@createFrom
$LN27@createFrom:
	mov	DWORD PTR tv148[ebp], 0
$LN28@createFrom:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T84951[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T84951[ebp]
	mov	DWORD PTR _t$[ebp], edx
	jmp	$LN20@createFrom
$LN19@createFrom:
; Line 1070
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN17@createFrom
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN17@createFrom
; Line 1075
	cmp	DWORD PTR _parser$[ebp+48], 0
	je	$LN16@createFrom
; Line 1076
	mov	esi, esp
	lea	ecx, DWORD PTR _filterPattern$76981[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1077
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _filterPattern$76981[ebp]
	push	eax
	mov	ecx, DWORD PTR _parser$[ebp+48]
	add	ecx, 4
	mov	edx, DWORD PTR _parser$[ebp+48]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1079
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	push	59					; 0000003bH
	lea	ecx, DWORD PTR $T76982[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv402[ebp], eax
	mov	edx, DWORD PTR tv402[ebp]
	mov	DWORD PTR tv364[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edi, esp
	mov	eax, DWORD PTR tv364[ebp]
	push	eax
	lea	ecx, DWORD PTR _filterPattern$76981[ebp]
	push	ecx
	lea	edx, DWORD PTR $T76983[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv405[ebp], eax
	mov	eax, DWORD PTR tv405[ebp]
	mov	DWORD PTR tv366[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv366[ebp]
	push	ecx
	lea	edx, DWORD PTR $T76985[ebp]
	push	edx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv408[ebp], eax
	mov	eax, DWORD PTR tv408[ebp]
	mov	DWORD PTR tv368[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv368[ebp]
	push	ecx
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _t$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T76985[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T76983[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T76982[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1080
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _filterPattern$76981[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1081
	jmp	SHORT $LN15@createFrom
$LN16@createFrom:
; Line 1082
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _t$[ebp], eax
$LN15@createFrom:
; Line 1085
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN14@createFrom
; Line 1086
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
$LN14@createFrom:
; Line 1089
	jmp	$LN20@createFrom
$LN17@createFrom:
; Line 1090
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1091
	mov	DWORD PTR _passNumber$76991[ebp], 1
; Line 1093
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$76992[ebp], eax
; Line 1094
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _limit$76992[ebp]
	jle	SHORT $LN12@createFrom
; Line 1095
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$76992[ebp], eax
$LN12@createFrom:
; Line 1097
	mov	DWORD PTR _i$76994[ebp], 0
	jmp	SHORT $LN11@createFrom
$LN10@createFrom:
	mov	eax, DWORD PTR _i$76994[ebp]
	add	eax, 1
	mov	DWORD PTR _i$76994[ebp], eax
$LN11@createFrom:
	mov	eax, DWORD PTR _i$76994[ebp]
	cmp	eax, DWORD PTR _limit$76992[ebp]
	jge	$LN9@createFrom
; Line 1098
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$76994[ebp], eax
	jge	$LN8@createFrom
; Line 1099
	mov	esi, esp
	mov	eax, DWORD PTR _i$76994[ebp]
	push	eax
	lea	ecx, DWORD PTR _parser$[ebp+24]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _idBlock$76999[ebp], eax
; Line 1100
	mov	esi, esp
	mov	ecx, DWORD PTR _idBlock$76999[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN8@createFrom
; Line 1101
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _idBlock$76999[ebp]
	push	edx
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _temp$77002[ebp], eax
; Line 1102
	cmp	DWORD PTR _temp$77002[ebp], 0
	je	SHORT $LN6@createFrom
	mov	esi, esp
	push	OFFSET ??_R0?AVNullTransliterator@icu_56@@@8
	mov	eax, DWORD PTR _temp$77002[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@createFrom
; Line 1103
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _temp$77002[ebp]
	push	ecx
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1104
	jmp	SHORT $LN8@createFrom
$LN6@createFrom:
; Line 1105
	mov	eax, DWORD PTR _temp$77002[ebp]
	mov	DWORD PTR $T84956[ebp], eax
	mov	ecx, DWORD PTR $T84956[ebp]
	mov	DWORD PTR $T84955[ebp], ecx
	cmp	DWORD PTR $T84955[ebp], 0
	je	SHORT $LN29@createFrom
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84955[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84955[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv254[ebp], eax
	jmp	SHORT $LN8@createFrom
$LN29@createFrom:
	mov	DWORD PTR tv254[ebp], 0
$LN8@createFrom:
; Line 1108
	mov	esi, esp
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN4@createFrom
; Line 1109
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _parser$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _data$77009[ebp], eax
; Line 1112
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84960[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T84960[ebp], 0
	je	$LN31@createFrom
	mov	eax, DWORD PTR _passNumber$76991[ebp]
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR _passNumber$76991[ebp]
	add	ecx, 1
	mov	DWORD PTR _passNumber$76991[ebp], ecx
	push	1
	mov	edx, DWORD PTR _data$77009[ebp]
	push	edx
	mov	esi, esp
	mov	eax, DWORD PTR tv275[ebp]
	push	eax
	lea	ecx, DWORD PTR $T77013[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv415[ebp], eax
	mov	ecx, DWORD PTR tv415[ebp]
	mov	DWORD PTR tv375[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR $T84978[ebp]
	or	edx, 1
	mov	DWORD PTR $T84978[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv375[ebp]
	push	eax
	mov	edi, esp
	push	OFFSET ?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB ; icu_56::CompoundTransliterator::PASS_STRING
	lea	ecx, DWORD PTR $T77012[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv419[ebp], eax
	mov	ecx, DWORD PTR tv419[ebp]
	mov	DWORD PTR tv380[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR $T84978[ebp]
	or	edx, 2
	mov	DWORD PTR $T84978[ebp], edx
	mov	eax, DWORD PTR tv380[ebp]
	push	eax
	lea	ecx, DWORD PTR $T77014[ebp]
	push	ecx
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv423[ebp], eax
	mov	edx, DWORD PTR tv423[ebp]
	mov	DWORD PTR tv385[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR $T84978[ebp]
	or	eax, 4
	mov	DWORD PTR $T84978[ebp], eax
	mov	ecx, DWORD PTR tv385[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T84960[ebp]
	call	??0RuleBasedTransliterator@icu_56@@AAE@ABVUnicodeString@1@PAVTransliterationRuleData@1@C@Z ; icu_56::RuleBasedTransliterator::RuleBasedTransliterator
	mov	DWORD PTR tv322[ebp], eax
	jmp	SHORT $LN32@createFrom
$LN31@createFrom:
	mov	DWORD PTR tv322[ebp], 0
$LN32@createFrom:
	mov	edx, DWORD PTR tv322[ebp]
	mov	DWORD PTR $T84959[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR $T84959[ebp]
	mov	DWORD PTR _temprbt$77011[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR $T84978[ebp]
	and	ecx, 4
	je	SHORT $LN50@createFrom
	and	DWORD PTR $T84978[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77014[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@createFrom:
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR $T84978[ebp]
	and	edx, 2
	je	SHORT $LN51@createFrom
	and	DWORD PTR $T84978[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77012[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@createFrom:
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR $T84978[ebp]
	and	eax, 1
	je	SHORT $LN52@createFrom
	and	DWORD PTR $T84978[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77013[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@createFrom:
; Line 1114
	cmp	DWORD PTR _temprbt$77011[ebp], 0
	jne	SHORT $LN3@createFrom
; Line 1115
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1116
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T84963[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
	mov	eax, DWORD PTR $T84963[ebp]
	jmp	$LN23@createFrom
$LN3@createFrom:
; Line 1118
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _temprbt$77011[ebp]
	push	ecx
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@createFrom:
; Line 1120
	jmp	$LN10@createFrom
$LN9@createFrom:
; Line 1122
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84965[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T84965[ebp], 0
	je	SHORT $LN33@createFrom
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _passNumber$76991[ebp]
	sub	edx, 1
	push	edx
	lea	eax, DWORD PTR _transliterators$76990[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84965[ebp]
	call	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
	mov	DWORD PTR tv341[ebp], eax
	jmp	SHORT $LN34@createFrom
$LN33@createFrom:
	mov	DWORD PTR tv341[ebp], 0
$LN34@createFrom:
	mov	ecx, DWORD PTR tv341[ebp]
	mov	DWORD PTR $T84964[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR $T84964[ebp]
	mov	DWORD PTR _t$[ebp], edx
; Line 1124
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN2@createFrom
; Line 1125
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
; Line 1126
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?orphanCompoundFilter@TransliteratorParser@icu_56@@QAEPAVUnicodeSet@2@XZ ; icu_56::TransliteratorParser::orphanCompoundFilter
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	call	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
$LN2@createFrom:
; Line 1128
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@createFrom:
; Line 1129
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createFrom
	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN1@createFrom
; Line 1130
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@createFrom:
; Line 1132
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T84968[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
	mov	eax, DWORD PTR $T84968[ebp]
$LN23@createFrom:
; Line 1133
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@createFrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1424				; 00000590H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN59@createFrom:
	DD	3
	DD	$LN58@createFrom
$LN58@createFrom:
	DD	-408					; fffffe68H
	DD	376					; 00000178H
	DD	$LN54@createFrom
	DD	-480					; fffffe20H
	DD	64					; 00000040H
	DD	$LN55@createFrom
	DD	-512					; fffffe00H
	DD	24					; 00000018H
	DD	$LN56@createFrom
$LN56@createFrom:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN55@createFrom:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN54@createFrom:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _parser$[ebp]
	jmp	??1TransliteratorParser@icu_56@@QAE@XZ	; icu_56::TransliteratorParser::~TransliteratorParser
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T84948[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T84952[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _filterPattern$76981[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76982[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76983[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76985[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR _transliterators$76990[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T84960[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$9:
	mov	eax, DWORD PTR $T84978[ebp]
	and	eax, 1
	je	$LN45@createFrom
	and	DWORD PTR $T84978[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77013[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN45@createFrom:
	ret	0
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$10:
	mov	eax, DWORD PTR $T84978[ebp]
	and	eax, 2
	je	$LN47@createFrom
	and	DWORD PTR $T84978[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77012[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN47@createFrom:
	ret	0
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$11:
	mov	eax, DWORD PTR $T84978[ebp]
	and	eax, 4
	je	$LN49@createFrom
	and	DWORD PTR $T84978[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77014[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN49@createFrom:
	ret	0
__unwindfunclet$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z$12:
	mov	esi, esp
	mov	eax, DWORD PTR $T84965[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::createFromRules
PUBLIC	??_C@_15HEEKGCFC@?$AA?3?$AA?3?$AA?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
;	COMDAT ??_C@_15HEEKGCFC@?$AA?3?$AA?3?$AA?$AA@
CONST	SEGMENT
??_C@_15HEEKGCFC@?$AA?3?$AA?3?$AA?$AA@ DB ':', 00H, ':', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1
__ehfuncinfo$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
tv144 = -396						; size = 4
tv146 = -392						; size = 4
$T77044 = -384						; size = 64
_c$77039 = -120						; size = 4
_i$77035 = -108						; size = 4
_id$77034 = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rulesSource$ = 8					; size = 4
_escapeUnprintable$ = 12				; size = 1
?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::Transliterator::toRules, COMDAT
; _this$ = ecx
; Line 1136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1139
	movsx	eax, BYTE PTR _escapeUnprintable$[ebp]
	test	eax, eax
	je	$LN5@toRules
; Line 1140
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1141
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _id$77034[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1142
	mov	DWORD PTR _i$77035[ebp], 0
$LN4@toRules:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$77034[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$77035[ebp], eax
	jge	SHORT $LN3@toRules
; Line 1143
	mov	esi, esp
	mov	eax, DWORD PTR _i$77035[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$77034[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$77039[ebp], eax
; Line 1144
	mov	esi, esp
	mov	eax, DWORD PTR _c$77039[ebp]
	push	eax
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	push	ecx
	call	DWORD PTR __imp_?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@toRules
; Line 1145
	mov	esi, esp
	mov	eax, DWORD PTR _c$77039[ebp]
	push	eax
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@toRules:
; Line 1147
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$77039[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$77035[ebp]
	mov	DWORD PTR _i$77035[ebp], ecx
; Line 1148
	jmp	SHORT $LN4@toRules
$LN3@toRules:
; Line 1149
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _id$77034[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@toRules
$LN5@toRules:
; Line 1150
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@toRules:
; Line 1153
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15HEEKGCFC@?$AA?3?$AA?3?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77044[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv144[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv144[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77044[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1154
	mov	esi, esp
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1155
	mov	eax, DWORD PTR _rulesSource$[ebp]
; Line 1156
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@toRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@toRules:
	DD	1
	DD	$LN12@toRules
$LN12@toRules:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN10@toRules
$LN10@toRules:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$77034[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77044[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::Transliterator::toRules
PUBLIC	??_R0?AVCompoundTransliterator@icu_56@@@8	; icu_56::CompoundTransliterator `RTTI Type Descriptor'
PUBLIC	?countElements@Transliterator@icu_56@@QBEHXZ	; icu_56::Transliterator::countElements
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVCompoundTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCompoundTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CompoundTransliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCompoundTransliterator@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?countElements@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv75 = -220						; size = 4
_ct$ = -20						; size = 4
_this$ = -8						; size = 4
?countElements@Transliterator@icu_56@@QBEHXZ PROC	; icu_56::Transliterator::countElements, COMDAT
; _this$ = ecx
; Line 1158
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1159
	push	0
	push	OFFSET ??_R0?AVCompoundTransliterator@icu_56@@@8
	push	OFFSET ??_R0?AVTransliterator@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ct$[ebp], eax
; Line 1160
	cmp	DWORD PTR _ct$[ebp], 0
	je	SHORT $LN3@countEleme
	mov	eax, DWORD PTR _ct$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _ct$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@countEleme
$LN3@countEleme:
	mov	DWORD PTR tv75[ebp], 0
$LN4@countEleme:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1161
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countElements@Transliterator@icu_56@@QBEHXZ ENDP	; icu_56::Transliterator::countElements
_TEXT	ENDS
PUBLIC	?getElement@Transliterator@icu_56@@QBEABV12@HAAW4UErrorCode@@@Z ; icu_56::Transliterator::getElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getElement@Transliterator@icu_56@@QBEABV12@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -244						; size = 4
tv79 = -244						; size = 4
$T85023 = -236						; size = 4
_n$ = -32						; size = 4
_cpd$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
_ec$ = 12						; size = 4
?getElement@Transliterator@icu_56@@QBEABV12@HAAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::getElement, COMDAT
; _this$ = ecx
; Line 1163
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1164
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getElement
; Line 1165
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN5@getElement
$LN4@getElement:
; Line 1167
	push	0
	push	OFFSET ??_R0?AVCompoundTransliterator@icu_56@@@8
	push	OFFSET ??_R0?AVTransliterator@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _cpd$[ebp], eax
; Line 1168
	cmp	DWORD PTR _cpd$[ebp], 0
	jne	SHORT $LN7@getElement
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN8@getElement
$LN7@getElement:
	mov	eax, DWORD PTR _cpd$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _cpd$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
$LN8@getElement:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _n$[ebp], ecx
; Line 1169
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN2@getElement
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jl	SHORT $LN3@getElement
$LN2@getElement:
; Line 1170
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 8
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN5@getElement
; Line 1172
	jmp	SHORT $LN5@getElement
$LN3@getElement:
; Line 1173
	cmp	DWORD PTR _n$[ebp], 1
	jne	SHORT $LN9@getElement
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN10@getElement
$LN9@getElement:
	mov	esi, esp
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cpd$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _cpd$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN10@getElement:
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T85023[ebp], eax
	mov	eax, DWORD PTR $T85023[ebp]
$LN5@getElement:
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getElement@Transliterator@icu_56@@QBEABV12@HAAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::getElement
_TEXT	ENDS
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::Transliterator::getSourceSet
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z$0
__ehfuncinfo$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z
_TEXT	SEGMENT
tv145 = -292						; size = 4
tv84 = -292						; size = 4
$T85028 = -284						; size = 4
$T85029 = -272						; size = 4
$T85032 = -260						; size = 4
$T85033 = -248						; size = 4
_deleteFilterSet$77076 = -41				; size = 1
_filterSet$77072 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z PROC ; icu_56::Transliterator::getSourceSet, COMDAT
; _this$ = ecx
; Line 1177
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1178
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1179
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	$LN4@getSourceS
; Line 1180
	push	0
	push	OFFSET ??_R0?AVUnicodeSet@icu_56@@@8
	push	OFFSET ??_R0?AVUnicodeFilter@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _filterSet$77072[ebp], eax
; Line 1181
	mov	BYTE PTR _deleteFilterSet$77076[ebp], 0
; Line 1184
	cmp	DWORD PTR _filterSet$77072[ebp], 0
	jne	$LN3@getSourceS
; Line 1185
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85029[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T85029[ebp], 0
	je	SHORT $LN7@getSourceS
	mov	esi, esp
	mov	ecx, DWORD PTR $T85029[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85029[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T85029[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T85029[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN8@getSourceS
$LN7@getSourceS:
	mov	DWORD PTR tv84[ebp], 0
$LN8@getSourceS:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T85028[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85028[ebp]
	mov	DWORD PTR _filterSet$77072[ebp], ecx
; Line 1187
	cmp	DWORD PTR _filterSet$77072[ebp], 0
	jne	SHORT $LN2@getSourceS
; Line 1188
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN5@getSourceS
$LN2@getSourceS:
; Line 1190
	mov	BYTE PTR _deleteFilterSet$77076[ebp], 1
; Line 1191
	mov	esi, esp
	mov	eax, DWORD PTR _filterSet$77072[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	add	ecx, 4
	mov	edx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getSourceS:
; Line 1193
	mov	esi, esp
	mov	eax, DWORD PTR _filterSet$77072[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1194
	movsx	eax, BYTE PTR _deleteFilterSet$77076[ebp]
	test	eax, eax
	je	SHORT $LN4@getSourceS
; Line 1195
	mov	eax, DWORD PTR _filterSet$77072[ebp]
	mov	DWORD PTR $T85033[ebp], eax
	mov	ecx, DWORD PTR $T85033[ebp]
	mov	DWORD PTR $T85032[ebp], ecx
	cmp	DWORD PTR $T85032[ebp], 0
	je	SHORT $LN9@getSourceS
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85032[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85032[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN4@getSourceS
$LN9@getSourceS:
	mov	DWORD PTR tv145[ebp], 0
$LN4@getSourceS:
; Line 1198
	mov	eax, DWORD PTR _result$[ebp]
$LN5@getSourceS:
; Line 1199
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T85029[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z ENDP ; icu_56::Transliterator::getSourceSet
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z PROC ; icu_56::Transliterator::handleGetSourceSet, COMDAT
; _this$ = ecx
; Line 1201
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1202
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handleGetSourceSet@Transliterator@icu_56@@UBEXAAVUnicodeSet@2@@Z ENDP ; icu_56::Transliterator::handleGetSourceSet
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z PROC ; icu_56::Transliterator::getTargetSet, COMDAT
; _this$ = ecx
; Line 1205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1206
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTargetSet@Transliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z ENDP ; icu_56::Transliterator::getTargetSet
_TEXT	ENDS
PUBLIC	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory
PUBLIC	?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::registerFactory
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z$0
__ehfuncinfo$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z
_TEXT	SEGMENT
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_factory$ = 12						; size = 4
_context$ = 16						; size = 4
?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z PROC ; icu_56::Transliterator::registerFactory, COMDAT
; Line 1212
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1213
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1214
	mov	DWORD PTR _ec$[ebp], 0
; Line 1215
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@registerFa
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@registerFa
$LN1@registerFa:
; Line 1216
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _factory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	call	?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ; icu_56::Transliterator::_registerFactory
	add	esp, 12					; 0000000cH
$LN2@registerFa:
; Line 1218
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@registerFa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@registerFa:
	DD	2
	DD	$LN9@registerFa
$LN9@registerFa:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@registerFa
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@registerFa
$LN7@registerFa:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@registerFa:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?registerFactory@Transliterator@icu_56@@SAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ENDP ; icu_56::Transliterator::registerFactory
EXTRN	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@P6APAVTransliterator@2@0TToken@42@@Z1CAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::put
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z
_TEXT	SEGMENT
_ec$ = -8						; size = 4
_id$ = 8						; size = 4
_factory$ = 12						; size = 4
_context$ = 16						; size = 4
?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z PROC ; icu_56::Transliterator::_registerFactory, COMDAT
; Line 1224
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1225
	mov	DWORD PTR _ec$[ebp], 0
; Line 1226
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _factory$[ebp]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@P6APAVTransliterator@2@0TToken@42@@Z1CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1227
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@registerFa@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@registerFa@2:
	DD	1
	DD	$LN4@registerFa@2
$LN4@registerFa@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@registerFa@2
$LN3@registerFa@2:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?_registerFactory@Transliterator@icu_56@@KAXABVUnicodeString@2@P6APAV12@0TToken@12@@Z1@Z ENDP ; icu_56::Transliterator::_registerFactory
_TEXT	ENDS
PUBLIC	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse
EXTRN	?registerSpecialInverse@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@0CAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorIDParser::registerSpecialInverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z
_TEXT	SEGMENT
_status$ = -8						; size = 4
_target$ = 8						; size = 4
_inverseTarget$ = 12					; size = 4
_bidirectional$ = 16					; size = 1
?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z PROC ; icu_56::Transliterator::_registerSpecialInverse, COMDAT
; Line 1233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1234
	mov	DWORD PTR _status$[ebp], 0
; Line 1235
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bidirectional$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inverseTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?registerSpecialInverse@TransliteratorIDParser@icu_56@@SAXABVUnicodeString@2@0CAAW4UErrorCode@@@Z ; icu_56::TransliteratorIDParser::registerSpecialInverse
	add	esp, 16					; 00000010H
; Line 1236
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@registerSp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@registerSp:
	DD	1
	DD	$LN4@registerSp
$LN4@registerSp:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@registerSp
$LN3@registerSp:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ENDP ; icu_56::Transliterator::_registerSpecialInverse
_TEXT	ENDS
PUBLIC	?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z ; icu_56::Transliterator::_registerInstance
PUBLIC	?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z ; icu_56::Transliterator::registerInstance
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z$0
__ehfuncinfo$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z
_TEXT	SEGMENT
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_adoptedPrototype$ = 8					; size = 4
?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z PROC ; icu_56::Transliterator::registerInstance, COMDAT
; Line 1251
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1252
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1253
	mov	DWORD PTR _ec$[ebp], 0
; Line 1254
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@registerIn
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@registerIn
$LN1@registerIn:
; Line 1255
	mov	eax, DWORD PTR _adoptedPrototype$[ebp]
	push	eax
	call	?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z ; icu_56::Transliterator::_registerInstance
	add	esp, 4
$LN2@registerIn:
; Line 1257
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@registerIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@registerIn:
	DD	2
	DD	$LN9@registerIn
$LN9@registerIn:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@registerIn
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@registerIn
$LN7@registerIn:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@registerIn:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z ENDP ; icu_56::Transliterator::registerInstance
EXTRN	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::put
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z
_TEXT	SEGMENT
_ec$ = -8						; size = 4
_adoptedPrototype$ = 8					; size = 4
?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z PROC ; icu_56::Transliterator::_registerInstance, COMDAT
; Line 1259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1260
	mov	DWORD PTR _ec$[ebp], 0
; Line 1261
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _adoptedPrototype$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1262
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@registerIn@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@registerIn@2:
	DD	1
	DD	$LN4@registerIn@2
$LN4@registerIn@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@registerIn@2
$LN3@registerIn@2:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?_registerInstance@Transliterator@icu_56@@KAXPAV12@@Z ENDP ; icu_56::Transliterator::_registerInstance
_TEXT	ENDS
PUBLIC	?_registerAlias@Transliterator@icu_56@@KAXABVUnicodeString@2@0@Z ; icu_56::Transliterator::_registerAlias
PUBLIC	?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z ; icu_56::Transliterator::registerAlias
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z$0
__ehfuncinfo$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z
_TEXT	SEGMENT
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_aliasID$ = 8						; size = 4
_realID$ = 12						; size = 4
?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z PROC ; icu_56::Transliterator::registerAlias, COMDAT
; Line 1265
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1266
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1267
	mov	DWORD PTR _ec$[ebp], 0
; Line 1268
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@registerAl
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@registerAl
$LN1@registerAl:
; Line 1269
	mov	eax, DWORD PTR _realID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aliasID$[ebp]
	push	ecx
	call	?_registerAlias@Transliterator@icu_56@@KAXABVUnicodeString@2@0@Z ; icu_56::Transliterator::_registerAlias
	add	esp, 8
$LN2@registerAl:
; Line 1271
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@registerAl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@registerAl:
	DD	2
	DD	$LN9@registerAl
$LN9@registerAl:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@registerAl
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@registerAl
$LN7@registerAl:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@registerAl:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?registerAlias@Transliterator@icu_56@@SAXABVUnicodeString@2@0@Z ENDP ; icu_56::Transliterator::registerAlias
EXTRN	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@0CCAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::put
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_registerAlias@Transliterator@icu_56@@KAXABVUnicodeString@2@0@Z
_TEXT	SEGMENT
_ec$ = -8						; size = 4
_aliasID$ = 8						; size = 4
_realID$ = 12						; size = 4
?_registerAlias@Transliterator@icu_56@@KAXABVUnicodeString@2@0@Z PROC ; icu_56::Transliterator::_registerAlias, COMDAT
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1275
	mov	DWORD PTR _ec$[ebp], 0
; Line 1276
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _realID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aliasID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@0CCAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1277
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@registerAl@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@registerAl@2:
	DD	1
	DD	$LN4@registerAl@2
$LN4@registerAl@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@registerAl@2
$LN3@registerAl@2:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?_registerAlias@Transliterator@icu_56@@KAXABVUnicodeString@2@0@Z ENDP ; icu_56::Transliterator::_registerAlias
_TEXT	ENDS
PUBLIC	?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z ; icu_56::Transliterator::unregister
EXTRN	?remove@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::TransliteratorRegistry::remove
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z$0
__ehfuncinfo$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::unregister, COMDAT
; Line 1287
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1288
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1289
	mov	DWORD PTR _ec$[ebp], 0
; Line 1290
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@unregister
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@unregister
$LN1@unregister:
; Line 1291
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?remove@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TransliteratorRegistry::remove
$LN2@unregister:
; Line 1293
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@unregister
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@unregister:
	DD	2
	DD	$LN9@unregister
$LN9@unregister:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@unregister
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@unregister
$LN7@unregister:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@unregister:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::unregister
PUBLIC	?countAvailableIDs@Transliterator@icu_56@@SAHXZ	; icu_56::Transliterator::countAvailableIDs
EXTRN	?countAvailableIDs@TransliteratorRegistry@icu_56@@QBEHXZ:PROC ; icu_56::TransliteratorRegistry::countAvailableIDs
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?countAvailableIDs@Transliterator@icu_56@@SAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?countAvailableIDs@Transliterator@icu_56@@SAHXZ$0
__ehfuncinfo$?countAvailableIDs@Transliterator@icu_56@@SAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?countAvailableIDs@Transliterator@icu_56@@SAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?countAvailableIDs@Transliterator@icu_56@@SAHXZ
_TEXT	SEGMENT
$T85123 = -248						; size = 4
_ec$ = -44						; size = 4
_lock$ = -32						; size = 4
_retVal$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?countAvailableIDs@Transliterator@icu_56@@SAHXZ PROC	; icu_56::Transliterator::countAvailableIDs, COMDAT
; Line 1301
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?countAvailableIDs@Transliterator@icu_56@@SAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1302
	mov	DWORD PTR _retVal$[ebp], 0
; Line 1303
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1304
	mov	DWORD PTR _ec$[ebp], 0
; Line 1305
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@countAvail
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@countAvail
$LN1@countAvail:
; Line 1306
	mov	ecx, DWORD PTR _registry
	call	?countAvailableIDs@TransliteratorRegistry@icu_56@@QBEHXZ ; icu_56::TransliteratorRegistry::countAvailableIDs
	mov	DWORD PTR _retVal$[ebp], eax
$LN2@countAvail:
; Line 1308
	mov	eax, DWORD PTR _retVal$[ebp]
	mov	DWORD PTR $T85123[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85123[ebp]
; Line 1309
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@countAvail
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@countAvail:
	DD	2
	DD	$LN9@countAvail
$LN9@countAvail:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@countAvail
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN7@countAvail
$LN7@countAvail:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@countAvail:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?countAvailableIDs@Transliterator@icu_56@@SAHXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?countAvailableIDs@Transliterator@icu_56@@SAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?countAvailableIDs@Transliterator@icu_56@@SAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?countAvailableIDs@Transliterator@icu_56@@SAHXZ ENDP	; icu_56::Transliterator::countAvailableIDs
PUBLIC	??_C@_1BI@FKIEENIH@?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@3@H@Z@4JA@6f6f2232 ; `icu_56::Transliterator::getAvailableID'::`2'::__LINE__Var
PUBLIC	?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z ; icu_56::Transliterator::getAvailableID
EXTRN	?getAvailableID@TransliteratorRegistry@icu_56@@QBEABVUnicodeString@2@H@Z:PROC ; icu_56::TransliteratorRegistry::getAvailableID
;	COMDAT ??_C@_1BI@FKIEENIH@?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@FKIEENIH@?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@3@H@Z@4JA@6f6f2232
_DATA	SEGMENT
?__LINE__Var@?1??getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@3@H@Z@4JA@6f6f2232 DD 0525H ; `icu_56::Transliterator::getAvailableID'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_ec$ = -20						; size = 4
_result$ = -8						; size = 4
_index$ = 8						; size = 4
?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z PROC ; icu_56::Transliterator::getAvailableID, COMDAT
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1318
	mov	DWORD PTR _result$[ebp], 0
; Line 1319
	push	OFFSET _registryMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1320
	mov	DWORD PTR _ec$[ebp], 0
; Line 1321
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@getAvailab
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getAvailab
$LN1@getAvailab:
; Line 1322
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?getAvailableID@TransliteratorRegistry@icu_56@@QBEABVUnicodeString@2@H@Z ; icu_56::TransliteratorRegistry::getAvailableID
	mov	DWORD PTR _result$[ebp], eax
$LN2@getAvailab:
; Line 1324
	push	OFFSET _registryMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 1325
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN5@getAvailab
	mov	eax, DWORD PTR ?__LINE__Var@?1??getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@3@H@Z@4JA@6f6f2232
	add	eax, 8
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@DBIMEHJF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BI@FKIEENIH@?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@getAvailab:
; Line 1326
	mov	eax, DWORD PTR _result$[ebp]
; Line 1327
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getAvailab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@getAvailab:
	DD	1
	DD	$LN7@getAvailab
$LN7@getAvailab:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@getAvailab
$LN6@getAvailab:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z ENDP ; icu_56::Transliterator::getAvailableID
_TEXT	ENDS
PUBLIC	?getAvailableIDs@Transliterator@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::Transliterator::getAvailableIDs
EXTRN	?getAvailableIDs@TransliteratorRegistry@icu_56@@QBEPAVStringEnumeration@2@XZ:PROC ; icu_56::TransliteratorRegistry::getAvailableIDs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAvailableIDs@Transliterator@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -8						; size = 4
_ec$ = 8						; size = 4
?getAvailableIDs@Transliterator@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::getAvailableIDs, COMDAT
; Line 1329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1330
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getAvailab@2
	xor	eax, eax
	jmp	SHORT $LN5@getAvailab@2
$LN4@getAvailab@2:
; Line 1331
	mov	DWORD PTR _result$[ebp], 0
; Line 1332
	push	OFFSET _registryMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1333
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN2@getAvailab@2
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@getAvailab@2
$LN2@getAvailab@2:
; Line 1334
	mov	ecx, DWORD PTR _registry
	call	?getAvailableIDs@TransliteratorRegistry@icu_56@@QBEPAVStringEnumeration@2@XZ ; icu_56::TransliteratorRegistry::getAvailableIDs
	mov	DWORD PTR _result$[ebp], eax
$LN3@getAvailab@2:
; Line 1336
	push	OFFSET _registryMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 1337
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@getAvailab@2
; Line 1338
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 65568			; 00010020H
$LN1@getAvailab@2:
; Line 1340
	mov	eax, DWORD PTR _result$[ebp]
$LN5@getAvailab@2:
; Line 1341
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getAvailableIDs@Transliterator@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::getAvailableIDs
_TEXT	ENDS
PUBLIC	?_countAvailableSources@Transliterator@icu_56@@KAHXZ ; icu_56::Transliterator::_countAvailableSources
PUBLIC	?countAvailableSources@Transliterator@icu_56@@SAHXZ ; icu_56::Transliterator::countAvailableSources
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?countAvailableSources@Transliterator@icu_56@@SAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?countAvailableSources@Transliterator@icu_56@@SAHXZ$0
__ehfuncinfo$?countAvailableSources@Transliterator@icu_56@@SAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?countAvailableSources@Transliterator@icu_56@@SAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?countAvailableSources@Transliterator@icu_56@@SAHXZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T85145 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?countAvailableSources@Transliterator@icu_56@@SAHXZ PROC ; icu_56::Transliterator::countAvailableSources, COMDAT
; Line 1343
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?countAvailableSources@Transliterator@icu_56@@SAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1344
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1345
	mov	DWORD PTR _ec$[ebp], 0
; Line 1346
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN3@countAvail@2
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@countAvail@2
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@countAvail@2
$LN3@countAvail@2:
	call	?_countAvailableSources@Transliterator@icu_56@@KAHXZ ; icu_56::Transliterator::_countAvailableSources
	mov	DWORD PTR tv74[ebp], eax
$LN4@countAvail@2:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T85145[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85145[ebp]
; Line 1347
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@countAvail@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@countAvail@2:
	DD	2
	DD	$LN9@countAvail@2
$LN9@countAvail@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@countAvail@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@countAvail@2
$LN7@countAvail@2:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@countAvail@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?countAvailableSources@Transliterator@icu_56@@SAHXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?countAvailableSources@Transliterator@icu_56@@SAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?countAvailableSources@Transliterator@icu_56@@SAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?countAvailableSources@Transliterator@icu_56@@SAHXZ ENDP ; icu_56::Transliterator::countAvailableSources
PUBLIC	?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z ; icu_56::Transliterator::_getAvailableSource
PUBLIC	?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z ; icu_56::Transliterator::getAvailableSource
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z$0
__ehfuncinfo$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z
_TEXT	SEGMENT
$T85161 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_result$ = 12						; size = 4
?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z PROC ; icu_56::Transliterator::getAvailableSource, COMDAT
; Line 1350
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1351
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1352
	mov	DWORD PTR _ec$[ebp], 0
; Line 1353
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@getAvailab@3
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getAvailab@3
$LN1@getAvailab@3:
; Line 1354
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	call	?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z ; icu_56::Transliterator::_getAvailableSource
	add	esp, 8
$LN2@getAvailab@3:
; Line 1356
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T85161[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85161[ebp]
; Line 1357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getAvailab@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@getAvailab@3:
	DD	2
	DD	$LN9@getAvailab@3
$LN9@getAvailab@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@getAvailab@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@getAvailab@3
$LN7@getAvailab@3:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@getAvailab@3:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAvailableSource@Transliterator@icu_56@@SAAAVUnicodeString@2@HAAV32@@Z ENDP ; icu_56::Transliterator::getAvailableSource
PUBLIC	?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z ; icu_56::Transliterator::_countAvailableTargets
PUBLIC	?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::Transliterator::countAvailableTargets
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z$0
__ehfuncinfo$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T85175 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::countAvailableTargets, COMDAT
; Line 1359
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1360
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1361
	mov	DWORD PTR _ec$[ebp], 0
; Line 1362
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN3@countAvail@3
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@countAvail@3
	mov	DWORD PTR tv75[ebp], 0
	jmp	SHORT $LN4@countAvail@3
$LN3@countAvail@3:
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	call	?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z ; icu_56::Transliterator::_countAvailableTargets
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
$LN4@countAvail@3:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T85175[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85175[ebp]
; Line 1363
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@countAvail@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@countAvail@3:
	DD	2
	DD	$LN9@countAvail@3
$LN9@countAvail@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@countAvail@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@countAvail@3
$LN7@countAvail@3:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@countAvail@3:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?countAvailableTargets@Transliterator@icu_56@@SAHABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::countAvailableTargets
PUBLIC	?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z ; icu_56::Transliterator::_getAvailableTarget
PUBLIC	?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z ; icu_56::Transliterator::getAvailableTarget
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z$0
__ehfuncinfo$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z
_TEXT	SEGMENT
$T85191 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_source$ = 12						; size = 4
_result$ = 16						; size = 4
?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z PROC ; icu_56::Transliterator::getAvailableTarget, COMDAT
; Line 1367
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1368
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1369
	mov	DWORD PTR _ec$[ebp], 0
; Line 1370
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@getAvailab@4
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getAvailab@4
$LN1@getAvailab@4:
; Line 1371
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	call	?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z ; icu_56::Transliterator::_getAvailableTarget
	add	esp, 12					; 0000000cH
$LN2@getAvailab@4:
; Line 1373
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T85191[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85191[ebp]
; Line 1374
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getAvailab@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@getAvailab@4:
	DD	2
	DD	$LN9@getAvailab@4
$LN9@getAvailab@4:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@getAvailab@4
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@getAvailab@4
$LN7@getAvailab@4:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@getAvailab@4:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAvailableTarget@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@AAV32@@Z ENDP ; icu_56::Transliterator::getAvailableTarget
PUBLIC	?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z ; icu_56::Transliterator::_countAvailableVariants
PUBLIC	?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z ; icu_56::Transliterator::countAvailableVariants
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z$0
__ehfuncinfo$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T85205 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
_target$ = 12						; size = 4
?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z PROC ; icu_56::Transliterator::countAvailableVariants, COMDAT
; Line 1377
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1378
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1379
	mov	DWORD PTR _ec$[ebp], 0
; Line 1380
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN3@countAvail@4
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@countAvail@4
	mov	DWORD PTR tv76[ebp], 0
	jmp	SHORT $LN4@countAvail@4
$LN3@countAvail@4:
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z ; icu_56::Transliterator::_countAvailableVariants
	add	esp, 8
	mov	DWORD PTR tv76[ebp], eax
$LN4@countAvail@4:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T85205[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85205[ebp]
; Line 1381
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@countAvail@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@countAvail@4:
	DD	2
	DD	$LN9@countAvail@4
$LN9@countAvail@4:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@countAvail@4
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@countAvail@4
$LN7@countAvail@4:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@countAvail@4:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?countAvailableVariants@Transliterator@icu_56@@SAHABVUnicodeString@2@0@Z ENDP ; icu_56::Transliterator::countAvailableVariants
PUBLIC	?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z ; icu_56::Transliterator::_getAvailableVariant
PUBLIC	?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z ; icu_56::Transliterator::getAvailableVariant
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z$0
__ehfuncinfo$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z
_TEXT	SEGMENT
$T85221 = -236						; size = 4
_ec$ = -32						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_source$ = 12						; size = 4
_target$ = 16						; size = 4
_result$ = 20						; size = 4
?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z PROC ; icu_56::Transliterator::getAvailableVariant, COMDAT
; Line 1386
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1387
	mov	esi, esp
	push	OFFSET _registryMutex
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1388
	mov	DWORD PTR _ec$[ebp], 0
; Line 1389
	cmp	DWORD PTR _registry, 0
	jne	SHORT $LN1@getAvailab@5
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ; icu_56::Transliterator::initializeRegistry
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getAvailab@5
$LN1@getAvailab@5:
; Line 1390
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z ; icu_56::Transliterator::_getAvailableVariant
	add	esp, 16					; 00000010H
$LN2@getAvailab@5:
; Line 1392
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T85221[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85221[ebp]
; Line 1393
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getAvailab@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@getAvailab@5:
	DD	2
	DD	$LN9@getAvailab@5
$LN9@getAvailab@5:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@getAvailab@5
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@getAvailab@5
$LN7@getAvailab@5:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN6@getAvailab@5:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lock$[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAvailableVariant@Transliterator@icu_56@@SAAAVUnicodeString@2@HABV32@0AAV32@@Z ENDP ; icu_56::Transliterator::getAvailableVariant
EXTRN	?countAvailableSources@TransliteratorRegistry@icu_56@@QBEHXZ:PROC ; icu_56::TransliteratorRegistry::countAvailableSources
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_countAvailableSources@Transliterator@icu_56@@KAHXZ
_TEXT	SEGMENT
?_countAvailableSources@Transliterator@icu_56@@KAHXZ PROC ; icu_56::Transliterator::_countAvailableSources, COMDAT
; Line 1395
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1396
	mov	ecx, DWORD PTR _registry
	call	?countAvailableSources@TransliteratorRegistry@icu_56@@QBEHXZ ; icu_56::TransliteratorRegistry::countAvailableSources
; Line 1397
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_countAvailableSources@Transliterator@icu_56@@KAHXZ ENDP ; icu_56::Transliterator::_countAvailableSources
_TEXT	ENDS
EXTRN	?getAvailableSource@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HAAV32@@Z:PROC ; icu_56::TransliteratorRegistry::getAvailableSource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_result$ = 12						; size = 4
?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z PROC ; icu_56::Transliterator::_getAvailableSource, COMDAT
; Line 1400
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1401
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?getAvailableSource@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HAAV32@@Z ; icu_56::TransliteratorRegistry::getAvailableSource
; Line 1402
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_getAvailableSource@Transliterator@icu_56@@KAAAVUnicodeString@2@HAAV32@@Z ENDP ; icu_56::Transliterator::_getAvailableSource
_TEXT	ENDS
EXTRN	?countAvailableTargets@TransliteratorRegistry@icu_56@@QBEHABVUnicodeString@2@@Z:PROC ; icu_56::TransliteratorRegistry::countAvailableTargets
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::_countAvailableTargets, COMDAT
; Line 1404
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1405
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?countAvailableTargets@TransliteratorRegistry@icu_56@@QBEHABVUnicodeString@2@@Z ; icu_56::TransliteratorRegistry::countAvailableTargets
; Line 1406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_countAvailableTargets@Transliterator@icu_56@@KAHABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::_countAvailableTargets
_TEXT	ENDS
EXTRN	?getAvailableTarget@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HABV32@AAV32@@Z:PROC ; icu_56::TransliteratorRegistry::getAvailableTarget
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_source$ = 12						; size = 4
_result$ = 16						; size = 4
?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z PROC ; icu_56::Transliterator::_getAvailableTarget, COMDAT
; Line 1410
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1411
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _registry
	call	?getAvailableTarget@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HABV32@AAV32@@Z ; icu_56::TransliteratorRegistry::getAvailableTarget
; Line 1412
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_getAvailableTarget@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@AAV32@@Z ENDP ; icu_56::Transliterator::_getAvailableTarget
_TEXT	ENDS
EXTRN	?countAvailableVariants@TransliteratorRegistry@icu_56@@QBEHABVUnicodeString@2@0@Z:PROC ; icu_56::TransliteratorRegistry::countAvailableVariants
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
_target$ = 12						; size = 4
?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z PROC ; icu_56::Transliterator::_countAvailableVariants, COMDAT
; Line 1415
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1416
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?countAvailableVariants@TransliteratorRegistry@icu_56@@QBEHABVUnicodeString@2@0@Z ; icu_56::TransliteratorRegistry::countAvailableVariants
; Line 1417
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_countAvailableVariants@Transliterator@icu_56@@KAHABVUnicodeString@2@0@Z ENDP ; icu_56::Transliterator::_countAvailableVariants
_TEXT	ENDS
EXTRN	?getAvailableVariant@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HABV32@0AAV32@@Z:PROC ; icu_56::TransliteratorRegistry::getAvailableVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_source$ = 12						; size = 4
_target$ = 16						; size = 4
_result$ = 20						; size = 4
?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z PROC ; icu_56::Transliterator::_getAvailableVariant, COMDAT
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1423
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registry
	call	?getAvailableVariant@TransliteratorRegistry@icu_56@@QBEAAVUnicodeString@2@HABV32@0AAV32@@Z ; icu_56::TransliteratorRegistry::getAvailableVariant
; Line 1424
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_getAvailableVariant@Transliterator@icu_56@@KAAAVUnicodeString@2@HABV32@0AAV32@@Z ENDP ; icu_56::Transliterator::_getAvailableVariant
_TEXT	ENDS
PUBLIC	_utrans_transliterator_cleanup_56
PUBLIC	??_C@_1M@MNHBCACD@?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@ODOEPGHK@?$AAU?$AAp?$AAp?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@KODFPCGL@?$AAL?$AAo?$AAw?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_19HGHALIPE@?$AAN?$AAu?$AAl?$AAl?$AA?$AA@	; `string'
PUBLIC	?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByKey
PUBLIC	??_C@_09HPKLLIJF@direction?$AA@			; `string'
PUBLIC	??_C@_08NJJFDENH@resource?$AA@			; `string'
PUBLIC	??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z	; icu_56::TransliteratorRegistry::`scalar deleting destructor'
PUBLIC	__$ArrayPad$
EXTRN	_ucln_i18n_registerCleanup_56:PROC
EXTRN	?registerIDs@AnyTransliterator@icu_56@@CAXXZ:PROC ; icu_56::AnyTransliterator::registerIDs
EXTRN	?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ:PROC ; icu_56::NormalizationTransliterator::registerIDs
EXTRN	?registerIDs@UnescapeTransliterator@icu_56@@SAXXZ:PROC ; icu_56::UnescapeTransliterator::registerIDs
EXTRN	?registerIDs@EscapeTransliterator@icu_56@@SAXXZ:PROC ; icu_56::EscapeTransliterator::registerIDs
EXTRN	?registerIDs@RemoveTransliterator@icu_56@@SAXXZ:PROC ; icu_56::RemoveTransliterator::registerIDs
EXTRN	??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z:PROC ; icu_56::BreakTransliterator::BreakTransliterator
EXTRN	??0NameUnicodeTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z:PROC ; icu_56::NameUnicodeTransliterator::NameUnicodeTransliterator
EXTRN	??0UnicodeNameTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z:PROC ; icu_56::UnicodeNameTransliterator::UnicodeNameTransliterator
EXTRN	??0TitlecaseTransliterator@icu_56@@QAE@XZ:PROC	; icu_56::TitlecaseTransliterator::TitlecaseTransliterator
EXTRN	??0UppercaseTransliterator@icu_56@@QAE@XZ:PROC	; icu_56::UppercaseTransliterator::UppercaseTransliterator
EXTRN	??0LowercaseTransliterator@icu_56@@QAE@XZ:PROC	; icu_56::LowercaseTransliterator::LowercaseTransliterator
EXTRN	_ures_close_56:PROC
EXTRN	_ures_getString_56:PROC
EXTRN	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@0W4UTransDirection@@CCAAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::put
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	_u_charsToUChars_56:PROC
EXTRN	_ures_getNextResource_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	_ures_getByIndex_56:PROC
EXTRN	_ures_getSize_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	??0TransliteratorRegistry@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorRegistry::TransliteratorRegistry
;	COMDAT ??_C@_1M@MNHBCACD@?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@MNHBCACD@?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?$AA@ DB 'T', 00H, 'i', 00H
	DB	't', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@ODOEPGHK@?$AAU?$AAp?$AAp?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@ODOEPGHK@?$AAU?$AAp?$AAp?$AAe?$AAr?$AA?$AA@ DB 'U', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KODFPCGL@?$AAL?$AAo?$AAw?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@KODFPCGL@?$AAL?$AAo?$AAw?$AAe?$AAr?$AA?$AA@ DB 'L', 00H, 'o', 00H
	DB	'w', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19HGHALIPE@?$AAN?$AAu?$AAl?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_19HGHALIPE@?$AAN?$AAu?$AAl?$AAl?$AA?$AA@ DB 'N', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPKLLIJF@direction?$AA@
CONST	SEGMENT
??_C@_09HPKLLIJF@direction?$AA@ DB 'direction', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJJFDENH@resource?$AA@
CONST	SEGMENT
??_C@_08NJJFDENH@resource?$AA@ DB 'resource', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$17
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv563 = -1580						; size = 4
tv559 = -1580						; size = 4
tv555 = -1580						; size = 4
tv613 = -1576						; size = 4
tv607 = -1576						; size = 4
tv601 = -1576						; size = 4
tv561 = -1572						; size = 4
tv557 = -1572						; size = 4
tv553 = -1572						; size = 4
tv544 = -1572						; size = 4
tv510 = -1572						; size = 4
tv508 = -1572						; size = 4
tv610 = -1568						; size = 4
tv604 = -1568						; size = 4
tv598 = -1568						; size = 4
tv574 = -1568						; size = 4
tv571 = -1568						; size = 4
tv568 = -1568						; size = 4
tv395 = -1568						; size = 4
tv390 = -1568						; size = 4
tv379 = -1568						; size = 4
tv368 = -1568						; size = 4
tv357 = -1568						; size = 4
tv346 = -1568						; size = 4
tv335 = -1568						; size = 4
tv324 = -1568						; size = 4
tv307 = -1568						; size = 4
tv299 = -1568						; size = 4
tv291 = -1568						; size = 4
tv251 = -1568						; size = 4
tv244 = -1568						; size = 4
tv237 = -1568						; size = 4
tv230 = -1568						; size = 4
tv163 = -1568						; size = 4
tv82 = -1568						; size = 4
tv73 = -1568						; size = 4
$T85248 = -1560						; size = 4
$T85249 = -1548						; size = 4
$T85252 = -1536						; size = 4
$T85253 = -1524						; size = 4
$T85256 = -1512						; size = 4
$T85257 = -1500						; size = 4
$T85260 = -1488						; size = 4
$T85261 = -1476						; size = 4
$T85264 = -1464						; size = 4
$T85265 = -1452						; size = 4
$T85268 = -1440						; size = 4
$T85269 = -1428						; size = 4
$T85272 = -1416						; size = 4
$T85273 = -1404						; size = 4
$T85276 = -1392						; size = 4
$T85277 = -1380						; size = 4
$T85280 = -1368						; size = 4
$T85281 = -1356						; size = 4
$T85284 = -1344						; size = 4
$T85285 = -1332						; size = 4
$T85288 = -1320						; size = 4
$T85289 = -1308						; size = 4
$T85292 = -1296						; size = 4
$T85293 = -1284						; size = 4
$T85296 = -1272						; size = 4
$T85297 = -1260						; size = 4
$T85300 = -1248						; size = 4
$T85301 = -1236						; size = 4
$T85304 = -1224						; size = 4
$T85305 = -1212						; size = 4
$T85308 = -1200						; size = 4
$T85309 = -1188						; size = 4
$T85312 = -1176						; size = 4
$T85313 = -1164						; size = 4
$T77288 = -1152						; size = 64
$T77290 = -1080						; size = 64
$T77292 = -1008						; size = 64
$T77347 = -936						; size = 64
$T77349 = -864						; size = 64
$T77352 = -792						; size = 64
$T77354 = -720						; size = 64
$T77358 = -648						; size = 64
$T77360 = -576						; size = 64
_tempBreakTranslit$ = -312				; size = 4
_tempNameUnicodeTranslit$ = -300			; size = 4
_tempUnicodeTranslit$ = -288				; size = 4
_tempTitlecaseTranslit$ = -276				; size = 4
_tempUppercaseTranslit$ = -264				; size = 4
_tempLowercaseTranslit$ = -252				; size = 4
_tempNullTranslit$ = -240				; size = 4
_dir$77287 = -228					; size = 4
_visible$77286 = -213					; size = 1
_resString$77279 = -204					; size = 4
_len$77278 = -192					; size = 4
_type$77276 = -180					; size = 2
_typeStr$77275 = -168					; size = 4
_res$77274 = -156					; size = 4
_id$77273 = -144					; size = 64
_maxRows$ = -72						; size = 4
_row$ = -60						; size = 4
_colBund$ = -48						; size = 4
_transIDs$ = -36					; size = 4
_bundle$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z PROC ; icu_56::Transliterator::initializeRegistry, COMDAT
; Line 1453
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1568				; 00000620H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1580]
	mov	ecx, 392				; 00000188H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1454
	cmp	DWORD PTR _registry, 0
	je	SHORT $LN15@initialize
; Line 1455
	mov	al, 1
	jmp	$LN16@initialize
$LN15@initialize:
; Line 1458
	mov	esi, esp
	push	136					; 00000088H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85249[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T85249[ebp], 0
	je	SHORT $LN18@initialize
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T85249[ebp]
	call	??0TransliteratorRegistry@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::TransliteratorRegistry
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN19@initialize
$LN18@initialize:
	mov	DWORD PTR tv73[ebp], 0
$LN19@initialize:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T85248[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T85248[ebp]
	mov	DWORD PTR _registry, edx
; Line 1459
	cmp	DWORD PTR _registry, 0
	je	SHORT $LN13@initialize
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@initialize
$LN13@initialize:
; Line 1460
	mov	eax, DWORD PTR _registry
	mov	DWORD PTR $T85253[ebp], eax
	mov	ecx, DWORD PTR $T85253[ebp]
	mov	DWORD PTR $T85252[ebp], ecx
	cmp	DWORD PTR $T85252[ebp], 0
	je	SHORT $LN20@initialize
	push	1
	mov	ecx, DWORD PTR $T85252[ebp]
	call	??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN21@initialize
$LN20@initialize:
	mov	DWORD PTR tv82[ebp], 0
$LN21@initialize:
; Line 1461
	mov	DWORD PTR _registry, 0
; Line 1462
	xor	al, al
	jmp	$LN16@initialize
$LN14@initialize:
; Line 1502
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0BC@KHBAGMKF@icudt56l?9translit?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 1503
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _RB_RULE_BASED_IDS
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _transIDs$[ebp], eax
; Line 1506
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN12@initialize
; Line 1507
	mov	eax, DWORD PTR _transIDs$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _maxRows$[ebp], eax
; Line 1508
	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN11@initialize
$LN10@initialize:
	mov	eax, DWORD PTR _row$[ebp]
	add	eax, 1
	mov	DWORD PTR _row$[ebp], eax
$LN11@initialize:
	mov	eax, DWORD PTR _row$[ebp]
	cmp	eax, DWORD PTR _maxRows$[ebp]
	jge	$LN12@initialize
; Line 1509
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _row$[ebp]
	push	ecx
	mov	edx, DWORD PTR _transIDs$[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _colBund$[ebp], eax
; Line 1510
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN8@initialize
; Line 1511
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _colBund$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _id$77273[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1512
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _colBund$[ebp]
	push	ecx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$77274[ebp], eax
; Line 1513
	mov	eax, DWORD PTR _res$77274[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _typeStr$77275[ebp], eax
; Line 1515
	push	1
	lea	eax, DWORD PTR _type$77276[ebp]
	push	eax
	mov	ecx, DWORD PTR _typeStr$77275[ebp]
	push	ecx
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 1517
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN7@initialize
; Line 1518
	mov	DWORD PTR _len$77278[ebp], 0
; Line 1520
	movzx	eax, WORD PTR _type$77276[ebp]
	mov	DWORD PTR tv163[ebp], eax
	cmp	DWORD PTR tv163[ebp], 97		; 00000061H
	je	$LN3@initialize
	cmp	DWORD PTR tv163[ebp], 102		; 00000066H
	je	SHORT $LN4@initialize
	cmp	DWORD PTR tv163[ebp], 105		; 00000069H
	je	SHORT $LN4@initialize
	jmp	$LN7@initialize
$LN4@initialize:
; Line 1527
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$77278[ebp]
	push	ecx
	push	OFFSET ??_C@_08NJJFDENH@resource?$AA@
	mov	edx, DWORD PTR _res$77274[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resString$77279[ebp], eax
; Line 1528
	movzx	eax, WORD PTR _type$77276[ebp]
	cmp	eax, 102				; 00000066H
	sete	cl
	mov	BYTE PTR _visible$77286[ebp], cl
; Line 1532
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_09HPKLLIJF@direction?$AA@
	mov	ecx, DWORD PTR _res$77274[ebp]
	push	ecx
	lea	edx, DWORD PTR $T77288[ebp]
	push	edx
	call	?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z ; icu_56::ures_getUnicodeStringByKey
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv568[ebp], eax
	mov	eax, DWORD PTR tv568[ebp]
	mov	DWORD PTR tv508[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv508[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	xor	edx, edx
	cmp	ecx, 70					; 00000046H
	setne	dl
	mov	DWORD PTR _dir$77287[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77288[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1533
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _visible$77286[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _dir$77287[ebp]
	push	edx
	mov	esi, esp
	mov	eax, DWORD PTR _len$77278[ebp]
	push	eax
	mov	ecx, DWORD PTR _resString$77279[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR $T77290[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv571[ebp], eax
	mov	edx, DWORD PTR tv571[ebp]
	mov	DWORD PTR tv510[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv510[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$77273[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@0W4UTransDirection@@CCAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77290[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1535
	jmp	$LN7@initialize
$LN3@initialize:
; Line 1538
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$77278[ebp]
	push	ecx
	mov	edx, DWORD PTR _res$77274[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _resString$77279[ebp], eax
; Line 1539
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	1
	mov	esi, esp
	mov	ecx, DWORD PTR _len$77278[ebp]
	push	ecx
	mov	edx, DWORD PTR _resString$77279[ebp]
	push	edx
	push	1
	lea	ecx, DWORD PTR $T77292[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv574[ebp], eax
	mov	eax, DWORD PTR tv574[ebp]
	mov	DWORD PTR tv544[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv544[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$77273[ebp]
	push	edx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXABVUnicodeString@2@0CCAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@initialize:
; Line 1543
	mov	eax, DWORD PTR _res$77274[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1544
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _id$77273[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@initialize:
; Line 1545
	mov	eax, DWORD PTR _colBund$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1546
	jmp	$LN10@initialize
$LN12@initialize:
; Line 1549
	mov	eax, DWORD PTR _transIDs$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1550
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1557
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85257[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T85257[ebp], 0
	je	SHORT $LN22@initialize
	mov	ecx, DWORD PTR $T85257[ebp]
	call	??0NullTransliterator@icu_56@@QAE@XZ	; icu_56::NullTransliterator::NullTransliterator
	mov	DWORD PTR tv230[ebp], eax
	jmp	SHORT $LN23@initialize
$LN22@initialize:
	mov	DWORD PTR tv230[ebp], 0
$LN23@initialize:
	mov	eax, DWORD PTR tv230[ebp]
	mov	DWORD PTR $T85256[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85256[ebp]
	mov	DWORD PTR _tempNullTranslit$[ebp], ecx
; Line 1558
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85261[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T85261[ebp], 0
	je	SHORT $LN24@initialize
	mov	ecx, DWORD PTR $T85261[ebp]
	call	??0LowercaseTransliterator@icu_56@@QAE@XZ ; icu_56::LowercaseTransliterator::LowercaseTransliterator
	mov	DWORD PTR tv237[ebp], eax
	jmp	SHORT $LN25@initialize
$LN24@initialize:
	mov	DWORD PTR tv237[ebp], 0
$LN25@initialize:
	mov	eax, DWORD PTR tv237[ebp]
	mov	DWORD PTR $T85260[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85260[ebp]
	mov	DWORD PTR _tempLowercaseTranslit$[ebp], ecx
; Line 1559
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85265[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T85265[ebp], 0
	je	SHORT $LN26@initialize
	mov	ecx, DWORD PTR $T85265[ebp]
	call	??0UppercaseTransliterator@icu_56@@QAE@XZ ; icu_56::UppercaseTransliterator::UppercaseTransliterator
	mov	DWORD PTR tv244[ebp], eax
	jmp	SHORT $LN27@initialize
$LN26@initialize:
	mov	DWORD PTR tv244[ebp], 0
$LN27@initialize:
	mov	eax, DWORD PTR tv244[ebp]
	mov	DWORD PTR $T85264[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85264[ebp]
	mov	DWORD PTR _tempUppercaseTranslit$[ebp], ecx
; Line 1560
	mov	esi, esp
	push	84					; 00000054H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85269[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T85269[ebp], 0
	je	SHORT $LN28@initialize
	mov	ecx, DWORD PTR $T85269[ebp]
	call	??0TitlecaseTransliterator@icu_56@@QAE@XZ ; icu_56::TitlecaseTransliterator::TitlecaseTransliterator
	mov	DWORD PTR tv251[ebp], eax
	jmp	SHORT $LN29@initialize
$LN28@initialize:
	mov	DWORD PTR tv251[ebp], 0
$LN29@initialize:
	mov	eax, DWORD PTR tv251[ebp]
	mov	DWORD PTR $T85268[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85268[ebp]
	mov	DWORD PTR _tempTitlecaseTranslit$[ebp], ecx
; Line 1561
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85273[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T85273[ebp], 0
	je	SHORT $LN30@initialize
	push	0
	mov	ecx, DWORD PTR $T85273[ebp]
	call	??0UnicodeNameTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z ; icu_56::UnicodeNameTransliterator::UnicodeNameTransliterator
	mov	DWORD PTR tv291[ebp], eax
	jmp	SHORT $LN31@initialize
$LN30@initialize:
	mov	DWORD PTR tv291[ebp], 0
$LN31@initialize:
	mov	eax, DWORD PTR tv291[ebp]
	mov	DWORD PTR $T85272[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85272[ebp]
	mov	DWORD PTR _tempUnicodeTranslit$[ebp], ecx
; Line 1562
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85277[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T85277[ebp], 0
	je	SHORT $LN32@initialize
	push	0
	mov	ecx, DWORD PTR $T85277[ebp]
	call	??0NameUnicodeTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z ; icu_56::NameUnicodeTransliterator::NameUnicodeTransliterator
	mov	DWORD PTR tv299[ebp], eax
	jmp	SHORT $LN33@initialize
$LN32@initialize:
	mov	DWORD PTR tv299[ebp], 0
$LN33@initialize:
	mov	eax, DWORD PTR tv299[ebp]
	mov	DWORD PTR $T85276[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85276[ebp]
	mov	DWORD PTR _tempNameUnicodeTranslit$[ebp], ecx
; Line 1565
	mov	esi, esp
	push	148					; 00000094H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85281[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T85281[ebp], 0
	je	SHORT $LN34@initialize
	push	0
	mov	ecx, DWORD PTR $T85281[ebp]
	call	??0BreakTransliterator@icu_56@@QAE@PAVUnicodeFilter@1@@Z ; icu_56::BreakTransliterator::BreakTransliterator
	mov	DWORD PTR tv307[ebp], eax
	jmp	SHORT $LN35@initialize
$LN34@initialize:
	mov	DWORD PTR tv307[ebp], 0
$LN35@initialize:
	mov	eax, DWORD PTR tv307[ebp]
	mov	DWORD PTR $T85280[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T85280[ebp]
	mov	DWORD PTR _tempBreakTranslit$[ebp], ecx
; Line 1573
	cmp	DWORD PTR _tempNullTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempLowercaseTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempUppercaseTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempTitlecaseTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempUnicodeTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempBreakTranslit$[ebp], 0
	je	SHORT $LN1@initialize
	cmp	DWORD PTR _tempNameUnicodeTranslit$[ebp], 0
	jne	$LN2@initialize
$LN1@initialize:
; Line 1575
	mov	eax, DWORD PTR _tempNullTranslit$[ebp]
	mov	DWORD PTR $T85285[ebp], eax
	mov	ecx, DWORD PTR $T85285[ebp]
	mov	DWORD PTR $T85284[ebp], ecx
	cmp	DWORD PTR $T85284[ebp], 0
	je	SHORT $LN36@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85284[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85284[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv324[ebp], eax
	jmp	SHORT $LN37@initialize
$LN36@initialize:
	mov	DWORD PTR tv324[ebp], 0
$LN37@initialize:
; Line 1576
	mov	eax, DWORD PTR _tempLowercaseTranslit$[ebp]
	mov	DWORD PTR $T85289[ebp], eax
	mov	ecx, DWORD PTR $T85289[ebp]
	mov	DWORD PTR $T85288[ebp], ecx
	cmp	DWORD PTR $T85288[ebp], 0
	je	SHORT $LN38@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85288[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85288[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv335[ebp], eax
	jmp	SHORT $LN39@initialize
$LN38@initialize:
	mov	DWORD PTR tv335[ebp], 0
$LN39@initialize:
; Line 1577
	mov	eax, DWORD PTR _tempUppercaseTranslit$[ebp]
	mov	DWORD PTR $T85293[ebp], eax
	mov	ecx, DWORD PTR $T85293[ebp]
	mov	DWORD PTR $T85292[ebp], ecx
	cmp	DWORD PTR $T85292[ebp], 0
	je	SHORT $LN40@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85292[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85292[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv346[ebp], eax
	jmp	SHORT $LN41@initialize
$LN40@initialize:
	mov	DWORD PTR tv346[ebp], 0
$LN41@initialize:
; Line 1578
	mov	eax, DWORD PTR _tempTitlecaseTranslit$[ebp]
	mov	DWORD PTR $T85297[ebp], eax
	mov	ecx, DWORD PTR $T85297[ebp]
	mov	DWORD PTR $T85296[ebp], ecx
	cmp	DWORD PTR $T85296[ebp], 0
	je	SHORT $LN42@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85296[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85296[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv357[ebp], eax
	jmp	SHORT $LN43@initialize
$LN42@initialize:
	mov	DWORD PTR tv357[ebp], 0
$LN43@initialize:
; Line 1579
	mov	eax, DWORD PTR _tempUnicodeTranslit$[ebp]
	mov	DWORD PTR $T85301[ebp], eax
	mov	ecx, DWORD PTR $T85301[ebp]
	mov	DWORD PTR $T85300[ebp], ecx
	cmp	DWORD PTR $T85300[ebp], 0
	je	SHORT $LN44@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85300[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85300[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv368[ebp], eax
	jmp	SHORT $LN45@initialize
$LN44@initialize:
	mov	DWORD PTR tv368[ebp], 0
$LN45@initialize:
; Line 1580
	mov	eax, DWORD PTR _tempNameUnicodeTranslit$[ebp]
	mov	DWORD PTR $T85305[ebp], eax
	mov	ecx, DWORD PTR $T85305[ebp]
	mov	DWORD PTR $T85304[ebp], ecx
	cmp	DWORD PTR $T85304[ebp], 0
	je	SHORT $LN46@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85304[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85304[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv379[ebp], eax
	jmp	SHORT $LN47@initialize
$LN46@initialize:
	mov	DWORD PTR tv379[ebp], 0
$LN47@initialize:
; Line 1582
	mov	eax, DWORD PTR _tempBreakTranslit$[ebp]
	mov	DWORD PTR $T85309[ebp], eax
	mov	ecx, DWORD PTR $T85309[ebp]
	mov	DWORD PTR $T85308[ebp], ecx
	cmp	DWORD PTR $T85308[ebp], 0
	je	SHORT $LN48@initialize
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T85308[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T85308[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv390[ebp], eax
	jmp	SHORT $LN49@initialize
$LN48@initialize:
	mov	DWORD PTR tv390[ebp], 0
$LN49@initialize:
; Line 1585
	mov	eax, DWORD PTR _registry
	mov	DWORD PTR $T85313[ebp], eax
	mov	ecx, DWORD PTR $T85313[ebp]
	mov	DWORD PTR $T85312[ebp], ecx
	cmp	DWORD PTR $T85312[ebp], 0
	je	SHORT $LN50@initialize
	push	1
	mov	ecx, DWORD PTR $T85312[ebp]
	call	??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv395[ebp], eax
	jmp	SHORT $LN51@initialize
$LN50@initialize:
	mov	DWORD PTR tv395[ebp], 0
$LN51@initialize:
; Line 1586
	mov	DWORD PTR _registry, 0
; Line 1588
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1589
	xor	al, al
	jmp	$LN16@initialize
$LN2@initialize:
; Line 1592
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempNullTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1593
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempLowercaseTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1594
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempUppercaseTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1595
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempTitlecaseTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1596
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempUnicodeTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1597
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tempNameUnicodeTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1599
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tempBreakTranslit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _registry
	call	?put@TransliteratorRegistry@icu_56@@QAEXPAVTransliterator@2@CAAW4UErrorCode@@@Z ; icu_56::TransliteratorRegistry::put
; Line 1602
	call	?registerIDs@RemoveTransliterator@icu_56@@SAXXZ ; icu_56::RemoveTransliterator::registerIDs
; Line 1603
	call	?registerIDs@EscapeTransliterator@icu_56@@SAXXZ ; icu_56::EscapeTransliterator::registerIDs
; Line 1604
	call	?registerIDs@UnescapeTransliterator@icu_56@@SAXXZ ; icu_56::UnescapeTransliterator::registerIDs
; Line 1605
	call	?registerIDs@NormalizationTransliterator@icu_56@@SAXXZ ; icu_56::NormalizationTransliterator::registerIDs
; Line 1606
	call	?registerIDs@AnyTransliterator@icu_56@@CAXXZ ; icu_56::AnyTransliterator::registerIDs
; Line 1609
	push	0
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19HGHALIPE@?$AAN?$AAu?$AAl?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77349[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv598[ebp], eax
	mov	eax, DWORD PTR tv598[ebp]
	mov	DWORD PTR tv553[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv553[ebp]
	push	ecx
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19HGHALIPE@?$AAN?$AAu?$AAl?$AAl?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77347[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv601[ebp], eax
	mov	edx, DWORD PTR tv601[ebp]
	mov	DWORD PTR tv555[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	eax, DWORD PTR tv555[ebp]
	push	eax
	call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77347[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77349[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1611
	push	1
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@KODFPCGL@?$AAL?$AAo?$AAw?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77354[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv604[ebp], eax
	mov	eax, DWORD PTR tv604[ebp]
	mov	DWORD PTR tv557[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv557[ebp]
	push	ecx
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@ODOEPGHK@?$AAU?$AAp?$AAp?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77352[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv607[ebp], eax
	mov	edx, DWORD PTR tv607[ebp]
	mov	DWORD PTR tv559[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	eax, DWORD PTR tv559[ebp]
	push	eax
	call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	esi, esp
	lea	ecx, DWORD PTR $T77352[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77354[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1613
	push	0
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@KODFPCGL@?$AAL?$AAo?$AAw?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77360[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv610[ebp], eax
	mov	eax, DWORD PTR tv610[ebp]
	mov	DWORD PTR tv561[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv561[ebp]
	push	ecx
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@MNHBCACD@?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T77358[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv613[ebp], eax
	mov	edx, DWORD PTR tv613[ebp]
	mov	DWORD PTR tv563[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR tv563[ebp]
	push	eax
	call	?_registerSpecialInverse@Transliterator@icu_56@@KAXABVUnicodeString@2@0C@Z ; icu_56::Transliterator::_registerSpecialInverse
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	esi, esp
	lea	ecx, DWORD PTR $T77358[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T77360[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1615
	push	OFFSET _utrans_transliterator_cleanup_56
	push	2
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 1617
	mov	al, 1
$LN16@initialize:
; Line 1618
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN75@initialize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1580				; 0000062cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN75@initialize:
	DD	3
	DD	$LN74@initialize
$LN74@initialize:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN70@initialize
	DD	-180					; ffffff4cH
	DD	2
	DD	$LN71@initialize
	DD	-192					; ffffff40H
	DD	4
	DD	$LN72@initialize
$LN72@initialize:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN71@initialize:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN70@initialize:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T85249[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$77273[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77288[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77290[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77292[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T85257[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T85261[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T85265[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T85269[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T85273[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T85277[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	mov	eax, DWORD PTR $T85281[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77349[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77347[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77354[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$15:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77352[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$16:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77360[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR $T77358[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1584]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeRegistry@Transliterator@icu_56@@CACAAW4UErrorCode@@@Z ENDP ; icu_56::Transliterator::initializeRegistry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T85348 = -224						; size = 4
_r$ = -20						; size = 4
_len$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_resB$ = 12						; size = 4
_key$ = 16						; size = 4
_status$ = 20						; size = 4
?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z PROC ; icu_56::ures_getUnicodeStringByKey, COMDAT
; File d:\mozilla\intl\icu\include\unicode\ures.h
; Line 864
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T85348[ebp], 0
; Line 865
	mov	DWORD PTR _len$[ebp], 0
; Line 866
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 867
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T85348[ebp]
	or	edx, 1
	mov	DWORD PTR $T85348[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 868
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ures_getUn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@ures_getUn:
	DD	1
	DD	$LN6@ures_getUn
$LN6@ures_getUn:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ures_getUn
$LN5@ures_getUn:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?ures_getUnicodeStringByKey@icu_56@@YA?AVUnicodeString@1@PBUUResourceBundle@@PBDPAW4UErrorCode@@@Z ENDP ; icu_56::ures_getUnicodeStringByKey
_TEXT	ENDS
EXTRN	??1TransliteratorRegistry@icu_56@@QAE@XZ:PROC	; icu_56::TransliteratorRegistry::~TransliteratorRegistry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z PROC	; icu_56::TransliteratorRegistry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TransliteratorRegistry@icu_56@@QAE@XZ ; icu_56::TransliteratorRegistry::~TransliteratorRegistry
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z ENDP	; icu_56::TransliteratorRegistry::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?cleanup@TransliteratorIDParser@icu_56@@SAXXZ:PROC ; icu_56::TransliteratorIDParser::cleanup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_transliterator_cleanup_56
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T85357 = -212						; size = 4
$T85358 = -200						; size = 4
_utrans_transliterator_cleanup_56 PROC			; COMDAT
; File d:\mozilla\intl\icu\source\i18n\translit.cpp
; Line 1629
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1631
	call	?cleanup@TransliteratorIDParser@icu_56@@SAXXZ ; icu_56::TransliteratorIDParser::cleanup
; Line 1632
	cmp	DWORD PTR _registry, 0
	je	SHORT $LN1@utrans_tra
; Line 1633
	mov	eax, DWORD PTR _registry
	mov	DWORD PTR $T85358[ebp], eax
	mov	ecx, DWORD PTR $T85358[ebp]
	mov	DWORD PTR $T85357[ebp], ecx
	cmp	DWORD PTR $T85357[ebp], 0
	je	SHORT $LN4@utrans_tra
	push	1
	mov	ecx, DWORD PTR $T85357[ebp]
	call	??_GTransliteratorRegistry@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN5@utrans_tra
$LN4@utrans_tra:
	mov	DWORD PTR tv69[ebp], 0
$LN5@utrans_tra:
; Line 1634
	mov	DWORD PTR _registry, 0
$LN1@utrans_tra:
; Line 1636
	mov	al, 1
; Line 1637
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_transliterator_cleanup_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

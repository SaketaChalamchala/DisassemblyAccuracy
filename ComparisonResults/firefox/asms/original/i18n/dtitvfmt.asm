; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\dtitvfmt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
PUBLIC	?fgCalendarFieldToPatternLetter@DateIntervalFormat@icu_56@@0QB_WB ; icu_56::DateIntervalFormat::fgCalendarFieldToPatternLetter
_BSS	SEGMENT
?classID@?1??getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::DateIntervalFormat::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_gDateFormatSkeleton DW 079H
	DW	04dH
	DW	04dH
	DW	04dH
	DW	04dH
	DW	045H
	DW	045H
	DW	045H
	DW	045H
	DW	064H
	DW	00H
	DW	079H
	DW	04dH
	DW	04dH
	DW	04dH
	DW	04dH
	DW	064H
	DW	00H
	ORG $+8
	DW	079H
	DW	04dH
	DW	04dH
	DW	04dH
	DW	064H
	DW	00H
	ORG $+10
	DW	079H
	DW	04dH
	DW	064H
	DW	00H
	ORG $+14
_gDateTimePatternsTag DB 'DateTimePatterns', 00H
	ORG $+3
_gLaterFirstPrefix DW 06cH
	DW	061H
	DW	074H
	DW	065H
	DW	073H
	DW	074H
	DW	046H
	DW	069H
	DW	072H
	DW	073H
	DW	074H
	DW	03aH
_gEarlierFirstPrefix DW 065H
	DW	061H
	DW	072H
	DW	06cH
	DW	069H
	DW	065H
	DW	073H
	DW	074H
	DW	046H
	DW	069H
	DW	072H
	DW	073H
	DW	074H
	DW	03aH
_bracketedZero DW 07bH
	DW	030H
	DW	07dH
	ORG $+2
_bracketedOne DW 07bH
	DW	031H
	DW	07dH
	ORG $+2
?fgCalendarFieldToPatternLetter@DateIntervalFormat@icu_56@@0QB_WB DW 047H ; icu_56::DateIntervalFormat::fgCalendarFieldToPatternLetter
	DW	079H
	DW	04dH
	DW	077H
	DW	057H
	DW	064H
	DW	044H
	DW	045H
	DW	046H
	DW	061H
	DW	068H
	DW	048H
	DW	06dH
	DW	073H
	DW	053H
	DW	07aH
	DW	020H
	DW	059H
	DW	065H
	DW	075H
	DW	067H
	DW	041H
	DW	020H
	DW	020H
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTime
EXTRN	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::getTimeInMillis
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::getTime, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\calendar.h
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::getTime
_TEXT	ENDS
PUBLIC	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
EXTRN	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::setTimeInMillis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_status$ = 16						; size = 4
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::setTime, COMDAT
; _this$ = ecx
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::setTime
_TEXT	ENDS
PUBLIC	??9Calendar@icu_56@@QBECABV01@@Z		; icu_56::Calendar::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Calendar@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9Calendar@icu_56@@QBECABV01@@Z PROC			; icu_56::Calendar::operator!=, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Calendar@icu_56@@QBECABV01@@Z ENDP			; icu_56::Calendar::operator!=
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1559
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+124], 0
	jle	SHORT $LN3@internalGe
	mov	edx, DWORD PTR _field$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN4@internalGe
$LN3@internalGe:
	mov	edx, DWORD PTR _defaultValue$[ebp]
	mov	DWORD PTR tv71[ebp], edx
$LN4@internalGe:
	mov	eax, DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1569
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGetTime@Calendar@icu_56@@IBENXZ	; icu_56::Calendar::internalGetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGetTime@Calendar@icu_56@@IBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalGetTime@Calendar@icu_56@@IBENXZ PROC		; icu_56::Calendar::internalGetTime, COMDAT
; _this$ = ecx
; Line 1898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalGetTime@Calendar@icu_56@@IBENXZ ENDP		; icu_56::Calendar::internalGetTime
_TEXT	ENDS
PUBLIC	?internalSetTime@Calendar@icu_56@@IAEXN@Z	; icu_56::Calendar::internalSetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetTime@Calendar@icu_56@@IAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_time$ = 8						; size = 8
?internalSetTime@Calendar@icu_56@@IAEXN@Z PROC		; icu_56::Calendar::internalSetTime, COMDAT
; _this$ = ecx
; Line 1907
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z ENDP		; icu_56::Calendar::internalSetTime
_TEXT	ENDS
PUBLIC	?getGregorianYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianYear@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianYear, COMDAT
; _this$ = ecx
; Line 1970
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1971
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+272]
; Line 1972
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianYear@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianYear
_TEXT	ENDS
PUBLIC	?getGregorianMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianMonth@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianMonth, COMDAT
; _this$ = ecx
; Line 1979
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1980
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]
; Line 1981
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianMonth@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianMonth
_TEXT	ENDS
PUBLIC	?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfYear, COMDAT
; _this$ = ecx
; Line 1988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1989
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+280]
; Line 1990
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfYear
_TEXT	ENDS
PUBLIC	?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfMonth, COMDAT
; _this$ = ecx
; Line 1997
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1998
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+284]
; Line 1999
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfMonth
_TEXT	ENDS
PUBLIC	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
EXTRN	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::createInstance
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_zone$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z PROC ; icu_56::Calendar::createInstance, COMDAT
; Line 2500
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2502
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _zone$[ebp]
	push	ecx
	call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
	add	esp, 12					; 0000000cH
; Line 2503
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::createInstance
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2510
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _up$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	add	ecx, -1
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2511
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2517
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _up$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Line 2518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_value$ = 12						; size = 4
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalSet, COMDAT
; _this$ = ecx
; Line 2531
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2532
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx
; Line 2533
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+124], 1
; Line 2534
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _field$[ebp]
	mov	BYTE PTR [eax+100], 1
; Line 2535
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalSet
_TEXT	ENDS
PUBLIC	?weekNumber@Calendar@icu_56@@IAEHHH@Z		; icu_56::Calendar::weekNumber
EXTRN	?weekNumber@Calendar@icu_56@@IAEHHHH@Z:PROC	; icu_56::Calendar::weekNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?weekNumber@Calendar@icu_56@@IAEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dayOfPeriod$ = 8					; size = 4
_dayOfWeek$ = 12					; size = 4
?weekNumber@Calendar@icu_56@@IAEHHH@Z PROC		; icu_56::Calendar::weekNumber, COMDAT
; _this$ = ecx
; Line 2540
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2541
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfPeriod$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfPeriod$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z	; icu_56::Calendar::weekNumber
; Line 2542
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z ENDP		; icu_56::Calendar::weekNumber
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9TimeZoneNames@icu_56@@QBECABV01@@Z		; icu_56::TimeZoneNames::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZoneNames@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9TimeZoneNames@icu_56@@QBECABV01@@Z PROC		; icu_56::TimeZoneNames::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\tznames.h
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZoneNames@icu_56@@QBECABV01@@Z ENDP		; icu_56::TimeZoneNames::operator!=
_TEXT	ENDS
PUBLIC	??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`vftable'
PUBLIC	??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection
PUBLIC	??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::MatchInfoCollection `RTTI Type Descriptor'
PUBLIC	??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 DD FLAT:??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MatchInfoCollection@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8 DD 00H	; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMatchInfoCollection@TimeZoneNames@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@
rdata$r	SEGMENT
??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ DD 00H ; icu_56::TimeZoneNames::MatchInfoCollection::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMatchInfoCollection@TimeZoneNames@icu_56@@@8
	DD	FLAT:??_R3MatchInfoCollection@TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@
CONST	SEGMENT
??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@ DD FLAT:??_R4MatchInfoCollection@TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::MatchInfoCollection::`vftable'
	DD	FLAT:??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@MatchInfoC
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@MatchInfoC
$LN3@MatchInfoC:
	mov	DWORD PTR tv68[ebp], 0
$LN4@MatchInfoC:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MatchInfoCollection@TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0MatchInfoCollection@TimeZoneNames@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::MatchInfoCollection
_TEXT	ENDS
PUBLIC	??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::TimeZoneNames::MatchInfoCollection::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4MatchInfoCollection@TimeZoneNames@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::operator=
_TEXT	ENDS
PUBLIC	??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor'
EXTRN	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ:PROC ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z PROC ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MatchInfoCollection@TimeZoneNames@icu_56@@UAE@XZ ; icu_56::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMatchInfoCollection@TimeZoneNames@icu_56@@UAEPAXI@Z ENDP ; icu_56::TimeZoneNames::MatchInfoCollection::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TimeZoneNames@icu_56@@6B@			; icu_56::TimeZoneNames::`vftable'
PUBLIC	??0TimeZoneNames@icu_56@@QAE@XZ			; icu_56::TimeZoneNames::TimeZoneNames
PUBLIC	??_R4TimeZoneNames@icu_56@@6B@			; icu_56::TimeZoneNames::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTimeZoneNames@icu_56@@@8		; icu_56::TimeZoneNames `RTTI Type Descriptor'
PUBLIC	??_R3TimeZoneNames@icu_56@@8			; icu_56::TimeZoneNames::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZoneNames@icu_56@@8			; icu_56::TimeZoneNames::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZoneNames@icu_56@@8		; icu_56::TimeZoneNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ETimeZoneNames@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneNames::`vector deleting destructor'
EXTRN	?getExemplarLocationName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@@Z:PROC ; icu_56::TimeZoneNames::getExemplarLocationName
EXTRN	?getDisplayName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@W4UTimeZoneNameType@@NAAV32@@Z:PROC ; icu_56::TimeZoneNames::getDisplayName
;	COMDAT ??_R1A@?0A@EA@TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZoneNames@icu_56@@8 DD FLAT:??_R0?AVTimeZoneNames@icu_56@@@8 ; icu_56::TimeZoneNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZoneNames@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZoneNames@icu_56@@8 ; icu_56::TimeZoneNames::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZoneNames@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZoneNames@icu_56@@8 DD 00H			; icu_56::TimeZoneNames::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZoneNames@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZoneNames@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneNames `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZoneNames@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TimeZoneNames@icu_56@@6B@
rdata$r	SEGMENT
??_R4TimeZoneNames@icu_56@@6B@ DD 00H			; icu_56::TimeZoneNames::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTimeZoneNames@icu_56@@@8
	DD	FLAT:??_R3TimeZoneNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7TimeZoneNames@icu_56@@6B@
CONST	SEGMENT
??_7TimeZoneNames@icu_56@@6B@ DD FLAT:??_R4TimeZoneNames@icu_56@@6B@ ; icu_56::TimeZoneNames::`vftable'
	DD	FLAT:??_ETimeZoneNames@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getExemplarLocationName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@@Z
	DD	FLAT:?getDisplayName@TimeZoneNames@icu_56@@UBEAAVUnicodeString@2@ABV32@W4UTimeZoneNameType@@NAAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TimeZoneNames@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TimeZoneNames@icu_56@@QAE@XZ PROC			; icu_56::TimeZoneNames::TimeZoneNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TimeZoneNames@icu_56@@QAE@XZ ENDP			; icu_56::TimeZoneNames::TimeZoneNames
_TEXT	ENDS
PUBLIC	??0TimeZoneNames@icu_56@@QAE@ABV01@@Z		; icu_56::TimeZoneNames::TimeZoneNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TimeZoneNames@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TimeZoneNames@icu_56@@QAE@ABV01@@Z PROC		; icu_56::TimeZoneNames::TimeZoneNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TimeZoneNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0TimeZoneNames@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::TimeZoneNames::TimeZoneNames
_TEXT	ENDS
PUBLIC	??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::TimeZoneNames::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::TimeZoneNames::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TimeZoneNames@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::TimeZoneNames::operator=
_TEXT	ENDS
PUBLIC	??_GTimeZoneNames@icu_56@@UAEPAXI@Z		; icu_56::TimeZoneNames::`scalar deleting destructor'
EXTRN	??1TimeZoneNames@icu_56@@UAE@XZ:PROC		; icu_56::TimeZoneNames::~TimeZoneNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTimeZoneNames@icu_56@@UAEPAXI@Z PROC		; icu_56::TimeZoneNames::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneNames@icu_56@@UAE@XZ		; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTimeZoneNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::TimeZoneNames::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ETimeZoneNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ETimeZoneNames@icu_56@@UAEPAXI@Z PROC		; icu_56::TimeZoneNames::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1TimeZoneNames@icu_56@@UAE@XZ	; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZoneNames@icu_56@@UAE@XZ		; icu_56::TimeZoneNames::~TimeZoneNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ETimeZoneNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::TimeZoneNames::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::SimpleDateFormat::get2DigitYearStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::SimpleDateFormat::get2DigitYearStart, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\smpdtfmt.h
; Line 1587
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+744]
; Line 1589
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get2DigitYearStart@SimpleDateFormat@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleDateFormat::get2DigitYearStart
_TEXT	ENDS
PUBLIC	?getSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateTimePatternGenerator::getSkeleton
EXTRN	?staticGetSkeleton@DateTimePatternGenerator@icu_56@@SA?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DateTimePatternGenerator::staticGetSkeleton
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51378 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pattern$ = 12						; size = 4
_status$ = 16						; size = 4
?getSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::DateTimePatternGenerator::getSkeleton, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dtptngen.h
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T51378[ebp], 0
; Line 146
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	?staticGetSkeleton@DateTimePatternGenerator@icu_56@@SA?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateTimePatternGenerator::staticGetSkeleton
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T51378[ebp]
	or	eax, 1
	mov	DWORD PTR $T51378[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DateTimePatternGenerator::getSkeleton
_TEXT	ENDS
PUBLIC	?getBaseSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateTimePatternGenerator::getBaseSkeleton
EXTRN	?staticGetBaseSkeleton@DateTimePatternGenerator@icu_56@@SA?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DateTimePatternGenerator::staticGetBaseSkeleton
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBaseSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T51383 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pattern$ = 12						; size = 4
_status$ = 16						; size = 4
?getBaseSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::DateTimePatternGenerator::getBaseSkeleton, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T51383[ebp], 0
; Line 182
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	?staticGetBaseSkeleton@DateTimePatternGenerator@icu_56@@SA?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateTimePatternGenerator::staticGetBaseSkeleton
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR $T51383[ebp]
	or	eax, 1
	mov	DWORD PTR $T51383[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getBaseSkeleton@DateTimePatternGenerator@icu_56@@QAE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DateTimePatternGenerator::getBaseSkeleton
_TEXT	ENDS
PUBLIC	??9DateIntervalInfo@icu_56@@QBECABV01@@Z	; icu_56::DateIntervalInfo::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DateIntervalInfo@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DateIntervalInfo@icu_56@@QBECABV01@@Z PROC		; icu_56::DateIntervalInfo::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dtitvinf.h
; Line 505
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 506
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 507
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DateIntervalInfo@icu_56@@QBECABV01@@Z ENDP		; icu_56::DateIntervalInfo::operator!=
_TEXT	ENDS
PUBLIC	??1DateIntervalFormat@icu_56@@UAE@XZ		; icu_56::DateIntervalFormat::~DateIntervalFormat
PUBLIC	??_GDateIntervalFormat@icu_56@@UAEPAXI@Z	; icu_56::DateIntervalFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDateIntervalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDateIntervalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::DateIntervalFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DateIntervalFormat@icu_56@@UAE@XZ	; icu_56::DateIntervalFormat::~DateIntervalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDateIntervalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::DateIntervalFormat::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EDateIntervalFormat@icu_56@@UAEPAXI@Z	; icu_56::DateIntervalFormat::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EDateIntervalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDateIntervalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::DateIntervalFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1DateIntervalFormat@icu_56@@UAE@XZ ; icu_56::DateIntervalFormat::~DateIntervalFormat
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	1672					; 00000688H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DateIntervalFormat@icu_56@@UAE@XZ	; icu_56::DateIntervalFormat::~DateIntervalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDateIntervalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::DateIntervalFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9DateIntervalFormat@icu_56@@QBECABVFormat@1@@Z ; icu_56::DateIntervalFormat::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DateIntervalFormat@icu_56@@QBECABVFormat@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DateIntervalFormat@icu_56@@QBECABVFormat@1@@Z PROC	; icu_56::DateIntervalFormat::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dtitvfmt.h
; Line 995
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 996
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 997
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DateIntervalFormat@icu_56@@QBECABVFormat@1@@Z ENDP	; icu_56::DateIntervalFormat::operator!=
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ	; icu_56::PluralFormat::PluralSelector::PluralSelector
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
PUBLIC	??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPluralSelector@PluralFormat@icu_56@@@8	; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelector@PluralFormat@icu_56@@8	; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
PUBLIC	??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
EXTRN	?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::select
;	COMDAT ??_R2PluralSelector@PluralFormat@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\plurfmt.h
rdata$r	SEGMENT
??_R2PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelector@PluralFormat@icu_56@@8 DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelector@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorAdapter@PluralFormat@icu_56@@8 ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8 DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorAdapter@PluralFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD 00H ; icu_56::PluralFormat::PluralSelectorAdapter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorAdapter@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorAdapter@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorAdapter@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelectorAdapter::`vftable'
	DD	FLAT:??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorAdapter@PluralFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@XZ ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??_7PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`vftable'
PUBLIC	??_R4PluralSelector@PluralFormat@icu_56@@6B@	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
PUBLIC	??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
;	COMDAT ??_R4PluralSelector@PluralFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelector@PluralFormat@icu_56@@6B@ DD 00H	; icu_56::PluralFormat::PluralSelector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelector@PluralFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelector@PluralFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelector@PluralFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelector@PluralFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelector@PluralFormat@icu_56@@6B@ ; icu_56::PluralFormat::PluralSelector::`vftable'
	DD	FLAT:??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ PROC	; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralSelector@PluralFormat@icu_56@@QAE@XZ ENDP	; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::PluralSelector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR ___that$[ebp], 0
	je	SHORT $LN3@PluralSele
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@PluralSele
$LN3@PluralSele:
	mov	DWORD PTR tv68[ebp], 0
$LN4@PluralSele:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelector@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::PluralSelector
_TEXT	ENDS
PUBLIC	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelector::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelector::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelector::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
EXTRN	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelector::~PluralSelector
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@8
	push	OFFSET ??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@8
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@8
$LN3@vector@8:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelector@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelector::~PluralSelector
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@8:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@8:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelector@PluralFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralFormat::PluralSelector::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorAdapter@PluralFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorAdapter@PluralFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::PluralSelectorAdapter
_TEXT	ENDS
PUBLIC	??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralSelector@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralSelectorAdapter@PluralFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::operator=
_TEXT	ENDS
PUBLIC	??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
EXTRN	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ:PROC ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@9
	push	OFFSET ??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@9
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@9
$LN3@vector@9:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorAdapter@PluralFormat@icu_56@@UAE@XZ ; icu_56::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@9:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@9:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorAdapter@PluralFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralFormat::PluralSelectorAdapter::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ; icu_56::MessageFormat::getApostropheMode
EXTRN	__imp_?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ PROC ; icu_56::MessageFormat::getApostropheMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\msgfmt.h
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 524				; 0000020cH
	mov	esi, esp
	call	DWORD PTR __imp_?getApostropheMode@MessagePattern@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getApostropheMode@MessageFormat@icu_56@@QBE?AW4UMessagePatternApostropheMode@@XZ ENDP ; icu_56::MessageFormat::getApostropheMode
_TEXT	ENDS
PUBLIC	?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z ; icu_56::MessageFormat::getArgTypeList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_listCount$ = 8						; size = 4
?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z PROC ; icu_56::MessageFormat::getArgTypeList, COMDAT
; _this$ = ecx
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1052
	mov	eax, DWORD PTR _listCount$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+636]
	mov	DWORD PTR [eax], edx
; Line 1053
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+632]
; Line 1054
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArgTypeList@MessageFormat@icu_56@@ABEPBW4Type@Formattable@2@AAH@Z ENDP ; icu_56::MessageFormat::getArgTypeList
_TEXT	ENDS
PUBLIC	??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`vftable'
PUBLIC	??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider
PUBLIC	??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::PluralSelectorProvider `RTTI Type Descriptor'
PUBLIC	??_R3PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor'
EXTRN	?select@PluralSelectorProvider@MessageFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::PluralSelectorProvider::select
;	COMDAT ??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 DD FLAT:??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R2PluralSelectorProvider@MessageFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralSelectorProvider@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PluralSelector@PluralFormat@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R3PluralSelectorProvider@MessageFormat@icu_56@@8 DD 00H ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralSelectorProvider@MessageFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ DD 00H ; icu_56::MessageFormat::PluralSelectorProvider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralSelectorProvider@MessageFormat@icu_56@@@8
	DD	FLAT:??_R3PluralSelectorProvider@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@
CONST	SEGMENT
??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@ DD FLAT:??_R4PluralSelectorProvider@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::PluralSelectorProvider::`vftable'
	DD	FLAT:??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?select@PluralSelectorProvider@MessageFormat@icu_56@@UBE?AVUnicodeString@3@PAXNAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralSelector@PluralFormat@icu_56@@QAE@ABV012@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralSelectorProvider@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralSelectorProvider@MessageFormat@icu_56@@QAE@ABV012@@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::PluralSelectorProvider
_TEXT	ENDS
PUBLIC	??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor'
EXTRN	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ:PROC ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z PROC ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@10
	push	OFFSET ??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@10
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@10
$LN3@vector@10:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralSelectorProvider@MessageFormat@icu_56@@UAE@XZ ; icu_56::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@10:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@10:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralSelectorProvider@MessageFormat@icu_56@@UAEPAXI@Z ENDP ; icu_56::MessageFormat::PluralSelectorProvider::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7DummyFormat@MessageFormat@icu_56@@6B@	; icu_56::MessageFormat::DummyFormat::`vftable'
PUBLIC	??0DummyFormat@MessageFormat@icu_56@@QAE@XZ	; icu_56::MessageFormat::DummyFormat::DummyFormat
PUBLIC	??_R4DummyFormat@MessageFormat@icu_56@@6B@	; icu_56::MessageFormat::DummyFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDummyFormat@MessageFormat@icu_56@@@8	; icu_56::MessageFormat::DummyFormat `RTTI Type Descriptor'
PUBLIC	??_R3DummyFormat@MessageFormat@icu_56@@8	; icu_56::MessageFormat::DummyFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DummyFormat@MessageFormat@icu_56@@8	; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Format@icu_56@@8			; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFormat@icu_56@@@8			; icu_56::Format `RTTI Type Descriptor'
PUBLIC	??_R3Format@icu_56@@8				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Format@icu_56@@8				; icu_56::Format::`RTTI Base Class Array'
PUBLIC	??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor'
EXTRN	??0Format@icu_56@@IAE@XZ:PROC			; icu_56::Format::Format
EXTRN	??8DummyFormat@MessageFormat@icu_56@@UBECABVFormat@2@@Z:PROC ; icu_56::MessageFormat::DummyFormat::operator==
EXTRN	?clone@DummyFormat@MessageFormat@icu_56@@UBEPAVFormat@3@XZ:PROC ; icu_56::MessageFormat::DummyFormat::clone
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@PAVFieldPositionIterator@3@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAVFieldPosition@3@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
EXTRN	?parseObject@DummyFormat@MessageFormat@icu_56@@UBEXABVUnicodeString@3@AAVFormattable@3@AAVParsePosition@3@@Z:PROC ; icu_56::MessageFormat::DummyFormat::parseObject
EXTRN	?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::DummyFormat::format
;	COMDAT ??_R2Format@icu_56@@8
rdata$r	SEGMENT
??_R2Format@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Format@icu_56@@8 ; icu_56::Format::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Format@icu_56@@8
rdata$r	SEGMENT
??_R3Format@icu_56@@8 DD 00H				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Format `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Format@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Format@icu_56@@8 DD FLAT:??_R0?AVFormat@icu_56@@@8 ; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 DD FLAT:??_R0?AVDummyFormat@MessageFormat@icu_56@@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R2DummyFormat@MessageFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DummyFormat@MessageFormat@icu_56@@8 ; icu_56::MessageFormat::DummyFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	SEGMENT
??_R3DummyFormat@MessageFormat@icu_56@@8 DD 00H		; icu_56::MessageFormat::DummyFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDummyFormat@MessageFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDummyFormat@MessageFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MessageFormat::DummyFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDummyFormat@MessageFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DummyFormat@MessageFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4DummyFormat@MessageFormat@icu_56@@6B@ DD 00H	; icu_56::MessageFormat::DummyFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDummyFormat@MessageFormat@icu_56@@@8
	DD	FLAT:??_R3DummyFormat@MessageFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DummyFormat@MessageFormat@icu_56@@6B@
CONST	SEGMENT
??_7DummyFormat@MessageFormat@icu_56@@6B@ DD FLAT:??_R4DummyFormat@MessageFormat@icu_56@@6B@ ; icu_56::MessageFormat::DummyFormat::`vftable'
	DD	FLAT:??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:??8DummyFormat@MessageFormat@icu_56@@UBECABVFormat@2@@Z
	DD	FLAT:?clone@DummyFormat@MessageFormat@icu_56@@UBEPAVFormat@3@XZ
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@PAVFieldPositionIterator@3@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAVFieldPosition@3@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@DummyFormat@MessageFormat@icu_56@@UBEXABVUnicodeString@3@AAVFormattable@3@AAVParsePosition@3@@Z
	DD	FLAT:?format@DummyFormat@MessageFormat@icu_56@@UBEAAVUnicodeString@3@ABVFormattable@3@AAV43@AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0DummyFormat@MessageFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DummyFormat@MessageFormat@icu_56@@QAE@XZ PROC	; icu_56::MessageFormat::DummyFormat::DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@XZ		; icu_56::Format::Format
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DummyFormat@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DummyFormat@MessageFormat@icu_56@@QAE@XZ ENDP	; icu_56::MessageFormat::DummyFormat::DummyFormat
_TEXT	ENDS
PUBLIC	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ	; icu_56::MessageFormat::DummyFormat::~DummyFormat
EXTRN	??1Format@icu_56@@UAE@XZ:PROC			; icu_56::Format::~Format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DummyFormat@MessageFormat@icu_56@@UAE@XZ PROC	; icu_56::MessageFormat::DummyFormat::~DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DummyFormat@MessageFormat@icu_56@@UAE@XZ ENDP	; icu_56::MessageFormat::DummyFormat::~DummyFormat
_TEXT	ENDS
PUBLIC	??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z ; icu_56::MessageFormat::DummyFormat::DummyFormat
EXTRN	??0Format@icu_56@@IAE@ABV01@@Z:PROC		; icu_56::Format::Format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z PROC	; icu_56::MessageFormat::DummyFormat::DummyFormat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@ABV01@@Z		; icu_56::Format::Format
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DummyFormat@MessageFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0DummyFormat@MessageFormat@icu_56@@QAE@ABV012@@Z ENDP	; icu_56::MessageFormat::DummyFormat::DummyFormat
_TEXT	ENDS
PUBLIC	??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z ; icu_56::MessageFormat::DummyFormat::operator=
EXTRN	??4Format@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::Format::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z PROC ; icu_56::MessageFormat::DummyFormat::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Format@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::Format::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DummyFormat@MessageFormat@icu_56@@QAEAAV012@ABV012@@Z ENDP ; icu_56::MessageFormat::DummyFormat::operator=
_TEXT	ENDS
PUBLIC	??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::MessageFormat::DummyFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z PROC	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@11
	push	OFFSET ??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	320					; 00000140H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@11
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@11
$LN3@vector@11:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DummyFormat@MessageFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@11:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@11:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDummyFormat@MessageFormat@icu_56@@UAEPAXI@Z ENDP	; icu_56::MessageFormat::DummyFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ ; icu_56::DateIntervalFormat::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ PROC ; icu_56::DateIntervalFormat::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\dtitvfmt.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ ENDP ; icu_56::DateIntervalFormat::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@DateIntervalFormat@icu_56@@UBEPAXXZ ; icu_56::DateIntervalFormat::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@DateIntervalFormat@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@DateIntervalFormat@icu_56@@UBEPAXXZ PROC ; icu_56::DateIntervalFormat::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@DateIntervalFormat@icu_56@@SAPAXXZ ; icu_56::DateIntervalFormat::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@DateIntervalFormat@icu_56@@UBEPAXXZ ENDP ; icu_56::DateIntervalFormat::getDynamicClassID
_TEXT	ENDS
PUBLIC	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
PUBLIC	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_skeleton$ = 8						; size = 4
_status$ = 12						; size = 4
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::createInstance, COMDAT
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 71
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	call	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
	add	esp, 12					; 0000000cH
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::createInstance
_TEXT	ENDS
PUBLIC	?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::create
EXTRN	??0DateIntervalInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::DateIntervalInfo::DateIntervalInfo
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T51451 = -236						; size = 4
$T51452 = -224						; size = 4
_dtitvinf$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_skeleton$ = 8						; size = 4
_locale$ = 12						; size = 4
_status$ = 16						; size = 4
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::createInstance, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 91
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51452[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51452[ebp], 0
	je	SHORT $LN3@createInst
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T51452[ebp]
	call	??0DateIntervalInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::DateIntervalInfo
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@createInst
$LN3@createInst:
	mov	DWORD PTR tv73[ebp], 0
$LN4@createInst:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T51451[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T51451[ebp]
	mov	DWORD PTR _dtitvinf$[ebp], eax
; Line 92
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dtitvinf$[ebp]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::create
	add	esp, 16					; 00000010H
; Line 93
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51452[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::createInstance
PUBLIC	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
PUBLIC	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_skeleton$ = 8						; size = 4
_dtitvinf$ = 12						; size = 4
_status$ = 16						; size = 4
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::createInstance, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dtitvinf$[ebp]
	push	ecx
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR _skeleton$[ebp]
	push	edx
	call	?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::createInstance
	add	esp, 16					; 00000010H
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::createInstance
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ptn$ = -8						; size = 4
_skeleton$ = 8						; size = 4
_locale$ = 12						; size = 4
_dtitvinf$ = 16						; size = 4
_status$ = 20						; size = 4
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::createInstance, COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 110
	mov	eax, DWORD PTR _dtitvinf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dtitvinf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ptn$[ebp], eax
; Line 111
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptn$[ebp]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::create
	add	esp, 16					; 00000010H
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@DateIntervalFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@ABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::createInstance
_TEXT	ENDS
PUBLIC	??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ ; icu_56::DateIntervalFormat::PatternInfo::PatternInfo
PUBLIC	??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ ; icu_56::DateIntervalFormat::PatternInfo::~PatternInfo
PUBLIC	??_7DateIntervalFormat@icu_56@@6B@		; icu_56::DateIntervalFormat::`vftable'
PUBLIC	??0DateIntervalFormat@icu_56@@AAE@XZ		; icu_56::DateIntervalFormat::DateIntervalFormat
PUBLIC	??_R4DateIntervalFormat@icu_56@@6B@		; icu_56::DateIntervalFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDateIntervalFormat@icu_56@@@8		; icu_56::DateIntervalFormat `RTTI Type Descriptor'
PUBLIC	??_R3DateIntervalFormat@icu_56@@8		; icu_56::DateIntervalFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DateIntervalFormat@icu_56@@8		; icu_56::DateIntervalFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DateIntervalFormat@icu_56@@8	; icu_56::DateIntervalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8DateIntervalFormat@icu_56@@UBECABVFormat@1@@Z ; icu_56::DateIntervalFormat::operator==
PUBLIC	?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ ; icu_56::DateIntervalFormat::clone
PUBLIC	?format@DateIntervalFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::format
PUBLIC	?parseObject@DateIntervalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ; icu_56::DateIntervalFormat::parseObject
PUBLIC	?getTimeZone@DateIntervalFormat@icu_56@@UBEABVTimeZone@2@XZ ; icu_56::DateIntervalFormat::getTimeZone
PUBLIC	?adoptTimeZone@DateIntervalFormat@icu_56@@UAEXPAVTimeZone@2@@Z ; icu_56::DateIntervalFormat::adoptTimeZone
PUBLIC	?setTimeZone@DateIntervalFormat@icu_56@@UAEXABVTimeZone@2@@Z ; icu_56::DateIntervalFormat::setTimeZone
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1Locale@icu_56@@UAE@XZ:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?getRoot@Locale@icu_56@@SAABV12@XZ:PROC
EXTRN	?format@Format@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Format::format
;	COMDAT ??_R1A@?0A@EA@DateIntervalFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DateIntervalFormat@icu_56@@8 DD FLAT:??_R0?AVDateIntervalFormat@icu_56@@@8 ; icu_56::DateIntervalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DateIntervalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DateIntervalFormat@icu_56@@8
rdata$r	SEGMENT
??_R2DateIntervalFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DateIntervalFormat@icu_56@@8 ; icu_56::DateIntervalFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DateIntervalFormat@icu_56@@8
rdata$r	SEGMENT
??_R3DateIntervalFormat@icu_56@@8 DD 00H		; icu_56::DateIntervalFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2DateIntervalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDateIntervalFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDateIntervalFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DateIntervalFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDateIntervalFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DateIntervalFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4DateIntervalFormat@icu_56@@6B@ DD 00H		; icu_56::DateIntervalFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDateIntervalFormat@icu_56@@@8
	DD	FLAT:??_R3DateIntervalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DateIntervalFormat@icu_56@@6B@
CONST	SEGMENT
??_7DateIntervalFormat@icu_56@@6B@ DD FLAT:??_R4DateIntervalFormat@icu_56@@6B@ ; icu_56::DateIntervalFormat::`vftable'
	DD	FLAT:??_EDateIntervalFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@DateIntervalFormat@icu_56@@UBEPAXXZ
	DD	FLAT:??8DateIntervalFormat@icu_56@@UBECABVFormat@1@@Z
	DD	FLAT:?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	FLAT:?format@Format@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DateIntervalFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@DateIntervalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?getTimeZone@DateIntervalFormat@icu_56@@UBEABVTimeZone@2@XZ
	DD	FLAT:?adoptTimeZone@DateIntervalFormat@icu_56@@UAEXPAVTimeZone@2@@Z
	DD	FLAT:?setTimeZone@DateIntervalFormat@icu_56@@UAEXABVTimeZone@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DateIntervalFormat@icu_56@@AAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$2
__ehfuncinfo$??0DateIntervalFormat@icu_56@@AAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DateIntervalFormat@icu_56@@AAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DateIntervalFormat@icu_56@@AAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DateIntervalFormat@icu_56@@AAE@XZ PROC		; icu_56::DateIntervalFormat::DateIntervalFormat, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DateIntervalFormat@icu_56@@AAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@XZ		; icu_56::Format::Format
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DateIntervalFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
	mov	esi, esp
	call	DWORD PTR __imp_?getRoot@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	OFFSET ??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1660], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1664], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1668], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DateIntervalFormat@icu_56@@AAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DateIntervalFormat@icu_56@@AAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DateIntervalFormat@icu_56@@AAE@XZ ENDP		; icu_56::DateIntervalFormat::DateIntervalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ$0
__ehfuncinfo$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ PROC	; icu_56::DateIntervalFormat::PatternInfo::PatternInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ ENDP	; icu_56::DateIntervalFormat::PatternInfo::PatternInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ$0
__ehfuncinfo$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ PROC	; icu_56::DateIntervalFormat::PatternInfo::~PatternInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ ENDP	; icu_56::DateIntervalFormat::PatternInfo::~PatternInfo
PUBLIC	??4DateIntervalFormat@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::DateIntervalFormat::operator=
PUBLIC	??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z	; icu_56::DateIntervalFormat::DateIntervalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$3
__ehfuncinfo$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_itvfmt$ = 8						; size = 4
??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z PROC		; icu_56::DateIntervalFormat::DateIntervalFormat, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _itvfmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@ABV01@@Z		; icu_56::Format::Format
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DateIntervalFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
	mov	eax, DWORD PTR _itvfmt$[ebp]
	add	eax, 336				; 00000150H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	OFFSET ??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1660], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1664], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1668], 0
; Line 137
	mov	eax, DWORD PTR _itvfmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DateIntervalFormat@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::DateIntervalFormat::operator=
; Line 138
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z$3:
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::DateIntervalFormat::DateIntervalFormat
PUBLIC	??4PatternInfo@DateIntervalFormat@icu_56@@QAEAAU012@ABU012@@Z ; icu_56::DateIntervalFormat::PatternInfo::operator=
EXTRN	__imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DateIntervalFormat@icu_56@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv317 = -388						; size = 4
tv297 = -388						; size = 4
tv277 = -388						; size = 4
tv180 = -388						; size = 4
tv168 = -388						; size = 4
tv156 = -388						; size = 4
tv144 = -388						; size = 4
tv132 = -388						; size = 4
tv88 = -388						; size = 4
tv76 = -388						; size = 4
$T51512 = -380						; size = 4
$T51513 = -368						; size = 4
$T51516 = -356						; size = 4
$T51517 = -344						; size = 4
$T51520 = -332						; size = 4
$T51521 = -320						; size = 4
$T51524 = -308						; size = 4
$T51525 = -296						; size = 4
$T51528 = -284						; size = 4
$T51529 = -272						; size = 4
$T51532 = -260						; size = 4
$T51533 = -248						; size = 4
$T51536 = -236						; size = 4
$T51537 = -224						; size = 4
_i$43412 = -17						; size = 1
_this$ = -8						; size = 4
_itvfmt$ = 8						; size = 4
??4DateIntervalFormat@icu_56@@IAEAAV01@ABV01@@Z PROC	; icu_56::DateIntervalFormat::operator=, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _itvfmt$[ebp]
	je	$LN12@operator@2
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T51513[ebp], ecx
	mov	edx, DWORD PTR $T51513[ebp]
	mov	DWORD PTR $T51512[ebp], edx
	cmp	DWORD PTR $T51512[ebp], 0
	je	SHORT $LN15@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51512[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51512[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN16@operator@2
$LN15@operator@2:
	mov	DWORD PTR tv76[ebp], 0
$LN16@operator@2:
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR $T51517[ebp], ecx
	mov	edx, DWORD PTR $T51517[ebp]
	mov	DWORD PTR $T51516[ebp], edx
	cmp	DWORD PTR $T51516[ebp], 0
	je	SHORT $LN17@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51516[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51516[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN18@operator@2
$LN17@operator@2:
	mov	DWORD PTR tv88[ebp], 0
$LN18@operator@2:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR $T51521[ebp], ecx
	mov	edx, DWORD PTR $T51521[ebp]
	mov	DWORD PTR $T51520[ebp], edx
	cmp	DWORD PTR $T51520[ebp], 0
	je	SHORT $LN19@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51520[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51520[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN20@operator@2
$LN19@operator@2:
	mov	DWORD PTR tv132[ebp], 0
$LN20@operator@2:
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	mov	DWORD PTR $T51525[ebp], ecx
	mov	edx, DWORD PTR $T51525[ebp]
	mov	DWORD PTR $T51524[ebp], edx
	cmp	DWORD PTR $T51524[ebp], 0
	je	SHORT $LN21@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51524[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51524[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN22@operator@2
$LN21@operator@2:
	mov	DWORD PTR tv144[ebp], 0
$LN22@operator@2:
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	DWORD PTR $T51529[ebp], ecx
	mov	edx, DWORD PTR $T51529[ebp]
	mov	DWORD PTR $T51528[ebp], edx
	cmp	DWORD PTR $T51528[ebp], 0
	je	SHORT $LN23@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51528[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51528[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN24@operator@2
$LN23@operator@2:
	mov	DWORD PTR tv156[ebp], 0
$LN24@operator@2:
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	mov	DWORD PTR $T51533[ebp], ecx
	mov	edx, DWORD PTR $T51533[ebp]
	mov	DWORD PTR $T51532[ebp], edx
	cmp	DWORD PTR $T51532[ebp], 0
	je	SHORT $LN25@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51532[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51532[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN26@operator@2
$LN25@operator@2:
	mov	DWORD PTR tv168[ebp], 0
$LN26@operator@2:
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	mov	DWORD PTR $T51537[ebp], ecx
	mov	edx, DWORD PTR $T51537[ebp]
	mov	DWORD PTR $T51536[ebp], edx
	cmp	DWORD PTR $T51536[ebp], 0
	je	SHORT $LN27@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51536[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51536[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv180[ebp], eax
	jmp	SHORT $LN28@operator@2
$LN27@operator@2:
	mov	DWORD PTR tv180[ebp], 0
$LN28@operator@2:
; Line 151
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN11@operator@2
; Line 152
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _itvfmt$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax
; Line 153
	jmp	SHORT $LN10@operator@2
$LN11@operator@2:
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
$LN10@operator@2:
; Line 156
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN9@operator@2
; Line 157
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _itvfmt$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], eax
; Line 158
	jmp	SHORT $LN8@operator@2
$LN9@operator@2:
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
$LN8@operator@2:
; Line 161
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN7@operator@2
; Line 162
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	edx, DWORD PTR _itvfmt$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], eax
; Line 163
	jmp	SHORT $LN6@operator@2
$LN7@operator@2:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
$LN6@operator@2:
; Line 166
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	SHORT $LN5@operator@2
; Line 167
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	mov	edx, DWORD PTR _itvfmt$[ebp]
	mov	eax, DWORD PTR [edx+332]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+332], eax
; Line 168
	jmp	SHORT $LN4@operator@2
$LN5@operator@2:
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
$LN4@operator@2:
; Line 171
	mov	eax, DWORD PTR _itvfmt$[ebp]
	add	eax, 540				; 0000021cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 173
	mov	BYTE PTR _i$43412[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	al, BYTE PTR _i$43412[ebp]
	add	al, 1
	mov	BYTE PTR _i$43412[ebp], al
$LN3@operator@2:
	movsx	eax, BYTE PTR _i$43412[ebp]
	cmp	eax, 8
	jge	SHORT $LN1@operator@2
; Line 174
	movsx	eax, BYTE PTR _i$43412[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _itvfmt$[ebp]
	lea	edx, DWORD PTR [ecx+eax+604]
	push	edx
	movsx	eax, BYTE PTR _i$43412[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+604]
	call	??4PatternInfo@DateIntervalFormat@icu_56@@QAEAAU012@ABU012@@Z
; Line 175
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
; Line 176
	mov	eax, DWORD PTR _itvfmt$[ebp]
	add	eax, 336				; 00000150H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_??4Locale@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 177
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+1660], 0
	je	SHORT $LN29@operator@2
	mov	ecx, DWORD PTR _itvfmt$[ebp]
	mov	edx, DWORD PTR [ecx+1660]
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN30@operator@2
$LN29@operator@2:
	mov	DWORD PTR tv277[ebp], 0
$LN30@operator@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv277[ebp]
	mov	DWORD PTR [ecx+1660], edx
; Line 178
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+1664], 0
	je	SHORT $LN31@operator@2
	mov	ecx, DWORD PTR _itvfmt$[ebp]
	mov	edx, DWORD PTR [ecx+1664]
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv297[ebp], eax
	jmp	SHORT $LN32@operator@2
$LN31@operator@2:
	mov	DWORD PTR tv297[ebp], 0
$LN32@operator@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv297[ebp]
	mov	DWORD PTR [ecx+1664], edx
; Line 179
	mov	eax, DWORD PTR _itvfmt$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN33@operator@2
	mov	ecx, DWORD PTR _itvfmt$[ebp]
	mov	edx, DWORD PTR [ecx+1668]
	mov	eax, DWORD PTR _itvfmt$[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN34@operator@2
$LN33@operator@2:
	mov	DWORD PTR tv317[ebp], 0
$LN34@operator@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv317[ebp]
	mov	DWORD PTR [ecx+1668], edx
$LN12@operator@2:
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DateIntervalFormat@icu_56@@IAEAAV01@ABV01@@Z ENDP	; icu_56::DateIntervalFormat::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4PatternInfo@DateIntervalFormat@icu_56@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PatternInfo@DateIntervalFormat@icu_56@@QAEAAU012@ABU012@@Z PROC ; icu_56::DateIntervalFormat::PatternInfo::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+128], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PatternInfo@DateIntervalFormat@icu_56@@QAEAAU012@ABU012@@Z ENDP ; icu_56::DateIntervalFormat::PatternInfo::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DateIntervalFormat@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$3
__ehfuncinfo$??1DateIntervalFormat@icu_56@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1DateIntervalFormat@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DateIntervalFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv198 = -388						; size = 4
tv186 = -388						; size = 4
tv174 = -388						; size = 4
tv162 = -388						; size = 4
tv150 = -388						; size = 4
tv138 = -388						; size = 4
tv94 = -388						; size = 4
$T51550 = -380						; size = 4
$T51551 = -368						; size = 4
$T51554 = -356						; size = 4
$T51555 = -344						; size = 4
$T51558 = -332						; size = 4
$T51559 = -320						; size = 4
$T51562 = -308						; size = 4
$T51563 = -296						; size = 4
$T51566 = -284						; size = 4
$T51567 = -272						; size = 4
$T51570 = -260						; size = 4
$T51571 = -248						; size = 4
$T51574 = -236						; size = 4
$T51575 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DateIntervalFormat@icu_56@@UAE@XZ PROC		; icu_56::DateIntervalFormat::~DateIntervalFormat, COMDAT
; _this$ = ecx
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DateIntervalFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DateIntervalFormat@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR $T51551[ebp], ecx
	mov	edx, DWORD PTR $T51551[ebp]
	mov	DWORD PTR $T51550[ebp], edx
	cmp	DWORD PTR $T51550[ebp], 0
	je	SHORT $LN3@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51550[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51550[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN4@DateInterv
$LN3@DateInterv:
	mov	DWORD PTR tv94[ebp], 0
$LN4@DateInterv:
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR $T51555[ebp], ecx
	mov	edx, DWORD PTR $T51555[ebp]
	mov	DWORD PTR $T51554[ebp], edx
	cmp	DWORD PTR $T51554[ebp], 0
	je	SHORT $LN5@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51554[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51554[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN6@DateInterv
$LN5@DateInterv:
	mov	DWORD PTR tv138[ebp], 0
$LN6@DateInterv:
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR $T51559[ebp], ecx
	mov	edx, DWORD PTR $T51559[ebp]
	mov	DWORD PTR $T51558[ebp], edx
	cmp	DWORD PTR $T51558[ebp], 0
	je	SHORT $LN7@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51558[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51558[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN8@DateInterv
$LN7@DateInterv:
	mov	DWORD PTR tv150[ebp], 0
$LN8@DateInterv:
; Line 189
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	mov	DWORD PTR $T51563[ebp], ecx
	mov	edx, DWORD PTR $T51563[ebp]
	mov	DWORD PTR $T51562[ebp], edx
	cmp	DWORD PTR $T51562[ebp], 0
	je	SHORT $LN9@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51562[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51562[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN10@DateInterv
$LN9@DateInterv:
	mov	DWORD PTR tv162[ebp], 0
$LN10@DateInterv:
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	DWORD PTR $T51567[ebp], ecx
	mov	edx, DWORD PTR $T51567[ebp]
	mov	DWORD PTR $T51566[ebp], edx
	cmp	DWORD PTR $T51566[ebp], 0
	je	SHORT $LN11@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51566[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51566[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv174[ebp], eax
	jmp	SHORT $LN12@DateInterv
$LN11@DateInterv:
	mov	DWORD PTR tv174[ebp], 0
$LN12@DateInterv:
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	mov	DWORD PTR $T51571[ebp], ecx
	mov	edx, DWORD PTR $T51571[ebp]
	mov	DWORD PTR $T51570[ebp], edx
	cmp	DWORD PTR $T51570[ebp], 0
	je	SHORT $LN13@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51570[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51570[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN14@DateInterv
$LN13@DateInterv:
	mov	DWORD PTR tv186[ebp], 0
$LN14@DateInterv:
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	mov	DWORD PTR $T51575[ebp], ecx
	mov	edx, DWORD PTR $T51575[ebp]
	mov	DWORD PTR $T51574[ebp], edx
	cmp	DWORD PTR $T51574[ebp], 0
	je	SHORT $LN15@DateInterv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51574[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51574[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN1@DateInterv
$LN15@DateInterv:
	mov	DWORD PTR tv198[ebp], 0
$LN1@DateInterv:
; Line 193
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DateIntervalFormat@icu_56@@UAE@XZ$3:
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??1DateIntervalFormat@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DateIntervalFormat@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DateIntervalFormat@icu_56@@UAE@XZ ENDP		; icu_56::DateIntervalFormat::~DateIntervalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ$0
__ehfuncinfo$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T51590 = -236						; size = 4
$T51591 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ PROC ; icu_56::DateIntervalFormat::clone, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 198
	mov	esi, esp
	push	1672					; 00000688H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51591[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51591[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51591[ebp]
	call	??0DateIntervalFormat@icu_56@@IAE@ABV01@@Z ; icu_56::DateIntervalFormat::DateIntervalFormat
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T51590[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T51590[ebp]
; Line 199
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51591[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@DateIntervalFormat@icu_56@@UBEPAVFormat@2@XZ ENDP ; icu_56::DateIntervalFormat::clone
EXTRN	__imp_??8Locale@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	??8Format@icu_56@@UBECABV01@@Z:PROC		; icu_56::Format::operator==
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8DateIntervalFormat@icu_56@@UBECABVFormat@1@@Z
_TEXT	SEGMENT
tv289 = -241						; size = 1
tv242 = -241						; size = 1
_i$43456 = -41						; size = 1
_res$43455 = -29					; size = 1
_fmt$43453 = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8DateIntervalFormat@icu_56@@UBECABVFormat@1@@Z PROC	; icu_56::DateIntervalFormat::operator==, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	je	$LN4@operator@3
; Line 205
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _fmt$43453[ebp], eax
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _fmt$43453[ebp]
	je	$LN17@operator@3
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Format@icu_56@@UBECABV01@@Z		; icu_56::Format::operator==
	movsx	edx, al
	test	edx, edx
	je	$LN9@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	mov	edx, DWORD PTR [ecx+320]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+320]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+324], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	eax, DWORD PTR _fmt$43453[ebp]
	mov	ecx, DWORD PTR [eax+324]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+324]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+328], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	eax, DWORD PTR _fmt$43453[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+328]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@operator@3
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+332], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	eax, DWORD PTR _fmt$43453[ebp]
	mov	ecx, DWORD PTR [eax+332]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+332]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+332]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@operator@3
	mov	edx, DWORD PTR _fmt$43453[ebp]
	add	edx, 540				; 0000021cH
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN9@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1660], 0
	jne	SHORT $LN8@operator@3
	mov	edx, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [edx+1660], 0
	je	SHORT $LN10@operator@3
$LN8@operator@3:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1660], 0
	je	$LN9@operator@3
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [ecx+1660], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	edx, DWORD PTR _fmt$43453[ebp]
	mov	eax, DWORD PTR [edx+1660]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1660]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	$LN9@operator@3
$LN10@operator@3:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1664], 0
	jne	SHORT $LN11@operator@3
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [ecx+1664], 0
	je	SHORT $LN13@operator@3
$LN11@operator@3:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1664], 0
	je	$LN9@operator@3
	mov	eax, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [eax+1664], 0
	je	$LN9@operator@3
	mov	esi, esp
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	mov	edx, DWORD PTR [ecx+1664]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@operator@3
$LN13@operator@3:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1668], 0
	jne	SHORT $LN14@operator@3
	mov	eax, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN16@operator@3
$LN14@operator@3:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1668], 0
	je	SHORT $LN9@operator@3
	mov	edx, DWORD PTR _fmt$43453[ebp]
	cmp	DWORD PTR [edx+1668], 0
	je	SHORT $LN9@operator@3
	mov	esi, esp
	mov	eax, DWORD PTR _fmt$43453[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1668]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@operator@3
$LN16@operator@3:
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_??8Locale@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN17@operator@3
$LN9@operator@3:
	mov	BYTE PTR tv242[ebp], 0
	jmp	SHORT $LN18@operator@3
$LN17@operator@3:
	mov	BYTE PTR tv242[ebp], 1
$LN18@operator@3:
	mov	al, BYTE PTR tv242[ebp]
	mov	BYTE PTR _res$43455[ebp], al
; Line 235
	mov	BYTE PTR _i$43456[ebp], 0
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
	mov	al, BYTE PTR _i$43456[ebp]
	add	al, 1
	mov	BYTE PTR _i$43456[ebp], al
$LN3@operator@3:
	movsx	eax, BYTE PTR _i$43456[ebp]
	cmp	eax, 8
	jge	$LN1@operator@3
	movsx	eax, BYTE PTR _res$43455[ebp]
	cmp	eax, 1
	jne	$LN1@operator@3
; Line 241
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	lea	edx, DWORD PTR [ecx+eax+604]
	mov	esi, esp
	push	edx
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+604]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN19@operator@3
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	lea	edx, DWORD PTR [ecx+eax+668]
	mov	esi, esp
	push	edx
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+668]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN19@operator@3
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+eax+732]
	movsx	eax, BYTE PTR _i$43456[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _fmt$43453[ebp]
	movsx	eax, BYTE PTR [ecx+eax+732]
	cmp	edx, eax
	jne	SHORT $LN19@operator@3
	mov	BYTE PTR tv289[ebp], 1
	jmp	SHORT $LN20@operator@3
$LN19@operator@3:
	mov	BYTE PTR tv289[ebp], 0
$LN20@operator@3:
	mov	cl, BYTE PTR tv289[ebp]
	mov	BYTE PTR _res$43455[ebp], cl
; Line 242
	jmp	$LN2@operator@3
$LN1@operator@3:
; Line 243
	mov	al, BYTE PTR _res$43455[ebp]
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
; Line 245
	xor	al, al
$LN5@operator@3:
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8DateIntervalFormat@icu_56@@UBECABVFormat@1@@Z ENDP	; icu_56::DateIntervalFormat::operator==
_TEXT	ENDS
PUBLIC	?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@PBVDateInterval@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::format
PUBLIC	??_R0?AVDateInterval@icu_56@@@8			; icu_56::DateInterval `RTTI Type Descriptor'
EXTRN	?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ:PROC ; icu_56::Formattable::getObject
EXTRN	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ:PROC ; icu_56::Formattable::getType
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVDateInterval@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDateInterval@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DateInterval `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDateInterval@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?format@DateIntervalFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_interval$43470 = -32					; size = 4
_formatObj$43469 = -20					; size = 4
_this$ = -8						; size = 4
_obj$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_fieldPosition$ = 16					; size = 4
_status$ = 20						; size = 4
?format@DateIntervalFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::format, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@format
; Line 256
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	SHORT $LN4@format
$LN3@format:
; Line 259
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
	cmp	eax, 6
	jne	SHORT $LN2@format
; Line 260
	mov	ecx, DWORD PTR _obj$[ebp]
	call	?getObject@Formattable@icu_56@@QBEPBVUObject@2@XZ ; icu_56::Formattable::getObject
	mov	DWORD PTR _formatObj$43469[ebp], eax
; Line 261
	push	0
	push	OFFSET ??_R0?AVDateInterval@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _formatObj$43469[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _interval$43470[ebp], eax
; Line 262
	cmp	DWORD PTR _interval$43470[ebp], 0
	je	SHORT $LN2@format
; Line 263
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _interval$43470[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@PBVDateInterval@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::format
	jmp	SHORT $LN4@format
$LN2@format:
; Line 266
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 267
	mov	eax, DWORD PTR _appendTo$[ebp]
$LN4@format:
; Line 268
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DateIntervalFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::format
EXTRN	__imp_?getToDate@DateInterval@icu_56@@QBENXZ:PROC
EXTRN	__imp_?getFromDate@DateInterval@icu_56@@QBENXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@PBVDateInterval@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dtInterval$ = 8					; size = 4
_appendTo$ = 12						; size = 4
_fieldPosition$ = 16					; size = 4
_status$ = 20						; size = 4
?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@PBVDateInterval@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::format, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\dtitvfmt.cpp
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 276
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@format@2
; Line 277
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN4@format@2
$LN3@format@2:
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	$LN1@format@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	$LN1@format@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	$LN1@format@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	$LN1@format@2
; Line 282
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _dtInterval$[ebp]
	call	DWORD PTR __imp_?getFromDate@DateInterval@icu_56@@QBENXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+328]
	call	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
; Line 283
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _dtInterval$[ebp]
	call	DWORD PTR __imp_?getToDate@DateInterval@icu_56@@QBENXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+332]
	call	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
; Line 284
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@format@2
; Line 285
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::format
	jmp	SHORT $LN4@format@2
$LN1@format@2:
; Line 288
	mov	eax, DWORD PTR _appendTo$[ebp]
$LN4@format@2:
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@PBVDateInterval@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::format
_TEXT	ENDS
PUBLIC	?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::fallbackFormat
PUBLIC	__$ArrayPad$
EXTRN	?isFieldUnitIgnored@SimpleDateFormat@icu_56@@QBECW4UCalendarDateFields@@@Z:PROC ; icu_56::SimpleDateFormat::isFieldUnitIgnored
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	?calendarFieldToIntervalIndex@DateIntervalInfo@icu_56@@CA?AW4IntervalPatternIndex@12@W4UCalendarDateFields@@AAW4UErrorCode@@@Z:PROC ; icu_56::DateIntervalInfo::calendarFieldToIntervalIndex
EXTRN	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::get
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv203 = -485						; size = 1
$T51629 = -480						; size = 4
$T51630 = -468						; size = 4
_otherPos$43527 = -264					; size = 16
_originalPattern$ = -240				; size = 64
_secondCal$ = -168					; size = 4
_firstCal$ = -156					; size = 4
_originalPattern$43519 = -144				; size = 64
_intervalPattern$ = -72					; size = 4
_itvPtnIndex$ = -60					; size = 4
_fromToOnSameDay$ = -45					; size = 1
_field$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fromCalendar$ = 8					; size = 4
_toCalendar$ = 12					; size = 4
_appendTo$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::format, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 476				; 000001dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 119				; 00000077H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 298
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@format@3
; Line 299
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN27@format@3
$LN26@format@3:
; Line 304
	mov	esi, esp
	mov	eax, DWORD PTR _toCalendar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@format@3
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 306
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN27@format@3
$LN25@format@3:
; Line 310
	mov	DWORD PTR _field$[ebp], 23		; 00000017H
; Line 312
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN24@format@3
; Line 313
	mov	DWORD PTR _field$[ebp], 0
; Line 314
	jmp	$LN23@format@3
$LN24@format@3:
; Line 315
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN22@format@3
; Line 316
	mov	DWORD PTR _field$[ebp], 1
; Line 317
	jmp	$LN23@format@3
$LN22@format@3:
; Line 318
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN20@format@3
; Line 319
	mov	DWORD PTR _field$[ebp], 2
; Line 320
	jmp	$LN23@format@3
$LN20@format@3:
; Line 321
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN18@format@3
; Line 322
	mov	DWORD PTR _field$[ebp], 5
; Line 323
	jmp	$LN23@format@3
$LN18@format@3:
; Line 324
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	9
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN16@format@3
; Line 325
	mov	DWORD PTR _field$[ebp], 9
; Line 326
	jmp	SHORT $LN23@format@3
$LN16@format@3:
; Line 327
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN14@format@3
; Line 328
	mov	DWORD PTR _field$[ebp], 10		; 0000000aH
; Line 329
	jmp	SHORT $LN23@format@3
$LN14@format@3:
; Line 330
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN12@format@3
; Line 331
	mov	DWORD PTR _field$[ebp], 12		; 0000000cH
; Line 332
	jmp	SHORT $LN23@format@3
$LN12@format@3:
; Line 333
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _fromCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	mov	esi, eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	call	?get@Calendar@icu_56@@QBEHW4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::Calendar::get
	cmp	esi, eax
	je	SHORT $LN23@format@3
; Line 334
	mov	DWORD PTR _field$[ebp], 13		; 0000000dH
$LN23@format@3:
; Line 337
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@format@3
; Line 338
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN27@format@3
$LN9@format@3:
; Line 340
	cmp	DWORD PTR _field$[ebp], 23		; 00000017H
	jne	SHORT $LN8@format@3
; Line 344
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@format@3
$LN8@format@3:
; Line 346
	cmp	DWORD PTR _field$[ebp], 9
	je	SHORT $LN29@format@3
	cmp	DWORD PTR _field$[ebp], 10		; 0000000aH
	je	SHORT $LN29@format@3
	cmp	DWORD PTR _field$[ebp], 12		; 0000000cH
	je	SHORT $LN29@format@3
	cmp	DWORD PTR _field$[ebp], 13		; 0000000dH
	je	SHORT $LN29@format@3
	mov	BYTE PTR tv203[ebp], 0
	jmp	SHORT $LN30@format@3
$LN29@format@3:
	mov	BYTE PTR tv203[ebp], 1
$LN30@format@3:
	mov	al, BYTE PTR tv203[ebp]
	mov	BYTE PTR _fromToOnSameDay$[ebp], al
; Line 351
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	call	?calendarFieldToIntervalIndex@DateIntervalInfo@icu_56@@CA?AW4IntervalPatternIndex@12@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::calendarFieldToIntervalIndex
	add	esp, 8
	mov	DWORD PTR _itvPtnIndex$[ebp], eax
; Line 352
	mov	eax, DWORD PTR _itvPtnIndex$[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+604]
	mov	DWORD PTR _intervalPattern$[ebp], edx
; Line 355
	mov	esi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN7@format@3
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@format@3
; Line 356
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+324]
	call	?isFieldUnitIgnored@SimpleDateFormat@icu_56@@QBECW4UCalendarDateFields@@@Z ; icu_56::SimpleDateFormat::isFieldUnitIgnored
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@format@3
; Line 361
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN27@format@3
$LN6@format@3:
; Line 363
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	movzx	eax, BYTE PTR _fromToOnSameDay$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::fallbackFormat
	jmp	$LN27@format@3
$LN7@format@3:
; Line 368
	mov	esi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN5@format@3
; Line 370
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$43519[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 371
	mov	esi, esp
	lea	eax, DWORD PTR _originalPattern$43519[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 372
	mov	eax, DWORD PTR _intervalPattern$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 373
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	movzx	eax, BYTE PTR _fromToOnSameDay$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toCalendar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::fallbackFormat
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 374
	mov	esi, esp
	lea	eax, DWORD PTR _originalPattern$43519[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 375
	mov	eax, DWORD PTR _appendTo$[ebp]
	mov	DWORD PTR $T51629[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$43519[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51629[ebp]
	jmp	$LN27@format@3
$LN5@format@3:
; Line 379
	mov	eax, DWORD PTR _intervalPattern$[ebp]
	movsx	ecx, BYTE PTR [eax+128]
	test	ecx, ecx
	je	SHORT $LN4@format@3
; Line 380
	mov	eax, DWORD PTR _toCalendar$[ebp]
	mov	DWORD PTR _firstCal$[ebp], eax
; Line 381
	mov	eax, DWORD PTR _fromCalendar$[ebp]
	mov	DWORD PTR _secondCal$[ebp], eax
; Line 382
	jmp	SHORT $LN3@format@3
$LN4@format@3:
; Line 383
	mov	eax, DWORD PTR _fromCalendar$[ebp]
	mov	DWORD PTR _firstCal$[ebp], eax
; Line 384
	mov	eax, DWORD PTR _toCalendar$[ebp]
	mov	DWORD PTR _secondCal$[ebp], eax
$LN3@format@3:
; Line 388
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 389
	mov	esi, esp
	lea	eax, DWORD PTR _originalPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 390
	mov	esi, esp
	mov	eax, DWORD PTR _intervalPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 391
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _firstCal$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 392
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN2@format@3
; Line 393
	mov	eax, DWORD PTR _intervalPattern$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 394
	lea	ecx, DWORD PTR _otherPos$43527[ebp]
	call	??0FieldPosition@icu_56@@QAE@XZ		; icu_56::FieldPosition::FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 395
	mov	ecx, DWORD PTR _pos$[ebp]
	call	?getField@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getField
	push	eax
	lea	ecx, DWORD PTR _otherPos$43527[ebp]
	call	?setField@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setField
; Line 396
	mov	esi, esp
	lea	eax, DWORD PTR _otherPos$43527[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _secondCal$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 397
	mov	ecx, DWORD PTR _pos$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jne	SHORT $LN1@format@3
	lea	ecx, DWORD PTR _otherPos$43527[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jle	SHORT $LN1@format@3
; Line 398
	lea	eax, DWORD PTR _otherPos$43527[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPosition::operator=
$LN1@format@3:
; Line 400
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _otherPos$43527[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
$LN2@format@3:
; Line 401
	mov	esi, esp
	lea	eax, DWORD PTR _originalPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 402
	mov	eax, DWORD PTR _appendTo$[ebp]
	mov	DWORD PTR $T51630[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51630[ebp]
$LN27@format@3:
; Line 403
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@format@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN39@format@3:
	DD	3
	DD	$LN38@format@3
$LN38@format@3:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN34@format@3
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN35@format@3
	DD	-264					; fffffef8H
	DD	16					; 00000010H
	DD	$LN36@format@3
$LN36@format@3:
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN35@format@3:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN34@format@3:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$43519[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _originalPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _otherPos$43527[ebp]
	jmp	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
__ehhandler$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-492]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?format@DateIntervalFormat@icu_56@@QBEAAVUnicodeString@2@AAVCalendar@2@0AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseObject@DateIntervalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?parseObject@DateIntervalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z PROC ; icu_56::DateIntervalFormat::parseObject, COMDAT
; _this$ = ecx
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 414
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseObject@DateIntervalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ENDP ; icu_56::DateIntervalFormat::parseObject
_TEXT	ENDS
PUBLIC	?getDateIntervalInfo@DateIntervalFormat@icu_56@@QBEPBVDateIntervalInfo@2@XZ ; icu_56::DateIntervalFormat::getDateIntervalInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDateIntervalInfo@DateIntervalFormat@icu_56@@QBEPBVDateIntervalInfo@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDateIntervalInfo@DateIntervalFormat@icu_56@@QBEPBVDateIntervalInfo@2@XZ PROC ; icu_56::DateIntervalFormat::getDateIntervalInfo, COMDAT
; _this$ = ecx
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+320]
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDateIntervalInfo@DateIntervalFormat@icu_56@@QBEPBVDateIntervalInfo@2@XZ ENDP ; icu_56::DateIntervalFormat::getDateIntervalInfo
_TEXT	ENDS
PUBLIC	?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::initializePattern
PUBLIC	?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::setDateIntervalInfo
EXTRN	??0DateIntervalInfo@icu_56@@QAE@ABV01@@Z:PROC	; icu_56::DateIntervalInfo::DateIntervalInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv154 = -340						; size = 4
tv141 = -340						; size = 4
tv128 = -340						; size = 4
tv85 = -340						; size = 4
tv75 = -340						; size = 4
$T51652 = -332						; size = 4
$T51653 = -320						; size = 4
$T51656 = -308						; size = 4
$T51657 = -296						; size = 4
$T51660 = -284						; size = 4
$T51661 = -272						; size = 4
$T51664 = -260						; size = 4
$T51665 = -248						; size = 4
$T51668 = -236						; size = 4
$T51669 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_newItvPattern$ = 8					; size = 4
_status$ = 12						; size = 4
?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::setDateIntervalInfo, COMDAT
; _this$ = ecx
; Line 427
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	mov	DWORD PTR $T51653[ebp], ecx
	mov	edx, DWORD PTR $T51653[ebp]
	mov	DWORD PTR $T51652[ebp], edx
	cmp	DWORD PTR $T51652[ebp], 0
	je	SHORT $LN4@setDateInt
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51652[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51652[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@setDateInt
$LN4@setDateInt:
	mov	DWORD PTR tv75[ebp], 0
$LN5@setDateInt:
; Line 429
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51657[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51657[ebp], 0
	je	SHORT $LN6@setDateInt
	mov	eax, DWORD PTR _newItvPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51657[ebp]
	call	??0DateIntervalInfo@icu_56@@QAE@ABV01@@Z ; icu_56::DateIntervalInfo::DateIntervalInfo
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@setDateInt
$LN6@setDateInt:
	mov	DWORD PTR tv85[ebp], 0
$LN7@setDateInt:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T51656[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T51656[ebp]
	mov	DWORD PTR [edx+320], eax
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	mov	DWORD PTR $T51661[ebp], ecx
	mov	edx, DWORD PTR $T51661[ebp]
	mov	DWORD PTR $T51660[ebp], edx
	cmp	DWORD PTR $T51660[ebp], 0
	je	SHORT $LN8@setDateInt
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51660[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51660[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN9@setDateInt
$LN8@setDateInt:
	mov	DWORD PTR tv128[ebp], 0
$LN9@setDateInt:
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1660], 0
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	mov	DWORD PTR $T51665[ebp], ecx
	mov	edx, DWORD PTR $T51665[ebp]
	mov	DWORD PTR $T51664[ebp], edx
	cmp	DWORD PTR $T51664[ebp], 0
	je	SHORT $LN10@setDateInt
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51664[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51664[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN11@setDateInt
$LN10@setDateInt:
	mov	DWORD PTR tv141[ebp], 0
$LN11@setDateInt:
; Line 435
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1664], 0
; Line 436
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	mov	DWORD PTR $T51669[ebp], ecx
	mov	edx, DWORD PTR $T51669[ebp]
	mov	DWORD PTR $T51668[ebp], edx
	cmp	DWORD PTR $T51668[ebp], 0
	je	SHORT $LN12@setDateInt
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T51668[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T51668[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN13@setDateInt
$LN12@setDateInt:
	mov	DWORD PTR tv154[ebp], 0
$LN13@setDateInt:
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1668], 0
; Line 439
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN2@setDateInt
; Line 440
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::initializePattern
$LN2@setDateInt:
; Line 442
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51657[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setDateIntervalInfo@DateIntervalFormat@icu_56@@QAEXABVDateIntervalInfo@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::setDateIntervalInfo
PUBLIC	?getDateFormat@DateIntervalFormat@icu_56@@QBEPBVDateFormat@2@XZ ; icu_56::DateIntervalFormat::getDateFormat
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDateFormat@DateIntervalFormat@icu_56@@QBEPBVDateFormat@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDateFormat@DateIntervalFormat@icu_56@@QBEPBVDateFormat@2@XZ PROC ; icu_56::DateIntervalFormat::getDateFormat, COMDAT
; _this$ = ecx
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+324]
; Line 449
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDateFormat@DateIntervalFormat@icu_56@@QBEPBVDateFormat@2@XZ ENDP ; icu_56::DateIntervalFormat::getDateFormat
_TEXT	ENDS
EXTRN	?setTimeZone@Calendar@icu_56@@QAEXABVTimeZone@2@@Z:PROC ; icu_56::Calendar::setTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptTimeZone@DateIntervalFormat@icu_56@@UAEXPAVTimeZone@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_zone$ = 8						; size = 4
?adoptTimeZone@DateIntervalFormat@icu_56@@UAEXPAVTimeZone@2@@Z PROC ; icu_56::DateIntervalFormat::adoptTimeZone, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN3@adoptTimeZ
; Line 456
	mov	esi, esp
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@adoptTimeZ:
; Line 462
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN2@adoptTimeZ
; Line 463
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+328]
	call	?setTimeZone@Calendar@icu_56@@QAEXABVTimeZone@2@@Z ; icu_56::Calendar::setTimeZone
$LN2@adoptTimeZ:
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	SHORT $LN4@adoptTimeZ
; Line 466
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+332]
	call	?setTimeZone@Calendar@icu_56@@QAEXABVTimeZone@2@@Z ; icu_56::Calendar::setTimeZone
$LN4@adoptTimeZ:
; Line 468
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptTimeZone@DateIntervalFormat@icu_56@@UAEXPAVTimeZone@2@@Z ENDP ; icu_56::DateIntervalFormat::adoptTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setTimeZone@DateIntervalFormat@icu_56@@UAEXABVTimeZone@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_zone$ = 8						; size = 4
?setTimeZone@DateIntervalFormat@icu_56@@UAEXABVTimeZone@2@@Z PROC ; icu_56::DateIntervalFormat::setTimeZone, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN3@setTimeZon
; Line 474
	mov	esi, esp
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setTimeZon:
; Line 478
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN2@setTimeZon
; Line 479
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+328]
	call	?setTimeZone@Calendar@icu_56@@QAEXABVTimeZone@2@@Z ; icu_56::Calendar::setTimeZone
$LN2@setTimeZon:
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	SHORT $LN4@setTimeZon
; Line 482
	mov	eax, DWORD PTR _zone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+332]
	call	?setTimeZone@Calendar@icu_56@@QAEXABVTimeZone@2@@Z ; icu_56::Calendar::setTimeZone
$LN4@setTimeZon:
; Line 484
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTimeZone@DateIntervalFormat@icu_56@@UAEXABVTimeZone@2@@Z ENDP ; icu_56::DateIntervalFormat::setTimeZone
_TEXT	ENDS
EXTRN	?createDefault@TimeZone@icu_56@@SAPAV12@XZ:PROC	; icu_56::TimeZone::createDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTimeZone@DateIntervalFormat@icu_56@@UBEABVTimeZone@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTimeZone@DateIntervalFormat@icu_56@@UBEABVTimeZone@2@XZ PROC ; icu_56::DateIntervalFormat::getTimeZone, COMDAT
; _this$ = ecx
; Line 488
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 489
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN1@getTimeZon
; Line 490
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@getTimeZon
$LN1@getTimeZon:
; Line 493
	call	?createDefault@TimeZone@icu_56@@SAPAV12@XZ ; icu_56::TimeZone::createDefault
$LN2@getTimeZon:
; Line 494
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTimeZone@DateIntervalFormat@icu_56@@UBEABVTimeZone@2@XZ ENDP ; icu_56::DateIntervalFormat::getTimeZone
_TEXT	ENDS
PUBLIC	??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::DateIntervalFormat
EXTRN	?createInstanceForSkeleton@DateFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DateFormat::createInstanceForSkeleton
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$3
__ehfuncinfo$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv253 = -352						; size = 4
tv239 = -352						; size = 4
tv213 = -352						; size = 4
tv202 = -352						; size = 4
tv189 = -352						; size = 4
tv178 = -352						; size = 4
tv155 = -352						; size = 4
$T51689 = -344						; size = 4
$T51690 = -332						; size = 4
$T51693 = -320						; size = 4
$T51694 = -308						; size = 4
$T51697 = -296						; size = 4
$T51698 = -284						; size = 4
$T51701 = -272						; size = 4
$T51702 = -260						; size = 4
$T51705 = -248						; size = 4
$T51706 = -236						; size = 4
_dtfmt$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_dtItvInfo$ = 12					; size = 4
_skeleton$ = 16						; size = 4
_status$ = 20						; size = 4
??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::DateIntervalFormat, COMDAT
; _this$ = ecx
; Line 508
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Format@icu_56@@IAE@XZ		; icu_56::Format::Format
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DateIntervalFormat@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
	mov	esi, esp
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	OFFSET ??0PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1660], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1664], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1668], 0
; Line 509
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@DateInterv@2
; Line 510
	mov	eax, DWORD PTR _dtItvInfo$[ebp]
	mov	DWORD PTR $T51690[ebp], eax
	mov	ecx, DWORD PTR $T51690[ebp]
	mov	DWORD PTR $T51689[ebp], ecx
	cmp	DWORD PTR $T51689[ebp], 0
	je	SHORT $LN10@DateInterv@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51689[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51689[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN11@DateInterv@2
$LN10@DateInterv@2:
	mov	DWORD PTR tv155[ebp], 0
$LN11@DateInterv@2:
; Line 511
	jmp	$LN8@DateInterv@2
$LN7@DateInterv@2:
; Line 516
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _skeleton$[ebp]
	push	edx
	call	?createInstanceForSkeleton@DateFormat@icu_56@@SAPAV12@ABVUnicodeString@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::DateFormat::createInstanceForSkeleton
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dtfmt$[ebp], eax
; Line 517
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN6@DateInterv@2
; Line 518
	mov	eax, DWORD PTR _dtItvInfo$[ebp]
	mov	DWORD PTR $T51694[ebp], eax
	mov	ecx, DWORD PTR $T51694[ebp]
	mov	DWORD PTR $T51693[ebp], ecx
	cmp	DWORD PTR $T51693[ebp], 0
	je	SHORT $LN12@DateInterv@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51693[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51693[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN13@DateInterv@2
$LN12@DateInterv@2:
	mov	DWORD PTR tv178[ebp], 0
$LN13@DateInterv@2:
; Line 519
	mov	eax, DWORD PTR _dtfmt$[ebp]
	mov	DWORD PTR $T51698[ebp], eax
	mov	ecx, DWORD PTR $T51698[ebp]
	mov	DWORD PTR $T51697[ebp], ecx
	cmp	DWORD PTR $T51697[ebp], 0
	je	SHORT $LN14@DateInterv@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51697[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51697[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN15@DateInterv@2
$LN14@DateInterv@2:
	mov	DWORD PTR tv189[ebp], 0
$LN15@DateInterv@2:
; Line 520
	jmp	$LN8@DateInterv@2
$LN6@DateInterv@2:
; Line 522
	cmp	DWORD PTR _dtfmt$[ebp], 0
	je	SHORT $LN4@DateInterv@2
	cmp	DWORD PTR _dtItvInfo$[ebp], 0
	jne	$LN5@DateInterv@2
$LN4@DateInterv@2:
; Line 523
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 525
	mov	eax, DWORD PTR _dtfmt$[ebp]
	mov	DWORD PTR $T51702[ebp], eax
	mov	ecx, DWORD PTR $T51702[ebp]
	mov	DWORD PTR $T51701[ebp], ecx
	cmp	DWORD PTR $T51701[ebp], 0
	je	SHORT $LN16@DateInterv@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51701[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51701[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv202[ebp], eax
	jmp	SHORT $LN17@DateInterv@2
$LN16@DateInterv@2:
	mov	DWORD PTR tv202[ebp], 0
$LN17@DateInterv@2:
; Line 526
	mov	eax, DWORD PTR _dtItvInfo$[ebp]
	mov	DWORD PTR $T51706[ebp], eax
	mov	ecx, DWORD PTR $T51706[ebp]
	mov	DWORD PTR $T51705[ebp], ecx
	cmp	DWORD PTR $T51705[ebp], 0
	je	SHORT $LN18@DateInterv@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51705[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51705[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN19@DateInterv@2
$LN18@DateInterv@2:
	mov	DWORD PTR tv213[ebp], 0
$LN19@DateInterv@2:
; Line 527
	jmp	$LN8@DateInterv@2
$LN5@DateInterv@2:
; Line 529
	cmp	DWORD PTR _skeleton$[ebp], 0
	je	SHORT $LN3@DateInterv@2
; Line 530
	mov	esi, esp
	mov	eax, DWORD PTR _skeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DateInterv@2:
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dtItvInfo$[ebp]
	mov	DWORD PTR [eax+320], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dtfmt$[ebp]
	mov	DWORD PTR [eax+324], ecx
; Line 534
	mov	eax, DWORD PTR _dtfmt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dtfmt$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN2@DateInterv@2
; Line 535
	mov	eax, DWORD PTR _dtfmt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dtfmt$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv239[ebp], eax
	mov	ecx, DWORD PTR tv239[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv239[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], eax
; Line 536
	mov	eax, DWORD PTR _dtfmt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _dtfmt$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR tv253[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv253[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+332], eax
; Line 537
	jmp	SHORT $LN1@DateInterv@2
$LN2@DateInterv@2:
; Line 538
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0
; Line 539
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0
$LN1@DateInterv@2:
; Line 541
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::initializePattern
$LN8@DateInterv@2:
; Line 542
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Format@icu_56@@UAE@XZ		; icu_56::Format::~Format
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$3:
	push	OFFSET ??1PatternInfo@DateIntervalFormat@icu_56@@QAE@XZ
	push	8
	push	132					; 00000084H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 604				; 0000025cH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::DateIntervalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv133 = -292						; size = 4
tv86 = -292						; size = 4
tv75 = -292						; size = 4
$T51721 = -284						; size = 4
$T51722 = -272						; size = 4
$T51725 = -260						; size = 4
$T51726 = -248						; size = 4
$T51729 = -236						; size = 4
$T51730 = -224						; size = 4
_f$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_dtitvinf$ = 12						; size = 4
_skeleton$ = 16						; size = 4
_status$ = 20						; size = 4
?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::create, COMDAT
; Line 548
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 550
	mov	esi, esp
	push	1672					; 00000688H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51722[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51722[ebp], 0
	je	SHORT $LN6@create
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dtitvinf$[ebp]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51722[ebp]
	call	??0DateIntervalFormat@icu_56@@AAE@ABVLocale@1@PAVDateIntervalInfo@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::DateIntervalFormat
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN7@create
$LN6@create:
	mov	DWORD PTR tv75[ebp], 0
$LN7@create:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T51721[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T51721[ebp]
	mov	DWORD PTR _f$[ebp], edx
; Line 551
	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN3@create
; Line 552
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 553
	mov	eax, DWORD PTR _dtitvinf$[ebp]
	mov	DWORD PTR $T51726[ebp], eax
	mov	ecx, DWORD PTR $T51726[ebp]
	mov	DWORD PTR $T51725[ebp], ecx
	cmp	DWORD PTR $T51725[ebp], 0
	je	SHORT $LN8@create
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51725[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51725[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN9@create
$LN8@create:
	mov	DWORD PTR tv86[ebp], 0
$LN9@create:
; Line 554
	jmp	SHORT $LN2@create
$LN3@create:
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@create
; Line 556
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR $T51730[ebp], eax
	mov	ecx, DWORD PTR $T51730[ebp]
	mov	DWORD PTR $T51729[ebp], ecx
	cmp	DWORD PTR $T51729[ebp], 0
	je	SHORT $LN10@create
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T51729[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T51729[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN11@create
$LN10@create:
	mov	DWORD PTR tv133[ebp], 0
$LN11@create:
; Line 557
	mov	DWORD PTR _f$[ebp], 0
$LN2@create:
; Line 559
	mov	eax, DWORD PTR _f$[ebp]
; Line 560
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51722[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?create@DateIntervalFormat@icu_56@@CAPAV12@ABVLocale@2@PAVDateIntervalInfo@2@PBVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::create
PUBLIC	?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval
PUBLIC	?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::setFallbackPattern
PUBLIC	?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::fieldExistsInSkeleton
PUBLIC	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
PUBLIC	?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z ; icu_56::DateIntervalFormat::setSeparateDateTimePtn
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??_GCalendarData@icu_56@@QAEPAXI@Z		; icu_56::CalendarData::`scalar deleting destructor'
PUBLIC	?getDateTimeSkeleton@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@AAV32@111@Z ; icu_56::DateIntervalFormat::getDateTimeSkeleton
PUBLIC	__$ArrayPad$
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DateFormat::getBestPattern
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	_ures_getStringByIndex_56:PROC
EXTRN	?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z:PROC ; icu_56::CalendarData::getByKey
EXTRN	??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z:PROC ; icu_56::CalendarData::CalendarData
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ:PROC ; icu_56::DateIntervalInfo::getDefaultOrder
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	?getSmpFmtLocale@SimpleDateFormat@icu_56@@QBEABVLocale@2@XZ:PROC ; icu_56::SimpleDateFormat::getSmpFmtLocale
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$9
	DD	05H
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$11
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv380 = -1128						; size = 4
tv420 = -1124						; size = 4
tv214 = -1124						; size = 4
tv208 = -1124						; size = 4
tv185 = -1124						; size = 4
tv177 = -1124						; size = 4
$T51743 = -1116						; size = 4
$T51744 = -1104						; size = 4
$T51747 = -1092						; size = 4
$T51748 = -1080						; size = 4
$T51751 = -1068						; size = 4
$T51752 = -1056						; size = 4
$T51755 = -1044						; size = 4
$T51756 = -1032						; size = 4
$T43633 = -1020						; size = 64
_datePattern$43688 = -756				; size = 64
_skeleton$43680 = -684					; size = 64
_pattern$43676 = -612					; size = 64
_pattern$43668 = -540					; size = 64
_found$ = -465						; size = 1
_dateTimeFormat$43655 = -456				; size = 4
_dateTimeFormatLength$43654 = -444			; size = 4
_dateTimePatternsRes$43653 = -432			; size = 4
_calData$43644 = -420					; size = 4
_normalizedDateSkeleton$ = -408				; size = 64
_normalizedTimeSkeleton$ = -336				; size = 64
_timeSkeleton$ = -264					; size = 64
_dateSkeleton$ = -192					; size = 64
_i$ = -117						; size = 1
_fullPattern$43632 = -108				; size = 64
_locale$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::initializePattern, COMDAT
; _this$ = ecx
; Line 599
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1116				; 0000045cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1128]
	mov	ecx, 279				; 00000117H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN25@initialize
; Line 601
	jmp	$LN26@initialize
$LN25@initialize:
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	call	?getSmpFmtLocale@SimpleDateFormat@icu_56@@QBEABVLocale@2@XZ ; icu_56::SimpleDateFormat::getSmpFmtLocale
	mov	DWORD PTR _locale$[ebp], eax
; Line 604
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN24@initialize
; Line 605
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$43632[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 606
	mov	esi, esp
	lea	eax, DWORD PTR _fullPattern$43632[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 618
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullPattern$43632[ebp]
	push	ecx
	lea	edx, DWORD PTR $T43633[ebp]
	push	edx
	call	?staticGetSkeleton@DateTimePatternGenerator@icu_56@@SA?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateTimePatternGenerator::staticGetSkeleton
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv420[ebp], eax
	mov	eax, DWORD PTR tv420[ebp]
	mov	DWORD PTR tv380[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv380[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T43633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN23@initialize
; Line 620
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$43632[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN23@initialize:
; Line 622
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$43632[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@initialize:
; Line 626
	mov	BYTE PTR _i$[ebp], 0
	jmp	SHORT $LN22@initialize
$LN21@initialize:
	mov	al, BYTE PTR _i$[ebp]
	add	al, 1
	mov	BYTE PTR _i$[ebp], al
$LN22@initialize:
	movsx	eax, BYTE PTR _i$[ebp]
	cmp	eax, 8
	jge	SHORT $LN20@initialize
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movsx	ecx, BYTE PTR _i$[ebp]
	imul	ecx, 132				; 00000084H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+732], al
; Line 628
	jmp	SHORT $LN21@initialize
$LN20@initialize:
; Line 633
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 634
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 635
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 636
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 651
	lea	eax, DWORD PTR _normalizedTimeSkeleton$[ebp]
	push	eax
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	push	ecx
	lea	edx, DWORD PTR _normalizedDateSkeleton$[ebp]
	push	edx
	lea	eax, DWORD PTR _dateSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 540				; 0000021cH
	push	ecx
	call	?getDateTimeSkeleton@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@AAV32@111@Z ; icu_56::DateIntervalFormat::getDateTimeSkeleton
	add	esp, 20					; 00000014H
; Line 663
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN19@initialize
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN19@initialize
; Line 668
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51744[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T51744[ebp], 0
	je	SHORT $LN28@initialize
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T51744[ebp]
	call	??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z ; icu_56::CalendarData::CalendarData
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN29@initialize
$LN28@initialize:
	mov	DWORD PTR tv177[ebp], 0
$LN29@initialize:
	mov	edx, DWORD PTR tv177[ebp]
	mov	DWORD PTR $T51743[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR $T51743[ebp]
	mov	DWORD PTR _calData$43644[ebp], eax
; Line 669
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN18@initialize
; Line 670
	mov	eax, DWORD PTR _calData$43644[ebp]
	mov	DWORD PTR $T51748[ebp], eax
	mov	ecx, DWORD PTR $T51748[ebp]
	mov	DWORD PTR $T51747[ebp], ecx
	cmp	DWORD PTR $T51747[ebp], 0
	je	SHORT $LN30@initialize
	push	1
	mov	ecx, DWORD PTR $T51747[ebp]
	call	??_GCalendarData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN31@initialize
$LN30@initialize:
	mov	DWORD PTR tv185[ebp], 0
$LN31@initialize:
; Line 671
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN18@initialize:
; Line 673
	cmp	DWORD PTR _calData$43644[ebp], 0
	jne	SHORT $LN17@initialize
; Line 674
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 675
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN17@initialize:
; Line 679
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _gDateTimePatternsTag
	mov	ecx, DWORD PTR _calData$43644[ebp]
	call	?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ; icu_56::CalendarData::getByKey
	mov	DWORD PTR _dateTimePatternsRes$43653[ebp], eax
; Line 684
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dateTimeFormatLength$43654[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _dateTimePatternsRes$43653[ebp]
	push	edx
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _dateTimeFormat$43655[ebp], eax
; Line 685
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN16@initialize
	cmp	DWORD PTR _dateTimeFormatLength$43654[ebp], 3
	jl	$LN16@initialize
; Line 686
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51752[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T51752[ebp], 0
	je	SHORT $LN32@initialize
	mov	esi, esp
	mov	eax, DWORD PTR _dateTimeFormatLength$43654[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateTimeFormat$43655[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T51752[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T51752[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	eax, DWORD PTR $T51752[ebp]
	mov	DWORD PTR tv208[ebp], eax
	jmp	SHORT $LN33@initialize
$LN32@initialize:
	mov	DWORD PTR tv208[ebp], 0
$LN33@initialize:
	mov	ecx, DWORD PTR tv208[ebp]
	mov	DWORD PTR $T51751[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T51751[ebp]
	mov	DWORD PTR [edx+1668], eax
$LN16@initialize:
; Line 688
	mov	eax, DWORD PTR _calData$43644[ebp]
	mov	DWORD PTR $T51756[ebp], eax
	mov	ecx, DWORD PTR $T51756[ebp]
	mov	DWORD PTR $T51755[ebp], ecx
	cmp	DWORD PTR $T51755[ebp], 0
	je	SHORT $LN34@initialize
	push	1
	mov	ecx, DWORD PTR $T51755[ebp]
	call	??_GCalendarData@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv214[ebp], eax
	jmp	SHORT $LN19@initialize
$LN34@initialize:
	mov	DWORD PTR tv214[ebp], 0
$LN19@initialize:
; Line 692
	lea	eax, DWORD PTR _normalizedTimeSkeleton$[ebp]
	push	eax
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z ; icu_56::DateIntervalFormat::setSeparateDateTimePtn
	mov	BYTE PTR _found$[ebp], al
; Line 695
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	$LN15@initialize
; Line 698
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN10@initialize
; Line 699
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN10@initialize
; Line 701
	mov	esi, esp
	push	-1
	push	OFFSET _gDateFormatSkeleton+66
	push	0
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 703
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	lea	eax, DWORD PTR _pattern$43668[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 704
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN12@initialize
; Line 705
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43668[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN12@initialize:
; Line 711
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43668[ebp]
	push	edx
	push	0
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43668[ebp]
	push	edx
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43668[ebp]
	push	edx
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 714
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43668[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@initialize:
; Line 720
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN15@initialize:
; Line 723
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@initialize
	jmp	$LN8@initialize
$LN9@initialize:
; Line 725
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN7@initialize
; Line 727
	mov	esi, esp
	push	-1
	push	OFFSET _gDateFormatSkeleton+66
	push	0
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 729
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	lea	eax, DWORD PTR _pattern$43676[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 730
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN6@initialize
; Line 731
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43676[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN6@initialize:
; Line 737
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43676[ebp]
	push	edx
	push	0
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 738
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43676[ebp]
	push	edx
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 739
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$43676[ebp]
	push	edx
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 740
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43676[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@initialize
$LN7@initialize:
; Line 752
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 540				; 0000021cH
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 753
	lea	eax, DWORD PTR _dateSkeleton$[ebp]
	push	eax
	push	5
	call	?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::fieldExistsInSkeleton
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@initialize
; Line 755
	mov	esi, esp
	push	100					; 00000064H
	push	0
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 756
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::setFallbackPattern
$LN4@initialize:
; Line 758
	lea	eax, DWORD PTR _dateSkeleton$[ebp]
	push	eax
	push	2
	call	?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::fieldExistsInSkeleton
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@initialize
; Line 760
	mov	esi, esp
	push	77					; 0000004dH
	push	0
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 761
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::setFallbackPattern
$LN3@initialize:
; Line 763
	lea	eax, DWORD PTR _dateSkeleton$[ebp]
	push	eax
	push	1
	call	?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::fieldExistsInSkeleton
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@initialize
; Line 765
	mov	esi, esp
	push	121					; 00000079H
	push	0
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 766
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::setFallbackPattern
$LN2@initialize:
; Line 774
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	jne	$LN1@initialize
; Line 776
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN26@initialize
$LN1@initialize:
; Line 780
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	lea	eax, DWORD PTR _datePattern$43688[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 782
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	9
	lea	ecx, DWORD PTR _datePattern$43688[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1668]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval
; Line 783
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _datePattern$43688[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1668]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval
; Line 784
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	12					; 0000000cH
	lea	ecx, DWORD PTR _datePattern$43688[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1668]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval
; Line 785
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	lea	ecx, DWORD PTR _datePattern$43688[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@initialize:
; Line 786
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@initialize:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@initialize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1128				; 00000468H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN60@initialize:
	DD	10					; 0000000aH
	DD	$LN59@initialize
$LN59@initialize:
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN48@initialize
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN49@initialize
	DD	-264					; fffffef8H
	DD	64					; 00000040H
	DD	$LN50@initialize
	DD	-336					; fffffeb0H
	DD	64					; 00000040H
	DD	$LN51@initialize
	DD	-408					; fffffe68H
	DD	64					; 00000040H
	DD	$LN52@initialize
	DD	-444					; fffffe44H
	DD	4
	DD	$LN53@initialize
	DD	-540					; fffffde4H
	DD	64					; 00000040H
	DD	$LN54@initialize
	DD	-612					; fffffd9cH
	DD	64					; 00000040H
	DD	$LN55@initialize
	DD	-684					; fffffd54H
	DD	64					; 00000040H
	DD	$LN56@initialize
	DD	-756					; fffffd0cH
	DD	64					; 00000040H
	DD	$LN57@initialize
$LN57@initialize:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN56@initialize:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN55@initialize:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN54@initialize:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN53@initialize:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN52@initialize:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN51@initialize:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN50@initialize:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN49@initialize:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN48@initialize:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$43632[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T43633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T51744[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T51752[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43668[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$43676[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR _skeleton$43680[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR _datePattern$43688[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializePattern@DateIntervalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::initializePattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CalendarData@icu_56@@QAE@XZ:PROC		; icu_56::CalendarData::~CalendarData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCalendarData@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCalendarData@icu_56@@QAEPAXI@Z PROC			; icu_56::CalendarData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CalendarData@icu_56@@QAE@XZ		; icu_56::CalendarData::~CalendarData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@13
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@13:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCalendarData@icu_56@@QAEPAXI@Z ENDP			; icu_56::CalendarData::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??AUnicodeString@icu_56@@QBE_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDateTimeSkeleton@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@AAV32@111@Z
_TEXT	SEGMENT
tv72 = -352						; size = 4
_i$43783 = -152						; size = 4
_i$43774 = -140						; size = 4
_ch$43714 = -128					; size = 2
_i$ = -116						; size = 4
_zCount$ = -104						; size = 4
_vCount$ = -92						; size = 4
_mCount$ = -80						; size = 4
_HCount$ = -68						; size = 4
_hCount$ = -56						; size = 4
_yCount$ = -44						; size = 4
_MCount$ = -32						; size = 4
_dCount$ = -20						; size = 4
_ECount$ = -8						; size = 4
_skeleton$ = 8						; size = 4
_dateSkeleton$ = 12					; size = 4
_normalizedDateSkeleton$ = 16				; size = 4
_timeSkeleton$ = 20					; size = 4
_normalizedTimeSkeleton$ = 24				; size = 4
?getDateTimeSkeleton@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@AAV32@111@Z PROC ; icu_56::DateIntervalFormat::getDateTimeSkeleton, COMDAT
; Line 795
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 798
	mov	DWORD PTR _ECount$[ebp], 0
; Line 799
	mov	DWORD PTR _dCount$[ebp], 0
; Line 800
	mov	DWORD PTR _MCount$[ebp], 0
; Line 801
	mov	DWORD PTR _yCount$[ebp], 0
; Line 802
	mov	DWORD PTR _hCount$[ebp], 0
; Line 803
	mov	DWORD PTR _HCount$[ebp], 0
; Line 804
	mov	DWORD PTR _mCount$[ebp], 0
; Line 805
	mov	DWORD PTR _vCount$[ebp], 0
; Line 806
	mov	DWORD PTR _zCount$[ebp], 0
; Line 809
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN40@getDateTim
$LN39@getDateTim:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN40@getDateTim:
	mov	esi, esp
	mov	ecx, DWORD PTR _skeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN38@getDateTim
; Line 810
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	call	DWORD PTR __imp_??AUnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$43714[ebp], ax
; Line 811
	movzx	eax, WORD PTR _ch$43714[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR tv72[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv72[ebp], ecx
	cmp	DWORD PTR tv72[ebp], 57			; 00000039H
	ja	$LN36@getDateTim
	mov	edx, DWORD PTR tv72[ebp]
	movzx	eax, BYTE PTR $LN43@getDateTim[edx]
	jmp	DWORD PTR $LN44@getDateTim[eax*4]
$LN35@getDateTim:
; Line 813
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 814
	mov	eax, DWORD PTR _ECount$[ebp]
	add	eax, 1
	mov	DWORD PTR _ECount$[ebp], eax
; Line 815
	jmp	$LN36@getDateTim
$LN34@getDateTim:
; Line 817
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 818
	mov	eax, DWORD PTR _dCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _dCount$[ebp], eax
; Line 819
	jmp	$LN36@getDateTim
$LN33@getDateTim:
; Line 821
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 822
	mov	eax, DWORD PTR _MCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _MCount$[ebp], eax
; Line 823
	jmp	$LN36@getDateTim
$LN32@getDateTim:
; Line 825
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 826
	mov	eax, DWORD PTR _yCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _yCount$[ebp], eax
; Line 827
	jmp	$LN36@getDateTim
$LN31@getDateTim:
; Line 844
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 845
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 846
	jmp	$LN36@getDateTim
$LN30@getDateTim:
; Line 849
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 850
	jmp	$LN36@getDateTim
$LN29@getDateTim:
; Line 852
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 853
	mov	eax, DWORD PTR _hCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _hCount$[ebp], eax
; Line 854
	jmp	$LN36@getDateTim
$LN28@getDateTim:
; Line 856
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 857
	mov	eax, DWORD PTR _HCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _HCount$[ebp], eax
; Line 858
	jmp	$LN36@getDateTim
$LN27@getDateTim:
; Line 860
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 861
	mov	eax, DWORD PTR _mCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _mCount$[ebp], eax
; Line 862
	jmp	SHORT $LN36@getDateTim
$LN26@getDateTim:
; Line 864
	mov	eax, DWORD PTR _zCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _zCount$[ebp], eax
; Line 865
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 866
	jmp	SHORT $LN36@getDateTim
$LN25@getDateTim:
; Line 868
	mov	eax, DWORD PTR _vCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _vCount$[ebp], eax
; Line 869
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 870
	jmp	SHORT $LN36@getDateTim
$LN24@getDateTim:
; Line 879
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 880
	mov	esi, esp
	movzx	eax, WORD PTR _ch$43714[ebp]
	push	eax
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@getDateTim:
; Line 883
	jmp	$LN39@getDateTim
$LN38@getDateTim:
; Line 886
	cmp	DWORD PTR _yCount$[ebp], 0
	je	SHORT $LN23@getDateTim
; Line 887
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN22@getDateTim
$LN21@getDateTim:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN22@getDateTim:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _yCount$[ebp]
	jge	SHORT $LN23@getDateTim
; Line 888
	mov	esi, esp
	push	121					; 00000079H
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 889
	jmp	SHORT $LN21@getDateTim
$LN23@getDateTim:
; Line 891
	cmp	DWORD PTR _MCount$[ebp], 0
	je	SHORT $LN19@getDateTim
; Line 892
	cmp	DWORD PTR _MCount$[ebp], 3
	jge	SHORT $LN18@getDateTim
; Line 893
	mov	esi, esp
	push	77					; 0000004dH
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 894
	jmp	SHORT $LN19@getDateTim
$LN18@getDateTim:
; Line 896
	mov	DWORD PTR _i$43774[ebp], 0
	jmp	SHORT $LN16@getDateTim
$LN15@getDateTim:
	mov	eax, DWORD PTR _i$43774[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43774[ebp], eax
$LN16@getDateTim:
	mov	eax, DWORD PTR _i$43774[ebp]
	cmp	eax, DWORD PTR _MCount$[ebp]
	jge	SHORT $LN19@getDateTim
	cmp	DWORD PTR _i$43774[ebp], 5
	jge	SHORT $LN19@getDateTim
; Line 897
	mov	esi, esp
	push	77					; 0000004dH
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 898
	jmp	SHORT $LN15@getDateTim
$LN19@getDateTim:
; Line 901
	cmp	DWORD PTR _ECount$[ebp], 0
	je	SHORT $LN13@getDateTim
; Line 902
	cmp	DWORD PTR _ECount$[ebp], 3
	jg	SHORT $LN12@getDateTim
; Line 903
	mov	esi, esp
	push	69					; 00000045H
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 904
	jmp	SHORT $LN13@getDateTim
$LN12@getDateTim:
; Line 906
	mov	DWORD PTR _i$43783[ebp], 0
	jmp	SHORT $LN10@getDateTim
$LN9@getDateTim:
	mov	eax, DWORD PTR _i$43783[ebp]
	add	eax, 1
	mov	DWORD PTR _i$43783[ebp], eax
$LN10@getDateTim:
	mov	eax, DWORD PTR _i$43783[ebp]
	cmp	eax, DWORD PTR _ECount$[ebp]
	jge	SHORT $LN13@getDateTim
	cmp	DWORD PTR _i$43783[ebp], 5
	jge	SHORT $LN13@getDateTim
; Line 907
	mov	esi, esp
	push	69					; 00000045H
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 908
	jmp	SHORT $LN9@getDateTim
$LN13@getDateTim:
; Line 911
	cmp	DWORD PTR _dCount$[ebp], 0
	je	SHORT $LN7@getDateTim
; Line 912
	mov	esi, esp
	push	100					; 00000064H
	mov	ecx, DWORD PTR _normalizedDateSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@getDateTim:
; Line 916
	cmp	DWORD PTR _HCount$[ebp], 0
	je	SHORT $LN6@getDateTim
; Line 917
	mov	esi, esp
	push	72					; 00000048H
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@getDateTim
$LN6@getDateTim:
; Line 919
	cmp	DWORD PTR _hCount$[ebp], 0
	je	SHORT $LN5@getDateTim
; Line 920
	mov	esi, esp
	push	104					; 00000068H
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@getDateTim:
; Line 922
	cmp	DWORD PTR _mCount$[ebp], 0
	je	SHORT $LN3@getDateTim
; Line 923
	mov	esi, esp
	push	109					; 0000006dH
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getDateTim:
; Line 925
	cmp	DWORD PTR _zCount$[ebp], 0
	je	SHORT $LN2@getDateTim
; Line 926
	mov	esi, esp
	push	122					; 0000007aH
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getDateTim:
; Line 928
	cmp	DWORD PTR _vCount$[ebp], 0
	je	SHORT $LN41@getDateTim
; Line 929
	mov	esi, esp
	push	118					; 00000076H
	mov	ecx, DWORD PTR _normalizedTimeSkeleton$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN41@getDateTim:
; Line 931
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN44@getDateTim:
	DD	$LN24@getDateTim
	DD	$LN31@getDateTim
	DD	$LN35@getDateTim
	DD	$LN28@getDateTim
	DD	$LN33@getDateTim
	DD	$LN30@getDateTim
	DD	$LN34@getDateTim
	DD	$LN29@getDateTim
	DD	$LN27@getDateTim
	DD	$LN25@getDateTim
	DD	$LN32@getDateTim
	DD	$LN26@getDateTim
	DD	$LN36@getDateTim
$LN43@getDateTim:
	DB	0
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	2
	DB	1
	DB	1
	DB	3
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	0
	DB	1
	DB	4
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	12					; 0000000cH
	DB	0
	DB	12					; 0000000cH
	DB	1
	DB	0
	DB	1
	DB	12					; 0000000cH
	DB	1
	DB	0
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	5
	DB	12					; 0000000cH
	DB	1
	DB	6
	DB	1
	DB	12					; 0000000cH
	DB	1
	DB	7
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	1
	DB	8
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	1
	DB	0
	DB	12					; 0000000cH
	DB	1
	DB	9
	DB	1
	DB	12					; 0000000cH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
?getDateTimeSkeleton@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@AAV32@111@Z ENDP ; icu_56::DateIntervalFormat::getDateTimeSkeleton
_TEXT	ENDS
PUBLIC	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
PUBLIC	__$ArrayPad$
EXTRN	?getBestSkeleton@DateIntervalInfo@icu_56@@ABEPBVUnicodeString@2@ABV32@AAC@Z:PROC ; icu_56::DateIntervalInfo::getBestSkeleton
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$3
__ehfuncinfo$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z
_TEXT	SEGMENT
tv128 = -476						; size = 4
tv82 = -476						; size = 4
$T51800 = -468						; size = 4
$T51801 = -456						; size = 4
$T51804 = -444						; size = 4
$T51805 = -432						; size = 4
_extended$43829 = -225					; size = 1
_extendedBestSkeleton$43828 = -216			; size = 64
_extendedSkeleton$43827 = -144				; size = 64
_status$ = -72						; size = 4
_bestSkeleton$ = -60					; size = 4
_differenceInfo$ = -45					; size = 1
_skeleton$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dateSkeleton$ = 8					; size = 4
_timeSkeleton$ = 12					; size = 4
?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z PROC ; icu_56::DateIntervalFormat::setSeparateDateTimePtn, COMDAT
; _this$ = ecx
; Line 961
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 464				; 000001d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-476]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 968
	mov	esi, esp
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@setSeparat
; Line 969
	mov	eax, DWORD PTR _timeSkeleton$[ebp]
	mov	DWORD PTR _skeleton$[ebp], eax
; Line 970
	jmp	SHORT $LN8@setSeparat
$LN9@setSeparat:
; Line 971
	mov	eax, DWORD PTR _dateSkeleton$[ebp]
	mov	DWORD PTR _skeleton$[ebp], eax
$LN8@setSeparat:
; Line 983
	mov	BYTE PTR _differenceInfo$[ebp], 0
; Line 985
	lea	eax, DWORD PTR _differenceInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	call	?getBestSkeleton@DateIntervalInfo@icu_56@@ABEPBVUnicodeString@2@ABV32@AAC@Z ; icu_56::DateIntervalInfo::getBestSkeleton
	mov	DWORD PTR _bestSkeleton$[ebp], eax
; Line 995
	cmp	DWORD PTR _bestSkeleton$[ebp], 0
	jne	SHORT $LN7@setSeparat
; Line 996
	xor	al, al
	jmp	$LN10@setSeparat
$LN7@setSeparat:
; Line 1002
	mov	esi, esp
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN6@setSeparat
; Line 1003
	mov	DWORD PTR _status$[ebp], 0
; Line 1005
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51801[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51801[ebp], 0
	je	SHORT $LN12@setSeparat
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dateSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 336				; 00000150H
	push	edx
	mov	eax, DWORD PTR $T51801[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR $T51801[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T51801[ebp]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN13@setSeparat
$LN12@setSeparat:
	mov	DWORD PTR tv82[ebp], 0
$LN13@setSeparat:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T51800[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T51800[ebp]
	mov	DWORD PTR [ecx+1660], edx
$LN6@setSeparat:
; Line 1007
	mov	esi, esp
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN5@setSeparat
; Line 1008
	mov	DWORD PTR _status$[ebp], 0
; Line 1010
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51805[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T51805[ebp], 0
	je	SHORT $LN14@setSeparat
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 336				; 00000150H
	push	edx
	mov	eax, DWORD PTR $T51805[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR $T51805[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T51805[ebp]
	mov	DWORD PTR tv128[ebp], edx
	jmp	SHORT $LN15@setSeparat
$LN14@setSeparat:
	mov	DWORD PTR tv128[ebp], 0
$LN15@setSeparat:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T51804[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T51804[ebp]
	mov	DWORD PTR [ecx+1664], edx
$LN5@setSeparat:
; Line 1020
	movsx	eax, BYTE PTR _differenceInfo$[ebp]
	cmp	eax, -1
	jne	SHORT $LN4@setSeparat
; Line 1022
	xor	al, al
	jmp	$LN10@setSeparat
$LN4@setSeparat:
; Line 1025
	mov	esi, esp
	mov	ecx, DWORD PTR _timeSkeleton$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN3@setSeparat
; Line 1026
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1027
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedBestSkeleton$43828[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1030
	lea	eax, DWORD PTR _extendedBestSkeleton$43828[ebp]
	push	eax
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	push	ecx
	movzx	edx, BYTE PTR _differenceInfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1034
	lea	eax, DWORD PTR _extendedBestSkeleton$43828[ebp]
	push	eax
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	push	ecx
	movzx	edx, BYTE PTR _differenceInfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
	mov	BYTE PTR _extended$43829[ebp], al
; Line 1036
	movsx	eax, BYTE PTR _extended$43829[ebp]
	test	eax, eax
	je	SHORT $LN2@setSeparat
; Line 1037
	lea	eax, DWORD PTR _extendedBestSkeleton$43828[ebp]
	mov	DWORD PTR _bestSkeleton$[ebp], eax
; Line 1038
	lea	eax, DWORD PTR _extendedSkeleton$43827[ebp]
	mov	DWORD PTR _skeleton$[ebp], eax
$LN2@setSeparat:
; Line 1041
	lea	eax, DWORD PTR _extendedBestSkeleton$43828[ebp]
	push	eax
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	push	ecx
	movzx	edx, BYTE PTR _differenceInfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedBestSkeleton$43828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@setSeparat
$LN3@setSeparat:
; Line 1043
	push	0
	push	0
	movzx	eax, BYTE PTR _differenceInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bestSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _skeleton$[ebp]
	push	edx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1044
	push	0
	push	0
	movzx	eax, BYTE PTR _differenceInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bestSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _skeleton$[ebp]
	push	edx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1045
	push	0
	push	0
	movzx	eax, BYTE PTR _differenceInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bestSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _skeleton$[ebp]
	push	edx
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ; icu_56::DateIntervalFormat::setIntervalPattern
$LN1@setSeparat:
; Line 1047
	mov	al, 1
$LN10@setSeparat:
; Line 1048
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@setSeparat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN26@setSeparat:
	DD	4
	DD	$LN25@setSeparat
$LN25@setSeparat:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN20@setSeparat
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN21@setSeparat
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN22@setSeparat
	DD	-216					; ffffff28H
	DD	64					; 00000040H
	DD	$LN23@setSeparat
$LN23@setSeparat:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN22@setSeparat:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN21@setSeparat:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN20@setSeparat:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51801[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T51805[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedSkeleton$43827[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _extendedBestSkeleton$43828[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSeparateDateTimePtn@DateIntervalFormat@icu_56@@AAECABVUnicodeString@2@0@Z ENDP ; icu_56::DateIntervalFormat::setSeparateDateTimePtn
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_pattern$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_field$ = 8						; size = 4
_skeleton$ = 12						; size = 4
_status$ = 16						; size = 4
?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::setFallbackPattern, COMDAT
; _this$ = ecx
; Line 1055
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1056
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@setFallbac
; Line 1057
	jmp	$LN3@setFallbac
$LN2@setFallbac:
; Line 1060
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 336				; 00000150H
	push	edx
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	?getBestPattern@DateFormat@icu_56@@SA?AVUnicodeString@2@ABVLocale@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::DateFormat::getBestPattern
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1061
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@setFallbac
; Line 1062
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@setFallbac
$LN1@setFallbac:
; Line 1064
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _pattern$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 1065
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setFallbac:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@setFallbac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@setFallbac:
	DD	1
	DD	$LN8@setFallbac
$LN8@setFallbac:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@setFallbac
$LN6@setFallbac:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setFallbackPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::setFallbackPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z
_TEXT	SEGMENT
_ptn$ = -44						; size = 4
_itvPtnIndex$ = -32					; size = 4
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_firstPart$ = 12					; size = 4
_secondPart$ = 16					; size = 4
_laterDateFirst$ = 20					; size = 1
?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z PROC ; icu_56::DateIntervalFormat::setPatternInfo, COMDAT
; _this$ = ecx
; Line 1074
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1079
	mov	DWORD PTR _status$[ebp], 0
; Line 1082
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	call	?calendarFieldToIntervalIndex@DateIntervalInfo@icu_56@@CA?AW4IntervalPatternIndex@12@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::calendarFieldToIntervalIndex
	add	esp, 8
	mov	DWORD PTR _itvPtnIndex$[ebp], eax
; Line 1083
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@setPattern
; Line 1084
	jmp	SHORT $LN4@setPattern
$LN3@setPattern:
; Line 1086
	mov	eax, DWORD PTR _itvPtnIndex$[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+604]
	mov	DWORD PTR _ptn$[ebp], edx
; Line 1087
	cmp	DWORD PTR _firstPart$[ebp], 0
	je	SHORT $LN2@setPattern
; Line 1088
	mov	esi, esp
	mov	eax, DWORD PTR _firstPart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptn$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setPattern:
; Line 1090
	cmp	DWORD PTR _secondPart$[ebp], 0
	je	SHORT $LN1@setPattern
; Line 1091
	mov	esi, esp
	mov	eax, DWORD PTR _secondPart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptn$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setPattern:
; Line 1093
	mov	eax, DWORD PTR _ptn$[ebp]
	mov	cl, BYTE PTR _laterDateFirst$[ebp]
	mov	BYTE PTR [eax+128], cl
$LN4@setPattern:
; Line 1094
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@setPattern
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN8@setPattern:
	DD	1
	DD	$LN7@setPattern
$LN7@setPattern:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@setPattern
$LN6@setPattern:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ENDP ; icu_56::DateIntervalFormat::setPatternInfo
_TEXT	ENDS
PUBLIC	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z ; icu_56::DateIntervalFormat::setIntervalPattern
PUBLIC	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_order$ = -17						; size = 1
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_intervalPattern$ = 12					; size = 4
?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z PROC ; icu_56::DateIntervalFormat::setIntervalPattern, COMDAT
; _this$ = ecx
; Line 1098
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getDefaultOrder@DateIntervalInfo@icu_56@@QBECXZ ; icu_56::DateIntervalInfo::getDefaultOrder
	mov	BYTE PTR _order$[ebp], al
; Line 1100
	movzx	eax, BYTE PTR _order$[ebp]
	push	eax
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1101
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z ENDP ; icu_56::DateIntervalFormat::setIntervalPattern
_TEXT	ENDS
PUBLIC	?splitPatternInto2Part@DateIntervalFormat@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::splitPatternInto2Part
PUBLIC	__$ArrayPad$
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z:PROC
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$2
__ehfuncinfo$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
_secondPart$ = -300					; size = 64
_firstPart$ = -228					; size = 64
_splitPoint$ = -156					; size = 4
_realPattern$ = -144					; size = 64
_earliestFirstLength$ = -69				; size = 1
_prefixLength$ = -57					; size = 1
_order$ = -45						; size = 1
_pattern$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_field$ = 8						; size = 4
_intervalPattern$ = 12					; size = 4
_laterDateFirst$ = 16					; size = 1
?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z PROC ; icu_56::DateIntervalFormat::setIntervalPattern, COMDAT
; _this$ = ecx
; Line 1107
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1108
	mov	eax, DWORD PTR _intervalPattern$[ebp]
	mov	DWORD PTR _pattern$[ebp], eax
; Line 1109
	mov	al, BYTE PTR _laterDateFirst$[ebp]
	mov	BYTE PTR _order$[ebp], al
; Line 1111
	mov	BYTE PTR _prefixLength$[ebp], 12	; 0000000cH
; Line 1112
	mov	BYTE PTR _earliestFirstLength$[ebp], 14	; 0000000eH
; Line 1113
	mov	esi, esp
	lea	ecx, DWORD PTR _realPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1114
	movsx	eax, BYTE PTR _prefixLength$[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET _gLaterFirstPrefix
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@setInterva
; Line 1115
	mov	BYTE PTR _order$[ebp], 1
; Line 1118
	mov	esi, esp
	lea	eax, DWORD PTR _realPattern$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	movsx	ecx, BYTE PTR _prefixLength$[ebp]
	sub	eax, ecx
	push	eax
	movsx	edx, BYTE PTR _prefixLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1119
	lea	eax, DWORD PTR _realPattern$[ebp]
	mov	DWORD PTR _pattern$[ebp], eax
; Line 1120
	jmp	SHORT $LN3@setInterva
$LN4@setInterva:
; Line 1121
	movsx	eax, BYTE PTR _earliestFirstLength$[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET _gEarlierFirstPrefix
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@setInterva
; Line 1122
	mov	BYTE PTR _order$[ebp], 0
; Line 1125
	mov	esi, esp
	lea	eax, DWORD PTR _realPattern$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	movsx	ecx, BYTE PTR _earliestFirstLength$[ebp]
	sub	eax, ecx
	push	eax
	movsx	edx, BYTE PTR _earliestFirstLength$[ebp]
	push	edx
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1126
	lea	eax, DWORD PTR _realPattern$[ebp]
	mov	DWORD PTR _pattern$[ebp], eax
$LN3@setInterva:
; Line 1129
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	?splitPatternInto2Part@DateIntervalFormat@icu_56@@CAHABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::splitPatternInto2Part
	add	esp, 4
	mov	DWORD PTR _splitPoint$[ebp], eax
; Line 1131
	mov	esi, esp
	lea	ecx, DWORD PTR _firstPart$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1132
	mov	esi, esp
	lea	ecx, DWORD PTR _secondPart$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1133
	mov	esi, esp
	lea	eax, DWORD PTR _firstPart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _splitPoint$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1134
	mov	esi, esp
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _splitPoint$[ebp], eax
	jge	SHORT $LN1@setInterva
; Line 1135
	mov	esi, esp
	lea	eax, DWORD PTR _secondPart$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _splitPoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _splitPoint$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setInterva:
; Line 1137
	movzx	eax, BYTE PTR _order$[ebp]
	push	eax
	lea	ecx, DWORD PTR _secondPart$[ebp]
	push	ecx
	lea	edx, DWORD PTR _firstPart$[ebp]
	push	edx
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPatternInfo@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@PBVUnicodeString@2@1C@Z ; icu_56::DateIntervalFormat::setPatternInfo
; Line 1138
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _secondPart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _firstPart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _realPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@setInterva
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN15@setInterva:
	DD	3
	DD	$LN14@setInterva
$LN14@setInterva:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN10@setInterva
	DD	-228					; ffffff1cH
	DD	64					; 00000040H
	DD	$LN11@setInterva
	DD	-300					; fffffed4H
	DD	64					; 00000040H
	DD	$LN12@setInterva
$LN12@setInterva:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN11@setInterva:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN10@setInterva:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _realPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _firstPart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _secondPart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-500]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z ENDP ; icu_56::DateIntervalFormat::setIntervalPattern
PUBLIC	?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z ; icu_56::DateIntervalFormat::adjustFieldWidth
PUBLIC	__$ArrayPad$
EXTRN	?isFieldUnitIgnored@SimpleDateFormat@icu_56@@SACABVUnicodeString@2@W4UCalendarDateFields@@@Z:PROC ; icu_56::SimpleDateFormat::isFieldUnitIgnored
EXTRN	?getIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DateIntervalInfo::getIntervalPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z$1
__ehfuncinfo$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z
_TEXT	SEGMENT
$T51864 = -441						; size = 1
$T51865 = -429						; size = 1
$T51866 = -417						; size = 1
$T51867 = -405						; size = 1
_adjustIntervalPattern$43903 = -204			; size = 64
_tmpBest$43899 = -132					; size = 4
_fieldLetter$43896 = -120				; size = 2
_pattern$ = -108					; size = 64
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_field$ = 8						; size = 4
_skeleton$ = 12						; size = 4
_bestSkeleton$ = 16					; size = 4
_differenceInfo$ = 20					; size = 1
_extendedSkeleton$ = 24					; size = 4
_extendedBestSkeleton$ = 28				; size = 4
?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z PROC ; icu_56::DateIntervalFormat::setIntervalPattern, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1174
	mov	DWORD PTR _status$[ebp], 0
; Line 1176
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1177
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	call	?getIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAV32@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::getIntervalPattern
; Line 1178
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN11@setInterva@2
; Line 1180
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bestSkeleton$[ebp]
	push	ecx
	call	?isFieldUnitIgnored@SimpleDateFormat@icu_56@@SACABVUnicodeString@2@W4UCalendarDateFields@@@Z ; icu_56::SimpleDateFormat::isFieldUnitIgnored
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@setInterva@2
; Line 1182
	mov	BYTE PTR $T51864[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51864[ebp]
	jmp	$LN12@setInterva@2
$LN10@setInterva@2:
; Line 1189
	cmp	DWORD PTR _field$[ebp], 9
	jne	SHORT $LN9@setInterva@2
; Line 1190
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	push	10					; 0000000aH
	mov	edx, DWORD PTR _bestSkeleton$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	call	?getIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAV32@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::getIntervalPattern
; Line 1191
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN8@setInterva@2
; Line 1192
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::setIntervalPattern
$LN8@setInterva@2:
; Line 1194
	mov	BYTE PTR $T51865[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51865[ebp]
	jmp	$LN12@setInterva@2
$LN9@setInterva@2:
; Line 1202
	mov	eax, DWORD PTR _field$[ebp]
	mov	cx, WORD PTR ?fgCalendarFieldToPatternLetter@DateIntervalFormat@icu_56@@0QB_WB[eax*2]
	mov	WORD PTR _fieldLetter$43896[ebp], cx
; Line 1203
	cmp	DWORD PTR _extendedSkeleton$[ebp], 0
	je	$LN11@setInterva@2
; Line 1204
	mov	esi, esp
	mov	eax, DWORD PTR _skeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extendedSkeleton$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1205
	mov	esi, esp
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extendedBestSkeleton$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1206
	mov	esi, esp
	movzx	eax, WORD PTR _fieldLetter$43896[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _extendedSkeleton$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1207
	mov	esi, esp
	movzx	eax, WORD PTR _fieldLetter$43896[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _extendedBestSkeleton$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1210
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _extendedBestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	call	?getIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAV32@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::getIntervalPattern
; Line 1211
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@setInterva@2
	movsx	eax, BYTE PTR _differenceInfo$[ebp]
	test	eax, eax
	jne	SHORT $LN11@setInterva@2
; Line 1215
	lea	eax, DWORD PTR _differenceInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extendedBestSkeleton$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+320]
	call	?getBestSkeleton@DateIntervalInfo@icu_56@@ABEPBVUnicodeString@2@ABV32@AAC@Z ; icu_56::DateIntervalInfo::getBestSkeleton
	mov	DWORD PTR _tmpBest$43899[ebp], eax
; Line 1216
	cmp	DWORD PTR _tmpBest$43899[ebp], 0
	je	SHORT $LN11@setInterva@2
	movsx	eax, BYTE PTR _differenceInfo$[ebp]
	cmp	eax, -1
	je	SHORT $LN11@setInterva@2
; Line 1217
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _tmpBest$43899[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	call	?getIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAV32@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::getIntervalPattern
; Line 1218
	mov	eax, DWORD PTR _tmpBest$43899[ebp]
	mov	DWORD PTR _bestSkeleton$[ebp], eax
$LN11@setInterva@2:
; Line 1223
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN4@setInterva@2
; Line 1224
	movsx	eax, BYTE PTR _differenceInfo$[ebp]
	test	eax, eax
	je	SHORT $LN3@setInterva@2
; Line 1225
	mov	esi, esp
	lea	ecx, DWORD PTR _adjustIntervalPattern$43903[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1227
	lea	eax, DWORD PTR _adjustIntervalPattern$43903[ebp]
	push	eax
	movzx	ecx, BYTE PTR _differenceInfo$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	eax, DWORD PTR _bestSkeleton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	push	ecx
	call	?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z ; icu_56::DateIntervalFormat::adjustFieldWidth
	add	esp, 20					; 00000014H
; Line 1228
	lea	eax, DWORD PTR _adjustIntervalPattern$43903[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1229
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _adjustIntervalPattern$43903[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@setInterva@2
$LN3@setInterva@2:
; Line 1230
	lea	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@@Z ; icu_56::DateIntervalFormat::setIntervalPattern
$LN2@setInterva@2:
; Line 1232
	cmp	DWORD PTR _extendedSkeleton$[ebp], 0
	je	SHORT $LN4@setInterva@2
	mov	esi, esp
	mov	ecx, DWORD PTR _extendedSkeleton$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@setInterva@2
; Line 1233
	mov	BYTE PTR $T51866[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51866[ebp]
	jmp	SHORT $LN12@setInterva@2
$LN4@setInterva@2:
; Line 1236
	mov	BYTE PTR $T51867[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T51867[ebp]
$LN12@setInterva@2:
; Line 1237
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@setInterva@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN21@setInterva@2:
	DD	3
	DD	$LN20@setInterva@2
$LN20@setInterva@2:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN16@setInterva@2
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN17@setInterva@2
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN18@setInterva@2
$LN18@setInterva@2:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	106					; 0000006aH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN17@setInterva@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN16@setInterva@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _adjustIntervalPattern$43903[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-452]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setIntervalPattern@DateIntervalFormat@icu_56@@AAECW4UCalendarDateFields@@PBVUnicodeString@2@1CPAV42@2@Z ENDP ; icu_56::DateIntervalFormat::setIntervalPattern
PUBLIC	__$ArrayPad$
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?splitPatternInto2Part@DateIntervalFormat@icu_56@@CAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_repeated$43923 = -161					; size = 1
_ch$43921 = -152					; size = 2
_foundRepetition$ = -137				; size = 1
_i$ = -128						; size = 4
_PATTERN_CHAR_BASE$ = -113				; size = 1
_patternRepeated$ = -104				; size = 58
_count$ = -36						; size = 4
_prevCh$ = -24						; size = 2
_inQuote$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
_intervalPattern$ = 8					; size = 4
?splitPatternInto2Part@DateIntervalFormat@icu_56@@CAHABVUnicodeString@2@@Z PROC ; icu_56::DateIntervalFormat::splitPatternInto2Part, COMDAT
; Line 1242
	push	ebp
	mov	ebp, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1243
	mov	BYTE PTR _inQuote$[ebp], 0
; Line 1244
	xor	eax, eax
	mov	WORD PTR _prevCh$[ebp], ax
; Line 1245
	mov	DWORD PTR _count$[ebp], 0
; Line 1254
	mov	BYTE PTR _patternRepeated$[ebp], 0
	mov	BYTE PTR _patternRepeated$[ebp+1], 0
	mov	BYTE PTR _patternRepeated$[ebp+2], 0
	mov	BYTE PTR _patternRepeated$[ebp+3], 0
	mov	BYTE PTR _patternRepeated$[ebp+4], 0
	mov	BYTE PTR _patternRepeated$[ebp+5], 0
	mov	BYTE PTR _patternRepeated$[ebp+6], 0
	mov	BYTE PTR _patternRepeated$[ebp+7], 0
	mov	BYTE PTR _patternRepeated$[ebp+8], 0
	mov	BYTE PTR _patternRepeated$[ebp+9], 0
	mov	BYTE PTR _patternRepeated$[ebp+10], 0
	mov	BYTE PTR _patternRepeated$[ebp+11], 0
	mov	BYTE PTR _patternRepeated$[ebp+12], 0
	mov	BYTE PTR _patternRepeated$[ebp+13], 0
	mov	BYTE PTR _patternRepeated$[ebp+14], 0
; Line 1256
	mov	BYTE PTR _patternRepeated$[ebp+15], 0
	mov	BYTE PTR _patternRepeated$[ebp+16], 0
	mov	BYTE PTR _patternRepeated$[ebp+17], 0
	mov	BYTE PTR _patternRepeated$[ebp+18], 0
	mov	BYTE PTR _patternRepeated$[ebp+19], 0
	mov	BYTE PTR _patternRepeated$[ebp+20], 0
	mov	BYTE PTR _patternRepeated$[ebp+21], 0
	mov	BYTE PTR _patternRepeated$[ebp+22], 0
	mov	BYTE PTR _patternRepeated$[ebp+23], 0
	mov	BYTE PTR _patternRepeated$[ebp+24], 0
	mov	BYTE PTR _patternRepeated$[ebp+25], 0
	mov	BYTE PTR _patternRepeated$[ebp+26], 0
	mov	BYTE PTR _patternRepeated$[ebp+27], 0
	mov	BYTE PTR _patternRepeated$[ebp+28], 0
	mov	BYTE PTR _patternRepeated$[ebp+29], 0
	mov	BYTE PTR _patternRepeated$[ebp+30], 0
; Line 1258
	mov	BYTE PTR _patternRepeated$[ebp+31], 0
	mov	BYTE PTR _patternRepeated$[ebp+32], 0
	mov	BYTE PTR _patternRepeated$[ebp+33], 0
	mov	BYTE PTR _patternRepeated$[ebp+34], 0
	mov	BYTE PTR _patternRepeated$[ebp+35], 0
	mov	BYTE PTR _patternRepeated$[ebp+36], 0
	mov	BYTE PTR _patternRepeated$[ebp+37], 0
	mov	BYTE PTR _patternRepeated$[ebp+38], 0
	mov	BYTE PTR _patternRepeated$[ebp+39], 0
	mov	BYTE PTR _patternRepeated$[ebp+40], 0
	mov	BYTE PTR _patternRepeated$[ebp+41], 0
	mov	BYTE PTR _patternRepeated$[ebp+42], 0
	mov	BYTE PTR _patternRepeated$[ebp+43], 0
	mov	BYTE PTR _patternRepeated$[ebp+44], 0
	mov	BYTE PTR _patternRepeated$[ebp+45], 0
	mov	BYTE PTR _patternRepeated$[ebp+46], 0
; Line 1260
	mov	BYTE PTR _patternRepeated$[ebp+47], 0
	mov	BYTE PTR _patternRepeated$[ebp+48], 0
	mov	BYTE PTR _patternRepeated$[ebp+49], 0
	mov	BYTE PTR _patternRepeated$[ebp+50], 0
	mov	BYTE PTR _patternRepeated$[ebp+51], 0
	mov	BYTE PTR _patternRepeated$[ebp+52], 0
	mov	BYTE PTR _patternRepeated$[ebp+53], 0
	mov	BYTE PTR _patternRepeated$[ebp+54], 0
	mov	BYTE PTR _patternRepeated$[ebp+55], 0
	mov	BYTE PTR _patternRepeated$[ebp+56], 0
; Line 1261
	mov	BYTE PTR _patternRepeated$[ebp+57], 0
; Line 1263
	mov	BYTE PTR _PATTERN_CHAR_BASE$[ebp], 65	; 00000041H
; Line 1270
	mov	BYTE PTR _foundRepetition$[ebp], 0
; Line 1271
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@splitPatte
$LN14@splitPatte:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@splitPatte:
	mov	esi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN13@splitPatte
; Line 1272
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$43921[ebp], ax
; Line 1274
	movzx	eax, WORD PTR _ch$43921[ebp]
	movzx	ecx, WORD PTR _prevCh$[ebp]
	cmp	eax, ecx
	je	SHORT $LN12@splitPatte
	cmp	DWORD PTR _count$[ebp], 0
	jle	SHORT $LN12@splitPatte
; Line 1276
	movzx	eax, WORD PTR _prevCh$[ebp]
	movsx	ecx, BYTE PTR _PATTERN_CHAR_BASE$[ebp]
	sub	eax, ecx
	mov	dl, BYTE PTR _patternRepeated$[ebp+eax]
	mov	BYTE PTR _repeated$43923[ebp], dl
; Line 1277
	movsx	eax, BYTE PTR _repeated$43923[ebp]
	test	eax, eax
	jne	SHORT $LN11@splitPatte
; Line 1278
	movzx	eax, WORD PTR _prevCh$[ebp]
	movsx	ecx, BYTE PTR _PATTERN_CHAR_BASE$[ebp]
	sub	eax, ecx
	mov	BYTE PTR _patternRepeated$[ebp+eax], 1
; Line 1279
	jmp	SHORT $LN10@splitPatte
$LN11@splitPatte:
; Line 1280
	mov	BYTE PTR _foundRepetition$[ebp], 1
; Line 1281
	jmp	$LN13@splitPatte
$LN10@splitPatte:
; Line 1283
	mov	DWORD PTR _count$[ebp], 0
$LN12@splitPatte:
; Line 1285
	movzx	eax, WORD PTR _ch$43921[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN9@splitPatte
; Line 1289
	mov	esi, DWORD PTR _i$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN8@splitPatte
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _intervalPattern$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN8@splitPatte
; Line 1290
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1291
	jmp	SHORT $LN7@splitPatte
$LN8@splitPatte:
; Line 1292
	movsx	eax, BYTE PTR _inQuote$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _inQuote$[ebp], cl
$LN7@splitPatte:
; Line 1295
	jmp	SHORT $LN6@splitPatte
$LN9@splitPatte:
; Line 1296
	movsx	eax, BYTE PTR _inQuote$[ebp]
	test	eax, eax
	jne	SHORT $LN6@splitPatte
	movzx	eax, WORD PTR _ch$43921[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN3@splitPatte
	movzx	eax, WORD PTR _ch$43921[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN4@splitPatte
$LN3@splitPatte:
	movzx	eax, WORD PTR _ch$43921[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN6@splitPatte
	movzx	eax, WORD PTR _ch$43921[ebp]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN6@splitPatte
$LN4@splitPatte:
; Line 1298
	mov	ax, WORD PTR _ch$43921[ebp]
	mov	WORD PTR _prevCh$[ebp], ax
; Line 1299
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN6@splitPatte:
; Line 1301
	jmp	$LN14@splitPatte
$LN13@splitPatte:
; Line 1306
	cmp	DWORD PTR _count$[ebp], 0
	jle	SHORT $LN2@splitPatte
	movsx	eax, BYTE PTR _foundRepetition$[ebp]
	test	eax, eax
	jne	SHORT $LN2@splitPatte
; Line 1307
	movzx	eax, WORD PTR _prevCh$[ebp]
	movsx	ecx, BYTE PTR _PATTERN_CHAR_BASE$[ebp]
	sub	eax, ecx
	movsx	edx, BYTE PTR _patternRepeated$[ebp+eax]
	test	edx, edx
	jne	SHORT $LN2@splitPatte
; Line 1308
	mov	DWORD PTR _count$[ebp], 0
$LN2@splitPatte:
; Line 1311
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _count$[ebp]
; Line 1312
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@splitPatte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@splitPatte:
	DD	1
	DD	$LN19@splitPatte
$LN19@splitPatte:
	DD	-104					; ffffff98H
	DD	58					; 0000003aH
	DD	$LN18@splitPatte
$LN18@splitPatte:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?splitPatternInto2Part@DateIntervalFormat@icu_56@@CAHABVUnicodeString@2@@Z ENDP ; icu_56::DateIntervalFormat::splitPatternInto2Part
_TEXT	ENDS
PUBLIC	?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z ; icu_56::DateIntervalFormat::adjustPosition
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z
_TEXT	SEGMENT
_placeholderLen$ = -32					; size = 4
_index1$ = -20						; size = 4
_index0$ = -8						; size = 4
_combiningPattern$ = 8					; size = 4
_pat0$ = 12						; size = 4
_pos0$ = 16						; size = 4
_pat1$ = 20						; size = 4
_pos1$ = 24						; size = 4
_posResult$ = 28					; size = 4
?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z PROC ; icu_56::DateIntervalFormat::adjustPosition, COMDAT
; Line 1321
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1322
	mov	esi, esp
	push	0
	push	3
	push	OFFSET _bracketedZero
	mov	ecx, DWORD PTR _combiningPattern$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _index0$[ebp], eax
; Line 1323
	mov	esi, esp
	push	0
	push	3
	push	OFFSET _bracketedOne
	mov	ecx, DWORD PTR _combiningPattern$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _index1$[ebp], eax
; Line 1324
	cmp	DWORD PTR _index0$[ebp], 0
	jl	SHORT $LN9@adjustPosi
	cmp	DWORD PTR _index1$[ebp], 0
	jge	SHORT $LN10@adjustPosi
$LN9@adjustPosi:
; Line 1325
	jmp	$LN11@adjustPosi
$LN10@adjustPosi:
; Line 1327
	mov	DWORD PTR _placeholderLen$[ebp], 3
; Line 1328
	mov	eax, DWORD PTR _index0$[ebp]
	cmp	eax, DWORD PTR _index1$[ebp]
	jge	$LN8@adjustPosi
; Line 1329
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jle	SHORT $LN7@adjustPosi
; Line 1330
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getBeginIndex
	add	eax, DWORD PTR _index0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1331
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	add	eax, DWORD PTR _index0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setEndIndex
	jmp	SHORT $LN6@adjustPosi
$LN7@adjustPosi:
; Line 1332
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jle	SHORT $LN6@adjustPosi
; Line 1334
	mov	esi, esp
	mov	ecx, DWORD PTR _pat0$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _placeholderLen$[ebp]
	add	eax, DWORD PTR _index1$[ebp]
	mov	DWORD PTR _index1$[ebp], eax
; Line 1335
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getBeginIndex
	add	eax, DWORD PTR _index1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1336
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	add	eax, DWORD PTR _index1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setEndIndex
$LN6@adjustPosi:
; Line 1338
	jmp	$LN11@adjustPosi
$LN8@adjustPosi:
; Line 1339
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jle	SHORT $LN3@adjustPosi
; Line 1340
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getBeginIndex
	add	eax, DWORD PTR _index1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1341
	mov	ecx, DWORD PTR _pos1$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	add	eax, DWORD PTR _index1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setEndIndex
	jmp	SHORT $LN11@adjustPosi
$LN3@adjustPosi:
; Line 1342
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	test	eax, eax
	jle	SHORT $LN11@adjustPosi
; Line 1344
	mov	esi, esp
	mov	ecx, DWORD PTR _pat1$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _placeholderLen$[ebp]
	add	eax, DWORD PTR _index0$[ebp]
	mov	DWORD PTR _index0$[ebp], eax
; Line 1345
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getBeginIndex
	add	eax, DWORD PTR _index0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1346
	mov	ecx, DWORD PTR _pos0$[ebp]
	call	?getEndIndex@FieldPosition@icu_56@@QBEHXZ ; icu_56::FieldPosition::getEndIndex
	add	eax, DWORD PTR _index0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posResult$[ebp]
	call	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setEndIndex
$LN11@adjustPosi:
; Line 1349
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z ENDP ; icu_56::DateIntervalFormat::adjustPosition
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::Formattable::setString
EXTRN	?format@MessageFormat@icu_56@@SAAAVUnicodeString@2@ABV32@PBVFormattable@2@HAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::MessageFormat::format
EXTRN	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z:PROC ; icu_56::Formattable::adoptString
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	?getFallbackIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DateIntervalInfo::getFallbackIntervalPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv231 = -1052						; size = 4
tv162 = -1052						; size = 4
tv142 = -1052						; size = 4
tv77 = -1049						; size = 1
$T51894 = -1044						; size = 4
$T51895 = -1032						; size = 4
$T51898 = -1020						; size = 4
$T51899 = -1008						; size = 4
$T51902 = -996						; size = 4
$T51903 = -984						; size = 4
$T51906 = -972						; size = 4
_datePortion$43991 = -768				; size = 4
_fallbackRange$ = -756					; size = 64
_fmtArray$ = -684					; size = 448
_fallbackPattern$ = -228				; size = 64
_laterDate$ = -156					; size = 4
_earlierDate$ = -144					; size = 4
_otherPos$ = -132					; size = 16
_formatDatePlusTimeRange$ = -105			; size = 1
_fullPattern$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fromCalendar$ = 8					; size = 4
_toCalendar$ = 12					; size = 4
_fromToOnSameDay$ = 16					; size = 1
_appendTo$ = 20						; size = 4
_pos$ = 24						; size = 4
_status$ = 28						; size = 4
?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::fallbackFormat, COMDAT
; _this$ = ecx
; Line 1357
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1040				; 00000410H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1052]
	mov	ecx, 260				; 00000104H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1358
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@fallbackFo
; Line 1359
	mov	eax, DWORD PTR _appendTo$[ebp]
	jmp	$LN6@fallbackFo
$LN5@fallbackFo:
; Line 1361
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1362
	movsx	eax, BYTE PTR _fromToOnSameDay$[ebp]
	test	eax, eax
	je	SHORT $LN8@fallbackFo
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1660], 0
	je	SHORT $LN8@fallbackFo
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1664], 0
	je	SHORT $LN8@fallbackFo
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN9@fallbackFo
$LN8@fallbackFo:
	mov	BYTE PTR tv77[ebp], 0
$LN9@fallbackFo:
	mov	al, BYTE PTR tv77[ebp]
	mov	BYTE PTR _formatDatePlusTimeRange$[ebp], al
; Line 1365
	movsx	eax, BYTE PTR _formatDatePlusTimeRange$[ebp]
	test	eax, eax
	je	SHORT $LN4@fallbackFo
; Line 1366
	mov	esi, esp
	lea	eax, DWORD PTR _fullPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1367
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1664]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+324]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@fallbackFo:
; Line 1369
	lea	ecx, DWORD PTR _otherPos$[ebp]
	call	??0FieldPosition@icu_56@@QAE@XZ		; icu_56::FieldPosition::FieldPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1370
	mov	ecx, DWORD PTR _pos$[ebp]
	call	?getField@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getField
	push	eax
	lea	ecx, DWORD PTR _otherPos$[ebp]
	call	?setField@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setField
; Line 1371
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51895[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T51895[ebp], 0
	je	SHORT $LN10@fallbackFo
	mov	esi, esp
	mov	ecx, DWORD PTR $T51895[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51895[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T51895[ebp]
	mov	DWORD PTR tv142[ebp], ecx
	jmp	SHORT $LN11@fallbackFo
$LN10@fallbackFo:
	mov	DWORD PTR tv142[ebp], 0
$LN11@fallbackFo:
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR $T51894[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T51894[ebp]
	mov	DWORD PTR _earlierDate$[ebp], eax
; Line 1372
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _earlierDate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1373
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51899[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T51899[ebp], 0
	je	SHORT $LN12@fallbackFo
	mov	esi, esp
	mov	ecx, DWORD PTR $T51899[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51899[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T51899[ebp]
	mov	DWORD PTR tv162[ebp], ecx
	jmp	SHORT $LN13@fallbackFo
$LN12@fallbackFo:
	mov	DWORD PTR tv162[ebp], 0
$LN13@fallbackFo:
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T51898[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T51898[ebp]
	mov	DWORD PTR _laterDate$[ebp], eax
; Line 1374
	mov	esi, esp
	lea	eax, DWORD PTR _otherPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _laterDate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _toCalendar$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1375
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1376
	lea	eax, DWORD PTR _fallbackPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+320]
	call	?getFallbackIntervalPattern@DateIntervalInfo@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DateIntervalInfo::getFallbackIntervalPattern
; Line 1377
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _otherPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _laterDate$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _earlierDate$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fallbackPattern$[ebp]
	push	edx
	call	?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z ; icu_56::DateIntervalFormat::adjustPosition
	add	esp, 24					; 00000018H
; Line 1378
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	OFFSET ??0Formattable@icu_56@@QAE@XZ	; icu_56::Formattable::Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1379
	mov	eax, DWORD PTR _earlierDate$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$[ebp]
	call	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Line 1380
	mov	eax, DWORD PTR _laterDate$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$[ebp+224]
	call	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Line 1382
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1383
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _fmtArray$[ebp]
	push	edx
	lea	eax, DWORD PTR _fallbackPattern$[ebp]
	push	eax
	call	?format@MessageFormat@icu_56@@SAAAVUnicodeString@2@ABV32@PBVFormattable@2@HAAV32@AAW4UErrorCode@@@Z ; icu_56::MessageFormat::format
	add	esp, 20					; 00000014H
; Line 1384
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@fallbackFo
	movsx	eax, BYTE PTR _formatDatePlusTimeRange$[ebp]
	test	eax, eax
	je	$LN3@fallbackFo
; Line 1386
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1660]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+324]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1387
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51903[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T51903[ebp], 0
	je	SHORT $LN14@fallbackFo
	mov	esi, esp
	mov	ecx, DWORD PTR $T51903[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51903[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T51903[ebp]
	mov	DWORD PTR tv231[ebp], ecx
	jmp	SHORT $LN15@fallbackFo
$LN14@fallbackFo:
	mov	DWORD PTR tv231[ebp], 0
$LN15@fallbackFo:
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR $T51902[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR $T51902[ebp]
	mov	DWORD PTR _datePortion$43991[ebp], eax
; Line 1388
	push	0
	lea	ecx, DWORD PTR _otherPos$[ebp]
	call	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setBeginIndex
; Line 1389
	push	0
	lea	ecx, DWORD PTR _otherPos$[ebp]
	call	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ; icu_56::FieldPosition::setEndIndex
; Line 1390
	mov	esi, esp
	lea	eax, DWORD PTR _otherPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _datePortion$43991[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromCalendar$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1391
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _otherPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _datePortion$43991[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1668]
	push	eax
	call	?adjustPosition@DateIntervalFormat@icu_56@@CAXAAVUnicodeString@2@0AAVFieldPosition@2@011@Z ; icu_56::DateIntervalFormat::adjustPosition
	add	esp, 24					; 00000018H
; Line 1392
	lea	eax, DWORD PTR _fallbackRange$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$[ebp]
	call	?setString@Formattable@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::Formattable::setString
; Line 1393
	mov	eax, DWORD PTR _datePortion$43991[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$[ebp+224]
	call	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Line 1394
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1395
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _fmtArray$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1668]
	push	ecx
	call	?format@MessageFormat@icu_56@@SAAAVUnicodeString@2@ABV32@PBVFormattable@2@HAAV32@AAW4UErrorCode@@@Z ; icu_56::MessageFormat::format
	add	esp, 20					; 00000014H
$LN3@fallbackFo:
; Line 1397
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@fallbackFo
; Line 1398
	mov	esi, esp
	lea	eax, DWORD PTR _fallbackRange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _appendTo$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@fallbackFo:
; Line 1400
	movsx	eax, BYTE PTR _formatDatePlusTimeRange$[ebp]
	test	eax, eax
	je	SHORT $LN1@fallbackFo
; Line 1402
	mov	esi, esp
	lea	eax, DWORD PTR _fullPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@fallbackFo:
; Line 1404
	mov	eax, DWORD PTR _appendTo$[ebp]
	mov	DWORD PTR $T51906[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	2
	push	224					; 000000e0H
	lea	ecx, DWORD PTR _fmtArray$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherPos$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T51906[ebp]
$LN6@fallbackFo:
; Line 1405
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@fallbackFo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1052				; 0000041cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN31@fallbackFo:
	DD	5
	DD	$LN30@fallbackFo
$LN30@fallbackFo:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN24@fallbackFo
	DD	-132					; ffffff7cH
	DD	16					; 00000010H
	DD	$LN25@fallbackFo
	DD	-228					; ffffff1cH
	DD	64					; 00000040H
	DD	$LN26@fallbackFo
	DD	-684					; fffffd54H
	DD	448					; 000001c0H
	DD	$LN27@fallbackFo
	DD	-756					; fffffd0cH
	DD	64					; 00000040H
	DD	$LN28@fallbackFo
$LN28@fallbackFo:
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	82					; 00000052H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN27@fallbackFo:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
$LN26@fallbackFo:
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN25@fallbackFo:
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN24@fallbackFo:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _fullPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _otherPos$[ebp]
	jmp	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T51895[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T51899[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$5:
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _fallbackRange$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T51903[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1056]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?fallbackFormat@DateIntervalFormat@icu_56@@ABEAAVUnicodeString@2@AAVCalendar@2@0CAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::fallbackFormat
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_fieldChar$ = -8					; size = 2
_field$ = 8						; size = 4
_skeleton$ = 12						; size = 4
?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z PROC ; icu_56::DateIntervalFormat::fieldExistsInSkeleton, COMDAT
; Line 1413
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1414
	mov	eax, DWORD PTR _field$[ebp]
	mov	cx, WORD PTR ?fgCalendarFieldToPatternLetter@DateIntervalFormat@icu_56@@0QB_WB[eax*2]
	mov	WORD PTR _fieldChar$[ebp], cx
; Line 1415
	mov	esi, esp
	movzx	eax, WORD PTR _fieldChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _skeleton$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	mov	al, cl
; Line 1416
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?fieldExistsInSkeleton@DateIntervalFormat@icu_56@@CACW4UCalendarDateFields@@ABVUnicodeString@2@@Z ENDP ; icu_56::DateIntervalFormat::fieldExistsInSkeleton
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@_W@Z:PROC
EXTRN	?parseSkeleton@DateIntervalInfo@icu_56@@CAXABVUnicodeString@2@PAH@Z:PROC ; icu_56::DateIntervalInfo::parseSkeleton
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z$1
__ehfuncinfo$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z
_TEXT	SEGMENT
tv420 = -1028						; size = 4
tv424 = -1024						; size = 4
tv418 = -1020						; size = 4
tv421 = -1016						; size = 4
$T44015 = -1008						; size = 64
$T44017 = -936						; size = 64
_j$44059 = -672						; size = 4
_inputFieldCount$44056 = -660				; size = 4
_fieldCount$44054 = -648				; size = 4
_skeletonChar$44050 = -636				; size = 2
_j$44038 = -624						; size = 4
_inputFieldCount$44035 = -612				; size = 4
_fieldCount$44033 = -600				; size = 4
_skeletonChar$44029 = -588				; size = 2
_ch$44027 = -576					; size = 2
_i$ = -564						; size = 4
_adjustedPtnLength$ = -552				; size = 4
_PATTERN_CHAR_BASE$ = -537				; size = 1
_count$ = -528						; size = 4
_prevCh$ = -516						; size = 2
_inQuote$ = -501					; size = 1
_bestMatchSkeletonFieldWidth$ = -492			; size = 232
_inputSkeletonFieldWidth$ = -252			; size = 232
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_inputSkeleton$ = 8					; size = 4
_bestMatchSkeleton$ = 12				; size = 4
_bestIntervalPattern$ = 16				; size = 4
_differenceInfo$ = 20					; size = 1
_adjustedPtn$ = 24					; size = 4
?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z PROC ; icu_56::DateIntervalFormat::adjustFieldWidth, COMDAT
; Line 1425
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1016				; 000003f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1028]
	mov	ecx, 254				; 000000feH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1426
	mov	esi, esp
	mov	eax, DWORD PTR _bestIntervalPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1430
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+4], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+8], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+12], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+16], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+20], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+24], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+28], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+32], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+36], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+40], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+44], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+48], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+52], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+56], 0
; Line 1432
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+60], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+64], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+68], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+72], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+76], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+80], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+84], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+88], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+92], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+96], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+100], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+104], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+108], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+112], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+116], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+120], 0
; Line 1434
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+124], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+128], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+132], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+136], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+140], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+144], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+148], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+152], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+156], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+160], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+164], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+168], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+172], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+176], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+180], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+184], 0
; Line 1436
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+188], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+192], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+196], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+200], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+204], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+208], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+212], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+216], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+220], 0
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+224], 0
; Line 1437
	mov	DWORD PTR _inputSkeletonFieldWidth$[ebp+228], 0
; Line 1442
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+4], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+8], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+12], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+16], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+20], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+24], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+28], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+32], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+36], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+40], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+44], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+48], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+52], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+56], 0
; Line 1444
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+60], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+64], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+68], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+72], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+76], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+80], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+84], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+88], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+92], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+96], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+100], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+104], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+108], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+112], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+116], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+120], 0
; Line 1446
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+124], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+128], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+132], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+136], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+140], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+144], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+148], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+152], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+156], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+160], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+164], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+168], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+172], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+176], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+180], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+184], 0
; Line 1448
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+188], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+192], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+196], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+200], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+204], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+208], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+212], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+216], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+220], 0
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+224], 0
; Line 1449
	mov	DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+228], 0
; Line 1451
	lea	eax, DWORD PTR _inputSkeletonFieldWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inputSkeleton$[ebp]
	push	ecx
	call	?parseSkeleton@DateIntervalInfo@icu_56@@CAXABVUnicodeString@2@PAH@Z ; icu_56::DateIntervalInfo::parseSkeleton
	add	esp, 8
; Line 1452
	lea	eax, DWORD PTR _bestMatchSkeletonFieldWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bestMatchSkeleton$[ebp]
	push	ecx
	call	?parseSkeleton@DateIntervalInfo@icu_56@@CAXABVUnicodeString@2@PAH@Z ; icu_56::DateIntervalInfo::parseSkeleton
	add	esp, 8
; Line 1453
	movsx	eax, BYTE PTR _differenceInfo$[ebp]
	cmp	eax, 2
	jne	$LN23@adjustFiel
; Line 1455
	mov	esi, esp
	push	122					; 0000007aH
	lea	ecx, DWORD PTR $T44017[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv421[ebp], eax
	mov	eax, DWORD PTR tv421[ebp]
	mov	DWORD PTR tv418[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv418[ebp]
	push	ecx
	mov	edi, esp
	push	118					; 00000076H
	lea	ecx, DWORD PTR $T44015[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv424[ebp], eax
	mov	edx, DWORD PTR tv424[ebp]
	mov	DWORD PTR tv420[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv420[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T44015[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T44017[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@adjustFiel:
; Line 1458
	mov	BYTE PTR _inQuote$[ebp], 0
; Line 1459
	xor	eax, eax
	mov	WORD PTR _prevCh$[ebp], ax
; Line 1460
	mov	DWORD PTR _count$[ebp], 0
; Line 1462
	mov	BYTE PTR _PATTERN_CHAR_BASE$[ebp], 65	; 00000041H
; Line 1465
	mov	esi, esp
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _adjustedPtnLength$[ebp], eax
; Line 1467
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN22@adjustFiel
$LN21@adjustFiel:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN22@adjustFiel:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _adjustedPtnLength$[ebp]
	jge	$LN20@adjustFiel
; Line 1468
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$44027[ebp], ax
; Line 1469
	movzx	eax, WORD PTR _ch$44027[ebp]
	movzx	ecx, WORD PTR _prevCh$[ebp]
	cmp	eax, ecx
	je	$LN19@adjustFiel
	cmp	DWORD PTR _count$[ebp], 0
	jle	$LN19@adjustFiel
; Line 1471
	mov	ax, WORD PTR _prevCh$[ebp]
	mov	WORD PTR _skeletonChar$44029[ebp], ax
; Line 1472
	movzx	eax, WORD PTR _skeletonChar$44029[ebp]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $LN18@adjustFiel
; Line 1476
	mov	eax, 77					; 0000004dH
	mov	WORD PTR _skeletonChar$44029[ebp], ax
$LN18@adjustFiel:
; Line 1478
	movzx	eax, WORD PTR _skeletonChar$44029[ebp]
	mov	ecx, DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+eax*4-260]
	mov	DWORD PTR _fieldCount$44033[ebp], ecx
; Line 1479
	movzx	eax, WORD PTR _skeletonChar$44029[ebp]
	mov	ecx, DWORD PTR _inputSkeletonFieldWidth$[ebp+eax*4-260]
	mov	DWORD PTR _inputFieldCount$44035[ebp], ecx
; Line 1480
	mov	eax, DWORD PTR _fieldCount$44033[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jne	$LN17@adjustFiel
	mov	eax, DWORD PTR _inputFieldCount$44035[ebp]
	cmp	eax, DWORD PTR _fieldCount$44033[ebp]
	jle	$LN17@adjustFiel
; Line 1481
	mov	eax, DWORD PTR _inputFieldCount$44035[ebp]
	sub	eax, DWORD PTR _fieldCount$44033[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 1483
	mov	DWORD PTR _j$44038[ebp], 0
	jmp	SHORT $LN16@adjustFiel
$LN15@adjustFiel:
	mov	eax, DWORD PTR _j$44038[ebp]
	add	eax, 1
	mov	DWORD PTR _j$44038[ebp], eax
$LN16@adjustFiel:
	mov	eax, DWORD PTR _j$44038[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN14@adjustFiel
; Line 1484
	mov	esi, esp
	movzx	eax, WORD PTR _prevCh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1485
	jmp	SHORT $LN15@adjustFiel
$LN14@adjustFiel:
; Line 1486
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 1487
	mov	eax, DWORD PTR _adjustedPtnLength$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _adjustedPtnLength$[ebp], eax
$LN17@adjustFiel:
; Line 1489
	mov	DWORD PTR _count$[ebp], 0
$LN19@adjustFiel:
; Line 1491
	movzx	eax, WORD PTR _ch$44027[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN13@adjustFiel
; Line 1494
	mov	esi, DWORD PTR _i$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN12@adjustFiel
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN12@adjustFiel
; Line 1495
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1496
	jmp	SHORT $LN11@adjustFiel
$LN12@adjustFiel:
; Line 1497
	movsx	eax, BYTE PTR _inQuote$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _inQuote$[ebp], cl
$LN11@adjustFiel:
; Line 1500
	jmp	SHORT $LN10@adjustFiel
$LN13@adjustFiel:
; Line 1501
	movsx	eax, BYTE PTR _inQuote$[ebp]
	test	eax, eax
	jne	SHORT $LN10@adjustFiel
	movzx	eax, WORD PTR _ch$44027[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN7@adjustFiel
	movzx	eax, WORD PTR _ch$44027[ebp]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN8@adjustFiel
$LN7@adjustFiel:
	movzx	eax, WORD PTR _ch$44027[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN10@adjustFiel
	movzx	eax, WORD PTR _ch$44027[ebp]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN10@adjustFiel
$LN8@adjustFiel:
; Line 1503
	mov	ax, WORD PTR _ch$44027[ebp]
	mov	WORD PTR _prevCh$[ebp], ax
; Line 1504
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN10@adjustFiel:
; Line 1506
	jmp	$LN21@adjustFiel
$LN20@adjustFiel:
; Line 1507
	cmp	DWORD PTR _count$[ebp], 0
	jle	$LN24@adjustFiel
; Line 1510
	mov	ax, WORD PTR _prevCh$[ebp]
	mov	WORD PTR _skeletonChar$44050[ebp], ax
; Line 1511
	movzx	eax, WORD PTR _skeletonChar$44050[ebp]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $LN5@adjustFiel
; Line 1515
	mov	eax, 77					; 0000004dH
	mov	WORD PTR _skeletonChar$44050[ebp], ax
$LN5@adjustFiel:
; Line 1517
	movzx	eax, WORD PTR _skeletonChar$44050[ebp]
	mov	ecx, DWORD PTR _bestMatchSkeletonFieldWidth$[ebp+eax*4-260]
	mov	DWORD PTR _fieldCount$44054[ebp], ecx
; Line 1518
	movzx	eax, WORD PTR _skeletonChar$44050[ebp]
	mov	ecx, DWORD PTR _inputSkeletonFieldWidth$[ebp+eax*4-260]
	mov	DWORD PTR _inputFieldCount$44056[ebp], ecx
; Line 1519
	mov	eax, DWORD PTR _fieldCount$44054[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jne	SHORT $LN24@adjustFiel
	mov	eax, DWORD PTR _inputFieldCount$44056[ebp]
	cmp	eax, DWORD PTR _fieldCount$44054[ebp]
	jle	SHORT $LN24@adjustFiel
; Line 1520
	mov	eax, DWORD PTR _inputFieldCount$44056[ebp]
	sub	eax, DWORD PTR _fieldCount$44054[ebp]
	mov	DWORD PTR _count$[ebp], eax
; Line 1522
	mov	DWORD PTR _j$44059[ebp], 0
	jmp	SHORT $LN3@adjustFiel
$LN2@adjustFiel:
	mov	eax, DWORD PTR _j$44059[ebp]
	add	eax, 1
	mov	DWORD PTR _j$44059[ebp], eax
$LN3@adjustFiel:
	mov	eax, DWORD PTR _j$44059[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN24@adjustFiel
; Line 1523
	mov	esi, esp
	movzx	eax, WORD PTR _prevCh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedPtn$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1524
	jmp	SHORT $LN2@adjustFiel
$LN24@adjustFiel:
; Line 1527
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@adjustFiel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@adjustFiel:
	DD	2
	DD	$LN31@adjustFiel
$LN31@adjustFiel:
	DD	-252					; ffffff04H
	DD	232					; 000000e8H
	DD	$LN28@adjustFiel
	DD	-492					; fffffe14H
	DD	232					; 000000e8H
	DD	$LN29@adjustFiel
$LN29@adjustFiel:
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN28@adjustFiel:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44017[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44015[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1032]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?adjustFieldWidth@DateIntervalFormat@icu_56@@CAXABVUnicodeString@2@00CAAV32@@Z ENDP ; icu_56::DateIntervalFormat::adjustFieldWidth
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -848						; size = 4
tv84 = -848						; size = 4
$T51948 = -840						; size = 4
$T51949 = -828						; size = 4
$T51952 = -816						; size = 4
$T51953 = -804						; size = 4
_combinedPattern$44088 = -600				; size = 64
_fmtArray$44084 = -528					; size = 448
_dateStr$44079 = -72					; size = 4
_timeIntervalPattern$44074 = -60			; size = 4
_timeItvPtnInfo$ = -48					; size = 4
_itvPtnIndex$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_format$ = 8						; size = 4
_datePattern$ = 12					; size = 4
_field$ = 16						; size = 4
_status$ = 20						; size = 4
?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z PROC ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval, COMDAT
; _this$ = ecx
; Line 1535
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 836				; 00000344H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-848]
	mov	ecx, 209				; 000000d1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1538
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _field$[ebp]
	push	ecx
	call	?calendarFieldToIntervalIndex@DateIntervalInfo@icu_56@@CA?AW4IntervalPatternIndex@12@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ; icu_56::DateIntervalInfo::calendarFieldToIntervalIndex
	add	esp, 8
	mov	DWORD PTR _itvPtnIndex$[ebp], eax
; Line 1539
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@concatSing
; Line 1540
	jmp	$LN4@concatSing
$LN3@concatSing:
; Line 1542
	mov	eax, DWORD PTR _itvPtnIndex$[ebp]
	imul	eax, 132				; 00000084H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+604]
	mov	DWORD PTR _timeItvPtnInfo$[ebp], edx
; Line 1543
	mov	esi, esp
	mov	ecx, DWORD PTR _timeItvPtnInfo$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN4@concatSing
; Line 1545
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51949[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T51949[ebp], 0
	je	SHORT $LN6@concatSing
	mov	esi, esp
	mov	eax, DWORD PTR _timeItvPtnInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51949[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T51949[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T51949[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN7@concatSing
$LN6@concatSing:
	mov	DWORD PTR tv84[ebp], 0
$LN7@concatSing:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T51948[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T51948[ebp]
	mov	DWORD PTR _timeIntervalPattern$44074[ebp], ecx
; Line 1546
	mov	eax, DWORD PTR _timeItvPtnInfo$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _timeIntervalPattern$44074[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1547
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T51953[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T51953[ebp], 0
	je	SHORT $LN8@concatSing
	mov	esi, esp
	mov	eax, DWORD PTR _datePattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T51953[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T51953[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T51953[ebp]
	mov	DWORD PTR tv94[ebp], edx
	jmp	SHORT $LN9@concatSing
$LN8@concatSing:
	mov	DWORD PTR tv94[ebp], 0
$LN9@concatSing:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T51952[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T51952[ebp]
	mov	DWORD PTR _dateStr$44079[ebp], ecx
; Line 1548
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	OFFSET ??0Formattable@icu_56@@QAE@XZ	; icu_56::Formattable::Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$44084[ebp]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1549
	mov	eax, DWORD PTR _timeIntervalPattern$44074[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$44084[ebp]
	call	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Line 1550
	mov	eax, DWORD PTR _dateStr$44079[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmtArray$44084[ebp+224]
	call	?adoptString@Formattable@icu_56@@QAEXPAVUnicodeString@2@@Z ; icu_56::Formattable::adoptString
; Line 1551
	mov	esi, esp
	lea	ecx, DWORD PTR _combinedPattern$44088[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1552
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _combinedPattern$44088[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR _fmtArray$44084[ebp]
	push	edx
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	?format@MessageFormat@icu_56@@SAAAVUnicodeString@2@ABV32@PBVFormattable@2@HAAV32@AAW4UErrorCode@@@Z ; icu_56::MessageFormat::format
	add	esp, 20					; 00000014H
; Line 1553
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@concatSing
; Line 1554
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _combinedPattern$44088[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$44084[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	jmp	SHORT $LN4@concatSing
$LN1@concatSing:
; Line 1556
	mov	eax, DWORD PTR _timeItvPtnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+128]
	push	ecx
	lea	edx, DWORD PTR _combinedPattern$44088[ebp]
	push	edx
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setIntervalPattern@DateIntervalFormat@icu_56@@AAEXW4UCalendarDateFields@@ABVUnicodeString@2@C@Z ; icu_56::DateIntervalFormat::setIntervalPattern
; Line 1557
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _combinedPattern$44088[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$44084[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
$LN4@concatSing:
; Line 1560
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@concatSing
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 848				; 00000350H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN18@concatSing:
	DD	2
	DD	$LN17@concatSing
$LN17@concatSing:
	DD	-528					; fffffdf0H
	DD	448					; 000001c0H
	DD	$LN14@concatSing
	DD	-600					; fffffda8H
	DD	64					; 00000040H
	DD	$LN15@concatSing
$LN15@concatSing:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN14@concatSing:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T51949[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T51953[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$2:
	push	OFFSET ??1Formattable@icu_56@@UAE@XZ	; icu_56::Formattable::~Formattable
	push	2
	push	224					; 000000e0H
	lea	eax, DWORD PTR _fmtArray$44084[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _combinedPattern$44088[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-852]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?concatSingleDate2TimeInterval@DateIntervalFormat@icu_56@@AAEXAAVUnicodeString@2@ABV32@W4UCalendarDateFields@@AAW4UErrorCode@@@Z ENDP ; icu_56::DateIntervalFormat::concatSingleDate2TimeInterval
PUBLIC	??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::~EnumSet<enum UDateFormatBooleanAttribute,0,4>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
PUBLIC	?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
PUBLIC	?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEXW4UDateFormatBooleanAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEHW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 0
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z PROC ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	ecx, DWORD PTR _toCheck$[ebp]
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UDateFormatBooleanAttribute@@$0A@$03@icu_56@@ABEIW4UDateFormatBooleanAttribute@@@Z ENDP ; icu_56::EnumSet<enum UDateFormatBooleanAttribute,0,4>::flag
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\collationdata.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
PUBLIC	?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB	; icu_56::CollationData::JAMO_CE32S_LENGTH
;	COMDAT ?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB
CONST	SEGMENT
?JAMO_CE32S_LENGTH@CollationData@icu_56@@2HB DD 043H	; icu_56::CollationData::JAMO_CE32S_LENGTH
CONST	ENDS
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ; icu_56::CollationData::CollationData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nfc$ = 8						; size = 4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z PROC ; icu_56::CollationData::CollationData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationdata.h
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nfc$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 301989888		; 12000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollationData@icu_56@@QAE@ABVNormalizer2Impl@1@@Z ENDP ; icu_56::CollationData::CollationData
_TEXT	ENDS
PUBLIC	?getCE32@CollationData@icu_56@@QBEIH@Z		; icu_56::CollationData::getCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv138 = -220						; size = 4
tv139 = -216						; size = 4
tv140 = -212						; size = 4
tv141 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32@CollationData@icu_56@@QBEIH@Z PROC		; icu_56::CollationData::getCE32, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	cmp	DWORD PTR _c$[ebp], 55296		; 0000d800H
	jae	SHORT $LN9@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 5
	mov	eax, DWORD PTR [ecx]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _c$[ebp]
	and	edx, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR tv141[ebp], eax
	jmp	$LN10@getCE32
$LN9@getCE32:
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN7@getCE32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	DWORD PTR _c$[ebp], 56319		; 0000dbffH
	setg	al
	sub	eax, 1
	and	eax, 320				; 00000140H
	mov	ecx, DWORD PTR _c$[ebp]
	sar	ecx, 5
	add	eax, ecx
	mov	edx, DWORD PTR [edx]
	movzx	eax, WORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv140[ebp], edx
	jmp	$LN8@getCE32
$LN7@getCE32:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	jbe	SHORT $LN5@getCE32
	mov	DWORD PTR tv139[ebp], 128		; 00000080H
	jmp	SHORT $LN6@getCE32
$LN5@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN4@getCE32
$LN3@getCE32:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv138[ebp], ecx
$LN4@getCE32:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv139[ebp], edx
$LN6@getCE32:
	mov	eax, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv140[ebp], eax
$LN8@getCE32:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv141[ebp], ecx
$LN10@getCE32:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32@CollationData@icu_56@@QBEIH@Z ENDP		; icu_56::CollationData::getCE32
_TEXT	ENDS
PUBLIC	?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getCE32FromSupplementary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getCE32FromSupplementary, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _c$[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jl	SHORT $LN3@getCE32Fro
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN4@getCE32Fro
$LN3@getCE32Fro:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _c$[ebp]
	sar	edx, 11					; 0000000bH
	mov	eax, DWORD PTR [eax]
	movzx	edx, WORD PTR [eax+edx*2+4160]
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 5
	and	eax, 63					; 0000003fH
	add	edx, eax
	mov	ecx, DWORD PTR [ecx]
	movzx	edx, WORD PTR [ecx+edx*2]
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv84[ebp], ecx
$LN4@getCE32Fro:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getCE32FromSupplementary@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getCE32FromSupplementary
_TEXT	ENDS
PUBLIC	?isDigit@CollationData@icu_56@@QBECH@Z		; icu_56::CollationData::isDigit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDigit@CollationData@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv75 = -212						; size = 4
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?isDigit@CollationData@icu_56@@QBECH@Z PROC		; icu_56::CollationData::isDigit, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	cmp	DWORD PTR _c$[ebp], 1632		; 00000660H
	jge	SHORT $LN5@isDigit
	cmp	DWORD PTR _c$[ebp], 57			; 00000039H
	jg	SHORT $LN3@isDigit
	cmp	DWORD PTR _c$[ebp], 48			; 00000030H
	jl	SHORT $LN3@isDigit
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@isDigit
$LN3@isDigit:
	mov	DWORD PTR tv67[ebp], 0
$LN4@isDigit:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@isDigit
$LN5@isDigit:
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR tv75[ebp], edx
$LN6@isDigit:
	mov	al, BYTE PTR tv75[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isDigit@CollationData@icu_56@@QBECH@Z ENDP		; icu_56::CollationData::isDigit
_TEXT	ENDS
PUBLIC	?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ; icu_56::CollationData::isUnsafeBackward
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z
_TEXT	SEGMENT
tv86 = -205						; size = 1
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_numeric$ = 12						; size = 1
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z PROC	; icu_56::CollationData::isUnsafeBackward, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
	movsx	edx, BYTE PTR _numeric$[ebp]
	test	edx, edx
	je	SHORT $LN3@isUnsafeBa
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDigit@CollationData@icu_56@@QBECH@Z	; icu_56::CollationData::isDigit
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@isUnsafeBa
$LN3@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 0
	jmp	SHORT $LN5@isUnsafeBa
$LN4@isUnsafeBa:
	mov	BYTE PTR tv86[ebp], 1
$LN5@isUnsafeBa:
	mov	al, BYTE PTR tv86[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?isUnsafeBackward@CollationData@icu_56@@QBECHC@Z ENDP	; icu_56::CollationData::isUnsafeBackward
_TEXT	ENDS
PUBLIC	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressibleLeadByte, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _b$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressibleLeadByte
_TEXT	ENDS
PUBLIC	?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressiblePrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z PROC ; icu_56::CollationData::isCompressiblePrimary, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isCompressibleLeadByte@CollationData@icu_56@@QBECI@Z ; icu_56::CollationData::isCompressibleLeadByte
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isCompressiblePrimary@CollationData@icu_56@@QBECI@Z ENDP ; icu_56::CollationData::isCompressiblePrimary
_TEXT	ENDS
PUBLIC	?readCE32@CollationData@icu_56@@SAIPB_W@Z	; icu_56::CollationData::readCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readCE32@CollationData@icu_56@@SAIPB_W@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?readCE32@CollationData@icu_56@@SAIPB_W@Z PROC		; icu_56::CollationData::readCE32, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [eax]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	or	eax, edx
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readCE32@CollationData@icu_56@@SAIPB_W@Z ENDP		; icu_56::CollationData::readCE32
_TEXT	ENDS
PUBLIC	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
EXTRN	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z:PROC ; icu_56::Collation::getThreeBytePrimaryForOffsetData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z
_TEXT	SEGMENT
_dataCE$ = -24						; size = 8
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_ce32$ = 12						; size = 4
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z PROC ; icu_56::CollationData::getCEFromOffsetCE32, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _dataCE$[ebp], ecx
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _dataCE$[ebp+4], edx
; Line 115
	mov	eax, DWORD PTR _dataCE$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _dataCE$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	call	?getThreeBytePrimaryForOffsetData@Collation@icu_56@@SAIH_J@Z ; icu_56::Collation::getThreeBytePrimaryForOffsetData
	add	esp, 12					; 0000000cH
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ENDP ; icu_56::CollationData::getCEFromOffsetCE32
_TEXT	ENDS
PUBLIC	?getFCD16@CollationData@icu_56@@QBEGH@Z		; icu_56::CollationData::getFCD16
EXTRN	__imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFCD16@CollationData@icu_56@@QBEGH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?getFCD16@CollationData@icu_56@@QBEGH@Z PROC		; icu_56::CollationData::getFCD16, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	DWORD PTR __imp_?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFCD16@CollationData@icu_56@@QBEGH@Z ENDP		; icu_56::CollationData::getFCD16
_TEXT	ENDS
PUBLIC	??_C@_1DO@EAMCBKAM@?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAi?$AAs?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAE?$AA3?$AA2?$AA?$CI?$AAc?$AAe?$AA3?$AA2?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??getIndirectCE32@CollationData@icu_56@@QBEII@Z@4JA ; `icu_56::CollationData::getIndirectCE32'::`2'::__LINE__Var
PUBLIC	?getIndirectCE32@CollationData@icu_56@@QBEII@Z	; icu_56::CollationData::getIndirectCE32
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1DO@EAMCBKAM@?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAi?$AAs?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAE?$AA3?$AA2?$AA?$CI?$AAc?$AAe?$AA3?$AA2?$AA?$CJ?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\collationdata.cpp
CONST	SEGMENT
??_C@_1DO@EAMCBKAM@?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAi?$AAs?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAE?$AA3?$AA2?$AA?$CI?$AAc?$AAe?$AA3?$AA2?$AA?$CJ?$AA?$AA@ DB 'C'
	DB	00H, 'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, ':', 00H, ':', 00H, 'i', 00H, 's', 00H, 'S'
	DB	00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'C', 00H, 'E', 00H, '3', 00H, '2', 00H, '(', 00H, 'c', 00H, 'e'
	DB	00H, '3', 00H, '2', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getIndirectCE32@CollationData@icu_56@@QBEII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getIndirectCE32@CollationData@icu_56@@QBEII@Z@4JA DD 01dH ; `icu_56::CollationData::getIndirectCE32'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getIndirectCE32@CollationData@icu_56@@QBEII@Z
_TEXT	SEGMENT
_tag$ = -20						; size = 4
_this$ = -8						; size = 4
_ce32$ = 8						; size = 4
?getIndirectCE32@CollationData@icu_56@@QBEII@Z PROC	; icu_56::CollationData::getIndirectCE32, COMDAT
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@getIndirec
	mov	edx, DWORD PTR ?__LINE__Var@?1??getIndirectCE32@CollationData@icu_56@@QBEII@Z@4JA
	add	edx, 1
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DO@EAMCBKAM@?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAi?$AAs?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAE?$AA3?$AA2?$AA?$CI?$AAc?$AAe?$AA3?$AA2?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@getIndirec:
; Line 31
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	mov	DWORD PTR _tag$[ebp], eax
; Line 32
	cmp	DWORD PTR _tag$[ebp], 10		; 0000000aH
	jne	SHORT $LN5@getIndirec
; Line 34
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _ce32$[ebp], eax
	jmp	SHORT $LN4@getIndirec
$LN5@getIndirec:
; Line 35
	cmp	DWORD PTR _tag$[ebp], 13		; 0000000dH
	jne	SHORT $LN3@getIndirec
; Line 36
	mov	DWORD PTR _ce32$[ebp], -1
	jmp	SHORT $LN4@getIndirec
$LN3@getIndirec:
; Line 37
	cmp	DWORD PTR _tag$[ebp], 11		; 0000000bH
	jne	SHORT $LN4@getIndirec
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ce32$[ebp], edx
$LN4@getIndirec:
; Line 41
	mov	eax, DWORD PTR _ce32$[ebp]
; Line 42
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getIndirectCE32@CollationData@icu_56@@QBEII@Z ENDP	; icu_56::CollationData::getIndirectCE32
_TEXT	ENDS
PUBLIC	?getFinalCE32@CollationData@icu_56@@QBEII@Z	; icu_56::CollationData::getFinalCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFinalCE32@CollationData@icu_56@@QBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ce32$ = 8						; size = 4
?getFinalCE32@CollationData@icu_56@@QBEII@Z PROC	; icu_56::CollationData::getFinalCE32, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getFinalCE
; Line 47
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getIndirectCE32@CollationData@icu_56@@QBEII@Z ; icu_56::CollationData::getIndirectCE32
	mov	DWORD PTR _ce32$[ebp], eax
$LN1@getFinalCE:
; Line 49
	mov	eax, DWORD PTR _ce32$[ebp]
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFinalCE32@CollationData@icu_56@@QBEII@Z ENDP	; icu_56::CollationData::getFinalCE32
_TEXT	ENDS
PUBLIC	??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z@4JA ; `icu_56::CollationData::getSingleCE'::`2'::__LINE__Var
PUBLIC	?getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z ; icu_56::CollationData::getSingleCE
;	COMDAT ??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z@4JA DD 035H ; `icu_56::CollationData::getSingleCE'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
_ce32$ = -32						; size = 4
_d$ = -20						; size = 4
_this$ = -8						; size = 4
_c$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z PROC ; icu_56::CollationData::getSingleCE, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@getSingleC
	xor	eax, eax
	xor	edx, edx
	jmp	$LN22@getSingleC
$LN21@getSingleC:
; Line 57
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 58
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	jne	SHORT $LN20@getSingleC
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _d$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?getCE32@CollationData@icu_56@@QBEIH@Z	; icu_56::CollationData::getCE32
	mov	DWORD PTR _ce32$[ebp], eax
; Line 61
	jmp	SHORT $LN18@getSingleC
$LN20@getSingleC:
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _d$[ebp], eax
$LN18@getSingleC:
; Line 64
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN17@getSingleC
; Line 65
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 15			; 0000000fH
	ja	$LN15@getSingleC
	mov	ecx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN25@getSingleC[ecx*4]
$LN14@getSingleC:
; Line 72
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 73
	xor	eax, eax
	xor	edx, edx
	jmp	$LN22@getSingleC
$LN13@getSingleC:
; Line 76
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 5
; Line 77
	xor	eax, eax
	xor	edx, edx
	jmp	$LN22@getSingleC
$LN12@getSingleC:
; Line 79
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
	add	esp, 4
	jmp	$LN22@getSingleC
$LN11@getSingleC:
; Line 81
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
	add	esp, 4
	jmp	$LN22@getSingleC
$LN10@getSingleC:
; Line 83
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?lengthFromCE32@Collation@icu_56@@SAHI@Z ; icu_56::Collation::lengthFromCE32
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN9@getSingleC
; Line 84
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 85
	jmp	$LN15@getSingleC
; Line 86
	jmp	SHORT $LN7@getSingleC
$LN9@getSingleC:
; Line 87
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 88
	xor	eax, eax
	xor	edx, edx
	jmp	$LN22@getSingleC
$LN7@getSingleC:
; Line 91
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?lengthFromCE32@Collation@icu_56@@SAHI@Z ; icu_56::Collation::lengthFromCE32
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN6@getSingleC
; Line 92
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, eax
	mov	edx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	edx, DWORD PTR [edx+ecx*8+4]
	jmp	$LN22@getSingleC
; Line 93
	jmp	SHORT $LN4@getSingleC
$LN6@getSingleC:
; Line 94
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 95
	xor	eax, eax
	xor	edx, edx
	jmp	$LN22@getSingleC
$LN4@getSingleC:
; Line 100
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?indexFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::indexFromCE32
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 101
	jmp	SHORT $LN15@getSingleC
$LN3@getSingleC:
; Line 103
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN24@getSingleC
	mov	eax, DWORD PTR ?__LINE__Var@?1??getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z@4JA
	add	eax, 50					; 00000032H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@LCILEFIB@?$AAc?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@getSingleC:
; Line 105
	mov	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ce32$[ebp], edx
; Line 106
	jmp	SHORT $LN15@getSingleC
$LN2@getSingleC:
; Line 108
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _d$[ebp]
	call	?getCEFromOffsetCE32@CollationData@icu_56@@QBE_JHI@Z ; icu_56::CollationData::getCEFromOffsetCE32
	jmp	SHORT $LN22@getSingleC
$LN1@getSingleC:
; Line 110
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
	add	esp, 4
	jmp	SHORT $LN22@getSingleC
$LN15@getSingleC:
; Line 112
	jmp	$LN18@getSingleC
$LN17@getSingleC:
; Line 113
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromSimpleCE32
	add	esp, 4
$LN22@getSingleC:
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN25@getSingleC:
	DD	$LN13@getSingleC
	DD	$LN12@getSingleC
	DD	$LN11@getSingleC
	DD	$LN13@getSingleC
	DD	$LN14@getSingleC
	DD	$LN10@getSingleC
	DD	$LN7@getSingleC
	DD	$LN14@getSingleC
	DD	$LN14@getSingleC
	DD	$LN14@getSingleC
	DD	$LN4@getSingleC
	DD	$LN3@getSingleC
	DD	$LN14@getSingleC
	DD	$LN14@getSingleC
	DD	$LN2@getSingleC
	DD	$LN1@getSingleC
?getSingleCE@CollationData@icu_56@@QBE_JHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationData::getSingleCE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?getScriptIndex@CollationData@icu_56@@ABEHH@Z	; icu_56::CollationData::getScriptIndex
PUBLIC	?getFirstPrimaryForGroup@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getFirstPrimaryForGroup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFirstPrimaryForGroup@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
?getFirstPrimaryForGroup@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getFirstPrimaryForGroup, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationdata.cpp
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 118
	mov	eax, DWORD PTR _script$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScriptIndex@CollationData@icu_56@@ABEHH@Z ; icu_56::CollationData::getScriptIndex
	mov	DWORD PTR _index$[ebp], eax
; Line 119
	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN3@getFirstPr
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN4@getFirstPr
$LN3@getFirstPr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	shl	eax, 16					; 00000010H
	mov	DWORD PTR tv73[ebp], eax
$LN4@getFirstPr:
	mov	eax, DWORD PTR tv73[ebp]
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getFirstPrimaryForGroup@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getFirstPrimaryForGroup
_TEXT	ENDS
PUBLIC	?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z ; icu_56::CollationData::getLastPrimaryForGroup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z
_TEXT	SEGMENT
_limit$ = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z PROC ; icu_56::CollationData::getLastPrimaryForGroup, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _script$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScriptIndex@CollationData@icu_56@@ABEHH@Z ; icu_56::CollationData::getScriptIndex
	mov	DWORD PTR _index$[ebp], eax
; Line 125
	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN1@getLastPri
; Line 126
	xor	eax, eax
	jmp	SHORT $LN2@getLastPri
$LN1@getLastPri:
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2+2]
	mov	DWORD PTR _limit$[ebp], eax
; Line 129
	mov	eax, DWORD PTR _limit$[ebp]
	shl	eax, 16					; 00000010H
	sub	eax, 1
$LN2@getLastPri:
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLastPrimaryForGroup@CollationData@icu_56@@QBEIH@Z ENDP ; icu_56::CollationData::getLastPrimaryForGroup
_TEXT	ENDS
PUBLIC	?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z ; icu_56::CollationData::getGroupForPrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z
_TEXT	SEGMENT
_i$72580 = -44						; size = 4
_i$72575 = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z PROC	; icu_56::CollationData::getGroupForPrimary, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 134
	mov	eax, DWORD PTR _p$[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _p$[ebp], eax
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movzx	edx, WORD PTR [ecx+2]
	cmp	DWORD PTR _p$[ebp], edx
	jb	SHORT $LN11@getGroupFo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	movzx	ecx, WORD PTR [eax+ecx*2-2]
	cmp	ecx, DWORD PTR _p$[ebp]
	ja	SHORT $LN12@getGroupFo
$LN11@getGroupFo:
; Line 136
	or	eax, -1
	jmp	$LN13@getGroupFo
$LN12@getGroupFo:
; Line 138
	mov	DWORD PTR _index$[ebp], 1
$LN10@getGroupFo:
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2+2]
	cmp	DWORD PTR _p$[ebp], eax
	jb	SHORT $LN9@getGroupFo
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
	jmp	SHORT $LN10@getGroupFo
$LN9@getGroupFo:
; Line 140
	mov	DWORD PTR _i$72575[ebp], 0
	jmp	SHORT $LN8@getGroupFo
$LN7@getGroupFo:
	mov	eax, DWORD PTR _i$72575[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72575[ebp], eax
$LN8@getGroupFo:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$72575[ebp]
	cmp	ecx, DWORD PTR [eax+60]
	jge	SHORT $LN6@getGroupFo
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _i$72575[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	cmp	eax, DWORD PTR _index$[ebp]
	jne	SHORT $LN5@getGroupFo
; Line 142
	mov	eax, DWORD PTR _i$72575[ebp]
	jmp	SHORT $LN13@getGroupFo
$LN5@getGroupFo:
; Line 144
	jmp	SHORT $LN7@getGroupFo
$LN6@getGroupFo:
; Line 145
	mov	DWORD PTR _i$72580[ebp], 0
	jmp	SHORT $LN4@getGroupFo
$LN3@getGroupFo:
	mov	eax, DWORD PTR _i$72580[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72580[ebp], eax
$LN4@getGroupFo:
	cmp	DWORD PTR _i$72580[ebp], 8
	jge	SHORT $LN2@getGroupFo
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, DWORD PTR _i$72580[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	movzx	ecx, WORD PTR [eax+ecx*2]
	cmp	ecx, DWORD PTR _index$[ebp]
	jne	SHORT $LN1@getGroupFo
; Line 147
	mov	eax, DWORD PTR _i$72580[ebp]
	add	eax, 4096				; 00001000H
	jmp	SHORT $LN13@getGroupFo
$LN1@getGroupFo:
; Line 149
	jmp	SHORT $LN3@getGroupFo
$LN2@getGroupFo:
; Line 150
	or	eax, -1
$LN13@getGroupFo:
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getGroupForPrimary@CollationData@icu_56@@QBEHI@Z ENDP	; icu_56::CollationData::getGroupForPrimary
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getScriptIndex@CollationData@icu_56@@ABEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_script$ = 8						; size = 4
?getScriptIndex@CollationData@icu_56@@ABEHH@Z PROC	; icu_56::CollationData::getScriptIndex, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	cmp	DWORD PTR _script$[ebp], 0
	jge	SHORT $LN8@getScriptI
; Line 156
	xor	eax, eax
	jmp	SHORT $LN9@getScriptI
	jmp	SHORT $LN9@getScriptI
$LN8@getScriptI:
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _script$[ebp]
	cmp	ecx, DWORD PTR [eax+60]
	jge	SHORT $LN6@getScriptI
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _script$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	jmp	SHORT $LN9@getScriptI
	jmp	SHORT $LN9@getScriptI
$LN6@getScriptI:
; Line 159
	cmp	DWORD PTR _script$[ebp], 4096		; 00001000H
	jge	SHORT $LN4@getScriptI
; Line 160
	xor	eax, eax
	jmp	SHORT $LN9@getScriptI
; Line 161
	jmp	SHORT $LN9@getScriptI
$LN4@getScriptI:
; Line 162
	mov	eax, DWORD PTR _script$[ebp]
	sub	eax, 4096				; 00001000H
	mov	DWORD PTR _script$[ebp], eax
; Line 163
	cmp	DWORD PTR _script$[ebp], 8
	jge	SHORT $LN2@getScriptI
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	movzx	eax, WORD PTR [eax+ecx*2]
	jmp	SHORT $LN9@getScriptI
; Line 165
	jmp	SHORT $LN9@getScriptI
$LN2@getScriptI:
; Line 166
	xor	eax, eax
$LN9@getScriptI:
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getScriptIndex@CollationData@icu_56@@ABEHH@Z ENDP	; icu_56::CollationData::getScriptIndex
_TEXT	ENDS
PUBLIC	?getEquivalentScripts@CollationData@icu_56@@QBEHHQAHHAAW4UErrorCode@@@Z ; icu_56::CollationData::getEquivalentScripts
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEquivalentScripts@CollationData@icu_56@@QBEHHQAHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$72611 = -44						; size = 4
_length$ = -32						; size = 4
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_script$ = 8						; size = 4
_dest$ = 12						; size = 4
_capacity$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?getEquivalentScripts@CollationData@icu_56@@QBEHHQAHHAAW4UErrorCode@@@Z PROC ; icu_56::CollationData::getEquivalentScripts, COMDAT
; _this$ = ecx
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@getEquival
	xor	eax, eax
	jmp	$LN12@getEquival
$LN11@getEquival:
; Line 176
	mov	eax, DWORD PTR _script$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScriptIndex@CollationData@icu_56@@ABEHH@Z ; icu_56::CollationData::getScriptIndex
	mov	DWORD PTR _index$[ebp], eax
; Line 177
	cmp	DWORD PTR _index$[ebp], 0
	jne	SHORT $LN10@getEquival
	xor	eax, eax
	jmp	$LN12@getEquival
$LN10@getEquival:
; Line 178
	cmp	DWORD PTR _script$[ebp], 4096		; 00001000H
	jl	SHORT $LN9@getEquival
; Line 180
	cmp	DWORD PTR _capacity$[ebp], 0
	jle	SHORT $LN8@getEquival
; Line 181
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 182
	jmp	SHORT $LN7@getEquival
$LN8@getEquival:
; Line 183
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN7@getEquival:
; Line 185
	mov	eax, 1
	jmp	SHORT $LN12@getEquival
$LN9@getEquival:
; Line 188
	mov	DWORD PTR _length$[ebp], 0
; Line 189
	mov	DWORD PTR _i$72611[ebp], 0
	jmp	SHORT $LN6@getEquival
$LN5@getEquival:
	mov	eax, DWORD PTR _i$72611[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72611[ebp], eax
$LN6@getEquival:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$72611[ebp]
	cmp	ecx, DWORD PTR [eax+60]
	jge	SHORT $LN4@getEquival
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _i$72611[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	cmp	eax, DWORD PTR _index$[ebp]
	jne	SHORT $LN3@getEquival
; Line 191
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jge	SHORT $LN2@getEquival
; Line 192
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR _i$72611[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
$LN2@getEquival:
; Line 194
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	mov	DWORD PTR _length$[ebp], eax
$LN3@getEquival:
; Line 196
	jmp	SHORT $LN5@getEquival
$LN4@getEquival:
; Line 197
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jle	SHORT $LN1@getEquival
; Line 198
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN1@getEquival:
; Line 200
	mov	eax, DWORD PTR _length$[ebp]
$LN12@getEquival:
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getEquivalentScripts@CollationData@icu_56@@QBEHHQAHHAAW4UErrorCode@@@Z ENDP ; icu_56::CollationData::getEquivalentScripts
_TEXT	ENDS
PUBLIC	?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationData::makeReorderRanges
PUBLIC	?makeReorderRanges@CollationData@icu_56@@QBEXPBHHAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationData::makeReorderRanges
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeReorderRanges@CollationData@icu_56@@QBEXPBHHAAVUVector32@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_reorder$ = 8						; size = 4
_length$ = 12						; size = 4
_ranges$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?makeReorderRanges@CollationData@icu_56@@QBEXPBHHAAVUVector32@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationData::makeReorderRanges, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ranges$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _reorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationData::makeReorderRanges
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?makeReorderRanges@CollationData@icu_56@@QBEXPBHHAAVUVector32@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationData::makeReorderRanges
_TEXT	ENDS
PUBLIC	?addHighScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addHighScriptRange
PUBLIC	??_C@_1CE@JNLDOLAI@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@KKDMOMDI@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addLowScriptRange
PUBLIC	??_C@_1GC@INEFDFBC@?$AAh?$AAi?$AAg?$AAh?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAT?$AAR?$AAA?$AAI?$AAL?$AA_?$AAW@ ; `string'
PUBLIC	??_C@_1HC@FEFJANMA@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAM?$AAE?$AAR?$AAG?$AAE?$AA_?$AAS@ ; `string'
PUBLIC	??_C@_1CK@EGAKPLHK@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@OLKGFKMG@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::CollationData::makeReorderRanges'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	_memset:PROC
EXTRN	__imp_?removeAllElements@UVector32@icu_56@@QAEXXZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_1CE@JNLDOLAI@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@JNLDOLAI@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KKDMOMDI@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@KKDMOMDI@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@INEFDFBC@?$AAh?$AAi?$AAg?$AAh?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAT?$AAR?$AAA?$AAI?$AAL?$AA_?$AAW@
CONST	SEGMENT
??_C@_1GC@INEFDFBC@?$AAh?$AAi?$AAg?$AAh?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAT?$AAR?$AAA?$AAI?$AAL?$AA_?$AAW@ DB 'h'
	DB	00H, 'i', 00H, 'g', 00H, 'h', 00H, 'L', 00H, 'i', 00H, 'm', 00H
	DB	'i', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '('
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ':', 00H, ':', 00H, 'T', 00H, 'R'
	DB	00H, 'A', 00H, 'I', 00H, 'L', 00H, '_', 00H, 'W', 00H, 'E', 00H
	DB	'I', 00H, 'G', 00H, 'H', 00H, 'T', 00H, '_', 00H, 'B', 00H, 'Y'
	DB	00H, 'T', 00H, 'E', 00H, ' ', 00H, '<', 00H, '<', 00H, ' ', 00H
	DB	'8', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@FEFJANMA@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAM?$AAE?$AAR?$AAG?$AAE?$AA_?$AAS@
CONST	SEGMENT
??_C@_1HC@FEFJANMA@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAM?$AAE?$AAR?$AAG?$AAE?$AA_?$AAS@ DB 'l'
	DB	00H, 'o', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '(', 00H, '('
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ':', 00H, ':', 00H, 'M', 00H, 'E'
	DB	00H, 'R', 00H, 'G', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'E', 00H
	DB	'P', 00H, 'A', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H, 'R'
	DB	00H, '_', 00H, 'B', 00H, 'Y', 00H, 'T', 00H, 'E', 00H, ' ', 00H
	DB	'+', 00H, ' ', 00H, '1', 00H, ')', 00H, ' ', 00H, '<', 00H, '<'
	DB	00H, ' ', 00H, '8', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EGAKPLHK@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EGAKPLHK@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 's'
	DB	00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 's', 00H, '[', 00H, '0'
	DB	00H, ']', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@OLKGFKMG@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@OLKGFKMG@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@ DB 's'
	DB	00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 's', 00H, 'L', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '2', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA DD 0d4H ; `icu_56::CollationData::makeReorderRanges'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_newLeadByte$72713 = -564				; size = 4
_nextOffset$72709 = -552				; size = 4
_i$72705 = -540						; size = 4
_offset$ = -528						; size = 4
_start$72700 = -516					; size = 4
_leadByte$72698 = -504					; size = 4
_i$72694 = -492						; size = 4
_index$72691 = -480					; size = 4
_index$72687 = -468					; size = 4
_script$72680 = -456					; size = 4
_i$72676 = -444						; size = 4
_hasReorderToEnd$ = -429				; size = 1
_originalLength$ = -420					; size = 4
_start$72671 = -408					; size = 4
_index$72668 = -396					; size = 4
_skippedReserved$ = -384				; size = 4
_index$72663 = -372					; size = 4
_i$72659 = -360						; size = 4
_reorderCode$72656 = -348				; size = 4
_i$72652 = -336						; size = 4
_specials$ = -324					; size = 4
_highLimit$ = -312					; size = 4
_lowStart$ = -300					; size = 4
_index$72637 = -288					; size = 4
_table$ = -276						; size = 256
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_reorder$ = 8						; size = 4
_length$ = 12						; size = 4
_latinMustMove$ = 16					; size = 1
_ranges$ = 20						; size = 4
_errorCode$ = 24					; size = 4
?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z PROC ; icu_56::CollationData::makeReorderRanges, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 760				; 000002f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-760]
	mov	ecx, 190				; 000000beH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@makeReorde
	jmp	$LN45@makeReorde
$LN44@makeReorde:
; Line 214
	mov	esi, esp
	mov	ecx, DWORD PTR _ranges$[ebp]
	call	DWORD PTR __imp_?removeAllElements@UVector32@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	cmp	DWORD PTR _length$[ebp], 0
	je	SHORT $LN42@makeReorde
	cmp	DWORD PTR _length$[ebp], 1
	jne	SHORT $LN43@makeReorde
	mov	eax, DWORD PTR _reorder$[ebp]
	cmp	DWORD PTR [eax], 103			; 00000067H
	jne	SHORT $LN43@makeReorde
$LN42@makeReorde:
; Line 216
	jmp	$LN45@makeReorde
$LN43@makeReorde:
; Line 221
	push	256					; 00000100H
	push	0
	lea	eax, DWORD PTR _table$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	movzx	ecx, WORD PTR [eax+ecx*2+28]
	mov	DWORD PTR _index$72637[ebp], ecx
; Line 227
	cmp	DWORD PTR _index$72637[ebp], 0
	je	SHORT $LN41@makeReorde
; Line 228
	mov	eax, DWORD PTR _index$72637[ebp]
	mov	BYTE PTR _table$[ebp+eax], 255		; 000000ffH
$LN41@makeReorde:
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	movzx	ecx, WORD PTR [eax+ecx*2+30]
	mov	DWORD PTR _index$72637[ebp], ecx
; Line 232
	cmp	DWORD PTR _index$72637[ebp], 0
	je	SHORT $LN40@makeReorde
; Line 233
	mov	eax, DWORD PTR _index$72637[ebp]
	mov	BYTE PTR _table$[ebp+eax], 255		; 000000ffH
$LN40@makeReorde:
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 2
	jge	SHORT $LN47@makeReorde
	mov	ecx, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 26					; 0000001aH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DA@OLKGFKMG@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA2?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN47@makeReorde:
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movzx	edx, WORD PTR [ecx]
	test	edx, edx
	je	SHORT $LN48@makeReorde
	mov	eax, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 27					; 0000001bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CK@EGAKPLHK@?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@makeReorde:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movzx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR _lowStart$[ebp], edx
; Line 241
	cmp	DWORD PTR _lowStart$[ebp], 768		; 00000300H
	je	SHORT $LN49@makeReorde
	mov	eax, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 29					; 0000001dH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1HC@FEFJANMA@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAM?$AAE?$AAR?$AAG?$AAE?$AA_?$AAS@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@makeReorde:
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	movzx	ecx, WORD PTR [eax+ecx*2-2]
	mov	DWORD PTR _highLimit$[ebp], ecx
; Line 243
	cmp	DWORD PTR _highLimit$[ebp], 65280	; 0000ff00H
	je	SHORT $LN50@makeReorde
	mov	eax, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 31					; 0000001fH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GC@INEFDFBC@?$AAh?$AAi?$AAg?$AAh?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CI?$AAC?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?3?$AAT?$AAR?$AAA?$AAI?$AAL?$AA_?$AAW@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@makeReorde:
; Line 248
	mov	DWORD PTR _specials$[ebp], 0
; Line 249
	mov	DWORD PTR _i$72652[ebp], 0
	jmp	SHORT $LN39@makeReorde
$LN38@makeReorde:
	mov	eax, DWORD PTR _i$72652[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72652[ebp], eax
$LN39@makeReorde:
	mov	eax, DWORD PTR _i$72652[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN37@makeReorde
; Line 250
	mov	eax, DWORD PTR _i$72652[ebp]
	mov	ecx, DWORD PTR _reorder$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	sub	edx, 4096				; 00001000H
	mov	DWORD PTR _reorderCode$72656[ebp], edx
; Line 251
	js	SHORT $LN36@makeReorde
	cmp	DWORD PTR _reorderCode$72656[ebp], 8
	jge	SHORT $LN36@makeReorde
; Line 252
	mov	eax, 1
	mov	ecx, DWORD PTR _reorderCode$72656[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _specials$[ebp]
	mov	DWORD PTR _specials$[ebp], eax
$LN36@makeReorde:
; Line 254
	jmp	SHORT $LN38@makeReorde
$LN37@makeReorde:
; Line 257
	mov	DWORD PTR _i$72659[ebp], 0
	jmp	SHORT $LN35@makeReorde
$LN34@makeReorde:
	mov	eax, DWORD PTR _i$72659[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72659[ebp], eax
$LN35@makeReorde:
	cmp	DWORD PTR _i$72659[ebp], 8
	jge	SHORT $LN33@makeReorde
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, DWORD PTR _i$72659[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	movzx	ecx, WORD PTR [eax+ecx*2]
	mov	DWORD PTR _index$72663[ebp], ecx
; Line 259
	cmp	DWORD PTR _index$72663[ebp], 0
	je	SHORT $LN32@makeReorde
	mov	eax, 1
	mov	ecx, DWORD PTR _i$72659[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _specials$[ebp]
	jne	SHORT $LN32@makeReorde
; Line 260
	mov	eax, DWORD PTR _lowStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$72663[ebp]
	push	ecx
	lea	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addLowScriptRange
	mov	DWORD PTR _lowStart$[ebp], eax
$LN32@makeReorde:
; Line 262
	jmp	SHORT $LN34@makeReorde
$LN33@makeReorde:
; Line 266
	mov	DWORD PTR _skippedReserved$[ebp], 0
; Line 267
	cmp	DWORD PTR _specials$[ebp], 0
	jne	$LN31@makeReorde
	mov	eax, DWORD PTR _reorder$[ebp]
	cmp	DWORD PTR [eax], 25			; 00000019H
	jne	$LN31@makeReorde
	movsx	eax, BYTE PTR _latinMustMove$[ebp]
	test	eax, eax
	jne	$LN31@makeReorde
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	movzx	edx, WORD PTR [ecx+50]
	mov	DWORD PTR _index$72668[ebp], edx
; Line 269
	cmp	DWORD PTR _index$72668[ebp], 0
	jne	SHORT $LN51@makeReorde
	mov	eax, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 57					; 00000039H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@KKDMOMDI@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@makeReorde:
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$72668[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _start$72671[ebp], eax
; Line 271
	mov	eax, DWORD PTR _lowStart$[ebp]
	cmp	eax, DWORD PTR _start$72671[ebp]
	jle	SHORT $LN52@makeReorde
	mov	ecx, DWORD PTR ?__LINE__Var@?1??makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 59					; 0000003bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GE@MKHHDDBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@JNLDOLAI@?$AAl?$AAo?$AAw?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@makeReorde:
; Line 272
	mov	eax, DWORD PTR _start$72671[ebp]
	sub	eax, DWORD PTR _lowStart$[ebp]
	mov	DWORD PTR _skippedReserved$[ebp], eax
; Line 273
	mov	eax, DWORD PTR _start$72671[ebp]
	mov	DWORD PTR _lowStart$[ebp], eax
$LN31@makeReorde:
; Line 277
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _originalLength$[ebp], eax
; Line 278
	mov	BYTE PTR _hasReorderToEnd$[ebp], 0
; Line 279
	mov	DWORD PTR _i$72676[ebp], 0
$LN30@makeReorde:
	mov	eax, DWORD PTR _i$72676[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN29@makeReorde
; Line 280
	mov	eax, DWORD PTR _i$72676[ebp]
	mov	ecx, DWORD PTR _reorder$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _script$72680[ebp], edx
	mov	eax, DWORD PTR _i$72676[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72676[ebp], eax
; Line 281
	cmp	DWORD PTR _script$72680[ebp], 103	; 00000067H
	jne	$LN28@makeReorde
; Line 283
	mov	BYTE PTR _hasReorderToEnd$[ebp], 1
$LN27@makeReorde:
; Line 284
	mov	eax, DWORD PTR _i$72676[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN26@makeReorde
; Line 285
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _reorder$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _script$72680[ebp], eax
; Line 287
	cmp	DWORD PTR _script$72680[ebp], 103	; 00000067H
	je	SHORT $LN24@makeReorde
	cmp	DWORD PTR _script$72680[ebp], -1
	jne	SHORT $LN25@makeReorde
$LN24@makeReorde:
; Line 288
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 289
	jmp	$LN45@makeReorde
$LN25@makeReorde:
; Line 291
	mov	eax, DWORD PTR _script$72680[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScriptIndex@CollationData@icu_56@@ABEHH@Z ; icu_56::CollationData::getScriptIndex
	mov	DWORD PTR _index$72687[ebp], eax
; Line 292
	cmp	DWORD PTR _index$72687[ebp], 0
	jne	SHORT $LN23@makeReorde
	jmp	SHORT $LN27@makeReorde
$LN23@makeReorde:
; Line 293
	mov	eax, DWORD PTR _index$72687[ebp]
	movzx	ecx, BYTE PTR _table$[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN22@makeReorde
; Line 294
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 295
	jmp	$LN45@makeReorde
$LN22@makeReorde:
; Line 297
	mov	eax, DWORD PTR _highLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$72687[ebp]
	push	ecx
	lea	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addHighScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addHighScriptRange
	mov	DWORD PTR _highLimit$[ebp], eax
; Line 298
	jmp	$LN27@makeReorde
$LN26@makeReorde:
; Line 299
	jmp	$LN29@makeReorde
$LN28@makeReorde:
; Line 301
	cmp	DWORD PTR _script$72680[ebp], -1
	jne	SHORT $LN21@makeReorde
; Line 304
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 305
	jmp	$LN45@makeReorde
$LN21@makeReorde:
; Line 307
	mov	eax, DWORD PTR _script$72680[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScriptIndex@CollationData@icu_56@@ABEHH@Z ; icu_56::CollationData::getScriptIndex
	mov	DWORD PTR _index$72691[ebp], eax
; Line 308
	cmp	DWORD PTR _index$72691[ebp], 0
	jne	SHORT $LN20@makeReorde
	jmp	$LN30@makeReorde
$LN20@makeReorde:
; Line 309
	mov	eax, DWORD PTR _index$72691[ebp]
	movzx	ecx, BYTE PTR _table$[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN19@makeReorde
; Line 310
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 311
	jmp	$LN45@makeReorde
$LN19@makeReorde:
; Line 313
	mov	eax, DWORD PTR _lowStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$72691[ebp]
	push	ecx
	lea	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addLowScriptRange
	mov	DWORD PTR _lowStart$[ebp], eax
; Line 314
	jmp	$LN30@makeReorde
$LN29@makeReorde:
; Line 317
	mov	DWORD PTR _i$72694[ebp], 1
	jmp	SHORT $LN18@makeReorde
$LN17@makeReorde:
	mov	eax, DWORD PTR _i$72694[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72694[ebp], eax
$LN18@makeReorde:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	sub	ecx, 1
	cmp	DWORD PTR _i$72694[ebp], ecx
	jge	$LN16@makeReorde
; Line 318
	mov	eax, DWORD PTR _i$72694[ebp]
	movzx	ecx, BYTE PTR _table$[ebp+eax]
	mov	DWORD PTR _leadByte$72698[ebp], ecx
; Line 319
	cmp	DWORD PTR _leadByte$72698[ebp], 0
	je	SHORT $LN15@makeReorde
	jmp	SHORT $LN17@makeReorde
$LN15@makeReorde:
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _i$72694[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _start$72700[ebp], eax
; Line 321
	movsx	eax, BYTE PTR _hasReorderToEnd$[ebp]
	test	eax, eax
	jne	SHORT $LN14@makeReorde
	mov	eax, DWORD PTR _start$72700[ebp]
	cmp	eax, DWORD PTR _lowStart$[ebp]
	jle	SHORT $LN14@makeReorde
; Line 323
	mov	eax, DWORD PTR _start$72700[ebp]
	mov	DWORD PTR _lowStart$[ebp], eax
$LN14@makeReorde:
; Line 325
	mov	eax, DWORD PTR _lowStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$72694[ebp]
	push	ecx
	lea	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ; icu_56::CollationData::addLowScriptRange
	mov	DWORD PTR _lowStart$[ebp], eax
; Line 326
	jmp	$LN17@makeReorde
$LN16@makeReorde:
; Line 327
	mov	eax, DWORD PTR _lowStart$[ebp]
	cmp	eax, DWORD PTR _highLimit$[ebp]
	jle	SHORT $LN13@makeReorde
; Line 328
	mov	eax, DWORD PTR _skippedReserved$[ebp]
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _lowStart$[ebp]
	sub	ecx, eax
	cmp	ecx, DWORD PTR _highLimit$[ebp]
	jg	SHORT $LN12@makeReorde
; Line 330
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ranges$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _originalLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _reorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z ; icu_56::CollationData::makeReorderRanges
; Line 331
	jmp	$LN45@makeReorde
$LN12@makeReorde:
; Line 334
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 335
	jmp	$LN45@makeReorde
$LN13@makeReorde:
; Line 341
	mov	DWORD PTR _offset$[ebp], 0
; Line 342
	mov	DWORD PTR _i$72705[ebp], 1
	jmp	SHORT $LN11@makeReorde
$LN10@makeReorde:
	mov	eax, DWORD PTR _i$72705[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72705[ebp], eax
$LN11@makeReorde:
; Line 343
	mov	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _nextOffset$72709[ebp], eax
$LN8@makeReorde:
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	sub	ecx, 1
	cmp	DWORD PTR _i$72705[ebp], ecx
	jge	SHORT $LN7@makeReorde
; Line 345
	mov	eax, DWORD PTR _i$72705[ebp]
	movzx	ecx, BYTE PTR _table$[ebp+eax]
	mov	DWORD PTR _newLeadByte$72713[ebp], ecx
; Line 346
	cmp	DWORD PTR _newLeadByte$72713[ebp], 255	; 000000ffH
	jne	SHORT $LN6@makeReorde
; Line 348
	jmp	SHORT $LN5@makeReorde
$LN6@makeReorde:
; Line 349
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _i$72705[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	sar	eax, 8
	mov	ecx, DWORD PTR _newLeadByte$72713[ebp]
	sub	ecx, eax
	mov	DWORD PTR _nextOffset$72709[ebp], ecx
; Line 350
	mov	eax, DWORD PTR _nextOffset$72709[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	je	SHORT $LN5@makeReorde
	jmp	SHORT $LN7@makeReorde
$LN5@makeReorde:
; Line 352
	mov	eax, DWORD PTR _i$72705[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72705[ebp], eax
; Line 353
	jmp	SHORT $LN8@makeReorde
$LN7@makeReorde:
; Line 354
	cmp	DWORD PTR _offset$[ebp], 0
	jne	SHORT $LN2@makeReorde
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	sub	ecx, 1
	cmp	DWORD PTR _i$72705[ebp], ecx
	jge	SHORT $LN3@makeReorde
$LN2@makeReorde:
; Line 355
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _i$72705[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _offset$[ebp]
	and	edx, 65535				; 0000ffffH
	or	ecx, edx
	push	ecx
	mov	ecx, DWORD PTR _ranges$[ebp]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@makeReorde:
; Line 357
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	sub	ecx, 1
	cmp	DWORD PTR _i$72705[ebp], ecx
	jne	SHORT $LN1@makeReorde
	jmp	SHORT $LN45@makeReorde
$LN1@makeReorde:
; Line 358
	mov	eax, DWORD PTR _nextOffset$72709[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 359
	jmp	$LN10@makeReorde
$LN45@makeReorde:
; Line 360
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN57@makeReorde
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 760				; 000002f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN57@makeReorde:
	DD	1
	DD	$LN56@makeReorde
$LN56@makeReorde:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN55@makeReorde
$LN55@makeReorde:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?makeReorderRanges@CollationData@icu_56@@ABEXPBHHCAAVUVector32@2@AAW4UErrorCode@@@Z ENDP ; icu_56::CollationData::makeReorderRanges
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z
_TEXT	SEGMENT
_limit$ = -32						; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_table$ = 8						; size = 4
_index$ = 12						; size = 4
_lowStart$ = 16						; size = 4
?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z PROC ; icu_56::CollationData::addLowScriptRange, COMDAT
; _this$ = ecx
; Line 363
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _start$[ebp], eax
; Line 365
	mov	eax, DWORD PTR _start$[ebp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _lowStart$[ebp]
	and	ecx, 255				; 000000ffH
	cmp	eax, ecx
	jge	SHORT $LN1@addLowScri
; Line 366
	mov	eax, DWORD PTR _lowStart$[ebp]
	add	eax, 256				; 00000100H
	mov	DWORD PTR _lowStart$[ebp], eax
$LN1@addLowScri:
; Line 368
	mov	eax, DWORD PTR _lowStart$[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _table$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	BYTE PTR [ecx], al
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2+2]
	mov	DWORD PTR _limit$[ebp], eax
; Line 370
	mov	eax, DWORD PTR _lowStart$[ebp]
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _limit$[ebp]
	and	ecx, 65280				; 0000ff00H
	mov	edx, DWORD PTR _start$[ebp]
	and	edx, 65280				; 0000ff00H
	sub	ecx, edx
	add	eax, ecx
	mov	ecx, DWORD PTR _limit$[ebp]
	and	ecx, 255				; 000000ffH
	or	eax, ecx
	mov	DWORD PTR _lowStart$[ebp], eax
; Line 371
	mov	eax, DWORD PTR _lowStart$[ebp]
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?addLowScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ENDP ; icu_56::CollationData::addLowScriptRange
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addHighScriptRange@CollationData@icu_56@@ABEHQAEHH@Z
_TEXT	SEGMENT
_start$ = -32						; size = 4
_limit$ = -20						; size = 4
_this$ = -8						; size = 4
_table$ = 8						; size = 4
_index$ = 12						; size = 4
_highLimit$ = 16					; size = 4
?addHighScriptRange@CollationData@icu_56@@ABEHQAEHH@Z PROC ; icu_56::CollationData::addHighScriptRange, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2+2]
	mov	DWORD PTR _limit$[ebp], eax
; Line 377
	mov	eax, DWORD PTR _limit$[ebp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _highLimit$[ebp]
	and	ecx, 255				; 000000ffH
	cmp	eax, ecx
	jle	SHORT $LN1@addHighScr
; Line 378
	mov	eax, DWORD PTR _highLimit$[ebp]
	sub	eax, 256				; 00000100H
	mov	DWORD PTR _highLimit$[ebp], eax
$LN1@addHighScr:
; Line 380
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _index$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _start$[ebp], eax
; Line 381
	mov	eax, DWORD PTR _highLimit$[ebp]
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _limit$[ebp]
	and	ecx, 65280				; 0000ff00H
	mov	edx, DWORD PTR _start$[ebp]
	and	edx, 65280				; 0000ff00H
	sub	ecx, edx
	sub	eax, ecx
	mov	ecx, DWORD PTR _start$[ebp]
	and	ecx, 255				; 000000ffH
	or	eax, ecx
	mov	DWORD PTR _highLimit$[ebp], eax
; Line 382
	mov	eax, DWORD PTR _highLimit$[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _table$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	BYTE PTR [ecx], al
; Line 383
	mov	eax, DWORD PTR _highLimit$[ebp]
; Line 384
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?addHighScriptRange@CollationData@icu_56@@ABEHQAEHH@Z ENDP ; icu_56::CollationData::addHighScriptRange
_TEXT	ENDS
END

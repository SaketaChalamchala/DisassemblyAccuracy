; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\decfmtst.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
_gStaticSetsInitOnce DQ 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_gMinusSigns DD	02dH
	DD	0207bH
	DD	0208bH
	DD	02212H
	DD	02796H
	DD	0fe63H
	DD	0ff0dH
_gPlusSigns DD	02bH
	DD	0207aH
	DD	0208aH
	DD	02795H
	DD	0fb29H
	DD	0fe62H
	DD	0ff0bH
_DATA	ENDS
CONST	SEGMENT
_gDotEquivalentsPattern DW 05bH
	DW	02eH
	DW	02024H
	DW	03002H
	DW	0fe12H
	DW	0fe52H
	DW	0ff0eH
	DW	0ff61H
	DW	05dH
	DW	00H
_gCommaEquivalentsPattern DW 05bH
	DW	02cH
	DW	060cH
	DW	066bH
	DW	03001H
	DW	0fe10H
	DW	0fe11H
	DW	0fe50H
	DW	0fe51H
	DW	0ff0cH
	DW	0ff64H
	DW	05dH
	DW	00H
	ORG $+2
_gOtherGroupingSeparatorsPattern DW 05bH
	DW	05cH
	DW	020H
	DW	027H
	DW	0a0H
	DW	066cH
	DW	02000H
	DW	02dH
	DW	0200aH
	DW	02018H
	DW	02019H
	DW	0202fH
	DW	0205fH
	DW	03000H
	DW	0ff07H
	DW	05dH
	DW	00H
	ORG $+2
_gDashEquivalentsPattern DW 05bH
	DW	05cH
	DW	02dH
	DW	02010H
	DW	02012H
	DW	02013H
	DW	02212H
	DW	05dH
	DW	00H
	ORG $+2
_gStrictDotEquivalentsPattern DW 05bH
	DW	02eH
	DW	02024H
	DW	0fe52H
	DW	0ff0eH
	DW	0ff61H
	DW	05dH
	DW	00H
_gStrictCommaEquivalentsPattern DW 05bH
	DW	02cH
	DW	066bH
	DW	0fe10H
	DW	0fe50H
	DW	0ff0cH
	DW	05dH
	DW	00H
_gStrictOtherGroupingSeparatorsPattern DW 05bH
	DW	05cH
	DW	020H
	DW	027H
	DW	0a0H
	DW	066cH
	DW	02000H
	DW	02dH
	DW	0200aH
	DW	02018H
	DW	02019H
	DW	0202fH
	DW	0205fH
	DW	03000H
	DW	0ff07H
	DW	05dH
	DW	00H
	ORG $+2
_gStrictDashEquivalentsPattern DW 05bH
	DW	05cH
	DW	02dH
	DW	02212H
	DW	05dH
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ	; icu_56::DecimalFormatStaticSets::cleanup
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatStaticSets::DecimalFormatStaticSets
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
; File d:\mozilla\intl\icu\source\i18n\decfmtst.cpp
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	01cH
	DD	FLAT:__unwindtable$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$6
	DD	09H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$8
	DD	0cH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$10
	DD	0fH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$12
	DD	012H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$14
	DD	015H
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$19
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv232 = -1108						; size = 4
tv215 = -1108						; size = 4
tv198 = -1108						; size = 4
tv181 = -1108						; size = 4
tv164 = -1108						; size = 4
tv147 = -1108						; size = 4
tv130 = -1108						; size = 4
tv81 = -1108						; size = 4
tv461 = -1104						; size = 4
tv453 = -1104						; size = 4
tv445 = -1104						; size = 4
tv437 = -1104						; size = 4
tv429 = -1104						; size = 4
tv421 = -1104						; size = 4
tv413 = -1104						; size = 4
tv405 = -1104						; size = 4
tv520 = -1100						; size = 4
tv513 = -1100						; size = 4
tv506 = -1100						; size = 4
tv499 = -1100						; size = 4
tv492 = -1100						; size = 4
tv485 = -1100						; size = 4
tv478 = -1100						; size = 4
tv471 = -1100						; size = 4
tv312 = -1100						; size = 4
tv304 = -1100						; size = 4
tv276 = -1100						; size = 4
tv249 = -1100						; size = 4
$T75940 = -1092						; size = 4
$T75941 = -1080						; size = 4
$T75944 = -1068						; size = 4
$T75945 = -1056						; size = 4
$T75948 = -1044						; size = 4
$T75949 = -1032						; size = 4
$T75952 = -1020						; size = 4
$T75953 = -1008						; size = 4
$T75956 = -996						; size = 4
$T75957 = -984						; size = 4
$T75960 = -972						; size = 4
$T75961 = -960						; size = 4
$T75964 = -948						; size = 4
$T75965 = -936						; size = 4
$T75968 = -924						; size = 4
$T75969 = -912						; size = 4
$T75972 = -900						; size = 4
$T75973 = -888						; size = 4
$T75976 = -876						; size = 4
$T75977 = -864						; size = 4
$T75980 = -852						; size = 4
$T75981 = -840						; size = 4
$T75984 = -828						; size = 4
$T75985 = -816						; size = 4
$T75989 = -804						; size = 4
$T69119 = -792						; size = 64
$T69124 = -720						; size = 64
$T69129 = -648						; size = 64
$T69134 = -576						; size = 64
$T69139 = -504						; size = 64
$T69144 = -432						; size = 64
$T69149 = -360						; size = 64
$T69154 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatStaticSets::DecimalFormatStaticSets, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1096				; 00000448H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1108]
	mov	ecx, 274				; 00000112H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T75989[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 110
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75941[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T75941[ebp], 0
	je	$LN5@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gDotEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69119[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv471[ebp], eax
	mov	ecx, DWORD PTR tv471[ebp]
	mov	DWORD PTR tv405[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 1
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv405[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75941[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75941[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75941[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75941[ebp]
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@DecimalFor
$LN5@DecimalFor:
	mov	DWORD PTR tv81[ebp], 0
$LN6@DecimalFor:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T75940[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75940[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 1
	je	SHORT $LN32@DecimalFor
	and	DWORD PTR $T75989[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69119[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@DecimalFor:
; Line 111
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75945[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T75945[ebp], 0
	je	$LN7@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gCommaEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69124[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv478[ebp], eax
	mov	ecx, DWORD PTR tv478[ebp]
	mov	DWORD PTR tv413[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 2
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv413[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75945[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75945[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75945[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75945[ebp]
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN8@DecimalFor
$LN7@DecimalFor:
	mov	DWORD PTR tv130[ebp], 0
$LN8@DecimalFor:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR $T75944[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75944[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 2
	je	SHORT $LN36@DecimalFor
	and	DWORD PTR $T75989[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69124[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@DecimalFor:
; Line 112
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75949[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T75949[ebp], 0
	je	$LN9@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gOtherGroupingSeparatorsPattern
	push	1
	lea	ecx, DWORD PTR $T69129[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv485[ebp], eax
	mov	ecx, DWORD PTR tv485[ebp]
	mov	DWORD PTR tv421[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 4
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv421[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75949[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75949[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75949[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75949[ebp]
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN10@DecimalFor
$LN9@DecimalFor:
	mov	DWORD PTR tv147[ebp], 0
$LN10@DecimalFor:
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR $T75948[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75948[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 4
	je	SHORT $LN40@DecimalFor
	and	DWORD PTR $T75989[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69129[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@DecimalFor:
; Line 113
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75953[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T75953[ebp], 0
	je	$LN11@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gDashEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69134[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv492[ebp], eax
	mov	ecx, DWORD PTR tv492[ebp]
	mov	DWORD PTR tv429[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 8
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv429[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75953[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75953[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75953[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75953[ebp]
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN12@DecimalFor
$LN11@DecimalFor:
	mov	DWORD PTR tv164[ebp], 0
$LN12@DecimalFor:
	mov	ecx, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T75952[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75952[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 8
	je	SHORT $LN44@DecimalFor
	and	DWORD PTR $T75989[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T69134[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN44@DecimalFor:
; Line 115
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75957[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T75957[ebp], 0
	je	$LN13@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gStrictDotEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69139[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv499[ebp], eax
	mov	ecx, DWORD PTR tv499[ebp]
	mov	DWORD PTR tv437[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 16					; 00000010H
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv437[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75957[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75957[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75957[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75957[ebp]
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN14@DecimalFor
$LN13@DecimalFor:
	mov	DWORD PTR tv181[ebp], 0
$LN14@DecimalFor:
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR $T75956[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75956[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 16					; 00000010H
	je	SHORT $LN48@DecimalFor
	and	DWORD PTR $T75989[ebp], -17		; ffffffefH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69139[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@DecimalFor:
; Line 116
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75961[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T75961[ebp], 0
	je	$LN15@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gStrictCommaEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69144[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv506[ebp], eax
	mov	ecx, DWORD PTR tv506[ebp]
	mov	DWORD PTR tv445[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 32					; 00000020H
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv445[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75961[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75961[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75961[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75961[ebp]
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN16@DecimalFor
$LN15@DecimalFor:
	mov	DWORD PTR tv198[ebp], 0
$LN16@DecimalFor:
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR $T75960[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75960[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 32					; 00000020H
	je	SHORT $LN52@DecimalFor
	and	DWORD PTR $T75989[ebp], -33		; ffffffdfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69144[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@DecimalFor:
; Line 117
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75965[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	cmp	DWORD PTR $T75965[ebp], 0
	je	$LN17@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gStrictOtherGroupingSeparatorsPattern
	push	1
	lea	ecx, DWORD PTR $T69149[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv513[ebp], eax
	mov	ecx, DWORD PTR tv513[ebp]
	mov	DWORD PTR tv453[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 64					; 00000040H
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv453[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75965[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75965[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75965[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75965[ebp]
	mov	DWORD PTR tv215[ebp], eax
	jmp	SHORT $LN18@DecimalFor
$LN17@DecimalFor:
	mov	DWORD PTR tv215[ebp], 0
$LN18@DecimalFor:
	mov	ecx, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T75964[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75964[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 64					; 00000040H
	je	SHORT $LN56@DecimalFor
	and	DWORD PTR $T75989[ebp], -65		; ffffffbfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69149[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN56@DecimalFor:
; Line 118
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75969[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H
	cmp	DWORD PTR $T75969[ebp], 0
	je	$LN19@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET _gStrictDashEquivalentsPattern
	push	1
	lea	ecx, DWORD PTR $T69154[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv520[ebp], eax
	mov	ecx, DWORD PTR tv520[ebp]
	mov	DWORD PTR tv461[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR $T75989[ebp]
	or	edx, 128				; 00000080H
	mov	DWORD PTR $T75989[ebp], edx
	mov	eax, DWORD PTR tv461[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75969[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T75969[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T75969[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T75969[ebp]
	mov	DWORD PTR tv232[ebp], eax
	jmp	SHORT $LN20@DecimalFor
$LN19@DecimalFor:
	mov	DWORD PTR tv232[ebp], 0
$LN20@DecimalFor:
	mov	ecx, DWORD PTR tv232[ebp]
	mov	DWORD PTR $T75968[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75968[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75989[ebp]
	and	ecx, 128				; 00000080H
	je	SHORT $LN60@DecimalFor
	and	DWORD PTR $T75989[ebp], -129		; ffffff7fH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69154[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN60@DecimalFor:
; Line 121
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75973[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 24		; 00000018H
	cmp	DWORD PTR $T75973[ebp], 0
	je	SHORT $LN21@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T75973[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T75973[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR $T75973[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	ecx, DWORD PTR $T75973[ebp]
	mov	DWORD PTR tv249[ebp], ecx
	jmp	SHORT $LN22@DecimalFor
$LN21@DecimalFor:
	mov	DWORD PTR tv249[ebp], 0
$LN22@DecimalFor:
	mov	edx, DWORD PTR tv249[ebp]
	mov	DWORD PTR $T75972[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T75972[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 122
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 123
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 125
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75977[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 25		; 00000019H
	cmp	DWORD PTR $T75977[ebp], 0
	je	SHORT $LN23@DecimalFor
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR $T75977[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T75977[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR $T75977[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	ecx, DWORD PTR $T75977[ebp]
	mov	DWORD PTR tv276[ebp], ecx
	jmp	SHORT $LN24@DecimalFor
$LN23@DecimalFor:
	mov	DWORD PTR tv276[ebp], 0
$LN24@DecimalFor:
	mov	edx, DWORD PTR tv276[ebp]
	mov	DWORD PTR $T75976[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T75976[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 126
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75981[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 26		; 0000001aH
	cmp	DWORD PTR $T75981[ebp], 0
	je	SHORT $LN25@DecimalFor
	mov	esi, esp
	mov	ecx, DWORD PTR $T75981[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T75981[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T75981[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T75981[ebp]
	mov	DWORD PTR tv304[ebp], edx
	jmp	SHORT $LN26@DecimalFor
$LN25@DecimalFor:
	mov	DWORD PTR tv304[ebp], 0
$LN26@DecimalFor:
	mov	eax, DWORD PTR tv304[ebp]
	mov	DWORD PTR $T75980[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T75980[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 130
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T75985[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 27		; 0000001bH
	cmp	DWORD PTR $T75985[ebp], 0
	je	SHORT $LN27@DecimalFor
	mov	esi, esp
	mov	ecx, DWORD PTR $T75985[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T75985[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T75985[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T75985[ebp]
	mov	DWORD PTR tv312[ebp], edx
	jmp	SHORT $LN28@DecimalFor
$LN27@DecimalFor:
	mov	DWORD PTR tv312[ebp], 0
$LN28@DecimalFor:
	mov	eax, DWORD PTR tv312[ebp]
	mov	DWORD PTR $T75984[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T75984[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@DecimalFor
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN2@DecimalFor
$LN1@DecimalFor:
; Line 137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ ; icu_56::DecimalFormatStaticSets::cleanup
; Line 138
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 139
	jmp	$LN3@DecimalFor
$LN2@DecimalFor:
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	push	7
	push	OFFSET _gMinusSigns
	call	?initUnicodeSet@icu_56@@YAXPBHHPAVUnicodeSet@1@@Z ; icu_56::initUnicodeSet
	add	esp, 12					; 0000000cH
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	push	7
	push	OFFSET _gPlusSigns
	call	?initUnicodeSet@icu_56@@YAXPBHHPAVUnicodeSet@1@@Z ; icu_56::initUnicodeSet
	add	esp, 12					; 0000000cH
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 153
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 154
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 155
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 158
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 159
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 160
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 163
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	call	DWORD PTR __imp_?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DecimalFor:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1108				; 00000454H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T75941[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 1
	je	$LN31@DecimalFor
	and	DWORD PTR $T75989[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69119[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN31@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T75945[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$3:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 2
	je	$LN35@DecimalFor
	and	DWORD PTR $T75989[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69124[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN35@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T75949[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$5:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 4
	je	$LN39@DecimalFor
	and	DWORD PTR $T75989[ebp], -5		; fffffffbH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69129[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN39@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T75953[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$7:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 8
	je	$LN43@DecimalFor
	and	DWORD PTR $T75989[ebp], -9		; fffffff7H
	mov	esi, esp
	lea	ecx, DWORD PTR $T69134[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN43@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T75957[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$9:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 16					; 00000010H
	je	$LN47@DecimalFor
	and	DWORD PTR $T75989[ebp], -17		; ffffffefH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69139[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN47@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T75961[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$11:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 32					; 00000020H
	je	$LN51@DecimalFor
	and	DWORD PTR $T75989[ebp], -33		; ffffffdfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69144[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN51@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$12:
	mov	esi, esp
	mov	eax, DWORD PTR $T75965[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$13:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 64					; 00000040H
	je	$LN55@DecimalFor
	and	DWORD PTR $T75989[ebp], -65		; ffffffbfH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69149[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN55@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$14:
	mov	esi, esp
	mov	eax, DWORD PTR $T75969[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$15:
	mov	eax, DWORD PTR $T75989[ebp]
	and	eax, 128				; 00000080H
	je	$LN59@DecimalFor
	and	DWORD PTR $T75989[ebp], -129		; ffffff7fH
	mov	esi, esp
	lea	ecx, DWORD PTR $T69154[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN59@DecimalFor:
	ret	0
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$16:
	mov	esi, esp
	mov	eax, DWORD PTR $T75973[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$17:
	mov	esi, esp
	mov	eax, DWORD PTR $T75977[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$18:
	mov	esi, esp
	mov	eax, DWORD PTR $T75981[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z$19:
	mov	esi, esp
	mov	eax, DWORD PTR $T75985[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatStaticSets::DecimalFormatStaticSets
EXTRN	__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initUnicodeSet@icu_56@@YAXPBHHPAVUnicodeSet@1@@Z
_TEXT	SEGMENT
_i$69111 = -8						; size = 4
_raw$ = 8						; size = 4
_len$ = 12						; size = 4
_s$ = 16						; size = 4
?initUnicodeSet@icu_56@@YAXPBHHPAVUnicodeSet@1@@Z PROC	; icu_56::initUnicodeSet, COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 91
	mov	DWORD PTR _i$69111[ebp], 0
	jmp	SHORT $LN3@initUnicod
$LN2@initUnicod:
	mov	eax, DWORD PTR _i$69111[ebp]
	add	eax, 1
	mov	DWORD PTR _i$69111[ebp], eax
$LN3@initUnicod:
	mov	eax, DWORD PTR _i$69111[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	SHORT $LN4@initUnicod
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _i$69111[ebp]
	mov	ecx, DWORD PTR _raw$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	jmp	SHORT $LN2@initUnicod
$LN4@initUnicod:
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initUnicodeSet@icu_56@@YAXPBHHPAVUnicodeSet@1@@Z ENDP	; icu_56::initUnicodeSet
_TEXT	ENDS
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1DecimalFormatStaticSets@icu_56@@QAE@XZ	; icu_56::DecimalFormatStaticSets::~DecimalFormatStaticSets
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DecimalFormatStaticSets@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DecimalFormatStaticSets@icu_56@@QAE@XZ PROC		; icu_56::DecimalFormatStaticSets::~DecimalFormatStaticSets, COMDAT
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ ; icu_56::DecimalFormatStaticSets::cleanup
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DecimalFormatStaticSets@icu_56@@QAE@XZ ENDP		; icu_56::DecimalFormatStaticSets::~DecimalFormatStaticSets
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv261 = -520						; size = 4
tv248 = -520						; size = 4
tv235 = -520						; size = 4
tv222 = -520						; size = 4
tv209 = -520						; size = 4
tv196 = -520						; size = 4
tv183 = -520						; size = 4
tv170 = -520						; size = 4
tv157 = -520						; size = 4
tv144 = -520						; size = 4
tv131 = -520						; size = 4
tv86 = -520						; size = 4
tv74 = -520						; size = 4
$T76045 = -512						; size = 4
$T76046 = -500						; size = 4
$T76049 = -488						; size = 4
$T76050 = -476						; size = 4
$T76053 = -464						; size = 4
$T76054 = -452						; size = 4
$T76057 = -440						; size = 4
$T76058 = -428						; size = 4
$T76061 = -416						; size = 4
$T76062 = -404						; size = 4
$T76065 = -392						; size = 4
$T76066 = -380						; size = 4
$T76069 = -368						; size = 4
$T76070 = -356						; size = 4
$T76073 = -344						; size = 4
$T76074 = -332						; size = 4
$T76077 = -320						; size = 4
$T76078 = -308						; size = 4
$T76081 = -296						; size = 4
$T76082 = -284						; size = 4
$T76085 = -272						; size = 4
$T76086 = -260						; size = 4
$T76089 = -248						; size = 4
$T76090 = -236						; size = 4
$T76093 = -224						; size = 4
$T76094 = -212						; size = 4
_this$ = -8						; size = 4
?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ PROC	; icu_56::DecimalFormatStaticSets::cleanup, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76046[ebp], ecx
	mov	edx, DWORD PTR $T76046[ebp]
	mov	DWORD PTR $T76045[ebp], edx
	cmp	DWORD PTR $T76045[ebp], 0
	je	SHORT $LN3@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76045[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76045[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@cleanup
$LN3@cleanup:
	mov	DWORD PTR tv74[ebp], 0
$LN4@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T76050[ebp], ecx
	mov	edx, DWORD PTR $T76050[ebp]
	mov	DWORD PTR $T76049[ebp], edx
	cmp	DWORD PTR $T76049[ebp], 0
	je	SHORT $LN5@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76049[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76049[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN6@cleanup
$LN5@cleanup:
	mov	DWORD PTR tv86[ebp], 0
$LN6@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T76054[ebp], ecx
	mov	edx, DWORD PTR $T76054[ebp]
	mov	DWORD PTR $T76053[ebp], edx
	cmp	DWORD PTR $T76053[ebp], 0
	je	SHORT $LN7@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76053[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76053[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN8@cleanup
$LN7@cleanup:
	mov	DWORD PTR tv131[ebp], 0
$LN8@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T76058[ebp], ecx
	mov	edx, DWORD PTR $T76058[ebp]
	mov	DWORD PTR $T76057[ebp], edx
	cmp	DWORD PTR $T76057[ebp], 0
	je	SHORT $LN9@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76057[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76057[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN10@cleanup
$LN9@cleanup:
	mov	DWORD PTR tv144[ebp], 0
$LN10@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T76062[ebp], ecx
	mov	edx, DWORD PTR $T76062[ebp]
	mov	DWORD PTR $T76061[ebp], edx
	cmp	DWORD PTR $T76061[ebp], 0
	je	SHORT $LN11@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76061[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76061[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN12@cleanup
$LN11@cleanup:
	mov	DWORD PTR tv157[ebp], 0
$LN12@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T76066[ebp], ecx
	mov	edx, DWORD PTR $T76066[ebp]
	mov	DWORD PTR $T76065[ebp], edx
	cmp	DWORD PTR $T76065[ebp], 0
	je	SHORT $LN13@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76065[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76065[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN14@cleanup
$LN13@cleanup:
	mov	DWORD PTR tv170[ebp], 0
$LN14@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR $T76070[ebp], ecx
	mov	edx, DWORD PTR $T76070[ebp]
	mov	DWORD PTR $T76069[ebp], edx
	cmp	DWORD PTR $T76069[ebp], 0
	je	SHORT $LN15@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76069[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76069[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv183[ebp], eax
	jmp	SHORT $LN16@cleanup
$LN15@cleanup:
	mov	DWORD PTR tv183[ebp], 0
$LN16@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T76074[ebp], ecx
	mov	edx, DWORD PTR $T76074[ebp]
	mov	DWORD PTR $T76073[ebp], edx
	cmp	DWORD PTR $T76073[ebp], 0
	je	SHORT $LN17@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76073[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76073[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv196[ebp], eax
	jmp	SHORT $LN18@cleanup
$LN17@cleanup:
	mov	DWORD PTR tv196[ebp], 0
$LN18@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR $T76078[ebp], ecx
	mov	edx, DWORD PTR $T76078[ebp]
	mov	DWORD PTR $T76077[ebp], edx
	cmp	DWORD PTR $T76077[ebp], 0
	je	SHORT $LN19@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76077[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76077[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv209[ebp], eax
	jmp	SHORT $LN20@cleanup
$LN19@cleanup:
	mov	DWORD PTR tv209[ebp], 0
$LN20@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR $T76082[ebp], ecx
	mov	edx, DWORD PTR $T76082[ebp]
	mov	DWORD PTR $T76081[ebp], edx
	cmp	DWORD PTR $T76081[ebp], 0
	je	SHORT $LN21@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76081[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76081[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv222[ebp], eax
	jmp	SHORT $LN22@cleanup
$LN21@cleanup:
	mov	DWORD PTR tv222[ebp], 0
$LN22@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR $T76086[ebp], ecx
	mov	edx, DWORD PTR $T76086[ebp]
	mov	DWORD PTR $T76085[ebp], edx
	cmp	DWORD PTR $T76085[ebp], 0
	je	SHORT $LN23@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76085[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76085[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv235[ebp], eax
	jmp	SHORT $LN24@cleanup
$LN23@cleanup:
	mov	DWORD PTR tv235[ebp], 0
$LN24@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T76090[ebp], ecx
	mov	edx, DWORD PTR $T76090[ebp]
	mov	DWORD PTR $T76089[ebp], edx
	cmp	DWORD PTR $T76089[ebp], 0
	je	SHORT $LN25@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76089[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76089[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv248[ebp], eax
	jmp	SHORT $LN26@cleanup
$LN25@cleanup:
	mov	DWORD PTR tv248[ebp], 0
$LN26@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T76094[ebp], ecx
	mov	edx, DWORD PTR $T76094[ebp]
	mov	DWORD PTR $T76093[ebp], edx
	cmp	DWORD PTR $T76093[ebp], 0
	je	SHORT $LN27@cleanup
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T76093[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T76093[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv261[ebp], eax
	jmp	SHORT $LN28@cleanup
$LN27@cleanup:
	mov	DWORD PTR tv261[ebp], 0
$LN28@cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cleanup@DecimalFormatStaticSets@icu_56@@AAEXXZ ENDP	; icu_56::DecimalFormatStaticSets::cleanup
_TEXT	ENDS
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
PUBLIC	?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatStaticSets::getStaticSets
_BSS	SEGMENT
_gStaticSets DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT ?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_status$ = 8						; size = 4
?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormatStaticSets::getStaticSets, COMDAT
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 222
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _initSets
	push	OFFSET _gStaticSetsInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 223
	mov	eax, DWORD PTR _gStaticSets
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormatStaticSets::getStaticSets
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC
EXTRN	__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_errCode$ = 16						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z PROC ; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 259
	jmp	$LN5@umtx_initO
$LN4@umtx_initO:
; Line 261
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	DWORD PTR _fp$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 265
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 268
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 269
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ENDP ; icu_56::umtx_initOnce
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z	; icu_56::DecimalFormatStaticSets::`scalar deleting destructor'
PUBLIC	??_C@_1CC@KMFLDPNO@?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@HABJECCC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??initSets@@9@4JA@c4dabcee	; `initSets'::`2'::__LINE__Var
EXTRN	_ucln_i18n_registerCleanup_56:PROC
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1CC@KMFLDPNO@?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\decfmtst.cpp
CONST	SEGMENT
??_C@_1CC@KMFLDPNO@?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 's', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@HABJECCC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@HABJECCC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 'f', 00H, 'm', 00H, 't', 00H, 's', 00H, 't'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??initSets@@9@4JA@c4dabcee
_DATA	SEGMENT
?__LINE__Var@?1??initSets@@9@4JA@c4dabcee DD 0ceH	; `initSets'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _initSets
_TEXT	SEGMENT
tv88 = -244						; size = 4
tv80 = -244						; size = 4
$T76108 = -236						; size = 4
$T76109 = -224						; size = 4
$T76112 = -212						; size = 4
$T76113 = -200						; size = 4
_status$ = 8						; size = 4
_initSets PROC						; COMDAT
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 207
	cmp	DWORD PTR _gStaticSets, 0
	je	SHORT $LN5@initSets
	mov	eax, DWORD PTR ?__LINE__Var@?1??initSets@@9@4JA@c4dabcee
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@HABJECCC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@KMFLDPNO@?$AAg?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@initSets:
; Line 208
	push	OFFSET _decimfmt_cleanup
	push	17					; 00000011H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 209
	mov	esi, esp
	push	48					; 00000030H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T76109[ebp], eax
	cmp	DWORD PTR $T76109[ebp], 0
	je	SHORT $LN6@initSets
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T76109[ebp]
	call	??0DecimalFormatStaticSets@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatStaticSets::DecimalFormatStaticSets
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN7@initSets
$LN6@initSets:
	mov	DWORD PTR tv80[ebp], 0
$LN7@initSets:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T76108[ebp], ecx
	mov	edx, DWORD PTR $T76108[ebp]
	mov	DWORD PTR _gStaticSets, edx
; Line 210
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initSets
; Line 211
	mov	eax, DWORD PTR _gStaticSets
	mov	DWORD PTR $T76113[ebp], eax
	mov	ecx, DWORD PTR $T76113[ebp]
	mov	DWORD PTR $T76112[ebp], ecx
	cmp	DWORD PTR $T76112[ebp], 0
	je	SHORT $LN8@initSets
	push	1
	mov	ecx, DWORD PTR $T76112[ebp]
	call	??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN9@initSets
$LN8@initSets:
	mov	DWORD PTR tv88[ebp], 0
$LN9@initSets:
; Line 212
	mov	DWORD PTR _gStaticSets, 0
; Line 213
	jmp	SHORT $LN3@initSets
$LN2@initSets:
; Line 215
	cmp	DWORD PTR _gStaticSets, 0
	jne	SHORT $LN3@initSets
; Line 216
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@initSets:
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_initSets ENDP
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _decimfmt_cleanup
_TEXT	SEGMENT
tv68 = -220						; size = 4
$T76118 = -212						; size = 4
$T76119 = -200						; size = 4
_decimfmt_cleanup PROC					; COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 200
	mov	eax, DWORD PTR _gStaticSets
	mov	DWORD PTR $T76119[ebp], eax
	mov	ecx, DWORD PTR $T76119[ebp]
	mov	DWORD PTR $T76118[ebp], ecx
	cmp	DWORD PTR $T76118[ebp], 0
	je	SHORT $LN3@decimfmt_c
	push	1
	mov	ecx, DWORD PTR $T76118[ebp]
	call	??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@decimfmt_c
$LN3@decimfmt_c:
	mov	DWORD PTR tv68[ebp], 0
$LN4@decimfmt_c:
; Line 201
	mov	DWORD PTR _gStaticSets, 0
; Line 202
	mov	ecx, OFFSET _gStaticSetsInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 203
	mov	al, 1
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_decimfmt_cleanup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z PROC	; icu_56::DecimalFormatStaticSets::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DecimalFormatStaticSets@icu_56@@QAE@XZ ; icu_56::DecimalFormatStaticSets::~DecimalFormatStaticSets
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDecimalFormatStaticSets@icu_56@@QAEPAXI@Z ENDP	; icu_56::DecimalFormatStaticSets::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z ; icu_56::DecimalFormatStaticSets::getSimilarDecimals
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z
_TEXT	SEGMENT
tv139 = -208						; size = 4
tv87 = -208						; size = 4
_status$ = -8						; size = 4
_decimal$ = 8						; size = 4
_strictParse$ = 12					; size = 1
?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z PROC ; icu_56::DecimalFormatStaticSets::getSimilarDecimals, COMDAT
; File d:\mozilla\intl\icu\source\i18n\decfmtst.cpp
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 229
	mov	DWORD PTR _status$[ebp], 0
; Line 230
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _initSets
	push	OFFSET _gStaticSetsInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@getSimilar
; Line 232
	xor	eax, eax
	jmp	$LN4@getSimilar
$LN3@getSimilar:
; Line 235
	mov	esi, esp
	mov	eax, DWORD PTR _decimal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gStaticSets
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _gStaticSets
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@getSimilar
; Line 236
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN6@getSimilar
	mov	ecx, DWORD PTR _gStaticSets
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv87[ebp], edx
	jmp	SHORT $LN7@getSimilar
$LN6@getSimilar:
	mov	eax, DWORD PTR _gStaticSets
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
$LN7@getSimilar:
	mov	eax, DWORD PTR tv87[ebp]
	jmp	SHORT $LN4@getSimilar
$LN2@getSimilar:
; Line 239
	mov	esi, esp
	mov	eax, DWORD PTR _decimal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gStaticSets
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _gStaticSets
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@getSimilar
; Line 240
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN8@getSimilar
	mov	ecx, DWORD PTR _gStaticSets
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv139[ebp], edx
	jmp	SHORT $LN9@getSimilar
$LN8@getSimilar:
	mov	eax, DWORD PTR _gStaticSets
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv139[ebp], ecx
$LN9@getSimilar:
	mov	eax, DWORD PTR tv139[ebp]
	jmp	SHORT $LN4@getSimilar
$LN1@getSimilar:
; Line 244
	xor	eax, eax
$LN4@getSimilar:
; Line 245
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getSimilar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@getSimilar:
	DD	1
	DD	$LN11@getSimilar
$LN11@getSimilar:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN10@getSimilar
$LN10@getSimilar:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z ENDP ; icu_56::DecimalFormatStaticSets::getSimilarDecimals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\ucurr.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03IHONHNBB@ZWD?$AA@			; `string'
PUBLIC	??_C@_03JLHFMIMG@ZWR?$AA@			; `string'
PUBLIC	??_C@_03EPDEPHBJ@ZWL?$AA@			; `string'
PUBLIC	??_C@_03FFGHIACF@ZRZ?$AA@			; `string'
PUBLIC	??_C@_03HLMJFHHA@ZRN?$AA@			; `string'
PUBLIC	??_C@_03PHLDBKCF@ZMW?$AA@			; `string'
PUBLIC	??_C@_03BBMEEHHI@ZMK?$AA@			; `string'
PUBLIC	??_C@_03IDNOBHAE@ZAR?$AA@			; `string'
PUBLIC	??_C@_03FHJPCINL@ZAL?$AA@			; `string'
PUBLIC	??_C@_03IKEELDEG@YUR?$AA@			; `string'
PUBLIC	??_C@_03GMDDOOBL@YUN?$AA@			; `string'
PUBLIC	??_C@_03EHBOLNNI@YUM?$AA@			; `string'
PUBLIC	??_C@_03JGNMAGJB@YUD?$AA@			; `string'
PUBLIC	??_C@_03JGGCBADG@YER?$AA@			; `string'
PUBLIC	??_C@_03ILDIMPNG@YDD?$AA@			; `string'
PUBLIC	??_C@_03MAMPKPPK@XXX?$AA@			; `string'
PUBLIC	??_C@_03FDBHJFLB@XUA?$AA@			; `string'
PUBLIC	??_C@_03CKCBIPFF@XTS?$AA@			; `string'
PUBLIC	??_C@_03HJDEDOFG@XSU?$AA@			; `string'
PUBLIC	??_C@_03DCDEEGDA@XRE?$AA@			; `string'
PUBLIC	??_C@_03GCGJLBEO@XPT?$AA@			; `string'
PUBLIC	??_C@_03BKJNMBJN@XPF?$AA@			; `string'
PUBLIC	??_C@_03CIKLKDBP@XPD?$AA@			; `string'
PUBLIC	??_C@_03NOHCFNA@XOF?$AA@			; `string'
PUBLIC	??_C@_03GDNJFPMN@XFU?$AA@			; `string'
PUBLIC	??_C@_03NDPEKFBG@XFO?$AA@			; `string'
PUBLIC	??_C@_03GBJPOBJE@XEU?$AA@			; `string'
PUBLIC	??_C@_03CPBMBNGE@XDR?$AA@			; `string'
PUBLIC	??_C@_03DGMLLODG@XCD?$AA@			; `string'
PUBLIC	??_C@_03DHAJNEAB@XBD?$AA@			; `string'
PUBLIC	??_C@_03HIEIECMG@XBC?$AA@			; `string'
PUBLIC	??_C@_03GBFDHDIH@XBB?$AA@			; `string'
PUBLIC	??_C@_03EKHOCAEE@XBA?$AA@			; `string'
PUBLIC	??_C@_03GGJGEJEI@XAU?$AA@			; `string'
PUBLIC	??_C@_03BOGCDJJL@XAG?$AA@			; `string'
PUBLIC	??_C@_03HHJAINK@XAF?$AA@			; `string'
PUBLIC	??_C@_03DIEMBPEB@WST?$AA@			; `string'
PUBLIC	??_C@_03LGELGGBE@VUV?$AA@			; `string'
PUBLIC	??_C@_03CECDLCNM@VNN?$AA@			; `string'
PUBLIC	??_C@_03NOMMFKFG@VND?$AA@			; `string'
PUBLIC	??_C@_03OAKPNHDF@VEF?$AA@			; `string'
PUBLIC	??_C@_03IEMDBCDB@VEB?$AA@			; `string'
PUBLIC	??_C@_03NCNFHKIC@UZS?$AA@			; `string'
PUBLIC	??_C@_03IGMJGDFN@UYU?$AA@			; `string'
PUBLIC	??_C@_03PLLOJHBI@UYP?$AA@			; `string'
PUBLIC	??_C@_03GALODOAA@UYI?$AA@			; `string'
PUBLIC	??_C@_03NNAEEBAN@USS?$AA@			; `string'
PUBLIC	??_C@_03CCGICNBB@USN?$AA@			; `string'
PUBLIC	??_C@_03NIIHMFJL@USD?$AA@			; `string'
PUBLIC	??_C@_03CFNPJDGK@UGX?$AA@			; `string'
PUBLIC	??_C@_03MGCLEKKB@UGS?$AA@			; `string'
PUBLIC	??_C@_03EALNKOEK@UAK?$AA@			; `string'
PUBLIC	??_C@_03GLJAPNIJ@UAH?$AA@			; `string'
PUBLIC	??_C@_03GKGJBNOH@TZS?$AA@			; `string'
PUBLIC	??_C@_03GHDCAKCC@TWD?$AA@			; `string'
PUBLIC	??_C@_03GFHELEHL@TTD?$AA@			; `string'
PUBLIC	??_C@_03JOJFKENF@TRY?$AA@			; `string'
PUBLIC	??_C@_03KJCAECMB@TRL?$AA@			; `string'
PUBLIC	??_C@_03HLGGCNOG@TPE?$AA@			; `string'
PUBLIC	??_C@_03FLKJCPLP@TOP?$AA@			; `string'
PUBLIC	??_C@_03HEMFJCNN@TND?$AA@			; `string'
PUBLIC	??_C@_03DMEBDONF@TMT?$AA@			; `string'
PUBLIC	??_C@_03KHEBJHMN@TMM?$AA@			; `string'
PUBLIC	??_C@_03HGEPLOJH@TJS?$AA@			; `string'
PUBLIC	??_C@_03GPFEIPNG@TJR?$AA@			; `string'
PUBLIC	??_C@_03CGBCEJOJ@THB?$AA@			; `string'
PUBLIC	??_C@_03DKOECLMA@SZL?$AA@			; `string'
PUBLIC	??_C@_03NONFMIME@SYP?$AA@			; `string'
PUBLIC	??_C@_03LEGGMOGL@SVC?$AA@			; `string'
PUBLIC	??_C@_03OFPJFDCC@SUR?$AA@			; `string'
PUBLIC	??_C@_03PIKDIMMC@STD?$AA@			; `string'
PUBLIC	??_C@_03NDECENBC@SSP?$AA@			; `string'
PUBLIC	??_C@_03NHADKDLD@SRG?$AA@			; `string'
PUBLIC	??_C@_03PMCOPAHA@SRD?$AA@			; `string'
PUBLIC	??_C@_03ONFDEEMF@SOS?$AA@			; `string'
PUBLIC	??_C@_03CCEPPEAC@SLL?$AA@			; `string'
PUBLIC	??_C@_03GIEBHEEA@SKK?$AA@			; `string'
PUBLIC	??_C@_03KGJPKOLA@SIT?$AA@			; `string'
PUBLIC	??_C@_03MDDBABID@SHP?$AA@			; `string'
PUBLIC	??_C@_03OGMDJBOL@SGD?$AA@			; `string'
PUBLIC	??_C@_03GCNPFJEK@SEK?$AA@			; `string'
PUBLIC	??_C@_03MKCLPIOH@SDP?$AA@			; `string'
PUBLIC	??_C@_03MPKIHMHB@SDG?$AA@			; `string'
PUBLIC	??_C@_03OEIFCPLC@SDD?$AA@			; `string'
PUBLIC	??_C@_03PNFCIMOA@SCR?$AA@			; `string'
PUBLIC	??_C@_03OAAIFDAA@SBD?$AA@			; `string'
PUBLIC	??_C@_03PONGFIIO@SAR?$AA@			; `string'
PUBLIC	??_C@_03HAGPDHHM@RWF?$AA@			; `string'
PUBLIC	??_C@_03FNEFDEEH@RUR?$AA@			; `string'
PUBLIC	??_C@_03BHIHCGBG@RUB?$AA@			; `string'
PUBLIC	??_C@_03EFFAPNCC@RSD?$AA@			; `string'
PUBLIC	??_C@_03KKIDEPLM@RON?$AA@			; `string'
PUBLIC	??_C@_03JILFCNDO@ROL?$AA@			; `string'
PUBLIC	??_C@_03FFCDLBLD@RHD?$AA@			; `string'
PUBLIC	??_C@_03FENPJAAF@QAR?$AA@			; `string'
PUBLIC	??_C@_03MJODODLM@PYG?$AA@			; `string'
PUBLIC	??_C@_03PDANBCGN@PTE?$AA@			; `string'
PUBLIC	??_C@_03CMGCOODL@PLZ?$AA@			; `string'
PUBLIC	??_C@_03CMMDJGO@PLN?$AA@			; `string'
PUBLIC	??_C@_03OBPEHCLG@PKR?$AA@			; `string'
PUBLIC	??_C@_03NBIEKOGN@PHP?$AA@			; `string'
PUBLIC	??_C@_03HDOOCCMK@PGK?$AA@			; `string'
PUBLIC	??_C@_03PCHBGOPN@PES?$AA@			; `string'
PUBLIC	??_C@_03NBNACOB@PEN?$AA@			; `string'
PUBLIC	??_C@_03ECFMJECG@PEI?$AA@			; `string'
PUBLIC	??_C@_03KGKBOFDB@PAB?$AA@			; `string'
PUBLIC	??_C@_03ONADEJMN@OMR?$AA@			; `string'
PUBLIC	??_C@_03FAEOCOIK@NZD?$AA@			; `string'
PUBLIC	??_C@_03EBEBBOIL@NPR?$AA@			; `string'
PUBLIC	??_C@_03MNDLFDNO@NOK?$AA@			; `string'
PUBLIC	??_C@_03GDMIKCIL@NLG?$AA@			; `string'
PUBLIC	??_C@_03KNNKOKGI@NIO?$AA@			; `string'
PUBLIC	??_C@_03BGPKFGE@NIC?$AA@			; `string'
PUBLIC	??_C@_03LOFPPGCD@NGN?$AA@			; `string'
PUBLIC	??_C@_03EADNGCBL@NAD?$AA@			; `string'
PUBLIC	??_C@_03LIBEGJOO@MZN?$AA@			; `string'
PUBLIC	??_C@_03JDDJDKCN@MZM?$AA@			; `string'
PUBLIC	??_C@_03FLOALACF@MZE?$AA@			; `string'
PUBLIC	??_C@_03FMCFIKOK@MYR?$AA@			; `string'
PUBLIC	??_C@_03DJILCFNJ@MXV?$AA@			; `string'
PUBLIC	??_C@_03GPNBICFP@MXP?$AA@			; `string'
PUBLIC	??_C@_03LLJALNIA@MXN?$AA@			; `string'
PUBLIC	??_C@_03MNLLAOPI@MWK?$AA@			; `string'
PUBLIC	??_C@_03FHHJMNNH@MVR?$AA@			; `string'
PUBLIC	??_C@_03GFEPKPFF@MVP?$AA@			; `string'
PUBLIC	??_C@_03FFDPHDIO@MUR?$AA@			; `string'
PUBLIC	??_C@_03GGMLHLDL@MTP?$AA@			; `string'
PUBLIC	??_C@_03IALMCGGG@MTL?$AA@			; `string'
PUBLIC	??_C@_03KPBMAJBH@MRO?$AA@			; `string'
PUBLIC	??_C@_03HGLIDHKK@MOP?$AA@			; `string'
PUBLIC	??_C@_03BDBGJIJJ@MNT?$AA@			; `string'
PUBLIC	??_C@_03NMAKCIFO@MMK?$AA@			; `string'
PUBLIC	??_C@_03GIGGDMCE@MLF?$AA@			; `string'
PUBLIC	??_C@_03KFPAKAKJ@MKN?$AA@			; `string'
PUBLIC	??_C@_03FPBPEICD@MKD?$AA@			; `string'
PUBLIC	??_C@_03GEDDNDMF@MGF?$AA@			; `string'
PUBLIC	??_C@_03CLHCEFAC@MGA?$AA@			; `string'
PUBLIC	??_C@_03JMJKIFBG@MDL?$AA@			; `string'
PUBLIC	??_C@_03BLACJJNJ@MDC?$AA@			; `string'
PUBLIC	??_C@_03GDDKHLBJ@MCF?$AA@			; `string'
PUBLIC	??_C@_03GALOKPHH@MAF?$AA@			; `string'
PUBLIC	??_C@_03FCIIMNPF@MAD?$AA@			; `string'
PUBLIC	??_C@_03PIABFIFI@LYD?$AA@			; `string'
PUBLIC	??_C@_03OPMFKKLC@LVR?$AA@			; `string'
PUBLIC	??_C@_03DLIEJFGN@LVL?$AA@			; `string'
PUBLIC	??_C@_03DJMCCLDE@LUL?$AA@			; `string'
PUBLIC	??_C@_03MDCNMDLO@LUF?$AA@			; `string'
PUBLIC	??_C@_03LOFKDHPL@LUC?$AA@			; `string'
PUBLIC	??_C@_03LKBLNJFK@LTT?$AA@			; `string'
PUBLIC	??_C@_03DIAAEBAD@LTL?$AA@			; `string'
PUBLIC	??_C@_03CEFEGGMH@LSM?$AA@			; `string'
PUBLIC	??_C@_03DNEPFHIG@LSL?$AA@			; `string'
PUBLIC	??_C@_03PEFELHLJ@LRD?$AA@			; `string'
PUBLIC	??_C@_03PLDLJKJB@LKR?$AA@			; `string'
PUBLIC	??_C@_03MGNMMDJM@LBP?$AA@			; `string'
PUBLIC	??_C@_03GNKMLGFP@LAK?$AA@			; `string'
PUBLIC	??_C@_03CNFCMMOJ@KZT?$AA@			; `string'
PUBLIC	??_C@_03GFNGGAOB@KYD?$AA@			; `string'
PUBLIC	??_C@_03GPEIENOL@KWD?$AA@			; `string'
PUBLIC	??_C@_03IGMMOJC@KRW?$AA@			; `string'
PUBLIC	??_C@_03IKHHFGML@KRO?$AA@			; `string'
PUBLIC	??_C@_03MFDGMAAM@KRH?$AA@			; `string'
PUBLIC	??_C@_03LOIBKPM@KPW?$AA@			; `string'
PUBLIC	??_C@_03EMMPAJMP@KMF?$AA@			; `string'
PUBLIC	??_C@_03GEKKBMHB@KHR?$AA@			; `string'
PUBLIC	??_C@_03HGONGKAN@KGS?$AA@			; `string'
PUBLIC	??_C@_03HFGJLOGD@KES?$AA@			; `string'
PUBLIC	??_C@_03CNNHFABH@JPY?$AA@			; `string'
PUBLIC	??_C@_03MFMBNIEG@JOD?$AA@			; `string'
PUBLIC	??_C@_03MGEFAMCI@JMD?$AA@			; `string'
PUBLIC	??_C@_03PNOLBDB@ITL?$AA@			; `string'
PUBLIC	??_C@_03EFNADBHD@ISK?$AA@			; `string'
PUBLIC	??_C@_03FMMLAADC@ISJ?$AA@			; `string'
PUBLIC	??_C@_03NPBCPCFM@IRR?$AA@			; `string'
PUBLIC	??_C@_03MBMMPJNC@IQD?$AA@			; `string'
PUBLIC	??_C@_03MKCOKIEI@INR?$AA@			; `string'
PUBLIC	??_C@_03NALBENGH@ILS?$AA@			; `string'
PUBLIC	??_C@_03MJKKHMCG@ILR?$AA@			; `string'
PUBLIC	??_C@_03PLJMBOKE@ILP?$AA@			; `string'
PUBLIC	??_C@_03PEENCFCL@IEP?$AA@			; `string'
PUBLIC	??_C@_03MHLJCNJO@IDR?$AA@			; `string'
PUBLIC	??_C@_03EMEPFEOJ@HUF?$AA@			; `string'
PUBLIC	??_C@_03FEJGAPJP@HTG?$AA@			; `string'
PUBLIC	??_C@_03PMKODMCB@HRK?$AA@			; `string'
PUBLIC	??_C@_03HLDGCAOO@HRD?$AA@			; `string'
PUBLIC	??_C@_03KGNDPAPC@HNL?$AA@			; `string'
PUBLIC	??_C@_03GIMBLIBB@HKD?$AA@			; `string'
PUBLIC	??_C@_03CPAANPFJ@GYD?$AA@			; `string'
PUBLIC	??_C@_03LDACFAG@GWP?$AA@			; `string'
PUBLIC	??_C@_03DMIFMDBC@GWE?$AA@			; `string'
PUBLIC	??_C@_03BAGNKKBO@GTQ?$AA@			; `string'
PUBLIC	??_C@_03CDFFDALI@GRD?$AA@			; `string'
PUBLIC	??_C@_03DIAILPKA@GQE?$AA@			; `string'
PUBLIC	??_C@_03DDOKOODK@GNS?$AA@			; `string'
PUBLIC	??_C@_03EFPAICO@GNF?$AA@			; `string'
PUBLIC	??_C@_03DECPNEPF@GMD?$AA@			; `string'
PUBLIC	??_C@_03BNIIKLHM@GIP?$AA@			; `string'
PUBLIC	??_C@_03DHGHJCII@GHS?$AA@			; `string'
PUBLIC	??_C@_03HNKFIANJ@GHC?$AA@			; `string'
PUBLIC	??_C@_03PCOFAPEF@GEL?$AA@			; `string'
PUBLIC	??_C@_03LNKEJJIC@GEK?$AA@			; `string'
PUBLIC	??_C@_03BBNNEEJN@GBP?$AA@			; `string'
PUBLIC	??_C@_03KJNPDFFP@FRF?$AA@			; `string'
PUBLIC	??_C@_03KGLABIHH@FKP?$AA@			; `string'
PUBLIC	??_C@_03IJNMKFBF@FJD?$AA@			; `string'
PUBLIC	??_C@_03FKFIKAAF@FIM?$AA@			; `string'
PUBLIC	??_C@_03JAILFLGB@EUR?$AA@			; `string'
PUBLIC	??_C@_03NLILCDAH@ETB?$AA@			; `string'
PUBLIC	??_C@_03KGDAEFFB@ESP?$AA@			; `string'
PUBLIC	??_C@_03NOMEDFIC@ESB?$AA@			; `string'
PUBLIC	??_C@_03PFOJGGEB@ESA?$AA@			; `string'
PUBLIC	??_C@_03HDLDBALJ@ERN?$AA@			; `string'
PUBLIC	??_C@_03JCABHHCL@EQE?$AA@			; `string'
PUBLIC	??_C@_03LNBPEOPN@EGP?$AA@			; `string'
PUBLIC	??_C@_03BHKNFBAJ@EEK?$AA@			; `string'
PUBLIC	??_C@_03OMEMEBKH@ECV?$AA@			; `string'
PUBLIC	??_C@_03JBDLLFOC@ECS?$AA@			; `string'
PUBLIC	??_C@_03DPPDMOOO@DZD?$AA@			; `string'
PUBLIC	??_C@_03LLAHICA@DOP?$AA@			; `string'
PUBLIC	??_C@_03KFIPBLGG@DKK?$AA@			; `string'
PUBLIC	??_C@_03BBODAPBM@DJF?$AA@			; `string'
PUBLIC	??_C@_03PJELJBOK@DEM?$AA@			; `string'
PUBLIC	??_C@_03PIIJPLNN@DDM?$AA@			; `string'
PUBLIC	??_C@_03CFLMOKJI@CZK?$AA@			; `string'
PUBLIC	??_C@_03IOMMJPFL@CYP?$AA@			; `string'
PUBLIC	??_C@_03LCCFDOHC@CVE?$AA@			; `string'
PUBLIC	??_C@_03IHNGGGDP@CUP?$AA@			; `string'
PUBLIC	??_C@_03OGDJCHKN@CUC?$AA@			; `string'
PUBLIC	??_C@_03CKGNNBBH@CSK?$AA@			; `string'
PUBLIC	??_C@_03KNPFMNNI@CSD?$AA@			; `string'
PUBLIC	??_C@_03ODHGDBCI@CRC?$AA@			; `string'
PUBLIC	??_C@_03OLBALENM@COU?$AA@			; `string'
PUBLIC	??_C@_03JGGHEAJJ@COP?$AA@			; `string'
PUBLIC	??_C@_03EGGHJBOH@CNY?$AA@			; `string'
PUBLIC	??_C@_03FPHMKAKG@CNX?$AA@			; `string'
PUBLIC	??_C@_03JECBPOMA@CLP?$AA@			; `string'
PUBLIC	??_C@_03IILJELBH@CLF?$AA@			; `string'
PUBLIC	??_C@_03KDJEBINE@CLE?$AA@			; `string'
PUBLIC	??_C@_03NMGJMANL@CHW?$AA@			; `string'
PUBLIC	??_C@_03IPLAODML@CHF?$AA@			; `string'
PUBLIC	??_C@_03KEJNLAAI@CHE?$AA@			; `string'
PUBLIC	??_C@_03IGKKBKKP@CDF?$AA@			; `string'
PUBLIC	??_C@_03LCFHLKMG@CAD?$AA@			; `string'
PUBLIC	??_C@_03BKJIJBDC@BZD?$AA@			; `string'
PUBLIC	??_C@_03EEGJKLM@BYR?$AA@			; `string'
PUBLIC	??_C@_03EOIEIION@BYB?$AA@			; `string'
PUBLIC	??_C@_03DMOONFDE@BWP?$AA@			; `string'
PUBLIC	??_C@_03JGFMMKMA@BUK?$AA@			; `string'
PUBLIC	??_C@_03OKOJFELC@BTN?$AA@			; `string'
PUBLIC	??_C@_03BFEJKKLN@BSD?$AA@			; `string'
PUBLIC	??_C@_03MAMKPPFF@BRZ?$AA@			; `string'
PUBLIC	??_C@_03IBDHFFN@BRR?$AA@			; `string'
PUBLIC	??_C@_03OOGECIAA@BRN?$AA@			; `string'
PUBLIC	??_C@_03NMFCEKIC@BRL?$AA@			; `string'
PUBLIC	??_C@_03NJAPBML@BRE?$AA@			; `string'
PUBLIC	??_C@_03FLMKFGEN@BRC?$AA@			; `string'
PUBLIC	??_C@_03ECNBGHAM@BRB?$AA@			; `string'
PUBLIC	??_C@_03HIIBIAHK@BOV?$AA@			; `string'
PUBLIC	??_C@_03CONLCHPM@BOP?$AA@			; `string'
PUBLIC	??_C@_03MIKMHKKB@BOL?$AA@			; `string'
PUBLIC	??_C@_03FGCPFHCP@BOB?$AA@			; `string'
PUBLIC	??_C@_03BLHJKJO@BND?$AA@			; `string'
PUBLIC	??_C@_03DPBCEMH@BMD?$AA@			; `string'
PUBLIC	??_C@_03DGMOOOJJ@BIF?$AA@			; `string'
PUBLIC	??_C@_03FDKOGCM@BHD?$AA@			; `string'
PUBLIC	??_C@_03ONJCHINK@BGO?$AA@			; `string'
PUBLIC	??_C@_03PEIJEJJL@BGN?$AA@			; `string'
PUBLIC	??_C@_03NPKEBKFI@BGM?$AA@			; `string'
PUBLIC	??_C@_03MGLPCLBJ@BGL?$AA@			; `string'
PUBLIC	??_C@_03MFDLPPHH@BEL?$AA@			; `string'
PUBLIC	??_C@_03DPNEBHPN@BEF?$AA@			; `string'
PUBLIC	??_C@_03ECKDODLI@BEC?$AA@			; `string'
PUBLIC	??_C@_03EGOCANBJ@BDT?$AA@			; `string'
PUBLIC	??_C@_03IKNGDPK@BBD?$AA@			; `string'
PUBLIC	??_C@_03PAAEDFCJ@BAN?$AA@			; `string'
PUBLIC	??_C@_03NLCJGGOK@BAM?$AA@			; `string'
PUBLIC	??_C@_03KOLNNKD@BAD?$AA@			; `string'
PUBLIC	??_C@_03PCMCNGFG@AZN?$AA@			; `string'
PUBLIC	??_C@_03NJOPIFJF@AZM?$AA@			; `string'
PUBLIC	??_C@_03CLNIPOEM@AWG?$AA@			; `string'
PUBLIC	??_C@_03DHBHJOB@AUD?$AA@			; `string'
PUBLIC	??_C@_03HDAJHEA@ATS?$AA@			; `string'
PUBLIC	??_C@_03DLNOLPC@ARS?$AA@			; `string'
PUBLIC	??_C@_03CIJALIDB@ARP?$AA@			; `string'
PUBLIC	??_C@_03NHPMNECN@ARM?$AA@			; `string'
PUBLIC	??_C@_03MOOHOFGM@ARL?$AA@			; `string'
PUBLIC	??_C@_03HLEJJLCB@ARA?$AA@			; `string'
PUBLIC	??_C@_03OFIOKJA@AOR?$AA@			; `string'
PUBLIC	??_C@_03OICPLHMN@AON?$AA@			; `string'
PUBLIC	??_C@_03JFFIEDII@AOK?$AA@			; `string'
PUBLIC	??_C@_03GPLHKLAC@AOA?$AA@			; `string'
PUBLIC	??_C@_03DICPGGLD@ANG?$AA@			; `string'
PUBLIC	??_C@_03BBEEILCJ@AMD?$AA@			; `string'
PUBLIC	??_C@_03NIFPGLBG@ALL?$AA@			; `string'
PUBLIC	??_C@_03JHBOPNNB@ALK?$AA@			; `string'
PUBLIC	??_C@_03OHPOIMEC@AFN?$AA@			; `string'
PUBLIC	??_C@_03GAGGJAIN@AFA?$AA@			; `string'
PUBLIC	??_C@_03BPFHNKJB@AED?$AA@			; `string'
PUBLIC	??_C@_03DADLGHPD@ADP?$AA@			; `string'
PUBLIC	??_C@_06EPMHOJH@?2u20a4?$AA@			; `string'
PUBLIC	??_C@_06DBHNLLDA@?2u00a3?$AA@			; `string'
PUBLIC	??_C@_06LDBELOID@?2u20b9?$AA@			; `string'
PUBLIC	??_C@_06KIEJDBJL@?2u20a8?$AA@			; `string'
PUBLIC	??_C@_06EKHHADGF@?2uff04?$AA@			; `string'
PUBLIC	??_C@_06OJOBKOHE@?2ufe69?$AA@			; `string'
PUBLIC	??_C@_01EPMOAMKG@$?$AA@				; `string'
PUBLIC	??_C@_06DJBLNOHP@?2uffe5?$AA@			; `string'
PUBLIC	??_C@_06GHCHBMLG@?2u00a5?$AA@			; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_LENGTH
PUBLIC	?MAX_VALUE@Part@MessagePattern@icu_56@@0HB	; icu_56::MessagePattern::Part::MAX_VALUE
EXTRN	_ulist_reset_keyword_values_iterator_56:PROC
EXTRN	_ulist_next_keyword_value_56:PROC
EXTRN	_ulist_count_keyword_values_56:PROC
EXTRN	_ulist_close_keyword_values_iterator_56:PROC
EXTRN	_uenum_unextDefault_56:PROC
_BSS	SEGMENT
_gIsoCodes DD	01H DUP (?)
_gIsoCodesInitOnce DQ 01H DUP (?)
_gCurrSymbolsEquiv DD 01H DUP (?)
_gCurrSymbolsEquivInitOnce DQ 01H DUP (?)
_gCRegLock DB	020H DUP (?)
_gCRegHead DD	01H DUP (?)
_currCache DD	0aH DUP (?)
_currentCacheEntryIndex DB 01H DUP (?)
	ALIGN	4

_gCurrencyCacheMutex DB 020H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_03IHONHNBB@ZWD?$AA@
CONST	SEGMENT
??_C@_03IHONHNBB@ZWD?$AA@ DB 'ZWD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JLHFMIMG@ZWR?$AA@
CONST	SEGMENT
??_C@_03JLHFMIMG@ZWR?$AA@ DB 'ZWR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EPDEPHBJ@ZWL?$AA@
CONST	SEGMENT
??_C@_03EPDEPHBJ@ZWL?$AA@ DB 'ZWL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFGHIACF@ZRZ?$AA@
CONST	SEGMENT
??_C@_03FFGHIACF@ZRZ?$AA@ DB 'ZRZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLMJFHHA@ZRN?$AA@
CONST	SEGMENT
??_C@_03HLMJFHHA@ZRN?$AA@ DB 'ZRN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PHLDBKCF@ZMW?$AA@
CONST	SEGMENT
??_C@_03PHLDBKCF@ZMW?$AA@ DB 'ZMW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBMEEHHI@ZMK?$AA@
CONST	SEGMENT
??_C@_03BBMEEHHI@ZMK?$AA@ DB 'ZMK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IDNOBHAE@ZAR?$AA@
CONST	SEGMENT
??_C@_03IDNOBHAE@ZAR?$AA@ DB 'ZAR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHJPCINL@ZAL?$AA@
CONST	SEGMENT
??_C@_03FHJPCINL@ZAL?$AA@ DB 'ZAL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKEELDEG@YUR?$AA@
CONST	SEGMENT
??_C@_03IKEELDEG@YUR?$AA@ DB 'YUR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GMDDOOBL@YUN?$AA@
CONST	SEGMENT
??_C@_03GMDDOOBL@YUN?$AA@ DB 'YUN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EHBOLNNI@YUM?$AA@
CONST	SEGMENT
??_C@_03EHBOLNNI@YUM?$AA@ DB 'YUM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGNMAGJB@YUD?$AA@
CONST	SEGMENT
??_C@_03JGNMAGJB@YUD?$AA@ DB 'YUD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGGCBADG@YER?$AA@
CONST	SEGMENT
??_C@_03JGGCBADG@YER?$AA@ DB 'YER', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ILDIMPNG@YDD?$AA@
CONST	SEGMENT
??_C@_03ILDIMPNG@YDD?$AA@ DB 'YDD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MAMPKPPK@XXX?$AA@
CONST	SEGMENT
??_C@_03MAMPKPPK@XXX?$AA@ DB 'XXX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FDBHJFLB@XUA?$AA@
CONST	SEGMENT
??_C@_03FDBHJFLB@XUA?$AA@ DB 'XUA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CKCBIPFF@XTS?$AA@
CONST	SEGMENT
??_C@_03CKCBIPFF@XTS?$AA@ DB 'XTS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HJDEDOFG@XSU?$AA@
CONST	SEGMENT
??_C@_03HJDEDOFG@XSU?$AA@ DB 'XSU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DCDEEGDA@XRE?$AA@
CONST	SEGMENT
??_C@_03DCDEEGDA@XRE?$AA@ DB 'XRE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCGJLBEO@XPT?$AA@
CONST	SEGMENT
??_C@_03GCGJLBEO@XPT?$AA@ DB 'XPT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BKJNMBJN@XPF?$AA@
CONST	SEGMENT
??_C@_03BKJNMBJN@XPF?$AA@ DB 'XPF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CIKLKDBP@XPD?$AA@
CONST	SEGMENT
??_C@_03CIKLKDBP@XPD?$AA@ DB 'XPD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NOHCFNA@XOF?$AA@
CONST	SEGMENT
??_C@_03NOHCFNA@XOF?$AA@ DB 'XOF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GDNJFPMN@XFU?$AA@
CONST	SEGMENT
??_C@_03GDNJFPMN@XFU?$AA@ DB 'XFU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDPEKFBG@XFO?$AA@
CONST	SEGMENT
??_C@_03NDPEKFBG@XFO?$AA@ DB 'XFO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GBJPOBJE@XEU?$AA@
CONST	SEGMENT
??_C@_03GBJPOBJE@XEU?$AA@ DB 'XEU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CPBMBNGE@XDR?$AA@
CONST	SEGMENT
??_C@_03CPBMBNGE@XDR?$AA@ DB 'XDR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGMLLODG@XCD?$AA@
CONST	SEGMENT
??_C@_03DGMLLODG@XCD?$AA@ DB 'XCD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DHAJNEAB@XBD?$AA@
CONST	SEGMENT
??_C@_03DHAJNEAB@XBD?$AA@ DB 'XBD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HIEIECMG@XBC?$AA@
CONST	SEGMENT
??_C@_03HIEIECMG@XBC?$AA@ DB 'XBC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GBFDHDIH@XBB?$AA@
CONST	SEGMENT
??_C@_03GBFDHDIH@XBB?$AA@ DB 'XBB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EKHOCAEE@XBA?$AA@
CONST	SEGMENT
??_C@_03EKHOCAEE@XBA?$AA@ DB 'XBA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGJGEJEI@XAU?$AA@
CONST	SEGMENT
??_C@_03GGJGEJEI@XAU?$AA@ DB 'XAU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BOGCDJJL@XAG?$AA@
CONST	SEGMENT
??_C@_03BOGCDJJL@XAG?$AA@ DB 'XAG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HHJAINK@XAF?$AA@
CONST	SEGMENT
??_C@_03HHJAINK@XAF?$AA@ DB 'XAF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DIEMBPEB@WST?$AA@
CONST	SEGMENT
??_C@_03DIEMBPEB@WST?$AA@ DB 'WST', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LGELGGBE@VUV?$AA@
CONST	SEGMENT
??_C@_03LGELGGBE@VUV?$AA@ DB 'VUV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CECDLCNM@VNN?$AA@
CONST	SEGMENT
??_C@_03CECDLCNM@VNN?$AA@ DB 'VNN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NOMMFKFG@VND?$AA@
CONST	SEGMENT
??_C@_03NOMMFKFG@VND?$AA@ DB 'VND', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OAKPNHDF@VEF?$AA@
CONST	SEGMENT
??_C@_03OAKPNHDF@VEF?$AA@ DB 'VEF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IEMDBCDB@VEB?$AA@
CONST	SEGMENT
??_C@_03IEMDBCDB@VEB?$AA@ DB 'VEB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCNFHKIC@UZS?$AA@
CONST	SEGMENT
??_C@_03NCNFHKIC@UZS?$AA@ DB 'UZS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IGMJGDFN@UYU?$AA@
CONST	SEGMENT
??_C@_03IGMJGDFN@UYU?$AA@ DB 'UYU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PLLOJHBI@UYP?$AA@
CONST	SEGMENT
??_C@_03PLLOJHBI@UYP?$AA@ DB 'UYP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GALODOAA@UYI?$AA@
CONST	SEGMENT
??_C@_03GALODOAA@UYI?$AA@ DB 'UYI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NNAEEBAN@USS?$AA@
CONST	SEGMENT
??_C@_03NNAEEBAN@USS?$AA@ DB 'USS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCGICNBB@USN?$AA@
CONST	SEGMENT
??_C@_03CCGICNBB@USN?$AA@ DB 'USN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIIHMFJL@USD?$AA@
CONST	SEGMENT
??_C@_03NIIHMFJL@USD?$AA@ DB 'USD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CFNPJDGK@UGX?$AA@
CONST	SEGMENT
??_C@_03CFNPJDGK@UGX?$AA@ DB 'UGX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGCLEKKB@UGS?$AA@
CONST	SEGMENT
??_C@_03MGCLEKKB@UGS?$AA@ DB 'UGS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EALNKOEK@UAK?$AA@
CONST	SEGMENT
??_C@_03EALNKOEK@UAK?$AA@ DB 'UAK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLJAPNIJ@UAH?$AA@
CONST	SEGMENT
??_C@_03GLJAPNIJ@UAH?$AA@ DB 'UAH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GKGJBNOH@TZS?$AA@
CONST	SEGMENT
??_C@_03GKGJBNOH@TZS?$AA@ DB 'TZS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GHDCAKCC@TWD?$AA@
CONST	SEGMENT
??_C@_03GHDCAKCC@TWD?$AA@ DB 'TWD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFHELEHL@TTD?$AA@
CONST	SEGMENT
??_C@_03GFHELEHL@TTD?$AA@ DB 'TTD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JOJFKENF@TRY?$AA@
CONST	SEGMENT
??_C@_03JOJFKENF@TRY?$AA@ DB 'TRY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJCAECMB@TRL?$AA@
CONST	SEGMENT
??_C@_03KJCAECMB@TRL?$AA@ DB 'TRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLGGCNOG@TPE?$AA@
CONST	SEGMENT
??_C@_03HLGGCNOG@TPE?$AA@ DB 'TPE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FLKJCPLP@TOP?$AA@
CONST	SEGMENT
??_C@_03FLKJCPLP@TOP?$AA@ DB 'TOP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HEMFJCNN@TND?$AA@
CONST	SEGMENT
??_C@_03HEMFJCNN@TND?$AA@ DB 'TND', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DMEBDONF@TMT?$AA@
CONST	SEGMENT
??_C@_03DMEBDONF@TMT?$AA@ DB 'TMT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHEBJHMN@TMM?$AA@
CONST	SEGMENT
??_C@_03KHEBJHMN@TMM?$AA@ DB 'TMM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HGEPLOJH@TJS?$AA@
CONST	SEGMENT
??_C@_03HGEPLOJH@TJS?$AA@ DB 'TJS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPFEIPNG@TJR?$AA@
CONST	SEGMENT
??_C@_03GPFEIPNG@TJR?$AA@ DB 'TJR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CGBCEJOJ@THB?$AA@
CONST	SEGMENT
??_C@_03CGBCEJOJ@THB?$AA@ DB 'THB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DKOECLMA@SZL?$AA@
CONST	SEGMENT
??_C@_03DKOECLMA@SZL?$AA@ DB 'SZL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NONFMIME@SYP?$AA@
CONST	SEGMENT
??_C@_03NONFMIME@SYP?$AA@ DB 'SYP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LEGGMOGL@SVC?$AA@
CONST	SEGMENT
??_C@_03LEGGMOGL@SVC?$AA@ DB 'SVC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFPJFDCC@SUR?$AA@
CONST	SEGMENT
??_C@_03OFPJFDCC@SUR?$AA@ DB 'SUR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PIKDIMMC@STD?$AA@
CONST	SEGMENT
??_C@_03PIKDIMMC@STD?$AA@ DB 'STD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDECENBC@SSP?$AA@
CONST	SEGMENT
??_C@_03NDECENBC@SSP?$AA@ DB 'SSP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NHADKDLD@SRG?$AA@
CONST	SEGMENT
??_C@_03NHADKDLD@SRG?$AA@ DB 'SRG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PMCOPAHA@SRD?$AA@
CONST	SEGMENT
??_C@_03PMCOPAHA@SRD?$AA@ DB 'SRD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ONFDEEMF@SOS?$AA@
CONST	SEGMENT
??_C@_03ONFDEEMF@SOS?$AA@ DB 'SOS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCEPPEAC@SLL?$AA@
CONST	SEGMENT
??_C@_03CCEPPEAC@SLL?$AA@ DB 'SLL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GIEBHEEA@SKK?$AA@
CONST	SEGMENT
??_C@_03GIEBHEEA@SKK?$AA@ DB 'SKK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGJPKOLA@SIT?$AA@
CONST	SEGMENT
??_C@_03KGJPKOLA@SIT?$AA@ DB 'SIT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MDDBABID@SHP?$AA@
CONST	SEGMENT
??_C@_03MDDBABID@SHP?$AA@ DB 'SHP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OGMDJBOL@SGD?$AA@
CONST	SEGMENT
??_C@_03OGMDJBOL@SGD?$AA@ DB 'SGD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCNPFJEK@SEK?$AA@
CONST	SEGMENT
??_C@_03GCNPFJEK@SEK?$AA@ DB 'SEK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MKCLPIOH@SDP?$AA@
CONST	SEGMENT
??_C@_03MKCLPIOH@SDP?$AA@ DB 'SDP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MPKIHMHB@SDG?$AA@
CONST	SEGMENT
??_C@_03MPKIHMHB@SDG?$AA@ DB 'SDG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OEIFCPLC@SDD?$AA@
CONST	SEGMENT
??_C@_03OEIFCPLC@SDD?$AA@ DB 'SDD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNFCIMOA@SCR?$AA@
CONST	SEGMENT
??_C@_03PNFCIMOA@SCR?$AA@ DB 'SCR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OAAIFDAA@SBD?$AA@
CONST	SEGMENT
??_C@_03OAAIFDAA@SBD?$AA@ DB 'SBD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PONGFIIO@SAR?$AA@
CONST	SEGMENT
??_C@_03PONGFIIO@SAR?$AA@ DB 'SAR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HAGPDHHM@RWF?$AA@
CONST	SEGMENT
??_C@_03HAGPDHHM@RWF?$AA@ DB 'RWF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FNEFDEEH@RUR?$AA@
CONST	SEGMENT
??_C@_03FNEFDEEH@RUR?$AA@ DB 'RUR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BHIHCGBG@RUB?$AA@
CONST	SEGMENT
??_C@_03BHIHCGBG@RUB?$AA@ DB 'RUB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EFFAPNCC@RSD?$AA@
CONST	SEGMENT
??_C@_03EFFAPNCC@RSD?$AA@ DB 'RSD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KKIDEPLM@RON?$AA@
CONST	SEGMENT
??_C@_03KKIDEPLM@RON?$AA@ DB 'RON', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JILFCNDO@ROL?$AA@
CONST	SEGMENT
??_C@_03JILFCNDO@ROL?$AA@ DB 'ROL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFCDLBLD@RHD?$AA@
CONST	SEGMENT
??_C@_03FFCDLBLD@RHD?$AA@ DB 'RHD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FENPJAAF@QAR?$AA@
CONST	SEGMENT
??_C@_03FENPJAAF@QAR?$AA@ DB 'QAR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MJODODLM@PYG?$AA@
CONST	SEGMENT
??_C@_03MJODODLM@PYG?$AA@ DB 'PYG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PDANBCGN@PTE?$AA@
CONST	SEGMENT
??_C@_03PDANBCGN@PTE?$AA@ DB 'PTE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMGCOODL@PLZ?$AA@
CONST	SEGMENT
??_C@_03CMGCOODL@PLZ?$AA@ DB 'PLZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMMDJGO@PLN?$AA@
CONST	SEGMENT
??_C@_03CMMDJGO@PLN?$AA@ DB 'PLN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OBPEHCLG@PKR?$AA@
CONST	SEGMENT
??_C@_03OBPEHCLG@PKR?$AA@ DB 'PKR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NBIEKOGN@PHP?$AA@
CONST	SEGMENT
??_C@_03NBIEKOGN@PHP?$AA@ DB 'PHP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HDOOCCMK@PGK?$AA@
CONST	SEGMENT
??_C@_03HDOOCCMK@PGK?$AA@ DB 'PGK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCHBGOPN@PES?$AA@
CONST	SEGMENT
??_C@_03PCHBGOPN@PES?$AA@ DB 'PES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NBNACOB@PEN?$AA@
CONST	SEGMENT
??_C@_03NBNACOB@PEN?$AA@ DB 'PEN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ECFMJECG@PEI?$AA@
CONST	SEGMENT
??_C@_03ECFMJECG@PEI?$AA@ DB 'PEI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGKBOFDB@PAB?$AA@
CONST	SEGMENT
??_C@_03KGKBOFDB@PAB?$AA@ DB 'PAB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ONADEJMN@OMR?$AA@
CONST	SEGMENT
??_C@_03ONADEJMN@OMR?$AA@ DB 'OMR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FAEOCOIK@NZD?$AA@
CONST	SEGMENT
??_C@_03FAEOCOIK@NZD?$AA@ DB 'NZD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EBEBBOIL@NPR?$AA@
CONST	SEGMENT
??_C@_03EBEBBOIL@NPR?$AA@ DB 'NPR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNDLFDNO@NOK?$AA@
CONST	SEGMENT
??_C@_03MNDLFDNO@NOK?$AA@ DB 'NOK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GDMIKCIL@NLG?$AA@
CONST	SEGMENT
??_C@_03GDMIKCIL@NLG?$AA@ DB 'NLG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KNNKOKGI@NIO?$AA@
CONST	SEGMENT
??_C@_03KNNKOKGI@NIO?$AA@ DB 'NIO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BGPKFGE@NIC?$AA@
CONST	SEGMENT
??_C@_03BGPKFGE@NIC?$AA@ DB 'NIC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LOFPPGCD@NGN?$AA@
CONST	SEGMENT
??_C@_03LOFPPGCD@NGN?$AA@ DB 'NGN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EADNGCBL@NAD?$AA@
CONST	SEGMENT
??_C@_03EADNGCBL@NAD?$AA@ DB 'NAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIBEGJOO@MZN?$AA@
CONST	SEGMENT
??_C@_03LIBEGJOO@MZN?$AA@ DB 'MZN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDDJDKCN@MZM?$AA@
CONST	SEGMENT
??_C@_03JDDJDKCN@MZM?$AA@ DB 'MZM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FLOALACF@MZE?$AA@
CONST	SEGMENT
??_C@_03FLOALACF@MZE?$AA@ DB 'MZE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FMCFIKOK@MYR?$AA@
CONST	SEGMENT
??_C@_03FMCFIKOK@MYR?$AA@ DB 'MYR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJILCFNJ@MXV?$AA@
CONST	SEGMENT
??_C@_03DJILCFNJ@MXV?$AA@ DB 'MXV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPNBICFP@MXP?$AA@
CONST	SEGMENT
??_C@_03GPNBICFP@MXP?$AA@ DB 'MXP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LLJALNIA@MXN?$AA@
CONST	SEGMENT
??_C@_03LLJALNIA@MXN?$AA@ DB 'MXN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNLLAOPI@MWK?$AA@
CONST	SEGMENT
??_C@_03MNLLAOPI@MWK?$AA@ DB 'MWK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHHJMNNH@MVR?$AA@
CONST	SEGMENT
??_C@_03FHHJMNNH@MVR?$AA@ DB 'MVR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFEPKPFF@MVP?$AA@
CONST	SEGMENT
??_C@_03GFEPKPFF@MVP?$AA@ DB 'MVP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFDPHDIO@MUR?$AA@
CONST	SEGMENT
??_C@_03FFDPHDIO@MUR?$AA@ DB 'MUR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGMLHLDL@MTP?$AA@
CONST	SEGMENT
??_C@_03GGMLHLDL@MTP?$AA@ DB 'MTP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IALMCGGG@MTL?$AA@
CONST	SEGMENT
??_C@_03IALMCGGG@MTL?$AA@ DB 'MTL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KPBMAJBH@MRO?$AA@
CONST	SEGMENT
??_C@_03KPBMAJBH@MRO?$AA@ DB 'MRO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HGLIDHKK@MOP?$AA@
CONST	SEGMENT
??_C@_03HGLIDHKK@MOP?$AA@ DB 'MOP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BDBGJIJJ@MNT?$AA@
CONST	SEGMENT
??_C@_03BDBGJIJJ@MNT?$AA@ DB 'MNT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMAKCIFO@MMK?$AA@
CONST	SEGMENT
??_C@_03NMAKCIFO@MMK?$AA@ DB 'MMK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GIGGDMCE@MLF?$AA@
CONST	SEGMENT
??_C@_03GIGGDMCE@MLF?$AA@ DB 'MLF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KFPAKAKJ@MKN?$AA@
CONST	SEGMENT
??_C@_03KFPAKAKJ@MKN?$AA@ DB 'MKN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FPBPEICD@MKD?$AA@
CONST	SEGMENT
??_C@_03FPBPEICD@MKD?$AA@ DB 'MKD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GEDDNDMF@MGF?$AA@
CONST	SEGMENT
??_C@_03GEDDNDMF@MGF?$AA@ DB 'MGF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLHCEFAC@MGA?$AA@
CONST	SEGMENT
??_C@_03CLHCEFAC@MGA?$AA@ DB 'MGA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JMJKIFBG@MDL?$AA@
CONST	SEGMENT
??_C@_03JMJKIFBG@MDL?$AA@ DB 'MDL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLACJJNJ@MDC?$AA@
CONST	SEGMENT
??_C@_03BLACJJNJ@MDC?$AA@ DB 'MDC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GDDKHLBJ@MCF?$AA@
CONST	SEGMENT
??_C@_03GDDKHLBJ@MCF?$AA@ DB 'MCF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GALOKPHH@MAF?$AA@
CONST	SEGMENT
??_C@_03GALOKPHH@MAF?$AA@ DB 'MAF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FCIIMNPF@MAD?$AA@
CONST	SEGMENT
??_C@_03FCIIMNPF@MAD?$AA@ DB 'MAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PIABFIFI@LYD?$AA@
CONST	SEGMENT
??_C@_03PIABFIFI@LYD?$AA@ DB 'LYD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OPMFKKLC@LVR?$AA@
CONST	SEGMENT
??_C@_03OPMFKKLC@LVR?$AA@ DB 'LVR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLIEJFGN@LVL?$AA@
CONST	SEGMENT
??_C@_03DLIEJFGN@LVL?$AA@ DB 'LVL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJMCCLDE@LUL?$AA@
CONST	SEGMENT
??_C@_03DJMCCLDE@LUL?$AA@ DB 'LUL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MDCNMDLO@LUF?$AA@
CONST	SEGMENT
??_C@_03MDCNMDLO@LUF?$AA@ DB 'LUF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LOFKDHPL@LUC?$AA@
CONST	SEGMENT
??_C@_03LOFKDHPL@LUC?$AA@ DB 'LUC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LKBLNJFK@LTT?$AA@
CONST	SEGMENT
??_C@_03LKBLNJFK@LTT?$AA@ DB 'LTT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DIAAEBAD@LTL?$AA@
CONST	SEGMENT
??_C@_03DIAAEBAD@LTL?$AA@ DB 'LTL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CEFEGGMH@LSM?$AA@
CONST	SEGMENT
??_C@_03CEFEGGMH@LSM?$AA@ DB 'LSM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNEPFHIG@LSL?$AA@
CONST	SEGMENT
??_C@_03DNEPFHIG@LSL?$AA@ DB 'LSL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PEFELHLJ@LRD?$AA@
CONST	SEGMENT
??_C@_03PEFELHLJ@LRD?$AA@ DB 'LRD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PLDLJKJB@LKR?$AA@
CONST	SEGMENT
??_C@_03PLDLJKJB@LKR?$AA@ DB 'LKR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGNMMDJM@LBP?$AA@
CONST	SEGMENT
??_C@_03MGNMMDJM@LBP?$AA@ DB 'LBP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GNKMLGFP@LAK?$AA@
CONST	SEGMENT
??_C@_03GNKMLGFP@LAK?$AA@ DB 'LAK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNFCMMOJ@KZT?$AA@
CONST	SEGMENT
??_C@_03CNFCMMOJ@KZT?$AA@ DB 'KZT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFNGGAOB@KYD?$AA@
CONST	SEGMENT
??_C@_03GFNGGAOB@KYD?$AA@ DB 'KYD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPEIENOL@KWD?$AA@
CONST	SEGMENT
??_C@_03GPEIENOL@KWD?$AA@ DB 'KWD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IGMMOJC@KRW?$AA@
CONST	SEGMENT
??_C@_03IGMMOJC@KRW?$AA@ DB 'KRW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKHHFGML@KRO?$AA@
CONST	SEGMENT
??_C@_03IKHHFGML@KRO?$AA@ DB 'KRO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MFDGMAAM@KRH?$AA@
CONST	SEGMENT
??_C@_03MFDGMAAM@KRH?$AA@ DB 'KRH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LOIBKPM@KPW?$AA@
CONST	SEGMENT
??_C@_03LOIBKPM@KPW?$AA@ DB 'KPW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EMMPAJMP@KMF?$AA@
CONST	SEGMENT
??_C@_03EMMPAJMP@KMF?$AA@ DB 'KMF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GEKKBMHB@KHR?$AA@
CONST	SEGMENT
??_C@_03GEKKBMHB@KHR?$AA@ DB 'KHR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HGONGKAN@KGS?$AA@
CONST	SEGMENT
??_C@_03HGONGKAN@KGS?$AA@ DB 'KGS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HFGJLOGD@KES?$AA@
CONST	SEGMENT
??_C@_03HFGJLOGD@KES?$AA@ DB 'KES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNNHFABH@JPY?$AA@
CONST	SEGMENT
??_C@_03CNNHFABH@JPY?$AA@ DB 'JPY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MFMBNIEG@JOD?$AA@
CONST	SEGMENT
??_C@_03MFMBNIEG@JOD?$AA@ DB 'JOD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGEFAMCI@JMD?$AA@
CONST	SEGMENT
??_C@_03MGEFAMCI@JMD?$AA@ DB 'JMD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNOLBDB@ITL?$AA@
CONST	SEGMENT
??_C@_03PNOLBDB@ITL?$AA@ DB 'ITL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EFNADBHD@ISK?$AA@
CONST	SEGMENT
??_C@_03EFNADBHD@ISK?$AA@ DB 'ISK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FMMLAADC@ISJ?$AA@
CONST	SEGMENT
??_C@_03FMMLAADC@ISJ?$AA@ DB 'ISJ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPBCPCFM@IRR?$AA@
CONST	SEGMENT
??_C@_03NPBCPCFM@IRR?$AA@ DB 'IRR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MBMMPJNC@IQD?$AA@
CONST	SEGMENT
??_C@_03MBMMPJNC@IQD?$AA@ DB 'IQD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MKCOKIEI@INR?$AA@
CONST	SEGMENT
??_C@_03MKCOKIEI@INR?$AA@ DB 'INR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NALBENGH@ILS?$AA@
CONST	SEGMENT
??_C@_03NALBENGH@ILS?$AA@ DB 'ILS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MJKKHMCG@ILR?$AA@
CONST	SEGMENT
??_C@_03MJKKHMCG@ILR?$AA@ DB 'ILR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PLJMBOKE@ILP?$AA@
CONST	SEGMENT
??_C@_03PLJMBOKE@ILP?$AA@ DB 'ILP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PEENCFCL@IEP?$AA@
CONST	SEGMENT
??_C@_03PEENCFCL@IEP?$AA@ DB 'IEP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MHLJCNJO@IDR?$AA@
CONST	SEGMENT
??_C@_03MHLJCNJO@IDR?$AA@ DB 'IDR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EMEPFEOJ@HUF?$AA@
CONST	SEGMENT
??_C@_03EMEPFEOJ@HUF?$AA@ DB 'HUF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FEJGAPJP@HTG?$AA@
CONST	SEGMENT
??_C@_03FEJGAPJP@HTG?$AA@ DB 'HTG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PMKODMCB@HRK?$AA@
CONST	SEGMENT
??_C@_03PMKODMCB@HRK?$AA@ DB 'HRK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLDGCAOO@HRD?$AA@
CONST	SEGMENT
??_C@_03HLDGCAOO@HRD?$AA@ DB 'HRD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGNDPAPC@HNL?$AA@
CONST	SEGMENT
??_C@_03KGNDPAPC@HNL?$AA@ DB 'HNL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GIMBLIBB@HKD?$AA@
CONST	SEGMENT
??_C@_03GIMBLIBB@HKD?$AA@ DB 'HKD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CPAANPFJ@GYD?$AA@
CONST	SEGMENT
??_C@_03CPAANPFJ@GYD?$AA@ DB 'GYD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LDACFAG@GWP?$AA@
CONST	SEGMENT
??_C@_03LDACFAG@GWP?$AA@ DB 'GWP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DMIFMDBC@GWE?$AA@
CONST	SEGMENT
??_C@_03DMIFMDBC@GWE?$AA@ DB 'GWE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BAGNKKBO@GTQ?$AA@
CONST	SEGMENT
??_C@_03BAGNKKBO@GTQ?$AA@ DB 'GTQ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CDFFDALI@GRD?$AA@
CONST	SEGMENT
??_C@_03CDFFDALI@GRD?$AA@ DB 'GRD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DIAILPKA@GQE?$AA@
CONST	SEGMENT
??_C@_03DIAILPKA@GQE?$AA@ DB 'GQE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDOKOODK@GNS?$AA@
CONST	SEGMENT
??_C@_03DDOKOODK@GNS?$AA@ DB 'GNS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EFPAICO@GNF?$AA@
CONST	SEGMENT
??_C@_03EFPAICO@GNF?$AA@ DB 'GNF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DECPNEPF@GMD?$AA@
CONST	SEGMENT
??_C@_03DECPNEPF@GMD?$AA@ DB 'GMD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BNIIKLHM@GIP?$AA@
CONST	SEGMENT
??_C@_03BNIIKLHM@GIP?$AA@ DB 'GIP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DHGHJCII@GHS?$AA@
CONST	SEGMENT
??_C@_03DHGHJCII@GHS?$AA@ DB 'GHS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HNKFIANJ@GHC?$AA@
CONST	SEGMENT
??_C@_03HNKFIANJ@GHC?$AA@ DB 'GHC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCOFAPEF@GEL?$AA@
CONST	SEGMENT
??_C@_03PCOFAPEF@GEL?$AA@ DB 'GEL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LNKEJJIC@GEK?$AA@
CONST	SEGMENT
??_C@_03LNKEJJIC@GEK?$AA@ DB 'GEK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBNNEEJN@GBP?$AA@
CONST	SEGMENT
??_C@_03BBNNEEJN@GBP?$AA@ DB 'GBP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJNPDFFP@FRF?$AA@
CONST	SEGMENT
??_C@_03KJNPDFFP@FRF?$AA@ DB 'FRF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGLABIHH@FKP?$AA@
CONST	SEGMENT
??_C@_03KGLABIHH@FKP?$AA@ DB 'FKP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IJNMKFBF@FJD?$AA@
CONST	SEGMENT
??_C@_03IJNMKFBF@FJD?$AA@ DB 'FJD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FKFIKAAF@FIM?$AA@
CONST	SEGMENT
??_C@_03FKFIKAAF@FIM?$AA@ DB 'FIM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JAILFLGB@EUR?$AA@
CONST	SEGMENT
??_C@_03JAILFLGB@EUR?$AA@ DB 'EUR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLILCDAH@ETB?$AA@
CONST	SEGMENT
??_C@_03NLILCDAH@ETB?$AA@ DB 'ETB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGDAEFFB@ESP?$AA@
CONST	SEGMENT
??_C@_03KGDAEFFB@ESP?$AA@ DB 'ESP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NOMEDFIC@ESB?$AA@
CONST	SEGMENT
??_C@_03NOMEDFIC@ESB?$AA@ DB 'ESB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PFOJGGEB@ESA?$AA@
CONST	SEGMENT
??_C@_03PFOJGGEB@ESA?$AA@ DB 'ESA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HDLDBALJ@ERN?$AA@
CONST	SEGMENT
??_C@_03HDLDBALJ@ERN?$AA@ DB 'ERN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JCABHHCL@EQE?$AA@
CONST	SEGMENT
??_C@_03JCABHHCL@EQE?$AA@ DB 'EQE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LNBPEOPN@EGP?$AA@
CONST	SEGMENT
??_C@_03LNBPEOPN@EGP?$AA@ DB 'EGP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BHKNFBAJ@EEK?$AA@
CONST	SEGMENT
??_C@_03BHKNFBAJ@EEK?$AA@ DB 'EEK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OMEMEBKH@ECV?$AA@
CONST	SEGMENT
??_C@_03OMEMEBKH@ECV?$AA@ DB 'ECV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBDLLFOC@ECS?$AA@
CONST	SEGMENT
??_C@_03JBDLLFOC@ECS?$AA@ DB 'ECS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DPPDMOOO@DZD?$AA@
CONST	SEGMENT
??_C@_03DPPDMOOO@DZD?$AA@ DB 'DZD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LLAHICA@DOP?$AA@
CONST	SEGMENT
??_C@_03LLAHICA@DOP?$AA@ DB 'DOP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KFIPBLGG@DKK?$AA@
CONST	SEGMENT
??_C@_03KFIPBLGG@DKK?$AA@ DB 'DKK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBODAPBM@DJF?$AA@
CONST	SEGMENT
??_C@_03BBODAPBM@DJF?$AA@ DB 'DJF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PJELJBOK@DEM?$AA@
CONST	SEGMENT
??_C@_03PJELJBOK@DEM?$AA@ DB 'DEM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PIIJPLNN@DDM?$AA@
CONST	SEGMENT
??_C@_03PIIJPLNN@DDM?$AA@ DB 'DDM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CFLMOKJI@CZK?$AA@
CONST	SEGMENT
??_C@_03CFLMOKJI@CZK?$AA@ DB 'CZK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IOMMJPFL@CYP?$AA@
CONST	SEGMENT
??_C@_03IOMMJPFL@CYP?$AA@ DB 'CYP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCCFDOHC@CVE?$AA@
CONST	SEGMENT
??_C@_03LCCFDOHC@CVE?$AA@ DB 'CVE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IHNGGGDP@CUP?$AA@
CONST	SEGMENT
??_C@_03IHNGGGDP@CUP?$AA@ DB 'CUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OGDJCHKN@CUC?$AA@
CONST	SEGMENT
??_C@_03OGDJCHKN@CUC?$AA@ DB 'CUC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CKGNNBBH@CSK?$AA@
CONST	SEGMENT
??_C@_03CKGNNBBH@CSK?$AA@ DB 'CSK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KNPFMNNI@CSD?$AA@
CONST	SEGMENT
??_C@_03KNPFMNNI@CSD?$AA@ DB 'CSD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ODHGDBCI@CRC?$AA@
CONST	SEGMENT
??_C@_03ODHGDBCI@CRC?$AA@ DB 'CRC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLBALENM@COU?$AA@
CONST	SEGMENT
??_C@_03OLBALENM@COU?$AA@ DB 'COU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGGHEAJJ@COP?$AA@
CONST	SEGMENT
??_C@_03JGGHEAJJ@COP?$AA@ DB 'COP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EGGHJBOH@CNY?$AA@
CONST	SEGMENT
??_C@_03EGGHJBOH@CNY?$AA@ DB 'CNY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FPHMKAKG@CNX?$AA@
CONST	SEGMENT
??_C@_03FPHMKAKG@CNX?$AA@ DB 'CNX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JECBPOMA@CLP?$AA@
CONST	SEGMENT
??_C@_03JECBPOMA@CLP?$AA@ DB 'CLP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IILJELBH@CLF?$AA@
CONST	SEGMENT
??_C@_03IILJELBH@CLF?$AA@ DB 'CLF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KDJEBINE@CLE?$AA@
CONST	SEGMENT
??_C@_03KDJEBINE@CLE?$AA@ DB 'CLE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMGJMANL@CHW?$AA@
CONST	SEGMENT
??_C@_03NMGJMANL@CHW?$AA@ DB 'CHW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IPLAODML@CHF?$AA@
CONST	SEGMENT
??_C@_03IPLAODML@CHF?$AA@ DB 'CHF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KEJNLAAI@CHE?$AA@
CONST	SEGMENT
??_C@_03KEJNLAAI@CHE?$AA@ DB 'CHE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IGKKBKKP@CDF?$AA@
CONST	SEGMENT
??_C@_03IGKKBKKP@CDF?$AA@ DB 'CDF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCFHLKMG@CAD?$AA@
CONST	SEGMENT
??_C@_03LCFHLKMG@CAD?$AA@ DB 'CAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BKJIJBDC@BZD?$AA@
CONST	SEGMENT
??_C@_03BKJIJBDC@BZD?$AA@ DB 'BZD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EEGJKLM@BYR?$AA@
CONST	SEGMENT
??_C@_03EEGJKLM@BYR?$AA@ DB 'BYR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EOIEIION@BYB?$AA@
CONST	SEGMENT
??_C@_03EOIEIION@BYB?$AA@ DB 'BYB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DMOONFDE@BWP?$AA@
CONST	SEGMENT
??_C@_03DMOONFDE@BWP?$AA@ DB 'BWP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGFMMKMA@BUK?$AA@
CONST	SEGMENT
??_C@_03JGFMMKMA@BUK?$AA@ DB 'BUK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OKOJFELC@BTN?$AA@
CONST	SEGMENT
??_C@_03OKOJFELC@BTN?$AA@ DB 'BTN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BFEJKKLN@BSD?$AA@
CONST	SEGMENT
??_C@_03BFEJKKLN@BSD?$AA@ DB 'BSD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MAMKPPFF@BRZ?$AA@
CONST	SEGMENT
??_C@_03MAMKPPFF@BRZ?$AA@ DB 'BRZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IBDHFFN@BRR?$AA@
CONST	SEGMENT
??_C@_03IBDHFFN@BRR?$AA@ DB 'BRR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OOGECIAA@BRN?$AA@
CONST	SEGMENT
??_C@_03OOGECIAA@BRN?$AA@ DB 'BRN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMFCEKIC@BRL?$AA@
CONST	SEGMENT
??_C@_03NMFCEKIC@BRL?$AA@ DB 'BRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJAPBML@BRE?$AA@
CONST	SEGMENT
??_C@_03NJAPBML@BRE?$AA@ DB 'BRE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FLMKFGEN@BRC?$AA@
CONST	SEGMENT
??_C@_03FLMKFGEN@BRC?$AA@ DB 'BRC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ECNBGHAM@BRB?$AA@
CONST	SEGMENT
??_C@_03ECNBGHAM@BRB?$AA@ DB 'BRB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HIIBIAHK@BOV?$AA@
CONST	SEGMENT
??_C@_03HIIBIAHK@BOV?$AA@ DB 'BOV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CONLCHPM@BOP?$AA@
CONST	SEGMENT
??_C@_03CONLCHPM@BOP?$AA@ DB 'BOP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MIKMHKKB@BOL?$AA@
CONST	SEGMENT
??_C@_03MIKMHKKB@BOL?$AA@ DB 'BOL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FGCPFHCP@BOB?$AA@
CONST	SEGMENT
??_C@_03FGCPFHCP@BOB?$AA@ DB 'BOB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLHJKJO@BND?$AA@
CONST	SEGMENT
??_C@_03BLHJKJO@BND?$AA@ DB 'BND', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DPBCEMH@BMD?$AA@
CONST	SEGMENT
??_C@_03DPBCEMH@BMD?$AA@ DB 'BMD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGMOOOJJ@BIF?$AA@
CONST	SEGMENT
??_C@_03DGMOOOJJ@BIF?$AA@ DB 'BIF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FDKOGCM@BHD?$AA@
CONST	SEGMENT
??_C@_03FDKOGCM@BHD?$AA@ DB 'BHD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ONJCHINK@BGO?$AA@
CONST	SEGMENT
??_C@_03ONJCHINK@BGO?$AA@ DB 'BGO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PEIJEJJL@BGN?$AA@
CONST	SEGMENT
??_C@_03PEIJEJJL@BGN?$AA@ DB 'BGN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPKEBKFI@BGM?$AA@
CONST	SEGMENT
??_C@_03NPKEBKFI@BGM?$AA@ DB 'BGM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGLPCLBJ@BGL?$AA@
CONST	SEGMENT
??_C@_03MGLPCLBJ@BGL?$AA@ DB 'BGL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MFDLPPHH@BEL?$AA@
CONST	SEGMENT
??_C@_03MFDLPPHH@BEL?$AA@ DB 'BEL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DPNEBHPN@BEF?$AA@
CONST	SEGMENT
??_C@_03DPNEBHPN@BEF?$AA@ DB 'BEF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ECKDODLI@BEC?$AA@
CONST	SEGMENT
??_C@_03ECKDODLI@BEC?$AA@ DB 'BEC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EGOCANBJ@BDT?$AA@
CONST	SEGMENT
??_C@_03EGOCANBJ@BDT?$AA@ DB 'BDT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKNGDPK@BBD?$AA@
CONST	SEGMENT
??_C@_03IKNGDPK@BBD?$AA@ DB 'BBD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PAAEDFCJ@BAN?$AA@
CONST	SEGMENT
??_C@_03PAAEDFCJ@BAN?$AA@ DB 'BAN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLCJGGOK@BAM?$AA@
CONST	SEGMENT
??_C@_03NLCJGGOK@BAM?$AA@ DB 'BAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KOLNNKD@BAD?$AA@
CONST	SEGMENT
??_C@_03KOLNNKD@BAD?$AA@ DB 'BAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCMCNGFG@AZN?$AA@
CONST	SEGMENT
??_C@_03PCMCNGFG@AZN?$AA@ DB 'AZN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJOPIFJF@AZM?$AA@
CONST	SEGMENT
??_C@_03NJOPIFJF@AZM?$AA@ DB 'AZM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLNIPOEM@AWG?$AA@
CONST	SEGMENT
??_C@_03CLNIPOEM@AWG?$AA@ DB 'AWG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DHBHJOB@AUD?$AA@
CONST	SEGMENT
??_C@_03DHBHJOB@AUD?$AA@ DB 'AUD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HDAJHEA@ATS?$AA@
CONST	SEGMENT
??_C@_03HDAJHEA@ATS?$AA@ DB 'ATS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLNOLPC@ARS?$AA@
CONST	SEGMENT
??_C@_03DLNOLPC@ARS?$AA@ DB 'ARS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CIJALIDB@ARP?$AA@
CONST	SEGMENT
??_C@_03CIJALIDB@ARP?$AA@ DB 'ARP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NHPMNECN@ARM?$AA@
CONST	SEGMENT
??_C@_03NHPMNECN@ARM?$AA@ DB 'ARM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MOOHOFGM@ARL?$AA@
CONST	SEGMENT
??_C@_03MOOHOFGM@ARL?$AA@ DB 'ARL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLEJJLCB@ARA?$AA@
CONST	SEGMENT
??_C@_03HLEJJLCB@ARA?$AA@ DB 'ARA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFIOKJA@AOR?$AA@
CONST	SEGMENT
??_C@_03OFIOKJA@AOR?$AA@ DB 'AOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OICPLHMN@AON?$AA@
CONST	SEGMENT
??_C@_03OICPLHMN@AON?$AA@ DB 'AON', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JFFIEDII@AOK?$AA@
CONST	SEGMENT
??_C@_03JFFIEDII@AOK?$AA@ DB 'AOK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPLHKLAC@AOA?$AA@
CONST	SEGMENT
??_C@_03GPLHKLAC@AOA?$AA@ DB 'AOA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DICPGGLD@ANG?$AA@
CONST	SEGMENT
??_C@_03DICPGGLD@ANG?$AA@ DB 'ANG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBEEILCJ@AMD?$AA@
CONST	SEGMENT
??_C@_03BBEEILCJ@AMD?$AA@ DB 'AMD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIFPGLBG@ALL?$AA@
CONST	SEGMENT
??_C@_03NIFPGLBG@ALL?$AA@ DB 'ALL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JHBOPNNB@ALK?$AA@
CONST	SEGMENT
??_C@_03JHBOPNNB@ALK?$AA@ DB 'ALK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHPOIMEC@AFN?$AA@
CONST	SEGMENT
??_C@_03OHPOIMEC@AFN?$AA@ DB 'AFN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GAGGJAIN@AFA?$AA@
CONST	SEGMENT
??_C@_03GAGGJAIN@AFA?$AA@ DB 'AFA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BPFHNKJB@AED?$AA@
CONST	SEGMENT
??_C@_03BPFHNKJB@AED?$AA@ DB 'AED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DADLGHPD@ADP?$AA@
CONST	SEGMENT
??_C@_03DADLGHPD@ADP?$AA@ DB 'ADP', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_EQUIV_CURRENCY_SYMBOLS DD FLAT:??_C@_06GHCHBMLG@?2u00a5?$AA@
	DD	FLAT:??_C@_06DJBLNOHP@?2uffe5?$AA@
	DD	FLAT:??_C@_01EPMOAMKG@$?$AA@
	DD	FLAT:??_C@_06OJOBKOHE@?2ufe69?$AA@
	DD	FLAT:??_C@_01EPMOAMKG@$?$AA@
	DD	FLAT:??_C@_06EKHHADGF@?2uff04?$AA@
	DD	FLAT:??_C@_06KIEJDBJL@?2u20a8?$AA@
	DD	FLAT:??_C@_06LDBELOID@?2u20b9?$AA@
	DD	FLAT:??_C@_06DBHNLLDA@?2u00a3?$AA@
	DD	FLAT:??_C@_06EPMHOJH@?2u20a4?$AA@
_DATA	ENDS
;	COMDAT ??_C@_06EPMHOJH@?2u20a4?$AA@
CONST	SEGMENT
??_C@_06EPMHOJH@?2u20a4?$AA@ DB '\u20a4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBHNLLDA@?2u00a3?$AA@
CONST	SEGMENT
??_C@_06DBHNLLDA@?2u00a3?$AA@ DB '\u00a3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LDBELOID@?2u20b9?$AA@
CONST	SEGMENT
??_C@_06LDBELOID@?2u20b9?$AA@ DB '\u20b9', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KIEJDBJL@?2u20a8?$AA@
CONST	SEGMENT
??_C@_06KIEJDBJL@?2u20a8?$AA@ DB '\u20a8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EKHHADGF@?2uff04?$AA@
CONST	SEGMENT
??_C@_06EKHHADGF@?2uff04?$AA@ DB '\uff04', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OJOBKOHE@?2ufe69?$AA@
CONST	SEGMENT
??_C@_06OJOBKOHE@?2ufe69?$AA@ DB '\ufe69', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EPMOAMKG@$?$AA@
CONST	SEGMENT
??_C@_01EPMOAMKG@$?$AA@ DB '$', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06DJBLNOHP@?2uffe5?$AA@
CONST	SEGMENT
??_C@_06DJBLNOHP@?2uffe5?$AA@ DB '\uffe5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GHCHBMLG@?2u00a5?$AA@
CONST	SEGMENT
??_C@_06GHCHBMLG@?2u00a5?$AA@ DB '\u00a5', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_LAST_RESORT_DATA DD 02H
	DD	00H
	DD	02H
	DD	00H
_POW10	DD	01H
	DD	0aH
	DD	064H
	DD	03e8H
	DD	02710H
	DD	0186a0H
	DD	0f4240H
	DD	0989680H
	DD	05f5e100H
	DD	03b9aca00H
_CURRENCY_DATA DB 'supplementalData', 00H
	ORG $+3
_CURRENCY_META DB 'CurrencyMeta', 00H
	ORG $+3
_CURRENCY_MAP DB 'CurrencyMap', 00H
_DEFAULT_META DB 'DEFAULT', 00H
_VAR_PRE_EURO DB 'PREEURO', 00H
_VAR_EURO DB	'EURO', 00H
	ORG $+3
_VAR_DELIM_STR DB '_', 00H
	ORG $+2
_CURRENCIES DB	'Currencies', 00H
	ORG $+1
_CURRENCYPLURALS DB 'CurrencyPlurals', 00H
_EUR_STR DW	045H
	DW	055H
	DW	052H
	DW	00H
_gCurrencyList DD FLAT:??_C@_03DADLGHPD@ADP?$AA@
	DD	05H
	DD	FLAT:??_C@_03BPFHNKJB@AED?$AA@
	DD	09H
	DD	FLAT:??_C@_03GAGGJAIN@AFA?$AA@
	DD	05H
	DD	FLAT:??_C@_03OHPOIMEC@AFN?$AA@
	DD	09H
	DD	FLAT:??_C@_03JHBOPNNB@ALK?$AA@
	DD	05H
	DD	FLAT:??_C@_03NIFPGLBG@ALL?$AA@
	DD	09H
	DD	FLAT:??_C@_03BBEEILCJ@AMD?$AA@
	DD	09H
	DD	FLAT:??_C@_03DICPGGLD@ANG?$AA@
	DD	09H
	DD	FLAT:??_C@_03GPLHKLAC@AOA?$AA@
	DD	09H
	DD	FLAT:??_C@_03JFFIEDII@AOK?$AA@
	DD	05H
	DD	FLAT:??_C@_03OICPLHMN@AON?$AA@
	DD	05H
	DD	FLAT:??_C@_03OFIOKJA@AOR?$AA@
	DD	05H
	DD	FLAT:??_C@_03HLEJJLCB@ARA?$AA@
	DD	05H
	DD	FLAT:??_C@_03MOOHOFGM@ARL?$AA@
	DD	05H
	DD	FLAT:??_C@_03NHPMNECN@ARM?$AA@
	DD	05H
	DD	FLAT:??_C@_03CIJALIDB@ARP?$AA@
	DD	05H
	DD	FLAT:??_C@_03DLNOLPC@ARS?$AA@
	DD	09H
	DD	FLAT:??_C@_03HDAJHEA@ATS?$AA@
	DD	05H
	DD	FLAT:??_C@_03DHBHJOB@AUD?$AA@
	DD	09H
	DD	FLAT:??_C@_03CLNIPOEM@AWG?$AA@
	DD	09H
	DD	FLAT:??_C@_03NJOPIFJF@AZM?$AA@
	DD	05H
	DD	FLAT:??_C@_03PCMCNGFG@AZN?$AA@
	DD	09H
	DD	FLAT:??_C@_03KOLNNKD@BAD?$AA@
	DD	05H
	DD	FLAT:??_C@_03NLCJGGOK@BAM?$AA@
	DD	09H
	DD	FLAT:??_C@_03PAAEDFCJ@BAN?$AA@
	DD	05H
	DD	FLAT:??_C@_03IKNGDPK@BBD?$AA@
	DD	09H
	DD	FLAT:??_C@_03EGOCANBJ@BDT?$AA@
	DD	09H
	DD	FLAT:??_C@_03ECKDODLI@BEC?$AA@
	DD	06H
	DD	FLAT:??_C@_03DPNEBHPN@BEF?$AA@
	DD	05H
	DD	FLAT:??_C@_03MFDLPPHH@BEL?$AA@
	DD	06H
	DD	FLAT:??_C@_03MGLPCLBJ@BGL?$AA@
	DD	05H
	DD	FLAT:??_C@_03NPKEBKFI@BGM?$AA@
	DD	05H
	DD	FLAT:??_C@_03PEIJEJJL@BGN?$AA@
	DD	09H
	DD	FLAT:??_C@_03ONJCHINK@BGO?$AA@
	DD	05H
	DD	FLAT:??_C@_03FDKOGCM@BHD?$AA@
	DD	09H
	DD	FLAT:??_C@_03DGMOOOJJ@BIF?$AA@
	DD	09H
	DD	FLAT:??_C@_03DPBCEMH@BMD?$AA@
	DD	09H
	DD	FLAT:??_C@_03BLHJKJO@BND?$AA@
	DD	09H
	DD	FLAT:??_C@_03FGCPFHCP@BOB?$AA@
	DD	09H
	DD	FLAT:??_C@_03MIKMHKKB@BOL?$AA@
	DD	05H
	DD	FLAT:??_C@_03CONLCHPM@BOP?$AA@
	DD	05H
	DD	FLAT:??_C@_03HIIBIAHK@BOV?$AA@
	DD	0aH
	DD	FLAT:??_C@_03ECNBGHAM@BRB?$AA@
	DD	05H
	DD	FLAT:??_C@_03FLMKFGEN@BRC?$AA@
	DD	05H
	DD	FLAT:??_C@_03NJAPBML@BRE?$AA@
	DD	05H
	DD	FLAT:??_C@_03NMFCEKIC@BRL?$AA@
	DD	09H
	DD	FLAT:??_C@_03OOGECIAA@BRN?$AA@
	DD	05H
	DD	FLAT:??_C@_03IBDHFFN@BRR?$AA@
	DD	05H
	DD	FLAT:??_C@_03MAMKPPFF@BRZ?$AA@
	DD	05H
	DD	FLAT:??_C@_03BFEJKKLN@BSD?$AA@
	DD	09H
	DD	FLAT:??_C@_03OKOJFELC@BTN?$AA@
	DD	09H
	DD	FLAT:??_C@_03JGFMMKMA@BUK?$AA@
	DD	05H
	DD	FLAT:??_C@_03DMOONFDE@BWP?$AA@
	DD	09H
	DD	FLAT:??_C@_03EOIEIION@BYB?$AA@
	DD	05H
	DD	FLAT:??_C@_03EEGJKLM@BYR?$AA@
	DD	09H
	DD	FLAT:??_C@_03BKJIJBDC@BZD?$AA@
	DD	09H
	DD	FLAT:??_C@_03LCFHLKMG@CAD?$AA@
	DD	09H
	DD	FLAT:??_C@_03IGKKBKKP@CDF?$AA@
	DD	09H
	DD	FLAT:??_C@_03KEJNLAAI@CHE?$AA@
	DD	0aH
	DD	FLAT:??_C@_03IPLAODML@CHF?$AA@
	DD	09H
	DD	FLAT:??_C@_03NMGJMANL@CHW?$AA@
	DD	0aH
	DD	FLAT:??_C@_03KDJEBINE@CLE?$AA@
	DD	05H
	DD	FLAT:??_C@_03IILJELBH@CLF?$AA@
	DD	0aH
	DD	FLAT:??_C@_03JECBPOMA@CLP?$AA@
	DD	09H
	DD	FLAT:??_C@_03FPHMKAKG@CNX?$AA@
	DD	06H
	DD	FLAT:??_C@_03EGGHJBOH@CNY?$AA@
	DD	09H
	DD	FLAT:??_C@_03JGGHEAJJ@COP?$AA@
	DD	09H
	DD	FLAT:??_C@_03OLBALENM@COU?$AA@
	DD	0aH
	DD	FLAT:??_C@_03ODHGDBCI@CRC?$AA@
	DD	09H
	DD	FLAT:??_C@_03KNPFMNNI@CSD?$AA@
	DD	05H
	DD	FLAT:??_C@_03CKGNNBBH@CSK?$AA@
	DD	05H
	DD	FLAT:??_C@_03OGDJCHKN@CUC?$AA@
	DD	09H
	DD	FLAT:??_C@_03IHNGGGDP@CUP?$AA@
	DD	09H
	DD	FLAT:??_C@_03LCCFDOHC@CVE?$AA@
	DD	09H
	DD	FLAT:??_C@_03IOMMJPFL@CYP?$AA@
	DD	05H
	DD	FLAT:??_C@_03CFLMOKJI@CZK?$AA@
	DD	09H
	DD	FLAT:??_C@_03PIIJPLNN@DDM?$AA@
	DD	05H
	DD	FLAT:??_C@_03PJELJBOK@DEM?$AA@
	DD	05H
	DD	FLAT:??_C@_03BBODAPBM@DJF?$AA@
	DD	09H
	DD	FLAT:??_C@_03KFIPBLGG@DKK?$AA@
	DD	09H
	DD	FLAT:??_C@_03LLAHICA@DOP?$AA@
	DD	09H
	DD	FLAT:??_C@_03DPPDMOOO@DZD?$AA@
	DD	09H
	DD	FLAT:??_C@_03JBDLLFOC@ECS?$AA@
	DD	05H
	DD	FLAT:??_C@_03OMEMEBKH@ECV?$AA@
	DD	06H
	DD	FLAT:??_C@_03BHKNFBAJ@EEK?$AA@
	DD	05H
	DD	FLAT:??_C@_03LNBPEOPN@EGP?$AA@
	DD	09H
	DD	FLAT:??_C@_03JCABHHCL@EQE?$AA@
	DD	05H
	DD	FLAT:??_C@_03HDLDBALJ@ERN?$AA@
	DD	09H
	DD	FLAT:??_C@_03PFOJGGEB@ESA?$AA@
	DD	06H
	DD	FLAT:??_C@_03NOMEDFIC@ESB?$AA@
	DD	06H
	DD	FLAT:??_C@_03KGDAEFFB@ESP?$AA@
	DD	05H
	DD	FLAT:??_C@_03NLILCDAH@ETB?$AA@
	DD	09H
	DD	FLAT:??_C@_03JAILFLGB@EUR?$AA@
	DD	09H
	DD	FLAT:??_C@_03FKFIKAAF@FIM?$AA@
	DD	05H
	DD	FLAT:??_C@_03IJNMKFBF@FJD?$AA@
	DD	09H
	DD	FLAT:??_C@_03KGLABIHH@FKP?$AA@
	DD	09H
	DD	FLAT:??_C@_03KJNPDFFP@FRF?$AA@
	DD	05H
	DD	FLAT:??_C@_03BBNNEEJN@GBP?$AA@
	DD	09H
	DD	FLAT:??_C@_03LNKEJJIC@GEK?$AA@
	DD	05H
	DD	FLAT:??_C@_03PCOFAPEF@GEL?$AA@
	DD	09H
	DD	FLAT:??_C@_03HNKFIANJ@GHC?$AA@
	DD	05H
	DD	FLAT:??_C@_03DHGHJCII@GHS?$AA@
	DD	09H
	DD	FLAT:??_C@_03BNIIKLHM@GIP?$AA@
	DD	09H
	DD	FLAT:??_C@_03DECPNEPF@GMD?$AA@
	DD	09H
	DD	FLAT:??_C@_03EFPAICO@GNF?$AA@
	DD	09H
	DD	FLAT:??_C@_03DDOKOODK@GNS?$AA@
	DD	05H
	DD	FLAT:??_C@_03DIAILPKA@GQE?$AA@
	DD	05H
	DD	FLAT:??_C@_03CDFFDALI@GRD?$AA@
	DD	05H
	DD	FLAT:??_C@_03BAGNKKBO@GTQ?$AA@
	DD	09H
	DD	FLAT:??_C@_03DMIFMDBC@GWE?$AA@
	DD	05H
	DD	FLAT:??_C@_03LDACFAG@GWP?$AA@
	DD	09H
	DD	FLAT:??_C@_03CPAANPFJ@GYD?$AA@
	DD	09H
	DD	FLAT:??_C@_03GIMBLIBB@HKD?$AA@
	DD	09H
	DD	FLAT:??_C@_03KGNDPAPC@HNL?$AA@
	DD	09H
	DD	FLAT:??_C@_03HLDGCAOO@HRD?$AA@
	DD	05H
	DD	FLAT:??_C@_03PMKODMCB@HRK?$AA@
	DD	09H
	DD	FLAT:??_C@_03FEJGAPJP@HTG?$AA@
	DD	09H
	DD	FLAT:??_C@_03EMEPFEOJ@HUF?$AA@
	DD	09H
	DD	FLAT:??_C@_03MHLJCNJO@IDR?$AA@
	DD	09H
	DD	FLAT:??_C@_03PEENCFCL@IEP?$AA@
	DD	05H
	DD	FLAT:??_C@_03PLJMBOKE@ILP?$AA@
	DD	05H
	DD	FLAT:??_C@_03MJKKHMCG@ILR?$AA@
	DD	05H
	DD	FLAT:??_C@_03NALBENGH@ILS?$AA@
	DD	09H
	DD	FLAT:??_C@_03MKCOKIEI@INR?$AA@
	DD	09H
	DD	FLAT:??_C@_03MBMMPJNC@IQD?$AA@
	DD	09H
	DD	FLAT:??_C@_03NPBCPCFM@IRR?$AA@
	DD	09H
	DD	FLAT:??_C@_03FMMLAADC@ISJ?$AA@
	DD	05H
	DD	FLAT:??_C@_03EFNADBHD@ISK?$AA@
	DD	09H
	DD	FLAT:??_C@_03PNOLBDB@ITL?$AA@
	DD	05H
	DD	FLAT:??_C@_03MGEFAMCI@JMD?$AA@
	DD	09H
	DD	FLAT:??_C@_03MFMBNIEG@JOD?$AA@
	DD	09H
	DD	FLAT:??_C@_03CNNHFABH@JPY?$AA@
	DD	09H
	DD	FLAT:??_C@_03HFGJLOGD@KES?$AA@
	DD	09H
	DD	FLAT:??_C@_03HGONGKAN@KGS?$AA@
	DD	09H
	DD	FLAT:??_C@_03GEKKBMHB@KHR?$AA@
	DD	09H
	DD	FLAT:??_C@_03EMMPAJMP@KMF?$AA@
	DD	09H
	DD	FLAT:??_C@_03LOIBKPM@KPW?$AA@
	DD	09H
	DD	FLAT:??_C@_03MFDGMAAM@KRH?$AA@
	DD	05H
	DD	FLAT:??_C@_03IKHHFGML@KRO?$AA@
	DD	05H
	DD	FLAT:??_C@_03IGMMOJC@KRW?$AA@
	DD	09H
	DD	FLAT:??_C@_03GPEIENOL@KWD?$AA@
	DD	09H
	DD	FLAT:??_C@_03GFNGGAOB@KYD?$AA@
	DD	09H
	DD	FLAT:??_C@_03CNFCMMOJ@KZT?$AA@
	DD	09H
	DD	FLAT:??_C@_03GNKMLGFP@LAK?$AA@
	DD	09H
	DD	FLAT:??_C@_03MGNMMDJM@LBP?$AA@
	DD	09H
	DD	FLAT:??_C@_03PLDLJKJB@LKR?$AA@
	DD	09H
	DD	FLAT:??_C@_03PEFELHLJ@LRD?$AA@
	DD	09H
	DD	FLAT:??_C@_03DNEPFHIG@LSL?$AA@
	DD	09H
	DD	FLAT:??_C@_03CEFEGGMH@LSM?$AA@
	DD	05H
	DD	FLAT:??_C@_03DIAAEBAD@LTL?$AA@
	DD	09H
	DD	FLAT:??_C@_03LKBLNJFK@LTT?$AA@
	DD	05H
	DD	FLAT:??_C@_03LOFKDHPL@LUC?$AA@
	DD	06H
	DD	FLAT:??_C@_03MDCNMDLO@LUF?$AA@
	DD	05H
	DD	FLAT:??_C@_03DJMCCLDE@LUL?$AA@
	DD	06H
	DD	FLAT:??_C@_03DLIEJFGN@LVL?$AA@
	DD	09H
	DD	FLAT:??_C@_03OPMFKKLC@LVR?$AA@
	DD	05H
	DD	FLAT:??_C@_03PIABFIFI@LYD?$AA@
	DD	09H
	DD	FLAT:??_C@_03FCIIMNPF@MAD?$AA@
	DD	09H
	DD	FLAT:??_C@_03GALOKPHH@MAF?$AA@
	DD	05H
	DD	FLAT:??_C@_03GDDKHLBJ@MCF?$AA@
	DD	05H
	DD	FLAT:??_C@_03BLACJJNJ@MDC?$AA@
	DD	05H
	DD	FLAT:??_C@_03JMJKIFBG@MDL?$AA@
	DD	09H
	DD	FLAT:??_C@_03CLHCEFAC@MGA?$AA@
	DD	09H
	DD	FLAT:??_C@_03GEDDNDMF@MGF?$AA@
	DD	05H
	DD	FLAT:??_C@_03FPBPEICD@MKD?$AA@
	DD	09H
	DD	FLAT:??_C@_03KFPAKAKJ@MKN?$AA@
	DD	05H
	DD	FLAT:??_C@_03GIGGDMCE@MLF?$AA@
	DD	05H
	DD	FLAT:??_C@_03NMAKCIFO@MMK?$AA@
	DD	09H
	DD	FLAT:??_C@_03BDBGJIJJ@MNT?$AA@
	DD	09H
	DD	FLAT:??_C@_03HGLIDHKK@MOP?$AA@
	DD	09H
	DD	FLAT:??_C@_03KPBMAJBH@MRO?$AA@
	DD	09H
	DD	FLAT:??_C@_03IALMCGGG@MTL?$AA@
	DD	05H
	DD	FLAT:??_C@_03GGMLHLDL@MTP?$AA@
	DD	05H
	DD	FLAT:??_C@_03FFDPHDIO@MUR?$AA@
	DD	09H
	DD	FLAT:??_C@_03GFEPKPFF@MVP?$AA@
	DD	05H
	DD	FLAT:??_C@_03FHHJMNNH@MVR?$AA@
	DD	09H
	DD	FLAT:??_C@_03MNLLAOPI@MWK?$AA@
	DD	09H
	DD	FLAT:??_C@_03LLJALNIA@MXN?$AA@
	DD	09H
	DD	FLAT:??_C@_03GPNBICFP@MXP?$AA@
	DD	05H
	DD	FLAT:??_C@_03DJILCFNJ@MXV?$AA@
	DD	0aH
	DD	FLAT:??_C@_03FMCFIKOK@MYR?$AA@
	DD	09H
	DD	FLAT:??_C@_03FLOALACF@MZE?$AA@
	DD	09H
	DD	FLAT:??_C@_03JDDJDKCN@MZM?$AA@
	DD	05H
	DD	FLAT:??_C@_03LIBEGJOO@MZN?$AA@
	DD	09H
	DD	FLAT:??_C@_03EADNGCBL@NAD?$AA@
	DD	09H
	DD	FLAT:??_C@_03LOFPPGCD@NGN?$AA@
	DD	09H
	DD	FLAT:??_C@_03BGPKFGE@NIC?$AA@
	DD	05H
	DD	FLAT:??_C@_03KNNKOKGI@NIO?$AA@
	DD	09H
	DD	FLAT:??_C@_03GDMIKCIL@NLG?$AA@
	DD	05H
	DD	FLAT:??_C@_03MNDLFDNO@NOK?$AA@
	DD	09H
	DD	FLAT:??_C@_03EBEBBOIL@NPR?$AA@
	DD	09H
	DD	FLAT:??_C@_03FAEOCOIK@NZD?$AA@
	DD	09H
	DD	FLAT:??_C@_03ONADEJMN@OMR?$AA@
	DD	09H
	DD	FLAT:??_C@_03KGKBOFDB@PAB?$AA@
	DD	09H
	DD	FLAT:??_C@_03ECFMJECG@PEI?$AA@
	DD	05H
	DD	FLAT:??_C@_03NBNACOB@PEN?$AA@
	DD	09H
	DD	FLAT:??_C@_03PCHBGOPN@PES?$AA@
	DD	05H
	DD	FLAT:??_C@_03HDOOCCMK@PGK?$AA@
	DD	09H
	DD	FLAT:??_C@_03NBIEKOGN@PHP?$AA@
	DD	09H
	DD	FLAT:??_C@_03OBPEHCLG@PKR?$AA@
	DD	09H
	DD	FLAT:??_C@_03CMMDJGO@PLN?$AA@
	DD	09H
	DD	FLAT:??_C@_03CMGCOODL@PLZ?$AA@
	DD	05H
	DD	FLAT:??_C@_03PDANBCGN@PTE?$AA@
	DD	05H
	DD	FLAT:??_C@_03MJODODLM@PYG?$AA@
	DD	09H
	DD	FLAT:??_C@_03FENPJAAF@QAR?$AA@
	DD	09H
	DD	FLAT:??_C@_03FFCDLBLD@RHD?$AA@
	DD	05H
	DD	FLAT:??_C@_03JILFCNDO@ROL?$AA@
	DD	05H
	DD	FLAT:??_C@_03KKIDEPLM@RON?$AA@
	DD	09H
	DD	FLAT:??_C@_03EFFAPNCC@RSD?$AA@
	DD	09H
	DD	FLAT:??_C@_03BHIHCGBG@RUB?$AA@
	DD	09H
	DD	FLAT:??_C@_03FNEFDEEH@RUR?$AA@
	DD	05H
	DD	FLAT:??_C@_03HAGPDHHM@RWF?$AA@
	DD	09H
	DD	FLAT:??_C@_03PONGFIIO@SAR?$AA@
	DD	09H
	DD	FLAT:??_C@_03OAAIFDAA@SBD?$AA@
	DD	09H
	DD	FLAT:??_C@_03PNFCIMOA@SCR?$AA@
	DD	09H
	DD	FLAT:??_C@_03OEIFCPLC@SDD?$AA@
	DD	05H
	DD	FLAT:??_C@_03MPKIHMHB@SDG?$AA@
	DD	09H
	DD	FLAT:??_C@_03MKCLPIOH@SDP?$AA@
	DD	05H
	DD	FLAT:??_C@_03GCNPFJEK@SEK?$AA@
	DD	09H
	DD	FLAT:??_C@_03OGMDJBOL@SGD?$AA@
	DD	09H
	DD	FLAT:??_C@_03MDDBABID@SHP?$AA@
	DD	09H
	DD	FLAT:??_C@_03KGJPKOLA@SIT?$AA@
	DD	05H
	DD	FLAT:??_C@_03GIEBHEEA@SKK?$AA@
	DD	09H
	DD	FLAT:??_C@_03CCEPPEAC@SLL?$AA@
	DD	09H
	DD	FLAT:??_C@_03ONFDEEMF@SOS?$AA@
	DD	09H
	DD	FLAT:??_C@_03PMCOPAHA@SRD?$AA@
	DD	09H
	DD	FLAT:??_C@_03NHADKDLD@SRG?$AA@
	DD	05H
	DD	FLAT:??_C@_03NDECENBC@SSP?$AA@
	DD	09H
	DD	FLAT:??_C@_03PIKDIMMC@STD?$AA@
	DD	09H
	DD	FLAT:??_C@_03OFPJFDCC@SUR?$AA@
	DD	05H
	DD	FLAT:??_C@_03LEGGMOGL@SVC?$AA@
	DD	09H
	DD	FLAT:??_C@_03NONFMIME@SYP?$AA@
	DD	09H
	DD	FLAT:??_C@_03DKOECLMA@SZL?$AA@
	DD	09H
	DD	FLAT:??_C@_03CGBCEJOJ@THB?$AA@
	DD	09H
	DD	FLAT:??_C@_03GPFEIPNG@TJR?$AA@
	DD	05H
	DD	FLAT:??_C@_03HGEPLOJH@TJS?$AA@
	DD	09H
	DD	FLAT:??_C@_03KHEBJHMN@TMM?$AA@
	DD	05H
	DD	FLAT:??_C@_03DMEBDONF@TMT?$AA@
	DD	09H
	DD	FLAT:??_C@_03HEMFJCNN@TND?$AA@
	DD	09H
	DD	FLAT:??_C@_03FLKJCPLP@TOP?$AA@
	DD	09H
	DD	FLAT:??_C@_03HLGGCNOG@TPE?$AA@
	DD	05H
	DD	FLAT:??_C@_03KJCAECMB@TRL?$AA@
	DD	05H
	DD	FLAT:??_C@_03JOJFKENF@TRY?$AA@
	DD	09H
	DD	FLAT:??_C@_03GFHELEHL@TTD?$AA@
	DD	09H
	DD	FLAT:??_C@_03GHDCAKCC@TWD?$AA@
	DD	09H
	DD	FLAT:??_C@_03GKGJBNOH@TZS?$AA@
	DD	09H
	DD	FLAT:??_C@_03GLJAPNIJ@UAH?$AA@
	DD	09H
	DD	FLAT:??_C@_03EALNKOEK@UAK?$AA@
	DD	05H
	DD	FLAT:??_C@_03MGCLEKKB@UGS?$AA@
	DD	05H
	DD	FLAT:??_C@_03CFNPJDGK@UGX?$AA@
	DD	09H
	DD	FLAT:??_C@_03NIIHMFJL@USD?$AA@
	DD	09H
	DD	FLAT:??_C@_03CCGICNBB@USN?$AA@
	DD	0aH
	DD	FLAT:??_C@_03NNAEEBAN@USS?$AA@
	DD	0aH
	DD	FLAT:??_C@_03GALODOAA@UYI?$AA@
	DD	0aH
	DD	FLAT:??_C@_03PLLOJHBI@UYP?$AA@
	DD	05H
	DD	FLAT:??_C@_03IGMJGDFN@UYU?$AA@
	DD	09H
	DD	FLAT:??_C@_03NCNFHKIC@UZS?$AA@
	DD	09H
	DD	FLAT:??_C@_03IEMDBCDB@VEB?$AA@
	DD	05H
	DD	FLAT:??_C@_03OAKPNHDF@VEF?$AA@
	DD	09H
	DD	FLAT:??_C@_03NOMMFKFG@VND?$AA@
	DD	09H
	DD	FLAT:??_C@_03CECDLCNM@VNN?$AA@
	DD	05H
	DD	FLAT:??_C@_03LGELGGBE@VUV?$AA@
	DD	09H
	DD	FLAT:??_C@_03DIEMBPEB@WST?$AA@
	DD	09H
	DD	FLAT:??_C@_03HHJAINK@XAF?$AA@
	DD	09H
	DD	FLAT:??_C@_03BOGCDJJL@XAG?$AA@
	DD	0aH
	DD	FLAT:??_C@_03GGJGEJEI@XAU?$AA@
	DD	0aH
	DD	FLAT:??_C@_03EKHOCAEE@XBA?$AA@
	DD	0aH
	DD	FLAT:??_C@_03GBFDHDIH@XBB?$AA@
	DD	0aH
	DD	FLAT:??_C@_03HIEIECMG@XBC?$AA@
	DD	0aH
	DD	FLAT:??_C@_03DHAJNEAB@XBD?$AA@
	DD	0aH
	DD	FLAT:??_C@_03DGMLLODG@XCD?$AA@
	DD	09H
	DD	FLAT:??_C@_03CPBMBNGE@XDR?$AA@
	DD	0aH
	DD	FLAT:??_C@_03GBJPOBJE@XEU?$AA@
	DD	06H
	DD	FLAT:??_C@_03NDPEKFBG@XFO?$AA@
	DD	0aH
	DD	FLAT:??_C@_03GDNJFPMN@XFU?$AA@
	DD	0aH
	DD	FLAT:??_C@_03NOHCFNA@XOF?$AA@
	DD	09H
	DD	FLAT:??_C@_03CIKLKDBP@XPD?$AA@
	DD	0aH
	DD	FLAT:??_C@_03BKJNMBJN@XPF?$AA@
	DD	09H
	DD	FLAT:??_C@_03GCGJLBEO@XPT?$AA@
	DD	0aH
	DD	FLAT:??_C@_03DCDEEGDA@XRE?$AA@
	DD	0aH
	DD	FLAT:??_C@_03HJDEDOFG@XSU?$AA@
	DD	0aH
	DD	FLAT:??_C@_03CKCBIPFF@XTS?$AA@
	DD	0aH
	DD	FLAT:??_C@_03FDBHJFLB@XUA?$AA@
	DD	0aH
	DD	FLAT:??_C@_03MAMPKPPK@XXX?$AA@
	DD	0aH
	DD	FLAT:??_C@_03ILDIMPNG@YDD?$AA@
	DD	05H
	DD	FLAT:??_C@_03JGGCBADG@YER?$AA@
	DD	09H
	DD	FLAT:??_C@_03JGNMAGJB@YUD?$AA@
	DD	05H
	DD	FLAT:??_C@_03EHBOLNNI@YUM?$AA@
	DD	05H
	DD	FLAT:??_C@_03GMDDOOBL@YUN?$AA@
	DD	05H
	DD	FLAT:??_C@_03IKEELDEG@YUR?$AA@
	DD	05H
	DD	FLAT:??_C@_03FHJPCINL@ZAL?$AA@
	DD	0aH
	DD	FLAT:??_C@_03IDNOBHAE@ZAR?$AA@
	DD	09H
	DD	FLAT:??_C@_03BBMEEHHI@ZMK?$AA@
	DD	05H
	DD	FLAT:??_C@_03PHLDBKCF@ZMW?$AA@
	DD	09H
	DD	FLAT:??_C@_03HLMJFHHA@ZRN?$AA@
	DD	05H
	DD	FLAT:??_C@_03FFGHIACF@ZRZ?$AA@
	DD	05H
	DD	FLAT:??_C@_03EPDEPHBJ@ZWL?$AA@
	DD	05H
	DD	FLAT:??_C@_03JLHFMIMG@ZWR?$AA@
	DD	05H
	DD	FLAT:??_C@_03IHONHNBB@ZWD?$AA@
	DD	05H
	DD	00H
	DD	00H
_gEnumCurrencyList DD 00H
	DD	00H
	DD	FLAT:_ucurr_closeCurrencyList
	DD	FLAT:_ucurr_countCurrencyList
	DD	FLAT:_uenum_unextDefault_56
	DD	FLAT:_ucurr_nextCurrencyList
	DD	FLAT:_ucurr_resetCurrencyList
_defaultKeywordValues DD 00H
	DD	00H
	DD	FLAT:_ulist_close_keyword_values_iterator_56
	DD	FLAT:_ulist_count_keyword_values_56
	DD	FLAT:_uenum_unextDefault_56
	DD	FLAT:_ulist_next_keyword_value_56
	DD	FLAT:_ulist_reset_keyword_values_iterator_56
CONST	ENDS
;	COMDAT ?MAX_VALUE@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_VALUE@Part@MessagePattern@icu_56@@0HB DD 07fffH	; icu_56::MessagePattern::Part::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB
CONST	SEGMENT
?MAX_LENGTH@Part@MessagePattern@icu_56@@0HB DD 0ffffH	; icu_56::MessagePattern::Part::MAX_LENGTH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA ; `icu_56::EquivIterator::next'::`2'::__LINE__Var
PUBLIC	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z:PROC
;	COMDAT ??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\ucurr.cpp
CONST	SEGMENT
??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@ DB '_'
	DB	00H, 'c', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '_', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'u', 00H
	DB	'c', 00H, 'u', 00H, 'r', 00H, 'r', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA DD 092H ; `icu_56::EquivIterator::next'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ
_TEXT	SEGMENT
__next$ = -20						; size = 4
_this$ = -8						; size = 4
?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ PROC ; icu_56::EquivIterator::next, COMDAT
; _this$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?get@Hashtable@icu_56@@QBEPAXABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __next$[ebp], eax
; Line 148
	cmp	DWORD PTR __next$[ebp], 0
	jne	SHORT $LN2@next
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN5@next
	mov	eax, DWORD PTR ?__LINE__Var@?1??next@EquivIterator@icu_56@@QAEPBVUnicodeString@3@XZ@4JA
	add	eax, 3
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CG@NAHAGBKH@?$AA_?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@next:
; Line 150
	xor	eax, eax
	jmp	SHORT $LN3@next
$LN2@next:
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR __next$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@next
; Line 153
	xor	eax, eax
	jmp	SHORT $LN3@next
$LN1@next:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __next$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 156
	mov	eax, DWORD PTR __next$[ebp]
$LN3@next:
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ENDP ; icu_56::EquivIterator::next
_TEXT	ENDS
PUBLIC	?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z	; CReg::reg
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_register_56
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_register_56
_TEXT	SEGMENT
_id$73435 = -168					; size = 157
__$ArrayPad$ = -4					; size = 4
_isoCode$ = 8						; size = 4
_locale$ = 12						; size = 4
_status$ = 16						; size = 4
_ucurr_register_56 PROC					; COMDAT
; Line 498
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 499
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN1@ucurr_regi
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucurr_regi
; Line 501
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$73435[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z ; idForLocale
	add	esp, 16					; 00000010H
; Line 502
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _id$73435[ebp]
	push	ecx
	mov	edx, DWORD PTR _isoCode$[ebp]
	push	edx
	call	?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z ; CReg::reg
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@ucurr_regi
$LN1@ucurr_regi:
; Line 504
	xor	eax, eax
$LN2@ucurr_regi:
; Line 505
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ucurr_regi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@ucurr_regi:
	DD	1
	DD	$LN5@ucurr_regi
$LN5@ucurr_regi:
	DD	-168					; ffffff58H
	DD	157					; 0000009dH
	DD	$LN4@ucurr_regi
$LN4@ucurr_regi:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_ucurr_register_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_strcat:PROC
EXTRN	_strcmp:PROC
EXTRN	_uloc_getVariant_56:PROC
EXTRN	_uloc_getCountry_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_variant$ = -180					; size = 157
_variantType$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_locale$ = 8						; size = 4
_countryAndVariant$ = 12				; size = 4
_capacity$ = 16						; size = 4
_ec$ = 20						; size = 4
?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z PROC		; idForLocale, COMDAT
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 372
	mov	DWORD PTR _variantType$[ebp], 0
; Line 377
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _countryAndVariant$[ebp]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	_uloc_getCountry_56
	add	esp, 16					; 00000010H
; Line 378
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getVariant_56
	add	esp, 16					; 00000010H
; Line 379
	movsx	eax, BYTE PTR _variant$[ebp]
	test	eax, eax
	je	SHORT $LN2@idForLocal
; Line 381
	push	OFFSET _VAR_EURO
	lea	eax, DWORD PTR _variant$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	add	esi, 1
	push	OFFSET _VAR_PRE_EURO
	lea	ecx, DWORD PTR _variant$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	shl	eax, 1
	or	esi, eax
	mov	DWORD PTR _variantType$[ebp], esi
; Line 382
	je	SHORT $LN2@idForLocal
; Line 384
	push	OFFSET _VAR_DELIM_STR
	mov	eax, DWORD PTR _countryAndVariant$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 385
	lea	eax, DWORD PTR _variant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _countryAndVariant$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN2@idForLocal:
; Line 388
	mov	eax, DWORD PTR _variantType$[ebp]
; Line 389
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@idForLocal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@idForLocal:
	DD	1
	DD	$LN6@idForLocal
$LN6@idForLocal:
	DD	-180					; ffffff4cH
	DD	157					; 0000009dH
	DD	$LN5@idForLocal
$LN5@idForLocal:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z ENDP		; idForLocale
_TEXT	ENDS
PUBLIC	??0CReg@@QAE@PB_WPBD@Z				; CReg::CReg
EXTRN	_umtx_unlock_56:PROC
EXTRN	_ucln_i18n_registerCleanup_56:PROC
EXTRN	_umtx_lock_56:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z$0
__ehfuncinfo$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv80 = -244						; size = 4
$T81979 = -236						; size = 4
$T81980 = -224						; size = 4
_n$73399 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__iso$ = 8						; size = 4
__id$ = 12						; size = 4
_status$ = 16						; size = 4
?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z PROC		; CReg::reg, COMDAT
; Line 428
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 429
	cmp	DWORD PTR _status$[ebp], 0
	je	$LN3@reg
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@reg
	cmp	DWORD PTR __iso$[ebp], 0
	je	$LN3@reg
	cmp	DWORD PTR __id$[ebp], 0
	je	$LN3@reg
; Line 430
	mov	esi, esp
	push	172					; 000000acH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T81980[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T81980[ebp], 0
	je	SHORT $LN6@reg
	mov	eax, DWORD PTR __id$[ebp]
	push	eax
	mov	ecx, DWORD PTR __iso$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T81980[ebp]
	call	??0CReg@@QAE@PB_WPBD@Z			; CReg::CReg
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN7@reg
$LN6@reg:
	mov	DWORD PTR tv80[ebp], 0
$LN7@reg:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T81979[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T81979[ebp]
	mov	DWORD PTR _n$73399[ebp], eax
; Line 431
	cmp	DWORD PTR _n$73399[ebp], 0
	je	SHORT $LN2@reg
; Line 432
	push	OFFSET _gCRegLock
	call	_umtx_lock_56
	add	esp, 4
; Line 433
	cmp	DWORD PTR _gCRegHead, 0
	jne	SHORT $LN1@reg
; Line 435
	push	OFFSET _currency_cleanup
	push	16					; 00000010H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
$LN1@reg:
; Line 437
	mov	eax, DWORD PTR _n$73399[ebp]
	mov	ecx, DWORD PTR _gCRegHead
	mov	DWORD PTR [eax], ecx
; Line 438
	mov	eax, DWORD PTR _n$73399[ebp]
	mov	DWORD PTR _gCRegHead, eax
; Line 439
	push	OFFSET _gCRegLock
	call	_umtx_unlock_56
	add	esp, 4
; Line 440
	mov	eax, DWORD PTR _n$73399[ebp]
	jmp	SHORT $LN4@reg
$LN2@reg:
; Line 442
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@reg:
; Line 444
	xor	eax, eax
$LN4@reg:
; Line 445
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T81980[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reg@CReg@@SAPBXPB_WPBDPAW4UErrorCode@@@Z ENDP		; CReg::reg
EXTRN	_memcpy:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CReg@@QAE@PB_WPBD@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
__iso$ = 8						; size = 4
__id$ = 12						; size = 4
??0CReg@@QAE@PB_WPBD@Z PROC				; CReg::CReg, COMDAT
; _this$ = ecx
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 417
	mov	eax, DWORD PTR __id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 418
	cmp	DWORD PTR _len$[ebp], 156		; 0000009cH
	jle	SHORT $LN1@CReg
; Line 419
	mov	DWORD PTR _len$[ebp], 156		; 0000009cH
$LN1@CReg:
; Line 421
	push	1
	mov	eax, DWORD PTR __id$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR __id$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 423
	push	1
	mov	eax, DWORD PTR __iso$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	6
	mov	ecx, DWORD PTR __iso$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 424
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+10], ax
; Line 425
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CReg@@QAE@PB_WPBD@Z ENDP				; CReg::CReg
_TEXT	ENDS
PUBLIC	?unreg@CReg@@SACPBX@Z				; CReg::unreg
PUBLIC	_ucurr_unregister_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_unregister_56
_TEXT	SEGMENT
_key$ = 8						; size = 4
_status$ = 12						; size = 4
_ucurr_unregister_56 PROC				; COMDAT
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 512
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN1@ucurr_unre
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucurr_unre
; Line 513
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	?unreg@CReg@@SACPBX@Z			; CReg::unreg
	add	esp, 4
	jmp	SHORT $LN2@ucurr_unre
$LN1@ucurr_unre:
; Line 515
	xor	al, al
$LN2@ucurr_unre:
; Line 516
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_unregister_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?unreg@CReg@@SACPBX@Z
_TEXT	SEGMENT
$T81996 = -224						; size = 4
_p$ = -20						; size = 4
_found$ = -5						; size = 1
_key$ = 8						; size = 4
?unreg@CReg@@SACPBX@Z PROC				; CReg::unreg, COMDAT
; Line 447
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 448
	mov	BYTE PTR _found$[ebp], 0
; Line 449
	push	OFFSET _gCRegLock
	call	_umtx_lock_56
	add	esp, 4
; Line 451
	mov	DWORD PTR _p$[ebp], OFFSET _gCRegHead
$LN3@unreg:
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@unreg
; Line 453
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _key$[ebp]
	jne	SHORT $LN1@unreg
; Line 454
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 455
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR $T81996[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR $T81996[ebp]
	push	ecx
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 456
	mov	BYTE PTR _found$[ebp], 1
; Line 457
	jmp	SHORT $LN2@unreg
$LN1@unreg:
; Line 459
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 460
	jmp	SHORT $LN3@unreg
$LN2@unreg:
; Line 462
	push	OFFSET _gCRegLock
	call	_umtx_unlock_56
	add	esp, 4
; Line 463
	mov	al, BYTE PTR _found$[ebp]
; Line 464
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unreg@CReg@@SACPBX@Z ENDP				; CReg::unreg
_TEXT	ENDS
PUBLIC	?cleanup@CReg@@SAXXZ				; CReg::cleanup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _currency_cleanup
_TEXT	SEGMENT
_currency_cleanup PROC					; COMDAT
; Line 531
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 533
	call	?cleanup@CReg@@SAXXZ			; CReg::cleanup
; Line 538
	call	?currency_cache_cleanup@@YACXZ		; currency_cache_cleanup
; Line 539
	call	?isoCodes_cleanup@@YACXZ		; isoCodes_cleanup
; Line 540
	call	?currSymbolsEquiv_cleanup@@YACXZ	; currSymbolsEquiv_cleanup
; Line 542
	mov	al, 1
; Line 543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_currency_cleanup ENDP
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
EXTRN	_uhash_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isoCodes_cleanup@@YACXZ
_TEXT	SEGMENT
?isoCodes_cleanup@@YACXZ PROC				; isoCodes_cleanup, COMDAT
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	cmp	DWORD PTR _gIsoCodes, 0
	je	SHORT $LN1@isoCodes_c
; Line 253
	mov	eax, DWORD PTR _gIsoCodes
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 254
	mov	DWORD PTR _gIsoCodes, 0
$LN1@isoCodes_c:
; Line 256
	mov	ecx, OFFSET _gIsoCodesInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 257
	mov	al, 1
; Line 258
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isoCodes_cleanup@@YACXZ ENDP				; isoCodes_cleanup
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
_TEXT	ENDS
PUBLIC	??_GHashtable@icu_56@@QAEPAXI@Z			; icu_56::Hashtable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?currSymbolsEquiv_cleanup@@YACXZ
_TEXT	SEGMENT
tv68 = -220						; size = 4
$T82005 = -212						; size = 4
$T82006 = -200						; size = 4
?currSymbolsEquiv_cleanup@@YACXZ PROC			; currSymbolsEquiv_cleanup, COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucurr.cpp
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 266
	mov	eax, DWORD PTR _gCurrSymbolsEquiv
	mov	DWORD PTR $T82006[ebp], eax
	mov	ecx, DWORD PTR $T82006[ebp]
	mov	DWORD PTR $T82005[ebp], ecx
	cmp	DWORD PTR $T82005[ebp], 0
	je	SHORT $LN3@currSymbol
	push	1
	mov	ecx, DWORD PTR $T82005[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@currSymbol
$LN3@currSymbol:
	mov	DWORD PTR tv68[ebp], 0
$LN4@currSymbol:
; Line 267
	mov	DWORD PTR _gCurrSymbolsEquiv, 0
; Line 268
	mov	ecx, OFFSET _gCurrSymbolsEquivInitOnce
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 269
	mov	al, 1
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?currSymbolsEquiv_cleanup@@YACXZ ENDP			; currSymbolsEquiv_cleanup
_TEXT	ENDS
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GHashtable@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GHashtable@icu_56@@QAEPAXI@Z PROC			; icu_56::Hashtable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GHashtable@icu_56@@QAEPAXI@Z ENDP			; icu_56::Hashtable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?cleanup@CReg@@SAXXZ
_TEXT	SEGMENT
$T82013 = -212						; size = 4
_n$73427 = -8						; size = 4
?cleanup@CReg@@SAXXZ PROC				; CReg::cleanup, COMDAT
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@cleanup:
; Line 486
	cmp	DWORD PTR _gCRegHead, 0
	je	SHORT $LN3@cleanup
; Line 487
	mov	eax, DWORD PTR _gCRegHead
	mov	DWORD PTR _n$73427[ebp], eax
; Line 488
	mov	eax, DWORD PTR _gCRegHead
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _gCRegHead, ecx
; Line 489
	mov	eax, DWORD PTR _n$73427[ebp]
	mov	DWORD PTR $T82013[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR $T82013[ebp]
	push	ecx
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 490
	jmp	SHORT $LN2@cleanup
$LN3@cleanup:
; Line 491
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cleanup@CReg@@SAXXZ ENDP				; CReg::cleanup
_TEXT	ENDS
PUBLIC	??_C@_02EGCJHIOB@id?$AA@			; `string'
PUBLIC	??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@		; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	?get@CReg@@SAPB_WPBD@Z				; CReg::get
PUBLIC	??_C@_08JLPCGLMH@currency?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_forLocale_56
EXTRN	_u_terminateUChars_56:PROC
EXTRN	_uloc_getParent_56:PROC
EXTRN	_ures_close_56:PROC
EXTRN	_u_strcmp_56:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	_ures_getByIndex_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_openDirect_56:PROC
EXTRN	_u_strcpy_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	_u_charsToUChars_56:PROC
EXTRN	_T_CString_toUpperCase_56:PROC
EXTRN	_uloc_getKeywordValue_56:PROC
;	COMDAT ??_C@_02EGCJHIOB@id?$AA@
CONST	SEGMENT
??_C@_02EGCJHIOB@id?$AA@ DB 'id', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
CONST	SEGMENT
??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@ DB 'icudt56l-curr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLPCGLMH@currency?$AA@
CONST	SEGMENT
??_C@_08JLPCGLMH@currency?$AA@ DB 'currency', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucurr_forLocale_56
_TEXT	SEGMENT
_currencyReq$73474 = -288				; size = 4
_countryArray$73473 = -276				; size = 4
_cm$73472 = -264					; size = 4
_rb$73471 = -252					; size = 4
_idDelim$73469 = -240					; size = 4
_result$73466 = -228					; size = 4
_variantType$73464 = -216				; size = 4
_id$73459 = -204					; size = 157
_localStatus$73458 = -36				; size = 4
_s$ = -24						; size = 4
_resLen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_locale$ = 8						; size = 4
_buff$ = 12						; size = 4
_buffCapacity$ = 16					; size = 4
_ec$ = 20						; size = 4
_ucurr_forLocale_56 PROC				; COMDAT
; Line 553
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 554
	mov	DWORD PTR _resLen$[ebp], 0
; Line 555
	mov	DWORD PTR _s$[ebp], 0
; Line 556
	cmp	DWORD PTR _ec$[ebp], 0
	je	$LN22@ucurr_forL
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN22@ucurr_forL
; Line 557
	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $LN19@ucurr_forL
	cmp	DWORD PTR _buffCapacity$[ebp], 0
	jne	SHORT $LN20@ucurr_forL
$LN19@ucurr_forL:
	cmp	DWORD PTR _buffCapacity$[ebp], 0
	jne	$LN21@ucurr_forL
$LN20@ucurr_forL:
; Line 558
	mov	DWORD PTR _localStatus$73458[ebp], 0
; Line 560
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$73459[ebp]
	push	ecx
	push	OFFSET ??_C@_08JLPCGLMH@currency?$AA@
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _resLen$[ebp], eax
	cmp	DWORD PTR _resLen$[ebp], 0
	je	SHORT $LN18@ucurr_forL
; Line 562
	mov	eax, DWORD PTR _buffCapacity$[ebp]
	cmp	eax, DWORD PTR _resLen$[ebp]
	jle	SHORT $LN17@ucurr_forL
; Line 564
	lea	eax, DWORD PTR _id$73459[ebp]
	push	eax
	call	_T_CString_toUpperCase_56
	add	esp, 4
; Line 565
	mov	eax, DWORD PTR _resLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buff$[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$73459[ebp]
	push	edx
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
$LN17@ucurr_forL:
; Line 567
	jmp	$LN16@ucurr_forL
$LN18@ucurr_forL:
; Line 569
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$73459[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z ; idForLocale
	add	esp, 16					; 00000010H
	mov	DWORD PTR _variantType$73464[ebp], eax
; Line 571
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@ucurr_forL
; Line 572
	xor	eax, eax
	jmp	$LN23@ucurr_forL
$LN15@ucurr_forL:
; Line 576
	lea	eax, DWORD PTR _id$73459[ebp]
	push	eax
	call	?get@CReg@@SAPB_WPBD@Z			; CReg::get
	add	esp, 4
	mov	DWORD PTR _result$73466[ebp], eax
; Line 577
	cmp	DWORD PTR _result$73466[ebp], 0
	je	SHORT $LN14@ucurr_forL
; Line 578
	mov	eax, DWORD PTR _result$73466[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	cmp	DWORD PTR _buffCapacity$[ebp], eax
	jle	SHORT $LN13@ucurr_forL
; Line 579
	mov	eax, DWORD PTR _result$73466[ebp]
	push	eax
	mov	ecx, DWORD PTR _buff$[ebp]
	push	ecx
	call	_u_strcpy_56
	add	esp, 8
$LN13@ucurr_forL:
; Line 581
	mov	eax, DWORD PTR _result$73466[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	jmp	$LN23@ucurr_forL
$LN14@ucurr_forL:
; Line 585
	push	95					; 0000005fH
	lea	eax, DWORD PTR _id$73459[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _idDelim$73469[ebp], eax
; Line 586
	cmp	DWORD PTR _idDelim$73469[ebp], 0
	je	SHORT $LN12@ucurr_forL
; Line 587
	mov	eax, DWORD PTR _idDelim$73469[ebp]
	mov	BYTE PTR [eax], 0
$LN12@ucurr_forL:
; Line 591
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	push	OFFSET _CURRENCY_DATA
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$73471[ebp], eax
; Line 592
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$73471[ebp]
	push	ecx
	push	OFFSET _CURRENCY_MAP
	mov	edx, DWORD PTR _rb$73471[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cm$73472[ebp], eax
; Line 593
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	mov	ecx, DWORD PTR _cm$73472[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$73459[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$73471[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _countryArray$73473[ebp], eax
; Line 594
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _countryArray$73473[ebp]
	push	ecx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyReq$73474[ebp], eax
; Line 595
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	mov	edx, DWORD PTR _currencyReq$73474[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 604
	mov	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@ucurr_forL
; Line 605
	mov	eax, DWORD PTR _variantType$73464[ebp]
	and	eax, 2
	je	SHORT $LN10@ucurr_forL
	push	OFFSET _EUR_STR
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strcmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ucurr_forL
; Line 606
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencyReq$73474[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _countryArray$73473[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyReq$73474[ebp], eax
; Line 607
	lea	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	mov	edx, DWORD PTR _currencyReq$73474[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
	jmp	SHORT $LN11@ucurr_forL
$LN10@ucurr_forL:
; Line 609
	mov	eax, DWORD PTR _variantType$73464[ebp]
	and	eax, 1
	je	SHORT $LN11@ucurr_forL
; Line 610
	mov	DWORD PTR _s$[ebp], OFFSET _EUR_STR
$LN11@ucurr_forL:
; Line 613
	mov	eax, DWORD PTR _countryArray$73473[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 614
	mov	eax, DWORD PTR _currencyReq$73474[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 616
	mov	eax, DWORD PTR _localStatus$73458[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ucurr_forL
	push	95					; 0000005fH
	lea	eax, DWORD PTR _id$73459[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@ucurr_forL
; Line 619
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$73459[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
; Line 620
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], -128			; ffffff80H
; Line 621
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	lea	eax, DWORD PTR _id$73459[ebp]
	push	eax
	call	_ucurr_forLocale_56
	add	esp, 16					; 00000010H
	jmp	SHORT $LN23@ucurr_forL
	jmp	SHORT $LN6@ucurr_forL
$LN7@ucurr_forL:
; Line 623
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@ucurr_forL
	cmp	DWORD PTR _localStatus$73458[ebp], 0
	je	SHORT $LN6@ucurr_forL
$LN4@ucurr_forL:
; Line 625
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _localStatus$73458[ebp]
	mov	DWORD PTR [eax], ecx
$LN6@ucurr_forL:
; Line 627
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@ucurr_forL
; Line 628
	mov	eax, DWORD PTR _buffCapacity$[ebp]
	cmp	eax, DWORD PTR _resLen$[ebp]
	jle	SHORT $LN16@ucurr_forL
; Line 629
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buff$[ebp]
	push	ecx
	call	_u_strcpy_56
	add	esp, 8
$LN16@ucurr_forL:
; Line 633
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
	jmp	SHORT $LN23@ucurr_forL
; Line 634
	jmp	SHORT $LN22@ucurr_forL
$LN21@ucurr_forL:
; Line 635
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN22@ucurr_forL:
; Line 638
	mov	eax, DWORD PTR _resLen$[ebp]
$LN23@ucurr_forL:
; Line 639
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@ucurr_forL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@ucurr_forL:
	DD	3
	DD	$LN28@ucurr_forL
$LN28@ucurr_forL:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN25@ucurr_forL
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN26@ucurr_forL
	DD	-204					; ffffff34H
	DD	157					; 0000009dH
	DD	$LN27@ucurr_forL
$LN27@ucurr_forL:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN26@ucurr_forL:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN25@ucurr_forL:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ucurr_forLocale_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@CReg@@SAPB_WPBD@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_result$ = -8						; size = 4
_id$ = 8						; size = 4
?get@CReg@@SAPB_WPBD@Z PROC				; CReg::get, COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucurr.cpp
; Line 466
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 467
	mov	DWORD PTR _result$[ebp], 0
; Line 468
	push	OFFSET _gCRegLock
	call	_umtx_lock_56
	add	esp, 4
; Line 469
	mov	eax, DWORD PTR _gCRegHead
	mov	DWORD PTR _p$[ebp], eax
; Line 472
	push	OFFSET _currency_cleanup
	push	16					; 00000010H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
$LN3@get:
; Line 473
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@get
; Line 474
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@get
; Line 475
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 476
	jmp	SHORT $LN2@get
$LN1@get:
; Line 478
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 479
	jmp	SHORT $LN3@get
$LN2@get:
; Line 480
	push	OFFSET _gCRegLock
	call	_umtx_unlock_56
	add	esp, 4
; Line 481
	mov	eax, DWORD PTR _result$[ebp]
; Line 482
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get@CReg@@SAPB_WPBD@Z ENDP				; CReg::get
_TEXT	ENDS
PUBLIC	??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??ucurr_getName_56@@9@4JA	; `ucurr_getName_56'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_getName_56
EXTRN	_ures_getStringByIndex_56:PROC
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	_uloc_getName_56:PROC
;	COMDAT ??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 's', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??ucurr_getName_56@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??ucurr_getName_56@@9@4JA DD 02a1H	; `ucurr_getName_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _ucurr_getName_56
_TEXT	SEGMENT
_i$73520 = -240						; size = 4
_rb$ = -228						; size = 4
_s$ = -216						; size = 4
_buf$ = -204						; size = 4
_loc$ = -192						; size = 157
_ec2$ = -24						; size = 4
_choice$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_currency$ = 8						; size = 4
_locale$ = 12						; size = 4
_nameStyle$ = 16					; size = 4
_isChoiceFormat$ = 20					; size = 4
_len$ = 24						; size = 4
_ec$ = 28						; size = 4
_ucurr_getName_56 PROC					; COMDAT
; Line 673
	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 686
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@ucurr_getN
; Line 687
	xor	eax, eax
	jmp	$LN13@ucurr_getN
$LN12@ucurr_getN:
; Line 690
	mov	eax, DWORD PTR _nameStyle$[ebp]
	mov	DWORD PTR _choice$[ebp], eax
; Line 691
	cmp	DWORD PTR _choice$[ebp], 0
	jl	SHORT $LN10@ucurr_getN
	cmp	DWORD PTR _choice$[ebp], 1
	jle	SHORT $LN11@ucurr_getN
$LN10@ucurr_getN:
; Line 692
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 693
	xor	eax, eax
	jmp	$LN13@ucurr_getN
$LN11@ucurr_getN:
; Line 707
	mov	DWORD PTR _ec2$[ebp], 0
; Line 710
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getName_56
	add	esp, 16					; 00000010H
; Line 711
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@ucurr_getN
	cmp	DWORD PTR _ec2$[ebp], -124		; ffffff84H
	jne	SHORT $LN9@ucurr_getN
$LN8@ucurr_getN:
; Line 712
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 713
	xor	eax, eax
	jmp	$LN13@ucurr_getN
$LN9@ucurr_getN:
; Line 717
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?myUCharsToChars@@YAPADPADPB_W@Z	; myUCharsToChars
	add	esp, 8
; Line 720
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_T_CString_toUpperCase_56
	add	esp, 4
; Line 722
	mov	DWORD PTR _s$[ebp], 0
; Line 723
	mov	DWORD PTR _ec2$[ebp], 0
; Line 724
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 726
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _CURRENCIES
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 729
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 731
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _choice$[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 732
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 736
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ucurr_getN
; Line 738
	cmp	DWORD PTR _ec2$[ebp], -127		; ffffff81H
	je	SHORT $LN5@ucurr_getN
	cmp	DWORD PTR _ec2$[ebp], -128		; ffffff80H
	jne	SHORT $LN7@ucurr_getN
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], -127			; ffffff81H
	je	SHORT $LN7@ucurr_getN
$LN5@ucurr_getN:
; Line 739
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _ec2$[ebp]
	mov	DWORD PTR [eax], ecx
$LN7@ucurr_getN:
; Line 748
	mov	eax, DWORD PTR _isChoiceFormat$[ebp]
	mov	BYTE PTR [eax], 0
; Line 749
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@ucurr_getN
; Line 750
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN15@ucurr_getN
	mov	eax, DWORD PTR ?__LINE__Var@?1??ucurr_getName_56@@9@4JA
	add	eax, 77					; 0000004dH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@ucurr_getN:
; Line 751
	mov	DWORD PTR _i$73520[ebp], 0
$LN3@ucurr_getN:
; Line 752
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _i$73520[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN2@ucurr_getN
	mov	eax, DWORD PTR _i$73520[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 61					; 0000003dH
	jne	SHORT $LN2@ucurr_getN
	cmp	DWORD PTR _i$73520[ebp], 2
	jge	SHORT $LN2@ucurr_getN
; Line 753
	mov	eax, DWORD PTR _i$73520[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73520[ebp], eax
; Line 754
	jmp	SHORT $LN3@ucurr_getN
$LN2@ucurr_getN:
; Line 755
	cmp	DWORD PTR _i$73520[ebp], 1
	sete	al
	mov	ecx, DWORD PTR _isChoiceFormat$[ebp]
	mov	BYTE PTR [ecx], al
; Line 756
	cmp	DWORD PTR _i$73520[ebp], 0
	je	SHORT $LN1@ucurr_getN
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN1@ucurr_getN:
; Line 757
	mov	eax, DWORD PTR _s$[ebp]
	jmp	SHORT $LN13@ucurr_getN
$LN4@ucurr_getN:
; Line 761
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 762
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 763
	mov	eax, DWORD PTR _currency$[ebp]
$LN13@ucurr_getN:
; Line 764
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ucurr_getN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@ucurr_getN:
	DD	3
	DD	$LN19@ucurr_getN
$LN19@ucurr_getN:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN16@ucurr_getN
	DD	-192					; ffffff40H
	DD	157					; 0000009dH
	DD	$LN17@ucurr_getN
	DD	-204					; ffffff34H
	DD	4
	DD	$LN18@ucurr_getN
$LN18@ucurr_getN:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN17@ucurr_getN:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN16@ucurr_getN:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
_ucurr_getName_56 ENDP
_TEXT	ENDS
EXTRN	_u_UCharsToChars_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?myUCharsToChars@@YAPADPADPB_W@Z
_TEXT	SEGMENT
_resultOfLen4$ = 8					; size = 4
_currency$ = 12						; size = 4
?myUCharsToChars@@YAPADPADPB_W@Z PROC			; myUCharsToChars, COMDAT
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 296
	push	3
	mov	eax, DWORD PTR _resultOfLen4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 297
	mov	eax, DWORD PTR _resultOfLen4$[ebp]
	mov	BYTE PTR [eax+3], 0
; Line 298
	mov	eax, DWORD PTR _resultOfLen4$[ebp]
; Line 299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?myUCharsToChars@@YAPADPADPB_W@Z ENDP			; myUCharsToChars
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA	; `ucurr_getPluralName_56'::`2'::__LINE__Var
PUBLIC	??_C@_05BGEKGIIP@other?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_getPluralName_56
EXTRN	_ures_getStringByKeyWithFallback_56:PROC
;	COMDAT ?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA DD 0304H	; `ucurr_getPluralName_56'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05BGEKGIIP@other?$AA@
CONST	SEGMENT
??_C@_05BGEKGIIP@other?$AA@ DB 'other', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucurr_getPluralName_56
_TEXT	SEGMENT
_rb$ = -216						; size = 4
_s$ = -204						; size = 4
_buf$ = -192						; size = 4
_loc$ = -180						; size = 157
_ec2$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_currency$ = 8						; size = 4
_locale$ = 12						; size = 4
_isChoiceFormat$ = 16					; size = 4
_pluralCount$ = 20					; size = 4
_len$ = 24						; size = 4
_ec$ = 28						; size = 4
_ucurr_getPluralName_56 PROC				; COMDAT
; Line 772
	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 784
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@ucurr_getP
; Line 785
	xor	eax, eax
	jmp	$LN9@ucurr_getP
$LN8@ucurr_getP:
; Line 790
	mov	DWORD PTR _ec2$[ebp], 0
; Line 793
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getName_56
	add	esp, 16					; 00000010H
; Line 794
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@ucurr_getP
	cmp	DWORD PTR _ec2$[ebp], -124		; ffffff84H
	jne	SHORT $LN7@ucurr_getP
$LN6@ucurr_getP:
; Line 795
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 796
	xor	eax, eax
	jmp	$LN9@ucurr_getP
$LN7@ucurr_getP:
; Line 800
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?myUCharsToChars@@YAPADPADPB_W@Z	; myUCharsToChars
	add	esp, 8
; Line 802
	mov	DWORD PTR _s$[ebp], 0
; Line 803
	mov	DWORD PTR _ec2$[ebp], 0
; Line 804
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 806
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _CURRENCYPLURALS
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 809
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 811
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pluralCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 812
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@ucurr_getP
; Line 814
	mov	DWORD PTR _ec2$[ebp], 0
; Line 815
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_05BGEKGIIP@other?$AA@
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 816
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@ucurr_getP
; Line 817
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 820
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _isChoiceFormat$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	_ucurr_getName_56
	add	esp, 24					; 00000018H
	jmp	$LN9@ucurr_getP
$LN5@ucurr_getP:
; Line 823
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 827
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@ucurr_getP
; Line 829
	cmp	DWORD PTR _ec2$[ebp], -127		; ffffff81H
	je	SHORT $LN1@ucurr_getP
	cmp	DWORD PTR _ec2$[ebp], -128		; ffffff80H
	jne	SHORT $LN2@ucurr_getP
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], -127			; ffffff81H
	je	SHORT $LN2@ucurr_getP
$LN1@ucurr_getP:
; Line 830
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _ec2$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@ucurr_getP:
; Line 832
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN11@ucurr_getP
	mov	eax, DWORD PTR ?__LINE__Var@?1??ucurr_getPluralName_56@@9@4JA
	add	eax, 60					; 0000003cH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1O@OJKLBIIL@?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@ucurr_getP:
; Line 833
	mov	eax, DWORD PTR _s$[ebp]
	jmp	SHORT $LN9@ucurr_getP
$LN3@ucurr_getP:
; Line 837
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 838
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
; Line 839
	mov	eax, DWORD PTR _currency$[ebp]
$LN9@ucurr_getP:
; Line 840
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@ucurr_getP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@ucurr_getP:
	DD	3
	DD	$LN15@ucurr_getP
$LN15@ucurr_getP:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN12@ucurr_getP
	DD	-180					; ffffff4cH
	DD	157					; 0000009dH
	DD	$LN13@ucurr_getP
	DD	-192					; ffffff40H
	DD	4
	DD	$LN14@ucurr_getP
$LN14@ucurr_getP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN13@ucurr_getP:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN12@ucurr_getP:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
_ucurr_getPluralName_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?currency_cache_cleanup@@YACXZ
_TEXT	SEGMENT
_i$73838 = -8						; size = 4
?currency_cache_cleanup@@YACXZ PROC			; currency_cache_cleanup, COMDAT
; Line 1442
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1443
	mov	DWORD PTR _i$73838[ebp], 0
	jmp	SHORT $LN4@currency_c
$LN3@currency_c:
	mov	eax, DWORD PTR _i$73838[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73838[ebp], eax
$LN4@currency_c:
	cmp	DWORD PTR _i$73838[ebp], 10		; 0000000aH
	jge	SHORT $LN2@currency_c
; Line 1444
	mov	eax, DWORD PTR _i$73838[ebp]
	cmp	DWORD PTR _currCache[eax*4], 0
	je	SHORT $LN1@currency_c
; Line 1445
	mov	eax, DWORD PTR _i$73838[ebp]
	mov	ecx, DWORD PTR _currCache[eax*4]
	push	ecx
	call	?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z ; deleteCacheEntry
	add	esp, 4
; Line 1446
	mov	eax, DWORD PTR _i$73838[ebp]
	mov	DWORD PTR _currCache[eax*4], 0
$LN1@currency_c:
; Line 1448
	jmp	SHORT $LN3@currency_c
$LN2@currency_c:
; Line 1449
	mov	al, 1
; Line 1450
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?currency_cache_cleanup@@YACXZ ENDP			; currency_cache_cleanup
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z
_TEXT	SEGMENT
_entry$ = 8						; size = 4
?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z PROC ; deleteCacheEntry, COMDAT
; Line 1433
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1434
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	push	ecx
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	call	?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z ; deleteCurrencyNames
	add	esp, 8
; Line 1435
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+168]
	push	eax
	call	?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z ; deleteCurrencyNames
	add	esp, 8
; Line 1436
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1437
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z ENDP ; deleteCacheEntry
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z
_TEXT	SEGMENT
_index$73827 = -8					; size = 4
_currencyNames$ = 8					; size = 4
_count$ = 12						; size = 4
?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z PROC ; deleteCurrencyNames, COMDAT
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1423
	mov	DWORD PTR _index$73827[ebp], 0
	jmp	SHORT $LN4@deleteCurr
$LN3@deleteCurr:
	mov	eax, DWORD PTR _index$73827[ebp]
	add	eax, 1
	mov	DWORD PTR _index$73827[ebp], eax
$LN4@deleteCurr:
	mov	eax, DWORD PTR _index$73827[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@deleteCurr
; Line 1424
	mov	eax, DWORD PTR _index$73827[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+12]
	and	edx, 1
	je	SHORT $LN1@deleteCurr
; Line 1425
	mov	eax, DWORD PTR _index$73827[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_uprv_free_56
	add	esp, 4
$LN1@deleteCurr:
; Line 1427
	jmp	SHORT $LN3@deleteCurr
$LN2@deleteCurr:
; Line 1428
	mov	eax, DWORD PTR _currencyNames$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1429
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z ENDP ; deleteCurrencyNames
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uprv_parseCurrency_56
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	_u_strToUpper_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	_strcpy:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_parseCurrency_56
_TEXT	SEGMENT
tv209 = -808						; size = 4
_matchIndexInSymbol$ = -608				; size = 4
_maxInSymbol$ = -596					; size = 4
_matchIndex$ = -584					; size = 4
_max$ = -572						; size = 4
_ec1$ = -560						; size = 4
_textLen$ = -548					; size = 4
_upperText$ = -536					; size = 200
_inputText$ = -328					; size = 200
_start$ = -120						; size = 4
_i$73867 = -105						; size = 1
_found$73866 = -93					; size = 1
_i$73858 = -81						; size = 1
_found$ = -69						; size = 1
_cacheEntry$ = -60					; size = 4
_currencySymbols$ = -48					; size = 4
_total_currency_symbol_count$ = -36			; size = 4
_currencyNames$ = -24					; size = 4
_total_currency_name_count$ = -12			; size = 4
__$ArrayPad$ = -4					; size = 4
_locale$ = 8						; size = 4
_text$ = 12						; size = 4
_pos$ = 16						; size = 4
_type$ = 20						; size = 1
_result$ = 24						; size = 4
_ec$ = 28						; size = 4
_uprv_parseCurrency_56 PROC				; COMDAT
; Line 1460
	push	ebp
	mov	ebp, esp
	sub	esp, 808				; 00000328H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-808]
	mov	ecx, 202				; 000000caH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1463
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@uprv_parse
; Line 1464
	jmp	$LN22@uprv_parse
$LN21@uprv_parse:
; Line 1467
	mov	DWORD PTR _total_currency_name_count$[ebp], 0
; Line 1468
	mov	DWORD PTR _currencyNames$[ebp], 0
; Line 1469
	mov	DWORD PTR _total_currency_symbol_count$[ebp], 0
; Line 1470
	mov	DWORD PTR _currencySymbols$[ebp], 0
; Line 1471
	mov	DWORD PTR _cacheEntry$[ebp], 0
; Line 1473
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1476
	mov	BYTE PTR _found$[ebp], -1
; Line 1477
	mov	BYTE PTR _i$73858[ebp], 0
	jmp	SHORT $LN20@uprv_parse
$LN19@uprv_parse:
	mov	al, BYTE PTR _i$73858[ebp]
	add	al, 1
	mov	BYTE PTR _i$73858[ebp], al
$LN20@uprv_parse:
	movsx	eax, BYTE PTR _i$73858[ebp]
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN18@uprv_parse
; Line 1479
	movsx	eax, BYTE PTR _i$73858[ebp]
	cmp	DWORD PTR _currCache[eax*4], 0
	je	SHORT $LN17@uprv_parse
	movsx	eax, BYTE PTR _i$73858[ebp]
	mov	ecx, DWORD PTR _currCache[eax*4]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@uprv_parse
; Line 1480
	mov	al, BYTE PTR _i$73858[ebp]
	mov	BYTE PTR _found$[ebp], al
; Line 1481
	jmp	SHORT $LN18@uprv_parse
$LN17@uprv_parse:
; Line 1483
	jmp	SHORT $LN19@uprv_parse
$LN18@uprv_parse:
; Line 1484
	movsx	eax, BYTE PTR _found$[ebp]
	cmp	eax, -1
	je	SHORT $LN16@uprv_parse
; Line 1485
	movsx	eax, BYTE PTR _found$[ebp]
	mov	ecx, DWORD PTR _currCache[eax*4]
	mov	DWORD PTR _cacheEntry$[ebp], ecx
; Line 1486
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _currencyNames$[ebp], ecx
; Line 1487
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _total_currency_name_count$[ebp], ecx
; Line 1488
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _currencySymbols$[ebp], ecx
; Line 1489
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _total_currency_symbol_count$[ebp], ecx
; Line 1490
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	add	ecx, 1
	mov	edx, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR [edx+176], ecx
$LN16@uprv_parse:
; Line 1492
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
; Line 1493
	movsx	eax, BYTE PTR _found$[ebp]
	cmp	eax, -1
	jne	$LN15@uprv_parse
; Line 1494
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	push	ecx
	lea	edx, DWORD PTR _currencySymbols$[ebp]
	push	edx
	lea	eax, DWORD PTR _total_currency_name_count$[ebp]
	push	eax
	lea	ecx, DWORD PTR _currencyNames$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z ; collectCurrencyNames
	add	esp, 24					; 00000018H
; Line 1495
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@uprv_parse
; Line 1496
	jmp	$LN22@uprv_parse
$LN14@uprv_parse:
; Line 1498
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1500
	mov	BYTE PTR _found$73866[ebp], -1
; Line 1501
	mov	BYTE PTR _i$73867[ebp], 0
	jmp	SHORT $LN13@uprv_parse
$LN12@uprv_parse:
	mov	al, BYTE PTR _i$73867[ebp]
	add	al, 1
	mov	BYTE PTR _i$73867[ebp], al
$LN13@uprv_parse:
	movsx	eax, BYTE PTR _i$73867[ebp]
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN11@uprv_parse
; Line 1503
	movsx	eax, BYTE PTR _i$73867[ebp]
	cmp	DWORD PTR _currCache[eax*4], 0
	je	SHORT $LN10@uprv_parse
	movsx	eax, BYTE PTR _i$73867[ebp]
	mov	ecx, DWORD PTR _currCache[eax*4]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@uprv_parse
; Line 1504
	mov	al, BYTE PTR _i$73867[ebp]
	mov	BYTE PTR _found$73866[ebp], al
; Line 1505
	jmp	SHORT $LN11@uprv_parse
$LN10@uprv_parse:
; Line 1507
	jmp	SHORT $LN12@uprv_parse
$LN11@uprv_parse:
; Line 1508
	movsx	eax, BYTE PTR _found$73866[ebp]
	cmp	eax, -1
	jne	$LN9@uprv_parse
; Line 1514
	movsx	eax, BYTE PTR _currentCacheEntryIndex
	mov	ecx, DWORD PTR _currCache[eax*4]
	mov	DWORD PTR _cacheEntry$[ebp], ecx
; Line 1515
	cmp	DWORD PTR _cacheEntry$[ebp], 0
	je	SHORT $LN8@uprv_parse
; Line 1516
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	sub	ecx, 1
	mov	edx, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR [edx+176], ecx
; Line 1518
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	cmp	DWORD PTR [eax+176], 0
	jne	SHORT $LN8@uprv_parse
; Line 1519
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	push	eax
	call	?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z ; deleteCacheEntry
	add	esp, 4
$LN8@uprv_parse:
; Line 1522
	push	180					; 000000b4H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _cacheEntry$[ebp], eax
; Line 1523
	movsx	eax, BYTE PTR _currentCacheEntryIndex
	mov	ecx, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR _currCache[eax*4], ecx
; Line 1524
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cacheEntry$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1525
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	DWORD PTR [eax+160], ecx
; Line 1526
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [eax+164], ecx
; Line 1527
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR _currencySymbols$[ebp]
	mov	DWORD PTR [eax+168], ecx
; Line 1528
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [eax+172], ecx
; Line 1529
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR [eax+176], 2
; Line 1530
	movsx	eax, BYTE PTR _currentCacheEntryIndex
	add	eax, 1
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	BYTE PTR _currentCacheEntryIndex, dl
; Line 1531
	push	OFFSET ?currency_cache_cleanup@@YACXZ	; currency_cache_cleanup
	push	16					; 00000010H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 1533
	jmp	SHORT $LN6@uprv_parse
$LN9@uprv_parse:
; Line 1534
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	push	ecx
	call	?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z ; deleteCurrencyNames
	add	esp, 8
; Line 1535
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencySymbols$[ebp]
	push	ecx
	call	?deleteCurrencyNames@@YAXPAUCurrencyNameStruct@@H@Z ; deleteCurrencyNames
	add	esp, 8
; Line 1536
	movsx	eax, BYTE PTR _found$73866[ebp]
	mov	ecx, DWORD PTR _currCache[eax*4]
	mov	DWORD PTR _cacheEntry$[ebp], ecx
; Line 1537
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _currencyNames$[ebp], ecx
; Line 1538
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _total_currency_name_count$[ebp], ecx
; Line 1539
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _currencySymbols$[ebp], ecx
; Line 1540
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _total_currency_symbol_count$[ebp], ecx
; Line 1541
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	add	ecx, 1
	mov	edx, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR [edx+176], ecx
$LN6@uprv_parse:
; Line 1543
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
$LN15@uprv_parse:
; Line 1546
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$[ebp], eax
; Line 1550
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _start$[ebp]
	cmp	eax, 100				; 00000064H
	jle	SHORT $LN24@uprv_parse
	mov	DWORD PTR tv209[ebp], 100		; 00000064H
	jmp	SHORT $LN25@uprv_parse
$LN24@uprv_parse:
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR tv209[ebp], eax
$LN25@uprv_parse:
	mov	eax, DWORD PTR tv209[ebp]
	mov	DWORD PTR _textLen$[ebp], eax
; Line 1551
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _inputText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1552
	mov	DWORD PTR _ec1$[ebp], 0
; Line 1553
	lea	eax, DWORD PTR _ec1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textLen$[ebp]
	push	edx
	lea	eax, DWORD PTR _inputText$[ebp]
	push	eax
	push	100					; 00000064H
	lea	ecx, DWORD PTR _upperText$[ebp]
	push	ecx
	call	_u_strToUpper_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _textLen$[ebp], eax
; Line 1555
	mov	DWORD PTR _max$[ebp], 0
; Line 1556
	mov	DWORD PTR _matchIndex$[ebp], -1
; Line 1559
	lea	eax, DWORD PTR _matchIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _max$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textLen$[ebp]
	push	edx
	lea	eax, DWORD PTR _upperText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _total_currency_name_count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currencyNames$[ebp]
	push	edx
	call	?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z ; searchCurrencyName
	add	esp, 24					; 00000018H
; Line 1565
	mov	DWORD PTR _maxInSymbol$[ebp], 0
; Line 1566
	mov	DWORD PTR _matchIndexInSymbol$[ebp], -1
; Line 1567
	movsx	eax, BYTE PTR _type$[ebp]
	cmp	eax, 1
	je	SHORT $LN5@uprv_parse
; Line 1571
	lea	eax, DWORD PTR _matchIndexInSymbol$[ebp]
	push	eax
	lea	ecx, DWORD PTR _maxInSymbol$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textLen$[ebp]
	push	edx
	lea	eax, DWORD PTR _inputText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	push	edx
	call	?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z ; searchCurrencyName
	add	esp, 24					; 00000018H
$LN5@uprv_parse:
; Line 1581
	mov	eax, DWORD PTR _max$[ebp]
	cmp	eax, DWORD PTR _maxInSymbol$[ebp]
	jl	SHORT $LN4@uprv_parse
	cmp	DWORD PTR _matchIndex$[ebp], -1
	je	SHORT $LN4@uprv_parse
; Line 1582
	push	4
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _matchIndex$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 1583
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@uprv_parse
$LN4@uprv_parse:
; Line 1584
	mov	eax, DWORD PTR _maxInSymbol$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jl	SHORT $LN3@uprv_parse
	cmp	DWORD PTR _matchIndexInSymbol$[ebp], -1
	je	SHORT $LN3@uprv_parse
; Line 1585
	push	4
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _matchIndexInSymbol$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 1586
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _maxInSymbol$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@uprv_parse:
; Line 1590
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_lock_56
	add	esp, 4
; Line 1591
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	sub	ecx, 1
	mov	edx, DWORD PTR _cacheEntry$[ebp]
	mov	DWORD PTR [edx+176], ecx
; Line 1592
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	cmp	DWORD PTR [eax+176], 0
	jne	SHORT $LN1@uprv_parse
; Line 1593
	mov	eax, DWORD PTR _cacheEntry$[ebp]
	push	eax
	call	?deleteCacheEntry@@YAXPAUCurrencyNameCacheEntry@@@Z ; deleteCacheEntry
	add	esp, 4
$LN1@uprv_parse:
; Line 1595
	push	OFFSET _gCurrencyCacheMutex
	call	_umtx_unlock_56
	add	esp, 4
$LN22@uprv_parse:
; Line 1596
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN38@uprv_parse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 808				; 00000328H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN38@uprv_parse:
	DD	11					; 0000000bH
	DD	$LN37@uprv_parse
$LN37@uprv_parse:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN26@uprv_parse
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN27@uprv_parse
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN28@uprv_parse
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN29@uprv_parse
	DD	-328					; fffffeb8H
	DD	200					; 000000c8H
	DD	$LN30@uprv_parse
	DD	-536					; fffffde8H
	DD	200					; 000000c8H
	DD	$LN31@uprv_parse
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN32@uprv_parse
	DD	-572					; fffffdc4H
	DD	4
	DD	$LN33@uprv_parse
	DD	-584					; fffffdb8H
	DD	4
	DD	$LN34@uprv_parse
	DD	-596					; fffffdacH
	DD	4
	DD	$LN35@uprv_parse
	DD	-608					; fffffda0H
	DD	4
	DD	$LN36@uprv_parse
$LN36@uprv_parse:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN35@uprv_parse:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN34@uprv_parse:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN33@uprv_parse:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
$LN32@uprv_parse:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN31@uprv_parse:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN30@uprv_parse:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN29@uprv_parse:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN28@uprv_parse:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN27@uprv_parse:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN26@uprv_parse:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_uprv_parseCurrency_56 ENDP
_TEXT	ENDS
PUBLIC	??1EquivIterator@icu_56@@QAE@XZ			; icu_56::EquivIterator::~EquivIterator
PUBLIC	??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ; icu_56::EquivIterator::EquivIterator
PUBLIC	__$ArrayPad$
EXTRN	__imp__qsort:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	??1ChoiceFormat@icu_56@@UAE@XZ:PROC		; icu_56::ChoiceFormat::~ChoiceFormat
EXTRN	?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z:PROC ; icu_56::ChoiceFormat::getFormats
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC ; icu_56::ChoiceFormat::ChoiceFormat
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	_uhash_get_56:PROC
EXTRN	_uhash_put_56:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	_ures_getSize_56:PROC
EXTRN	_uhash_open_56:PROC
EXTRN	_uhash_hashChars_56:PROC
EXTRN	_uhash_compareChars_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv427 = -1388						; size = 4
tv424 = -1388						; size = 4
tv429 = -1384						; size = 4
tv182 = -1384						; size = 4
$T73681 = -1376						; size = 64
$T73696 = -1304						; size = 64
_upperName$73724 = -1040				; size = 4
_j$73720 = -1028					; size = 4
_len$73719 = -1016					; size = 4
_num$73718 = -1004					; size = 4
_names$73712 = -992					; size = 4
_i$73708 = -980						; size = 4
_curr_p$73707 = -968					; size = 4
_ec3$73706 = -956					; size = 4
_upperName$73703 = -944					; size = 4
_symbol$73698 = -932					; size = 4
_iter$73697 = -920					; size = 12
_name$73690 = -900					; size = 4
_length$73689 = -888					; size = 4
_i$73685 = -876						; size = 4
_formats$73684 = -864					; size = 4
_fmt_count$73683 = -852					; size = 4
_fmt$73682 = -840					; size = 460
_isChoice$73677 = -369					; size = 1
_len$73671 = -360					; size = 4
_names$73670 = -348					; size = 4
_i$73666 = -336						; size = 4
_n$73665 = -324						; size = 4
_curr$73664 = -312					; size = 4
_rb$73663 = -300					; size = 4
_localeLevel$73659 = -288				; size = 4
_currencyPluralIsoCodes$ = -276				; size = 4
_currencyIsoCodes$ = -264				; size = 4
_ec4$ = -252						; size = 4
_ec3$ = -240						; size = 4
_iso$ = -228						; size = 4
_s$ = -216						; size = 4
_loc$ = -204						; size = 157
_ec2$ = -36						; size = 4
_currencySymbolsEquiv$ = -24				; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_currencyNames$ = 12					; size = 4
_total_currency_name_count$ = 16			; size = 4
_currencySymbols$ = 20					; size = 4
_total_currency_symbol_count$ = 24			; size = 4
_ec$ = 28						; size = 4
?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z PROC ; collectCurrencyNames, COMDAT
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1376				; 00000560H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1388]
	mov	ecx, 344				; 00000158H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 992
	call	?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ ; getCurrSymbolsEquiv
	mov	DWORD PTR _currencySymbolsEquiv$[ebp], eax
; Line 994
	mov	DWORD PTR _ec2$[ebp], 0
; Line 997
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getName_56
	add	esp, 16					; 00000010H
; Line 998
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN37@collectCur
	cmp	DWORD PTR _ec2$[ebp], -124		; ffffff84H
	jne	SHORT $LN38@collectCur
$LN37@collectCur:
; Line 999
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN38@collectCur:
; Line 1003
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _total_currency_name_count$[ebp]
	push	ecx
	lea	edx, DWORD PTR _loc$[ebp]
	push	edx
	call	?getCurrencyNameCount@@YAXPBDPAH1@Z	; getCurrencyNameCount
	add	esp, 12					; 0000000cH
; Line 1006
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1008
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1010
	cmp	DWORD PTR _currencyNames$[ebp], 0
	je	SHORT $LN35@collectCur
	cmp	DWORD PTR _currencySymbols$[ebp], 0
	jne	SHORT $LN36@collectCur
$LN35@collectCur:
; Line 1011
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
$LN36@collectCur:
; Line 1014
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN34@collectCur
	jmp	$LN39@collectCur
$LN34@collectCur:
; Line 1016
	mov	DWORD PTR _s$[ebp], 0
; Line 1017
	mov	DWORD PTR _iso$[ebp], 0
; Line 1019
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1020
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1022
	mov	DWORD PTR _ec3$[ebp], 0
; Line 1023
	mov	DWORD PTR _ec4$[ebp], 0
; Line 1026
	lea	eax, DWORD PTR _ec3$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareChars_56
	push	OFFSET _uhash_hashChars_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyIsoCodes$[ebp], eax
; Line 1027
	lea	eax, DWORD PTR _ec4$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareChars_56
	push	OFFSET _uhash_hashChars_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyPluralIsoCodes$[ebp], eax
; Line 1028
	mov	DWORD PTR _localeLevel$73659[ebp], 0
	jmp	SHORT $LN33@collectCur
$LN32@collectCur:
	mov	eax, DWORD PTR _localeLevel$73659[ebp]
	add	eax, 1
	mov	DWORD PTR _localeLevel$73659[ebp], eax
$LN33@collectCur:
; Line 1029
	mov	DWORD PTR _ec2$[ebp], 0
; Line 1031
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$73663[ebp], eax
; Line 1032
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	0
	push	OFFSET _CURRENCIES
	mov	ecx, DWORD PTR _rb$73663[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _curr$73664[ebp], eax
; Line 1033
	mov	eax, DWORD PTR _curr$73664[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _n$73665[ebp], eax
; Line 1034
	mov	DWORD PTR _i$73666[ebp], 0
	jmp	SHORT $LN30@collectCur
$LN29@collectCur:
	mov	eax, DWORD PTR _i$73666[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73666[ebp], eax
$LN30@collectCur:
	mov	eax, DWORD PTR _i$73666[ebp]
	cmp	eax, DWORD PTR _n$73665[ebp]
	jge	$LN28@collectCur
; Line 1035
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$73666[ebp]
	push	ecx
	mov	edx, DWORD PTR _curr$73664[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _names$73670[ebp], eax
; Line 1037
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$73671[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _names$73670[ebp]
	push	edx
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1039
	mov	eax, DWORD PTR _names$73670[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _iso$[ebp], eax
; Line 1040
	cmp	DWORD PTR _localeLevel$73659[ebp], 0
	jne	SHORT $LN27@collectCur
; Line 1041
	lea	eax, DWORD PTR _ec3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iso$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iso$[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyIsoCodes$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 1042
	jmp	SHORT $LN26@collectCur
$LN27@collectCur:
; Line 1043
	mov	eax, DWORD PTR _iso$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencyIsoCodes$[ebp]
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@collectCur
; Line 1044
	mov	eax, DWORD PTR _names$73670[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1045
	jmp	$LN29@collectCur
; Line 1046
	jmp	SHORT $LN26@collectCur
$LN25@collectCur:
; Line 1047
	lea	eax, DWORD PTR _ec3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iso$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iso$[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyIsoCodes$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
$LN26@collectCur:
; Line 1050
	mov	BYTE PTR _isChoice$73677[ebp], 0
; Line 1051
	cmp	DWORD PTR _len$73671[ebp], 0
	jle	SHORT $LN23@collectCur
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 61					; 0000003dH
	jne	SHORT $LN23@collectCur
; Line 1052
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 1053
	mov	eax, DWORD PTR _len$73671[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$73671[ebp], eax
; Line 1054
	cmp	DWORD PTR _len$73671[ebp], 0
	jle	SHORT $LN23@collectCur
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 61					; 0000003dH
	je	SHORT $LN23@collectCur
; Line 1055
	mov	BYTE PTR _isChoice$73677[ebp], 1
$LN23@collectCur:
; Line 1058
	movsx	eax, BYTE PTR _isChoice$73677[ebp]
	test	eax, eax
	je	$LN21@collectCur
; Line 1059
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _len$73671[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	1
	lea	ecx, DWORD PTR $T73681[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv429[ebp], eax
	mov	eax, DWORD PTR tv429[ebp]
	mov	DWORD PTR tv424[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv424[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fmt$73682[ebp]
	call	??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::ChoiceFormat::ChoiceFormat
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T73681[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1061
	lea	eax, DWORD PTR _fmt_count$73683[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmt$73682[ebp]
	call	?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z ; icu_56::ChoiceFormat::getFormats
	mov	DWORD PTR _formats$73684[ebp], eax
; Line 1062
	mov	DWORD PTR _i$73685[ebp], 0
	jmp	SHORT $LN20@collectCur
$LN19@collectCur:
	mov	eax, DWORD PTR _i$73685[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73685[ebp], eax
$LN20@collectCur:
	mov	eax, DWORD PTR _i$73685[ebp]
	cmp	eax, DWORD PTR _fmt_count$73683[ebp]
	jge	$LN18@collectCur
; Line 1064
	mov	ecx, DWORD PTR _i$73685[ebp]
	shl	ecx, 6
	add	ecx, DWORD PTR _formats$73684[ebp]
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$73689[ebp], eax
; Line 1065
	mov	eax, DWORD PTR _length$73689[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _name$73690[ebp], eax
; Line 1066
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _name$73690[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$73689[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _i$73685[ebp]
	shl	ecx, 6
	add	ecx, DWORD PTR _formats$73684[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1067
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1068
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _name$73690[ebp]
	mov	DWORD PTR [eax+ecx+4], edx
; Line 1069
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 1
; Line 1070
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _length$73689[ebp]
	mov	DWORD PTR [eax+ecx+8], edx
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1071
	jmp	$LN19@collectCur
$LN18@collectCur:
; Line 1072
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fmt$73682[ebp]
	call	??1ChoiceFormat@icu_56@@UAE@XZ		; icu_56::ChoiceFormat::~ChoiceFormat
	jmp	$LN17@collectCur
$LN21@collectCur:
; Line 1074
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1075
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+ecx+4], edx
; Line 1076
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 0
; Line 1077
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _len$73671[ebp]
	mov	DWORD PTR [eax+ecx+8], edx
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1079
	cmp	DWORD PTR _currencySymbolsEquiv$[ebp], 0
	je	$LN17@collectCur
; Line 1080
	mov	esi, esp
	mov	eax, DWORD PTR _len$73671[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv182[ebp], eax
	mov	edx, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv427[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv427[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencySymbolsEquiv$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$73697[ebp]
	call	??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ; icu_56::EquivIterator::EquivIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@collectCur:
; Line 1082
	lea	ecx, DWORD PTR _iter$73697[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	mov	DWORD PTR _symbol$73698[ebp], eax
	cmp	DWORD PTR _symbol$73698[ebp], 0
	je	$LN14@collectCur
; Line 1083
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1084
	mov	esi, esp
	mov	ecx, DWORD PTR _symbol$73698[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	ecx, DWORD PTR _currencySymbols$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+edx+4], eax
; Line 1085
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 0
; Line 1086
	mov	esi, esp
	mov	ecx, DWORD PTR _symbol$73698[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	ecx, DWORD PTR _currencySymbols$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+edx+8], eax
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1087
	jmp	$LN15@collectCur
$LN14@collectCur:
; Line 1088
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$73697[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
$LN17@collectCur:
; Line 1092
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$73671[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _names$73670[ebp]
	push	edx
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1093
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1094
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$73671[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?toUpperCase@@YAPA_WPB_WHPBD@Z		; toUpperCase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _upperName$73703[ebp], eax
; Line 1095
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _upperName$73703[ebp]
	mov	DWORD PTR [eax+ecx+4], edx
; Line 1096
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 1
; Line 1097
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _len$73671[ebp]
	mov	DWORD PTR [eax+ecx+8], edx
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1101
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1102
	push	6
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	ecx, DWORD PTR _currencySymbols$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+edx+4], eax
; Line 1104
	push	3
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	mov	edx, DWORD PTR _iso$[ebp]
	push	edx
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 1105
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 1
; Line 1106
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+8], 3
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1108
	mov	eax, DWORD PTR _names$73670[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1109
	jmp	$LN29@collectCur
$LN28@collectCur:
; Line 1112
	mov	DWORD PTR _ec3$73706[ebp], 0
; Line 1113
	lea	eax, DWORD PTR _ec3$73706[ebp]
	push	eax
	push	0
	push	OFFSET _CURRENCYPLURALS
	mov	ecx, DWORD PTR _rb$73663[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _curr_p$73707[ebp], eax
; Line 1114
	mov	eax, DWORD PTR _curr_p$73707[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _n$73665[ebp], eax
; Line 1115
	mov	DWORD PTR _i$73708[ebp], 0
	jmp	SHORT $LN13@collectCur
$LN12@collectCur:
	mov	eax, DWORD PTR _i$73708[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73708[ebp], eax
$LN13@collectCur:
	mov	eax, DWORD PTR _i$73708[ebp]
	cmp	eax, DWORD PTR _n$73665[ebp]
	jge	$LN11@collectCur
; Line 1116
	lea	eax, DWORD PTR _ec3$73706[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$73708[ebp]
	push	ecx
	mov	edx, DWORD PTR _curr_p$73707[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _names$73712[ebp], eax
; Line 1117
	mov	eax, DWORD PTR _names$73712[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _iso$[ebp], eax
; Line 1119
	cmp	DWORD PTR _localeLevel$73659[ebp], 0
	jne	SHORT $LN10@collectCur
; Line 1120
	lea	eax, DWORD PTR _ec4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iso$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iso$[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyPluralIsoCodes$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 1121
	jmp	SHORT $LN9@collectCur
$LN10@collectCur:
; Line 1122
	mov	eax, DWORD PTR _iso$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencyPluralIsoCodes$[ebp]
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@collectCur
; Line 1123
	mov	eax, DWORD PTR _names$73712[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1124
	jmp	$LN12@collectCur
; Line 1125
	jmp	SHORT $LN9@collectCur
$LN8@collectCur:
; Line 1126
	lea	eax, DWORD PTR _ec4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iso$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iso$[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyPluralIsoCodes$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
$LN9@collectCur:
; Line 1129
	mov	eax, DWORD PTR _names$73712[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _num$73718[ebp], eax
; Line 1131
	mov	DWORD PTR _j$73720[ebp], 0
	jmp	SHORT $LN6@collectCur
$LN5@collectCur:
	mov	eax, DWORD PTR _j$73720[ebp]
	add	eax, 1
	mov	DWORD PTR _j$73720[ebp], eax
$LN6@collectCur:
	mov	eax, DWORD PTR _j$73720[ebp]
	cmp	eax, DWORD PTR _num$73718[ebp]
	jge	$LN4@collectCur
; Line 1134
	lea	eax, DWORD PTR _ec3$73706[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$73719[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$73720[ebp]
	push	edx
	mov	eax, DWORD PTR _names$73712[ebp]
	push	eax
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 1135
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _iso$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1136
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$73719[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?toUpperCase@@YAPA_WPB_WHPBD@Z		; toUpperCase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _upperName$73724[ebp], eax
; Line 1137
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _upperName$73724[ebp]
	mov	DWORD PTR [eax+ecx+4], edx
; Line 1138
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+12], 1
; Line 1139
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _len$73719[ebp]
	mov	DWORD PTR [eax+ecx+8], edx
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1140
	jmp	$LN5@collectCur
$LN4@collectCur:
; Line 1141
	mov	eax, DWORD PTR _names$73712[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1142
	jmp	$LN12@collectCur
$LN11@collectCur:
; Line 1143
	mov	eax, DWORD PTR _curr_p$73707[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1144
	mov	eax, DWORD PTR _curr$73664[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1145
	mov	eax, DWORD PTR _rb$73663[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1147
	lea	eax, DWORD PTR _loc$[ebp]
	push	eax
	call	?fallback@@YACPAD@Z			; fallback
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@collectCur
; Line 1148
	jmp	SHORT $LN31@collectCur
$LN3@collectCur:
; Line 1150
	jmp	$LN32@collectCur
$LN31@collectCur:
; Line 1152
	mov	eax, DWORD PTR _currencyIsoCodes$[ebp]
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 1153
	mov	eax, DWORD PTR _currencyPluralIsoCodes$[ebp]
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 1157
	mov	esi, esp
	push	OFFSET ?currencyNameComparator@@YAHPBX0@Z ; currencyNameComparator
	push	16					; 00000010H
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1159
	mov	esi, esp
	push	OFFSET ?currencyNameComparator@@YAHPBX0@Z ; currencyNameComparator
	push	16					; 00000010H
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _currencySymbols$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1184
	mov	eax, DWORD PTR _ec3$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@collectCur
; Line 1185
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _ec3$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1186
	jmp	SHORT $LN39@collectCur
$LN2@collectCur:
; Line 1188
	mov	eax, DWORD PTR _ec4$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@collectCur
; Line 1189
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _ec4$[ebp]
	mov	DWORD PTR [eax], ecx
$LN39@collectCur:
; Line 1192
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN57@collectCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1388				; 0000056cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN57@collectCur:
	DD	10					; 0000000aH
	DD	$LN56@collectCur
$LN56@collectCur:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN45@collectCur
	DD	-204					; ffffff34H
	DD	157					; 0000009dH
	DD	$LN46@collectCur
	DD	-240					; ffffff10H
	DD	4
	DD	$LN47@collectCur
	DD	-252					; ffffff04H
	DD	4
	DD	$LN48@collectCur
	DD	-360					; fffffe98H
	DD	4
	DD	$LN49@collectCur
	DD	-840					; fffffcb8H
	DD	460					; 000001ccH
	DD	$LN50@collectCur
	DD	-852					; fffffcacH
	DD	4
	DD	$LN51@collectCur
	DD	-920					; fffffc68H
	DD	12					; 0000000cH
	DD	$LN52@collectCur
	DD	-956					; fffffc44H
	DD	4
	DD	$LN53@collectCur
	DD	-1016					; fffffc08H
	DD	4
	DD	$LN54@collectCur
$LN54@collectCur:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN53@collectCur:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN52@collectCur:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN51@collectCur:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN50@collectCur:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	0
$LN49@collectCur:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN48@collectCur:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN47@collectCur:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN46@collectCur:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN45@collectCur:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73681[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _fmt$73682[ebp]
	jmp	??1ChoiceFormat@icu_56@@UAE@XZ		; icu_56::ChoiceFormat::~ChoiceFormat
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73696[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _iter$73697[ebp]
	jmp	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
__ehhandler$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?collectCurrencyNames@@YAXPBDPAPAUCurrencyNameStruct@@PAH12AAW4UErrorCode@@@Z ENDP ; collectCurrencyNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_hash$ = 8						; size = 4
_s$ = 12						; size = 4
??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z PROC ; icu_56::EquivIterator::EquivIterator, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ENDP ; icu_56::EquivIterator::EquivIterator
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1EquivIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1EquivIterator@icu_56@@QAE@XZ PROC			; icu_56::EquivIterator::~EquivIterator, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1EquivIterator@icu_56@@QAE@XZ ENDP			; icu_56::EquivIterator::~EquivIterator
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?fallback@@YACPAD@Z
_TEXT	SEGMENT
_status$ = -8						; size = 4
_loc$ = 8						; size = 4
?fallback@@YACPAD@Z PROC				; fallback, COMDAT
; Line 650
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 651
	mov	eax, DWORD PTR _loc$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@fallback
; Line 652
	xor	al, al
	jmp	SHORT $LN2@fallback
$LN1@fallback:
; Line 654
	mov	DWORD PTR _status$[ebp], 0
; Line 655
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loc$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _loc$[ebp]
	push	edx
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
; Line 663
	mov	al, 1
$LN2@fallback:
; Line 664
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@fallback
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@fallback:
	DD	1
	DD	$LN5@fallback
$LN5@fallback:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@fallback
$LN4@fallback:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?fallback@@YACPAD@Z ENDP				; fallback
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?currencyNameComparator@@YAHPBX0@Z
_TEXT	SEGMENT
tv70 = -232						; size = 4
_i$73573 = -32						; size = 4
_currName_2$ = -20					; size = 4
_currName_1$ = -8					; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?currencyNameComparator@@YAHPBX0@Z PROC			; currencyNameComparator, COMDAT
; Line 869
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 870
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _currName_1$[ebp], eax
; Line 871
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _currName_2$[ebp], eax
; Line 872
	mov	DWORD PTR _i$73573[ebp], 0
; Line 873
	jmp	SHORT $LN8@currencyNa
$LN7@currencyNa:
; Line 874
	mov	eax, DWORD PTR _i$73573[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73573[ebp], eax
$LN8@currencyNa:
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR _currName_2$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN11@currencyNa
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN12@currencyNa
$LN11@currencyNa:
	mov	edx, DWORD PTR _currName_2$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv70[ebp], eax
$LN12@currencyNa:
	mov	ecx, DWORD PTR _i$73573[ebp]
	cmp	ecx, DWORD PTR tv70[ebp]
	jge	SHORT $LN6@currencyNa
; Line 875
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _i$73573[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _currName_2$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _i$73573[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	cmp	eax, edx
	jge	SHORT $LN5@currencyNa
; Line 876
	or	eax, -1
	jmp	SHORT $LN9@currencyNa
$LN5@currencyNa:
; Line 878
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _i$73573[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _currName_2$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _i$73573[ebp]
	movzx	edx, WORD PTR [edx+ecx*2]
	cmp	eax, edx
	jle	SHORT $LN4@currencyNa
; Line 879
	mov	eax, 1
	jmp	SHORT $LN9@currencyNa
$LN4@currencyNa:
; Line 881
	jmp	$LN7@currencyNa
$LN6@currencyNa:
; Line 882
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR _currName_2$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN3@currencyNa
; Line 883
	or	eax, -1
	jmp	SHORT $LN9@currencyNa
	jmp	SHORT $LN2@currencyNa
$LN3@currencyNa:
; Line 884
	mov	eax, DWORD PTR _currName_1$[ebp]
	mov	ecx, DWORD PTR _currName_2$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jle	SHORT $LN2@currencyNa
; Line 885
	mov	eax, 1
	jmp	SHORT $LN9@currencyNa
$LN2@currencyNa:
; Line 887
	xor	eax, eax
$LN9@currencyNa:
; Line 888
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?currencyNameComparator@@YAHPBX0@Z ENDP			; currencyNameComparator
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getCurrencyNameCount@@YAXPBDPAH1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$2
__ehfuncinfo$?getCurrencyNameCount@@YAXPBDPAH1@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getCurrencyNameCount@@YAXPBDPAH1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getCurrencyNameCount@@YAXPBDPAH1@Z
_TEXT	SEGMENT
tv192 = -1176						; size = 4
tv189 = -1176						; size = 4
tv193 = -1172						; size = 4
tv133 = -1172						; size = 4
$T73607 = -1164						; size = 64
$T73612 = -1092						; size = 64
_names$73619 = -828					; size = 4
_i$73615 = -816						; size = 4
_curr_p$73614 = -804					; size = 4
_ec3$73613 = -792					; size = 4
_fmt_count$73609 = -780					; size = 4
_fmt$73608 = -768					; size = 460
_isChoice$73603 = -297					; size = 1
_len$73602 = -288					; size = 4
_names$73601 = -276					; size = 4
_i$73597 = -264						; size = 4
_n$73596 = -252						; size = 4
_curr$73595 = -240					; size = 4
_rb$73594 = -228					; size = 4
_ec2$73593 = -216					; size = 4
_currencySymbolsEquiv$ = -204				; size = 4
_locale$ = -192						; size = 157
_s$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_loc$ = 8						; size = 4
_total_currency_name_count$ = 12			; size = 4
_total_currency_symbol_count$ = 16			; size = 4
?getCurrencyNameCount@@YAXPBDPAH1@Z PROC		; getCurrencyNameCount, COMDAT
; Line 900
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getCurrencyNameCount@@YAXPBDPAH1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1164				; 0000048cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1176]
	mov	ecx, 291				; 00000123H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 902
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [eax], 0
; Line 903
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [eax], 0
; Line 904
	mov	DWORD PTR _s$[ebp], 0
; Line 906
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 907
	call	?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ ; getCurrSymbolsEquiv
	mov	DWORD PTR _currencySymbolsEquiv$[ebp], eax
$LN14@getCurrenc:
; Line 909
	mov	DWORD PTR _ec2$73593[ebp], 0
; Line 911
	lea	eax, DWORD PTR _ec2$73593[ebp]
	push	eax
	lea	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$73594[ebp], eax
; Line 912
	lea	eax, DWORD PTR _ec2$73593[ebp]
	push	eax
	push	0
	push	OFFSET _CURRENCIES
	mov	ecx, DWORD PTR _rb$73594[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _curr$73595[ebp], eax
; Line 913
	mov	eax, DWORD PTR _curr$73595[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _n$73596[ebp], eax
; Line 914
	mov	DWORD PTR _i$73597[ebp], 0
	jmp	SHORT $LN12@getCurrenc
$LN11@getCurrenc:
	mov	eax, DWORD PTR _i$73597[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73597[ebp], eax
$LN12@getCurrenc:
	mov	eax, DWORD PTR _i$73597[ebp]
	cmp	eax, DWORD PTR _n$73596[ebp]
	jge	$LN10@getCurrenc
; Line 915
	lea	eax, DWORD PTR _ec2$73593[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$73597[ebp]
	push	ecx
	mov	edx, DWORD PTR _curr$73595[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _names$73601[ebp], eax
; Line 917
	lea	eax, DWORD PTR _ec2$73593[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$73602[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _names$73601[ebp]
	push	edx
	call	_ures_getStringByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 918
	mov	BYTE PTR _isChoice$73603[ebp], 0
; Line 919
	cmp	DWORD PTR _len$73602[ebp], 0
	jle	SHORT $LN9@getCurrenc
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 61					; 0000003dH
	jne	SHORT $LN9@getCurrenc
; Line 920
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 921
	mov	eax, DWORD PTR _len$73602[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$73602[ebp], eax
; Line 922
	cmp	DWORD PTR _len$73602[ebp], 0
	jle	SHORT $LN9@getCurrenc
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 61					; 0000003dH
	je	SHORT $LN9@getCurrenc
; Line 923
	mov	BYTE PTR _isChoice$73603[ebp], 1
$LN9@getCurrenc:
; Line 926
	movsx	eax, BYTE PTR _isChoice$73603[ebp]
	test	eax, eax
	je	$LN7@getCurrenc
; Line 927
	lea	eax, DWORD PTR _ec2$73593[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _len$73602[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	1
	lea	ecx, DWORD PTR $T73607[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv189[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fmt$73608[ebp]
	call	??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::ChoiceFormat::ChoiceFormat
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T73607[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 929
	lea	eax, DWORD PTR _fmt_count$73609[ebp]
	push	eax
	lea	ecx, DWORD PTR _fmt$73608[ebp]
	call	?getFormats@ChoiceFormat@icu_56@@UBEPBVUnicodeString@2@AAH@Z ; icu_56::ChoiceFormat::getFormats
; Line 930
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _fmt_count$73609[ebp]
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 931
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fmt$73608[ebp]
	call	??1ChoiceFormat@icu_56@@UAE@XZ		; icu_56::ChoiceFormat::~ChoiceFormat
	jmp	$LN6@getCurrenc
$LN7@getCurrenc:
; Line 932
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 933
	cmp	DWORD PTR _currencySymbolsEquiv$[ebp], 0
	je	SHORT $LN6@getCurrenc
; Line 934
	mov	esi, esp
	mov	eax, DWORD PTR _len$73602[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR $T73612[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	mov	edx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv192[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencySymbolsEquiv$[ebp]
	push	ecx
	call	?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z ; countEquivalent
	add	esp, 8
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T73612[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getCurrenc:
; Line 938
	mov	eax, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_symbol_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 939
	mov	eax, DWORD PTR _total_currency_name_count$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 940
	mov	eax, DWORD PTR _names$73601[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 941
	jmp	$LN11@getCurrenc
$LN10@getCurrenc:
; Line 944
	mov	DWORD PTR _ec3$73613[ebp], 0
; Line 945
	lea	eax, DWORD PTR _ec3$73613[ebp]
	push	eax
	push	0
	push	OFFSET _CURRENCYPLURALS
	mov	ecx, DWORD PTR _rb$73594[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _curr_p$73614[ebp], eax
; Line 946
	mov	eax, DWORD PTR _curr_p$73614[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _n$73596[ebp], eax
; Line 947
	mov	DWORD PTR _i$73615[ebp], 0
	jmp	SHORT $LN4@getCurrenc
$LN3@getCurrenc:
	mov	eax, DWORD PTR _i$73615[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73615[ebp], eax
$LN4@getCurrenc:
	mov	eax, DWORD PTR _i$73615[ebp]
	cmp	eax, DWORD PTR _n$73596[ebp]
	jge	SHORT $LN2@getCurrenc
; Line 948
	lea	eax, DWORD PTR _ec3$73613[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$73615[ebp]
	push	ecx
	mov	edx, DWORD PTR _curr_p$73614[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _names$73619[ebp], eax
; Line 949
	mov	eax, DWORD PTR _names$73619[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	ecx, DWORD PTR _total_currency_name_count$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _total_currency_name_count$[ebp]
	mov	DWORD PTR [edx], eax
; Line 950
	mov	eax, DWORD PTR _names$73619[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 951
	jmp	SHORT $LN3@getCurrenc
$LN2@getCurrenc:
; Line 952
	mov	eax, DWORD PTR _curr_p$73614[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 953
	mov	eax, DWORD PTR _curr$73595[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 954
	mov	eax, DWORD PTR _rb$73594[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 956
	lea	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	?fallback@@YACPAD@Z			; fallback
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@getCurrenc
; Line 957
	jmp	SHORT $LN15@getCurrenc
$LN1@getCurrenc:
; Line 959
	jmp	$LN14@getCurrenc
$LN15@getCurrenc:
; Line 960
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@getCurrenc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1176				; 00000498H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN28@getCurrenc:
	DD	6
	DD	$LN27@getCurrenc
$LN27@getCurrenc:
	DD	-192					; ffffff40H
	DD	157					; 0000009dH
	DD	$LN20@getCurrenc
	DD	-216					; ffffff28H
	DD	4
	DD	$LN21@getCurrenc
	DD	-288					; fffffee0H
	DD	4
	DD	$LN22@getCurrenc
	DD	-768					; fffffd00H
	DD	460					; 000001ccH
	DD	$LN23@getCurrenc
	DD	-780					; fffffcf4H
	DD	4
	DD	$LN24@getCurrenc
	DD	-792					; fffffce8H
	DD	4
	DD	$LN25@getCurrenc
$LN25@getCurrenc:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN24@getCurrenc:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN23@getCurrenc:
	DB	102					; 00000066H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	0
$LN22@getCurrenc:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN21@getCurrenc:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN20@getCurrenc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73607[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$1:
	lea	ecx, DWORD PTR _fmt$73608[ebp]
	jmp	??1ChoiceFormat@icu_56@@UAE@XZ		; icu_56::ChoiceFormat::~ChoiceFormat
__unwindfunclet$?getCurrencyNameCount@@YAXPBDPAH1@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T73612[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getCurrencyNameCount@@YAXPBDPAH1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getCurrencyNameCount@@YAXPBDPAH1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getCurrencyNameCount@@YAXPBDPAH1@Z ENDP		; getCurrencyNameCount
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
$T82132 = -244						; size = 4
_iter$ = -40						; size = 12
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_hash$ = 8						; size = 4
_s$ = 12						; size = 4
?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z PROC ; countEquivalent, COMDAT
; Line 225
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 226
	mov	DWORD PTR _result$[ebp], 0
; Line 227
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ; icu_56::EquivIterator::EquivIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@countEquiv:
; Line 228
	lea	ecx, DWORD PTR _iter$[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	test	eax, eax
	je	SHORT $LN1@countEquiv
; Line 229
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 1
	mov	DWORD PTR _result$[ebp], eax
; Line 230
	jmp	SHORT $LN2@countEquiv
$LN1@countEquiv:
; Line 238
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T82132[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	mov	eax, DWORD PTR $T82132[ebp]
; Line 239
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@countEquiv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@countEquiv:
	DD	1
	DD	$LN8@countEquiv
$LN8@countEquiv:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN6@countEquiv
$LN6@countEquiv:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z$0:
	lea	ecx, DWORD PTR _iter$[ebp]
	jmp	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
__ehhandler$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?countEquivalent@@YAHABVHashtable@icu_56@@ABVUnicodeString@2@@Z ENDP ; countEquivalent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUpperCase@@YAPA_WPB_WHPBD@Z
_TEXT	SEGMENT
tv73 = -232						; size = 4
_destLen$ = -32						; size = 4
_ec$ = -20						; size = 4
_dest$ = -8						; size = 4
_source$ = 8						; size = 4
_len$ = 12						; size = 4
_locale$ = 16						; size = 4
?toUpperCase@@YAPA_WPB_WHPBD@Z PROC			; toUpperCase, COMDAT
; Line 963
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 964
	mov	DWORD PTR _dest$[ebp], 0
; Line 965
	mov	DWORD PTR _ec$[ebp], 0
; Line 966
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	_u_strToUpper_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _destLen$[ebp], eax
; Line 968
	mov	DWORD PTR _ec$[ebp], 0
; Line 969
	mov	eax, DWORD PTR _destLen$[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jge	SHORT $LN4@toUpperCas
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN5@toUpperCas
$LN4@toUpperCas:
	mov	edx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@toUpperCas:
	mov	eax, DWORD PTR tv73[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _dest$[ebp], eax
; Line 970
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_u_strToUpper_56
	add	esp, 24					; 00000018H
; Line 971
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@toUpperCas
; Line 972
	push	1
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _len$[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@toUpperCas:
; Line 974
	mov	eax, DWORD PTR _dest$[ebp]
; Line 975
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@toUpperCas
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@toUpperCas:
	DD	1
	DD	$LN7@toUpperCas
$LN7@toUpperCas:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@toUpperCas
$LN6@toUpperCas:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?toUpperCase@@YAPA_WPB_WHPBD@Z ENDP			; toUpperCase
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z
_TEXT	SEGMENT
_index$73798 = -44					; size = 4
_binarySearchEnd$ = -32					; size = 4
_binarySearchBegin$ = -20				; size = 4
_matchIndex$ = -8					; size = 4
_currencyNames$ = 8					; size = 4
_total_currency_count$ = 12				; size = 4
_text$ = 16						; size = 4
_textLen$ = 20						; size = 4
_maxMatchLen$ = 24					; size = 4
_maxMatchIndex$ = 28					; size = 4
?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z PROC ; searchCurrencyName, COMDAT
; Line 1346
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1347
	mov	eax, DWORD PTR _maxMatchIndex$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1348
	mov	eax, DWORD PTR _maxMatchLen$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1349
	mov	DWORD PTR _matchIndex$[ebp], -1
; Line 1350
	mov	DWORD PTR _binarySearchBegin$[ebp], 0
; Line 1351
	mov	eax, DWORD PTR _total_currency_count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _binarySearchEnd$[ebp], eax
; Line 1366
	mov	DWORD PTR _index$73798[ebp], 0
	jmp	SHORT $LN6@searchCurr
$LN5@searchCurr:
	mov	eax, DWORD PTR _index$73798[ebp]
	add	eax, 1
	mov	DWORD PTR _index$73798[ebp], eax
$LN6@searchCurr:
	mov	eax, DWORD PTR _index$73798[ebp]
	cmp	eax, DWORD PTR _textLen$[ebp]
	jge	SHORT $LN7@searchCurr
; Line 1371
	lea	eax, DWORD PTR _binarySearchEnd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _binarySearchBegin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$73798[ebp]
	mov	eax, DWORD PTR _text$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	push	ecx
	mov	edx, DWORD PTR _index$73798[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyNames$[ebp]
	push	eax
	call	?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z ; binarySearch
	add	esp, 20					; 00000014H
	mov	DWORD PTR _matchIndex$[ebp], eax
; Line 1372
	cmp	DWORD PTR _binarySearchBegin$[ebp], -1
	jne	SHORT $LN3@searchCurr
; Line 1373
	jmp	SHORT $LN7@searchCurr
$LN3@searchCurr:
; Line 1375
	cmp	DWORD PTR _matchIndex$[ebp], -1
	je	SHORT $LN2@searchCurr
; Line 1378
	mov	eax, DWORD PTR _index$73798[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _maxMatchLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1379
	mov	eax, DWORD PTR _maxMatchIndex$[ebp]
	mov	ecx, DWORD PTR _matchIndex$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@searchCurr:
; Line 1381
	mov	eax, DWORD PTR _binarySearchEnd$[ebp]
	sub	eax, DWORD PTR _binarySearchBegin$[ebp]
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN1@searchCurr
; Line 1385
	mov	eax, DWORD PTR _maxMatchIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxMatchLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _binarySearchEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _binarySearchBegin$[ebp]
	push	edx
	mov	eax, DWORD PTR _currencyNames$[ebp]
	push	eax
	call	?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z ; linearSearch
	add	esp, 28					; 0000001cH
; Line 1386
	jmp	SHORT $LN7@searchCurr
$LN1@searchCurr:
; Line 1388
	jmp	$LN5@searchCurr
$LN7@searchCurr:
; Line 1390
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@searchCurr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@searchCurr:
	DD	2
	DD	$LN11@searchCurr
$LN11@searchCurr:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@searchCurr
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@searchCurr
$LN10@searchCurr:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN9@searchCurr:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
?searchCurrencyName@@YAXPBUCurrencyNameStruct@@HPB_WHPAH2@Z ENDP ; searchCurrencyName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z
_TEXT	SEGMENT
_M$73762 = -80						; size = 4
_M$73754 = -68						; size = 4
_R$73750 = -56						; size = 4
_L$73749 = -44						; size = 4
_mid$73742 = -32					; size = 4
_last$ = -20						; size = 4
_first$ = -8						; size = 4
_currencyNames$ = 8					; size = 4
_indexInCurrencyNames$ = 12				; size = 4
_key$ = 16						; size = 2
_begin$ = 20						; size = 4
_end$ = 24						; size = 4
?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z PROC	; binarySearch, COMDAT
; Line 1204
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1208
	mov	eax, DWORD PTR _begin$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _first$[ebp], ecx
; Line 1209
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _last$[ebp], ecx
$LN23@binarySear:
; Line 1210
	mov	eax, DWORD PTR _first$[ebp]
	cmp	eax, DWORD PTR _last$[ebp]
	jg	$LN22@binarySear
; Line 1211
	mov	eax, DWORD PTR _first$[ebp]
	add	eax, DWORD PTR _last$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$73742[ebp], eax
; Line 1212
	mov	eax, DWORD PTR _mid$73742[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	cmp	edx, DWORD PTR [ecx+eax+8]
	jl	SHORT $LN21@binarySear
; Line 1213
	mov	eax, DWORD PTR _mid$73742[ebp]
	add	eax, 1
	mov	DWORD PTR _first$[ebp], eax
; Line 1214
	jmp	$LN20@binarySear
$LN21@binarySear:
; Line 1215
	movzx	eax, WORD PTR _key$[ebp]
	mov	ecx, DWORD PTR _mid$73742[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+4]
	mov	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	movzx	ecx, WORD PTR [ecx+edx*2]
	cmp	eax, ecx
	jle	SHORT $LN19@binarySear
; Line 1216
	mov	eax, DWORD PTR _mid$73742[ebp]
	add	eax, 1
	mov	DWORD PTR _first$[ebp], eax
	jmp	$LN20@binarySear
$LN19@binarySear:
; Line 1218
	movzx	eax, WORD PTR _key$[ebp]
	mov	ecx, DWORD PTR _mid$73742[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _currencyNames$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+4]
	mov	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	movzx	ecx, WORD PTR [ecx+edx*2]
	cmp	eax, ecx
	jge	SHORT $LN17@binarySear
; Line 1219
	mov	eax, DWORD PTR _mid$73742[ebp]
	sub	eax, 1
	mov	DWORD PTR _last$[ebp], eax
; Line 1221
	jmp	$LN20@binarySear
$LN17@binarySear:
; Line 1225
	mov	eax, DWORD PTR _begin$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _L$73749[ebp], ecx
; Line 1226
	mov	eax, DWORD PTR _mid$73742[ebp]
	mov	DWORD PTR _R$73750[ebp], eax
$LN15@binarySear:
; Line 1231
	mov	eax, DWORD PTR _L$73749[ebp]
	cmp	eax, DWORD PTR _R$73750[ebp]
	jge	SHORT $LN14@binarySear
; Line 1232
	mov	eax, DWORD PTR _L$73749[ebp]
	add	eax, DWORD PTR _R$73750[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _M$73754[ebp], eax
; Line 1236
	mov	eax, DWORD PTR _M$73754[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	cmp	edx, DWORD PTR [ecx+eax+8]
	jl	SHORT $LN13@binarySear
; Line 1237
	mov	eax, DWORD PTR _M$73754[ebp]
	add	eax, 1
	mov	DWORD PTR _L$73749[ebp], eax
; Line 1238
	jmp	SHORT $LN12@binarySear
$LN13@binarySear:
; Line 1239
	mov	eax, DWORD PTR _M$73754[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	mov	eax, DWORD PTR _indexInCurrencyNames$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	movzx	edx, WORD PTR _key$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN11@binarySear
; Line 1240
	mov	eax, DWORD PTR _M$73754[ebp]
	add	eax, 1
	mov	DWORD PTR _L$73749[ebp], eax
; Line 1241
	jmp	SHORT $LN12@binarySear
$LN11@binarySear:
; Line 1245
	mov	eax, DWORD PTR _M$73754[ebp]
	mov	DWORD PTR _R$73750[ebp], eax
$LN12@binarySear:
; Line 1248
	jmp	SHORT $LN15@binarySear
$LN14@binarySear:
; Line 1252
	mov	eax, DWORD PTR _begin$[ebp]
	mov	ecx, DWORD PTR _L$73749[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1260
	mov	eax, DWORD PTR _mid$73742[ebp]
	mov	DWORD PTR _L$73749[ebp], eax
; Line 1261
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _R$73750[ebp], ecx
$LN9@binarySear:
; Line 1262
	mov	eax, DWORD PTR _L$73749[ebp]
	cmp	eax, DWORD PTR _R$73750[ebp]
	jge	SHORT $LN8@binarySear
; Line 1263
	mov	eax, DWORD PTR _L$73749[ebp]
	add	eax, DWORD PTR _R$73750[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _M$73762[ebp], eax
; Line 1267
	mov	eax, DWORD PTR _M$73762[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	cmp	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	jge	SHORT $LN7@binarySear
; Line 1268
	mov	eax, DWORD PTR _M$73762[ebp]
	add	eax, 1
	mov	DWORD PTR _L$73749[ebp], eax
; Line 1269
	jmp	SHORT $LN6@binarySear
$LN7@binarySear:
; Line 1270
	mov	eax, DWORD PTR _M$73762[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	mov	eax, DWORD PTR _indexInCurrencyNames$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	movzx	edx, WORD PTR _key$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN5@binarySear
; Line 1271
	mov	eax, DWORD PTR _M$73762[ebp]
	mov	DWORD PTR _R$73750[ebp], eax
; Line 1272
	jmp	SHORT $LN6@binarySear
$LN5@binarySear:
; Line 1276
	mov	eax, DWORD PTR _M$73762[ebp]
	add	eax, 1
	mov	DWORD PTR _L$73749[ebp], eax
$LN6@binarySear:
; Line 1279
	jmp	SHORT $LN9@binarySear
$LN8@binarySear:
; Line 1283
	mov	eax, DWORD PTR _R$73750[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+4]
	mov	eax, DWORD PTR _indexInCurrencyNames$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	movzx	edx, WORD PTR _key$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN3@binarySear
; Line 1284
	mov	eax, DWORD PTR _R$73750[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1285
	jmp	SHORT $LN2@binarySear
$LN3@binarySear:
; Line 1286
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR _R$73750[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@binarySear:
; Line 1293
	mov	eax, DWORD PTR _begin$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _indexInCurrencyNames$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _currencyNames$[ebp]
	cmp	DWORD PTR [eax+ecx+8], edx
	jne	SHORT $LN1@binarySear
; Line 1294
	mov	eax, DWORD PTR _begin$[ebp]
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN24@binarySear
$LN1@binarySear:
; Line 1296
	or	eax, -1
	jmp	SHORT $LN24@binarySear
$LN20@binarySear:
; Line 1299
	jmp	$LN23@binarySear
$LN22@binarySear:
; Line 1300
	mov	eax, DWORD PTR _begin$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1301
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1302
	or	eax, -1
$LN24@binarySear:
; Line 1303
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?binarySearch@@YAHPBUCurrencyNameStruct@@H_WPAH2@Z ENDP	; binarySearch
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z
_TEXT	SEGMENT
_len$73783 = -20					; size = 4
_index$73779 = -8					; size = 4
_currencyNames$ = 8					; size = 4
_begin$ = 12						; size = 4
_end$ = 16						; size = 4
_text$ = 20						; size = 4
_textLen$ = 24						; size = 4
_maxMatchLen$ = 28					; size = 4
_maxMatchIndex$ = 32					; size = 4
?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z PROC ; linearSearch, COMDAT
; Line 1318
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1319
	mov	eax, DWORD PTR _begin$[ebp]
	mov	DWORD PTR _index$73779[ebp], eax
	jmp	SHORT $LN4@linearSear
$LN3@linearSear:
	mov	eax, DWORD PTR _index$73779[ebp]
	add	eax, 1
	mov	DWORD PTR _index$73779[ebp], eax
$LN4@linearSear:
	mov	eax, DWORD PTR _index$73779[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jg	SHORT $LN5@linearSear
; Line 1320
	mov	eax, DWORD PTR _index$73779[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _currencyNames$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _len$73783[ebp], edx
; Line 1322
	mov	eax, DWORD PTR _maxMatchLen$[ebp]
	mov	ecx, DWORD PTR _len$73783[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN1@linearSear
	mov	eax, DWORD PTR _len$73783[ebp]
	cmp	eax, DWORD PTR _textLen$[ebp]
	jg	SHORT $LN1@linearSear
	mov	eax, DWORD PTR _len$73783[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$73779[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _currencyNames$[ebp]
	mov	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@linearSear
; Line 1323
	mov	eax, DWORD PTR _maxMatchIndex$[ebp]
	mov	ecx, DWORD PTR _index$73779[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1324
	mov	eax, DWORD PTR _maxMatchLen$[ebp]
	mov	ecx, DWORD PTR _len$73783[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@linearSear:
; Line 1330
	jmp	SHORT $LN3@linearSear
$LN5@linearSear:
; Line 1331
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?linearSearch@@YAXPBUCurrencyNameStruct@@HHPB_WHPAH2@Z ENDP ; linearSearch
_TEXT	ENDS
PUBLIC	__real@4000000000000000
PUBLIC	__$ArrayPad$
PUBLIC	_uprv_getStaticCurrencyName_56
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _uprv_getStaticCurrencyName_56
_TEXT	SEGMENT
$T73903 = -768						; size = 64
_f$73904 = -504						; size = 460
_currname$ = -36					; size = 4
_len$ = -24						; size = 4
_isChoiceFormat$ = -9					; size = 1
__$ArrayPad$ = -4					; size = 4
_iso$ = 8						; size = 4
_loc$ = 12						; size = 4
_result$ = 16						; size = 4
_ec$ = 20						; size = 4
_uprv_getStaticCurrencyName_56 PROC			; COMDAT
; Line 1612
	push	ebp
	mov	ebp, esp
	sub	esp, 772				; 00000304H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-772]
	mov	ecx, 193				; 000000c1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1618
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _isChoiceFormat$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iso$[ebp]
	push	ecx
	call	_ucurr_getName_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _currname$[ebp], eax
; Line 1619
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@uprv_getSt
; Line 1622
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1623
	movsx	eax, BYTE PTR _isChoiceFormat$[ebp]
	test	eax, eax
	je	$LN4@uprv_getSt
; Line 1624
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currname$[ebp]
	push	edx
	push	1
	lea	ecx, DWORD PTR $T73903[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _f$73904[ebp]
	call	??0ChoiceFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::ChoiceFormat::ChoiceFormat
	mov	esi, esp
	lea	ecx, DWORD PTR $T73903[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1625
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@uprv_getSt
; Line 1626
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@4000000000000000
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _f$73904[ebp]
	call	?format@NumberFormat@icu_56@@QBEAAVUnicodeString@2@NAAV32@@Z ; icu_56::NumberFormat::format
; Line 1627
	jmp	SHORT $LN2@uprv_getSt
$LN3@uprv_getSt:
; Line 1628
	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _iso$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@uprv_getSt:
; Line 1630
	lea	ecx, DWORD PTR _f$73904[ebp]
	call	??1ChoiceFormat@icu_56@@UAE@XZ		; icu_56::ChoiceFormat::~ChoiceFormat
	jmp	SHORT $LN1@uprv_getSt
$LN4@uprv_getSt:
; Line 1631
	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _currname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@uprv_getSt:
; Line 1634
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@uprv_getSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 772				; 00000304H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@uprv_getSt:
	DD	3
	DD	$LN11@uprv_getSt
$LN11@uprv_getSt:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN8@uprv_getSt
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@uprv_getSt
	DD	-504					; fffffe08H
	DD	460					; 000001ccH
	DD	$LN10@uprv_getSt
$LN10@uprv_getSt:
	DB	102					; 00000066H
	DB	0
$LN9@uprv_getSt:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@uprv_getSt:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
_uprv_getStaticCurrencyName_56 ENDP
_TEXT	ENDS
PUBLIC	_ucurr_getDefaultFractionDigitsForUsage_56
PUBLIC	_ucurr_getDefaultFractionDigits_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_getDefaultFractionDigits_56
_TEXT	SEGMENT
_currency$ = 8						; size = 4
_ec$ = 12						; size = 4
_ucurr_getDefaultFractionDigits_56 PROC			; COMDAT
; Line 1637
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1638
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	_ucurr_getDefaultFractionDigitsForUsage_56
	add	esp, 12					; 0000000cH
; Line 1639
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_getDefaultFractionDigits_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_getDefaultFractionDigitsForUsage_56
_TEXT	SEGMENT
tv68 = -208						; size = 4
_fracDigits$ = -8					; size = 4
_currency$ = 8						; size = 4
_usage$ = 12						; size = 4
_ec$ = 16						; size = 4
_ucurr_getDefaultFractionDigitsForUsage_56 PROC		; COMDAT
; Line 1642
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1643
	mov	DWORD PTR _fracDigits$[ebp], 0
; Line 1644
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@ucurr_getD
; Line 1645
	mov	eax, DWORD PTR _usage$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@ucurr_getD
	cmp	DWORD PTR tv68[ebp], 1
	je	SHORT $LN2@ucurr_getD
	jmp	SHORT $LN1@ucurr_getD
$LN3@ucurr_getD:
; Line 1647
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z ; _findMetaData
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _fracDigits$[ebp], edx
; Line 1648
	jmp	SHORT $LN6@ucurr_getD
$LN2@ucurr_getD:
; Line 1650
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z ; _findMetaData
	add	esp, 8
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _fracDigits$[ebp], edx
; Line 1651
	jmp	SHORT $LN6@ucurr_getD
$LN1@ucurr_getD:
; Line 1653
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
$LN6@ucurr_getD:
; Line 1656
	mov	eax, DWORD PTR _fracDigits$[ebp]
; Line 1657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_getDefaultFractionDigitsForUsage_56 ENDP
_TEXT	ENDS
EXTRN	_ures_getIntVector_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_data$ = -80						; size = 4
_len$ = -68						; size = 4
_rb$ = -56						; size = 4
_ec2$ = -44						; size = 4
_buf$ = -32						; size = 4
_currencyMeta$ = -20					; size = 4
_currencyData$ = -8					; size = 4
_currency$ = 8						; size = 4
_ec$ = 12						; size = 4
?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z PROC	; _findMetaData, COMDAT
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	cmp	DWORD PTR _currency$[ebp], 0
	je	SHORT $LN8@findMetaDa
	mov	eax, DWORD PTR _currency$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN9@findMetaDa
$LN8@findMetaDa:
; Line 313
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@findMetaDa
; Line 314
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN7@findMetaDa:
; Line 316
	mov	eax, OFFSET _LAST_RESORT_DATA
	jmp	$LN10@findMetaDa
$LN9@findMetaDa:
; Line 322
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	OFFSET _CURRENCY_DATA
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _currencyData$[ebp], eax
; Line 323
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currencyData$[ebp]
	push	ecx
	push	OFFSET _CURRENCY_META
	mov	edx, DWORD PTR _currencyData$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyMeta$[ebp], eax
; Line 325
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@findMetaDa
; Line 326
	mov	eax, DWORD PTR _currencyMeta$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 328
	mov	eax, OFFSET _LAST_RESORT_DATA
	jmp	$LN10@findMetaDa
$LN6@findMetaDa:
; Line 333
	mov	DWORD PTR _ec2$[ebp], 0
; Line 334
	lea	eax, DWORD PTR _ec2$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?myUCharsToChars@@YAPADPADPB_W@Z	; myUCharsToChars
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _currencyMeta$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 335
	mov	eax, DWORD PTR _ec2$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@findMetaDa
; Line 336
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 337
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	push	OFFSET _DEFAULT_META
	mov	ecx, DWORD PTR _currencyMeta$[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rb$[ebp], eax
; Line 338
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@findMetaDa
; Line 339
	mov	eax, DWORD PTR _currencyMeta$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 340
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 342
	mov	eax, OFFSET _LAST_RESORT_DATA
	jmp	$LN10@findMetaDa
$LN5@findMetaDa:
; Line 347
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$[ebp], eax
; Line 348
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@findMetaDa
	cmp	DWORD PTR _len$[ebp], 4
	je	SHORT $LN3@findMetaDa
$LN2@findMetaDa:
; Line 350
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@findMetaDa
; Line 351
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@findMetaDa:
; Line 353
	mov	eax, DWORD PTR _currencyMeta$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 354
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 355
	mov	eax, OFFSET _LAST_RESORT_DATA
	jmp	SHORT $LN10@findMetaDa
$LN3@findMetaDa:
; Line 358
	mov	eax, DWORD PTR _currencyMeta$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 359
	mov	eax, DWORD PTR _rb$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 360
	mov	eax, DWORD PTR _data$[ebp]
$LN10@findMetaDa:
; Line 361
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@findMetaDa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@findMetaDa:
	DD	3
	DD	$LN15@findMetaDa
$LN15@findMetaDa:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@findMetaDa
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@findMetaDa
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN14@findMetaDa
$LN14@findMetaDa:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN13@findMetaDa:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN12@findMetaDa:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z ENDP	; _findMetaData
_TEXT	ENDS
PUBLIC	_ucurr_getRoundingIncrementForUsage_56
PUBLIC	_ucurr_getRoundingIncrement_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_getRoundingIncrement_56
_TEXT	SEGMENT
_currency$ = 8						; size = 4
_ec$ = 12						; size = 4
_ucurr_getRoundingIncrement_56 PROC			; COMDAT
; Line 1660
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1661
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	_ucurr_getRoundingIncrementForUsage_56
	add	esp, 12					; 0000000cH
; Line 1662
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_getRoundingIncrement_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_getRoundingIncrementForUsage_56
_TEXT	SEGMENT
tv71 = -248						; size = 4
_increment$73939 = -48					; size = 4
_fracDigits$73938 = -36					; size = 4
_data$ = -24						; size = 4
_result$ = -12						; size = 8
_currency$ = 8						; size = 4
_usage$ = 12						; size = 4
_ec$ = 16						; size = 4
_ucurr_getRoundingIncrementForUsage_56 PROC		; COMDAT
; Line 1665
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1666
	fldz
	fstp	QWORD PTR _result$[ebp]
; Line 1668
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	?_findMetaData@@YAPBHPB_WAAW4UErrorCode@@@Z ; _findMetaData
	add	esp, 8
	mov	DWORD PTR _data$[ebp], eax
; Line 1669
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucurr_getR
; Line 1672
	mov	eax, DWORD PTR _usage$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN7@ucurr_getR
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN6@ucurr_getR
	jmp	SHORT $LN5@ucurr_getR
$LN7@ucurr_getR:
; Line 1674
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fracDigits$73938[ebp], ecx
; Line 1675
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _increment$73939[ebp], ecx
; Line 1676
	jmp	SHORT $LN8@ucurr_getR
$LN6@ucurr_getR:
; Line 1678
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fracDigits$73938[ebp], ecx
; Line 1679
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _increment$73939[ebp], ecx
; Line 1680
	jmp	SHORT $LN8@ucurr_getR
$LN5@ucurr_getR:
; Line 1682
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 1683
	fld	QWORD PTR _result$[ebp]
	jmp	SHORT $LN11@ucurr_getR
$LN8@ucurr_getR:
; Line 1687
	cmp	DWORD PTR _fracDigits$73938[ebp], 0
	jl	SHORT $LN3@ucurr_getR
	cmp	DWORD PTR _fracDigits$73938[ebp], 9
	jle	SHORT $LN4@ucurr_getR
$LN3@ucurr_getR:
; Line 1688
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1689
	jmp	SHORT $LN1@ucurr_getR
$LN4@ucurr_getR:
; Line 1691
	cmp	DWORD PTR _increment$73939[ebp], 2
	jl	SHORT $LN1@ucurr_getR
; Line 1694
	fild	DWORD PTR _increment$73939[ebp]
	mov	eax, DWORD PTR _fracDigits$73938[ebp]
	fidiv	DWORD PTR _POW10[eax*4]
	fstp	QWORD PTR _result$[ebp]
$LN1@ucurr_getR:
; Line 1699
	fld	QWORD PTR _result$[ebp]
$LN11@ucurr_getR:
; Line 1700
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_getRoundingIncrementForUsage_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_countCurrencyList
_TEXT	SEGMENT
_idx$74278 = -44					; size = 4
_count$ = -32						; size = 4
_currType$ = -20					; size = 4
_myContext$ = -8					; size = 4
_enumerator$ = 8					; size = 4
___formal$ = 12						; size = 4
_ucurr_countCurrencyList PROC				; COMDAT
; Line 2025
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2026
	mov	eax, DWORD PTR _enumerator$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _myContext$[ebp], ecx
; Line 2027
	mov	eax, DWORD PTR _myContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _currType$[ebp], ecx
; Line 2028
	mov	DWORD PTR _count$[ebp], 0
; Line 2031
	mov	DWORD PTR _idx$74278[ebp], 0
	jmp	SHORT $LN5@ucurr_coun
$LN4@ucurr_coun:
	mov	eax, DWORD PTR _idx$74278[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$74278[ebp], eax
$LN5@ucurr_coun:
	mov	eax, DWORD PTR _idx$74278[ebp]
	cmp	DWORD PTR _gCurrencyList[eax*8], 0
	je	SHORT $LN3@ucurr_coun
; Line 2032
	cmp	DWORD PTR _currType$[ebp], 2147483647	; 7fffffffH
	je	SHORT $LN1@ucurr_coun
	mov	eax, DWORD PTR _idx$74278[ebp]
	mov	ecx, DWORD PTR _gCurrencyList[eax*8+4]
	and	ecx, DWORD PTR _currType$[ebp]
	cmp	ecx, DWORD PTR _currType$[ebp]
	jne	SHORT $LN2@ucurr_coun
$LN1@ucurr_coun:
; Line 2033
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN2@ucurr_coun:
; Line 2035
	jmp	SHORT $LN4@ucurr_coun
$LN3@ucurr_coun:
; Line 2036
	mov	eax, DWORD PTR _count$[ebp]
; Line 2037
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_countCurrencyList ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_nextCurrencyList
_TEXT	SEGMENT
_currItem$74294 = -20					; size = 4
_myContext$ = -8					; size = 4
_enumerator$ = 8					; size = 4
_resultLength$ = 12					; size = 4
___formal$ = 16						; size = 4
_ucurr_nextCurrencyList PROC				; COMDAT
; Line 2043
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2044
	mov	eax, DWORD PTR _enumerator$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _myContext$[ebp], ecx
$LN6@ucurr_next:
; Line 2047
	mov	eax, DWORD PTR _myContext$[ebp]
	cmp	DWORD PTR [eax+4], 299			; 0000012bH
	jae	SHORT $LN5@ucurr_next
; Line 2048
	mov	eax, DWORD PTR _myContext$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR _gCurrencyList[ecx*8]
	mov	DWORD PTR _currItem$74294[ebp], edx
	mov	eax, DWORD PTR _myContext$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _myContext$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 2049
	mov	eax, DWORD PTR _myContext$[ebp]
	cmp	DWORD PTR [eax], 2147483647		; 7fffffffH
	je	SHORT $LN3@ucurr_next
	mov	eax, DWORD PTR _currItem$74294[ebp]
	mov	ecx, DWORD PTR _myContext$[ebp]
	mov	edx, DWORD PTR [eax+4]
	and	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _myContext$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@ucurr_next
$LN3@ucurr_next:
; Line 2051
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN2@ucurr_next
; Line 2052
	mov	eax, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [eax], 3
$LN2@ucurr_next:
; Line 2054
	mov	eax, DWORD PTR _currItem$74294[ebp]
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN7@ucurr_next
$LN4@ucurr_next:
; Line 2056
	jmp	SHORT $LN6@ucurr_next
$LN5@ucurr_next:
; Line 2058
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@ucurr_next
; Line 2059
	mov	eax, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@ucurr_next:
; Line 2061
	xor	eax, eax
$LN7@ucurr_next:
; Line 2062
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_nextCurrencyList ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_resetCurrencyList
_TEXT	SEGMENT
_enumerator$ = 8					; size = 4
___formal$ = 12						; size = 4
_ucurr_resetCurrencyList PROC				; COMDAT
; Line 2065
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2066
	mov	eax, DWORD PTR _enumerator$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], 0
; Line 2067
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_resetCurrencyList ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucurr_closeCurrencyList
_TEXT	SEGMENT
_enumerator$ = 8					; size = 4
_ucurr_closeCurrencyList PROC				; COMDAT
; Line 2070
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2071
	mov	eax, DWORD PTR _enumerator$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 2072
	mov	eax, DWORD PTR _enumerator$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2073
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_closeCurrencyList ENDP
_TEXT	ENDS
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
PUBLIC	_ucurr_isAvailable_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_isAvailable_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_isoCode$ = 8						; size = 4
_from$ = 12						; size = 8
_to$ = 20						; size = 8
_eErrorCode$ = 28					; size = 4
_ucurr_isAvailable_56 PROC				; COMDAT
; Line 2224
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2225
	mov	eax, DWORD PTR _eErrorCode$[ebp]
	push	eax
	push	OFFSET ?initIsoCodes@@YAXAAW4UErrorCode@@@Z ; initIsoCodes
	push	OFFSET _gIsoCodesInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ; icu_56::umtx_initOnce
	add	esp, 12					; 0000000cH
; Line 2226
	mov	eax, DWORD PTR _eErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@ucurr_isAv
; Line 2227
	xor	al, al
	jmp	SHORT $LN8@ucurr_isAv
$LN7@ucurr_isAv:
; Line 2230
	mov	eax, DWORD PTR _isoCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gIsoCodes
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 2231
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@ucurr_isAv
; Line 2232
	xor	al, al
	jmp	SHORT $LN8@ucurr_isAv
	jmp	SHORT $LN2@ucurr_isAv
$LN6@ucurr_isAv:
; Line 2233
	fld	QWORD PTR _to$[ebp]
	fcomp	QWORD PTR _from$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@ucurr_isAv
; Line 2234
	mov	eax, DWORD PTR _eErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2235
	xor	al, al
	jmp	SHORT $LN8@ucurr_isAv
	jmp	SHORT $LN2@ucurr_isAv
$LN4@ucurr_isAv:
; Line 2236
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR [eax+16]
	fcomp	QWORD PTR _from$[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN1@ucurr_isAv
	mov	eax, DWORD PTR _result$[ebp]
	fld	QWORD PTR [eax+8]
	fcomp	QWORD PTR _to$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@ucurr_isAv
$LN1@ucurr_isAv:
; Line 2237
	xor	al, al
	jmp	SHORT $LN8@ucurr_isAv
$LN2@ucurr_isAv:
; Line 2239
	mov	al, 1
$LN8@ucurr_isAv:
; Line 2240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_isAvailable_56 ENDP
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC
EXTRN	__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_errCode$ = 16						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z PROC ; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 257
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 259
	jmp	$LN5@umtx_initO
$LN4@umtx_initO:
; Line 261
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	call	DWORD PTR _fp$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 265
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 268
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 269
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z ENDP ; icu_56::umtx_initOnce
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
PUBLIC	??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7 ; `initIsoCodes'::`2'::__LINE__Var
EXTRN	_uhash_setValueDeleter_56:PROC
EXTRN	_uhash_hashUChars_56:PROC
EXTRN	_uhash_compareUChars_56:PROC
;	COMDAT ??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\ucurr.cpp
CONST	SEGMENT
??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'I', 00H, 's', 00H, 'o', 00H, 'C', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7
_DATA	SEGMENT
?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7 DD 0878H ; `initIsoCodes'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?initIsoCodes@@YAXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_isoCodes$ = -8						; size = 4
_status$ = 8						; size = 4
?initIsoCodes@@YAXAAW4UErrorCode@@@Z PROC		; initIsoCodes, COMDAT
; Line 2168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2169
	cmp	DWORD PTR _gIsoCodes, 0
	je	SHORT $LN5@initIsoCod
	mov	eax, DWORD PTR ?__LINE__Var@?1??initIsoCodes@@YAXAAW4UErrorCode@@@Z@4JA@2077fca7
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@PBLGEDH@?$AAg?$AAI?$AAs?$AAo?$AAC?$AAo?$AAd?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@initIsoCod:
; Line 2170
	push	OFFSET _currency_cleanup
	push	16					; 00000010H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 2172
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _uhash_compareUChars_56
	push	OFFSET _uhash_hashUChars_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _isoCodes$[ebp], eax
; Line 2173
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@initIsoCod
; Line 2174
	jmp	SHORT $LN3@initIsoCod
$LN2@initIsoCod:
; Line 2176
	push	OFFSET ?deleteIsoCodeEntry@@YAXPAX@Z	; deleteIsoCodeEntry
	mov	eax, DWORD PTR _isoCodes$[ebp]
	push	eax
	call	_uhash_setValueDeleter_56
	add	esp, 8
; Line 2178
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _isoCodes$[ebp]
	push	ecx
	call	_ucurr_createCurrencyList
	add	esp, 8
; Line 2179
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initIsoCod
; Line 2180
	mov	eax, DWORD PTR _isoCodes$[ebp]
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 2181
	jmp	SHORT $LN3@initIsoCod
$LN1@initIsoCod:
; Line 2183
	mov	eax, DWORD PTR _isoCodes$[ebp]
	mov	DWORD PTR _gIsoCodes, eax
$LN3@initIsoCod:
; Line 2185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initIsoCodes@@YAXAAW4UErrorCode@@@Z ENDP		; initIsoCodes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deleteIsoCodeEntry@@YAXPAX@Z
_TEXT	SEGMENT
_entry$ = -8						; size = 4
_obj$ = 8						; size = 4
?deleteIsoCodeEntry@@YAXPAX@Z PROC			; deleteIsoCodeEntry, COMDAT
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 277
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _entry$[ebp], eax
; Line 278
	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteIsoCodeEntry@@YAXPAX@Z ENDP			; deleteIsoCodeEntry
_TEXT	ENDS
PUBLIC	??_C@_02LBCDJBAJ@to?$AA@			; `string'
PUBLIC	__real@7fefffffffffffff
PUBLIC	??_C@_04HNEBHLOP@from?$AA@			; `string'
PUBLIC	__real@ffefffffffffffff
EXTRN	_ures_getString_56:PROC
EXTRN	__allshl:PROC
;	COMDAT ??_C@_02LBCDJBAJ@to?$AA@
CONST	SEGMENT
??_C@_02LBCDJBAJ@to?$AA@ DB 'to', 00H			; `string'
CONST	ENDS
;	COMDAT __real@7fefffffffffffff
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
CONST	ENDS
;	COMDAT ??_C@_04HNEBHLOP@from?$AA@
CONST	SEGMENT
??_C@_04HNEBHLOP@from?$AA@ DB 'from', 00H		; `string'
CONST	ENDS
;	COMDAT __real@ffefffffffffffff
CONST	SEGMENT
__real@ffefffffffffffff DQ 0ffefffffffffffffr	; -1.79769e+308
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucurr_createCurrencyList
_TEXT	SEGMENT
_currDate64$74351 = -264				; size = 8
_toArray$74350 = -248					; size = 4
_toLength$74349 = -236					; size = 4
_toRes$74346 = -224					; size = 4
_toDate$74345 = -212					; size = 8
_currDate64$74340 = -196				; size = 8
_fromArray$74339 = -180					; size = 4
_fromLength$74338 = -168				; size = 4
_fromRes$74335 = -156					; size = 4
_fromDate$74334 = -144					; size = 8
_isoCode$74333 = -128					; size = 4
_idRes$74331 = -116					; size = 4
_isoLength$74330 = -104					; size = 4
_entry$74326 = -92					; size = 4
_currencyRes$74325 = -80				; size = 4
_j$74321 = -68						; size = 4
_currencyArray$74319 = -56				; size = 4
_i$74315 = -44						; size = 4
_currencyMapArray$ = -32				; size = 4
_rb$ = -20						; size = 4
_localStatus$ = -8					; size = 4
_isoCodes$ = 8						; size = 4
_status$ = 12						; size = 4
_ucurr_createCurrencyList PROC				; COMDAT
; Line 2076
	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2077
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 2080
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	OFFSET _CURRENCY_DATA
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$[ebp], eax
; Line 2081
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$[ebp]
	push	ecx
	push	OFFSET _CURRENCY_MAP
	mov	edx, DWORD PTR _rb$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyMapArray$[ebp], eax
; Line 2083
	mov	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN14@ucurr_crea
; Line 2085
	mov	DWORD PTR _i$74315[ebp], 0
	jmp	SHORT $LN13@ucurr_crea
$LN12@ucurr_crea:
	mov	eax, DWORD PTR _i$74315[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74315[ebp], eax
$LN13@ucurr_crea:
	mov	eax, DWORD PTR _currencyMapArray$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _i$74315[ebp], eax
	jge	$LN11@ucurr_crea
; Line 2087
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$74315[ebp]
	push	ecx
	mov	edx, DWORD PTR _currencyMapArray$[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyArray$74319[ebp], eax
; Line 2089
	mov	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN10@ucurr_crea
; Line 2090
	mov	DWORD PTR _j$74321[ebp], 0
	jmp	SHORT $LN9@ucurr_crea
$LN8@ucurr_crea:
	mov	eax, DWORD PTR _j$74321[ebp]
	add	eax, 1
	mov	DWORD PTR _j$74321[ebp], eax
$LN9@ucurr_crea:
	mov	eax, DWORD PTR _currencyArray$74319[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _j$74321[ebp], eax
	jge	$LN7@ucurr_crea
; Line 2092
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _j$74321[ebp]
	push	ecx
	mov	edx, DWORD PTR _currencyArray$74319[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyRes$74325[ebp], eax
; Line 2093
	push	24					; 00000018H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _entry$74326[ebp], eax
; Line 2094
	cmp	DWORD PTR _entry$74326[ebp], 0
	jne	SHORT $LN6@ucurr_crea
; Line 2095
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2096
	jmp	$LN15@ucurr_crea
$LN6@ucurr_crea:
; Line 2100
	mov	DWORD PTR _isoLength$74330[ebp], 0
; Line 2101
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	mov	ecx, DWORD PTR _currencyRes$74325[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _idRes$74331[ebp], eax
; Line 2102
	cmp	DWORD PTR _idRes$74331[ebp], 0
	jne	SHORT $LN5@ucurr_crea
; Line 2103
	jmp	$LN8@ucurr_crea
$LN5@ucurr_crea:
; Line 2105
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _isoLength$74330[ebp]
	push	ecx
	mov	edx, DWORD PTR _idRes$74331[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _isoCode$74333[ebp], eax
; Line 2108
	fld	QWORD PTR __real@ffefffffffffffff
	fstp	QWORD PTR _fromDate$74334[ebp]
; Line 2109
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_04HNEBHLOP@from?$AA@
	mov	ecx, DWORD PTR _currencyRes$74325[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _fromRes$74335[ebp], eax
; Line 2111
	mov	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ucurr_crea
; Line 2112
	mov	DWORD PTR _fromLength$74338[ebp], 0
; Line 2113
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromLength$74338[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRes$74335[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fromArray$74339[ebp], eax
; Line 2114
	mov	eax, DWORD PTR _fromArray$74339[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74340[ebp], eax
	mov	DWORD PTR _currDate64$74340[ebp+4], edx
; Line 2115
	mov	eax, DWORD PTR _fromArray$74339[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74340[ebp]
	or	edx, DWORD PTR _currDate64$74340[ebp+4]
	mov	DWORD PTR _currDate64$74340[ebp], eax
	mov	DWORD PTR _currDate64$74340[ebp+4], edx
; Line 2116
	fild	QWORD PTR _currDate64$74340[ebp]
	fstp	QWORD PTR _fromDate$74334[ebp]
$LN4@ucurr_crea:
; Line 2118
	mov	eax, DWORD PTR _fromRes$74335[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2121
	fld	QWORD PTR __real@7fefffffffffffff
	fstp	QWORD PTR _toDate$74345[ebp]
; Line 2122
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 2123
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_02LBCDJBAJ@to?$AA@
	mov	ecx, DWORD PTR _currencyRes$74325[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _toRes$74346[ebp], eax
; Line 2125
	mov	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@ucurr_crea
; Line 2126
	mov	DWORD PTR _toLength$74349[ebp], 0
; Line 2127
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _toLength$74349[ebp]
	push	ecx
	mov	edx, DWORD PTR _toRes$74346[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _toArray$74350[ebp], eax
; Line 2128
	mov	eax, DWORD PTR _toArray$74350[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74351[ebp], eax
	mov	DWORD PTR _currDate64$74351[ebp+4], edx
; Line 2129
	mov	eax, DWORD PTR _toArray$74350[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74351[ebp]
	or	edx, DWORD PTR _currDate64$74351[ebp+4]
	mov	DWORD PTR _currDate64$74351[ebp], eax
	mov	DWORD PTR _currDate64$74351[ebp+4], edx
; Line 2130
	fild	QWORD PTR _currDate64$74351[ebp]
	fstp	QWORD PTR _toDate$74345[ebp]
$LN3@ucurr_crea:
; Line 2132
	mov	eax, DWORD PTR _toRes$74346[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2134
	mov	eax, DWORD PTR _idRes$74331[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2135
	mov	eax, DWORD PTR _currencyRes$74325[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2137
	mov	eax, DWORD PTR _entry$74326[ebp]
	mov	ecx, DWORD PTR _isoCode$74333[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2138
	mov	eax, DWORD PTR _entry$74326[ebp]
	fld	QWORD PTR _fromDate$74334[ebp]
	fstp	QWORD PTR [eax+8]
; Line 2139
	mov	eax, DWORD PTR _entry$74326[ebp]
	fld	QWORD PTR _toDate$74345[ebp]
	fstp	QWORD PTR [eax+16]
; Line 2141
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 2142
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$74326[ebp]
	push	ecx
	mov	edx, DWORD PTR _isoCode$74333[ebp]
	push	edx
	mov	eax, DWORD PTR _isoCodes$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 2143
	jmp	$LN8@ucurr_crea
$LN7@ucurr_crea:
	jmp	SHORT $LN2@ucurr_crea
$LN10@ucurr_crea:
; Line 2145
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _localStatus$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@ucurr_crea:
; Line 2147
	mov	eax, DWORD PTR _currencyArray$74319[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2148
	jmp	$LN12@ucurr_crea
$LN11@ucurr_crea:
	jmp	SHORT $LN1@ucurr_crea
$LN14@ucurr_crea:
; Line 2150
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _localStatus$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ucurr_crea:
; Line 2153
	mov	eax, DWORD PTR _currencyMapArray$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN15@ucurr_crea:
; Line 2154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@ucurr_crea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@ucurr_crea:
	DD	4
	DD	$LN21@ucurr_crea
$LN21@ucurr_crea:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN17@ucurr_crea
	DD	-104					; ffffff98H
	DD	4
	DD	$LN18@ucurr_crea
	DD	-168					; ffffff58H
	DD	4
	DD	$LN19@ucurr_crea
	DD	-236					; ffffff14H
	DD	4
	DD	$LN20@ucurr_crea
$LN20@ucurr_crea:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN19@ucurr_crea:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN18@ucurr_crea:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN17@ucurr_crea:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucurr_createCurrencyList ENDP
_TEXT	ENDS
PUBLIC	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ
_TEXT	SEGMENT
?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ PROC	; getCurrSymbolsEquiv, COMDAT
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2243
	push	OFFSET ?initCurrSymbolsEquiv@@YAXXZ	; initCurrSymbolsEquiv
	push	OFFSET _gCurrSymbolsEquivInitOnce
	call	?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ; icu_56::umtx_initOnce
	add	esp, 8
; Line 2244
	mov	eax, DWORD PTR _gCurrSymbolsEquiv
; Line 2245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrSymbolsEquiv@@YAPBVHashtable@icu_56@@XZ ENDP	; getCurrSymbolsEquiv
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z PROC	; icu_56::umtx_initOnce, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 246
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN2@umtx_initO@2
; Line 247
	jmp	SHORT $LN3@umtx_initO@2
$LN2@umtx_initO@2:
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO@2
; Line 250
	mov	esi, esp
	call	DWORD PTR _fp$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 251
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@umtx_initO@2:
; Line 253
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z ENDP	; icu_56::umtx_initOnce
_TEXT	ENDS
PUBLIC	??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7 ; `initCurrSymbolsEquiv'::`2'::__LINE__Var
EXTRN	__imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\ucurr.cpp
CONST	SEGMENT
??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'g'
	DB	00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'S', 00H, 'y', 00H
	DB	'm', 00H, 'b', 00H, 'o', 00H, 'l', 00H, 's', 00H, 'E', 00H, 'q'
	DB	00H, 'u', 00H, 'i', 00H, 'v', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7
_DATA	SEGMENT
?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7 DD 089aH ; `initCurrSymbolsEquiv'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initCurrSymbolsEquiv@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initCurrSymbolsEquiv@@YAXXZ$0
__ehfuncinfo$?initCurrSymbolsEquiv@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initCurrSymbolsEquiv@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initCurrSymbolsEquiv@@YAXXZ
_TEXT	SEGMENT
tv134 = -304						; size = 4
tv89 = -304						; size = 4
tv80 = -304						; size = 4
$T82224 = -296						; size = 4
$T82225 = -284						; size = 4
$T82228 = -272						; size = 4
$T82229 = -260						; size = 4
$T82232 = -248						; size = 4
$T82233 = -236						; size = 4
_temp$ = -32						; size = 4
_status$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?initCurrSymbolsEquiv@@YAXXZ PROC			; initCurrSymbolsEquiv, COMDAT
; Line 2202
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initCurrSymbolsEquiv@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2203
	cmp	DWORD PTR _gCurrSymbolsEquiv, 0
	je	SHORT $LN6@initCurrSy
	mov	eax, DWORD PTR ?__LINE__Var@?1??initCurrSymbolsEquiv@@YAXXZ@4JA@2077fca7
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FE@NKGBFGDF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CO@CJKEBIBE@?$AAg?$AAC?$AAu?$AAr?$AAr?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AAs?$AAE?$AAq?$AAu?$AAi?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@initCurrSy:
; Line 2204
	mov	DWORD PTR _status$[ebp], 0
; Line 2205
	push	OFFSET _currency_cleanup
	push	16					; 00000010H
	call	_ucln_i18n_registerCleanup_56
	add	esp, 8
; Line 2206
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82225[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82225[ebp], 0
	je	SHORT $LN7@initCurrSy
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82225[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN8@initCurrSy
$LN7@initCurrSy:
	mov	DWORD PTR tv80[ebp], 0
$LN8@initCurrSy:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T82224[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T82224[ebp]
	mov	DWORD PTR _temp$[ebp], edx
; Line 2207
	cmp	DWORD PTR _temp$[ebp], 0
	jne	SHORT $LN3@initCurrSy
; Line 2208
	jmp	$LN4@initCurrSy
$LN3@initCurrSy:
; Line 2210
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@initCurrSy
; Line 2211
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T82229[ebp], eax
	mov	ecx, DWORD PTR $T82229[ebp]
	mov	DWORD PTR $T82228[ebp], ecx
	cmp	DWORD PTR $T82228[ebp], 0
	je	SHORT $LN9@initCurrSy
	push	1
	mov	ecx, DWORD PTR $T82228[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN10@initCurrSy
$LN9@initCurrSy:
	mov	DWORD PTR tv89[ebp], 0
$LN10@initCurrSy:
; Line 2212
	jmp	$LN4@initCurrSy
$LN2@initCurrSy:
; Line 2214
	mov	esi, esp
	push	OFFSET ?deleteUnicode@@YAXPAX@Z		; deleteUnicode
	mov	ecx, DWORD PTR _temp$[ebp]
	call	DWORD PTR __imp_?setValueDeleter@Hashtable@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2215
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	call	?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z ; populateCurrSymbolsEquiv
	add	esp, 8
; Line 2216
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@initCurrSy
; Line 2217
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T82233[ebp], eax
	mov	ecx, DWORD PTR $T82233[ebp]
	mov	DWORD PTR $T82232[ebp], ecx
	cmp	DWORD PTR $T82232[ebp], 0
	je	SHORT $LN11@initCurrSy
	push	1
	mov	ecx, DWORD PTR $T82232[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN12@initCurrSy
$LN11@initCurrSy:
	mov	DWORD PTR tv134[ebp], 0
$LN12@initCurrSy:
; Line 2218
	jmp	SHORT $LN4@initCurrSy
$LN1@initCurrSy:
; Line 2220
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _gCurrSymbolsEquiv, eax
$LN4@initCurrSy:
; Line 2221
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@initCurrSy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@initCurrSy:
	DD	1
	DD	$LN16@initCurrSy
$LN16@initCurrSy:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN14@initCurrSy
$LN14@initCurrSy:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initCurrSymbolsEquiv@@YAXXZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T82225[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initCurrSymbolsEquiv@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initCurrSymbolsEquiv@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?initCurrSymbolsEquiv@@YAXXZ ENDP			; initCurrSymbolsEquiv
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deleteUnicode@@YAXPAX@Z
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T82248 = -224						; size = 4
$T82249 = -212						; size = 4
_entry$ = -8						; size = 4
_obj$ = 8						; size = 4
?deleteUnicode@@YAXPAX@Z PROC				; deleteUnicode, COMDAT
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 286
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _entry$[ebp], eax
; Line 287
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR $T82249[ebp], eax
	mov	ecx, DWORD PTR $T82249[ebp]
	mov	DWORD PTR $T82248[ebp], ecx
	cmp	DWORD PTR $T82248[ebp], 0
	je	SHORT $LN3@deleteUnic
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T82248[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T82248[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@deleteUnic
$LN3@deleteUnic:
	mov	DWORD PTR tv74[ebp], 0
$LN1@deleteUnic:
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteUnicode@@YAXPAX@Z ENDP				; deleteUnicode
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv142 = -536						; size = 4
tv150 = -532						; size = 4
tv140 = -528						; size = 4
tv147 = -524						; size = 4
$T74381 = -516						; size = 64
$T74382 = -444						; size = 64
_rhs$74380 = -180					; size = 64
_lhs$74379 = -108					; size = 64
_i$74375 = -36						; size = 4
_length$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hash$ = 8						; size = 4
_status$ = 12						; size = 4
?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z PROC ; populateCurrSymbolsEquiv, COMDAT
; Line 2187
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2188
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@populateCu
; Line 2189
	jmp	$LN6@populateCu
$LN5@populateCu:
; Line 2191
	mov	DWORD PTR _length$[ebp], 5
; Line 2192
	mov	DWORD PTR _i$74375[ebp], 0
	jmp	SHORT $LN4@populateCu
$LN3@populateCu:
	mov	eax, DWORD PTR _i$74375[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74375[ebp], eax
$LN4@populateCu:
	mov	eax, DWORD PTR _i$74375[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN6@populateCu
; Line 2193
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _i$74375[ebp]
	mov	ecx, DWORD PTR _EQUIV_CURRENCY_SYMBOLS[eax*8]
	push	ecx
	lea	ecx, DWORD PTR _lhs$74379[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2194
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _i$74375[ebp]
	mov	ecx, DWORD PTR _EQUIV_CURRENCY_SYMBOLS[eax*8+4]
	push	ecx
	lea	ecx, DWORD PTR _rhs$74380[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2195
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	mov	esi, esp
	lea	edx, DWORD PTR $T74382[ebp]
	push	edx
	lea	ecx, DWORD PTR _rhs$74380[ebp]
	call	DWORD PTR __imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv147[ebp], eax
	mov	eax, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	esi, esp
	lea	edx, DWORD PTR $T74381[ebp]
	push	edx
	lea	ecx, DWORD PTR _lhs$74379[ebp]
	call	DWORD PTR __imp_?unescape@UnicodeString@icu_56@@QBE?AV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv142[ebp]
	push	ecx
	call	?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z ; makeEquivalent
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T74381[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T74382[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2196
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@populateCu
; Line 2197
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _rhs$74380[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lhs$74379[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@populateCu
$LN1@populateCu:
; Line 2199
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _rhs$74380[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _lhs$74379[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN3@populateCu
$LN6@populateCu:
; Line 2200
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@populateCu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@populateCu:
	DD	2
	DD	$LN15@populateCu
$LN15@populateCu:
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN12@populateCu
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN13@populateCu
$LN13@populateCu:
	DB	114					; 00000072H
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	0
$LN12@populateCu:
	DB	108					; 0000006cH
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _lhs$74379[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _rhs$74380[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T74382[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T74381[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?populateCurrSymbolsEquiv@@YAXPAVHashtable@icu_56@@AAW4UErrorCode@@@Z ENDP ; populateCurrSymbolsEquiv
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv218 = -560						; size = 4
tv207 = -560						; size = 4
tv194 = -560						; size = 4
tv187 = -560						; size = 4
tv180 = -560						; size = 4
tv173 = -560						; size = 4
tv165 = -560						; size = 4
tv158 = -560						; size = 4
tv150 = -560						; size = 4
tv143 = -560						; size = 4
$T82271 = -552						; size = 4
$T82272 = -540						; size = 4
$T82275 = -528						; size = 4
$T82276 = -516						; size = 4
$T82279 = -504						; size = 4
$T82280 = -492						; size = 4
$T82283 = -480						; size = 4
$T82284 = -468						; size = 4
$T82287 = -456						; size = 4
$T82288 = -444						; size = 4
$T82291 = -432						; size = 4
$T82292 = -420						; size = 4
$T82295 = -408						; size = 4
$T82296 = -396						; size = 4
$T82299 = -384						; size = 4
$T82300 = -372						; size = 4
$T82303 = -360						; size = 4
$T82304 = -348						; size = 4
$T82307 = -336						; size = 4
$T82308 = -324						; size = 4
_newFirstRight$ = -120					; size = 4
_newFirstLeft$ = -108					; size = 4
_nextRight$ = -96					; size = 4
_nextLeft$ = -84					; size = 4
_firstRight$ = -72					; size = 4
_firstLeft$ = -60					; size = 4
_rightIter$ = -48					; size = 12
_leftIter$ = -28					; size = 12
__$EHRec$ = -12						; size = 12
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
_hash$ = 16						; size = 4
_status$ = 20						; size = 4
?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z PROC ; makeEquivalent, COMDAT
; Line 166
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 548				; 00000224H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-560]
	mov	ecx, 137				; 00000089H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 167
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@makeEquiva
; Line 168
	jmp	$LN15@makeEquiva
$LN14@makeEquiva:
; Line 170
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@makeEquiva
; Line 172
	jmp	$LN15@makeEquiva
$LN13@makeEquiva:
; Line 174
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ; icu_56::EquivIterator::EquivIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 175
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	??0EquivIterator@icu_56@@QAE@ABVHashtable@1@ABVUnicodeString@1@@Z ; icu_56::EquivIterator::EquivIterator
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 176
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	mov	DWORD PTR _firstLeft$[ebp], eax
; Line 177
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	mov	DWORD PTR _firstRight$[ebp], eax
; Line 178
	mov	eax, DWORD PTR _firstLeft$[ebp]
	mov	DWORD PTR _nextLeft$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _firstRight$[ebp]
	mov	DWORD PTR _nextRight$[ebp], eax
$LN12@makeEquiva:
; Line 180
	cmp	DWORD PTR _nextLeft$[ebp], 0
	je	SHORT $LN11@makeEquiva
	cmp	DWORD PTR _nextRight$[ebp], 0
	je	SHORT $LN11@makeEquiva
; Line 181
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nextLeft$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nextRight$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@makeEquiva
$LN9@makeEquiva:
; Line 183
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	jmp	$LN15@makeEquiva
$LN10@makeEquiva:
; Line 185
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	mov	DWORD PTR _nextLeft$[ebp], eax
; Line 186
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	?next@EquivIterator@icu_56@@QAEPBVUnicodeString@2@XZ ; icu_56::EquivIterator::next
	mov	DWORD PTR _nextRight$[ebp], eax
; Line 187
	jmp	SHORT $LN12@makeEquiva
$LN11@makeEquiva:
; Line 191
	cmp	DWORD PTR _firstRight$[ebp], 0
	jne	$LN8@makeEquiva
	cmp	DWORD PTR _firstLeft$[ebp], 0
	jne	$LN8@makeEquiva
; Line 194
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82272[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T82272[ebp], 0
	je	SHORT $LN17@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82272[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82272[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82272[ebp]
	mov	DWORD PTR tv143[ebp], edx
	jmp	SHORT $LN18@makeEquiva
$LN17@makeEquiva:
	mov	DWORD PTR tv143[ebp], 0
$LN18@makeEquiva:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T82271[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82271[ebp]
	mov	DWORD PTR _newFirstLeft$[ebp], ecx
; Line 195
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82276[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T82276[ebp], 0
	je	SHORT $LN19@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82276[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82276[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82276[ebp]
	mov	DWORD PTR tv150[ebp], edx
	jmp	SHORT $LN20@makeEquiva
$LN19@makeEquiva:
	mov	DWORD PTR tv150[ebp], 0
$LN20@makeEquiva:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T82275[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82275[ebp]
	mov	DWORD PTR _newFirstRight$[ebp], ecx
	jmp	$LN7@makeEquiva
$LN8@makeEquiva:
; Line 196
	cmp	DWORD PTR _firstRight$[ebp], 0
	jne	$LN6@makeEquiva
; Line 199
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82280[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T82280[ebp], 0
	je	SHORT $LN21@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82280[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82280[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82280[ebp]
	mov	DWORD PTR tv158[ebp], edx
	jmp	SHORT $LN22@makeEquiva
$LN21@makeEquiva:
	mov	DWORD PTR tv158[ebp], 0
$LN22@makeEquiva:
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR $T82279[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82279[ebp]
	mov	DWORD PTR _newFirstLeft$[ebp], ecx
; Line 200
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82284[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T82284[ebp], 0
	je	SHORT $LN23@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _firstLeft$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82284[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82284[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82284[ebp]
	mov	DWORD PTR tv165[ebp], edx
	jmp	SHORT $LN24@makeEquiva
$LN23@makeEquiva:
	mov	DWORD PTR tv165[ebp], 0
$LN24@makeEquiva:
	mov	eax, DWORD PTR tv165[ebp]
	mov	DWORD PTR $T82283[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82283[ebp]
	mov	DWORD PTR _newFirstRight$[ebp], ecx
	jmp	$LN7@makeEquiva
$LN6@makeEquiva:
; Line 201
	cmp	DWORD PTR _firstLeft$[ebp], 0
	jne	$LN4@makeEquiva
; Line 204
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82288[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T82288[ebp], 0
	je	SHORT $LN25@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _firstRight$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82288[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82288[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82288[ebp]
	mov	DWORD PTR tv173[ebp], edx
	jmp	SHORT $LN26@makeEquiva
$LN25@makeEquiva:
	mov	DWORD PTR tv173[ebp], 0
$LN26@makeEquiva:
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR $T82287[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82287[ebp]
	mov	DWORD PTR _newFirstLeft$[ebp], ecx
; Line 205
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82292[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T82292[ebp], 0
	je	SHORT $LN27@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82292[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82292[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82292[ebp]
	mov	DWORD PTR tv180[ebp], edx
	jmp	SHORT $LN28@makeEquiva
$LN27@makeEquiva:
	mov	DWORD PTR tv180[ebp], 0
$LN28@makeEquiva:
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR $T82291[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82291[ebp]
	mov	DWORD PTR _newFirstRight$[ebp], ecx
; Line 206
	jmp	$LN7@makeEquiva
$LN4@makeEquiva:
; Line 209
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82296[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T82296[ebp], 0
	je	SHORT $LN29@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _firstRight$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82296[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82296[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82296[ebp]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN30@makeEquiva
$LN29@makeEquiva:
	mov	DWORD PTR tv187[ebp], 0
$LN30@makeEquiva:
	mov	eax, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T82295[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82295[ebp]
	mov	DWORD PTR _newFirstLeft$[ebp], ecx
; Line 210
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82300[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T82300[ebp], 0
	je	SHORT $LN31@makeEquiva
	mov	esi, esp
	mov	eax, DWORD PTR _firstLeft$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T82300[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T82300[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T82300[ebp]
	mov	DWORD PTR tv194[ebp], edx
	jmp	SHORT $LN32@makeEquiva
$LN31@makeEquiva:
	mov	DWORD PTR tv194[ebp], 0
$LN32@makeEquiva:
	mov	eax, DWORD PTR tv194[ebp]
	mov	DWORD PTR $T82299[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T82299[ebp]
	mov	DWORD PTR _newFirstRight$[ebp], ecx
$LN7@makeEquiva:
; Line 212
	cmp	DWORD PTR _newFirstLeft$[ebp], 0
	je	SHORT $LN1@makeEquiva
	cmp	DWORD PTR _newFirstRight$[ebp], 0
	jne	$LN2@makeEquiva
$LN1@makeEquiva:
; Line 213
	mov	eax, DWORD PTR _newFirstLeft$[ebp]
	mov	DWORD PTR $T82304[ebp], eax
	mov	ecx, DWORD PTR $T82304[ebp]
	mov	DWORD PTR $T82303[ebp], ecx
	cmp	DWORD PTR $T82303[ebp], 0
	je	SHORT $LN33@makeEquiva
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T82303[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T82303[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv207[ebp], eax
	jmp	SHORT $LN34@makeEquiva
$LN33@makeEquiva:
	mov	DWORD PTR tv207[ebp], 0
$LN34@makeEquiva:
; Line 214
	mov	eax, DWORD PTR _newFirstRight$[ebp]
	mov	DWORD PTR $T82308[ebp], eax
	mov	ecx, DWORD PTR $T82308[ebp]
	mov	DWORD PTR $T82307[ebp], ecx
	cmp	DWORD PTR $T82307[ebp], 0
	je	SHORT $LN35@makeEquiva
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T82307[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T82307[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv218[ebp], eax
	jmp	SHORT $LN36@makeEquiva
$LN35@makeEquiva:
	mov	DWORD PTR tv218[ebp], 0
$LN36@makeEquiva:
; Line 215
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 216
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	jmp	SHORT $LN15@makeEquiva
$LN2@makeEquiva:
; Line 218
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newFirstLeft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lhs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hash$[ebp]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newFirstRight$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rhs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _hash$[ebp]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rightIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _leftIter$[ebp]
	call	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
$LN15@makeEquiva:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN51@makeEquiva
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 560				; 00000230H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN51@makeEquiva:
	DD	2
	DD	$LN50@makeEquiva
$LN50@makeEquiva:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN47@makeEquiva
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN48@makeEquiva
$LN48@makeEquiva:
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN47@makeEquiva:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _leftIter$[ebp]
	jmp	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _rightIter$[ebp]
	jmp	??1EquivIterator@icu_56@@QAE@XZ		; icu_56::EquivIterator::~EquivIterator
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T82272[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T82276[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T82280[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T82284[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T82288[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T82292[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T82296[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T82300[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-564]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?makeEquivalent@@YAXABVUnicodeString@icu_56@@0PAVHashtable@2@AAW4UErrorCode@@@Z ENDP ; makeEquivalent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_ucurr_openISOCurrencies_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_openISOCurrencies_56
_TEXT	SEGMENT
_myContext$ = -20					; size = 4
_myEnum$ = -8						; size = 4
_currType$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_ucurr_openISOCurrencies_56 PROC			; COMDAT
; Line 2248
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2249
	mov	DWORD PTR _myEnum$[ebp], 0
; Line 2252
	push	28					; 0000001cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _myEnum$[ebp], eax
; Line 2253
	cmp	DWORD PTR _myEnum$[ebp], 0
	jne	SHORT $LN2@ucurr_open
; Line 2254
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2255
	xor	eax, eax
	jmp	SHORT $LN3@ucurr_open
$LN2@ucurr_open:
; Line 2257
	push	1
	push	OFFSET _gEnumCurrencyList
	call	_uprv_checkValidMemory
	add	esp, 8
	push	28					; 0000001cH
	push	OFFSET _gEnumCurrencyList
	mov	eax, DWORD PTR _myEnum$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2258
	push	8
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _myContext$[ebp], eax
; Line 2259
	cmp	DWORD PTR _myContext$[ebp], 0
	jne	SHORT $LN1@ucurr_open
; Line 2260
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2261
	mov	eax, DWORD PTR _myEnum$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2262
	xor	eax, eax
	jmp	SHORT $LN3@ucurr_open
$LN1@ucurr_open:
; Line 2264
	mov	eax, DWORD PTR _myContext$[ebp]
	mov	ecx, DWORD PTR _currType$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2265
	mov	eax, DWORD PTR _myContext$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 2266
	mov	eax, DWORD PTR _myEnum$[ebp]
	mov	ecx, DWORD PTR _myContext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2267
	mov	eax, DWORD PTR _myEnum$[ebp]
$LN3@ucurr_open:
; Line 2268
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucurr_openISOCurrencies_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_countCurrencies_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_countCurrencies_56
_TEXT	SEGMENT
_toDate$74469 = -384					; size = 8
_toArray$74465 = -368					; size = 4
_toRes$74464 = -356					; size = 4
_toLength$74463 = -344					; size = 4
_fromDate$74460 = -332					; size = 8
_currDate64$74456 = -316				; size = 8
_fromArray$74455 = -300					; size = 4
_fromRes$74454 = -288					; size = 4
_fromLength$74453 = -276				; size = 4
_currencyRes$74452 = -264				; size = 4
_i$74448 = -252						; size = 4
_countryArray$74446 = -240				; size = 4
_cm$74445 = -228					; size = 4
_rb$74444 = -216					; size = 4
_idDelim$74442 = -204					; size = 4
_id$74440 = -192					; size = 157
_localStatus$74439 = -24				; size = 4
_currCount$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_locale$ = 8						; size = 4
_date$ = 12						; size = 8
_ec$ = 20						; size = 4
_ucurr_countCurrencies_56 PROC				; COMDAT
; Line 2274
	push	ebp
	mov	ebp, esp
	sub	esp, 580				; 00000244H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-580]
	mov	ecx, 145				; 00000091H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2275
	mov	DWORD PTR _currCount$[ebp], 0
; Line 2277
	cmp	DWORD PTR _ec$[ebp], 0
	je	$LN1@ucurr_coun@2
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@ucurr_coun@2
; Line 2280
	mov	DWORD PTR _localStatus$74439[ebp], 0
; Line 2282
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$74440[ebp]
	push	ecx
	push	OFFSET ??_C@_08JLPCGLMH@currency?$AA@
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
; Line 2284
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$74440[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z ; idForLocale
	add	esp, 16					; 00000010H
; Line 2286
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@ucurr_coun@2
; Line 2288
	xor	eax, eax
	jmp	$LN15@ucurr_coun@2
$LN13@ucurr_coun@2:
; Line 2292
	push	95					; 0000005fH
	lea	eax, DWORD PTR _id$74440[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _idDelim$74442[ebp], eax
; Line 2293
	cmp	DWORD PTR _idDelim$74442[ebp], 0
	je	SHORT $LN12@ucurr_coun@2
; Line 2295
	mov	eax, DWORD PTR _idDelim$74442[ebp]
	mov	BYTE PTR [eax], 0
$LN12@ucurr_coun@2:
; Line 2299
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	push	OFFSET _CURRENCY_DATA
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$74444[ebp], eax
; Line 2300
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$74444[ebp]
	push	ecx
	push	OFFSET _CURRENCY_MAP
	mov	edx, DWORD PTR _rb$74444[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cm$74445[ebp], eax
; Line 2303
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	mov	ecx, DWORD PTR _cm$74445[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$74440[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$74444[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _countryArray$74446[ebp], eax
; Line 2306
	mov	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN8@ucurr_coun@2
; Line 2308
	mov	DWORD PTR _i$74448[ebp], 0
	jmp	SHORT $LN10@ucurr_coun@2
$LN9@ucurr_coun@2:
	mov	eax, DWORD PTR _i$74448[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74448[ebp], eax
$LN10@ucurr_coun@2:
	mov	eax, DWORD PTR _countryArray$74446[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _i$74448[ebp], eax
	jge	$LN8@ucurr_coun@2
; Line 2311
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$74448[ebp]
	push	ecx
	mov	edx, DWORD PTR _countryArray$74446[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyRes$74452[ebp], eax
; Line 2314
	mov	DWORD PTR _fromLength$74453[ebp], 0
; Line 2315
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_04HNEBHLOP@from?$AA@
	mov	ecx, DWORD PTR _currencyRes$74452[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _fromRes$74454[ebp], eax
; Line 2316
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromLength$74453[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRes$74454[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fromArray$74455[ebp], eax
; Line 2318
	mov	eax, DWORD PTR _fromArray$74455[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74456[ebp], eax
	mov	DWORD PTR _currDate64$74456[ebp+4], edx
; Line 2319
	mov	eax, DWORD PTR _fromArray$74455[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74456[ebp]
	or	edx, DWORD PTR _currDate64$74456[ebp+4]
	mov	DWORD PTR _currDate64$74456[ebp], eax
	mov	DWORD PTR _currDate64$74456[ebp+4], edx
; Line 2320
	fild	QWORD PTR _currDate64$74456[ebp]
	fstp	QWORD PTR _fromDate$74460[ebp]
; Line 2322
	mov	eax, DWORD PTR _currencyRes$74452[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	eax, 2
	jle	$LN7@ucurr_coun@2
; Line 2324
	mov	DWORD PTR _toLength$74463[ebp], 0
; Line 2325
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_02LBCDJBAJ@to?$AA@
	mov	ecx, DWORD PTR _currencyRes$74452[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _toRes$74464[ebp], eax
; Line 2326
	lea	eax, DWORD PTR _localStatus$74439[ebp]
	push	eax
	lea	ecx, DWORD PTR _toLength$74463[ebp]
	push	ecx
	mov	edx, DWORD PTR _toRes$74464[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _toArray$74465[ebp], eax
; Line 2328
	mov	eax, DWORD PTR _toArray$74465[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74456[ebp], eax
	mov	DWORD PTR _currDate64$74456[ebp+4], edx
; Line 2329
	mov	eax, DWORD PTR _toArray$74465[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74456[ebp]
	or	edx, DWORD PTR _currDate64$74456[ebp+4]
	mov	DWORD PTR _currDate64$74456[ebp], eax
	mov	DWORD PTR _currDate64$74456[ebp+4], edx
; Line 2330
	fild	QWORD PTR _currDate64$74456[ebp]
	fstp	QWORD PTR _toDate$74469[ebp]
; Line 2332
	fld	QWORD PTR _date$[ebp]
	fcomp	QWORD PTR _fromDate$74460[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN6@ucurr_coun@2
	fld	QWORD PTR _toDate$74469[ebp]
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN6@ucurr_coun@2
; Line 2334
	mov	eax, DWORD PTR _currCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _currCount$[ebp], eax
$LN6@ucurr_coun@2:
; Line 2337
	mov	eax, DWORD PTR _toRes$74464[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2339
	jmp	SHORT $LN4@ucurr_coun@2
$LN7@ucurr_coun@2:
; Line 2341
	fld	QWORD PTR _date$[ebp]
	fcomp	QWORD PTR _fromDate$74460[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN4@ucurr_coun@2
; Line 2343
	mov	eax, DWORD PTR _currCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _currCount$[ebp], eax
$LN4@ucurr_coun@2:
; Line 2348
	mov	eax, DWORD PTR _currencyRes$74452[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2349
	mov	eax, DWORD PTR _fromRes$74454[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2351
	jmp	$LN9@ucurr_coun@2
$LN8@ucurr_coun@2:
; Line 2354
	mov	eax, DWORD PTR _countryArray$74446[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2357
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@ucurr_coun@2
	cmp	DWORD PTR _localStatus$74439[ebp], 0
	je	SHORT $LN3@ucurr_coun@2
$LN2@ucurr_coun@2:
; Line 2361
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _localStatus$74439[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@ucurr_coun@2:
; Line 2364
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucurr_coun@2
; Line 2367
	mov	eax, DWORD PTR _currCount$[ebp]
	jmp	SHORT $LN15@ucurr_coun@2
$LN1@ucurr_coun@2:
; Line 2374
	xor	eax, eax
$LN15@ucurr_coun@2:
; Line 2375
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@ucurr_coun@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 580				; 00000244H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@ucurr_coun@2:
	DD	4
	DD	$LN21@ucurr_coun@2
$LN21@ucurr_coun@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN17@ucurr_coun@2
	DD	-192					; ffffff40H
	DD	157					; 0000009dH
	DD	$LN18@ucurr_coun@2
	DD	-276					; fffffeecH
	DD	4
	DD	$LN19@ucurr_coun@2
	DD	-344					; fffffea8H
	DD	4
	DD	$LN20@ucurr_coun@2
$LN20@ucurr_coun@2:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN19@ucurr_coun@2:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN18@ucurr_coun@2:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN17@ucurr_coun@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucurr_countCurrencies_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_forLocaleAndDate_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucurr_forLocaleAndDate_56
_TEXT	SEGMENT
_toDate$74525 = -420					; size = 8
_toArray$74521 = -404					; size = 4
_toRes$74520 = -392					; size = 4
_toLength$74519 = -380					; size = 4
_fromDate$74516 = -368					; size = 8
_currDate64$74512 = -352				; size = 8
_fromArray$74511 = -336					; size = 4
_fromRes$74510 = -324					; size = 4
_fromLength$74509 = -312				; size = 4
_currencyRes$74508 = -300				; size = 4
_i$74504 = -288						; size = 4
_matchFound$74500 = -273				; size = 1
_countryArray$74499 = -264				; size = 4
_cm$74498 = -252					; size = 4
_rb$74497 = -240					; size = 4
_idDelim$74495 = -228					; size = 4
_id$74493 = -216					; size = 157
_localStatus$74492 = -48				; size = 4
_s$ = -36						; size = 4
_currIndex$ = -24					; size = 4
_resLen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_locale$ = 8						; size = 4
_date$ = 12						; size = 8
_index$ = 20						; size = 4
_buff$ = 24						; size = 4
_buffCapacity$ = 28					; size = 4
_ec$ = 32						; size = 4
_ucurr_forLocaleAndDate_56 PROC				; COMDAT
; Line 2384
	push	ebp
	mov	ebp, esp
	sub	esp, 616				; 00000268H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-616]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2385
	mov	DWORD PTR _resLen$[ebp], 0
; Line 2386
	mov	DWORD PTR _currIndex$[ebp], 0
; Line 2387
	mov	DWORD PTR _s$[ebp], 0
; Line 2389
	cmp	DWORD PTR _ec$[ebp], 0
	je	$LN1@ucurr_forL@2
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@ucurr_forL@2
; Line 2392
	cmp	DWORD PTR _buff$[ebp], 0
	je	SHORT $LN22@ucurr_forL@2
	cmp	DWORD PTR _buffCapacity$[ebp], 0
	jne	SHORT $LN23@ucurr_forL@2
$LN22@ucurr_forL@2:
	cmp	DWORD PTR _buffCapacity$[ebp], 0
	jne	$LN24@ucurr_forL@2
$LN23@ucurr_forL@2:
; Line 2395
	mov	DWORD PTR _localStatus$74492[ebp], 0
; Line 2397
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$74493[ebp]
	push	ecx
	push	OFFSET ??_C@_08JLPCGLMH@currency?$AA@
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getKeywordValue_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _resLen$[ebp], eax
; Line 2400
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _id$74493[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?idForLocale@@YAIPBDPADHPAW4UErrorCode@@@Z ; idForLocale
	add	esp, 16					; 00000010H
; Line 2401
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@ucurr_forL@2
; Line 2403
	xor	eax, eax
	jmp	$LN26@ucurr_forL@2
$LN21@ucurr_forL@2:
; Line 2407
	push	95					; 0000005fH
	lea	eax, DWORD PTR _id$74493[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _idDelim$74495[ebp], eax
; Line 2408
	cmp	DWORD PTR _idDelim$74495[ebp], 0
	je	SHORT $LN20@ucurr_forL@2
; Line 2410
	mov	eax, DWORD PTR _idDelim$74495[ebp]
	mov	BYTE PTR [eax], 0
$LN20@ucurr_forL@2:
; Line 2414
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	push	OFFSET _CURRENCY_DATA
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rb$74497[ebp], eax
; Line 2415
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	mov	ecx, DWORD PTR _rb$74497[ebp]
	push	ecx
	push	OFFSET _CURRENCY_MAP
	mov	edx, DWORD PTR _rb$74497[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cm$74498[ebp], eax
; Line 2418
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	mov	ecx, DWORD PTR _cm$74498[ebp]
	push	ecx
	lea	edx, DWORD PTR _id$74493[ebp]
	push	edx
	mov	eax, DWORD PTR _rb$74497[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _countryArray$74499[ebp], eax
; Line 2421
	mov	BYTE PTR _matchFound$74500[ebp], 0
; Line 2422
	mov	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN14@ucurr_forL@2
; Line 2424
	cmp	DWORD PTR _index$[ebp], 0
	jle	SHORT $LN17@ucurr_forL@2
	mov	eax, DWORD PTR _countryArray$74499[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _index$[ebp], eax
	jle	SHORT $LN18@ucurr_forL@2
$LN17@ucurr_forL@2:
; Line 2427
	mov	eax, DWORD PTR _countryArray$74499[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2428
	xor	eax, eax
	jmp	$LN26@ucurr_forL@2
$LN18@ucurr_forL@2:
; Line 2431
	mov	DWORD PTR _i$74504[ebp], 0
	jmp	SHORT $LN16@ucurr_forL@2
$LN15@ucurr_forL@2:
	mov	eax, DWORD PTR _i$74504[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74504[ebp], eax
$LN16@ucurr_forL@2:
	mov	eax, DWORD PTR _countryArray$74499[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	DWORD PTR _i$74504[ebp], eax
	jge	$LN14@ucurr_forL@2
; Line 2434
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$74504[ebp]
	push	ecx
	mov	edx, DWORD PTR _countryArray$74499[ebp]
	push	edx
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _currencyRes$74508[ebp], eax
; Line 2435
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	mov	edx, DWORD PTR _currencyRes$74508[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 2438
	mov	DWORD PTR _fromLength$74509[ebp], 0
; Line 2439
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_04HNEBHLOP@from?$AA@
	mov	ecx, DWORD PTR _currencyRes$74508[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _fromRes$74510[ebp], eax
; Line 2440
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromLength$74509[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRes$74510[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fromArray$74511[ebp], eax
; Line 2442
	mov	eax, DWORD PTR _fromArray$74511[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74512[ebp], eax
	mov	DWORD PTR _currDate64$74512[ebp+4], edx
; Line 2443
	mov	eax, DWORD PTR _fromArray$74511[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74512[ebp]
	or	edx, DWORD PTR _currDate64$74512[ebp+4]
	mov	DWORD PTR _currDate64$74512[ebp], eax
	mov	DWORD PTR _currDate64$74512[ebp+4], edx
; Line 2444
	fild	QWORD PTR _currDate64$74512[ebp]
	fstp	QWORD PTR _fromDate$74516[ebp]
; Line 2446
	mov	eax, DWORD PTR _currencyRes$74508[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	cmp	eax, 2
	jle	$LN13@ucurr_forL@2
; Line 2448
	mov	DWORD PTR _toLength$74519[ebp], 0
; Line 2449
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_02LBCDJBAJ@to?$AA@
	mov	ecx, DWORD PTR _currencyRes$74508[ebp]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _toRes$74520[ebp], eax
; Line 2450
	lea	eax, DWORD PTR _localStatus$74492[ebp]
	push	eax
	lea	ecx, DWORD PTR _toLength$74519[ebp]
	push	ecx
	mov	edx, DWORD PTR _toRes$74520[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _toArray$74521[ebp], eax
; Line 2452
	mov	eax, DWORD PTR _toArray$74521[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	DWORD PTR _currDate64$74512[ebp], eax
	mov	DWORD PTR _currDate64$74512[ebp+4], edx
; Line 2453
	mov	eax, DWORD PTR _toArray$74521[ebp]
	mov	eax, DWORD PTR [eax+4]
	cdq
	and	edx, 0
	or	eax, DWORD PTR _currDate64$74512[ebp]
	or	edx, DWORD PTR _currDate64$74512[ebp+4]
	mov	DWORD PTR _currDate64$74512[ebp], eax
	mov	DWORD PTR _currDate64$74512[ebp+4], edx
; Line 2454
	fild	QWORD PTR _currDate64$74512[ebp]
	fstp	QWORD PTR _toDate$74525[ebp]
; Line 2456
	fld	QWORD PTR _date$[ebp]
	fcomp	QWORD PTR _fromDate$74516[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN11@ucurr_forL@2
	fld	QWORD PTR _toDate$74525[ebp]
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN11@ucurr_forL@2
; Line 2458
	mov	eax, DWORD PTR _currIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _currIndex$[ebp], eax
; Line 2459
	mov	eax, DWORD PTR _currIndex$[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jne	SHORT $LN11@ucurr_forL@2
; Line 2461
	mov	BYTE PTR _matchFound$74500[ebp], 1
$LN11@ucurr_forL@2:
; Line 2465
	mov	eax, DWORD PTR _toRes$74520[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2467
	jmp	SHORT $LN8@ucurr_forL@2
$LN13@ucurr_forL@2:
; Line 2469
	fld	QWORD PTR _date$[ebp]
	fcomp	QWORD PTR _fromDate$74516[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN8@ucurr_forL@2
; Line 2471
	mov	eax, DWORD PTR _currIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _currIndex$[ebp], eax
; Line 2472
	mov	eax, DWORD PTR _currIndex$[ebp]
	cmp	eax, DWORD PTR _index$[ebp]
	jne	SHORT $LN8@ucurr_forL@2
; Line 2474
	mov	BYTE PTR _matchFound$74500[ebp], 1
$LN8@ucurr_forL@2:
; Line 2480
	mov	eax, DWORD PTR _currencyRes$74508[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2481
	mov	eax, DWORD PTR _fromRes$74510[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2484
	movzx	eax, BYTE PTR _matchFound$74500[ebp]
	test	eax, eax
	je	SHORT $LN7@ucurr_forL@2
; Line 2486
	jmp	SHORT $LN14@ucurr_forL@2
$LN7@ucurr_forL@2:
; Line 2489
	jmp	$LN15@ucurr_forL@2
$LN14@ucurr_forL@2:
; Line 2492
	mov	eax, DWORD PTR _countryArray$74499[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2495
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@ucurr_forL@2
	cmp	DWORD PTR _localStatus$74492[ebp], 0
	je	SHORT $LN6@ucurr_forL@2
$LN5@ucurr_forL@2:
; Line 2499
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR _localStatus$74492[ebp]
	mov	DWORD PTR [eax], ecx
$LN6@ucurr_forL@2:
; Line 2502
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucurr_forL@2
; Line 2505
	mov	eax, DWORD PTR _buffCapacity$[ebp]
	cmp	eax, DWORD PTR _resLen$[ebp]
	jle	SHORT $LN3@ucurr_forL@2
	movzx	eax, BYTE PTR _matchFound$74500[ebp]
	test	eax, eax
	je	SHORT $LN3@ucurr_forL@2
; Line 2508
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buff$[ebp]
	push	ecx
	call	_u_strcpy_56
	add	esp, 8
; Line 2510
	jmp	SHORT $LN2@ucurr_forL@2
$LN3@ucurr_forL@2:
; Line 2512
	xor	eax, eax
	jmp	SHORT $LN26@ucurr_forL@2
$LN2@ucurr_forL@2:
; Line 2517
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	_u_terminateUChars_56
	add	esp, 16					; 00000010H
	jmp	SHORT $LN26@ucurr_forL@2
; Line 2519
	jmp	SHORT $LN1@ucurr_forL@2
$LN24@ucurr_forL@2:
; Line 2522
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@ucurr_forL@2:
; Line 2529
	mov	eax, DWORD PTR _resLen$[ebp]
$LN26@ucurr_forL@2:
; Line 2530
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@ucurr_forL@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 616				; 00000268H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN34@ucurr_forL@2:
	DD	5
	DD	$LN33@ucurr_forL@2
$LN33@ucurr_forL@2:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN28@ucurr_forL@2
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN29@ucurr_forL@2
	DD	-216					; ffffff28H
	DD	157					; 0000009dH
	DD	$LN30@ucurr_forL@2
	DD	-312					; fffffec8H
	DD	4
	DD	$LN31@ucurr_forL@2
	DD	-380					; fffffe84H
	DD	4
	DD	$LN32@ucurr_forL@2
$LN32@ucurr_forL@2:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN31@ucurr_forL@2:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN30@ucurr_forL@2:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN29@ucurr_forL@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN28@ucurr_forL@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_ucurr_forLocaleAndDate_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_03MBICDIME@und?$AA@			; `string'
PUBLIC	??_C@_0M@FGDPCCPL@CurrencyMap?$AA@		; `string'
PUBLIC	??_C@_0BB@CPLPEJEM@supplementalData?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucurr_getKeywordValuesForLocale_56
EXTRN	_ulist_getNext_56:PROC
EXTRN	_ulist_resetList_56:PROC
EXTRN	_uenum_close_56:PROC
EXTRN	_ulist_getListSize_56:PROC
EXTRN	_ulist_addItemEndList_56:PROC
EXTRN	_ulist_containsString_56:PROC
EXTRN	_ures_getUTF8StringByKey_56:PROC
EXTRN	_ures_getType_56:PROC
EXTRN	_ures_getNextResource_56:PROC
EXTRN	_ures_hasNext_56:PROC
EXTRN	_ures_initStackObject_56:PROC
EXTRN	_ulist_deleteList_56:PROC
EXTRN	_ulist_createEmptyList_56:PROC
EXTRN	_uloc_addLikelySubtags_56:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_03MBICDIME@und?$AA@
CONST	SEGMENT
??_C@_03MBICDIME@und?$AA@ DB 'und', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGDPCCPL@CurrencyMap?$AA@
CONST	SEGMENT
??_C@_0M@FGDPCCPL@CurrencyMap?$AA@ DB 'CurrencyMap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPLPEJEM@supplementalData?$AA@
CONST	SEGMENT
??_C@_0BB@CPLPEJEM@supplementalData?$AA@ DB 'supplementalData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucurr_getKeywordValuesForLocale_56
_TEXT	SEGMENT
_tmpValue$74607 = -1120					; size = 4
_value$74600 = -1108					; size = 4
_hasTo$74586 = -1093					; size = 1
_curIDLength$74583 = -1084				; size = 4
_curID$74580 = -1072					; size = 4
_isPrefRegion$74573 = -1057				; size = 1
_region$74572 = -1048					; size = 4
_to$ = -1036						; size = 152
_curbndl$ = -876					; size = 152
_regbndl$ = -716					; size = 152
_bundlekey$ = -556					; size = 152
_bundle$ = -396						; size = 4
_en$ = -384						; size = 4
_otherValues$ = -372					; size = 4
_values$ = -360						; size = 4
_loc$74550 = -348					; size = 157
_prefRegionLength$ = -180				; size = 4
_prefRegion$ = -168					; size = 157
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_locale$ = 12						; size = 4
_commonlyUsed$ = 16					; size = 1
_status$ = 20						; size = 4
_ucurr_getKeywordValuesForLocale_56 PROC		; COMDAT
; Line 2542
	push	ebp
	mov	ebp, esp
	sub	esp, 1316				; 00000524H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1316]
	mov	ecx, 329				; 00000149H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2544
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _prefRegion$[ebp], al
	push	156					; 0000009cH
	push	0
	lea	eax, DWORD PTR _prefRegion$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2545
	mov	DWORD PTR _prefRegionLength$[ebp], 0
; Line 2546
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _prefRegion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_getCountry_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _prefRegionLength$[ebp], eax
; Line 2547
	cmp	DWORD PTR _prefRegionLength$[ebp], 0
	jne	SHORT $LN30@ucurr_getK
; Line 2548
	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _loc$74550[ebp], al
	push	156					; 0000009cH
	push	0
	lea	eax, DWORD PTR _loc$74550[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2549
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _loc$74550[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	_uloc_addLikelySubtags_56
	add	esp, 16					; 00000010H
; Line 2551
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _prefRegion$[ebp]
	push	ecx
	lea	edx, DWORD PTR _loc$74550[ebp]
	push	edx
	call	_uloc_getCountry_56
	add	esp, 16					; 00000010H
$LN30@ucurr_getK:
; Line 2555
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_ulist_createEmptyList_56
	add	esp, 4
	mov	DWORD PTR _values$[ebp], eax
; Line 2556
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_ulist_createEmptyList_56
	add	esp, 4
	mov	DWORD PTR _otherValues$[ebp], eax
; Line 2557
	push	28					; 0000001cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _en$[ebp], eax
; Line 2558
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN28@ucurr_getK
	cmp	DWORD PTR _en$[ebp], 0
	jne	SHORT $LN29@ucurr_getK
$LN28@ucurr_getK:
; Line 2559
	cmp	DWORD PTR _en$[ebp], 0
	jne	SHORT $LN27@ucurr_getK
; Line 2560
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2561
	jmp	SHORT $LN26@ucurr_getK
$LN27@ucurr_getK:
; Line 2562
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN26@ucurr_getK:
; Line 2564
	mov	eax, DWORD PTR _values$[ebp]
	push	eax
	call	_ulist_deleteList_56
	add	esp, 4
; Line 2565
	mov	eax, DWORD PTR _otherValues$[ebp]
	push	eax
	call	_ulist_deleteList_56
	add	esp, 4
; Line 2566
	xor	eax, eax
	jmp	$LN31@ucurr_getK
$LN29@ucurr_getK:
; Line 2568
	push	28					; 0000001cH
	push	OFFSET _defaultKeywordValues
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2569
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR _values$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2571
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@CPLPEJEM@supplementalData?$AA@
	push	OFFSET ??_C@_0O@EJPGDBK@icudt56l?9curr?$AA@
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 2572
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	push	OFFSET ??_C@_0M@FGDPCCPL@CurrencyMap?$AA@
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2574
	lea	eax, DWORD PTR _bundlekey$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2575
	lea	eax, DWORD PTR _regbndl$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2576
	lea	eax, DWORD PTR _curbndl$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 2577
	lea	eax, DWORD PTR _to$[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
$LN25@ucurr_getK:
; Line 2579
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN24@ucurr_getK
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN24@ucurr_getK
; Line 2580
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bundlekey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
; Line 2581
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN23@ucurr_getK
; Line 2582
	jmp	$LN24@ucurr_getK
$LN23@ucurr_getK:
; Line 2584
	lea	eax, DWORD PTR _bundlekey$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _region$74572[ebp], eax
; Line 2585
	lea	eax, DWORD PTR _prefRegion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _region$74572[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR _isPrefRegion$74573[ebp], al
; Line 2586
	movsx	eax, BYTE PTR _isPrefRegion$74573[ebp]
	test	eax, eax
	jne	SHORT $LN22@ucurr_getK
	movsx	eax, BYTE PTR _commonlyUsed$[ebp]
	test	eax, eax
	je	SHORT $LN22@ucurr_getK
; Line 2590
	jmp	$LN25@ucurr_getK
$LN22@ucurr_getK:
; Line 2592
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _regbndl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _region$74572[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2593
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@ucurr_getK
; Line 2594
	jmp	$LN24@ucurr_getK
$LN20@ucurr_getK:
; Line 2596
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN19@ucurr_getK
	lea	eax, DWORD PTR _regbndl$[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN19@ucurr_getK
; Line 2597
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _curbndl$[ebp]
	push	ecx
	lea	edx, DWORD PTR _regbndl$[ebp]
	push	edx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
; Line 2598
	lea	eax, DWORD PTR _curbndl$[ebp]
	push	eax
	call	_ures_getType_56
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN18@ucurr_getK
; Line 2600
	jmp	SHORT $LN20@ucurr_getK
$LN18@ucurr_getK:
; Line 2602
	push	96					; 00000060H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _curID$74580[ebp], eax
; Line 2603
	mov	DWORD PTR _curIDLength$74583[ebp], 96	; 00000060H
; Line 2604
	cmp	DWORD PTR _curID$74580[ebp], 0
	jne	SHORT $LN17@ucurr_getK
; Line 2605
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2606
	jmp	$LN19@ucurr_getK
$LN17@ucurr_getK:
; Line 2610
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _curIDLength$74583[ebp]
	push	ecx
	mov	edx, DWORD PTR _curID$74580[ebp]
	push	edx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	lea	eax, DWORD PTR _curbndl$[ebp]
	push	eax
	call	_ures_getUTF8StringByKey_56
	add	esp, 24					; 00000018H
; Line 2625
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@ucurr_getK
; Line 2626
	jmp	$LN19@ucurr_getK
$LN16@ucurr_getK:
; Line 2628
	mov	BYTE PTR _hasTo$74586[ebp], 0
; Line 2629
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _to$[ebp]
	push	ecx
	push	OFFSET ??_C@_02LBCDJBAJ@to?$AA@
	lea	edx, DWORD PTR _curbndl$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2630
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@ucurr_getK
; Line 2632
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2633
	jmp	SHORT $LN14@ucurr_getK
$LN15@ucurr_getK:
; Line 2634
	mov	BYTE PTR _hasTo$74586[ebp], 1
$LN14@ucurr_getK:
; Line 2636
	movsx	eax, BYTE PTR _isPrefRegion$74573[ebp]
	test	eax, eax
	je	SHORT $LN13@ucurr_getK
	movsx	eax, BYTE PTR _hasTo$74586[ebp]
	test	eax, eax
	jne	SHORT $LN13@ucurr_getK
	mov	eax, DWORD PTR _curID$74580[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _curID$74580[ebp]
	push	ecx
	mov	edx, DWORD PTR _values$[ebp]
	push	edx
	call	_ulist_containsString_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@ucurr_getK
; Line 2638
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _curID$74580[ebp]
	push	ecx
	mov	edx, DWORD PTR _values$[ebp]
	push	edx
	call	_ulist_addItemEndList_56
	add	esp, 16					; 00000010H
	jmp	SHORT $LN12@ucurr_getK
$LN13@ucurr_getK:
; Line 2639
	mov	eax, DWORD PTR _curID$74580[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _curID$74580[ebp]
	push	ecx
	mov	edx, DWORD PTR _otherValues$[ebp]
	push	edx
	call	_ulist_containsString_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@ucurr_getK
	movsx	eax, BYTE PTR _commonlyUsed$[ebp]
	test	eax, eax
	jne	SHORT $LN11@ucurr_getK
; Line 2640
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _curID$74580[ebp]
	push	ecx
	mov	edx, DWORD PTR _otherValues$[ebp]
	push	edx
	call	_ulist_addItemEndList_56
	add	esp, 16					; 00000010H
; Line 2641
	jmp	SHORT $LN12@ucurr_getK
$LN11@ucurr_getK:
; Line 2642
	mov	eax, DWORD PTR _curID$74580[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN12@ucurr_getK:
; Line 2644
	jmp	$LN20@ucurr_getK
$LN19@ucurr_getK:
; Line 2646
	jmp	$LN25@ucurr_getK
$LN24@ucurr_getK:
; Line 2647
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN9@ucurr_getK
; Line 2648
	movsx	eax, BYTE PTR _commonlyUsed$[ebp]
	test	eax, eax
	je	SHORT $LN8@ucurr_getK
; Line 2649
	mov	eax, DWORD PTR _values$[ebp]
	push	eax
	call	_ulist_getListSize_56
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN7@ucurr_getK
; Line 2652
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uenum_close_56
	add	esp, 4
; Line 2653
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_03MBICDIME@und?$AA@
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_ucurr_getKeywordValuesForLocale_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _en$[ebp], eax
$LN7@ucurr_getK:
; Line 2655
	jmp	$LN6@ucurr_getK
$LN8@ucurr_getK:
; Line 2657
	mov	DWORD PTR _value$74600[ebp], 0
; Line 2658
	mov	eax, DWORD PTR _otherValues$[ebp]
	push	eax
	call	_ulist_resetList_56
	add	esp, 4
$LN5@ucurr_getK:
; Line 2659
	mov	eax, DWORD PTR _otherValues$[ebp]
	push	eax
	call	_ulist_getNext_56
	add	esp, 4
	mov	DWORD PTR _value$74600[ebp], eax
	cmp	DWORD PTR _value$74600[ebp], 0
	je	$LN6@ucurr_getK
; Line 2660
	mov	eax, DWORD PTR _value$74600[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _value$74600[ebp]
	push	ecx
	mov	edx, DWORD PTR _values$[ebp]
	push	edx
	call	_ulist_containsString_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@ucurr_getK
; Line 2661
	push	96					; 00000060H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _tmpValue$74607[ebp], eax
; Line 2662
	push	1
	mov	eax, DWORD PTR _value$74600[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _value$74600[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	edx, DWORD PTR _value$74600[ebp]
	push	edx
	mov	eax, DWORD PTR _tmpValue$74607[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2663
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _tmpValue$74607[ebp]
	push	ecx
	mov	edx, DWORD PTR _values$[ebp]
	push	edx
	call	_ulist_addItemEndList_56
	add	esp, 16					; 00000010H
; Line 2664
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucurr_getK
; Line 2665
	jmp	SHORT $LN6@ucurr_getK
$LN3@ucurr_getK:
; Line 2668
	jmp	$LN5@ucurr_getK
$LN6@ucurr_getK:
; Line 2671
	mov	eax, DWORD PTR _en$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ulist_resetList_56
	add	esp, 4
; Line 2672
	jmp	SHORT $LN1@ucurr_getK
$LN9@ucurr_getK:
; Line 2673
	mov	eax, DWORD PTR _values$[ebp]
	push	eax
	call	_ulist_deleteList_56
	add	esp, 4
; Line 2674
	mov	eax, DWORD PTR _en$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 2675
	mov	DWORD PTR _values$[ebp], 0
; Line 2676
	mov	DWORD PTR _en$[ebp], 0
$LN1@ucurr_getK:
; Line 2678
	lea	eax, DWORD PTR _to$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2679
	lea	eax, DWORD PTR _curbndl$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2680
	lea	eax, DWORD PTR _regbndl$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2681
	lea	eax, DWORD PTR _bundlekey$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2682
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 2684
	mov	eax, DWORD PTR _otherValues$[ebp]
	push	eax
	call	_ulist_deleteList_56
	add	esp, 4
; Line 2686
	mov	eax, DWORD PTR _en$[ebp]
$LN31@ucurr_getK:
; Line 2687
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@ucurr_getK
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1316				; 00000524H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN43@ucurr_getK:
	DD	7
	DD	$LN42@ucurr_getK
$LN42@ucurr_getK:
	DD	-168					; ffffff58H
	DD	157					; 0000009dH
	DD	$LN35@ucurr_getK
	DD	-348					; fffffea4H
	DD	157					; 0000009dH
	DD	$LN36@ucurr_getK
	DD	-556					; fffffdd4H
	DD	152					; 00000098H
	DD	$LN37@ucurr_getK
	DD	-716					; fffffd34H
	DD	152					; 00000098H
	DD	$LN38@ucurr_getK
	DD	-876					; fffffc94H
	DD	152					; 00000098H
	DD	$LN39@ucurr_getK
	DD	-1036					; fffffbf4H
	DD	152					; 00000098H
	DD	$LN40@ucurr_getK
	DD	-1084					; fffffbc4H
	DD	4
	DD	$LN41@ucurr_getK
$LN41@ucurr_getK:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN40@ucurr_getK:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	0
$LN39@ucurr_getK:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
$LN38@ucurr_getK:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
$LN37@ucurr_getK:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN36@ucurr_getK:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN35@ucurr_getK:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_ucurr_getKeywordValuesForLocale_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_07HEKEFGLC@codeMap?$AA@			; `string'
PUBLIC	??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@	; `string'
PUBLIC	_ucurr_getNumericCode_56
EXTRN	_ures_getInt_56:PROC
;	COMDAT ??_C@_07HEKEFGLC@codeMap?$AA@
CONST	SEGMENT
??_C@_07HEKEFGLC@codeMap?$AA@ DB 'codeMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@
CONST	SEGMENT
??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@ DB 'currencyNumericCodes', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucurr_getNumericCode_56
_TEXT	SEGMENT
_tmpCode$74624 = -56					; size = 4
_alphaCode$74623 = -44					; size = 4
_bundle$74619 = -32					; size = 4
_status$74618 = -20					; size = 4
_code$ = -8						; size = 4
_currency$ = 8						; size = 4
_ucurr_getNumericCode_56 PROC				; COMDAT
; Line 2691
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2692
	mov	DWORD PTR _code$[ebp], 0
; Line 2693
	cmp	DWORD PTR _currency$[ebp], 0
	je	$LN3@ucurr_getN@2
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	cmp	eax, 3
	jne	$LN3@ucurr_getN@2
; Line 2694
	mov	DWORD PTR _status$74618[ebp], 0
; Line 2696
	lea	eax, DWORD PTR _status$74618[ebp]
	push	eax
	push	OFFSET ??_C@_0BF@JLPHACBP@currencyNumericCodes?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$74619[ebp], eax
; Line 2697
	lea	eax, DWORD PTR _status$74618[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$74619[ebp]
	push	ecx
	push	OFFSET ??_C@_07HEKEFGLC@codeMap?$AA@
	mov	edx, DWORD PTR _bundle$74619[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2698
	mov	eax, DWORD PTR _status$74618[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucurr_getN@2
; Line 2700
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _alphaCode$74623[ebp]
	push	ecx
	call	?myUCharsToChars@@YAPADPADPB_W@Z	; myUCharsToChars
	add	esp, 8
; Line 2701
	lea	eax, DWORD PTR _alphaCode$74623[ebp]
	push	eax
	call	_T_CString_toUpperCase_56
	add	esp, 4
; Line 2702
	lea	eax, DWORD PTR _status$74618[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$74619[ebp]
	push	ecx
	lea	edx, DWORD PTR _alphaCode$74623[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$74619[ebp]
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 2703
	lea	eax, DWORD PTR _status$74618[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$74619[ebp]
	push	ecx
	call	_ures_getInt_56
	add	esp, 8
	mov	DWORD PTR _tmpCode$74624[ebp], eax
; Line 2704
	mov	eax, DWORD PTR _status$74618[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucurr_getN@2
; Line 2705
	mov	eax, DWORD PTR _tmpCode$74624[ebp]
	mov	DWORD PTR _code$[ebp], eax
$LN2@ucurr_getN@2:
; Line 2708
	mov	eax, DWORD PTR _bundle$74619[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN3@ucurr_getN@2:
; Line 2710
	mov	eax, DWORD PTR _code$[ebp]
; Line 2711
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ucurr_getN@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@ucurr_getN@2:
	DD	2
	DD	$LN8@ucurr_getN@2
$LN8@ucurr_getN@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@ucurr_getN@2
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN7@ucurr_getN@2
$LN7@ucurr_getN@2:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN6@ucurr_getN@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucurr_getNumericCode_56 ENDP
_TEXT	ENDS
END

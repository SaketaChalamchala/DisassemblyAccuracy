; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\zrule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	_zrule_close_56
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_close_56
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T41270 = -212						; size = 4
$T41271 = -200						; size = 4
_rule$ = 8						; size = 4
_zrule_close_56 PROC					; COMDAT
; File d:\mozilla\intl\icu\source\i18n\zrule.cpp
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 32
	mov	eax, DWORD PTR _rule$[ebp]
	mov	DWORD PTR $T41271[ebp], eax
	mov	ecx, DWORD PTR $T41271[ebp]
	mov	DWORD PTR $T41270[ebp], ecx
	cmp	DWORD PTR $T41270[ebp], 0
	je	SHORT $LN3@zrule_clos
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T41270[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T41270[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@zrule_clos
$LN3@zrule_clos:
	mov	DWORD PTR tv74[ebp], 0
$LN1@zrule_clos:
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_zrule_close_56 ENDP
_TEXT	ENDS
PUBLIC	_zrule_equals_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_equals_56
_TEXT	SEGMENT
_rule1$ = 8						; size = 4
_rule2$ = 12						; size = 4
_zrule_equals_56 PROC					; COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	esi, esp
	mov	eax, DWORD PTR _rule2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_zrule_equals_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_zrule_getName_56
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::TimeZoneRule::getName
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_getName_56
_TEXT	SEGMENT
_s$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_rule$ = 8						; size = 4
_name$ = 12						; size = 4
_nameLength$ = 16					; size = 4
_zrule_getName_56 PROC					; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _nameLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	cmp	DWORD PTR _nameLength$[ebp], -1
	sete	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 43
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nameLength$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _nameLength$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 46
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 47
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@zrule_getN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@zrule_getN:
	DD	1
	DD	$LN4@zrule_getN
$LN4@zrule_getN:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN3@zrule_getN
$LN3@zrule_getN:
	DB	115					; 00000073H
	DB	0
_zrule_getName_56 ENDP
_TEXT	ENDS
PUBLIC	_zrule_getRawOffset_56
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_getRawOffset_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_zrule_getRawOffset_56 PROC				; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_zrule_getRawOffset_56 ENDP
_TEXT	ENDS
PUBLIC	_zrule_getDSTSavings_56
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_getDSTSavings_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_zrule_getDSTSavings_56 PROC				; COMDAT
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 56
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_zrule_getDSTSavings_56 ENDP
_TEXT	ENDS
PUBLIC	_zrule_isEquivalentTo_56
EXTRN	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z:PROC ; icu_56::TimeZoneRule::isEquivalentTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _zrule_isEquivalentTo_56
_TEXT	SEGMENT
_rule1$ = 8						; size = 4
_rule2$ = 12						; size = 4
_zrule_isEquivalentTo_56 PROC				; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	mov	eax, DWORD PTR _rule2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?isEquivalentTo@TimeZoneRule@icu_56@@UBECABV12@@Z ; icu_56::TimeZoneRule::isEquivalentTo
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_zrule_isEquivalentTo_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_izrule_open_56
EXTRN	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_open_56
_TEXT	SEGMENT
tv82 = -308						; size = 4
$T41295 = -300						; size = 4
$T41296 = -288						; size = 4
$T41297 = -276						; size = 4
_s$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_nameLength$ = 12					; size = 4
_rawOffset$ = 16					; size = 4
_dstSavings$ = 20					; size = 4
_izrule_open_56 PROC					; COMDAT
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _nameLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	cmp	DWORD PTR _nameLength$[ebp], -1
	sete	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T41297[ebp], eax
	cmp	DWORD PTR $T41297[ebp], 0
	je	SHORT $LN3@izrule_ope
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T41297[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN4@izrule_ope
$LN3@izrule_ope:
	mov	DWORD PTR tv82[ebp], 0
$LN4@izrule_ope:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T41296[ebp], eax
	mov	ecx, DWORD PTR $T41296[ebp]
	mov	DWORD PTR $T41295[ebp], ecx
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T41295[ebp]
; Line 72
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@izrule_ope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@izrule_ope:
	DD	1
	DD	$LN6@izrule_ope
$LN6@izrule_ope:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN5@izrule_ope
$LN5@izrule_ope:
	DB	115					; 00000073H
	DB	0
_izrule_open_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_close_56
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T41305 = -212						; size = 4
$T41306 = -200						; size = 4
_rule$ = 8						; size = 4
_izrule_close_56 PROC					; COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	mov	eax, DWORD PTR _rule$[ebp]
	mov	DWORD PTR $T41306[ebp], eax
	mov	ecx, DWORD PTR $T41306[ebp]
	mov	DWORD PTR $T41305[ebp], ecx
	cmp	DWORD PTR $T41305[ebp], 0
	je	SHORT $LN3@izrule_clo
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T41305[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T41305[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@izrule_clo
$LN3@izrule_clo:
	mov	DWORD PTR tv74[ebp], 0
$LN1@izrule_clo:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_close_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_clone_56
EXTRN	?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ:PROC ; icu_56::InitialTimeZoneRule::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_clone_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_izrule_clone_56 PROC					; COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 81
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?clone@InitialTimeZoneRule@icu_56@@UBEPAV12@XZ ; icu_56::InitialTimeZoneRule::clone
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_clone_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_equals_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_equals_56
_TEXT	SEGMENT
_rule1$ = 8						; size = 4
_rule2$ = 12						; size = 4
_izrule_equals_56 PROC					; COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 86
	mov	esi, esp
	mov	eax, DWORD PTR _rule2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _rule1$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_equals_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_izrule_getName_56
EXTRN	_uprv_malloc_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getName_56
_TEXT	SEGMENT
_s$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_rule$ = 8						; size = 4
_name$ = 12						; size = 4
_nameLength$ = 16					; size = 4
_izrule_getName_56 PROC					; COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 92
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 94
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _nameLength$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 95
	mov	eax, DWORD PTR _nameLength$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [edx], eax
; Line 96
	mov	eax, DWORD PTR _nameLength$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR _name$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 97
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@izrule_get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@izrule_get:
	DD	1
	DD	$LN4@izrule_get
$LN4@izrule_get:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN3@izrule_get
$LN3@izrule_get:
	DB	115					; 00000073H
	DB	0
_izrule_getName_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getRawOffset_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getRawOffset_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_izrule_getRawOffset_56 PROC				; COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getRawOffset_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getDSTSavings_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getDSTSavings_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_izrule_getDSTSavings_56 PROC				; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getDSTSavings_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_isEquivalentTo_56
EXTRN	?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z:PROC ; icu_56::InitialTimeZoneRule::isEquivalentTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_isEquivalentTo_56
_TEXT	SEGMENT
_rule1$ = 8						; size = 4
_rule2$ = 12						; size = 4
_izrule_isEquivalentTo_56 PROC				; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _rule2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule1$[ebp]
	call	?isEquivalentTo@InitialTimeZoneRule@icu_56@@UBECABVTimeZoneRule@2@@Z ; icu_56::InitialTimeZoneRule::isEquivalentTo
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_isEquivalentTo_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getFirstStart_56
EXTRN	?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z:PROC ; icu_56::InitialTimeZoneRule::getFirstStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getFirstStart_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_prevRawOffset$ = 12					; size = 4
_prevDSTSavings$ = 16					; size = 4
_result$ = 20						; size = 4
_izrule_getFirstStart_56 PROC				; COMDAT
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 118
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getFirstStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::InitialTimeZoneRule::getFirstStart
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getFirstStart_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getFinalStart_56
EXTRN	?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z:PROC ; icu_56::InitialTimeZoneRule::getFinalStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getFinalStart_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_prevRawOffset$ = 12					; size = 4
_prevDSTSavings$ = 16					; size = 4
_result$ = 20						; size = 4
_izrule_getFinalStart_56 PROC				; COMDAT
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 124
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevRawOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getFinalStart@InitialTimeZoneRule@icu_56@@UBECHHAAN@Z ; icu_56::InitialTimeZoneRule::getFinalStart
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getFinalStart_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getNextStart_56
EXTRN	?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z:PROC ; icu_56::InitialTimeZoneRule::getNextStart
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getNextStart_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_base$ = 12						; size = 8
_prevRawOffset$ = 20					; size = 4
_prevDSTSavings$ = 24					; size = 4
_inclusive$ = 28					; size = 1
_result$ = 32						; size = 4
_izrule_getNextStart_56 PROC				; COMDAT
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 130
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _prevRawOffset$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getNextStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::InitialTimeZoneRule::getNextStart
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getNextStart_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getPreviousStart_56
EXTRN	?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z:PROC ; icu_56::InitialTimeZoneRule::getPreviousStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getPreviousStart_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_base$ = 12						; size = 8
_prevRawOffset$ = 20					; size = 4
_prevDSTSavings$ = 24					; size = 4
_inclusive$ = 28					; size = 1
_result$ = 32						; size = 4
_izrule_getPreviousStart_56 PROC			; COMDAT
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prevDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _prevRawOffset$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getPreviousStart@InitialTimeZoneRule@icu_56@@UBECNHHCAAN@Z ; icu_56::InitialTimeZoneRule::getPreviousStart
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getPreviousStart_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getStaticClassID_56
EXTRN	?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ:PROC ; icu_56::InitialTimeZoneRule::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getStaticClassID_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_izrule_getStaticClassID_56 PROC			; COMDAT
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 141
	call	?getStaticClassID@InitialTimeZoneRule@icu_56@@SAPAXXZ ; icu_56::InitialTimeZoneRule::getStaticClassID
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getStaticClassID_56 ENDP
_TEXT	ENDS
PUBLIC	_izrule_getDynamicClassID_56
EXTRN	?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ:PROC ; icu_56::InitialTimeZoneRule::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _izrule_getDynamicClassID_56
_TEXT	SEGMENT
_rule$ = 8						; size = 4
_izrule_getDynamicClassID_56 PROC			; COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDynamicClassID@InitialTimeZoneRule@icu_56@@UBEPAXXZ ; icu_56::InitialTimeZoneRule::getDynamicClassID
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_izrule_getDynamicClassID_56 ENDP
_TEXT	ENDS
END

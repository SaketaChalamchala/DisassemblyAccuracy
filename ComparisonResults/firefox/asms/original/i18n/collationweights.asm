; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\collationweights.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z	; icu_56::CollationWeights::lengthOfWeight
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z PROC	; icu_56::CollationWeights::lengthOfWeight, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collationweights.h
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	eax, DWORD PTR _weight$[ebp]
	and	eax, 16777215				; 00ffffffH
	jne	SHORT $LN6@lengthOfWe
; Line 38
	mov	eax, 1
	jmp	SHORT $LN7@lengthOfWe
	jmp	SHORT $LN7@lengthOfWe
$LN6@lengthOfWe:
; Line 39
	mov	eax, DWORD PTR _weight$[ebp]
	and	eax, 65535				; 0000ffffH
	jne	SHORT $LN4@lengthOfWe
; Line 40
	mov	eax, 2
	jmp	SHORT $LN7@lengthOfWe
	jmp	SHORT $LN7@lengthOfWe
$LN4@lengthOfWe:
; Line 41
	mov	eax, DWORD PTR _weight$[ebp]
	and	eax, 255				; 000000ffH
	jne	SHORT $LN2@lengthOfWe
; Line 42
	mov	eax, 3
	jmp	SHORT $LN7@lengthOfWe
; Line 43
	jmp	SHORT $LN7@lengthOfWe
$LN2@lengthOfWe:
; Line 44
	mov	eax, 4
$LN7@lengthOfWe:
; Line 46
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z ENDP	; icu_56::CollationWeights::lengthOfWeight
_TEXT	ENDS
PUBLIC	?countBytes@CollationWeights@icu_56@@ABEHH@Z	; icu_56::CollationWeights::countBytes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countBytes@CollationWeights@icu_56@@ABEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?countBytes@CollationWeights@icu_56@@ABEHH@Z PROC	; icu_56::CollationWeights::countBytes, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+24]
	sub	eax, DWORD PTR [esi+edx*4+4]
	add	eax, 1
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?countBytes@CollationWeights@icu_56@@ABEHH@Z ENDP	; icu_56::CollationWeights::countBytes
_TEXT	ENDS
PUBLIC	??4CollationWeights@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollationWeights::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollationWeights@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollationWeights@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CollationWeights::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 41					; 00000029H
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollationWeights@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CollationWeights::operator=
_TEXT	ENDS
PUBLIC	??0CollationWeights@icu_56@@QAE@XZ		; icu_56::CollationWeights::CollationWeights
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollationWeights@icu_56@@QAE@XZ
_TEXT	SEGMENT
_i$7750 = -20						; size = 4
_this$ = -8						; size = 4
??0CollationWeights@icu_56@@QAE@XZ PROC			; icu_56::CollationWeights::CollationWeights, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\collationweights.cpp
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0
; Line 98
	mov	DWORD PTR _i$7750[ebp], 0
	jmp	SHORT $LN3@CollationW
$LN2@CollationW:
	mov	eax, DWORD PTR _i$7750[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7750[ebp], eax
$LN3@CollationW:
	cmp	DWORD PTR _i$7750[ebp], 5
	jge	SHORT $LN4@CollationW
; Line 99
	mov	eax, DWORD PTR _i$7750[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+24], 0
	mov	edx, DWORD PTR _i$7750[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+4], 0
; Line 100
	jmp	SHORT $LN2@CollationW
$LN4@CollationW:
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollationWeights@icu_56@@QAE@XZ ENDP			; icu_56::CollationWeights::CollationWeights
_TEXT	ENDS
PUBLIC	?initForPrimary@CollationWeights@icu_56@@QAEXC@Z ; icu_56::CollationWeights::initForPrimary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initForPrimary@CollationWeights@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_compressible$ = 8					; size = 1
?initForPrimary@CollationWeights@icu_56@@QAEXC@Z PROC	; icu_56::CollationWeights::initForPrimary, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 3
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 255			; 000000ffH
; Line 108
	movsx	eax, BYTE PTR _compressible$[ebp]
	test	eax, eax
	je	SHORT $LN2@initForPri
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 4
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 254			; 000000feH
; Line 111
	jmp	SHORT $LN1@initForPri
$LN2@initForPri:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 2
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 255			; 000000ffH
$LN1@initForPri:
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 2
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 255			; 000000ffH
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 2
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 255			; 000000ffH
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?initForPrimary@CollationWeights@icu_56@@QAEXC@Z ENDP	; icu_56::CollationWeights::initForPrimary
_TEXT	ENDS
PUBLIC	?initForSecondary@CollationWeights@icu_56@@QAEXXZ ; icu_56::CollationWeights::initForSecondary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initForSecondary@CollationWeights@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?initForSecondary@CollationWeights@icu_56@@QAEXXZ PROC	; icu_56::CollationWeights::initForSecondary, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 3
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 2
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 255			; 000000ffH
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 2
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 255			; 000000ffH
; Line 133
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initForSecondary@CollationWeights@icu_56@@QAEXXZ ENDP	; icu_56::CollationWeights::initForSecondary
_TEXT	ENDS
PUBLIC	?initForTertiary@CollationWeights@icu_56@@QAEXXZ ; icu_56::CollationWeights::initForTertiary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initForTertiary@CollationWeights@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?initForTertiary@CollationWeights@icu_56@@QAEXXZ PROC	; icu_56::CollationWeights::initForTertiary, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 3
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 2
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 63			; 0000003fH
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 2
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 63			; 0000003fH
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initForTertiary@CollationWeights@icu_56@@QAEXXZ ENDP	; icu_56::CollationWeights::initForTertiary
_TEXT	ENDS
PUBLIC	??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA ; `icu_56::CollationWeights::incWeight'::`2'::__LINE__Var
PUBLIC	?incWeight@CollationWeights@icu_56@@ABEIIH@Z	; icu_56::CollationWeights::incWeight
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'w', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, 's', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA DD 098H ; `icu_56::CollationWeights::incWeight'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?incWeight@CollationWeights@icu_56@@ABEIIH@Z
_TEXT	SEGMENT
_byte$7774 = -20					; size = 4
_this$ = -8						; size = 4
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
?incWeight@CollationWeights@icu_56@@ABEIIH@Z PROC	; icu_56::CollationWeights::incWeight, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN4@incWeight:
; Line 154
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?getWeightByte@icu_56@@YAIIH@Z		; icu_56::getWeightByte
	add	esp, 8
	mov	DWORD PTR _byte$7774[ebp], eax
; Line 155
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _byte$7774[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+24]
	jae	SHORT $LN2@incWeight
; Line 156
	mov	eax, DWORD PTR _byte$7774[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _weight$[ebp]
	push	edx
	call	?setWeightByte@icu_56@@YAIIHI@Z		; icu_56::setWeightByte
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@incWeight
; Line 157
	jmp	SHORT $LN1@incWeight
$LN2@incWeight:
; Line 159
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?setWeightByte@icu_56@@YAIIHI@Z		; icu_56::setWeightByte
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weight$[ebp], eax
; Line 160
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 161
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN1@incWeight
	mov	eax, DWORD PTR ?__LINE__Var@?1??incWeight@CollationWeights@icu_56@@ABEIIH@Z@4JA
	add	eax, 9
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@incWeight:
; Line 163
	jmp	$LN4@incWeight
$LN5@incWeight:
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?incWeight@CollationWeights@icu_56@@ABEIIH@Z ENDP	; icu_56::CollationWeights::incWeight
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getWeightByte@icu_56@@YAIIH@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_idx$ = 12						; size = 4
?getWeightByte@icu_56@@YAIIH@Z PROC			; icu_56::getWeightByte, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?getWeightTrail@icu_56@@YAIIH@Z		; icu_56::getWeightTrail
	add	esp, 8
; Line 55
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getWeightByte@icu_56@@YAIIH@Z ENDP			; icu_56::getWeightByte
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getWeightTrail@icu_56@@YAIIH@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
?getWeightTrail@icu_56@@YAIIH@Z PROC			; icu_56::getWeightTrail, COMDAT
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	mov	ecx, 4
	sub	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 3
	mov	eax, DWORD PTR _weight$[ebp]
	shr	eax, cl
	and	eax, 255				; 000000ffH
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getWeightTrail@icu_56@@YAIIH@Z ENDP			; icu_56::getWeightTrail
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setWeightByte@icu_56@@YAIIHI@Z
_TEXT	SEGMENT
_mask$ = -8						; size = 4
_weight$ = 8						; size = 4
_idx$ = 12						; size = 4
_byte$ = 16						; size = 4
?setWeightByte@icu_56@@YAIIHI@Z PROC			; icu_56::setWeightByte, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 3
	mov	DWORD PTR _idx$[ebp], eax
; Line 62
	cmp	DWORD PTR _idx$[ebp], 32		; 00000020H
	jge	SHORT $LN2@setWeightB
; Line 63
	or	eax, -1
	mov	ecx, DWORD PTR _idx$[ebp]
	shr	eax, cl
	mov	DWORD PTR _mask$[ebp], eax
; Line 64
	jmp	SHORT $LN1@setWeightB
$LN2@setWeightB:
; Line 74
	mov	DWORD PTR _mask$[ebp], 0
$LN1@setWeightB:
; Line 76
	mov	eax, 32					; 00000020H
	sub	eax, DWORD PTR _idx$[ebp]
	mov	DWORD PTR _idx$[ebp], eax
; Line 77
	mov	eax, -256				; ffffff00H
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	eax, cl
	or	eax, DWORD PTR _mask$[ebp]
	mov	DWORD PTR _mask$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _weight$[ebp]
	and	eax, DWORD PTR _mask$[ebp]
	mov	edx, DWORD PTR _byte$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	edx, cl
	or	eax, edx
; Line 79
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setWeightByte@icu_56@@YAIIHI@Z ENDP			; icu_56::setWeightByte
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA ; `icu_56::CollationWeights::incWeightByOffset'::`2'::__LINE__Var
PUBLIC	?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z ; icu_56::CollationWeights::incWeightByOffset
;	COMDAT ?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA DD 0a7H ; `icu_56::CollationWeights::incWeightByOffset'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
_offset$ = 16						; size = 4
?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z PROC ; icu_56::CollationWeights::incWeightByOffset, COMDAT
; _this$ = ecx
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN4@incWeightB:
; Line 169
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?getWeightByte@icu_56@@YAIIH@Z		; icu_56::getWeightByte
	add	esp, 8
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 170
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+24]
	ja	SHORT $LN2@incWeightB
; Line 171
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _weight$[ebp]
	push	edx
	call	?setWeightByte@icu_56@@YAIIHI@Z		; icu_56::setWeightByte
	add	esp, 12					; 0000000cH
	jmp	$LN5@incWeightB
; Line 172
	jmp	$LN1@incWeightB
$LN2@incWeightB:
; Line 174
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	sub	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _offset$[ebp], edx
; Line 175
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countBytes@CollationWeights@icu_56@@ABEHH@Z ; icu_56::CollationWeights::countBytes
	mov	ecx, eax
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	idiv	ecx
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+4]
	push	edx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _weight$[ebp]
	push	eax
	call	?setWeightByte@icu_56@@YAIIHI@Z		; icu_56::setWeightByte
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weight$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countBytes@CollationWeights@icu_56@@ABEHH@Z ; icu_56::CollationWeights::countBytes
	mov	ecx, eax
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _offset$[ebp], eax
; Line 177
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 178
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN1@incWeightB
	mov	eax, DWORD PTR ?__LINE__Var@?1??incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z@4JA
	add	eax, 11					; 0000000bH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BG@DLDFFMJC@?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@incWeightB:
; Line 180
	jmp	$LN4@incWeightB
$LN5@incWeightB:
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z ENDP ; icu_56::CollationWeights::incWeightByOffset
_TEXT	ENDS
PUBLIC	?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z ; icu_56::CollationWeights::lengthenRange
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z
_TEXT	SEGMENT
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_range$ = 8						; size = 4
?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z PROC ; icu_56::CollationWeights::lengthenRange, COMDAT
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 185
	mov	eax, DWORD PTR _range$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR _length$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _range$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?setWeightTrail@icu_56@@YAIIHI@Z	; icu_56::setWeightTrail
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _range$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 187
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+24]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _range$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?setWeightTrail@icu_56@@YAIIHI@Z	; icu_56::setWeightTrail
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _range$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 188
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countBytes@CollationWeights@icu_56@@ABEHH@Z ; icu_56::CollationWeights::countBytes
	mov	ecx, DWORD PTR _range$[ebp]
	imul	eax, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _range$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 189
	mov	eax, DWORD PTR _range$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 190
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z ENDP ; icu_56::CollationWeights::lengthenRange
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setWeightTrail@icu_56@@YAIIHI@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
_trail$ = 16						; size = 4
?setWeightTrail@icu_56@@YAIIHI@Z PROC			; icu_56::setWeightTrail, COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	eax, 4
	sub	eax, DWORD PTR _length$[ebp]
	shl	eax, 3
	mov	DWORD PTR _length$[ebp], eax
; Line 49
	mov	eax, -256				; ffffff00H
	mov	ecx, DWORD PTR _length$[ebp]
	shl	eax, cl
	and	eax, DWORD PTR _weight$[ebp]
	mov	edx, DWORD PTR _trail$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	shl	edx, cl
	or	eax, edx
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setWeightTrail@icu_56@@YAIIHI@Z ENDP			; icu_56::setWeightTrail
_TEXT	ENDS
PUBLIC	??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@ ; `string'
PUBLIC	??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@ ; `string'
PUBLIC	??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA ; `icu_56::CollationWeights::getWeightRanges'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
PUBLIC	?getWeightRanges@CollationWeights@icu_56@@AAECII@Z ; icu_56::CollationWeights::getWeightRanges
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@
CONST	SEGMENT
??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@ DB 'm'
	DB	00H, 'i', 00H, 'n', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H
	DB	's', 00H, '[', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, ']', 00H, '<', 00H, 'm', 00H, 'a', 00H, 'x', 00H
	DB	'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H, '[', 00H, 'l'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ']', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@
CONST	SEGMENT
??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@ DB 't'
	DB	00H, 'r', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'W', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, '(', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '-', 00H, '1', 00H
	DB	')', 00H, '=', 00H, '=', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'n', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'W', 00H
	DB	'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '(', 00H, 'u'
	DB	00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, ',', 00H, ' ', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '-', 00H, '1', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'e', 00H
	DB	'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '>', 00H, '=', 00H, 'm'
	DB	00H, 'i', 00H, 'd', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 'L', 00H
	DB	'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'u'
	DB	00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'i', 00H
	DB	'm', 00H, 'i', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA DD 0d1H ; `icu_56::CollationWeights::getWeightRanges'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getWeightRanges@CollationWeights@icu_56@@AAECII@Z
_TEXT	SEGMENT
_length$7876 = -356					; size = 4
_merged$7858 = -341					; size = 1
_upperStart$7857 = -332					; size = 4
_lowerEnd$7856 = -320					; size = 4
_length$7851 = -308					; size = 4
_trail$7846 = -296					; size = 4
_length$7842 = -284					; size = 4
_trail$7838 = -272					; size = 4
_length$7834 = -260					; size = 4
_weight$ = -248						; size = 4
_upper$ = -236						; size = 80
_middle$ = -148						; size = 16
_lower$ = -124						; size = 80
_upperLength$ = -36					; size = 4
_lowerLength$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lowerLimit$ = 8					; size = 4
_upperLimit$ = 12					; size = 4
?getWeightRanges@CollationWeights@icu_56@@AAECII@Z PROC	; icu_56::CollationWeights::getWeightRanges, COMDAT
; _this$ = ecx
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 552				; 00000228H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-552]
	mov	ecx, 138				; 0000008aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	cmp	DWORD PTR _lowerLimit$[ebp], 0
	jne	SHORT $LN36@getWeightR
	mov	eax, DWORD PTR ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@FJNHHGNE@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@getWeightR:
; Line 211
	cmp	DWORD PTR _upperLimit$[ebp], 0
	jne	SHORT $LN37@getWeightR
	mov	eax, DWORD PTR ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CA@KPPBFBKL@?$AAu?$AAp?$AAp?$AAe?$AAr?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@getWeightR:
; Line 214
	mov	eax, DWORD PTR _lowerLimit$[ebp]
	push	eax
	call	?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z ; icu_56::CollationWeights::lengthOfWeight
	add	esp, 4
	mov	DWORD PTR _lowerLength$[ebp], eax
; Line 215
	mov	eax, DWORD PTR _upperLimit$[ebp]
	push	eax
	call	?lengthOfWeight@CollationWeights@icu_56@@SAHI@Z ; icu_56::CollationWeights::lengthOfWeight
	add	esp, 4
	mov	DWORD PTR _upperLength$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lowerLength$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN38@getWeightR
	mov	edx, DWORD PTR ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
	add	edx, 12					; 0000000cH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DE@OBIDDMCG@?$AAl?$AAo?$AAw?$AAe?$AAr?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$DO?$AA?$DN?$AAm?$AAi?$AAd?$AAd?$AAl?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN38@getWeightR:
; Line 224
	mov	eax, DWORD PTR _lowerLimit$[ebp]
	cmp	eax, DWORD PTR _upperLimit$[ebp]
	jb	SHORT $LN33@getWeightR
; Line 228
	xor	al, al
	jmp	$LN34@getWeightR
$LN33@getWeightR:
; Line 232
	mov	eax, DWORD PTR _lowerLength$[ebp]
	cmp	eax, DWORD PTR _upperLength$[ebp]
	jge	SHORT $LN32@getWeightR
; Line 233
	mov	eax, DWORD PTR _lowerLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _upperLimit$[ebp]
	push	ecx
	call	?truncateWeight@icu_56@@YAIIH@Z		; icu_56::truncateWeight
	add	esp, 8
	cmp	DWORD PTR _lowerLimit$[ebp], eax
	jne	SHORT $LN32@getWeightR
; Line 237
	xor	al, al
	jmp	$LN34@getWeightR
$LN32@getWeightR:
; Line 243
	push	80					; 00000050H
	push	0
	lea	eax, DWORD PTR _lower$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 244
	push	16					; 00000010H
	push	0
	lea	eax, DWORD PTR _middle$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 245
	push	80					; 00000050H
	push	0
	lea	eax, DWORD PTR _upper$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 261
	mov	eax, DWORD PTR _lowerLimit$[ebp]
	mov	DWORD PTR _weight$[ebp], eax
; Line 262
	mov	eax, DWORD PTR _lowerLength$[ebp]
	mov	DWORD PTR _length$7834[ebp], eax
	jmp	SHORT $LN30@getWeightR
$LN29@getWeightR:
	mov	eax, DWORD PTR _length$7834[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$7834[ebp], eax
$LN30@getWeightR:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$7834[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	$LN28@getWeightR
; Line 263
	mov	eax, DWORD PTR _length$7834[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?getWeightTrail@icu_56@@YAIIH@Z		; icu_56::getWeightTrail
	add	esp, 8
	mov	DWORD PTR _trail$7838[ebp], eax
; Line 264
	mov	eax, DWORD PTR _length$7834[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trail$7838[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+24]
	jae	$LN27@getWeightR
; Line 265
	mov	eax, DWORD PTR _length$7834[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?incWeightTrail@icu_56@@YAIIH@Z		; icu_56::incWeightTrail
	add	esp, 8
	mov	edx, DWORD PTR _length$7834[ebp]
	shl	edx, 4
	mov	DWORD PTR _lower$[ebp+edx], eax
; Line 266
	mov	eax, DWORD PTR _length$7834[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+24]
	push	edx
	mov	eax, DWORD PTR _length$7834[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?setWeightTrail@icu_56@@YAIIHI@Z	; icu_56::setWeightTrail
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _length$7834[ebp]
	shl	edx, 4
	mov	DWORD PTR _lower$[ebp+edx+4], eax
; Line 267
	mov	eax, DWORD PTR _length$7834[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _length$7834[ebp]
	mov	DWORD PTR _lower$[ebp+eax+8], ecx
; Line 268
	mov	eax, DWORD PTR _length$7834[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+24]
	sub	edx, DWORD PTR _trail$7838[ebp]
	mov	eax, DWORD PTR _length$7834[ebp]
	shl	eax, 4
	mov	DWORD PTR _lower$[ebp+eax+12], edx
$LN27@getWeightR:
; Line 270
	mov	eax, DWORD PTR _length$7834[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?truncateWeight@icu_56@@YAIIH@Z		; icu_56::truncateWeight
	add	esp, 8
	mov	DWORD PTR _weight$[ebp], eax
; Line 271
	jmp	$LN29@getWeightR
$LN28@getWeightR:
; Line 272
	cmp	DWORD PTR _weight$[ebp], -16777216	; ff000000H
	jae	SHORT $LN26@getWeightR
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _weight$[ebp]
	push	edx
	call	?incWeightTrail@icu_56@@YAIIH@Z		; icu_56::incWeightTrail
	add	esp, 8
	mov	DWORD PTR _middle$[ebp], eax
; Line 274
	jmp	SHORT $LN25@getWeightR
$LN26@getWeightR:
; Line 277
	mov	DWORD PTR _middle$[ebp], -1
$LN25@getWeightR:
; Line 280
	mov	eax, DWORD PTR _upperLimit$[ebp]
	mov	DWORD PTR _weight$[ebp], eax
; Line 281
	mov	eax, DWORD PTR _upperLength$[ebp]
	mov	DWORD PTR _length$7842[ebp], eax
	jmp	SHORT $LN24@getWeightR
$LN23@getWeightR:
	mov	eax, DWORD PTR _length$7842[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$7842[ebp], eax
$LN24@getWeightR:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$7842[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	$LN22@getWeightR
; Line 282
	mov	eax, DWORD PTR _length$7842[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?getWeightTrail@icu_56@@YAIIH@Z		; icu_56::getWeightTrail
	add	esp, 8
	mov	DWORD PTR _trail$7846[ebp], eax
; Line 283
	mov	eax, DWORD PTR _length$7842[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trail$7846[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+4]
	jbe	$LN21@getWeightR
; Line 284
	mov	eax, DWORD PTR _length$7842[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	push	edx
	mov	eax, DWORD PTR _length$7842[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?setWeightTrail@icu_56@@YAIIHI@Z	; icu_56::setWeightTrail
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _length$7842[ebp]
	shl	edx, 4
	mov	DWORD PTR _upper$[ebp+edx], eax
; Line 285
	mov	eax, DWORD PTR _length$7842[ebp]
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?decWeightTrail@icu_56@@YAIIH@Z		; icu_56::decWeightTrail
	add	esp, 8
	mov	edx, DWORD PTR _length$7842[ebp]
	shl	edx, 4
	mov	DWORD PTR _upper$[ebp+edx+4], eax
; Line 286
	mov	eax, DWORD PTR _length$7842[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _length$7842[ebp]
	mov	DWORD PTR _upper$[ebp+eax+8], ecx
; Line 287
	mov	eax, DWORD PTR _length$7842[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trail$7846[ebp]
	sub	edx, DWORD PTR [ecx+eax*4+4]
	mov	eax, DWORD PTR _length$7842[ebp]
	shl	eax, 4
	mov	DWORD PTR _upper$[ebp+eax+12], edx
$LN21@getWeightR:
; Line 289
	mov	eax, DWORD PTR _length$7842[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _weight$[ebp]
	push	ecx
	call	?truncateWeight@icu_56@@YAIIH@Z		; icu_56::truncateWeight
	add	esp, 8
	mov	DWORD PTR _weight$[ebp], eax
; Line 290
	jmp	$LN23@getWeightR
$LN22@getWeightR:
; Line 291
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _weight$[ebp]
	push	edx
	call	?decWeightTrail@icu_56@@YAIIH@Z		; icu_56::decWeightTrail
	add	esp, 8
	mov	DWORD PTR _middle$[ebp+4], eax
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _middle$[ebp+8], ecx
; Line 295
	mov	eax, DWORD PTR _middle$[ebp+4]
	cmp	eax, DWORD PTR _middle$[ebp]
	jb	SHORT $LN20@getWeightR
; Line 296
	mov	eax, DWORD PTR _middle$[ebp+4]
	sub	eax, DWORD PTR _middle$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 4
	sub	edx, DWORD PTR [ecx]
	shl	edx, 3
	mov	ecx, edx
	shr	eax, cl
	add	eax, 1
	mov	DWORD PTR _middle$[ebp+12], eax
; Line 297
	jmp	$LN19@getWeightR
$LN20@getWeightR:
; Line 299
	mov	DWORD PTR _length$7851[ebp], 4
	jmp	SHORT $LN18@getWeightR
$LN17@getWeightR:
	mov	eax, DWORD PTR _length$7851[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$7851[ebp], eax
$LN18@getWeightR:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$7851[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	$LN19@getWeightR
; Line 300
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	cmp	DWORD PTR _lower$[ebp+eax+12], 0
	jle	$LN15@getWeightR
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	cmp	DWORD PTR _upper$[ebp+eax+12], 0
	jle	$LN15@getWeightR
; Line 306
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _lower$[ebp+eax+4]
	mov	DWORD PTR _lowerEnd$7856[ebp], ecx
; Line 307
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _upper$[ebp+eax]
	mov	DWORD PTR _upperStart$7857[ebp], ecx
; Line 308
	mov	BYTE PTR _merged$7858[ebp], 0
; Line 310
	mov	eax, DWORD PTR _lowerEnd$7856[ebp]
	cmp	eax, DWORD PTR _upperStart$7857[ebp]
	jbe	$LN14@getWeightR
; Line 319
	mov	eax, DWORD PTR _length$7851[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _lowerEnd$7856[ebp]
	push	ecx
	call	?truncateWeight@icu_56@@YAIIH@Z		; icu_56::truncateWeight
	add	esp, 8
	mov	esi, eax
	mov	edx, DWORD PTR _length$7851[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _upperStart$7857[ebp]
	push	eax
	call	?truncateWeight@icu_56@@YAIIH@Z		; icu_56::truncateWeight
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN39@getWeightR
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
	add	ecx, 110				; 0000006eH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1JE@NMJFPEPJ@?$AAt?$AAr?$AAu?$AAn?$AAc?$AAa?$AAt?$AAe?$AAW?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?$CI?$AAl?$AAo?$AAw?$AAe?$AAr?$AAE?$AAn?$AAd?$AA?0?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?9@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@getWeightR:
; Line 321
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _upper$[ebp+eax+4]
	mov	DWORD PTR _lower$[ebp+ecx+4], edx
; Line 324
	mov	eax, DWORD PTR _length$7851[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _lower$[ebp+ecx+4]
	push	edx
	call	?getWeightTrail@icu_56@@YAIIH@Z		; icu_56::getWeightTrail
	add	esp, 8
	mov	esi, eax
	mov	eax, DWORD PTR _length$7851[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _lower$[ebp+ecx]
	push	edx
	call	?getWeightTrail@icu_56@@YAIIH@Z		; icu_56::getWeightTrail
	add	esp, 8
	sub	esi, eax
	add	esi, 1
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	DWORD PTR _lower$[ebp+eax+12], esi
; Line 327
	mov	BYTE PTR _merged$7858[ebp], 1
	jmp	$LN13@getWeightR
$LN14@getWeightR:
; Line 328
	mov	eax, DWORD PTR _lowerEnd$7856[ebp]
	cmp	eax, DWORD PTR _upperStart$7857[ebp]
	jne	SHORT $LN12@getWeightR
; Line 330
	mov	eax, DWORD PTR _length$7851[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _length$7851[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+4]
	cmp	eax, DWORD PTR [esi+edx*4+24]
	jb	SHORT $LN40@getWeightR
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getWeightRanges@CollationWeights@icu_56@@AAECII@Z@4JA
	add	ecx, 121				; 00000079H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EE@ILHEBCCM@?$AAm?$AAi?$AAn?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$FN?$AA?$DM?$AAm?$AAa?$AAx?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?$FL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@getWeightR:
; Line 331
	jmp	SHORT $LN13@getWeightR
$LN12@getWeightR:
; Line 332
	mov	eax, DWORD PTR _length$7851[ebp]
	push	eax
	mov	ecx, DWORD PTR _lowerEnd$7856[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?incWeight@CollationWeights@icu_56@@ABEIIH@Z ; icu_56::CollationWeights::incWeight
	cmp	eax, DWORD PTR _upperStart$7857[ebp]
	jne	SHORT $LN13@getWeightR
; Line 334
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _upper$[ebp+eax+4]
	mov	DWORD PTR _lower$[ebp+ecx+4], edx
; Line 335
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _lower$[ebp+eax+12]
	add	edx, DWORD PTR _upper$[ebp+ecx+12]
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	DWORD PTR _lower$[ebp+eax+12], edx
; Line 336
	mov	BYTE PTR _merged$7858[ebp], 1
$LN13@getWeightR:
; Line 339
	movsx	eax, BYTE PTR _merged$7858[ebp]
	test	eax, eax
	je	SHORT $LN15@getWeightR
; Line 342
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	DWORD PTR _upper$[ebp+eax+12], 0
$LN8@getWeightR:
; Line 343
	mov	eax, DWORD PTR _length$7851[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$7851[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _length$7851[ebp]
	cmp	edx, DWORD PTR [ecx]
	jle	SHORT $LN7@getWeightR
; Line 344
	mov	eax, DWORD PTR _length$7851[ebp]
	shl	eax, 4
	mov	DWORD PTR _upper$[ebp+eax+12], 0
	mov	ecx, DWORD PTR _length$7851[ebp]
	shl	ecx, 4
	mov	DWORD PTR _lower$[ebp+ecx+12], 0
; Line 345
	jmp	SHORT $LN8@getWeightR
$LN7@getWeightR:
; Line 346
	jmp	SHORT $LN19@getWeightR
$LN15@getWeightR:
; Line 349
	jmp	$LN17@getWeightR
$LN19@getWeightR:
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0
; Line 371
	cmp	DWORD PTR _middle$[ebp+12], 0
	jle	SHORT $LN6@getWeightR
; Line 372
	push	1
	lea	eax, DWORD PTR _middle$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	16					; 00000010H
	lea	ecx, DWORD PTR _middle$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 1
$LN6@getWeightR:
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	DWORD PTR _length$7876[ebp], ecx
	jmp	SHORT $LN5@getWeightR
$LN4@getWeightR:
	mov	eax, DWORD PTR _length$7876[ebp]
	add	eax, 1
	mov	DWORD PTR _length$7876[ebp], eax
$LN5@getWeightR:
	cmp	DWORD PTR _length$7876[ebp], 4
	jg	$LN3@getWeightR
; Line 377
	mov	eax, DWORD PTR _length$7876[ebp]
	shl	eax, 4
	cmp	DWORD PTR _upper$[ebp+eax+12], 0
	jle	SHORT $LN2@getWeightR
; Line 378
	push	1
	mov	eax, DWORD PTR _length$7876[ebp]
	shl	eax, 4
	lea	ecx, DWORD PTR _upper$[ebp+eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	push	16					; 00000010H
	mov	edx, DWORD PTR _length$7876[ebp]
	shl	edx, 4
	lea	eax, DWORD PTR _upper$[ebp+edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+44]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 379
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], ecx
$LN2@getWeightR:
; Line 381
	mov	eax, DWORD PTR _length$7876[ebp]
	shl	eax, 4
	cmp	DWORD PTR _lower$[ebp+eax+12], 0
	jle	SHORT $LN1@getWeightR
; Line 382
	push	1
	mov	eax, DWORD PTR _length$7876[ebp]
	shl	eax, 4
	lea	ecx, DWORD PTR _lower$[ebp+eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	push	16					; 00000010H
	mov	edx, DWORD PTR _length$7876[ebp]
	shl	edx, 4
	lea	eax, DWORD PTR _lower$[ebp+edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+44]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], ecx
$LN1@getWeightR:
; Line 385
	jmp	$LN4@getWeightR
$LN3@getWeightR:
; Line 386
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 0
	setg	al
$LN34@getWeightR:
; Line 387
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@getWeightR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 552				; 00000228H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN45@getWeightR:
	DD	3
	DD	$LN44@getWeightR
$LN44@getWeightR:
	DD	-124					; ffffff84H
	DD	80					; 00000050H
	DD	$LN41@getWeightR
	DD	-148					; ffffff6cH
	DD	16					; 00000010H
	DD	$LN42@getWeightR
	DD	-236					; ffffff14H
	DD	80					; 00000050H
	DD	$LN43@getWeightR
$LN43@getWeightR:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN42@getWeightR:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN41@getWeightR:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getWeightRanges@CollationWeights@icu_56@@AAECII@Z ENDP	; icu_56::CollationWeights::getWeightRanges
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncateWeight@icu_56@@YAIIH@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
?truncateWeight@icu_56@@YAIIH@Z PROC			; icu_56::truncateWeight, COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	mov	ecx, 4
	sub	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 3
	or	eax, -1
	shl	eax, cl
	and	eax, DWORD PTR _weight$[ebp]
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?truncateWeight@icu_56@@YAIIH@Z ENDP			; icu_56::truncateWeight
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?incWeightTrail@icu_56@@YAIIH@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
?incWeightTrail@icu_56@@YAIIH@Z PROC			; icu_56::incWeightTrail, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	ecx, 4
	sub	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 3
	mov	eax, 1
	shl	eax, cl
	add	eax, DWORD PTR _weight$[ebp]
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?incWeightTrail@icu_56@@YAIIH@Z ENDP			; icu_56::incWeightTrail
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?decWeightTrail@icu_56@@YAIIH@Z
_TEXT	SEGMENT
_weight$ = 8						; size = 4
_length$ = 12						; size = 4
?decWeightTrail@icu_56@@YAIIH@Z PROC			; icu_56::decWeightTrail, COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	ecx, 4
	sub	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 3
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _weight$[ebp]
	sub	ecx, eax
	mov	eax, ecx
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?decWeightTrail@icu_56@@YAIIH@Z ENDP			; icu_56::decWeightTrail
_TEXT	ENDS
PUBLIC	?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z ; icu_56::CollationWeights::allocWeightsInShortRanges
EXTRN	_uprv_sortArray_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z
_TEXT	SEGMENT
_errorCode$7896 = -32					; size = 4
_i$7889 = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
_minLength$ = 12					; size = 4
?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z PROC ; icu_56::CollationWeights::allocWeightsInShortRanges, COMDAT
; _this$ = ecx
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	DWORD PTR _i$7889[ebp], 0
	jmp	SHORT $LN6@allocWeigh
$LN5@allocWeigh:
	mov	eax, DWORD PTR _i$7889[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7889[ebp], eax
$LN6@allocWeigh:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$7889[ebp]
	cmp	ecx, DWORD PTR [eax+160]
	jge	$LN4@allocWeigh
	mov	eax, DWORD PTR _i$7889[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _minLength$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+eax+52], ecx
	jg	$LN4@allocWeigh
; Line 393
	mov	eax, DWORD PTR _i$7889[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	edx, DWORD PTR [ecx+eax+56]
	jg	SHORT $LN3@allocWeigh
; Line 395
	mov	eax, DWORD PTR _i$7889[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+52]
	cmp	edx, DWORD PTR _minLength$[ebp]
	jle	SHORT $LN2@allocWeigh
; Line 399
	mov	eax, DWORD PTR _i$7889[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax+56], edx
$LN2@allocWeigh:
; Line 401
	mov	eax, DWORD PTR _i$7889[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], eax
; Line 406
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+160], 1
	jle	SHORT $LN1@allocWeigh
; Line 408
	mov	DWORD PTR _errorCode$7896[ebp], 0
; Line 410
	lea	eax, DWORD PTR _errorCode$7896[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?compareRanges@icu_56@@YAHPBX00@Z ; icu_56::compareRanges
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
$LN1@allocWeigh:
; Line 413
	mov	al, 1
	jmp	SHORT $LN7@allocWeigh
$LN3@allocWeigh:
; Line 415
	mov	eax, DWORD PTR _i$7889[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	sub	edx, DWORD PTR [ecx+eax+56]
	mov	DWORD PTR _n$[ebp], edx
; Line 416
	jmp	$LN5@allocWeigh
$LN4@allocWeigh:
; Line 417
	xor	al, al
$LN7@allocWeigh:
; Line 418
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@allocWeigh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN11@allocWeigh:
	DD	1
	DD	$LN10@allocWeigh
$LN10@allocWeigh:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@allocWeigh
$LN9@allocWeigh:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z ENDP ; icu_56::CollationWeights::allocWeightsInShortRanges
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareRanges@icu_56@@YAHPBX00@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_l$ = -8						; size = 4
___formal$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
?compareRanges@icu_56@@YAHPBX00@Z PROC			; icu_56::compareRanges, COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR _left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _l$[ebp], ecx
; Line 198
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r$[ebp], ecx
; Line 199
	mov	eax, DWORD PTR _l$[ebp]
	cmp	eax, DWORD PTR _r$[ebp]
	jae	SHORT $LN4@compareRan
; Line 200
	or	eax, -1
	jmp	SHORT $LN5@compareRan
	jmp	SHORT $LN5@compareRan
$LN4@compareRan:
; Line 201
	mov	eax, DWORD PTR _l$[ebp]
	cmp	eax, DWORD PTR _r$[ebp]
	jbe	SHORT $LN2@compareRan
; Line 202
	mov	eax, 1
	jmp	SHORT $LN5@compareRan
; Line 203
	jmp	SHORT $LN5@compareRan
$LN2@compareRan:
; Line 204
	xor	eax, eax
$LN5@compareRan:
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?compareRanges@icu_56@@YAHPBX00@Z ENDP			; icu_56::compareRanges
_TEXT	ENDS
PUBLIC	??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA ; `icu_56::CollationWeights::allocWeightsInMinLengthRanges'::`2'::__LINE__Var
PUBLIC	?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z ; icu_56::CollationWeights::allocWeightsInMinLengthRanges
;	COMDAT ??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@
CONST	SEGMENT
??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@ DB '('
	DB	00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '1', 00H
	DB	' ', 00H, '+', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 'n', 00H
	DB	'e', 00H, 'x', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA DD 01a5H ; `icu_56::CollationWeights::allocWeightsInMinLengthRanges'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z
_TEXT	SEGMENT
_count1$ = -104						; size = 4
_count2$ = -92						; size = 4
_i$7912 = -80						; size = 4
_end$ = -68						; size = 4
_start$ = -56						; size = 4
_nextCountBytes$ = -44					; size = 4
_minLengthRangeCount$ = -32				; size = 4
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
_minLength$ = 12					; size = 4
?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z PROC ; icu_56::CollationWeights::allocWeightsInMinLengthRanges, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 424
	mov	DWORD PTR _count$[ebp], 0
; Line 426
	mov	DWORD PTR _minLengthRangeCount$[ebp], 0
; Line 428
	jmp	SHORT $LN13@allocWeigh@2
$LN12@allocWeigh@2:
; Line 429
	mov	eax, DWORD PTR _minLengthRangeCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _minLengthRangeCount$[ebp], eax
$LN13@allocWeigh@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLengthRangeCount$[ebp]
	cmp	ecx, DWORD PTR [eax+160]
	jge	SHORT $LN11@allocWeigh@2
	mov	eax, DWORD PTR _minLengthRangeCount$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+52]
	cmp	edx, DWORD PTR _minLength$[ebp]
	jne	SHORT $LN11@allocWeigh@2
; Line 430
	mov	eax, DWORD PTR _minLengthRangeCount$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, DWORD PTR [ecx+eax+56]
	mov	DWORD PTR _count$[ebp], edx
; Line 431
	jmp	SHORT $LN12@allocWeigh@2
$LN11@allocWeigh@2:
; Line 433
	mov	eax, DWORD PTR _minLength$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?countBytes@CollationWeights@icu_56@@ABEHH@Z ; icu_56::CollationWeights::countBytes
	mov	DWORD PTR _nextCountBytes$[ebp], eax
; Line 434
	mov	eax, DWORD PTR _count$[ebp]
	imul	eax, DWORD PTR _nextCountBytes$[ebp]
	cmp	DWORD PTR _n$[ebp], eax
	jle	SHORT $LN10@allocWeigh@2
	xor	al, al
	jmp	$LN14@allocWeigh@2
$LN10@allocWeigh@2:
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _start$[ebp], ecx
; Line 438
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _end$[ebp], ecx
; Line 439
	mov	DWORD PTR _i$7912[ebp], 1
	jmp	SHORT $LN9@allocWeigh@2
$LN8@allocWeigh@2:
	mov	eax, DWORD PTR _i$7912[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7912[ebp], eax
$LN9@allocWeigh@2:
	mov	eax, DWORD PTR _i$7912[ebp]
	cmp	eax, DWORD PTR _minLengthRangeCount$[ebp]
	jge	SHORT $LN7@allocWeigh@2
; Line 440
	mov	eax, DWORD PTR _i$7912[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+44]
	cmp	edx, DWORD PTR _start$[ebp]
	jae	SHORT $LN6@allocWeigh@2
	mov	eax, DWORD PTR _i$7912[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+44]
	mov	DWORD PTR _start$[ebp], edx
$LN6@allocWeigh@2:
; Line 441
	mov	eax, DWORD PTR _i$7912[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+48]
	cmp	edx, DWORD PTR _end$[ebp]
	jbe	SHORT $LN5@allocWeigh@2
	mov	eax, DWORD PTR _i$7912[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+48]
	mov	DWORD PTR _end$[ebp], edx
$LN5@allocWeigh@2:
; Line 442
	jmp	SHORT $LN8@allocWeigh@2
$LN7@allocWeigh@2:
; Line 451
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _nextCountBytes$[ebp]
	sub	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _count2$[ebp], eax
; Line 452
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, DWORD PTR _count2$[ebp]
	mov	DWORD PTR _count1$[ebp], eax
; Line 453
	cmp	DWORD PTR _count2$[ebp], 0
	je	SHORT $LN3@allocWeigh@2
	mov	eax, DWORD PTR _count2$[ebp]
	imul	eax, DWORD PTR _nextCountBytes$[ebp]
	add	eax, DWORD PTR _count1$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN4@allocWeigh@2
$LN3@allocWeigh@2:
; Line 455
	mov	eax, DWORD PTR _count2$[ebp]
	add	eax, 1
	mov	DWORD PTR _count2$[ebp], eax
; Line 456
	mov	eax, DWORD PTR _count1$[ebp]
	sub	eax, 1
	mov	DWORD PTR _count1$[ebp], eax
; Line 457
	mov	eax, DWORD PTR _count2$[ebp]
	imul	eax, DWORD PTR _nextCountBytes$[ebp]
	add	eax, DWORD PTR _count1$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jge	SHORT $LN4@allocWeigh@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z@4JA
	add	ecx, 36					; 00000024H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FA@KKPCFJND@?$AA?$CI?$AAc?$AAo?$AAu?$AAn?$AAt?$AA1?$AA?5?$AA?$CL?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA2?$AA?5?$AA?$CK?$AA?5?$AAn?$AAe?$AAx?$AAt?$AAC?$AAo?$AAu?$AAn?$AAt?$AAB?$AAy?$AAt?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@allocWeigh@2:
; Line 460
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 462
	cmp	DWORD PTR _count1$[ebp], 0
	jne	SHORT $LN2@allocWeigh@2
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z ; icu_56::CollationWeights::lengthenRange
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 1
; Line 468
	jmp	SHORT $LN1@allocWeigh@2
$LN2@allocWeigh@2:
; Line 476
	mov	eax, DWORD PTR _count1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _minLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?incWeightByOffset@CollationWeights@icu_56@@ABEIIHH@Z ; icu_56::CollationWeights::incWeightByOffset
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count1$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 479
	mov	eax, DWORD PTR _minLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?incWeight@CollationWeights@icu_56@@ABEIIH@Z ; icu_56::CollationWeights::incWeight
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLength$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _count2$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 483
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z ; icu_56::CollationWeights::lengthenRange
; Line 484
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 2
$LN1@allocWeigh@2:
; Line 486
	mov	al, 1
$LN14@allocWeigh@2:
; Line 487
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z ENDP ; icu_56::CollationWeights::allocWeightsInMinLengthRanges
_TEXT	ENDS
PUBLIC	?allocWeights@CollationWeights@icu_56@@QAECIIH@Z ; icu_56::CollationWeights::allocWeights
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocWeights@CollationWeights@icu_56@@QAECIIH@Z
_TEXT	SEGMENT
_i$7941 = -32						; size = 4
_minLength$7937 = -20					; size = 4
_this$ = -8						; size = 4
_lowerLimit$ = 8					; size = 4
_upperLimit$ = 12					; size = 4
_n$ = 16						; size = 4
?allocWeights@CollationWeights@icu_56@@QAECIIH@Z PROC	; icu_56::CollationWeights::allocWeights, COMDAT
; _this$ = ecx
; Line 495
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	eax, DWORD PTR _upperLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lowerLimit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getWeightRanges@CollationWeights@icu_56@@AAECII@Z ; icu_56::CollationWeights::getWeightRanges
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN8@allocWeigh@3
; Line 504
	xor	al, al
	jmp	$LN10@allocWeigh@3
$LN8@allocWeigh@3:
; Line 510
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _minLength$7937[ebp], ecx
; Line 512
	mov	eax, DWORD PTR _minLength$7937[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocWeightsInShortRanges@CollationWeights@icu_56@@AAECHH@Z ; icu_56::CollationWeights::allocWeightsInShortRanges
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@allocWeigh@3
	jmp	SHORT $LN7@allocWeigh@3
$LN6@allocWeigh@3:
; Line 514
	cmp	DWORD PTR _minLength$7937[ebp], 4
	jne	SHORT $LN5@allocWeigh@3
; Line 519
	xor	al, al
	jmp	SHORT $LN10@allocWeigh@3
$LN5@allocWeigh@3:
; Line 522
	mov	eax, DWORD PTR _minLength$7937[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocWeightsInMinLengthRanges@CollationWeights@icu_56@@AAECHH@Z ; icu_56::CollationWeights::allocWeightsInMinLengthRanges
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@allocWeigh@3
	jmp	SHORT $LN7@allocWeigh@3
$LN4@allocWeigh@3:
; Line 528
	mov	DWORD PTR _i$7941[ebp], 0
	jmp	SHORT $LN3@allocWeigh@3
$LN2@allocWeigh@3:
	mov	eax, DWORD PTR _i$7941[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7941[ebp], eax
$LN3@allocWeigh@3:
	mov	eax, DWORD PTR _i$7941[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+52]
	cmp	edx, DWORD PTR _minLength$7937[ebp]
	jne	SHORT $LN1@allocWeigh@3
; Line 529
	mov	eax, DWORD PTR _i$7941[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+44]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lengthenRange@CollationWeights@icu_56@@ABEXAAUWeightRange@12@@Z ; icu_56::CollationWeights::lengthenRange
; Line 530
	jmp	SHORT $LN2@allocWeigh@3
$LN1@allocWeigh@3:
; Line 531
	jmp	$LN8@allocWeigh@3
$LN7@allocWeigh@3:
; Line 541
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], 0
; Line 542
	mov	al, 1
$LN10@allocWeigh@3:
; Line 543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?allocWeights@CollationWeights@icu_56@@QAECIIH@Z ENDP	; icu_56::CollationWeights::allocWeights
_TEXT	ENDS
PUBLIC	??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA ; `icu_56::CollationWeights::nextWeight'::`2'::__LINE__Var
PUBLIC	?nextWeight@CollationWeights@icu_56@@QAEIXZ	; icu_56::CollationWeights::nextWeight
;	COMDAT ??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '.', 00H, 's', 00H
	DB	't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	'.', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA DD 0222H ; `icu_56::CollationWeights::nextWeight'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?nextWeight@CollationWeights@icu_56@@QAEIXZ
_TEXT	SEGMENT
tv73 = -232						; size = 4
_weight$7951 = -32					; size = 4
_range$7950 = -20					; size = 4
_this$ = -8						; size = 4
?nextWeight@CollationWeights@icu_56@@QAEIXZ PROC	; icu_56::CollationWeights::nextWeight, COMDAT
; _this$ = ecx
; Line 546
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+156]
	cmp	edx, DWORD PTR [ecx+160]
	jl	SHORT $LN4@nextWeight
; Line 548
	or	eax, -1
	jmp	$LN5@nextWeight
; Line 549
	jmp	$LN5@nextWeight
$LN4@nextWeight:
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+44]
	mov	DWORD PTR _range$7950[ebp], eax
; Line 552
	mov	eax, DWORD PTR _range$7950[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _weight$7951[ebp], ecx
; Line 553
	mov	eax, DWORD PTR _range$7950[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _range$7950[ebp]
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR tv73[ebp], 0
	jne	SHORT $LN2@nextWeight
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+156], ecx
; Line 556
	jmp	SHORT $LN1@nextWeight
$LN2@nextWeight:
; Line 558
	mov	eax, DWORD PTR _range$7950[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _weight$7951[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?incWeight@CollationWeights@icu_56@@ABEIIH@Z ; icu_56::CollationWeights::incWeight
	mov	ecx, DWORD PTR _range$7950[ebp]
	mov	DWORD PTR [ecx], eax
; Line 559
	mov	eax, DWORD PTR _range$7950[ebp]
	mov	ecx, DWORD PTR _range$7950[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jbe	SHORT $LN1@nextWeight
	mov	eax, DWORD PTR ?__LINE__Var@?1??nextWeight@CollationWeights@icu_56@@QAEIXZ@4JA
	add	eax, 13					; 0000000dH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GK@GMNPOJGJ@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DC@KBEEDBKD@?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?4?$AAe?$AAn?$AAd?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@nextWeight:
; Line 562
	mov	eax, DWORD PTR _weight$7951[ebp]
$LN5@nextWeight:
; Line 564
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?nextWeight@CollationWeights@icu_56@@QAEIXZ ENDP	; icu_56::CollationWeights::nextWeight
_TEXT	ENDS
END

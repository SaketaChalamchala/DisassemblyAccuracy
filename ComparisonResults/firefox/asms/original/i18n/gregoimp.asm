; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\gregoimp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?DAYS_BEFORE@Grego@icu_56@@0QBFB		; icu_56::Grego::DAYS_BEFORE
PUBLIC	?MONTH_LENGTH@Grego@icu_56@@0QBCB		; icu_56::Grego::MONTH_LENGTH
CONST	SEGMENT
?DAYS_BEFORE@Grego@icu_56@@0QBFB DW 00H			; icu_56::Grego::DAYS_BEFORE
	DW	01fH
	DW	03bH
	DW	05aH
	DW	078H
	DW	097H
	DW	0b5H
	DW	0d4H
	DW	0f3H
	DW	0111H
	DW	0130H
	DW	014eH
	DW	00H
	DW	01fH
	DW	03cH
	DW	05bH
	DW	079H
	DW	098H
	DW	0b6H
	DW	0d5H
	DW	0f4H
	DW	0112H
	DW	0131H
	DW	014fH
?MONTH_LENGTH@Grego@icu_56@@0QBCB DB 01fH		; icu_56::Grego::MONTH_LENGTH
	DB	01cH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01fH
	DB	01dH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01fH
	DB	01eH
	DB	01fH
	DB	01eH
	DB	01fH
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?floorDivide@ClockMath@icu_56@@SAHHH@Z		; icu_56::ClockMath::floorDivide
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?floorDivide@ClockMath@icu_56@@SAHHH@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
_numerator$ = 8						; size = 4
_denominator$ = 12					; size = 4
?floorDivide@ClockMath@icu_56@@SAHHH@Z PROC		; icu_56::ClockMath::floorDivide, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.cpp
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 29
	cmp	DWORD PTR _numerator$[ebp], 0
	jl	SHORT $LN3@floorDivid
	mov	eax, DWORD PTR _numerator$[ebp]
	cdq
	idiv	DWORD PTR _denominator$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@floorDivid
$LN3@floorDivid:
	mov	eax, DWORD PTR _numerator$[ebp]
	add	eax, 1
	cdq
	idiv	DWORD PTR _denominator$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv69[ebp], eax
$LN4@floorDivid:
	mov	eax, DWORD PTR tv69[ebp]
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?floorDivide@ClockMath@icu_56@@SAHHH@Z ENDP		; icu_56::ClockMath::floorDivide
_TEXT	ENDS
PUBLIC	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z	; icu_56::ClockMath::floorDivide
EXTRN	_uprv_floor_56:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z
_TEXT	SEGMENT
_quotient$ = -12					; size = 8
_numerator$ = 8						; size = 8
_denominator$ = 16					; size = 4
_remainder$ = 20					; size = 4
?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z PROC		; icu_56::ClockMath::floorDivide, COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 35
	fild	DWORD PTR _denominator$[ebp]
	fdivr	QWORD PTR _numerator$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _quotient$[ebp]
; Line 36
	fild	DWORD PTR _denominator$[ebp]
	fmul	QWORD PTR _quotient$[ebp]
	fsubr	QWORD PTR _numerator$[ebp]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _remainder$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 37
	fld	QWORD PTR _quotient$[ebp]
	call	__ftol2_sse
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ENDP		; icu_56::ClockMath::floorDivide
_TEXT	ENDS
PUBLIC	??_C@_1EM@HCDPEFGA@?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AAd?$AAi@ ; `string'
PUBLIC	?floorDivide@ClockMath@icu_56@@SANNN@Z		; icu_56::ClockMath::floorDivide
PUBLIC	??_C@_1BI@JJKKNGIM@?$AAd?$AAi?$AAv?$AAi?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@JPDNMDIB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??floorDivide@ClockMath@icu_56@@SANNNAAN@Z@4JA@a69ce40a ; `icu_56::ClockMath::floorDivide'::`2'::__LINE__Var
PUBLIC	__real@0000000000000000
PUBLIC	?floorDivide@ClockMath@icu_56@@SANNNAAN@Z	; icu_56::ClockMath::floorDivide
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1EM@HCDPEFGA@?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AAd?$AAi@
CONST	SEGMENT
??_C@_1EM@HCDPEFGA@?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AAd?$AAi@ DB '0'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'v', 00H
	DB	'i', 00H, 's', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JJKKNGIM@?$AAd?$AAi?$AAv?$AAi?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@JJKKNGIM@?$AAd?$AAi?$AAv?$AAi?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'd'
	DB	00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@JPDNMDIB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@JPDNMDIB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'g', 00H
	DB	'r', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'i', 00H, 'm', 00H, 'p'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??floorDivide@ClockMath@icu_56@@SANNNAAN@Z@4JA@a69ce40a
_DATA	SEGMENT
?__LINE__Var@?1??floorDivide@ClockMath@icu_56@@SANNNAAN@Z@4JA@a69ce40a DD 029H ; `icu_56::ClockMath::floorDivide'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?floorDivide@ClockMath@icu_56@@SANNNAAN@Z
_TEXT	SEGMENT
tv79 = -228						; size = 4
_q$36127 = -28						; size = 8
_quotient$ = -12					; size = 8
_dividend$ = 8						; size = 8
_divisor$ = 16						; size = 8
_remainder$ = 24					; size = 4
?floorDivide@ClockMath@icu_56@@SANNNAAN@Z PROC		; icu_56::ClockMath::floorDivide, COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	fldz
	fcomp	QWORD PTR _divisor$[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN7@floorDivid@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??floorDivide@ClockMath@icu_56@@SANNNAAN@Z@4JA@a69ce40a
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@JPDNMDIB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BI@JJKKNGIM@?$AAd?$AAi?$AAv?$AAi?$AAs?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@floorDivid@2:
; Line 44
	sub	esp, 8
	fld	QWORD PTR _divisor$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _dividend$[ebp]
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SANNN@Z	; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
	fstp	QWORD PTR _quotient$[ebp]
; Line 45
	fld	QWORD PTR _quotient$[ebp]
	fmul	QWORD PTR _divisor$[ebp]
	fsubr	QWORD PTR _dividend$[ebp]
	mov	eax, DWORD PTR _remainder$[ebp]
	fstp	QWORD PTR [eax]
; Line 49
	mov	eax, DWORD PTR _remainder$[ebp]
	fldz
	fcomp	QWORD PTR [eax]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN3@floorDivid@2
	mov	eax, DWORD PTR _remainder$[ebp]
	fld	QWORD PTR _divisor$[ebp]
	fcomp	QWORD PTR [eax]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN1@floorDivid@2
$LN3@floorDivid@2:
; Line 53
	fld	QWORD PTR _quotient$[ebp]
	fstp	QWORD PTR _q$36127[ebp]
; Line 54
	mov	eax, DWORD PTR _remainder$[ebp]
	fldz
	fcomp	QWORD PTR [eax]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN8@floorDivid@2
	mov	DWORD PTR tv79[ebp], -1
	jmp	SHORT $LN9@floorDivid@2
$LN8@floorDivid@2:
	mov	DWORD PTR tv79[ebp], 1
$LN9@floorDivid@2:
	fild	DWORD PTR tv79[ebp]
	fadd	QWORD PTR _quotient$[ebp]
	fstp	QWORD PTR _quotient$[ebp]
; Line 55
	fld	QWORD PTR _q$36127[ebp]
	fld	QWORD PTR _quotient$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@floorDivid@2
; Line 65
	mov	eax, DWORD PTR _remainder$[ebp]
	fldz
	fstp	QWORD PTR [eax]
; Line 66
	jmp	SHORT $LN1@floorDivid@2
$LN2@floorDivid@2:
; Line 67
	fld	QWORD PTR _quotient$[ebp]
	fmul	QWORD PTR _divisor$[ebp]
	fsubr	QWORD PTR _dividend$[ebp]
	mov	eax, DWORD PTR _remainder$[ebp]
	fstp	QWORD PTR [eax]
$LN1@floorDivid@2:
; Line 70
	mov	eax, DWORD PTR _remainder$[ebp]
	fld	QWORD PTR [eax]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN10@floorDivid@2
	mov	ecx, DWORD PTR _remainder$[ebp]
	fld	QWORD PTR _divisor$[ebp]
	fcomp	QWORD PTR [ecx]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN11@floorDivid@2
$LN10@floorDivid@2:
	mov	edx, DWORD PTR ?__LINE__Var@?1??floorDivide@ClockMath@icu_56@@SANNNAAN@Z@4JA@a69ce40a
	add	edx, 29					; 0000001dH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@JPDNMDIB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EM@HCDPEFGA@?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAd?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AAd?$AAi@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@floorDivid@2:
; Line 71
	fld	QWORD PTR _quotient$[ebp]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?floorDivide@ClockMath@icu_56@@SANNNAAN@Z ENDP		; icu_56::ClockMath::floorDivide
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?floorDivide@ClockMath@icu_56@@SANNN@Z
_TEXT	SEGMENT
_numerator$ = 8						; size = 8
_denominator$ = 16					; size = 8
?floorDivide@ClockMath@icu_56@@SANNN@Z PROC		; icu_56::ClockMath::floorDivide, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 255
	fld	QWORD PTR _numerator$[ebp]
	fdiv	QWORD PTR _denominator$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
; Line 256
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?floorDivide@ClockMath@icu_56@@SANNN@Z ENDP		; icu_56::ClockMath::floorDivide
_TEXT	ENDS
PUBLIC	__real@41429ec600000000
PUBLIC	?isLeapYear@Grego@icu_56@@SACH@Z		; icu_56::Grego::isLeapYear
PUBLIC	?fieldsToDay@Grego@icu_56@@SANHHH@Z		; icu_56::Grego::fieldsToDay
;	COMDAT __real@41429ec600000000
; File d:\mozilla\intl\icu\source\i18n\gregoimp.cpp
CONST	SEGMENT
__real@41429ec600000000 DQ 041429ec600000000r	; 2.44059e+006
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?fieldsToDay@Grego@icu_56@@SANHHH@Z
_TEXT	SEGMENT
tv137 = -224						; size = 4
_julian$ = -24						; size = 8
_y$ = -8						; size = 4
_year$ = 8						; size = 4
_month$ = 12						; size = 4
_dom$ = 16						; size = 4
?fieldsToDay@Grego@icu_56@@SANHHH@Z PROC		; icu_56::Grego::fieldsToDay, COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 87
	mov	eax, DWORD PTR _year$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
; Line 91
	mov	esi, DWORD PTR _y$[ebp]
	imul	esi, 365				; 0000016dH
	push	4
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	call	?floorDivide@ClockMath@icu_56@@SAHHH@Z	; icu_56::ClockMath::floorDivide
	add	esp, 8
	add	esi, eax
	push	400					; 00000190H
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	?floorDivide@ClockMath@icu_56@@SAHHH@Z	; icu_56::ClockMath::floorDivide
	add	esp, 8
	lea	esi, DWORD PTR [esi+eax+1721423]
	push	100					; 00000064H
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	?floorDivide@ClockMath@icu_56@@SAHHH@Z	; icu_56::ClockMath::floorDivide
	add	esp, 8
	sub	esi, eax
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _month$[ebp]
	movsx	edx, WORD PTR ?DAYS_BEFORE@Grego@icu_56@@0QBFB[ecx*2]
	add	esi, DWORD PTR _dom$[ebp]
	lea	eax, DWORD PTR [edx+esi+2]
	mov	DWORD PTR tv137[ebp], eax
	fild	DWORD PTR tv137[ebp]
	fstp	QWORD PTR _julian$[ebp]
; Line 93
	fld	QWORD PTR _julian$[ebp]
	fsub	QWORD PTR __real@41429ec600000000
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?fieldsToDay@Grego@icu_56@@SANHHH@Z ENDP		; icu_56::Grego::fieldsToDay
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isLeapYear@Grego@icu_56@@SACH@Z
_TEXT	SEGMENT
tv70 = -193						; size = 1
_year$ = 8						; size = 4
?isLeapYear@Grego@icu_56@@SACH@Z PROC			; icu_56::Grego::isLeapYear, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, 3
	jne	SHORT $LN4@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN3@isLeapYear:
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@isLeapYear
$LN4@isLeapYear:
	mov	BYTE PTR tv70[ebp], 0
$LN5@isLeapYear:
	mov	al, BYTE PTR tv70[ebp]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@Grego@icu_56@@SACH@Z ENDP			; icu_56::Grego::isLeapYear
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@401c000000000000
PUBLIC	__real@4125f27400000000
PUBLIC	?dayToFields@Grego@icu_56@@SAXNAAH0000@Z	; icu_56::Grego::dayToFields
EXTRN	_uprv_fmod_56:PROC
;	COMDAT __real@3ff0000000000000
; File d:\mozilla\intl\icu\source\i18n\gregoimp.cpp
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@401c000000000000
CONST	SEGMENT
__real@401c000000000000 DQ 0401c000000000000r	; 7
CONST	ENDS
;	COMDAT __real@4125f27400000000
CONST	SEGMENT
__real@4125f27400000000 DQ 04125f27400000000r	; 719162
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?dayToFields@Grego@icu_56@@SAXNAAH0000@Z
_TEXT	SEGMENT
_march1$ = -80						; size = 4
_correction$ = -68					; size = 4
_isLeap$ = -53						; size = 1
_n1$ = -44						; size = 4
_n4$ = -32						; size = 4
_n100$ = -20						; size = 4
_n400$ = -8						; size = 4
_day$ = 8						; size = 8
_year$ = 16						; size = 4
_month$ = 20						; size = 4
_dom$ = 24						; size = 4
_dow$ = 28						; size = 4
_doy$ = 32						; size = 4
?dayToFields@Grego@icu_56@@SAXNAAH0000@Z PROC		; icu_56::Grego::dayToFields, COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 100
	fld	QWORD PTR _day$[ebp]
	fadd	QWORD PTR __real@4125f27400000000
	fstp	QWORD PTR _day$[ebp]
; Line 106
	mov	eax, DWORD PTR _doy$[ebp]
	push	eax
	push	146097					; 00023ab1H
	sub	esp, 8
	fld	QWORD PTR _day$[ebp]
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
	mov	DWORD PTR _n400$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _doy$[ebp]
	push	eax
	push	36524					; 00008eacH
	mov	ecx, DWORD PTR _doy$[ebp]
	fild	DWORD PTR [ecx]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
	mov	DWORD PTR _n100$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _doy$[ebp]
	push	eax
	push	1461					; 000005b5H
	mov	ecx, DWORD PTR _doy$[ebp]
	fild	DWORD PTR [ecx]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
	mov	DWORD PTR _n4$[ebp], eax
; Line 109
	mov	eax, DWORD PTR _doy$[ebp]
	push	eax
	push	365					; 0000016dH
	mov	ecx, DWORD PTR _doy$[ebp]
	fild	DWORD PTR [ecx]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
	mov	DWORD PTR _n1$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _n400$[ebp]
	imul	eax, 400				; 00000190H
	mov	ecx, DWORD PTR _n100$[ebp]
	imul	ecx, 100				; 00000064H
	add	ecx, DWORD PTR _n1$[ebp]
	add	ecx, eax
	mov	edx, DWORD PTR _n4$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _year$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 111
	cmp	DWORD PTR _n100$[ebp], 4
	je	SHORT $LN3@dayToField
	cmp	DWORD PTR _n1$[ebp], 4
	jne	SHORT $LN4@dayToField
$LN3@dayToField:
; Line 112
	mov	eax, DWORD PTR _doy$[ebp]
	mov	DWORD PTR [eax], 365			; 0000016dH
; Line 113
	jmp	SHORT $LN2@dayToField
$LN4@dayToField:
; Line 114
	mov	eax, DWORD PTR _year$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _year$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@dayToField:
; Line 117
	mov	eax, DWORD PTR _year$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	mov	BYTE PTR _isLeap$[ebp], al
; Line 120
	sub	esp, 8
	fld	QWORD PTR __real@401c000000000000
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _day$[ebp]
	fadd	QWORD PTR __real@3ff0000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_fmod_56
	add	esp, 16					; 00000010H
	call	__ftol2_sse
	mov	ecx, DWORD PTR _dow$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 121
	mov	eax, DWORD PTR _dow$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setge	cl
	sub	ecx, 1
	and	ecx, 7
	add	ecx, 1
	mov	edx, DWORD PTR _dow$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _dow$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 124
	mov	DWORD PTR _correction$[ebp], 0
; Line 125
	movsx	eax, BYTE PTR _isLeap$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 59					; 0000003bH
	mov	DWORD PTR _march1$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _doy$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _march1$[ebp]
	jl	SHORT $LN1@dayToField
; Line 127
	movsx	eax, BYTE PTR _isLeap$[ebp]
	neg	eax
	sbb	eax, eax
	add	eax, 2
	mov	DWORD PTR _correction$[ebp], eax
$LN1@dayToField:
; Line 129
	mov	eax, DWORD PTR _doy$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _correction$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, 6
	cdq
	mov	ecx, 367				; 0000016fH
	idiv	ecx
	mov	edx, DWORD PTR _month$[ebp]
	mov	DWORD PTR [edx], eax
; Line 130
	movsx	eax, BYTE PTR _isLeap$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _month$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	movsx	eax, WORD PTR ?DAYS_BEFORE@Grego@icu_56@@0QBFB[edx*2]
	mov	ecx, DWORD PTR _doy$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, eax
	add	edx, 1
	mov	eax, DWORD PTR _dom$[ebp]
	mov	DWORD PTR [eax], edx
; Line 131
	mov	eax, DWORD PTR _doy$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _doy$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dayToFields@Grego@icu_56@@SAXNAAH0000@Z ENDP		; icu_56::Grego::dayToFields
_TEXT	ENDS
PUBLIC	__real@4194997000000000
PUBLIC	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z	; icu_56::Grego::timeToFields
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@4194997000000000
CONST	SEGMENT
__real@4194997000000000 DQ 04194997000000000r	; 8.64e+007
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?timeToFields@Grego@icu_56@@SAXNAAH00000@Z
_TEXT	SEGMENT
_day$ = -28						; size = 8
_millisInDay$ = -12					; size = 8
_time$ = 8						; size = 8
_year$ = 16						; size = 4
_month$ = 20						; size = 4
_dom$ = 24						; size = 4
_dow$ = 28						; size = 4
_doy$ = 32						; size = 4
_mid$ = 36						; size = 4
?timeToFields@Grego@icu_56@@SAXNAAH00000@Z PROC		; icu_56::Grego::timeToFields, COMDAT
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 137
	lea	eax, DWORD PTR _millisInDay$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@4194997000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SANNNAAN@Z ; icu_56::ClockMath::floorDivide
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _day$[ebp]
; Line 138
	fld	QWORD PTR _millisInDay$[ebp]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _mid$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 139
	mov	eax, DWORD PTR _doy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dow$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dom$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _day$[ebp]
	fstp	QWORD PTR [esp]
	call	?dayToFields@Grego@icu_56@@SAXNAAH0000@Z ; icu_56::Grego::dayToFields
	add	esp, 28					; 0000001cH
; Line 140
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@timeToFiel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@timeToFiel:
	DD	1
	DD	$LN4@timeToFiel
$LN4@timeToFiel:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@timeToFiel
$LN3@timeToFiel:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ENDP		; icu_56::Grego::timeToFields
_TEXT	ENDS
PUBLIC	__real@4014000000000000
PUBLIC	?dayOfWeek@Grego@icu_56@@SAHN@Z			; icu_56::Grego::dayOfWeek
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?dayOfWeek@Grego@icu_56@@SAHN@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_dow$ = -8						; size = 4
_day$ = 8						; size = 8
?dayOfWeek@Grego@icu_56@@SAHN@Z PROC			; icu_56::Grego::dayOfWeek, COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 144
	lea	eax, DWORD PTR _dow$[ebp]
	push	eax
	push	7
	fld	QWORD PTR _day$[ebp]
	fadd	QWORD PTR __real@4014000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?floorDivide@ClockMath@icu_56@@SAHNHAAH@Z ; icu_56::ClockMath::floorDivide
	add	esp, 16					; 00000010H
; Line 145
	cmp	DWORD PTR _dow$[ebp], 0
	jne	SHORT $LN3@dayOfWeek
	mov	DWORD PTR tv69[ebp], 7
	jmp	SHORT $LN4@dayOfWeek
$LN3@dayOfWeek:
	mov	eax, DWORD PTR _dow$[ebp]
	mov	DWORD PTR tv69[ebp], eax
$LN4@dayOfWeek:
	mov	eax, DWORD PTR tv69[ebp]
; Line 146
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@dayOfWeek
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@dayOfWeek:
	DD	1
	DD	$LN6@dayOfWeek
$LN6@dayOfWeek:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@dayOfWeek
$LN5@dayOfWeek:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
?dayOfWeek@Grego@icu_56@@SAHN@Z ENDP			; icu_56::Grego::dayOfWeek
_TEXT	ENDS
PUBLIC	?monthLength@Grego@icu_56@@SACHH@Z		; icu_56::Grego::monthLength
PUBLIC	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z	; icu_56::Grego::dayOfWeekInMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z
_TEXT	SEGMENT
_weekInMonth$ = -8					; size = 4
_year$ = 8						; size = 4
_month$ = 12						; size = 4
_dom$ = 16						; size = 4
?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z PROC		; icu_56::Grego::dayOfWeekInMonth, COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 149
	mov	eax, DWORD PTR _dom$[ebp]
	add	eax, 6
	cdq
	mov	ecx, 7
	idiv	ecx
	mov	DWORD PTR _weekInMonth$[ebp], eax
; Line 150
	cmp	DWORD PTR _weekInMonth$[ebp], 4
	jne	SHORT $LN4@dayOfWeekI
; Line 151
	mov	esi, DWORD PTR _dom$[ebp]
	add	esi, 7
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	edx, al
	cmp	esi, edx
	jle	SHORT $LN3@dayOfWeekI
; Line 152
	mov	DWORD PTR _weekInMonth$[ebp], -1
$LN3@dayOfWeekI:
; Line 153
	jmp	SHORT $LN2@dayOfWeekI
$LN4@dayOfWeekI:
; Line 154
	cmp	DWORD PTR _weekInMonth$[ebp], 5
	jne	SHORT $LN2@dayOfWeekI
; Line 155
	mov	DWORD PTR _weekInMonth$[ebp], -1
$LN2@dayOfWeekI:
; Line 157
	mov	eax, DWORD PTR _weekInMonth$[ebp]
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z ENDP		; icu_56::Grego::dayOfWeekInMonth
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?monthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
_month$ = 12						; size = 4
?monthLength@Grego@icu_56@@SACHH@Z PROC			; icu_56::Grego::monthLength, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _month$[ebp]
	mov	al, BYTE PTR ?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?monthLength@Grego@icu_56@@SACHH@Z ENDP			; icu_56::Grego::monthLength
_TEXT	ENDS
PUBLIC	?initData@CalendarData@icu_56@@AAEXPBD0AAW4UErrorCode@@@Z ; icu_56::CalendarData::initData
PUBLIC	??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z ; icu_56::CalendarData::CalendarData
EXTRN	__imp_?getBaseName@Locale@icu_56@@QBEPBDXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_loc$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z PROC ; icu_56::CalendarData::CalendarData, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\gregoimp.cpp
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 176
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _loc$[ebp]
	call	DWORD PTR __imp_?getBaseName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initData@CalendarData@icu_56@@AAEXPBD0AAW4UErrorCode@@@Z ; icu_56::CalendarData::initData
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0CalendarData@icu_56@@QAE@ABVLocale@1@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::CalendarData::CalendarData
_TEXT	ENDS
PUBLIC	??_C@_09KJPEOOPA@gregorian?$AA@			; `string'
PUBLIC	??_C@_08LCCMFNHG@calendar?$AA@			; `string'
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_strcmp:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_open_56:PROC
;	COMDAT ??_C@_09KJPEOOPA@gregorian?$AA@
CONST	SEGMENT
??_C@_09KJPEOOPA@gregorian?$AA@ DB 'gregorian', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCCMFNHG@calendar?$AA@
CONST	SEGMENT
??_C@_08LCCMFNHG@calendar?$AA@ DB 'calendar', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?initData@CalendarData@icu_56@@AAEXPBD0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_locale$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
?initData@CalendarData@icu_56@@AAEXPBD0AAW4UErrorCode@@@Z PROC ; icu_56::CalendarData::initData, COMDAT
; _this$ = ecx
; Line 179
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 181
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ??_C@_08LCCMFNHG@calendar?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 185
	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN2@initData
	mov	eax, DWORD PTR _type$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@initData
	push	OFFSET ??_C@_09KJPEOOPA@gregorian?$AA@
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@initData
; Line 187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_09KJPEOOPA@gregorian?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 196
	jmp	SHORT $LN3@initData
$LN2@initData:
; Line 197
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_09KJPEOOPA@gregorian?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@initData:
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initData@CalendarData@icu_56@@AAEXPBD0AAW4UErrorCode@@@Z ENDP ; icu_56::CalendarData::initData
_TEXT	ENDS
PUBLIC	??1CalendarData@icu_56@@QAE@XZ			; icu_56::CalendarData::~CalendarData
EXTRN	_ures_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CalendarData@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CalendarData@icu_56@@QAE@XZ PROC			; icu_56::CalendarData::~CalendarData, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CalendarData@icu_56@@QAE@XZ ENDP			; icu_56::CalendarData::~CalendarData
_TEXT	ENDS
PUBLIC	?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ; icu_56::CalendarData::getByKey
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_status$ = 12						; size = 4
?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z PROC ; icu_56::CalendarData::getByKey, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getByKey
; Line 215
	xor	eax, eax
	jmp	SHORT $LN4@getByKey
$LN3@getByKey:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@getByKey
; Line 219
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@getByKey:
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@getByKey
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN1@getByKey
; Line 225
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 226
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@getByKey:
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
$LN4@getByKey:
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getByKey@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::CalendarData::getByKey
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_06DLEPGFEF@format?$AA@			; `string'
PUBLIC	?getByKey2@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD0AAW4UErrorCode@@@Z ; icu_56::CalendarData::getByKey2
;	COMDAT ??_C@_06DLEPGFEF@format?$AA@
; File d:\mozilla\intl\icu\source\i18n\gregoimp.cpp
CONST	SEGMENT
??_C@_06DLEPGFEF@format?$AA@ DB 'format', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getByKey2@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_subKey$ = 12						; size = 4
_status$ = 16						; size = 4
?getByKey2@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD0AAW4UErrorCode@@@Z PROC ; icu_56::CalendarData::getByKey2, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 235
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getByKey2
; Line 236
	xor	eax, eax
	jmp	$LN4@getByKey2
$LN3@getByKey2:
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@getByKey2
; Line 243
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 244
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_06DLEPGFEF@format?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 245
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _subKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@getByKey2:
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@getByKey2
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN1@getByKey2
; Line 251
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 252
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 253
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_06DLEPGFEF@format?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 254
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _subKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@getByKey2:
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
$LN4@getByKey2:
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getByKey2@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD0AAW4UErrorCode@@@Z ENDP ; icu_56::CalendarData::getByKey2
_TEXT	ENDS
PUBLIC	?getByKey3@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD00AAW4UErrorCode@@@Z ; icu_56::CalendarData::getByKey3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByKey3@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD00AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_contextKey$ = 12					; size = 4
_subKey$ = 16						; size = 4
_status$ = 20						; size = 4
?getByKey3@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD00AAW4UErrorCode@@@Z PROC ; icu_56::CalendarData::getByKey3, COMDAT
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getByKey3
; Line 298
	xor	eax, eax
	jmp	$LN4@getByKey3
$LN3@getByKey3:
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@getByKey3
; Line 305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 306
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _contextKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 307
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _subKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@getByKey3:
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@getByKey3
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN1@getByKey3
; Line 313
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 314
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 315
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _contextKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 316
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _subKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@getByKey3:
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
$LN4@getByKey3:
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getByKey3@CalendarData@icu_56@@QAEPAUUResourceBundle@@PBD00AAW4UErrorCode@@@Z ENDP ; icu_56::CalendarData::getByKey3
_TEXT	ENDS
END

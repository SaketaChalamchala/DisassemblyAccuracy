; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\ucln_in.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_copyright DB	' Copyright (C) 2015, International Business Machines Cor'
	DB	'poration and others. All Rights Reserved. ', 00H
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@ ; `string'
PUBLIC	??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA ; `ucln_i18n_registerCleanup_56'::`2'::__LINE__Var
PUBLIC	_ucln_i18n_registerCleanup_56
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	_ucln_registerCleanup_56:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
_BSS	SEGMENT
_gCleanupFunctions DD 01cH DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@
; File d:\mozilla\intl\icu\source\i18n\ucln_in.cpp
CONST	SEGMENT
??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@ DB 'U'
	DB	00H, 'C', 00H, 'L', 00H, 'N', 00H, '_', 00H, 'I', 00H, '1', 00H
	DB	'8', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'R'
	DB	00H, 'T', 00H, ' ', 00H, '<', 00H, ' ', 00H, 't', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	'U', 00H, 'C', 00H, 'L', 00H, 'N', 00H, '_', 00H, 'I', 00H, '1'
	DB	00H, '8', 00H, 'N', 00H, '_', 00H, 'C', 00H, 'O', 00H, 'U', 00H
	DB	'N', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'u', 00H
	DB	'c', 00H, 'l', 00H, 'n', 00H, '_', 00H, 'i', 00H, 'n', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA DD 032H ; `ucln_i18n_registerCleanup_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _ucln_i18n_registerCleanup_56
_TEXT	SEGMENT
_m$41647 = -8						; size = 4
_type$ = 8						; size = 4
_func$ = 12						; size = 4
_ucln_i18n_registerCleanup_56 PROC			; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	cmp	DWORD PTR _type$[ebp], -1
	jle	SHORT $LN4@ucln_i18n_
	cmp	DWORD PTR _type$[ebp], 28		; 0000001cH
	jl	SHORT $LN5@ucln_i18n_
$LN4@ucln_i18n_:
	mov	eax, DWORD PTR ?__LINE__Var@?1??ucln_i18n_registerCleanup_56@@9@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FI@OFOBAOL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1GC@HOLKACOC@?$AAU?$AAC?$AAL?$AAN?$AA_?$AAI?$AA1?$AA8?$AAN?$AA_?$AAS?$AAT?$AAA?$AAR?$AAT?$AA?5?$AA?$DM?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$DM@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@ucln_i18n_:
; Line 53
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _m$41647[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 54
	push	OFFSET ?i18n_cleanup@@YACXZ		; i18n_cleanup
	push	7
	call	_ucln_registerCleanup_56
	add	esp, 8
; Line 55
	cmp	DWORD PTR _type$[ebp], -1
	jle	SHORT $LN1@ucln_i18n_
	cmp	DWORD PTR _type$[ebp], 28		; 0000001cH
	jge	SHORT $LN1@ucln_i18n_
; Line 56
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _func$[ebp]
	mov	DWORD PTR _gCleanupFunctions[eax*4], ecx
$LN1@ucln_i18n_:
; Line 58
	mov	esi, esp
	lea	ecx, DWORD PTR _m$41647[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ucln_i18n_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@ucln_i18n_:
	DD	1
	DD	$LN7@ucln_i18n_
$LN7@ucln_i18n_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@ucln_i18n_
$LN6@ucln_i18n_:
	DB	109					; 0000006dH
	DB	0
_ucln_i18n_registerCleanup_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?i18n_cleanup@@YACXZ
_TEXT	SEGMENT
_libType$ = -8						; size = 4
?i18n_cleanup@@YACXZ PROC				; i18n_cleanup, COMDAT
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 33
	mov	DWORD PTR _libType$[ebp], -1
$LN3@i18n_clean:
; Line 36
	mov	eax, DWORD PTR _libType$[ebp]
	add	eax, 1
	mov	DWORD PTR _libType$[ebp], eax
	cmp	DWORD PTR _libType$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@i18n_clean
; Line 37
	mov	eax, DWORD PTR _libType$[ebp]
	cmp	DWORD PTR _gCleanupFunctions[eax*4], 0
	je	SHORT $LN1@i18n_clean
; Line 39
	mov	eax, DWORD PTR _libType$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR _gCleanupFunctions[eax*4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	eax, DWORD PTR _libType$[ebp]
	mov	DWORD PTR _gCleanupFunctions[eax*4], 0
$LN1@i18n_clean:
; Line 42
	jmp	SHORT $LN3@i18n_clean
$LN2@i18n_clean:
; Line 46
	mov	al, 1
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?i18n_cleanup@@YACXZ ENDP				; i18n_cleanup
_TEXT	ENDS
END

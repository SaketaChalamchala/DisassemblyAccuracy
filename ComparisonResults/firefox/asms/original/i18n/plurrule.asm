; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\plurrule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@PluralRules@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::PluralRules::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::PluralKeywordEnumeration::getStaticClassID'::`2'::classID
_BSS	ENDS
_DATA	SEGMENT
_p10	DD	01H
	DD	0aH
	DD	064H
	DD	03e8H
	DD	02710H
_DATA	ENDS
CONST	SEGMENT
_PLURAL_KEYWORD_OTHER DW 06fH
	DW	074H
	DW	068H
	DW	065H
	DW	072H
	DW	00H
_PLURAL_DEFAULT_RULE DW 06fH
	DW	074H
	DW	068H
	DW	065H
	DW	072H
	DW	03aH
	DW	020H
	DW	06eH
	DW	00H
	ORG $+2
_PK_IN	DW	069H
	DW	06eH
	DW	00H
	ORG $+2
_PK_NOT	DW	06eH
	DW	06fH
	DW	074H
	DW	00H
_PK_IS	DW	069H
	DW	073H
	DW	00H
	ORG $+2
_PK_MOD	DW	06dH
	DW	06fH
	DW	064H
	DW	00H
_PK_AND	DW	061H
	DW	06eH
	DW	064H
	DW	00H
_PK_OR	DW	06fH
	DW	072H
	DW	00H
	ORG $+2
_PK_VAR_N DW	06eH
	DW	00H
_PK_VAR_I DW	069H
	DW	00H
_PK_VAR_F DW	066H
	DW	00H
_PK_VAR_T DW	074H
	DW	00H
_PK_VAR_V DW	076H
	DW	00H
_PK_WITHIN DW	077H
	DW	069H
	DW	074H
	DW	068H
	DW	069H
	DW	06eH
	DW	00H
	ORG $+2
_PK_DECIMAL DW	064H
	DW	065H
	DW	063H
	DW	069H
	DW	06dH
	DW	061H
	DW	06cH
	DW	00H
_PK_INTEGER DW	069H
	DW	06eH
	DW	074H
	DW	065H
	DW	067H
	DW	065H
	DW	072H
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??1PluralRules@icu_56@@UAE@XZ			; icu_56::PluralRules::~PluralRules
PUBLIC	??_GPluralRules@icu_56@@UAEPAXI@Z		; icu_56::PluralRules::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralRules@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralRules@icu_56@@UAEPAXI@Z PROC			; icu_56::PluralRules::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralRules@icu_56@@UAE@XZ		; icu_56::PluralRules::~PluralRules
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralRules@icu_56@@UAEPAXI@Z ENDP			; icu_56::PluralRules::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EPluralRules@icu_56@@UAEPAXI@Z		; icu_56::PluralRules::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EPluralRules@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralRules@icu_56@@UAEPAXI@Z PROC			; icu_56::PluralRules::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1PluralRules@icu_56@@UAE@XZ	; icu_56::PluralRules::~PluralRules
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralRules@icu_56@@UAE@XZ		; icu_56::PluralRules::~PluralRules
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralRules@icu_56@@UAEPAXI@Z ENDP			; icu_56::PluralRules::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T84347 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84347[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84347[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84347[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T37480 = -312						; size = 64
_i$37475 = -45						; size = 1
_sym$37473 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$37473[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$37473[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$37475[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$37475[ebp]
	add	al, 1
	mov	BYTE PTR _i$37475[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$37475[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$37473[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$37473[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$37473[ebp]
	push	eax
	lea	ecx, DWORD PTR $T37480[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$37475[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37480[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37480[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T84369 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84369[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84369[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84369[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FixedDecimal::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FixedDecimal::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 12					; 0000000cH
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FixedDecimal::operator=
_TEXT	ENDS
PUBLIC	??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
PUBLIC	??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
PUBLIC	??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
PUBLIC	?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::PluralAvailableLocalesEnumeration::count
PUBLIC	?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z ; icu_56::PluralAvailableLocalesEnumeration::next
PUBLIC	?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z ; icu_56::PluralAvailableLocalesEnumeration::reset
EXTRN	__imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3PluralAvailableLocalesEnumeration@icu_56@@8 DD 00H	; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralAvailableLocalesEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ DD 00H ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ DD FLAT:??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
	DD	FLAT:??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
_TEXT	ENDS
PUBLIC	??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::operator=
EXTRN	__imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::operator=
_TEXT	ENDS
PUBLIC	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
PUBLIC	??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	120					; 00000078H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SharedPluralRules@icu_56@@6B@		; icu_56::SharedPluralRules::`vftable'
PUBLIC	??0SharedPluralRules@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::SharedPluralRules::SharedPluralRules
PUBLIC	??_R4SharedPluralRules@icu_56@@6B@		; icu_56::SharedPluralRules::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSharedPluralRules@icu_56@@@8		; icu_56::SharedPluralRules `RTTI Type Descriptor'
PUBLIC	??_R3SharedPluralRules@icu_56@@8		; icu_56::SharedPluralRules::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SharedPluralRules@icu_56@@8		; icu_56::SharedPluralRules::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SharedPluralRules@icu_56@@8	; icu_56::SharedPluralRules::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SharedObject@icu_56@@8		; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSharedObject@icu_56@@@8			; icu_56::SharedObject `RTTI Type Descriptor'
PUBLIC	??_R3SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SharedObject@icu_56@@8			; icu_56::SharedObject::`RTTI Base Class Array'
PUBLIC	??_ESharedPluralRules@icu_56@@UAEPAXI@Z		; icu_56::SharedPluralRules::`vector deleting destructor'
EXTRN	__imp_??0SharedObject@icu_56@@QAE@XZ:PROC
;	COMDAT ??_R2SharedObject@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\sharedpluralrules.h
rdata$r	SEGMENT
??_R2SharedObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8 ; icu_56::SharedObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R3SharedObject@icu_56@@8 DD 00H			; icu_56::SharedObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSharedObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSharedObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SharedObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSharedObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SharedObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SharedObject@icu_56@@8 DD FLAT:??_R0?AVSharedObject@icu_56@@@8 ; icu_56::SharedObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SharedObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SharedPluralRules@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SharedPluralRules@icu_56@@8 DD FLAT:??_R0?AVSharedPluralRules@icu_56@@@8 ; icu_56::SharedPluralRules::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SharedPluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SharedPluralRules@icu_56@@8
rdata$r	SEGMENT
??_R2SharedPluralRules@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SharedPluralRules@icu_56@@8 ; icu_56::SharedPluralRules::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SharedObject@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SharedPluralRules@icu_56@@8
rdata$r	SEGMENT
??_R3SharedPluralRules@icu_56@@8 DD 00H			; icu_56::SharedPluralRules::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SharedPluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSharedPluralRules@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSharedPluralRules@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SharedPluralRules `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSharedPluralRules@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SharedPluralRules@icu_56@@6B@
rdata$r	SEGMENT
??_R4SharedPluralRules@icu_56@@6B@ DD 00H		; icu_56::SharedPluralRules::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSharedPluralRules@icu_56@@@8
	DD	FLAT:??_R3SharedPluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SharedPluralRules@icu_56@@6B@
CONST	SEGMENT
??_7SharedPluralRules@icu_56@@6B@ DD FLAT:??_R4SharedPluralRules@icu_56@@6B@ ; icu_56::SharedPluralRules::`vftable'
	DD	FLAT:??_ESharedPluralRules@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0SharedPluralRules@icu_56@@QAE@PAVPluralRules@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prToAdopt$ = 8						; size = 4
??0SharedPluralRules@icu_56@@QAE@PAVPluralRules@1@@Z PROC ; icu_56::SharedPluralRules::SharedPluralRules, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0SharedObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SharedPluralRules@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _prToAdopt$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0SharedPluralRules@icu_56@@QAE@PAVPluralRules@1@@Z ENDP ; icu_56::SharedPluralRules::SharedPluralRules
_TEXT	ENDS
PUBLIC	??CSharedPluralRules@icu_56@@QBEPBVPluralRules@1@XZ ; icu_56::SharedPluralRules::operator->
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??CSharedPluralRules@icu_56@@QBEPBVPluralRules@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??CSharedPluralRules@icu_56@@QBEPBVPluralRules@1@XZ PROC ; icu_56::SharedPluralRules::operator->, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??CSharedPluralRules@icu_56@@QBEPBVPluralRules@1@XZ ENDP ; icu_56::SharedPluralRules::operator->
_TEXT	ENDS
PUBLIC	??DSharedPluralRules@icu_56@@QBEABVPluralRules@1@XZ ; icu_56::SharedPluralRules::operator*
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??DSharedPluralRules@icu_56@@QBEABVPluralRules@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??DSharedPluralRules@icu_56@@QBEABVPluralRules@1@XZ PROC ; icu_56::SharedPluralRules::operator*, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??DSharedPluralRules@icu_56@@QBEABVPluralRules@1@XZ ENDP ; icu_56::SharedPluralRules::operator*
_TEXT	ENDS
PUBLIC	??1SharedPluralRules@icu_56@@UAE@XZ		; icu_56::SharedPluralRules::~SharedPluralRules
PUBLIC	??_GSharedPluralRules@icu_56@@UAEPAXI@Z		; icu_56::SharedPluralRules::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSharedPluralRules@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSharedPluralRules@icu_56@@UAEPAXI@Z PROC		; icu_56::SharedPluralRules::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SharedPluralRules@icu_56@@UAE@XZ	; icu_56::SharedPluralRules::~SharedPluralRules
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSharedPluralRules@icu_56@@UAEPAXI@Z ENDP		; icu_56::SharedPluralRules::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESharedPluralRules@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESharedPluralRules@icu_56@@UAEPAXI@Z PROC		; icu_56::SharedPluralRules::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@7
	push	OFFSET ??1SharedPluralRules@icu_56@@UAE@XZ ; icu_56::SharedPluralRules::~SharedPluralRules
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@7
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@7
$LN3@vector@7:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SharedPluralRules@icu_56@@UAE@XZ	; icu_56::SharedPluralRules::~SharedPluralRules
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@7:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@7:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESharedPluralRules@icu_56@@UAEPAXI@Z ENDP		; icu_56::SharedPluralRules::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0DigitInterval@icu_56@@QAE@XZ			; icu_56::DigitInterval::DigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitInterval@icu_56@@QAE@XZ PROC			; icu_56::DigitInterval::DigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitinterval.h
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitInterval@icu_56@@QAE@XZ ENDP			; icu_56::DigitInterval::DigitInterval
_TEXT	ENDS
PUBLIC	?clear@DigitInterval@icu_56@@QAEXXZ		; icu_56::DigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@DigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@DigitInterval@icu_56@@QAEXXZ PROC		; icu_56::DigitInterval::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@DigitInterval@icu_56@@QAEXXZ ENDP		; icu_56::DigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@DigitInterval@icu_56@@QBECABV12@@Z	; icu_56::DigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitInterval@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitInterval::equals, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv68[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitInterval@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitInterval::equals
_TEXT	ENDS
PUBLIC	?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_smallest$ = 8						; size = 4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	xor	eax, eax
	cmp	DWORD PTR _smallest$[ebp], 0
	setge	al
	sub	eax, 1
	and	eax, DWORD PTR _smallest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_largest$ = 8						; size = 4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	xor	eax, eax
	cmp	DWORD PTR _largest$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _largest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getIntDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getIntDigitCount, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getIntDigitCount
_TEXT	ENDS
PUBLIC	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getFracDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getFracDigitCount, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -2147483648		; 80000000H
	jne	SHORT $LN3@getFracDig
	mov	DWORD PTR tv68[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@getFracDig
$LN3@getFracDig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	neg	edx
	mov	DWORD PTR tv68[ebp], edx
$LN4@getFracDig:
	mov	eax, DWORD PTR tv68[ebp]
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getFracDigitCount
_TEXT	ENDS
PUBLIC	?length@DigitInterval@icu_56@@QBEHXZ		; icu_56::DigitInterval::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@DigitInterval@icu_56@@QBEHXZ PROC		; icu_56::DigitInterval::length, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+4]
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@DigitInterval@icu_56@@QBEHXZ ENDP		; icu_56::DigitInterval::length
_TEXT	ENDS
PUBLIC	?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitInterval::operator=
_TEXT	ENDS
PUBLIC	??0VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::VisibleDigits
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\visibledigits.h
xdata$x	SEGMENT
__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::VisibleDigits, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [eax+88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::VisibleDigits
PUBLIC	?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ; icu_56::VisibleDigits::getInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ PROC ; icu_56::VisibleDigits::getInterval, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ENDP ; icu_56::VisibleDigits::getInterval
_TEXT	ENDS
PUBLIC	??1VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::~VisibleDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::~VisibleDigits, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::~VisibleDigits
_TEXT	ENDS
PUBLIC	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
PUBLIC	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getMantissa, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getMantissa
_TEXT	ENDS
PUBLIC	?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getExponent, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+208]
	test	ecx, ecx
	je	SHORT $LN3@getExponen
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@getExponen
$LN3@getExponen:
	mov	DWORD PTR tv68[ebp], 0
$LN4@getExponen:
	mov	eax, DWORD PTR tv68[ebp]
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getExponent
_TEXT	ENDS
PUBLIC	?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ	; icu_56::VisibleDigitsWithExponent::clear
EXTRN	?clear@VisibleDigits@icu_56@@AAEXXZ:PROC	; icu_56::VisibleDigits::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ PROC	; icu_56::VisibleDigitsWithExponent::clear, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ ENDP	; icu_56::VisibleDigitsWithExponent::clear
_TEXT	ENDS
PUBLIC	?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isNegative
EXTRN	?isNegative@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNegative
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isNegative, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNegative@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNegative
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isNegative
_TEXT	ENDS
PUBLIC	?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ	; icu_56::VisibleDigitsWithExponent::isNaN
EXTRN	?isNaN@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC	; icu_56::VisibleDigitsWithExponent::isNaN, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNaN@VisibleDigits@icu_56@@QBECXZ	; icu_56::VisibleDigits::isNaN
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP	; icu_56::VisibleDigitsWithExponent::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isInfinite
EXTRN	?isInfinite@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isInfinite, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInfinite@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isInfinite
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isInfinite
_TEXT	ENDS
PUBLIC	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
PUBLIC	?getStaticClassID@PluralRules@icu_56@@SAPAXXZ	; icu_56::PluralRules::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@PluralRules@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@PluralRules@icu_56@@SAPAXXZ PROC	; icu_56::PluralRules::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\plurrule.cpp
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@PluralRules@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@PluralRules@icu_56@@SAPAXXZ ENDP	; icu_56::PluralRules::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@PluralRules@icu_56@@UBEPAXXZ	; icu_56::PluralRules::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@PluralRules@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@PluralRules@icu_56@@UBEPAXXZ PROC	; icu_56::PluralRules::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@PluralRules@icu_56@@SAPAXXZ ; icu_56::PluralRules::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@PluralRules@icu_56@@UBEPAXXZ ENDP	; icu_56::PluralRules::getDynamicClassID
_TEXT	ENDS
PUBLIC	?getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ ; icu_56::PluralKeywordEnumeration::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ PROC ; icu_56::PluralKeywordEnumeration::getStaticClassID, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ ENDP ; icu_56::PluralKeywordEnumeration::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@PluralKeywordEnumeration@icu_56@@UBEPAXXZ ; icu_56::PluralKeywordEnumeration::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@PluralKeywordEnumeration@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@PluralKeywordEnumeration@icu_56@@UBEPAXXZ PROC ; icu_56::PluralKeywordEnumeration::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@PluralKeywordEnumeration@icu_56@@SAPAXXZ ; icu_56::PluralKeywordEnumeration::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@PluralKeywordEnumeration@icu_56@@UBEPAXXZ ENDP ; icu_56::PluralKeywordEnumeration::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7PluralRules@icu_56@@6B@			; icu_56::PluralRules::`vftable'
PUBLIC	??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::PluralRules::PluralRules
PUBLIC	??_R4PluralRules@icu_56@@6B@			; icu_56::PluralRules::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralRules@icu_56@@@8			; icu_56::PluralRules `RTTI Type Descriptor'
PUBLIC	??_R3PluralRules@icu_56@@8			; icu_56::PluralRules::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralRules@icu_56@@8			; icu_56::PluralRules::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralRules@icu_56@@8		; icu_56::PluralRules::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8PluralRules@icu_56@@UBECABV01@@Z		; icu_56::PluralRules::operator==
;	COMDAT ??_R1A@?0A@EA@PluralRules@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralRules@icu_56@@8 DD FLAT:??_R0?AVPluralRules@icu_56@@@8 ; icu_56::PluralRules::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralRules@icu_56@@8
rdata$r	SEGMENT
??_R2PluralRules@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralRules@icu_56@@8 ; icu_56::PluralRules::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralRules@icu_56@@8
rdata$r	SEGMENT
??_R3PluralRules@icu_56@@8 DD 00H			; icu_56::PluralRules::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralRules@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralRules@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralRules `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralRules@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralRules@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralRules@icu_56@@6B@ DD 00H			; icu_56::PluralRules::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralRules@icu_56@@@8
	DD	FLAT:??_R3PluralRules@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralRules@icu_56@@6B@
CONST	SEGMENT
??_7PluralRules@icu_56@@6B@ DD FLAT:??_R4PluralRules@icu_56@@6B@ ; icu_56::PluralRules::`vftable'
	DD	FLAT:??_EPluralRules@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@PluralRules@icu_56@@UBEPAXXZ
	DD	FLAT:??8PluralRules@icu_56@@UBECABV01@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z PROC	; icu_56::PluralRules::PluralRules, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralRules@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP	; icu_56::PluralRules::PluralRules
_TEXT	ENDS
PUBLIC	??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PluralRules::operator=
PUBLIC	??0PluralRules@icu_56@@QAE@ABV01@@Z		; icu_56::PluralRules::PluralRules
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PluralRules@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PluralRules@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0PluralRules@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0PluralRules@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PluralRules@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0PluralRules@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PluralRules::PluralRules, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PluralRules@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralRules@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 74
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralRules::operator=
; Line 75
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PluralRules@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0PluralRules@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PluralRules@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PluralRules@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PluralRules::PluralRules
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1PluralRules@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PluralRules@icu_56@@UAE@XZ$0
__ehfuncinfo$??1PluralRules@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1PluralRules@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1PluralRules@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv81 = -244						; size = 4
$T84565 = -236						; size = 4
$T84566 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1PluralRules@icu_56@@UAE@XZ PROC			; icu_56::PluralRules::~PluralRules, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PluralRules@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralRules@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T84566[ebp], ecx
	mov	edx, DWORD PTR $T84566[ebp]
	mov	DWORD PTR $T84565[ebp], edx
	cmp	DWORD PTR $T84565[ebp], 0
	je	SHORT $LN3@PluralRule
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84565[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84565[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN1@PluralRule
$LN3@PluralRule:
	mov	DWORD PTR tv81[ebp], 0
$LN1@PluralRule:
; Line 79
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1PluralRules@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1PluralRules@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PluralRules@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PluralRules@icu_56@@UAE@XZ ENDP			; icu_56::PluralRules::~PluralRules
EXTRN	__imp_??1SharedObject@icu_56@@UAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SharedPluralRules@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SharedPluralRules@icu_56@@UAE@XZ$0
__ehfuncinfo$??1SharedPluralRules@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SharedPluralRules@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SharedPluralRules@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -244						; size = 4
$T84578 = -236						; size = 4
$T84579 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SharedPluralRules@icu_56@@UAE@XZ PROC		; icu_56::SharedPluralRules::~SharedPluralRules, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SharedPluralRules@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SharedPluralRules@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T84579[ebp], ecx
	mov	edx, DWORD PTR $T84579[ebp]
	mov	DWORD PTR $T84578[ebp], edx
	cmp	DWORD PTR $T84578[ebp], 0
	je	SHORT $LN3@SharedPlur
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84578[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84578[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN1@SharedPlur
$LN3@SharedPlur:
	mov	DWORD PTR tv85[ebp], 0
$LN1@SharedPlur:
; Line 83
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SharedObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SharedPluralRules@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1SharedObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1SharedPluralRules@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SharedPluralRules@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SharedPluralRules@icu_56@@UAE@XZ ENDP		; icu_56::SharedPluralRules::~SharedPluralRules
PUBLIC	?clone@PluralRules@icu_56@@QBEPAV12@XZ		; icu_56::PluralRules::clone
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@PluralRules@icu_56@@QBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@PluralRules@icu_56@@QBEPAV12@XZ$0
__ehfuncinfo$?clone@PluralRules@icu_56@@QBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@PluralRules@icu_56@@QBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@PluralRules@icu_56@@QBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T84591 = -236						; size = 4
$T84592 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@PluralRules@icu_56@@QBEPAV12@XZ PROC		; icu_56::PluralRules::clone, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@PluralRules@icu_56@@QBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	esi, esp
	push	8
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84592[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84592[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84592[ebp]
	call	??0PluralRules@icu_56@@QAE@ABV01@@Z	; icu_56::PluralRules::PluralRules
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T84591[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T84591[ebp]
; Line 88
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@PluralRules@icu_56@@QBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84592[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@PluralRules@icu_56@@QBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@PluralRules@icu_56@@QBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@PluralRules@icu_56@@QBEPAV12@XZ ENDP		; icu_56::PluralRules::clone
PUBLIC	??0RuleChain@icu_56@@QAE@ABV01@@Z		; icu_56::RuleChain::RuleChain
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv86 = -268						; size = 4
tv72 = -268						; size = 4
$T84604 = -260						; size = 4
$T84605 = -248						; size = 4
$T84608 = -236						; size = 4
$T84609 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PluralRules::operator=, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	je	$LN3@operator@2
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T84605[ebp], ecx
	mov	edx, DWORD PTR $T84605[ebp]
	mov	DWORD PTR $T84604[ebp], edx
	cmp	DWORD PTR $T84604[ebp], 0
	je	SHORT $LN6@operator@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84604[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84604[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN7@operator@2
$LN6@operator@2:
	mov	DWORD PTR tv72[ebp], 0
$LN7@operator@2:
; Line 94
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@operator@2
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 97
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 98
	mov	esi, esp
	push	208					; 000000d0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84609[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84609[ebp], 0
	je	SHORT $LN8@operator@2
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T84609[ebp]
	call	??0RuleChain@icu_56@@QAE@ABV01@@Z	; icu_56::RuleChain::RuleChain
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN9@operator@2
$LN8@operator@2:
	mov	DWORD PTR tv86[ebp], 0
$LN9@operator@2:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T84608[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T84608[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN3@operator@2:
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
; Line 103
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84609[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4PluralRules@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PluralRules::operator=
PUBLIC	??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
PUBLIC	?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getAvailableLocales
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv95 = -268						; size = 4
tv75 = -268						; size = 4
$T84621 = -260						; size = 4
$T84622 = -248						; size = 4
$T84625 = -236						; size = 4
$T84626 = -224						; size = 4
_result$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::getAvailableLocales, COMDAT
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 106
	mov	esi, esp
	push	120					; 00000078H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84622[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84622[ebp], 0
	je	SHORT $LN5@getAvailab
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84622[ebp]
	call	??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@getAvailab
$LN5@getAvailab:
	mov	DWORD PTR tv75[ebp], 0
$LN6@getAvailab:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T84621[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T84621[ebp]
	mov	DWORD PTR _result$[ebp], edx
; Line 107
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@getAvailab
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getAvailab
; Line 108
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@getAvailab:
; Line 110
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getAvailab
; Line 111
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T84626[ebp], eax
	mov	ecx, DWORD PTR $T84626[ebp]
	mov	DWORD PTR $T84625[ebp], ecx
	cmp	DWORD PTR $T84625[ebp], 0
	je	SHORT $LN7@getAvailab
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84625[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84625[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN8@getAvailab
$LN7@getAvailab:
	mov	DWORD PTR tv95[ebp], 0
$LN8@getAvailab:
; Line 112
	mov	DWORD PTR _result$[ebp], 0
$LN1@getAvailab:
; Line 114
	mov	eax, DWORD PTR _result$[ebp]
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84622[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAvailableLocales@PluralRules@icu_56@@SAPAVStringEnumeration@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::getAvailableLocales
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??1PluralRuleParser@icu_56@@UAE@XZ		; icu_56::PluralRuleParser::~PluralRuleParser
PUBLIC	?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::parse
PUBLIC	??0PluralRuleParser@icu_56@@QAE@XZ		; icu_56::PluralRuleParser::PluralRuleParser
PUBLIC	__$ArrayPad$
PUBLIC	?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createRules
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\plurrule.cpp
xdata$x	SEGMENT
__unwindtable$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv134 = -392						; size = 4
tv79 = -392						; size = 4
$T84641 = -384						; size = 4
$T84642 = -372						; size = 4
$T84645 = -360						; size = 4
$T84646 = -348						; size = 4
$T84649 = -336						; size = 4
_newRules$ = -132					; size = 4
_parser$ = -120						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_description$ = 8					; size = 4
_status$ = 12						; size = 4
?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::createRules, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 120
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@createRule
; Line 121
	xor	eax, eax
	jmp	$LN4@createRule
$LN3@createRule:
; Line 124
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??0PluralRuleParser@icu_56@@QAE@XZ	; icu_56::PluralRuleParser::PluralRuleParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 125
	mov	esi, esp
	push	8
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84642[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84642[ebp], 0
	je	SHORT $LN6@createRule
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84642[ebp]
	call	??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::PluralRules::PluralRules
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN7@createRule
$LN6@createRule:
	mov	DWORD PTR tv79[ebp], 0
$LN7@createRule:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T84641[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T84641[ebp]
	mov	DWORD PTR _newRules$[ebp], edx
; Line 126
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createRule
	cmp	DWORD PTR _newRules$[ebp], 0
	jne	SHORT $LN2@createRule
; Line 127
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@createRule:
; Line 129
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newRules$[ebp]
	push	ecx
	mov	edx, DWORD PTR _description$[ebp]
	push	edx
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::parse
; Line 130
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createRule
; Line 131
	mov	eax, DWORD PTR _newRules$[ebp]
	mov	DWORD PTR $T84646[ebp], eax
	mov	ecx, DWORD PTR $T84646[ebp]
	mov	DWORD PTR $T84645[ebp], ecx
	cmp	DWORD PTR $T84645[ebp], 0
	je	SHORT $LN8@createRule
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84645[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84645[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN9@createRule
$LN8@createRule:
	mov	DWORD PTR tv134[ebp], 0
$LN9@createRule:
; Line 132
	mov	DWORD PTR _newRules$[ebp], 0
$LN1@createRule:
; Line 134
	mov	eax, DWORD PTR _newRules$[ebp]
	mov	DWORD PTR $T84649[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1PluralRuleParser@icu_56@@UAE@XZ	; icu_56::PluralRuleParser::~PluralRuleParser
	mov	eax, DWORD PTR $T84649[ebp]
$LN4@createRule:
; Line 135
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@createRule
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@createRule:
	DD	1
	DD	$LN14@createRule
$LN14@createRule:
	DD	-120					; ffffff88H
	DD	100					; 00000064H
	DD	$LN12@createRule
$LN12@createRule:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _parser$[ebp]
	jmp	??1PluralRuleParser@icu_56@@UAE@XZ	; icu_56::PluralRuleParser::~PluralRuleParser
__unwindfunclet$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T84642[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::createRules
PUBLIC	__$ArrayPad$
PUBLIC	?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createDefaultRules
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv75 = -300						; size = 4
tv76 = -296						; size = 4
$T84665 = -288						; size = 4
$T75518 = -276						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::createDefaultRules, COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 140
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	push	-1
	push	OFFSET _PLURAL_DEFAULT_RULE
	push	1
	lea	ecx, DWORD PTR $T75518[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv75[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	call	?createRules@PluralRules@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createRules
	add	esp, 8
	mov	DWORD PTR $T84665[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T75518[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84665[ebp]
; Line 141
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T75518[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createDefaultRules@PluralRules@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::createDefaultRules
PUBLIC	?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::internalForLocale
PUBLIC	__$ArrayPad$
PUBLIC	?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::createObject
EXTRN	__imp_?addRef@SharedObject@icu_56@@QBEXXZ:PROC
EXTRN	__imp_??1Locale@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0Locale@icu_56@@QAE@PBD000@Z:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z$1
__ehfuncinfo$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv133 = -520						; size = 4
tv90 = -520						; size = 4
$T84676 = -512						; size = 4
$T84677 = -500						; size = 4
$T84680 = -488						; size = 4
$T84681 = -476						; size = 4
$T75578 = -464						; size = 204
_result$ = -60						; size = 4
_pr$ = -48						; size = 4
_localeId$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_status$ = 12						; size = 4
?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::createObject, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _localeId$[ebp], eax
; Line 151
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _localeId$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T75578[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@PBD000@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR $T75578[ebp]
	push	edx
	call	?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::internalForLocale
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pr$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T75578[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 152
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createObje
; Line 153
	xor	eax, eax
	jmp	$LN3@createObje
$LN2@createObje:
; Line 155
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84677[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84677[ebp], 0
	je	SHORT $LN5@createObje
	mov	eax, DWORD PTR _pr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84677[ebp]
	call	??0SharedPluralRules@icu_56@@QAE@PAVPluralRules@1@@Z ; icu_56::SharedPluralRules::SharedPluralRules
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@createObje
$LN5@createObje:
	mov	DWORD PTR tv90[ebp], 0
$LN6@createObje:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T84676[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T84676[ebp]
	mov	DWORD PTR _result$[ebp], edx
; Line 156
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@createObje
; Line 157
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 158
	mov	eax, DWORD PTR _pr$[ebp]
	mov	DWORD PTR $T84681[ebp], eax
	mov	ecx, DWORD PTR $T84681[ebp]
	mov	DWORD PTR $T84680[ebp], ecx
	cmp	DWORD PTR $T84680[ebp], 0
	je	SHORT $LN7@createObje
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84680[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84680[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN8@createObje
$LN7@createObje:
	mov	DWORD PTR tv133[ebp], 0
$LN8@createObje:
; Line 159
	xor	eax, eax
	jmp	SHORT $LN3@createObje
$LN1@createObje:
; Line 161
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?addRef@SharedObject@icu_56@@QBEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	eax, DWORD PTR _result$[ebp]
$LN3@createObje:
; Line 163
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T75578[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T84677[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::createObject
PUBLIC	??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::getByLocale<icu_56::SharedPluralRules>
PUBLIC	?createSharedInstance@PluralRules@icu_56@@SAPBVSharedPluralRules@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createSharedInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSharedInstance@PluralRules@icu_56@@SAPBVSharedPluralRules@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -8						; size = 4
_locale$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
?createSharedInstance@PluralRules@icu_56@@SAPBVSharedPluralRules@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::createSharedInstance, COMDAT
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 171
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createShar
; Line 172
	xor	eax, eax
	jmp	SHORT $LN3@createShar
$LN2@createShar:
; Line 174
	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN1@createShar
; Line 175
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 176
	xor	eax, eax
	jmp	SHORT $LN3@createShar
$LN1@createShar:
; Line 178
	mov	DWORD PTR _result$[ebp], 0
; Line 179
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::getByLocale<icu_56::SharedPluralRules>
	add	esp, 12					; 0000000cH
; Line 180
	mov	eax, DWORD PTR _result$[ebp]
$LN3@createShar:
; Line 181
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@createShar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@createShar:
	DD	1
	DD	$LN6@createShar
$LN6@createShar:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@createShar
$LN5@createShar:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?createSharedInstance@PluralRules@icu_56@@SAPBVSharedPluralRules@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::createSharedInstance
_TEXT	ENDS
PUBLIC	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
PUBLIC	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_locale$ = 8						; size = 4
_status$ = 12						; size = 4
?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::forLocale, COMDAT
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 185
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	call	?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::forLocale
	add	esp, 12					; 0000000cH
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::forLocale
_TEXT	ENDS
EXTRN	__imp_?removeRef@SharedObject@icu_56@@QBEXXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_shared$ = -8						; size = 4
_locale$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::forLocale, COMDAT
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 190
	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN3@forLocale
; Line 191
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::internalForLocale
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@forLocale
$LN3@forLocale:
; Line 194
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	call	?createSharedInstance@PluralRules@icu_56@@SAPBVSharedPluralRules@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::createSharedInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _shared$[ebp], eax
; Line 195
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@forLocale
; Line 196
	xor	eax, eax
	jmp	SHORT $LN4@forLocale
$LN2@forLocale:
; Line 198
	mov	ecx, DWORD PTR _shared$[ebp]
	call	??CSharedPluralRules@icu_56@@QBEPBVPluralRules@1@XZ ; icu_56::SharedPluralRules::operator->
	mov	ecx, eax
	call	?clone@PluralRules@icu_56@@QBEPAV12@XZ	; icu_56::PluralRules::clone
	mov	DWORD PTR _result$[ebp], eax
; Line 199
	mov	esi, esp
	mov	ecx, DWORD PTR _shared$[ebp]
	call	DWORD PTR __imp_?removeRef@SharedObject@icu_56@@QBEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@forLocale
; Line 201
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@forLocale:
; Line 203
	mov	eax, DWORD PTR _result$[ebp]
$LN4@forLocale:
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?forLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::forLocale
_TEXT	ENDS
PUBLIC	?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getRuleFromResource
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv152 = -540						; size = 4
tv160 = -536						; size = 4
tv92 = -536						; size = 4
tv77 = -536						; size = 4
$T84704 = -528						; size = 4
$T84705 = -516						; size = 4
$T84708 = -504						; size = 4
$T84709 = -492						; size = 4
$T84712 = -480						; size = 4
$T75634 = -468						; size = 64
_parser$ = -204						; size = 100
_locRule$ = -96						; size = 64
_newObj$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_locale$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::internalForLocale, COMDAT
; Line 207
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 208
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@internalFo
; Line 209
	xor	eax, eax
	jmp	$LN6@internalFo
$LN5@internalFo:
; Line 211
	cmp	DWORD PTR _type$[ebp], 2
	jl	SHORT $LN4@internalFo
; Line 212
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 213
	xor	eax, eax
	jmp	$LN6@internalFo
$LN4@internalFo:
; Line 215
	mov	esi, esp
	push	8
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84705[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84705[ebp], 0
	je	SHORT $LN8@internalFo
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84705[ebp]
	call	??0PluralRules@icu_56@@QAE@AAW4UErrorCode@@@Z ; icu_56::PluralRules::PluralRules
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN9@internalFo
$LN8@internalFo:
	mov	DWORD PTR tv77[ebp], 0
$LN9@internalFo:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T84704[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T84704[ebp]
	mov	DWORD PTR _newObj$[ebp], edx
; Line 216
	cmp	DWORD PTR _newObj$[ebp], 0
	je	SHORT $LN2@internalFo
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@internalFo
$LN2@internalFo:
; Line 217
	mov	eax, DWORD PTR _newObj$[ebp]
	mov	DWORD PTR $T84709[ebp], eax
	mov	ecx, DWORD PTR $T84709[ebp]
	mov	DWORD PTR $T84708[ebp], ecx
	cmp	DWORD PTR $T84708[ebp], 0
	je	SHORT $LN10@internalFo
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84708[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84708[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN11@internalFo
$LN10@internalFo:
	mov	DWORD PTR tv92[ebp], 0
$LN11@internalFo:
; Line 218
	xor	eax, eax
	jmp	$LN6@internalFo
$LN3@internalFo:
; Line 220
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _locale$[ebp]
	push	edx
	lea	eax, DWORD PTR _locRule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newObj$[ebp]
	call	?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getRuleFromResource
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 222
	mov	esi, esp
	lea	ecx, DWORD PTR _locRule$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@internalFo
; Line 226
	mov	esi, esp
	push	OFFSET _PLURAL_DEFAULT_RULE
	lea	ecx, DWORD PTR $T75634[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv160[ebp], eax
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	lea	ecx, DWORD PTR _locRule$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T75634[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@internalFo:
; Line 229
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??0PluralRuleParser@icu_56@@QAE@XZ	; icu_56::PluralRuleParser::PluralRuleParser
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 230
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newObj$[ebp]
	push	ecx
	lea	edx, DWORD PTR _locRule$[ebp]
	push	edx
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::parse
; Line 236
	mov	eax, DWORD PTR _newObj$[ebp]
	mov	DWORD PTR $T84712[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _parser$[ebp]
	call	??1PluralRuleParser@icu_56@@UAE@XZ	; icu_56::PluralRuleParser::~PluralRuleParser
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locRule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84712[ebp]
$LN6@internalFo:
; Line 237
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@internalFo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@internalFo:
	DD	2
	DD	$LN19@internalFo
$LN19@internalFo:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN16@internalFo
	DD	-204					; ffffff34H
	DD	100					; 00000064H
	DD	$LN17@internalFo
$LN17@internalFo:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN16@internalFo:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84705[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _locRule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T75634[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _parser$[ebp]
	jmp	??1PluralRuleParser@icu_56@@UAE@XZ	; icu_56::PluralRuleParser::~PluralRuleParser
__ehhandler$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?internalForLocale@PluralRules@icu_56@@SAPAV12@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::internalForLocale
PUBLIC	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::PluralRules::select
PUBLIC	??0FixedDecimal@icu_56@@QAE@N@Z			; icu_56::FixedDecimal::FixedDecimal
PUBLIC	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@H@Z ; icu_56::PluralRules::select
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@H@Z
_TEXT	SEGMENT
$T84729 = -268						; size = 48
$T84731 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@H@Z PROC ; icu_56::PluralRules::select, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84731[ebp], 0
; Line 241
	fild	DWORD PTR _number$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR $T84729[ebp]
	call	??0FixedDecimal@icu_56@@QAE@N@Z		; icu_56::FixedDecimal::FixedDecimal
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::PluralRules::select
	mov	ecx, DWORD PTR $T84731[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84731[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 242
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@H@Z ENDP ; icu_56::PluralRules::select
_TEXT	ENDS
PUBLIC	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z ; icu_56::PluralRules::select
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z
_TEXT	SEGMENT
$T84735 = -268						; size = 48
$T84737 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 8
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z PROC ; icu_56::PluralRules::select, COMDAT
; _this$ = ecx
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84737[ebp], 0
; Line 246
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR $T84735[ebp]
	call	??0FixedDecimal@icu_56@@QAE@N@Z		; icu_56::FixedDecimal::FixedDecimal
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::PluralRules::select
	mov	ecx, DWORD PTR $T84737[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84737[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@N@Z ENDP ; icu_56::PluralRules::select
_TEXT	ENDS
PUBLIC	?select@RuleChain@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::RuleChain::select
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z
_TEXT	SEGMENT
$T84742 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z PROC ; icu_56::PluralRules::select, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84742[ebp], 0
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@select
; Line 252
	mov	esi, esp
	push	-1
	push	OFFSET _PLURAL_DEFAULT_RULE
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84742[ebp]
	or	eax, 1
	mov	DWORD PTR $T84742[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@select
; Line 254
	jmp	SHORT $LN3@select
$LN2@select:
; Line 255
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?select@RuleChain@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::RuleChain::select
	mov	eax, DWORD PTR $T84742[ebp]
	or	eax, 1
	mov	DWORD PTR $T84742[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@select:
; Line 257
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ENDP ; icu_56::PluralRules::select
_TEXT	ENDS
PUBLIC	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ; icu_56::FixedDecimal::FixedDecimal
PUBLIC	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVVisibleDigitsWithExponent@2@@Z ; icu_56::PluralRules::select
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVVisibleDigitsWithExponent@2@@Z
_TEXT	SEGMENT
$T84746 = -268						; size = 48
$T84748 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVVisibleDigitsWithExponent@2@@Z PROC ; icu_56::PluralRules::select, COMDAT
; _this$ = ecx
; Line 260
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84748[ebp], 0
; Line 261
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getExponent
	test	eax, eax
	je	SHORT $LN1@select@2
; Line 262
	mov	esi, esp
	push	-1
	push	OFFSET _PLURAL_DEFAULT_RULE
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84748[ebp]
	or	eax, 1
	mov	DWORD PTR $T84748[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@select@2
$LN1@select@2:
; Line 264
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
	push	eax
	lea	ecx, DWORD PTR $T84746[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ; icu_56::FixedDecimal::FixedDecimal
	push	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ; icu_56::PluralRules::select
	mov	ecx, DWORD PTR $T84748[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84748[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@select@2:
; Line 265
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select@PluralRules@icu_56@@QBE?AVUnicodeString@2@ABVVisibleDigitsWithExponent@2@@Z ENDP ; icu_56::PluralRules::select
_TEXT	ENDS
PUBLIC	??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z ; icu_56::PluralKeywordEnumeration::PluralKeywordEnumeration
PUBLIC	?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getKeywords
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv128 = -280						; size = 4
tv81 = -280						; size = 4
$T84752 = -272						; size = 4
$T84753 = -260						; size = 4
$T84756 = -248						; size = 4
$T84757 = -236						; size = 4
_nameEnumerator$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::getKeywords, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 271
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getKeyword
	xor	eax, eax
	jmp	$LN3@getKeyword
$LN2@getKeyword:
; Line 272
	mov	esi, esp
	push	136					; 00000088H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84753[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84753[ebp], 0
	je	SHORT $LN5@getKeyword
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR $T84753[ebp]
	call	??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z ; icu_56::PluralKeywordEnumeration::PluralKeywordEnumeration
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@getKeyword
$LN5@getKeyword:
	mov	DWORD PTR tv81[ebp], 0
$LN6@getKeyword:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T84752[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T84752[ebp]
	mov	DWORD PTR _nameEnumerator$[ebp], ecx
; Line 273
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getKeyword
; Line 274
	mov	eax, DWORD PTR _nameEnumerator$[ebp]
	mov	DWORD PTR $T84757[ebp], eax
	mov	ecx, DWORD PTR $T84757[ebp]
	mov	DWORD PTR $T84756[ebp], ecx
	cmp	DWORD PTR $T84756[ebp], 0
	je	SHORT $LN7@getKeyword
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T84756[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T84756[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN8@getKeyword
$LN7@getKeyword:
	mov	DWORD PTR tv128[ebp], 0
$LN8@getKeyword:
; Line 275
	xor	eax, eax
	jmp	SHORT $LN3@getKeyword
$LN1@getKeyword:
; Line 278
	mov	eax, DWORD PTR _nameEnumerator$[ebp]
$LN3@getKeyword:
; Line 279
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84753[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::getKeywords
PUBLIC	__real@bf543a270c991e7f
PUBLIC	?getUniqueKeywordValue@PluralRules@icu_56@@QAENABVUnicodeString@2@@Z ; icu_56::PluralRules::getUniqueKeywordValue
;	COMDAT __real@bf543a270c991e7f
CONST	SEGMENT
__real@bf543a270c991e7f DQ 0bf543a270c991e7fr	; -0.00123457
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getUniqueKeywordValue@PluralRules@icu_56@@QAENABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?getUniqueKeywordValue@PluralRules@icu_56@@QAENABVUnicodeString@2@@Z PROC ; icu_56::PluralRules::getUniqueKeywordValue, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 284
	fld	QWORD PTR __real@bf543a270c991e7f
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getUniqueKeywordValue@PluralRules@icu_56@@QAENABVUnicodeString@2@@Z ENDP ; icu_56::PluralRules::getUniqueKeywordValue
_TEXT	ENDS
PUBLIC	?getAllKeywordValues@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z ; icu_56::PluralRules::getAllKeywordValues
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAllKeywordValues@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
_error$ = 20						; size = 4
?getAllKeywordValues@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::getAllKeywordValues, COMDAT
; _this$ = ecx
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 290
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 291
	xor	eax, eax
; Line 292
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getAllKeywordValues@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::getAllKeywordValues
_TEXT	ENDS
PUBLIC	?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z ; icu_56::PluralRules::rulesForKeyword
PUBLIC	?getSamples@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z ; icu_56::PluralRules::getSamples
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSamples@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_numSamples$ = -32					; size = 4
_rc$ = -20						; size = 4
_this$ = -8						; size = 4
_keyword$ = 8						; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
?getSamples@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::getSamples, COMDAT
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 376
	mov	eax, DWORD PTR _keyword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z ; icu_56::PluralRules::rulesForKeyword
	mov	DWORD PTR _rc$[ebp], eax
; Line 377
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@getSamples
	cmp	DWORD PTR _destCapacity$[ebp], 0
	je	SHORT $LN2@getSamples
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getSamples
$LN2@getSamples:
; Line 378
	xor	eax, eax
	jmp	SHORT $LN4@getSamples
$LN3@getSamples:
; Line 380
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	call	?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z ; icu_56::getSamplesFromString
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numSamples$[ebp], eax
; Line 381
	cmp	DWORD PTR _numSamples$[ebp], 0
	jne	SHORT $LN1@getSamples
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _rc$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z ; icu_56::getSamplesFromString
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numSamples$[ebp], eax
$LN1@getSamples:
; Line 384
	mov	eax, DWORD PTR _numSamples$[ebp]
$LN4@getSamples:
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getSamples@PluralRules@icu_56@@QAEHABVUnicodeString@2@PANHAAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::getSamples
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FixedDecimal::FixedDecimal
PUBLIC	__$ArrayPad$
EXTRN	__imp__floor:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$2
__ehfuncinfo$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv176 = -772						; size = 4
tv174 = -772						; size = 4
tv183 = -768						; size = 4
tv180 = -768						; size = 4
$T75724 = -760						; size = 64
$T75726 = -688						; size = 64
_sampleValue$75739 = -424				; size = 8
_n$75735 = -408						; size = 8
_t$75733 = -392						; size = 8
_scale$75732 = -376					; size = 8
_rangeHi$75729 = -360					; size = 8
_rangeLo$75728 = -344					; size = 8
_fixedHi$75727 = -328					; size = 48
_fixedLo$75725 = -272					; size = 48
_sampleValue$75720 = -216				; size = 8
_fixed$75719 = -200					; size = 48
_tildeIndex$75717 = -144				; size = 4
_$S2$75716 = -132					; size = 64
_sampleRange$75714 = -60				; size = 4
_sampleEndIdx$ = -48					; size = 4
_sampleStartIdx$ = -36					; size = 4
_sampleCount$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_samples$ = 8						; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z PROC ; icu_56::getSamplesFromString, COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 760				; 000002f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-772]
	mov	ecx, 190				; 000000beH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 307
	mov	DWORD PTR _sampleCount$[ebp], 0
; Line 308
	mov	DWORD PTR _sampleStartIdx$[ebp], 0
; Line 309
	mov	DWORD PTR _sampleEndIdx$[ebp], 0
; Line 313
	mov	DWORD PTR _sampleCount$[ebp], 0
$LN16@getSamples@2:
	mov	eax, DWORD PTR _sampleCount$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jge	$LN15@getSamples@2
	mov	esi, esp
	mov	ecx, DWORD PTR _samples$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _sampleStartIdx$[ebp], eax
	jge	$LN15@getSamples@2
; Line 314
	mov	esi, esp
	mov	eax, DWORD PTR _sampleStartIdx$[ebp]
	push	eax
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _samples$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sampleEndIdx$[ebp], eax
; Line 315
	cmp	DWORD PTR _sampleEndIdx$[ebp], -1
	jne	SHORT $LN14@getSamples@2
; Line 316
	mov	esi, esp
	mov	ecx, DWORD PTR _samples$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sampleEndIdx$[ebp], eax
$LN14@getSamples@2:
; Line 318
	mov	esi, esp
	mov	eax, DWORD PTR _sampleEndIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sampleStartIdx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S2$75716[ebp]
	push	edx
	mov	ecx, DWORD PTR _samples$[ebp]
	call	DWORD PTR __imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR _$S2$75716[ebp]
	mov	DWORD PTR _sampleRange$75714[ebp], eax
; Line 321
	mov	esi, esp
	push	126					; 0000007eH
	mov	ecx, DWORD PTR _sampleRange$75714[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tildeIndex$75717[ebp], eax
; Line 322
	cmp	DWORD PTR _tildeIndex$75717[ebp], 0
	jge	SHORT $LN13@getSamples@2
; Line 323
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sampleRange$75714[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fixed$75719[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FixedDecimal::FixedDecimal
; Line 324
	fld	QWORD PTR _fixed$75719[ebp]
	fstp	QWORD PTR _sampleValue$75720[ebp]
; Line 325
	cmp	DWORD PTR _fixed$75719[ebp+8], 0
	je	SHORT $LN11@getSamples@2
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _sampleValue$75720[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _sampleValue$75720[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN12@getSamples@2
$LN11@getSamples@2:
; Line 326
	mov	eax, DWORD PTR _sampleCount$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	fld	QWORD PTR _sampleValue$75720[ebp]
	fstp	QWORD PTR [ecx+eax*8]
	mov	edx, DWORD PTR _sampleCount$[ebp]
	add	edx, 1
	mov	DWORD PTR _sampleCount$[ebp], edx
$LN12@getSamples@2:
; Line 328
	jmp	$LN4@getSamples@2
$LN13@getSamples@2:
; Line 330
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _tildeIndex$75717[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR $T75724[ebp]
	push	edx
	mov	ecx, DWORD PTR _sampleRange$75714[ebp]
	call	DWORD PTR __imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv180[ebp], eax
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv174[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fixedLo$75725[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FixedDecimal::FixedDecimal
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T75724[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 331
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	ecx, DWORD PTR _tildeIndex$75717[ebp]
	add	ecx, 1
	push	ecx
	lea	edx, DWORD PTR $T75726[ebp]
	push	edx
	mov	ecx, DWORD PTR _sampleRange$75714[ebp]
	call	DWORD PTR __imp_?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv176[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fixedHi$75727[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::FixedDecimal::FixedDecimal
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T75726[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	fld	QWORD PTR _fixedLo$75725[ebp]
	fstp	QWORD PTR _rangeLo$75728[ebp]
; Line 333
	fld	QWORD PTR _fixedHi$75727[ebp]
	fstp	QWORD PTR _rangeHi$75729[ebp]
; Line 334
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@getSamples@2
; Line 335
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _$S2$75716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN15@getSamples@2
$LN9@getSamples@2:
; Line 337
	fld	QWORD PTR _rangeLo$75728[ebp]
	fcomp	QWORD PTR _rangeHi$75729[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN8@getSamples@2
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 339
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _$S2$75716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN15@getSamples@2
$LN8@getSamples@2:
; Line 345
	sub	esp, 8
	fld	QWORD PTR _rangeLo$75728[ebp]
	fstp	QWORD PTR [esp]
	call	?scaleForInt@icu_56@@YANN@Z		; icu_56::scaleForInt
	add	esp, 8
	fstp	QWORD PTR _scale$75732[ebp]
; Line 346
	sub	esp, 8
	fld	QWORD PTR _rangeHi$75729[ebp]
	fstp	QWORD PTR [esp]
	call	?scaleForInt@icu_56@@YANN@Z		; icu_56::scaleForInt
	add	esp, 8
	fstp	QWORD PTR _t$75733[ebp]
; Line 347
	fld	QWORD PTR _scale$75732[ebp]
	fcomp	QWORD PTR _t$75733[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN7@getSamples@2
; Line 348
	fld	QWORD PTR _t$75733[ebp]
	fstp	QWORD PTR _scale$75732[ebp]
$LN7@getSamples@2:
; Line 350
	fld	QWORD PTR _rangeLo$75728[ebp]
	fmul	QWORD PTR _scale$75732[ebp]
	fstp	QWORD PTR _rangeLo$75728[ebp]
; Line 351
	fld	QWORD PTR _rangeHi$75729[ebp]
	fmul	QWORD PTR _scale$75732[ebp]
	fstp	QWORD PTR _rangeHi$75729[ebp]
; Line 352
	fld	QWORD PTR _rangeLo$75728[ebp]
	fstp	QWORD PTR _n$75735[ebp]
	jmp	SHORT $LN6@getSamples@2
$LN5@getSamples@2:
	fld	QWORD PTR _n$75735[ebp]
	fadd	QWORD PTR __real@3ff0000000000000
	fstp	QWORD PTR _n$75735[ebp]
$LN6@getSamples@2:
	fld	QWORD PTR _rangeHi$75729[ebp]
	fcomp	QWORD PTR _n$75735[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN4@getSamples@2
; Line 358
	fld	QWORD PTR _n$75735[ebp]
	fdiv	QWORD PTR _scale$75732[ebp]
	fstp	QWORD PTR _sampleValue$75739[ebp]
; Line 359
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _sampleValue$75739[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _sampleValue$75739[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@getSamples@2
	cmp	DWORD PTR _fixedLo$75725[ebp+8], 0
	jg	SHORT $LN3@getSamples@2
$LN2@getSamples@2:
; Line 360
	mov	eax, DWORD PTR _sampleCount$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	fld	QWORD PTR _sampleValue$75739[ebp]
	fstp	QWORD PTR [ecx+eax*8]
	mov	edx, DWORD PTR _sampleCount$[ebp]
	add	edx, 1
	mov	DWORD PTR _sampleCount$[ebp], edx
$LN3@getSamples@2:
; Line 362
	mov	eax, DWORD PTR _sampleCount$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jl	SHORT $LN1@getSamples@2
; Line 363
	jmp	SHORT $LN4@getSamples@2
$LN1@getSamples@2:
; Line 365
	jmp	$LN5@getSamples@2
$LN4@getSamples@2:
; Line 367
	mov	eax, DWORD PTR _sampleEndIdx$[ebp]
	add	eax, 1
	mov	DWORD PTR _sampleStartIdx$[ebp], eax
; Line 368
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _$S2$75716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@getSamples@2
$LN15@getSamples@2:
; Line 369
	mov	eax, DWORD PTR _sampleCount$[ebp]
; Line 370
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@getSamples@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 772				; 00000304H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN28@getSamples@2:
	DD	4
	DD	$LN27@getSamples@2
$LN27@getSamples@2:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN22@getSamples@2
	DD	-200					; ffffff38H
	DD	48					; 00000030H
	DD	$LN23@getSamples@2
	DD	-272					; fffffef0H
	DD	48					; 00000030H
	DD	$LN24@getSamples@2
	DD	-328					; fffffeb8H
	DD	48					; 00000030H
	DD	$LN25@getSamples@2
$LN25@getSamples@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	105					; 00000069H
	DB	0
$LN24@getSamples@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	0
$LN23@getSamples@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN22@getSamples@2:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _$S2$75716[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T75724[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T75726[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-776]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getSamplesFromString@icu_56@@YAHABVUnicodeString@1@PANHAAW4UErrorCode@@@Z ENDP ; icu_56::getSamplesFromString
PUBLIC	__real@4024000000000000
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?scaleForInt@icu_56@@YANN@Z
_TEXT	SEGMENT
_scale$ = -12						; size = 8
_d$ = 8							; size = 8
?scaleForInt@icu_56@@YANN@Z PROC			; icu_56::scaleForInt, COMDAT
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 296
	fld1
	fstp	QWORD PTR _scale$[ebp]
$LN2@scaleForIn:
; Line 297
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _d$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@scaleForIn
; Line 298
	fld	QWORD PTR _d$[ebp]
	fmul	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR _d$[ebp]
; Line 299
	fld	QWORD PTR _scale$[ebp]
	fmul	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR _scale$[ebp]
; Line 300
	jmp	SHORT $LN2@scaleForIn
$LN1@scaleForIn:
; Line 301
	fld	QWORD PTR _scale$[ebp]
; Line 302
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?scaleForInt@icu_56@@YANN@Z ENDP			; icu_56::scaleForInt
_TEXT	ENDS
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_rc$ = -20						; size = 4
_this$ = -8						; size = 4
_keyword$ = 8						; size = 4
?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z PROC ; icu_56::PluralRules::rulesForKeyword, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _rc$[ebp], ecx
	jmp	SHORT $LN4@rulesForKe
$LN3@rulesForKe:
	mov	eax, DWORD PTR _rc$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _rc$[ebp], ecx
$LN4@rulesForKe:
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@rulesForKe
; Line 391
	mov	esi, esp
	mov	eax, DWORD PTR _keyword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rc$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@rulesForKe
; Line 392
	jmp	SHORT $LN2@rulesForKe
$LN1@rulesForKe:
; Line 394
	jmp	SHORT $LN3@rulesForKe
$LN2@rulesForKe:
; Line 395
	mov	eax, DWORD PTR _rc$[ebp]
; Line 396
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z ENDP ; icu_56::PluralRules::rulesForKeyword
_TEXT	ENDS
PUBLIC	?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::PluralRules::isKeyword
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keyword$ = 8						; size = 4
?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::PluralRules::isKeyword, COMDAT
; _this$ = ecx
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 401
	mov	esi, esp
	push	5
	push	OFFSET _PLURAL_KEYWORD_OTHER
	mov	ecx, DWORD PTR _keyword$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@isKeyword
; Line 402
	mov	al, 1
	jmp	SHORT $LN2@isKeyword
$LN1@isKeyword:
; Line 404
	mov	eax, DWORD PTR _keyword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rulesForKeyword@PluralRules@icu_56@@ABEPAVRuleChain@2@ABVUnicodeString@2@@Z ; icu_56::PluralRules::rulesForKeyword
	test	eax, eax
	setne	al
$LN2@isKeyword:
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::PluralRules::isKeyword
_TEXT	ENDS
PUBLIC	?getKeywordOther@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ ; icu_56::PluralRules::getKeywordOther
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKeywordOther@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T84806 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getKeywordOther@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ PROC ; icu_56::PluralRules::getKeywordOther, COMDAT
; _this$ = ecx
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84806[ebp], 0
; Line 409
	mov	esi, esp
	push	5
	push	OFFSET _PLURAL_KEYWORD_OTHER
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T84806[ebp]
	or	eax, 1
	mov	DWORD PTR $T84806[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getKeywordOther@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ ENDP ; icu_56::PluralRules::getKeywordOther
_TEXT	ENDS
PUBLIC	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
PUBLIC	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
PUBLIC	??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ; icu_56::LocalPointer<icu_56::StringEnumeration>::LocalPointer<icu_56::StringEnumeration>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??8PluralRules@icu_56@@UBECABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??8PluralRules@icu_56@@UBECABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??8PluralRules@icu_56@@UBECABV01@@Z$1
__ehfuncinfo$??8PluralRules@icu_56@@UBECABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??8PluralRules@icu_56@@UBECABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??8PluralRules@icu_56@@UBECABV01@@Z
_TEXT	SEGMENT
tv134 = -344						; size = 4
tv187 = -340						; size = 4
tv176 = -340						; size = 4
tv158 = -340						; size = 4
tv147 = -340						; size = 4
tv90 = -340						; size = 4
$T84810 = -329						; size = 1
$T84811 = -317						; size = 1
$T84812 = -305						; size = 1
$T84813 = -293						; size = 1
$T84814 = -281						; size = 1
$T84815 = -269						; size = 1
_otherKeywordList$ = -68				; size = 4
_myKeywordList$ = -56					; size = 4
_status$ = -44						; size = 4
_ptrKeyword$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??8PluralRules@icu_56@@UBECABV01@@Z PROC		; icu_56::PluralRules::operator==, COMDAT
; _this$ = ecx
; Line 413
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??8PluralRules@icu_56@@UBECABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 415
	mov	DWORD PTR _status$[ebp], 0
; Line 417
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN10@operator@3
; Line 418
	mov	al, 1
	jmp	$LN11@operator@3
$LN10@operator@3:
; Line 420
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getKeywords
	push	eax
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ; icu_56::LocalPointer<icu_56::StringEnumeration>::LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 421
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?getKeywords@PluralRules@icu_56@@QBEPAVStringEnumeration@2@AAW4UErrorCode@@@Z ; icu_56::PluralRules::getKeywords
	push	eax
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ; icu_56::LocalPointer<icu_56::StringEnumeration>::LocalPointer<icu_56::StringEnumeration>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 422
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@operator@3
; Line 423
	mov	BYTE PTR $T84810[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84810[ebp]
	jmp	$LN11@operator@3
$LN9@operator@3:
; Line 426
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv90[ebp], eax
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv134[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv134[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	eax, esi
	je	SHORT $LN8@operator@3
; Line 427
	mov	BYTE PTR $T84811[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84811[ebp]
	jmp	$LN11@operator@3
$LN8@operator@3:
; Line 429
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv147[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@operator@3:
; Line 430
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv158[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv158[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv158[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ptrKeyword$[ebp], eax
	cmp	DWORD PTR _ptrKeyword$[ebp], 0
	je	SHORT $LN6@operator@3
; Line 431
	mov	eax, DWORD PTR _ptrKeyword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::PluralRules::isKeyword
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN5@operator@3
; Line 432
	mov	BYTE PTR $T84812[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84812[ebp]
	jmp	$LN11@operator@3
$LN5@operator@3:
; Line 434
	jmp	SHORT $LN7@operator@3
$LN6@operator@3:
; Line 435
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv176[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv176[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@operator@3:
; Line 436
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
	mov	DWORD PTR tv187[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv187[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv187[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ptrKeyword$[ebp], eax
	cmp	DWORD PTR _ptrKeyword$[ebp], 0
	je	SHORT $LN3@operator@3
; Line 437
	mov	eax, DWORD PTR _ptrKeyword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isKeyword@PluralRules@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::PluralRules::isKeyword
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@operator@3
; Line 438
	mov	BYTE PTR $T84813[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84813[ebp]
	jmp	SHORT $LN11@operator@3
$LN2@operator@3:
; Line 440
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
; Line 441
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@3
; Line 442
	mov	BYTE PTR $T84814[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84814[ebp]
	jmp	SHORT $LN11@operator@3
$LN1@operator@3:
; Line 445
	mov	BYTE PTR $T84815[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	call	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
	mov	al, BYTE PTR $T84815[ebp]
$LN11@operator@3:
; Line 446
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN20@operator@3:
	DD	3
	DD	$LN19@operator@3
$LN19@operator@3:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN15@operator@3
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN16@operator@3
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN17@operator@3
$LN17@operator@3:
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN16@operator@3:
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN15@operator@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??8PluralRules@icu_56@@UBECABV01@@Z$0:
	lea	ecx, DWORD PTR _myKeywordList$[ebp]
	jmp	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
__unwindfunclet$??8PluralRules@icu_56@@UBECABV01@@Z$1:
	lea	ecx, DWORD PTR _otherKeywordList$[ebp]
	jmp	??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
__ehhandler$??8PluralRules@icu_56@@UBECABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??8PluralRules@icu_56@@UBECABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??8PluralRules@icu_56@@UBECABV01@@Z ENDP		; icu_56::PluralRules::operator==
PUBLIC	??0RuleChain@icu_56@@QAE@XZ			; icu_56::RuleChain::RuleChain
PUBLIC	??_C@_1FC@JNCDFLPD@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz@ ; `string'
PUBLIC	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
PUBLIC	??_SUVector32@icu_56@@6B@			; icu_56::UVector32::`local vftable'
PUBLIC	??_C@_1EC@NMMPIMDG@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DM@NLCHHDIN@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@ ; `string'
PUBLIC	?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ ; icu_56::OrConstraint::add
PUBLIC	??0OrConstraint@icu_56@@QAE@XZ			; icu_56::OrConstraint::OrConstraint
PUBLIC	??_C@_1CE@GJLPBHC@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAh?$AAa?$AAi?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?add@AndConstraint@icu_56@@QAEPAV12@XZ		; icu_56::AndConstraint::add
PUBLIC	??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?checkSyntax@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::checkSyntax
PUBLIC	?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::getNextToken
PUBLIC	??_C@_1BO@FEOELIJ@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::PluralRuleParser::parse'::`2'::__LINE__Var
PUBLIC	??_R4UVector32@icu_56@@6B@			; icu_56::UVector32::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector32@icu_56@@@8			; icu_56::UVector32 `RTTI Type Descriptor'
PUBLIC	??_R3UVector32@icu_56@@8			; icu_56::UVector32::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector32@icu_56@@8			; icu_56::UVector32::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector32@icu_56@@8		; icu_56::UVector32::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?size@UVector32@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z:PROC
EXTRN	__imp_?elementAti@UVector32@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp___wassert:PROC
EXTRN	??_EUVector32@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector32::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector32::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UVector32@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector32@icu_56@@8 DD FLAT:??_R0?AVUVector32@icu_56@@@8 ; icu_56::UVector32::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector32@icu_56@@8
rdata$r	SEGMENT
??_R2UVector32@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector32@icu_56@@8 ; icu_56::UVector32::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector32@icu_56@@8
rdata$r	SEGMENT
??_R3UVector32@icu_56@@8 DD 00H				; icu_56::UVector32::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector32@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector32@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector32 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector32@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector32@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector32@icu_56@@6B@ DD 00H			; icu_56::UVector32::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector32@icu_56@@@8
	DD	FLAT:??_R3UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_1FC@JNCDFLPD@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz@
CONST	SEGMENT
??_C@_1FC@JNCDFLPD@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'A', 00H, 'n', 00H, 'd', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, '-', 00H, '>', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '2'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_SUVector32@icu_56@@6B@
CONST	SEGMENT
??_SUVector32@icu_56@@6B@ DD FLAT:??_R4UVector32@icu_56@@6B@ ; icu_56::UVector32::`local vftable'
	DD	FLAT:??_EUVector32@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT ??_C@_1EC@NMMPIMDG@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1EC@NMMPIMDG@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'A', 00H, 'n', 00H, 'd', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@NLCHHDIN@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@NLCHHDIN@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'A', 00H, 'n', 00H, 'd', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '-', 00H, '1', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GJLPBHC@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAh?$AAa?$AAi?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@GJLPBHC@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAh?$AAa?$AAi?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'C', 00H, 'h', 00H, 'a', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'A', 00H, 'n', 00H, 'd', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@FEOELIJ@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@FEOELIJ@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'r'
	DB	00H, 'u', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'x', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'p', 00H
	DB	'l', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'u', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA DD 01c3H ; `icu_56::PluralRuleParser::parse'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$3
__ehfuncinfo$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv396 = -364						; size = 4
tv366 = -364						; size = 4
tv212 = -364						; size = 4
tv158 = -364						; size = 4
tv94 = -364						; size = 4
$T84834 = -356						; size = 4
$T84835 = -344						; size = 4
$T84843 = -332						; size = 4
$T84844 = -320						; size = 4
$T84851 = -308						; size = 4
$T84852 = -296						; size = 4
$T84855 = -284						; size = 4
$T84856 = -272						; size = 4
_orNode$75969 = -68					; size = 4
_insertAfter$75965 = -56				; size = 4
_newChain$75957 = -44					; size = 4
_orNode$75915 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ruleData$ = 8						; size = 4
_prules$ = 12						; size = 4
_status$ = 16						; size = 4
?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRuleParser::parse, COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 452
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN48@parse
; Line 453
	jmp	$LN49@parse
$LN48@parse:
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN51@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@FEOELIJ@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@parse:
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ruleData$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN47@parse:
; Line 458
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jge	$LN49@parse
; Line 459
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::getNextToken
; Line 460
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN45@parse
; Line 461
	jmp	$LN49@parse
$LN45@parse:
; Line 463
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkSyntax@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::checkSyntax
; Line 464
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@parse
; Line 465
	jmp	$LN49@parse
$LN44@parse:
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR tv94[ebp], ecx
	mov	edx, DWORD PTR tv94[ebp]
	sub	edx, 1
	mov	DWORD PTR tv94[ebp], edx
	cmp	DWORD PTR tv94[ebp], 26			; 0000001aH
	ja	$LN42@parse
	mov	eax, DWORD PTR tv94[ebp]
	movzx	ecx, BYTE PTR $LN77@parse[eax]
	jmp	DWORD PTR $LN79@parse[ecx*4]
$LN41@parse:
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN52@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 18					; 00000012H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@parse:
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	?add@AndConstraint@icu_56@@QAEPAV12@XZ	; icu_56::AndConstraint::add
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 471
	jmp	$LN42@parse
$LN40@parse:
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 0
	jne	SHORT $LN53@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 23					; 00000017H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CE@GJLPBHC@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAh?$AAa?$AAi?$AAn?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@parse:
; Line 475
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR _orNode$75915[ebp], edx
$LN39@parse:
; Line 476
	mov	eax, DWORD PTR _orNode$75915[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN38@parse
; Line 477
	mov	eax, DWORD PTR _orNode$75915[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _orNode$75915[ebp], ecx
; Line 478
	jmp	SHORT $LN39@parse
$LN38@parse:
; Line 479
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84835[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84835[ebp], 0
	je	SHORT $LN54@parse
	mov	ecx, DWORD PTR $T84835[ebp]
	call	??0OrConstraint@icu_56@@QAE@XZ		; icu_56::OrConstraint::OrConstraint
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $LN55@parse
$LN54@parse:
	mov	DWORD PTR tv158[ebp], 0
$LN55@parse:
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR $T84834[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _orNode$75915[ebp]
	mov	edx, DWORD PTR $T84834[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 480
	mov	eax, DWORD PTR _orNode$75915[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _orNode$75915[ebp], ecx
; Line 481
	mov	eax, DWORD PTR _orNode$75915[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 482
	mov	ecx, DWORD PTR _orNode$75915[ebp]
	call	?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ ; icu_56::OrConstraint::add
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 484
	jmp	$LN42@parse
$LN37@parse:
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN56@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 35					; 00000023H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN56@parse:
; Line 487
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+12], -1
	je	SHORT $LN57@parse
	mov	edx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 36					; 00000024H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DM@NLCHHDIN@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN57@parse:
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN58@parse
	mov	edx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 37					; 00000025H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EC@NMMPIMDG@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN58@parse:
; Line 489
	jmp	$LN42@parse
$LN36@parse:
; Line 491
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN59@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 40					; 00000028H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN59@parse:
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	BYTE PTR [ecx+20], 1
; Line 493
	jmp	$LN42@parse
$LN35@parse:
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	BYTE PTR [ecx+20], 1
$LN34@parse:
; Line 500
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN60@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 49					; 00000031H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN60@parse:
; Line 501
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84844[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84844[ebp], 0
	je	SHORT $LN61@parse
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84844[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84844[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector32@icu_56@@6B@
	mov	edx, DWORD PTR $T84844[ebp]
	mov	DWORD PTR tv212[ebp], edx
	jmp	SHORT $LN62@parse
$LN61@parse:
	mov	DWORD PTR tv212[ebp], 0
$LN62@parse:
	mov	eax, DWORD PTR tv212[ebp]
	mov	DWORD PTR $T84843[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR $T84843[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 502
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 503
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 504
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 505
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 1
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR [ecx+12], 2147483647		; 7fffffffH
; Line 507
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 19			; 00000013H
	setne	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	BYTE PTR [eax+21], cl
; Line 508
	jmp	$LN42@parse
$LN33@parse:
; Line 510
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN63@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 59					; 0000003bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN63@parse:
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN32@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+8], -1
	jne	SHORT $LN32@parse
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [edx+8], eax
; Line 515
	jmp	$LN31@parse
$LN32@parse:
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN30@parse
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [edx+12], eax
; Line 519
	jmp	$LN31@parse
$LN30@parse:
; Line 521
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN28@parse
; Line 522
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 523
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 525
	jmp	$LN31@parse
$LN28@parse:
; Line 526
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ; icu_56::PluralRuleParser::getNumberValue
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?setElementAt@UVector32@icu_56@@QAEXHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 528
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jle	SHORT $LN31@parse
; Line 532
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
; Line 533
	jmp	$LN42@parse
$LN31@parse:
; Line 538
	jmp	$LN42@parse
$LN25@parse:
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN23@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN24@parse
$LN23@parse:
; Line 543
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
; Line 544
	jmp	$LN42@parse
$LN24@parse:
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 2
	jge	SHORT $LN64@parse
	mov	edx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	edx, 95					; 0000005fH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FC@JNCDFLPD@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAr?$AAa?$AAn?$AAg?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAs?$AAi?$AAz@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN64@parse:
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], eax
; Line 548
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 549
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	esi, esp
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], eax
; Line 550
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	ecx, DWORD PTR [edx+16]
	call	DWORD PTR __imp_?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 551
	jmp	$LN42@parse
$LN22@parse:
; Line 553
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN65@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 102				; 00000066H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN65@parse:
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR [ecx+4], 1
; Line 555
	jmp	$LN42@parse
$LN21@parse:
; Line 561
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN66@parse
	mov	ecx, DWORD PTR ?__LINE__Var@?1??parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@3@PAVPluralRules@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 110				; 0000006eH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@FNOOBBBB@?$AAc?$AAu?$AAr?$AAA?$AAn?$AAd?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN66@parse:
; Line 562
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+24], eax
; Line 563
	jmp	$LN42@parse
$LN20@parse:
; Line 566
	mov	esi, esp
	push	208					; 000000d0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84852[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T84852[ebp], 0
	je	SHORT $LN67@parse
	mov	ecx, DWORD PTR $T84852[ebp]
	call	??0RuleChain@icu_56@@QAE@XZ		; icu_56::RuleChain::RuleChain
	mov	DWORD PTR tv366[ebp], eax
	jmp	SHORT $LN68@parse
$LN67@parse:
	mov	DWORD PTR tv366[ebp], 0
$LN68@parse:
	mov	eax, DWORD PTR tv366[ebp]
	mov	DWORD PTR $T84851[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T84851[ebp]
	mov	DWORD PTR _newChain$75957[ebp], ecx
; Line 567
	cmp	DWORD PTR _newChain$75957[ebp], 0
	jne	SHORT $LN19@parse
; Line 568
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 569
	jmp	$LN42@parse
$LN19@parse:
; Line 571
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _newChain$75957[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 572
	mov	eax, DWORD PTR _prules$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN18@parse
; Line 573
	mov	eax, DWORD PTR _prules$[ebp]
	mov	ecx, DWORD PTR _newChain$75957[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 574
	jmp	SHORT $LN17@parse
$LN18@parse:
; Line 577
	mov	eax, DWORD PTR _prules$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _insertAfter$75965[ebp], ecx
$LN16@parse:
; Line 579
	mov	eax, DWORD PTR _insertAfter$75965[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN15@parse
	mov	esi, esp
	push	5
	push	OFFSET _PLURAL_KEYWORD_OTHER
	mov	eax, DWORD PTR _insertAfter$75965[ebp]
	mov	ecx, DWORD PTR [eax+68]
	add	ecx, 4
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@parse
; Line 580
	mov	eax, DWORD PTR _insertAfter$75965[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _insertAfter$75965[ebp], ecx
; Line 581
	jmp	SHORT $LN16@parse
$LN15@parse:
; Line 582
	mov	eax, DWORD PTR _newChain$75957[ebp]
	mov	ecx, DWORD PTR _insertAfter$75965[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
; Line 583
	mov	eax, DWORD PTR _insertAfter$75965[ebp]
	mov	ecx, DWORD PTR _newChain$75957[ebp]
	mov	DWORD PTR [eax+68], ecx
$LN17@parse:
; Line 585
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84856[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T84856[ebp], 0
	je	SHORT $LN69@parse
	mov	ecx, DWORD PTR $T84856[ebp]
	call	??0OrConstraint@icu_56@@QAE@XZ		; icu_56::OrConstraint::OrConstraint
	mov	DWORD PTR tv396[ebp], eax
	jmp	SHORT $LN70@parse
$LN69@parse:
	mov	DWORD PTR tv396[ebp], 0
$LN70@parse:
	mov	eax, DWORD PTR tv396[ebp]
	mov	DWORD PTR $T84855[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T84855[ebp]
	mov	DWORD PTR _orNode$75969[ebp], ecx
; Line 586
	mov	eax, DWORD PTR _newChain$75957[ebp]
	mov	ecx, DWORD PTR _orNode$75969[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 587
	mov	ecx, DWORD PTR _orNode$75969[ebp]
	call	?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ ; icu_56::OrConstraint::add
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newChain$75957[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 590
	jmp	$LN42@parse
$LN13@parse:
; Line 594
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::getNextToken
; Line 595
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN10@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 3
	je	SHORT $LN10@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 28			; 0000001cH
	je	SHORT $LN10@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 6
	jne	SHORT $LN11@parse
$LN10@parse:
; Line 596
	jmp	SHORT $LN12@parse
$LN11@parse:
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 9
	jne	SHORT $LN9@parse
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	BYTE PTR [ecx+205], 1
; Line 600
	jmp	SHORT $LN13@parse
$LN9@parse:
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+88]
	add	ecx, 140				; 0000008cH
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 603
	jmp	SHORT $LN13@parse
$LN12@parse:
; Line 604
	jmp	SHORT $LN42@parse
$LN7@parse:
; Line 608
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::PluralRuleParser::getNextToken
; Line 609
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN4@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 3
	je	SHORT $LN4@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 28			; 0000001cH
	je	SHORT $LN4@parse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 6
	jne	SHORT $LN5@parse
$LN4@parse:
; Line 610
	jmp	SHORT $LN42@parse
$LN5@parse:
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 9
	jne	SHORT $LN3@parse
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	BYTE PTR [ecx+204], 1
; Line 614
	jmp	SHORT $LN7@parse
$LN3@parse:
; Line 616
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+88]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 617
	jmp	SHORT $LN7@parse
$LN42@parse:
; Line 623
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+80], edx
; Line 624
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parse
; Line 625
	jmp	SHORT $LN49@parse
$LN1@parse:
; Line 627
	jmp	$LN47@parse
$LN49@parse:
; Line 628
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN79@parse:
	DD	$LN33@parse
	DD	$LN25@parse
	DD	$LN20@parse
	DD	$LN41@parse
	DD	$LN40@parse
	DD	$LN22@parse
	DD	$LN36@parse
	DD	$LN34@parse
	DD	$LN35@parse
	DD	$LN37@parse
	DD	$LN21@parse
	DD	$LN7@parse
	DD	$LN13@parse
	DD	$LN42@parse
$LN77@parse:
	DB	0
	DB	1
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	7
	DB	8
	DB	13					; 0000000dH
	DB	7
	DB	9
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84835[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T84844[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T84852[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T84856[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@PluralRuleParser@icu_56@@QAEXABVUnicodeString@2@PAVPluralRules@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRuleParser::parse
EXTRN	__imp_??1UVector32@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector32@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector32@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector32::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector32@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector32::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString
PUBLIC	??_C@_05CBLPGGM@rules?$AA@			; `string'
PUBLIC	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
PUBLIC	??_C@_0BB@PDFKKECI@locales_ordinals?$AA@	; `string'
PUBLIC	??_C@_07HBKLOBCC@locales?$AA@			; `string'
PUBLIC	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
PUBLIC	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
PUBLIC	??_C@_07GECDDAFN@plurals?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	_ures_getSize_56:PROC
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_uloc_getParent_56:PROC
EXTRN	_strcpy:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_openDirect_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT ??_C@_05CBLPGGM@rules?$AA@
CONST	SEGMENT
??_C@_05CBLPGGM@rules?$AA@ DB 'rules', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PDFKKECI@locales_ordinals?$AA@
CONST	SEGMENT
??_C@_0BB@PDFKKECI@locales_ordinals?$AA@ DB 'locales_ordinals', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HBKLOBCC@locales?$AA@
CONST	SEGMENT
??_C@_07HBKLOBCC@locales?$AA@ DB 'locales', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GECDDAFN@plurals?$AA@
CONST	SEGMENT
??_C@_07GECDDAFN@plurals?$AA@ DB 'plurals', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$8
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -1112						; size = 4
$T84880 = -1104						; size = 4
_uKey$76045 = -900					; size = 64
_rules$76043 = -828					; size = 64
_i$76039 = -756						; size = 4
_key$ = -744						; size = 4
_result$ = -732						; size = 64
_numberKeys$ = -660					; size = 4
_setRes$ = -648						; size = 4
_ruleRes$ = -636					; size = 4
_setKey$ = -624						; size = 256
_curLocaleName$76024 = -360				; size = 4
_parentLocaleName$76023 = -348				; size = 157
_status$76022 = -180					; size = 4
_s$ = -168						; size = 4
_curLocaleName$ = -156					; size = 4
_resLen$ = -144						; size = 4
_locRes$ = -132						; size = 4
_typeKey$ = -120					; size = 4
_rb$ = -108						; size = 4
_emptyStr$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_locale$ = 12						; size = 4
_type$ = 16						; size = 4
_errCode$ = 20						; size = 4
?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z PROC ; icu_56::PluralRules::getRuleFromResource, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1100				; 0000044cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1112]
	mov	ecx, 275				; 00000113H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84880[ebp], 0
; Line 632
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 634
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@getRuleFro
; Line 635
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN18@getRuleFro:
; Line 637
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	push	OFFSET ??_C@_07GECDDAFN@plurals?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 638
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@getRuleFro
; Line 639
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN17@getRuleFro:
; Line 642
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 0
	je	SHORT $LN14@getRuleFro
	cmp	DWORD PTR tv91[ebp], 1
	je	SHORT $LN13@getRuleFro
	jmp	SHORT $LN12@getRuleFro
$LN14@getRuleFro:
; Line 644
	mov	DWORD PTR _typeKey$[ebp], OFFSET ??_C@_07HBKLOBCC@locales?$AA@
; Line 645
	jmp	SHORT $LN15@getRuleFro
$LN13@getRuleFro:
; Line 647
	mov	DWORD PTR _typeKey$[ebp], OFFSET ??_C@_0BB@PDFKKECI@locales_ordinals?$AA@
; Line 648
	jmp	SHORT $LN15@getRuleFro
$LN12@getRuleFro:
; Line 651
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 652
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN15@getRuleFro:
; Line 654
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _typeKey$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rb$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 655
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@getRuleFro
; Line 656
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN11@getRuleFro:
; Line 658
	mov	DWORD PTR _resLen$[ebp], 0
; Line 659
	mov	esi, esp
	mov	ecx, DWORD PTR _locale$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _curLocaleName$[ebp], eax
; Line 660
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curLocaleName$[ebp]
	push	edx
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 662
	cmp	DWORD PTR _s$[ebp], 0
	jne	$LN10@getRuleFro
; Line 664
	mov	DWORD PTR _status$76022[ebp], 0
; Line 666
	mov	esi, esp
	mov	ecx, DWORD PTR _locale$[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _curLocaleName$76024[ebp], eax
; Line 667
	mov	eax, DWORD PTR _curLocaleName$76024[ebp]
	push	eax
	lea	ecx, DWORD PTR _parentLocaleName$76023[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN9@getRuleFro:
; Line 670
	lea	eax, DWORD PTR _status$76022[ebp]
	push	eax
	push	157					; 0000009dH
	lea	ecx, DWORD PTR _parentLocaleName$76023[ebp]
	push	ecx
	lea	edx, DWORD PTR _parentLocaleName$76023[ebp]
	push	edx
	call	_uloc_getParent_56
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN10@getRuleFro
; Line 671
	mov	DWORD PTR _resLen$[ebp], 0
; Line 672
	lea	eax, DWORD PTR _status$76022[ebp]
	push	eax
	lea	ecx, DWORD PTR _resLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parentLocaleName$76023[ebp]
	push	edx
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 673
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN7@getRuleFro
; Line 674
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 675
	jmp	SHORT $LN10@getRuleFro
$LN7@getRuleFro:
; Line 677
	mov	DWORD PTR _status$76022[ebp], 0
; Line 678
	jmp	SHORT $LN9@getRuleFro
$LN10@getRuleFro:
; Line 680
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN6@getRuleFro
; Line 681
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN6@getRuleFro:
; Line 685
	mov	eax, DWORD PTR _resLen$[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _setKey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 688
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_05CBLPGGM@rules?$AA@
	lea	ecx, DWORD PTR _rb$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 689
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getRuleFro
; Line 690
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN5@getRuleFro:
; Line 692
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _setKey$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _setRes$[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 693
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getRuleFro
; Line 694
	mov	esi, esp
	lea	eax, DWORD PTR _emptyStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _setRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@getRuleFro
$LN4@getRuleFro:
; Line 697
	lea	ecx, DWORD PTR _setRes$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _numberKeys$[ebp], eax
; Line 698
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 699
	mov	DWORD PTR _key$[ebp], 0
; Line 700
	mov	DWORD PTR _i$76039[ebp], 0
	jmp	SHORT $LN3@getRuleFro
$LN2@getRuleFro:
	mov	eax, DWORD PTR _i$76039[ebp]
	add	eax, 1
	mov	DWORD PTR _i$76039[ebp], eax
$LN3@getRuleFro:
	mov	eax, DWORD PTR _i$76039[ebp]
	cmp	eax, DWORD PTR _numberKeys$[ebp]
	jge	$LN1@getRuleFro
; Line 701
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _setRes$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	lea	edx, DWORD PTR _rules$76043[ebp]
	push	edx
	call	?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ; icu_56::ures_getNextUnicodeString
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 702
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uKey$76045[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 703
	mov	esi, esp
	lea	eax, DWORD PTR _uKey$76045[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 704
	mov	esi, esp
	push	58					; 0000003aH
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 705
	mov	esi, esp
	lea	eax, DWORD PTR _rules$76043[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 706
	mov	esi, esp
	push	59					; 0000003bH
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 707
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	esi, esp
	lea	ecx, DWORD PTR _uKey$76045[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$76043[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN2@getRuleFro
$LN1@getRuleFro:
; Line 708
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84880[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _setRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _locRes$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@getRuleFro:
; Line 709
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@getRuleFro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1112				; 00000458H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN46@getRuleFro:
	DD	13					; 0000000dH
	DD	$LN45@getRuleFro
$LN45@getRuleFro:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN31@getRuleFro
	DD	-108					; ffffff94H
	DD	4
	DD	$LN32@getRuleFro
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN33@getRuleFro
	DD	-144					; ffffff70H
	DD	4
	DD	$LN34@getRuleFro
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN35@getRuleFro
	DD	-348					; fffffea4H
	DD	157					; 0000009dH
	DD	$LN36@getRuleFro
	DD	-624					; fffffd90H
	DD	256					; 00000100H
	DD	$LN37@getRuleFro
	DD	-636					; fffffd84H
	DD	4
	DD	$LN38@getRuleFro
	DD	-648					; fffffd78H
	DD	4
	DD	$LN39@getRuleFro
	DD	-732					; fffffd24H
	DD	64					; 00000040H
	DD	$LN40@getRuleFro
	DD	-744					; fffffd18H
	DD	4
	DD	$LN41@getRuleFro
	DD	-828					; fffffcc4H
	DD	64					; 00000040H
	DD	$LN42@getRuleFro
	DD	-900					; fffffc7cH
	DD	64					; 00000040H
	DD	$LN43@getRuleFro
$LN43@getRuleFro:
	DB	117					; 00000075H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN42@getRuleFro:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN41@getRuleFro:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN40@getRuleFro:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN39@getRuleFro:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN38@getRuleFro:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN37@getRuleFro:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN36@getRuleFro:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN35@getRuleFro:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN34@getRuleFro:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN33@getRuleFro:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN32@getRuleFro:
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	0
$LN31@getRuleFro:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T84880[ebp]
	and	eax, 1
	je	$LN23@getRuleFro
	and	DWORD PTR $T84880[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN23@getRuleFro:
	ret	0
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _rb$[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _locRes$[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$4:
	lea	ecx, DWORD PTR _ruleRes$[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR _setRes$[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$76043[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _uKey$76045[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRuleFromResource@PluralRules@icu_56@@AAE?AVUnicodeString@2@ABVLocale@2@W4UPluralType@@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralRules::getRuleFromResource
PUBLIC	??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z PROC ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\ures.h
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ENDP ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
EXTRN	_ures_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1LocalUResourceBundlePointer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ PROC	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer, COMDAT
; _this$ = ecx
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ures_close_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ENDP	; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
_TEXT	ENDS
EXTRN	_ures_getNextString_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T84919 = -224						; size = 4
_r$ = -20						; size = 4
_len$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_resB$ = 12						; size = 4
_key$ = 16						; size = 4
_status$ = 20						; size = 4
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z PROC ; icu_56::ures_getNextUnicodeString, COMDAT
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	DWORD PTR $T84919[ebp], 0
; Line 826
	mov	DWORD PTR _len$[ebp], 0
; Line 827
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _resB$[ebp]
	push	eax
	call	_ures_getNextString_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 828
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T84919[ebp]
	or	edx, 1
	mov	DWORD PTR $T84919[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 829
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ures_getNe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@ures_getNe:
	DD	1
	DD	$LN6@ures_getNe
$LN6@ures_getNe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@ures_getNe
$LN5@ures_getNe:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?ures_getNextUnicodeString@icu_56@@YA?AVUnicodeString@1@PAUUResourceBundle@@PAPBDPAW4UErrorCode@@@Z ENDP ; icu_56::ures_getNextUnicodeString
_TEXT	ENDS
PUBLIC	?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z ; icu_56::RuleChain::dumpRules
PUBLIC	__$ArrayPad$
PUBLIC	?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ ; icu_56::PluralRules::getRules
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\plurrule.cpp
xdata$x	SEGMENT
__unwindtable$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ$0
__ehfuncinfo$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T84929 = -300						; size = 4
_rules$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ PROC ; icu_56::PluralRules::getRules, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T84929[ebp], 0
; Line 714
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 715
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@getRules
; Line 716
	lea	eax, DWORD PTR _rules$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z ; icu_56::RuleChain::dumpRules
$LN1@getRules:
; Line 718
	mov	esi, esp
	lea	eax, DWORD PTR _rules$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84929[ebp]
	or	ecx, 1
	mov	DWORD PTR $T84929[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 719
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@getRules:
	DD	1
	DD	$LN9@getRules
$LN9@getRules:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN7@getRules
$LN7@getRules:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ$1:
	mov	eax, DWORD PTR $T84929[ebp]
	and	eax, 1
	je	$LN6@getRules
	and	DWORD PTR $T84929[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN6@getRules:
	ret	0
__ehhandler$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRules@PluralRules@icu_56@@QBE?AVUnicodeString@2@XZ ENDP ; icu_56::PluralRules::getRules
PUBLIC	??_7AndConstraint@icu_56@@6B@			; icu_56::AndConstraint::`vftable'
PUBLIC	??0AndConstraint@icu_56@@QAE@XZ			; icu_56::AndConstraint::AndConstraint
PUBLIC	??_R4AndConstraint@icu_56@@6B@			; icu_56::AndConstraint::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAndConstraint@icu_56@@@8		; icu_56::AndConstraint `RTTI Type Descriptor'
PUBLIC	??_R3AndConstraint@icu_56@@8			; icu_56::AndConstraint::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AndConstraint@icu_56@@8			; icu_56::AndConstraint::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AndConstraint@icu_56@@8		; icu_56::AndConstraint::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EAndConstraint@icu_56@@UAEPAXI@Z:PROC	; icu_56::AndConstraint::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@AndConstraint@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AndConstraint@icu_56@@8 DD FLAT:??_R0?AVAndConstraint@icu_56@@@8 ; icu_56::AndConstraint::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AndConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2AndConstraint@icu_56@@8
rdata$r	SEGMENT
??_R2AndConstraint@icu_56@@8 DD FLAT:??_R1A@?0A@EA@AndConstraint@icu_56@@8 ; icu_56::AndConstraint::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3AndConstraint@icu_56@@8
rdata$r	SEGMENT
??_R3AndConstraint@icu_56@@8 DD 00H			; icu_56::AndConstraint::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2AndConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAndConstraint@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAndConstraint@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AndConstraint `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAndConstraint@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AndConstraint@icu_56@@6B@
rdata$r	SEGMENT
??_R4AndConstraint@icu_56@@6B@ DD 00H			; icu_56::AndConstraint::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAndConstraint@icu_56@@@8
	DD	FLAT:??_R3AndConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7AndConstraint@icu_56@@6B@
CONST	SEGMENT
??_7AndConstraint@icu_56@@6B@ DD FLAT:??_R4AndConstraint@icu_56@@6B@ ; icu_56::AndConstraint::`vftable'
	DD	FLAT:??_EAndConstraint@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0AndConstraint@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0AndConstraint@icu_56@@QAE@XZ PROC			; icu_56::AndConstraint::AndConstraint, COMDAT
; _this$ = ecx
; Line 722
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AndConstraint@icu_56@@6B@
; Line 723
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+20], 0
; Line 728
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0
; Line 729
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0AndConstraint@icu_56@@QAE@XZ ENDP			; icu_56::AndConstraint::AndConstraint
_TEXT	ENDS
PUBLIC	??1AndConstraint@icu_56@@UAE@XZ			; icu_56::AndConstraint::~AndConstraint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GAndConstraint@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAndConstraint@icu_56@@UAEPAXI@Z PROC		; icu_56::AndConstraint::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AndConstraint@icu_56@@UAE@XZ		; icu_56::AndConstraint::~AndConstraint
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAndConstraint@icu_56@@UAEPAXI@Z ENDP		; icu_56::AndConstraint::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0AndConstraint@icu_56@@QAE@ABV01@@Z		; icu_56::AndConstraint::AndConstraint
EXTRN	__imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AndConstraint@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AndConstraint@icu_56@@QAE@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0AndConstraint@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0AndConstraint@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AndConstraint@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AndConstraint@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv137 = -280						; size = 4
tv80 = -280						; size = 4
$T84946 = -272						; size = 4
$T84947 = -260						; size = 4
$T84950 = -248						; size = 4
$T84951 = -236						; size = 4
_status$76064 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0AndConstraint@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AndConstraint::AndConstraint, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AndConstraint@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AndConstraint@icu_56@@6B@
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 736
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 737
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 738
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 739
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN3@AndConstra
; Line 740
	mov	DWORD PTR _status$76064[ebp], 0
; Line 741
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84947[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84947[ebp], 0
	je	SHORT $LN6@AndConstra
	mov	esi, esp
	lea	eax, DWORD PTR _status$76064[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84947[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T84947[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector32@icu_56@@6B@
	mov	edx, DWORD PTR $T84947[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN7@AndConstra
$LN6@AndConstra:
	mov	DWORD PTR tv80[ebp], 0
$LN7@AndConstra:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T84946[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T84946[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 742
	mov	esi, esp
	lea	eax, DWORD PTR _status$76064[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@AndConstra:
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+21]
	mov	BYTE PTR [eax+21], dl
; Line 745
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+20]
	mov	BYTE PTR [eax+20], dl
; Line 746
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 747
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN2@AndConstra
; Line 748
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 750
	jmp	SHORT $LN4@AndConstra
$LN2@AndConstra:
; Line 751
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84951[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84951[ebp], 0
	je	SHORT $LN8@AndConstra
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	ecx, DWORD PTR $T84951[ebp]
	call	??0AndConstraint@icu_56@@QAE@ABV01@@Z	; icu_56::AndConstraint::AndConstraint
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN9@AndConstra
$LN8@AndConstra:
	mov	DWORD PTR tv137[ebp], 0
$LN9@AndConstra:
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T84950[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T84950[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN4@AndConstra:
; Line 753
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@AndConstra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@AndConstra:
	DD	1
	DD	$LN14@AndConstra
$LN14@AndConstra:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@AndConstra
$LN12@AndConstra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AndConstraint@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84947[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AndConstraint@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T84951[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AndConstraint@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AndConstraint@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AndConstraint@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AndConstraint::AndConstraint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1AndConstraint@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -256						; size = 4
tv75 = -256						; size = 4
$T84967 = -248						; size = 4
$T84968 = -236						; size = 4
$T84971 = -224						; size = 4
$T84972 = -212						; size = 4
_this$ = -8						; size = 4
??1AndConstraint@icu_56@@UAE@XZ PROC			; icu_56::AndConstraint::~AndConstraint, COMDAT
; _this$ = ecx
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AndConstraint@icu_56@@6B@
; Line 756
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T84968[ebp], ecx
	mov	edx, DWORD PTR $T84968[ebp]
	mov	DWORD PTR $T84967[ebp], edx
	cmp	DWORD PTR $T84967[ebp], 0
	je	SHORT $LN4@AndConstra@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84967[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84967[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN5@AndConstra@2
$LN4@AndConstra@2:
	mov	DWORD PTR tv75[ebp], 0
$LN5@AndConstra@2:
; Line 757
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@AndConstra@2
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T84972[ebp], ecx
	mov	edx, DWORD PTR $T84972[ebp]
	mov	DWORD PTR $T84971[ebp], edx
	cmp	DWORD PTR $T84971[ebp], 0
	je	SHORT $LN6@AndConstra@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T84971[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T84971[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN2@AndConstra@2
$LN6@AndConstra@2:
	mov	DWORD PTR tv85[ebp], 0
$LN2@AndConstra@2:
; Line 760
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AndConstraint@icu_56@@UAE@XZ ENDP			; icu_56::AndConstraint::~AndConstraint
_TEXT	ENDS
PUBLIC	?get@FixedDecimal@icu_56@@QBENW4tokenType@2@@Z	; icu_56::FixedDecimal::get
PUBLIC	?isFulfilled@AndConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ; icu_56::AndConstraint::isFulfilled
EXTRN	_fmod:PROC
EXTRN	_uprv_floor_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFulfilled@AndConstraint@icu_56@@QAECABVFixedDecimal@2@@Z
_TEXT	SEGMENT
tv198 = -248						; size = 4
tv189 = -248						; size = 4
tv90 = -245						; size = 1
_r$76096 = -48						; size = 4
_n$ = -36						; size = 8
_result$ = -17						; size = 1
_this$ = -8						; size = 4
_number$ = 8						; size = 4
?isFulfilled@AndConstraint@icu_56@@QAECABVFixedDecimal@2@@Z PROC ; icu_56::AndConstraint::isFulfilled, COMDAT
; _this$ = ecx
; Line 764
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 765
	mov	BYTE PTR _result$[ebp], 1
; Line 766
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN12@isFulfille
; Line 768
	mov	al, 1
	jmp	$LN13@isFulfille
$LN12@isFulfille:
; Line 770
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?get@FixedDecimal@icu_56@@QBENW4tokenType@2@@Z ; icu_56::FixedDecimal::get
	fstp	QWORD PTR _n$[ebp]
$LN11@isFulfille:
; Line 774
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	je	SHORT $LN8@isFulfille
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fld	QWORD PTR _n$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN8@isFulfille
; Line 775
	mov	BYTE PTR _result$[ebp], 0
; Line 776
	jmp	$LN9@isFulfille
$LN8@isFulfille:
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN7@isFulfille
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_fmod
	add	esp, 16					; 00000010H
	fstp	QWORD PTR _n$[ebp]
$LN7@isFulfille:
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN6@isFulfille
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], -1
	je	SHORT $LN15@isFulfille
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+12]
	fld	QWORD PTR _n$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN15@isFulfille
	mov	BYTE PTR tv90[ebp], 0
	jmp	SHORT $LN16@isFulfille
$LN15@isFulfille:
	mov	BYTE PTR tv90[ebp], 1
$LN16@isFulfille:
	mov	dl, BYTE PTR tv90[ebp]
	mov	BYTE PTR _result$[ebp], dl
; Line 785
	jmp	$LN9@isFulfille
$LN6@isFulfille:
; Line 787
	mov	BYTE PTR _result$[ebp], 0
; Line 788
	mov	DWORD PTR _r$76096[ebp], 0
	jmp	SHORT $LN5@isFulfille
$LN4@isFulfille:
	mov	eax, DWORD PTR _r$76096[ebp]
	add	eax, 2
	mov	DWORD PTR _r$76096[ebp], eax
$LN5@isFulfille:
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _r$76096[ebp], eax
	jge	SHORT $LN3@isFulfille
; Line 789
	mov	esi, esp
	mov	eax, DWORD PTR _r$76096[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	fild	DWORD PTR tv189[ebp]
	fcomp	QWORD PTR _n$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@isFulfille
	mov	eax, DWORD PTR _r$76096[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv198[ebp], eax
	fild	DWORD PTR tv198[ebp]
	fcomp	QWORD PTR _n$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN2@isFulfille
; Line 790
	mov	BYTE PTR _result$[ebp], 1
; Line 791
	jmp	SHORT $LN3@isFulfille
$LN2@isFulfille:
; Line 793
	jmp	$LN4@isFulfille
$LN3@isFulfille:
; Line 794
	xor	eax, eax
	jne	$LN11@isFulfille
$LN9@isFulfille:
; Line 796
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN1@isFulfille
; Line 797
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _result$[ebp], cl
$LN1@isFulfille:
; Line 799
	mov	al, BYTE PTR _result$[ebp]
$LN13@isFulfille:
; Line 800
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isFulfilled@AndConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ENDP ; icu_56::AndConstraint::isFulfilled
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?add@AndConstraint@icu_56@@QAEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?add@AndConstraint@icu_56@@QAEPAV12@XZ$0
__ehfuncinfo$?add@AndConstraint@icu_56@@QAEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?add@AndConstraint@icu_56@@QAEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?add@AndConstraint@icu_56@@QAEPAV12@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T84981 = -236						; size = 4
$T84982 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?add@AndConstraint@icu_56@@QAEPAV12@XZ PROC		; icu_56::AndConstraint::add, COMDAT
; _this$ = ecx
; Line 805
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?add@AndConstraint@icu_56@@QAEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 806
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84982[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84982[ebp], 0
	je	SHORT $LN3@add
	mov	ecx, DWORD PTR $T84982[ebp]
	call	??0AndConstraint@icu_56@@QAE@XZ		; icu_56::AndConstraint::AndConstraint
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@add
$LN3@add:
	mov	DWORD PTR tv72[ebp], 0
$LN4@add:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T84981[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T84981[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
; Line 808
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?add@AndConstraint@icu_56@@QAEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84982[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?add@AndConstraint@icu_56@@QAEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?add@AndConstraint@icu_56@@QAEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?add@AndConstraint@icu_56@@QAEPAV12@XZ ENDP		; icu_56::AndConstraint::add
PUBLIC	??_7OrConstraint@icu_56@@6B@			; icu_56::OrConstraint::`vftable'
PUBLIC	??_R4OrConstraint@icu_56@@6B@			; icu_56::OrConstraint::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVOrConstraint@icu_56@@@8			; icu_56::OrConstraint `RTTI Type Descriptor'
PUBLIC	??_R3OrConstraint@icu_56@@8			; icu_56::OrConstraint::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OrConstraint@icu_56@@8			; icu_56::OrConstraint::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OrConstraint@icu_56@@8		; icu_56::OrConstraint::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EOrConstraint@icu_56@@UAEPAXI@Z:PROC		; icu_56::OrConstraint::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@OrConstraint@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OrConstraint@icu_56@@8 DD FLAT:??_R0?AVOrConstraint@icu_56@@@8 ; icu_56::OrConstraint::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3OrConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2OrConstraint@icu_56@@8
rdata$r	SEGMENT
??_R2OrConstraint@icu_56@@8 DD FLAT:??_R1A@?0A@EA@OrConstraint@icu_56@@8 ; icu_56::OrConstraint::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3OrConstraint@icu_56@@8
rdata$r	SEGMENT
??_R3OrConstraint@icu_56@@8 DD 00H			; icu_56::OrConstraint::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2OrConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOrConstraint@icu_56@@@8
_DATA	SEGMENT
??_R0?AVOrConstraint@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::OrConstraint `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOrConstraint@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4OrConstraint@icu_56@@6B@
rdata$r	SEGMENT
??_R4OrConstraint@icu_56@@6B@ DD 00H			; icu_56::OrConstraint::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOrConstraint@icu_56@@@8
	DD	FLAT:??_R3OrConstraint@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7OrConstraint@icu_56@@6B@
CONST	SEGMENT
??_7OrConstraint@icu_56@@6B@ DD FLAT:??_R4OrConstraint@icu_56@@6B@ ; icu_56::OrConstraint::`vftable'
	DD	FLAT:??_EOrConstraint@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0OrConstraint@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0OrConstraint@icu_56@@QAE@XZ PROC			; icu_56::OrConstraint::OrConstraint, COMDAT
; _this$ = ecx
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OrConstraint@icu_56@@6B@
; Line 811
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 812
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 813
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0OrConstraint@icu_56@@QAE@XZ ENDP			; icu_56::OrConstraint::OrConstraint
_TEXT	ENDS
PUBLIC	??1OrConstraint@icu_56@@UAE@XZ			; icu_56::OrConstraint::~OrConstraint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GOrConstraint@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GOrConstraint@icu_56@@UAEPAXI@Z PROC			; icu_56::OrConstraint::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1OrConstraint@icu_56@@UAE@XZ		; icu_56::OrConstraint::~OrConstraint
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GOrConstraint@icu_56@@UAEPAXI@Z ENDP			; icu_56::OrConstraint::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0OrConstraint@icu_56@@QAE@ABV01@@Z		; icu_56::OrConstraint::OrConstraint
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0OrConstraint@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0OrConstraint@icu_56@@QAE@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0OrConstraint@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0OrConstraint@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0OrConstraint@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0OrConstraint@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -268						; size = 4
tv77 = -268						; size = 4
$T84998 = -260						; size = 4
$T84999 = -248						; size = 4
$T85002 = -236						; size = 4
$T85003 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0OrConstraint@icu_56@@QAE@ABV01@@Z PROC		; icu_56::OrConstraint::OrConstraint, COMDAT
; _this$ = ecx
; Line 815
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0OrConstraint@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OrConstraint@icu_56@@6B@
; Line 816
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@OrConstrai
; Line 817
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 819
	jmp	SHORT $LN3@OrConstrai
$LN4@OrConstrai:
; Line 820
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T84999[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T84999[ebp], 0
	je	SHORT $LN7@OrConstrai
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR $T84999[ebp]
	call	??0AndConstraint@icu_56@@QAE@ABV01@@Z	; icu_56::AndConstraint::AndConstraint
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN8@OrConstrai
$LN7@OrConstrai:
	mov	DWORD PTR tv77[ebp], 0
$LN8@OrConstrai:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T84998[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T84998[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN3@OrConstrai:
; Line 822
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@OrConstrai
; Line 823
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 825
	jmp	SHORT $LN5@OrConstrai
$LN2@OrConstrai:
; Line 826
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85003[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T85003[ebp], 0
	je	SHORT $LN9@OrConstrai
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR $T85003[ebp]
	call	??0OrConstraint@icu_56@@QAE@ABV01@@Z	; icu_56::OrConstraint::OrConstraint
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN10@OrConstrai
$LN9@OrConstrai:
	mov	DWORD PTR tv90[ebp], 0
$LN10@OrConstrai:
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T85002[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T85002[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN5@OrConstrai:
; Line 828
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0OrConstraint@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T84999[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0OrConstraint@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T85003[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0OrConstraint@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0OrConstraint@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0OrConstraint@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::OrConstraint::OrConstraint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1OrConstraint@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv83 = -256						; size = 4
tv73 = -256						; size = 4
$T85016 = -248						; size = 4
$T85017 = -236						; size = 4
$T85020 = -224						; size = 4
$T85021 = -212						; size = 4
_this$ = -8						; size = 4
??1OrConstraint@icu_56@@UAE@XZ PROC			; icu_56::OrConstraint::~OrConstraint, COMDAT
; _this$ = ecx
; Line 830
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OrConstraint@icu_56@@6B@
; Line 831
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@OrConstrai@2
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T85017[ebp], ecx
	mov	edx, DWORD PTR $T85017[ebp]
	mov	DWORD PTR $T85016[ebp], edx
	cmp	DWORD PTR $T85016[ebp], 0
	je	SHORT $LN5@OrConstrai@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T85016[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T85016[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN2@OrConstrai@2
$LN5@OrConstrai@2:
	mov	DWORD PTR tv73[ebp], 0
$LN2@OrConstrai@2:
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@OrConstrai@2
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T85021[ebp], ecx
	mov	edx, DWORD PTR $T85021[ebp]
	mov	DWORD PTR $T85020[ebp], edx
	cmp	DWORD PTR $T85020[ebp], 0
	je	SHORT $LN7@OrConstrai@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T85020[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T85020[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN3@OrConstrai@2
$LN7@OrConstrai@2:
	mov	DWORD PTR tv83[ebp], 0
$LN3@OrConstrai@2:
; Line 837
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1OrConstraint@icu_56@@UAE@XZ ENDP			; icu_56::OrConstraint::~OrConstraint
_TEXT	ENDS
PUBLIC	??_C@_1EA@PEIFAIFE@?$AAc?$AAu?$AAr?$AAO?$AAr?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAi?$AAl?$AAd?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??add@OrConstraint@icu_56@@QAEPAVAndConstraint@3@XZ@4JA ; `icu_56::OrConstraint::add'::`2'::__LINE__Var
;	COMDAT ??_C@_1EA@PEIFAIFE@?$AAc?$AAu?$AAr?$AAO?$AAr?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAi?$AAl?$AAd?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@PEIFAIFE@?$AAc?$AAu?$AAr?$AAO?$AAr?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAi?$AAl?$AAd?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'O', 00H, 'r', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, '-', 00H, '>', 00H, 'c', 00H, 'h', 00H, 'i', 00H
	DB	'l', 00H, 'd', 00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??add@OrConstraint@icu_56@@QAEPAVAndConstraint@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??add@OrConstraint@icu_56@@QAEPAVAndConstraint@3@XZ@4JA DD 0349H ; `icu_56::OrConstraint::add'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ$0
__ehfuncinfo$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ
_TEXT	SEGMENT
tv82 = -256						; size = 4
$T85027 = -248						; size = 4
$T85028 = -236						; size = 4
_curOrConstraint$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ PROC	; icu_56::OrConstraint::add, COMDAT
; _this$ = ecx
; Line 841
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _curOrConstraint$[ebp], eax
$LN2@add@2:
; Line 844
	mov	eax, DWORD PTR _curOrConstraint$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@add@2
; Line 845
	mov	eax, DWORD PTR _curOrConstraint$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curOrConstraint$[ebp], ecx
; Line 846
	jmp	SHORT $LN2@add@2
$LN1@add@2:
; Line 847
	mov	eax, DWORD PTR _curOrConstraint$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@add@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??add@OrConstraint@icu_56@@QAEPAVAndConstraint@3@XZ@4JA
	add	ecx, 6
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EA@PEIFAIFE@?$AAc?$AAu?$AAr?$AAO?$AAr?$AAC?$AAo?$AAn?$AAs?$AAt?$AAr?$AAa?$AAi?$AAn?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAi?$AAl?$AAd?$AAN?$AAo?$AAd?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@add@2:
; Line 848
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85028[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T85028[ebp], 0
	je	SHORT $LN6@add@2
	mov	ecx, DWORD PTR $T85028[ebp]
	call	??0AndConstraint@icu_56@@QAE@XZ		; icu_56::AndConstraint::AndConstraint
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN7@add@2
$LN6@add@2:
	mov	DWORD PTR tv82[ebp], 0
$LN7@add@2:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T85027[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _curOrConstraint$[ebp]
	mov	edx, DWORD PTR $T85027[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 850
	mov	eax, DWORD PTR _curOrConstraint$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 851
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T85028[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?add@OrConstraint@icu_56@@QAEPAVAndConstraint@2@XZ ENDP	; icu_56::OrConstraint::add
PUBLIC	?isFulfilled@OrConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ; icu_56::OrConstraint::isFulfilled
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFulfilled@OrConstraint@icu_56@@QAECABVFixedDecimal@2@@Z
_TEXT	SEGMENT
_andRule$76164 = -44					; size = 4
_result$ = -29						; size = 1
_orRule$ = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 4
?isFulfilled@OrConstraint@icu_56@@QAECABVFixedDecimal@2@@Z PROC ; icu_56::OrConstraint::isFulfilled, COMDAT
; _this$ = ecx
; Line 854
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 855
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _orRule$[ebp], eax
; Line 856
	mov	BYTE PTR _result$[ebp], 0
$LN4@isFulfille@2:
; Line 858
	cmp	DWORD PTR _orRule$[ebp], 0
	je	SHORT $LN3@isFulfille@2
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	jne	SHORT $LN3@isFulfille@2
; Line 859
	mov	BYTE PTR _result$[ebp], 1
; Line 860
	mov	eax, DWORD PTR _orRule$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _andRule$76164[ebp], ecx
$LN2@isFulfille@2:
; Line 861
	cmp	DWORD PTR _andRule$76164[ebp], 0
	je	SHORT $LN1@isFulfille@2
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	je	SHORT $LN1@isFulfille@2
; Line 862
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _andRule$76164[ebp]
	call	?isFulfilled@AndConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ; icu_56::AndConstraint::isFulfilled
	mov	BYTE PTR _result$[ebp], al
; Line 863
	mov	eax, DWORD PTR _andRule$76164[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _andRule$76164[ebp], ecx
; Line 864
	jmp	SHORT $LN2@isFulfille@2
$LN1@isFulfille@2:
; Line 865
	mov	eax, DWORD PTR _orRule$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _orRule$[ebp], ecx
; Line 866
	jmp	SHORT $LN4@isFulfille@2
$LN3@isFulfille@2:
; Line 868
	mov	al, BYTE PTR _result$[ebp]
; Line 869
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isFulfilled@OrConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ENDP ; icu_56::OrConstraint::isFulfilled
_TEXT	ENDS
PUBLIC	??_7RuleChain@icu_56@@6B@			; icu_56::RuleChain::`vftable'
PUBLIC	??_R4RuleChain@icu_56@@6B@			; icu_56::RuleChain::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRuleChain@icu_56@@@8			; icu_56::RuleChain `RTTI Type Descriptor'
PUBLIC	??_R3RuleChain@icu_56@@8			; icu_56::RuleChain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RuleChain@icu_56@@8			; icu_56::RuleChain::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RuleChain@icu_56@@8		; icu_56::RuleChain::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ERuleChain@icu_56@@UAEPAXI@Z:PROC		; icu_56::RuleChain::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@RuleChain@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RuleChain@icu_56@@8 DD FLAT:??_R0?AVRuleChain@icu_56@@@8 ; icu_56::RuleChain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RuleChain@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2RuleChain@icu_56@@8
rdata$r	SEGMENT
??_R2RuleChain@icu_56@@8 DD FLAT:??_R1A@?0A@EA@RuleChain@icu_56@@8 ; icu_56::RuleChain::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3RuleChain@icu_56@@8
rdata$r	SEGMENT
??_R3RuleChain@icu_56@@8 DD 00H				; icu_56::RuleChain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RuleChain@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRuleChain@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleChain@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::RuleChain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleChain@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RuleChain@icu_56@@6B@
rdata$r	SEGMENT
??_R4RuleChain@icu_56@@6B@ DD 00H			; icu_56::RuleChain::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRuleChain@icu_56@@@8
	DD	FLAT:??_R3RuleChain@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7RuleChain@icu_56@@6B@
CONST	SEGMENT
??_7RuleChain@icu_56@@6B@ DD FLAT:??_R4RuleChain@icu_56@@6B@ ; icu_56::RuleChain::`vftable'
	DD	FLAT:??_ERuleChain@icu_56@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RuleChain@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@XZ$1
__ehfuncinfo$??0RuleChain@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RuleChain@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleChain@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0RuleChain@icu_56@@QAE@XZ PROC			; icu_56::RuleChain::RuleChain, COMDAT
; _this$ = ecx
; Line 873
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleChain@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleChain@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+204], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+205], 0
; Line 874
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleChain@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleChain@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleChain@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleChain@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleChain@icu_56@@QAE@XZ ENDP			; icu_56::RuleChain::RuleChain
PUBLIC	??1RuleChain@icu_56@@UAE@XZ			; icu_56::RuleChain::~RuleChain
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRuleChain@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRuleChain@icu_56@@UAEPAXI@Z PROC			; icu_56::RuleChain::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RuleChain@icu_56@@UAE@XZ		; icu_56::RuleChain::~RuleChain
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRuleChain@icu_56@@UAEPAXI@Z ENDP			; icu_56::RuleChain::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0RuleChain@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0RuleChain@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0RuleChain@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RuleChain@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv147 = -268						; size = 4
tv135 = -268						; size = 4
$T85055 = -260						; size = 4
$T85056 = -248						; size = 4
$T85059 = -236						; size = 4
$T85060 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0RuleChain@icu_56@@QAE@ABV01@@Z PROC			; icu_56::RuleChain::RuleChain, COMDAT
; _this$ = ecx
; Line 879
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RuleChain@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleChain@icu_56@@6B@
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 76					; 0000004cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 140				; 0000008cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+204]
	mov	BYTE PTR [eax+204], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+205]
	mov	BYTE PTR [eax+205], dl
; Line 880
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN2@RuleChain
; Line 881
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85056[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T85056[ebp], 0
	je	SHORT $LN5@RuleChain
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	ecx, DWORD PTR $T85056[ebp]
	call	??0OrConstraint@icu_56@@QAE@ABV01@@Z	; icu_56::OrConstraint::OrConstraint
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN6@RuleChain
$LN5@RuleChain:
	mov	DWORD PTR tv135[ebp], 0
$LN6@RuleChain:
	mov	edx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T85055[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T85055[ebp]
	mov	DWORD PTR [eax+72], ecx
$LN2@RuleChain:
; Line 883
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN3@RuleChain
; Line 884
	mov	esi, esp
	push	208					; 000000d0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85060[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T85060[ebp], 0
	je	SHORT $LN7@RuleChain
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	ecx, DWORD PTR $T85060[ebp]
	call	??0RuleChain@icu_56@@QAE@ABV01@@Z	; icu_56::RuleChain::RuleChain
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN8@RuleChain
$LN7@RuleChain:
	mov	DWORD PTR tv147[ebp], 0
$LN8@RuleChain:
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR $T85059[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T85059[ebp]
	mov	DWORD PTR [eax+68], ecx
$LN3@RuleChain:
; Line 886
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T85056[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RuleChain@icu_56@@QAE@ABV01@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T85060[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RuleChain@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RuleChain@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RuleChain@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::RuleChain::RuleChain
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RuleChain@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$2
__ehfuncinfo$??1RuleChain@icu_56@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1RuleChain@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RuleChain@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv85 = -268						; size = 4
tv77 = -268						; size = 4
$T85076 = -260						; size = 4
$T85077 = -248						; size = 4
$T85080 = -236						; size = 4
$T85081 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RuleChain@icu_56@@UAE@XZ PROC			; icu_56::RuleChain::~RuleChain, COMDAT
; _this$ = ecx
; Line 888
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RuleChain@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RuleChain@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 889
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T85077[ebp], ecx
	mov	edx, DWORD PTR $T85077[ebp]
	mov	DWORD PTR $T85076[ebp], edx
	cmp	DWORD PTR $T85076[ebp], 0
	je	SHORT $LN3@RuleChain@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T85076[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T85076[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@RuleChain@2
$LN3@RuleChain@2:
	mov	DWORD PTR tv77[ebp], 0
$LN4@RuleChain@2:
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T85081[ebp], ecx
	mov	edx, DWORD PTR $T85081[ebp]
	mov	DWORD PTR $T85080[ebp], edx
	cmp	DWORD PTR $T85080[ebp], 0
	je	SHORT $LN5@RuleChain@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T85080[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T85080[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN1@RuleChain@2
$LN5@RuleChain@2:
	mov	DWORD PTR tv85[ebp], 0
$LN1@RuleChain@2:
; Line 891
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RuleChain@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1RuleChain@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RuleChain@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RuleChain@icu_56@@UAE@XZ ENDP			; icu_56::RuleChain::~RuleChain
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select@RuleChain@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z
_TEXT	SEGMENT
$T85096 = -224						; size = 4
_rules$76202 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
?select@RuleChain@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z PROC ; icu_56::RuleChain::select, COMDAT
; _this$ = ecx
; Line 895
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T85096[ebp], 0
; Line 896
	mov	eax, DWORD PTR _number$[ebp]
	movsx	ecx, BYTE PTR [eax+42]
	test	ecx, ecx
	jne	SHORT $LN5@select@3
; Line 897
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _rules$76202[ebp], eax
	jmp	SHORT $LN4@select@3
$LN3@select@3:
	mov	eax, DWORD PTR _rules$76202[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _rules$76202[ebp], ecx
$LN4@select@3:
	cmp	DWORD PTR _rules$76202[ebp], 0
	je	SHORT $LN5@select@3
; Line 898
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$76202[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	?isFulfilled@OrConstraint@icu_56@@QAECABVFixedDecimal@2@@Z ; icu_56::OrConstraint::isFulfilled
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@select@3
; Line 899
	mov	eax, DWORD PTR _rules$76202[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T85096[ebp]
	or	ecx, 1
	mov	DWORD PTR $T85096[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@select@3
$LN1@select@3:
; Line 901
	jmp	SHORT $LN3@select@3
$LN5@select@3:
; Line 903
	mov	esi, esp
	push	5
	push	OFFSET _PLURAL_KEYWORD_OTHER
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85096[ebp]
	or	eax, 1
	mov	DWORD PTR $T85096[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@select@3:
; Line 904
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?select@RuleChain@icu_56@@QBE?AVUnicodeString@2@ABVFixedDecimal@2@@Z ENDP ; icu_56::RuleChain::select
_TEXT	ENDS
PUBLIC	??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@	; `string'
PUBLIC	??_C@_19LMDLCFLK@?$AA?5?$AAo?$AAr?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@FEAINNNN@?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_15JOGBDECP@?$AA?0?$AA?5?$AA?$AA@		; `string'
PUBLIC	??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@		; `string'
PUBLIC	??_C@_1BC@HNKCDHAM@?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_19OEAOONN@?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@	; `string'
PUBLIC	??_C@_1BK@JPNOIFMG@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@DDFBALKO@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@FJMDCAIA@?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_19CPAEICM@?$AAm?$AAo?$AAd?$AA?5?$AA?$AA@	; `string'
PUBLIC	??_C@_19OKBBPBLE@?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@	; `string'
PUBLIC	??_C@_19LBAIPPJI@?$AA?5?$AAi?$AAs?$AA?5?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_uprv_itou_56:PROC
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z:PROC
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
;	COMDAT ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@ DB ';', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19LMDLCFLK@?$AA?5?$AAo?$AAr?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_19LMDLCFLK@?$AA?5?$AAo?$AAr?$AA?5?$AA?$AA@ DB ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FEAINNNN@?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1M@FEAINNNN@?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AA?$AA@ DB ' ', 00H, 'a', 00H
	DB	'n', 00H, 'd', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_15JOGBDECP@?$AA?0?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_15JOGBDECP@?$AA?0?$AA?5?$AA?$AA@ DB ',', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@ DB '.', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@HNKCDHAM@?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@HNKCDHAM@?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@ DB ' '
	DB	00H, 'w', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19OEAOONN@?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_19OEAOONN@?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@ DB ' ', 00H, 'i', 00H, 'n'
	DB	00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@JPNOIFMG@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@JPNOIFMG@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@ DB ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@DDFBALKO@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@DDFBALKO@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@ DB ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@FJMDCAIA@?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@FJMDCAIA@?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@ DB ' '
	DB	00H, 'i', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19CPAEICM@?$AAm?$AAo?$AAd?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_19CPAEICM@?$AAm?$AAo?$AAd?$AA?5?$AA?$AA@ DB 'm', 00H, 'o', 00H, 'd', 00H
	DB	' ', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19OKBBPBLE@?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_19OKBBPBLE@?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@ DB 'n', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_19LBAIPPJI@?$AA?5?$AAi?$AAs?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_19LBAIPPJI@?$AA?5?$AAi?$AAs?$AA?5?$AA?$AA@ DB ' ', 00H, 'i', 00H, 's'
	DB	00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$19
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$21
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z
_TEXT	SEGMENT
tv429 = -1912						; size = 4
tv427 = -1912						; size = 4
tv425 = -1912						; size = 4
tv423 = -1912						; size = 4
tv421 = -1912						; size = 4
tv419 = -1912						; size = 4
tv417 = -1912						; size = 4
tv415 = -1912						; size = 4
tv413 = -1912						; size = 4
tv411 = -1912						; size = 4
tv409 = -1912						; size = 4
tv407 = -1912						; size = 4
tv405 = -1912						; size = 4
tv403 = -1912						; size = 4
tv401 = -1912						; size = 4
tv399 = -1912						; size = 4
tv397 = -1912						; size = 4
tv395 = -1912						; size = 4
tv393 = -1912						; size = 4
tv391 = -1912						; size = 4
tv389 = -1912						; size = 4
tv387 = -1912						; size = 4
tv525 = -1908						; size = 4
tv522 = -1908						; size = 4
tv519 = -1908						; size = 4
tv516 = -1908						; size = 4
tv513 = -1908						; size = 4
tv510 = -1908						; size = 4
tv507 = -1908						; size = 4
tv504 = -1908						; size = 4
tv501 = -1908						; size = 4
tv498 = -1908						; size = 4
tv495 = -1908						; size = 4
tv492 = -1908						; size = 4
tv489 = -1908						; size = 4
tv486 = -1908						; size = 4
tv483 = -1908						; size = 4
tv480 = -1908						; size = 4
tv445 = -1908						; size = 4
tv442 = -1908						; size = 4
tv439 = -1908						; size = 4
tv436 = -1908						; size = 4
tv433 = -1908						; size = 4
tv430 = -1908						; size = 4
$T76240 = -1900						; size = 64
$T76242 = -1828						; size = 64
$T76246 = -1756						; size = 64
$T76248 = -1684						; size = 64
$T76250 = -1612						; size = 64
$T76253 = -1540						; size = 64
$T76255 = -1468						; size = 64
$T76259 = -1396						; size = 64
$T76261 = -1324						; size = 64
$T76264 = -1252						; size = 64
$T76265 = -1180						; size = 64
$T76270 = -1108						; size = 64
$T76274 = -1036						; size = 64
$T76279 = -964						; size = 64
$T76283 = -892						; size = 64
$T76291 = -820						; size = 64
$T76293 = -748						; size = 64
$T76295 = -676						; size = 64
$T76298 = -604						; size = 64
$T76302 = -532						; size = 64
$T76306 = -460						; size = 64
$T76310 = -388						; size = 64
_rangeHi$76290 = -124					; size = 4
_rangeLo$76289 = -112					; size = 4
_r$76285 = -100						; size = 4
_andRule$76233 = -88					; size = 4
_orRule$76229 = -76					; size = 4
_digitString$ = -64					; size = 32
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z PROC ; icu_56::RuleChain::dumpRules, COMDAT
; _this$ = ecx
; Line 926
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1900				; 0000076cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1912]
	mov	ecx, 475				; 000001dbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 929
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	$LN28@dumpRules
; Line 930
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 931
	mov	esi, esp
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 932
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 933
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _orRule$76229[ebp], ecx
$LN27@dumpRules:
; Line 934
	cmp	DWORD PTR _orRule$76229[ebp], 0
	je	$LN28@dumpRules
; Line 935
	mov	eax, DWORD PTR _orRule$76229[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _andRule$76233[ebp], ecx
$LN25@dumpRules:
; Line 936
	cmp	DWORD PTR _andRule$76233[ebp], 0
	je	$LN24@dumpRules
; Line 937
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN23@dumpRules
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN23@dumpRules
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+12], -1
	jne	SHORT $LN23@dumpRules
	jmp	$LN22@dumpRules
$LN23@dumpRules:
; Line 939
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN21@dumpRules
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN21@dumpRules
; Line 940
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	edx, DWORD PTR $T76240[ebp]
	push	edx
	call	?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z ; icu_56::tokenString
	add	esp, 8
	mov	DWORD PTR tv430[ebp], eax
	mov	eax, DWORD PTR tv430[ebp]
	mov	DWORD PTR tv387[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv387[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76240[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 941
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19LBAIPPJI@?$AA?5?$AAi?$AAs?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76242[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv433[ebp], eax
	mov	eax, DWORD PTR tv433[ebp]
	mov	DWORD PTR tv389[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv389[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76242[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 942
	mov	eax, DWORD PTR _andRule$76233[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN20@dumpRules
; Line 943
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19OKBBPBLE@?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76246[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv436[ebp], eax
	mov	eax, DWORD PTR tv436[ebp]
	mov	DWORD PTR tv391[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv391[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76246[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@dumpRules:
; Line 945
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _digitString$[ebp]
	push	edx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 946
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76248[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv439[ebp], eax
	mov	ecx, DWORD PTR tv439[ebp]
	mov	DWORD PTR tv393[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv393[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 948
	jmp	$LN22@dumpRules
$LN21@dumpRules:
; Line 949
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	edx, DWORD PTR $T76250[ebp]
	push	edx
	call	?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z ; icu_56::tokenString
	add	esp, 8
	mov	DWORD PTR tv442[ebp], eax
	mov	eax, DWORD PTR tv442[ebp]
	mov	DWORD PTR tv395[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	mov	ecx, DWORD PTR tv395[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 950
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 951
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	$LN18@dumpRules
; Line 952
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19CPAEICM@?$AAm?$AAo?$AAd?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76253[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv445[ebp], eax
	mov	eax, DWORD PTR tv445[ebp]
	mov	DWORD PTR tv397[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	mov	ecx, DWORD PTR tv397[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76253[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _digitString$[ebp]
	push	edx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 954
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76255[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv480[ebp], eax
	mov	ecx, DWORD PTR tv480[ebp]
	mov	DWORD PTR tv399[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	edx, DWORD PTR tv399[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76255[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@dumpRules:
; Line 956
	mov	eax, DWORD PTR _andRule$76233[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN17@dumpRules
; Line 957
	mov	eax, DWORD PTR _andRule$76233[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	$LN16@dumpRules
; Line 958
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@FJMDCAIA@?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76259[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv483[ebp], eax
	mov	eax, DWORD PTR tv483[ebp]
	mov	DWORD PTR tv401[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	esi, esp
	mov	ecx, DWORD PTR tv401[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76259[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 959
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _digitString$[ebp]
	push	edx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 960
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76261[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv486[ebp], eax
	mov	ecx, DWORD PTR tv486[ebp]
	mov	DWORD PTR tv403[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	esi, esp
	mov	edx, DWORD PTR tv403[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76261[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	jmp	$LN15@dumpRules
$LN16@dumpRules:
; Line 963
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19LBAIPPJI@?$AA?5?$AAi?$AAs?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76264[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv489[ebp], eax
	mov	eax, DWORD PTR tv489[ebp]
	mov	DWORD PTR tv405[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	esi, esp
	mov	ecx, DWORD PTR tv405[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76264[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 964
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _digitString$[ebp]
	push	edx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 965
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76265[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv492[ebp], eax
	mov	ecx, DWORD PTR tv492[ebp]
	mov	DWORD PTR tv407[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	mov	edx, DWORD PTR tv407[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76265[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@dumpRules:
; Line 968
	jmp	$LN22@dumpRules
$LN17@dumpRules:
; Line 969
	mov	eax, DWORD PTR _andRule$76233[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	$LN13@dumpRules
; Line 970
	mov	eax, DWORD PTR _andRule$76233[ebp]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	je	SHORT $LN12@dumpRules
; Line 971
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@DDFBALKO@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76270[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv495[ebp], eax
	mov	eax, DWORD PTR tv495[ebp]
	mov	DWORD PTR tv409[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	esi, esp
	mov	ecx, DWORD PTR tv409[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76270[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 973
	jmp	SHORT $LN11@dumpRules
$LN12@dumpRules:
; Line 974
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BK@JPNOIFMG@?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76274[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv498[ebp], eax
	mov	eax, DWORD PTR tv498[ebp]
	mov	DWORD PTR tv411[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	mov	ecx, DWORD PTR tv411[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76274[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@dumpRules:
; Line 977
	jmp	$LN10@dumpRules
$LN13@dumpRules:
; Line 978
	mov	eax, DWORD PTR _andRule$76233[ebp]
	movsx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	je	SHORT $LN9@dumpRules
; Line 979
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19OEAOONN@?$AA?5?$AAi?$AAn?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76279[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv501[ebp], eax
	mov	eax, DWORD PTR tv501[ebp]
	mov	DWORD PTR tv413[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	esi, esp
	mov	ecx, DWORD PTR tv413[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76279[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 981
	jmp	SHORT $LN10@dumpRules
$LN9@dumpRules:
; Line 982
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1BC@HNKCDHAM@?$AA?5?$AAw?$AAi?$AAt?$AAh?$AAi?$AAn?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76283[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv504[ebp], eax
	mov	eax, DWORD PTR tv504[ebp]
	mov	DWORD PTR tv415[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	esi, esp
	mov	ecx, DWORD PTR tv415[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76283[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@dumpRules:
; Line 985
	mov	DWORD PTR _r$76285[ebp], 0
	jmp	SHORT $LN7@dumpRules
$LN6@dumpRules:
	mov	eax, DWORD PTR _r$76285[ebp]
	add	eax, 2
	mov	DWORD PTR _r$76285[ebp], eax
$LN7@dumpRules:
	mov	esi, esp
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _r$76285[ebp], eax
	jge	$LN22@dumpRules
; Line 986
	mov	esi, esp
	mov	eax, DWORD PTR _r$76285[ebp]
	push	eax
	mov	ecx, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rangeLo$76289[ebp], eax
; Line 987
	mov	eax, DWORD PTR _r$76285[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	DWORD PTR __imp_?elementAti@UVector32@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rangeHi$76290[ebp], eax
; Line 988
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _rangeLo$76289[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _digitString$[ebp]
	push	ecx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 989
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76291[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv507[ebp], eax
	mov	ecx, DWORD PTR tv507[ebp]
	mov	DWORD PTR tv417[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	esi, esp
	mov	edx, DWORD PTR tv417[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 990
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76293[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv510[ebp], eax
	mov	eax, DWORD PTR tv510[ebp]
	mov	DWORD PTR tv419[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	esi, esp
	mov	ecx, DWORD PTR tv419[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76293[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 991
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _rangeHi$76290[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _digitString$[ebp]
	push	ecx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 992
	mov	esi, esp
	lea	eax, DWORD PTR _digitString$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76295[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv513[ebp], eax
	mov	ecx, DWORD PTR tv513[ebp]
	mov	DWORD PTR tv421[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	esi, esp
	mov	edx, DWORD PTR tv421[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76295[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 993
	mov	esi, DWORD PTR _r$76285[ebp]
	add	esi, 2
	mov	edi, esp
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?size@UVector32@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN4@dumpRules
; Line 994
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15JOGBDECP@?$AA?0?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76298[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv516[ebp], eax
	mov	eax, DWORD PTR tv516[ebp]
	mov	DWORD PTR tv423[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	esi, esp
	mov	ecx, DWORD PTR tv423[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76298[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@dumpRules:
; Line 996
	jmp	$LN6@dumpRules
$LN22@dumpRules:
; Line 999
	mov	eax, DWORD PTR _andRule$76233[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _andRule$76233[ebp], ecx
	cmp	DWORD PTR _andRule$76233[ebp], 0
	je	SHORT $LN3@dumpRules
; Line 1000
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@FEAINNNN@?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76302[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv519[ebp], eax
	mov	eax, DWORD PTR tv519[ebp]
	mov	DWORD PTR tv425[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	esi, esp
	mov	ecx, DWORD PTR tv425[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76302[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@dumpRules:
; Line 1002
	jmp	$LN25@dumpRules
$LN24@dumpRules:
; Line 1003
	mov	eax, DWORD PTR _orRule$76229[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _orRule$76229[ebp], ecx
	cmp	DWORD PTR _orRule$76229[ebp], 0
	je	SHORT $LN2@dumpRules
; Line 1004
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_19LMDLCFLK@?$AA?5?$AAo?$AAr?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76306[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv522[ebp], eax
	mov	eax, DWORD PTR tv522[ebp]
	mov	DWORD PTR tv427[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	esi, esp
	mov	ecx, DWORD PTR tv427[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76306[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@dumpRules:
; Line 1006
	jmp	$LN27@dumpRules
$LN28@dumpRules:
; Line 1008
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN29@dumpRules
; Line 1009
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T76310[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv525[ebp], eax
	mov	eax, DWORD PTR tv525[ebp]
	mov	DWORD PTR tv429[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	esi, esp
	mov	ecx, DWORD PTR tv429[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76310[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1010
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	call	?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z ; icu_56::RuleChain::dumpRules
$LN29@dumpRules:
; Line 1012
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN56@dumpRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1912				; 00000778H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN56@dumpRules:
	DD	1
	DD	$LN55@dumpRules
$LN55@dumpRules:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN53@dumpRules
$LN53@dumpRules:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76240[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76242[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76246[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76250[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76253[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76255[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76259[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76261[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76264[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76265[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76270[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76274[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76279[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76283[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$15:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76291[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$16:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76293[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76295[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$18:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76298[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$19:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76302[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$20:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76306[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z$21:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76310[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1916]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?dumpRules@RuleChain@icu_56@@QAEXAAVUnicodeString@2@@Z ENDP ; icu_56::RuleChain::dumpRules
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z$0
__ehfuncinfo$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z
_TEXT	SEGMENT
tv67 = -296						; size = 4
$T85137 = -288						; size = 4
_s$ = -84						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_tok$ = 12						; size = 4
?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z PROC ; icu_56::tokenString, COMDAT
; Line 906
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T85137[ebp], 0
; Line 907
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 908
	mov	eax, DWORD PTR _tok$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 21					; 00000015H
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 4
	ja	SHORT $LN1@tokenStrin
	mov	edx, DWORD PTR tv67[ebp]
	jmp	DWORD PTR $LN18@tokenStrin[edx*4]
$LN6@tokenStrin:
; Line 910
	mov	esi, esp
	push	110					; 0000006eH
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@tokenStrin
$LN5@tokenStrin:
; Line 912
	mov	esi, esp
	push	105					; 00000069H
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@tokenStrin
$LN4@tokenStrin:
; Line 914
	mov	esi, esp
	push	102					; 00000066H
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@tokenStrin
$LN3@tokenStrin:
; Line 916
	mov	esi, esp
	push	118					; 00000076H
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@tokenStrin
$LN2@tokenStrin:
; Line 918
	mov	esi, esp
	push	116					; 00000074H
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@tokenStrin
$LN1@tokenStrin:
; Line 920
	mov	esi, esp
	push	126					; 0000007eH
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@tokenStrin:
; Line 922
	mov	esi, esp
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T85137[ebp]
	or	ecx, 1
	mov	DWORD PTR $T85137[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 923
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@tokenStrin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@tokenStrin:
	DD	1
	DD	$LN16@tokenStrin
$LN16@tokenStrin:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN14@tokenStrin
$LN14@tokenStrin:
	DB	115					; 00000073H
	DB	0
	npad	2
$LN18@tokenStrin:
	DD	$LN6@tokenStrin
	DD	$LN5@tokenStrin
	DD	$LN4@tokenStrin
	DD	$LN3@tokenStrin
	DD	$LN2@tokenStrin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z$1:
	mov	eax, DWORD PTR $T85137[ebp]
	and	eax, 1
	je	$LN13@tokenStrin
	and	DWORD PTR $T85137[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN13@tokenStrin:
	ret	0
__ehhandler$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tokenString@icu_56@@YA?AVUnicodeString@1@W4tokenType@1@@Z ENDP ; icu_56::tokenString
PUBLIC	?getKeywords@RuleChain@icu_56@@QBE?AW4UErrorCode@@HPAVUnicodeString@2@AAH@Z ; icu_56::RuleChain::getKeywords
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKeywords@RuleChain@icu_56@@QBE?AW4UErrorCode@@HPAVUnicodeString@2@AAH@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
_capacityOfKeywords$ = 8				; size = 4
_keywords$ = 12						; size = 4
_arraySize$ = 16					; size = 4
?getKeywords@RuleChain@icu_56@@QBE?AW4UErrorCode@@HPAVUnicodeString@2@AAH@Z PROC ; icu_56::RuleChain::getKeywords, COMDAT
; _this$ = ecx
; Line 1016
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1017
	mov	eax, DWORD PTR _capacityOfKeywords$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _arraySize$[ebp]
	cmp	DWORD PTR [ecx], eax
	jge	SHORT $LN4@getKeyword@2
; Line 1018
	mov	eax, DWORD PTR _arraySize$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 6
	add	ecx, DWORD PTR _keywords$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR _arraySize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _arraySize$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR tv69[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1020
	jmp	SHORT $LN3@getKeyword@2
$LN4@getKeyword@2:
; Line 1021
	mov	eax, 15					; 0000000fH
	jmp	SHORT $LN5@getKeyword@2
$LN3@getKeyword@2:
; Line 1024
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@getKeyword@2
; Line 1025
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _keywords$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacityOfKeywords$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	call	?getKeywords@RuleChain@icu_56@@QBE?AW4UErrorCode@@HPAVUnicodeString@2@AAH@Z ; icu_56::RuleChain::getKeywords
	jmp	SHORT $LN5@getKeyword@2
; Line 1027
	jmp	SHORT $LN5@getKeyword@2
$LN2@getKeyword@2:
; Line 1028
	xor	eax, eax
$LN5@getKeyword@2:
; Line 1030
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getKeywords@RuleChain@icu_56@@QBE?AW4UErrorCode@@HPAVUnicodeString@2@AAH@Z ENDP ; icu_56::RuleChain::getKeywords
_TEXT	ENDS
PUBLIC	?isKeyword@RuleChain@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::RuleChain::isKeyword
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isKeyword@RuleChain@icu_56@@QBECABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keywordParam$ = 8					; size = 4
?isKeyword@RuleChain@icu_56@@QBECABVUnicodeString@2@@Z PROC ; icu_56::RuleChain::isKeyword, COMDAT
; _this$ = ecx
; Line 1033
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1034
	mov	esi, esp
	mov	eax, DWORD PTR _keywordParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isKeyword@2
; Line 1035
	mov	al, 1
	jmp	SHORT $LN4@isKeyword@2
$LN3@isKeyword@2:
; Line 1038
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@isKeyword@2
; Line 1039
	mov	eax, DWORD PTR _keywordParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	call	?isKeyword@RuleChain@icu_56@@QBECABVUnicodeString@2@@Z ; icu_56::RuleChain::isKeyword
	jmp	SHORT $LN4@isKeyword@2
; Line 1041
	jmp	SHORT $LN4@isKeyword@2
$LN2@isKeyword@2:
; Line 1042
	xor	al, al
$LN4@isKeyword@2:
; Line 1044
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?isKeyword@RuleChain@icu_56@@QBECABVUnicodeString@2@@Z ENDP ; icu_56::RuleChain::isKeyword
_TEXT	ENDS
PUBLIC	??_7PluralRuleParser@icu_56@@6B@		; icu_56::PluralRuleParser::`vftable'
PUBLIC	??_R4PluralRuleParser@icu_56@@6B@		; icu_56::PluralRuleParser::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralRuleParser@icu_56@@@8		; icu_56::PluralRuleParser `RTTI Type Descriptor'
PUBLIC	??_R3PluralRuleParser@icu_56@@8			; icu_56::PluralRuleParser::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralRuleParser@icu_56@@8			; icu_56::PluralRuleParser::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralRuleParser@icu_56@@8	; icu_56::PluralRuleParser::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EPluralRuleParser@icu_56@@UAEPAXI@Z:PROC	; icu_56::PluralRuleParser::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@PluralRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralRuleParser@icu_56@@8 DD FLAT:??_R0?AVPluralRuleParser@icu_56@@@8 ; icu_56::PluralRuleParser::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R2PluralRuleParser@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralRuleParser@icu_56@@8 ; icu_56::PluralRuleParser::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R3PluralRuleParser@icu_56@@8 DD 00H			; icu_56::PluralRuleParser::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2PluralRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralRuleParser@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralRuleParser@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralRuleParser `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralRuleParser@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralRuleParser@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralRuleParser@icu_56@@6B@ DD 00H		; icu_56::PluralRuleParser::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralRuleParser@icu_56@@@8
	DD	FLAT:??_R3PluralRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralRuleParser@icu_56@@6B@
CONST	SEGMENT
??_7PluralRuleParser@icu_56@@6B@ DD FLAT:??_R4PluralRuleParser@icu_56@@6B@ ; icu_56::PluralRuleParser::`vftable'
	DD	FLAT:??_EPluralRuleParser@icu_56@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralRuleParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralRuleParser@icu_56@@QAE@XZ PROC			; icu_56::PluralRuleParser::PluralRuleParser, COMDAT
; _this$ = ecx
; Line 1050
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralRuleParser@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], -1
; Line 1051
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralRuleParser@icu_56@@QAE@XZ ENDP			; icu_56::PluralRuleParser::PluralRuleParser
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GPluralRuleParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralRuleParser@icu_56@@UAEPAXI@Z PROC		; icu_56::PluralRuleParser::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralRuleParser@icu_56@@UAE@XZ	; icu_56::PluralRuleParser::~PluralRuleParser
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@12
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@12:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralRuleParser@icu_56@@UAEPAXI@Z ENDP		; icu_56::PluralRuleParser::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1PluralRuleParser@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PluralRuleParser@icu_56@@UAE@XZ PROC			; icu_56::PluralRuleParser::~PluralRuleParser, COMDAT
; _this$ = ecx
; Line 1053
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralRuleParser@icu_56@@6B@
; Line 1054
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PluralRuleParser@icu_56@@UAE@XZ ENDP			; icu_56::PluralRuleParser::~PluralRuleParser
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__atoi:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_digits$ = -148						; size = 128
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_token$ = 8						; size = 4
?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z PROC ; icu_56::PluralRuleParser::getNumberValue, COMDAT
; Line 1058
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1062
	mov	esi, esp
	push	0
	push	128					; 00000080H
	lea	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _i$[ebp], eax
; Line 1063
	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR _digits$[ebp+eax], 0
; Line 1065
	mov	esi, esp
	lea	eax, DWORD PTR _digits$[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1066
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@getNumberV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@getNumberV:
	DD	1
	DD	$LN4@getNumberV
$LN4@getNumberV:
	DD	-148					; ffffff6cH
	DD	128					; 00000080H
	DD	$LN3@getNumberV
$LN3@getNumberV:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?getNumberValue@PluralRuleParser@icu_56@@SAHABVUnicodeString@2@@Z ENDP ; icu_56::PluralRuleParser::getNumberValue
_TEXT	ENDS
PUBLIC	?getKeyType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@ABVUnicodeString@2@W432@@Z ; icu_56::PluralRuleParser::getKeyType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkSyntax@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv79 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?checkSyntax@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z PROC ; icu_56::PluralRuleParser::checkSyntax, COMDAT
; _this$ = ecx
; Line 1071
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1072
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN27@checkSynta
; Line 1073
	jmp	$LN28@checkSynta
$LN27@checkSynta:
; Line 1075
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN26@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 3
	je	SHORT $LN26@checkSynta
; Line 1076
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	?getKeyType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@ABVUnicodeString@2@W432@@Z ; icu_56::PluralRuleParser::getKeyType
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
$LN26@checkSynta:
; Line 1081
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 25			; 00000019H
	ja	$LN1@checkSynta
	mov	edx, DWORD PTR tv79[ebp]
	movzx	eax, BYTE PTR $LN30@checkSynta[edx]
	jmp	DWORD PTR $LN31@checkSynta[eax*4]
$LN23@checkSynta:
; Line 1084
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 10			; 0000000aH
	je	SHORT $LN22@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 28			; 0000001cH
	je	SHORT $LN22@checkSynta
; Line 1085
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN22@checkSynta:
; Line 1087
	jmp	$LN28@checkSynta
$LN21@checkSynta:
; Line 1094
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 20			; 00000014H
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 13			; 0000000dH
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 15			; 0000000fH
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 14			; 0000000eH
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 19			; 00000013H
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 16			; 00000010H
	je	SHORT $LN20@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 17			; 00000011H
	je	SHORT $LN20@checkSynta
; Line 1095
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN20@checkSynta:
; Line 1097
	jmp	$LN28@checkSynta
$LN19@checkSynta:
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 5
	je	SHORT $LN18@checkSynta
; Line 1100
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN18@checkSynta:
; Line 1102
	jmp	$LN28@checkSynta
$LN17@checkSynta:
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 21			; 00000015H
	je	SHORT $LN16@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 22			; 00000016H
	je	SHORT $LN16@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 23			; 00000017H
	je	SHORT $LN16@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 25			; 00000019H
	je	SHORT $LN16@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 24			; 00000018H
	je	SHORT $LN16@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 6
	je	SHORT $LN16@checkSynta
; Line 1110
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN16@checkSynta:
; Line 1112
	jmp	$LN28@checkSynta
$LN15@checkSynta:
; Line 1114
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	je	SHORT $LN14@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 14			; 0000000eH
	je	SHORT $LN14@checkSynta
; Line 1115
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN14@checkSynta:
; Line 1117
	jmp	$LN28@checkSynta
$LN13@checkSynta:
; Line 1119
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	je	SHORT $LN12@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 15			; 0000000fH
	je	SHORT $LN12@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 19			; 00000013H
	je	SHORT $LN12@checkSynta
; Line 1120
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN12@checkSynta:
; Line 1122
	jmp	$LN28@checkSynta
$LN11@checkSynta:
; Line 1129
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	je	SHORT $LN10@checkSynta
; Line 1130
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN10@checkSynta:
; Line 1132
	jmp	$LN28@checkSynta
$LN9@checkSynta:
; Line 1139
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 21			; 00000015H
	je	SHORT $LN8@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 22			; 00000016H
	je	SHORT $LN8@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 23			; 00000017H
	je	SHORT $LN8@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 25			; 00000019H
	je	SHORT $LN8@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 24			; 00000018H
	je	SHORT $LN8@checkSynta
; Line 1140
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN8@checkSynta:
; Line 1142
	jmp	$LN28@checkSynta
$LN7@checkSynta:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	je	SHORT $LN6@checkSynta
; Line 1145
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN6@checkSynta:
; Line 1147
	jmp	$LN28@checkSynta
$LN5@checkSynta:
; Line 1152
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 8
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 3
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 20			; 00000014H
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 14			; 0000000eH
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 15			; 0000000fH
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 16			; 00000010H
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 17			; 00000011H
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 19			; 00000013H
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 11			; 0000000bH
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 12			; 0000000cH
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 2
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 6
	je	SHORT $LN4@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 28			; 0000001cH
	je	SHORT $LN4@checkSynta
; Line 1154
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN4@checkSynta:
; Line 1158
	jmp	SHORT $LN28@checkSynta
$LN3@checkSynta:
; Line 1160
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 26			; 0000001aH
	je	SHORT $LN2@checkSynta
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 27			; 0000001bH
	je	SHORT $LN2@checkSynta
; Line 1161
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN2@checkSynta:
; Line 1163
	jmp	SHORT $LN28@checkSynta
$LN1@checkSynta:
; Line 1165
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
$LN28@checkSynta:
; Line 1168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN31@checkSynta:
	DD	$LN23@checkSynta
	DD	$LN5@checkSynta
	DD	$LN7@checkSynta
	DD	$LN17@checkSynta
	DD	$LN3@checkSynta
	DD	$LN11@checkSynta
	DD	$LN19@checkSynta
	DD	$LN9@checkSynta
	DD	$LN13@checkSynta
	DD	$LN15@checkSynta
	DD	$LN21@checkSynta
	DD	$LN1@checkSynta
$LN30@checkSynta:
	DB	0
	DB	1
	DB	2
	DB	0
	DB	11					; 0000000bH
	DB	3
	DB	4
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	6
	DB	7
	DB	7
	DB	5
	DB	8
	DB	5
	DB	5
	DB	5
	DB	11					; 0000000bH
	DB	5
	DB	9
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
?checkSyntax@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP ; icu_56::PluralRuleParser::checkSyntax
_TEXT	ENDS
PUBLIC	??_C@_1DM@JJBKDFHB@?$AAc?$AAu?$AAr?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DO@DKEHAJOG@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z@4JA ; `icu_56::PluralRuleParser::getNextToken'::`2'::__LINE__Var
PUBLIC	?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z ; icu_56::PluralRuleParser::charType
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
;	COMDAT ??_C@_1DM@JJBKDFHB@?$AAc?$AAu?$AAr?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@JJBKDFHB@?$AAc?$AAu?$AAr?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'r', 00H, 'u'
	DB	00H, 'l', 00H, 'e', 00H, 'S', 00H, 'r', 00H, 'c', 00H, '-', 00H
	DB	'>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@DKEHAJOG@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@DKEHAJOG@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'r'
	DB	00H, 'u', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'x', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'r'
	DB	00H, 'u', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 'r', 00H, 'c', 00H
	DB	'-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z@4JA DD 0499H ; `icu_56::PluralRuleParser::getNextToken'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv235 = -324						; size = 4
tv236 = -320						; size = 4
tv94 = -320						; size = 4
$T76418 = -312						; size = 64
_curIndex$ = -48					; size = 4
_ch$ = -36						; size = 2
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z PROC ; icu_56::PluralRuleParser::getNextToken, COMDAT
; _this$ = ecx
; Line 1177
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1178
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@getNextTok
; Line 1179
	jmp	$LN24@getNextTok
$LN22@getNextTok:
; Line 1183
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jge	SHORT $LN21@getNextTok
; Line 1184
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$[ebp], ax
; Line 1185
	movzx	eax, WORD PTR _ch$[ebp]
	push	eax
	call	?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z ; icu_56::PluralRuleParser::charType
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 1186
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 4
	je	SHORT $LN20@getNextTok
; Line 1187
	jmp	SHORT $LN21@getNextTok
$LN20@getNextTok:
; Line 1189
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1190
	jmp	SHORT $LN22@getNextTok
$LN21@getNextTok:
; Line 1191
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jl	SHORT $LN19@getNextTok
; Line 1192
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 28			; 0000001cH
; Line 1193
	jmp	$LN24@getNextTok
$LN19@getNextTok:
; Line 1195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _curIndex$[ebp], ecx
; Line 1197
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR tv94[ebp], ecx
	mov	edx, DWORD PTR tv94[ebp]
	sub	edx, 1
	mov	DWORD PTR tv94[ebp], edx
	cmp	DWORD PTR tv94[ebp], 17			; 00000011H
	ja	$LN1@getNextTok
	mov	eax, DWORD PTR tv94[ebp]
	movzx	ecx, BYTE PTR $LN29@getNextTok[eax]
	jmp	DWORD PTR $LN31@getNextTok[ecx*4]
$LN16@getNextTok:
; Line 1207
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
; Line 1208
	jmp	$LN17@getNextTok
$LN15@getNextTok:
; Line 1211
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 61					; 0000003dH
	jne	SHORT $LN14@getNextTok
; Line 1212
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 2
	mov	DWORD PTR _curIndex$[ebp], eax
; Line 1213
	jmp	SHORT $LN13@getNextTok
$LN14@getNextTok:
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 1215
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
$LN13@getNextTok:
; Line 1217
	jmp	$LN17@getNextTok
$LN11@getNextTok:
; Line 1220
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 10			; 0000000aH
	jne	SHORT $LN10@getNextTok
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _curIndex$[ebp], eax
	jge	SHORT $LN10@getNextTok
; Line 1221
	mov	esi, esp
	mov	eax, DWORD PTR _curIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$[ebp], ax
; Line 1222
	movzx	eax, WORD PTR _ch$[ebp]
	push	eax
	call	?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z ; icu_56::PluralRuleParser::charType
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 1223
	jmp	SHORT $LN11@getNextTok
$LN10@getNextTok:
; Line 1224
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 10			; 0000000aH
; Line 1225
	jmp	$LN17@getNextTok
$LN8@getNextTok:
; Line 1228
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 1
	jne	SHORT $LN7@getNextTok
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _curIndex$[ebp], eax
	jge	SHORT $LN7@getNextTok
; Line 1229
	mov	esi, esp
	mov	eax, DWORD PTR _curIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$[ebp], ax
; Line 1230
	movzx	eax, WORD PTR _ch$[ebp]
	push	eax
	call	?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z ; icu_56::PluralRuleParser::charType
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 1231
	jmp	SHORT $LN8@getNextTok
$LN7@getNextTok:
; Line 1232
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 1
; Line 1233
	jmp	$LN17@getNextTok
$LN6@getNextTok:
; Line 1237
	mov	esi, DWORD PTR _curIndex$[ebp]
	add	esi, 1
	mov	edi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN4@getNextTok
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 46					; 0000002eH
	je	SHORT $LN5@getNextTok
$LN4@getNextTok:
; Line 1238
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
; Line 1239
	jmp	SHORT $LN17@getNextTok
$LN5@getNextTok:
; Line 1241
	mov	esi, DWORD PTR _curIndex$[ebp]
	add	esi, 2
	mov	edi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jge	SHORT $LN2@getNextTok
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, ax
	cmp	edx, 46					; 0000002eH
	je	SHORT $LN3@getNextTok
$LN2@getNextTok:
; Line 1242
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 2
	mov	DWORD PTR _curIndex$[ebp], eax
; Line 1243
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 8
; Line 1244
	jmp	SHORT $LN17@getNextTok
$LN3@getNextTok:
; Line 1246
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 9
; Line 1247
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 3
	mov	DWORD PTR _curIndex$[ebp], eax
; Line 1248
	jmp	SHORT $LN17@getNextTok
$LN1@getNextTok:
; Line 1251
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65792			; 00010100H
; Line 1252
	mov	eax, DWORD PTR _curIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$[ebp], eax
$LN17@getNextTok:
; Line 1256
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jle	SHORT $LN26@getNextTok
	mov	edx, DWORD PTR ?__LINE__Var@?1??getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z@4JA
	add	edx, 79					; 0000004fH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DO@DKEHAJOG@?$AAr?$AAu?$AAl?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@getNextTok:
; Line 1257
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _curIndex$[ebp], eax
	jle	SHORT $LN27@getNextTok
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z@4JA
	add	ecx, 80					; 00000050H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DM@JJBKDFHB@?$AAc?$AAu?$AAr?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAr?$AAu?$AAl?$AAe?$AAS?$AAr?$AAc?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN27@getNextTok:
; Line 1258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _curIndex$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR $T76418[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv236[ebp], eax
	mov	eax, DWORD PTR tv236[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	ecx, DWORD PTR tv235[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T76418[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _curIndex$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN24@getNextTok:
; Line 1260
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN31@getNextTok:
	DD	$LN8@getNextTok
	DD	$LN16@getNextTok
	DD	$LN6@getNextTok
	DD	$LN11@getNextTok
	DD	$LN15@getNextTok
	DD	$LN1@getNextTok
$LN29@getNextTok:
	DB	0
	DB	1
	DB	1
	DB	5
	DB	1
	DB	1
	DB	2
	DB	5
	DB	1
	DB	3
	DB	5
	DB	5
	DB	1
	DB	5
	DB	5
	DB	1
	DB	4
	DB	1
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T76418[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getNextToken@PluralRuleParser@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP ; icu_56::PluralRuleParser::getNextToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z
_TEXT	SEGMENT
tv73 = -196						; size = 4
_ch$ = 8						; size = 2
?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z PROC ; icu_56::PluralRuleParser::charType, COMDAT
; Line 1263
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1264
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN16@charType
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN16@charType
; Line 1265
	mov	eax, 1
	jmp	$LN17@charType
$LN16@charType:
; Line 1267
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 97					; 00000061H
	jl	SHORT $LN15@charType
	movzx	eax, WORD PTR _ch$[ebp]
	cmp	eax, 122				; 0000007aH
	jg	SHORT $LN15@charType
; Line 1268
	mov	eax, 10					; 0000000aH
	jmp	$LN17@charType
$LN15@charType:
; Line 1270
	movzx	eax, WORD PTR _ch$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	cmp	DWORD PTR tv73[ebp], 8230		; 00002026H
	jg	SHORT $LN19@charType
	cmp	DWORD PTR tv73[ebp], 8230		; 00002026H
	je	SHORT $LN3@charType
	mov	ecx, DWORD PTR tv73[ebp]
	sub	ecx, 32					; 00000020H
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 94			; 0000005eH
	ja	SHORT $LN1@charType
	mov	edx, DWORD PTR tv73[ebp]
	movzx	eax, BYTE PTR $LN20@charType[edx]
	jmp	DWORD PTR $LN21@charType[eax*4]
$LN19@charType:
	jmp	SHORT $LN1@charType
$LN12@charType:
; Line 1272
	mov	eax, 5
	jmp	SHORT $LN17@charType
$LN11@charType:
; Line 1274
	mov	eax, 4
	jmp	SHORT $LN17@charType
$LN10@charType:
; Line 1276
	mov	eax, 3
	jmp	SHORT $LN17@charType
$LN9@charType:
; Line 1278
	mov	eax, 7
	jmp	SHORT $LN17@charType
$LN8@charType:
; Line 1280
	mov	eax, 2
	jmp	SHORT $LN17@charType
$LN7@charType:
; Line 1282
	mov	eax, 17					; 00000011H
	jmp	SHORT $LN17@charType
$LN6@charType:
; Line 1284
	mov	eax, 16					; 00000010H
	jmp	SHORT $LN17@charType
$LN5@charType:
; Line 1286
	mov	eax, 13					; 0000000dH
	jmp	SHORT $LN17@charType
$LN4@charType:
; Line 1288
	mov	eax, 6
	jmp	SHORT $LN17@charType
$LN3@charType:
; Line 1290
	mov	eax, 9
	jmp	SHORT $LN17@charType
$LN2@charType:
; Line 1292
	mov	eax, 18					; 00000012H
	jmp	SHORT $LN17@charType
$LN1@charType:
; Line 1294
	xor	eax, eax
$LN17@charType:
; Line 1296
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@charType:
	DD	$LN11@charType
	DD	$LN7@charType
	DD	$LN5@charType
	DD	$LN8@charType
	DD	$LN9@charType
	DD	$LN12@charType
	DD	$LN10@charType
	DD	$LN6@charType
	DD	$LN4@charType
	DD	$LN2@charType
	DD	$LN1@charType
$LN20@charType:
	DB	0
	DB	1
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	2
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	3
	DB	10					; 0000000aH
	DB	4
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	5
	DB	6
	DB	10					; 0000000aH
	DB	7
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	8
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	9
?charType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@_W@Z ENDP ; icu_56::PluralRuleParser::charType
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getKeyType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@ABVUnicodeString@2@W432@@Z
_TEXT	SEGMENT
_token$ = 8						; size = 4
_keyType$ = 12						; size = 4
?getKeyType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@ABVUnicodeString@2@W432@@Z PROC ; icu_56::PluralRuleParser::getKeyType, COMDAT
; Line 1303
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1304
	cmp	DWORD PTR _keyType$[ebp], 10		; 0000000aH
	je	SHORT $LN28@getKeyType
; Line 1305
	mov	eax, DWORD PTR _keyType$[ebp]
	jmp	$LN29@getKeyType
$LN28@getKeyType:
; Line 1308
	mov	esi, esp
	push	1
	push	OFFSET _PK_VAR_N
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN27@getKeyType
; Line 1309
	mov	DWORD PTR _keyType$[ebp], 21		; 00000015H
	jmp	$LN26@getKeyType
$LN27@getKeyType:
; Line 1310
	mov	esi, esp
	push	1
	push	OFFSET _PK_VAR_I
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN25@getKeyType
; Line 1311
	mov	DWORD PTR _keyType$[ebp], 22		; 00000016H
	jmp	$LN26@getKeyType
$LN25@getKeyType:
; Line 1312
	mov	esi, esp
	push	1
	push	OFFSET _PK_VAR_F
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN23@getKeyType
; Line 1313
	mov	DWORD PTR _keyType$[ebp], 23		; 00000017H
	jmp	$LN26@getKeyType
$LN23@getKeyType:
; Line 1314
	mov	esi, esp
	push	1
	push	OFFSET _PK_VAR_T
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN21@getKeyType
; Line 1315
	mov	DWORD PTR _keyType$[ebp], 25		; 00000019H
	jmp	$LN26@getKeyType
$LN21@getKeyType:
; Line 1316
	mov	esi, esp
	push	1
	push	OFFSET _PK_VAR_V
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN19@getKeyType
; Line 1317
	mov	DWORD PTR _keyType$[ebp], 24		; 00000018H
	jmp	$LN26@getKeyType
$LN19@getKeyType:
; Line 1318
	mov	esi, esp
	push	2
	push	OFFSET _PK_IS
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN17@getKeyType
; Line 1319
	mov	DWORD PTR _keyType$[ebp], 20		; 00000014H
	jmp	$LN26@getKeyType
$LN17@getKeyType:
; Line 1320
	mov	esi, esp
	push	3
	push	OFFSET _PK_AND
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN15@getKeyType
; Line 1321
	mov	DWORD PTR _keyType$[ebp], 11		; 0000000bH
	jmp	$LN26@getKeyType
$LN15@getKeyType:
; Line 1322
	mov	esi, esp
	push	2
	push	OFFSET _PK_IN
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@getKeyType
; Line 1323
	mov	DWORD PTR _keyType$[ebp], 15		; 0000000fH
	jmp	$LN26@getKeyType
$LN13@getKeyType:
; Line 1324
	mov	esi, esp
	push	6
	push	OFFSET _PK_WITHIN
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@getKeyType
; Line 1325
	mov	DWORD PTR _keyType$[ebp], 19		; 00000013H
	jmp	$LN26@getKeyType
$LN11@getKeyType:
; Line 1326
	mov	esi, esp
	push	3
	push	OFFSET _PK_NOT
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN9@getKeyType
; Line 1327
	mov	DWORD PTR _keyType$[ebp], 14		; 0000000eH
	jmp	$LN26@getKeyType
$LN9@getKeyType:
; Line 1328
	mov	esi, esp
	push	3
	push	OFFSET _PK_MOD
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@getKeyType
; Line 1329
	mov	DWORD PTR _keyType$[ebp], 13		; 0000000dH
	jmp	SHORT $LN26@getKeyType
$LN7@getKeyType:
; Line 1330
	mov	esi, esp
	push	2
	push	OFFSET _PK_OR
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@getKeyType
; Line 1331
	mov	DWORD PTR _keyType$[ebp], 12		; 0000000cH
	jmp	SHORT $LN26@getKeyType
$LN5@getKeyType:
; Line 1332
	mov	esi, esp
	push	7
	push	OFFSET _PK_DECIMAL
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@getKeyType
; Line 1333
	mov	DWORD PTR _keyType$[ebp], 26		; 0000001aH
	jmp	SHORT $LN26@getKeyType
$LN3@getKeyType:
; Line 1334
	mov	esi, esp
	push	7
	push	OFFSET _PK_INTEGER
	mov	ecx, DWORD PTR _token$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN26@getKeyType
; Line 1335
	mov	DWORD PTR _keyType$[ebp], 27		; 0000001bH
$LN26@getKeyType:
; Line 1337
	mov	eax, DWORD PTR _keyType$[ebp]
$LN29@getKeyType:
; Line 1338
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getKeyType@PluralRuleParser@icu_56@@CA?AW4tokenType@2@ABVUnicodeString@2@W432@@Z ENDP ; icu_56::PluralRuleParser::getKeyType
_TEXT	ENDS
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??_7PluralKeywordEnumeration@icu_56@@6B@	; icu_56::PluralKeywordEnumeration::`vftable'
PUBLIC	??_R4PluralKeywordEnumeration@icu_56@@6B@	; icu_56::PluralKeywordEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralKeywordEnumeration@icu_56@@@8	; icu_56::PluralKeywordEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3PluralKeywordEnumeration@icu_56@@8		; icu_56::PluralKeywordEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralKeywordEnumeration@icu_56@@8		; icu_56::PluralKeywordEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralKeywordEnumeration@icu_56@@8 ; icu_56::PluralKeywordEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?count@PluralKeywordEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::PluralKeywordEnumeration::count
PUBLIC	?snext@PluralKeywordEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PluralKeywordEnumeration::snext
PUBLIC	?reset@PluralKeywordEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z ; icu_56::PluralKeywordEnumeration::reset
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1StringEnumeration@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringEnumeration@icu_56@@IAE@XZ:PROC
EXTRN	??_EPluralKeywordEnumeration@icu_56@@UAEPAXI@Z:PROC ; icu_56::PluralKeywordEnumeration::`vector deleting destructor'
EXTRN	?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::next
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralKeywordEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralKeywordEnumeration@icu_56@@8 DD FLAT:??_R0?AVPluralKeywordEnumeration@icu_56@@@8 ; icu_56::PluralKeywordEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralKeywordEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralKeywordEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2PluralKeywordEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralKeywordEnumeration@icu_56@@8 ; icu_56::PluralKeywordEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralKeywordEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3PluralKeywordEnumeration@icu_56@@8 DD 00H		; icu_56::PluralKeywordEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PluralKeywordEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralKeywordEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralKeywordEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralKeywordEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralKeywordEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralKeywordEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralKeywordEnumeration@icu_56@@6B@ DD 00H	; icu_56::PluralKeywordEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralKeywordEnumeration@icu_56@@@8
	DD	FLAT:??_R3PluralKeywordEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT ??_7PluralKeywordEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7PluralKeywordEnumeration@icu_56@@6B@ DD FLAT:??_R4PluralKeywordEnumeration@icu_56@@6B@ ; icu_56::PluralKeywordEnumeration::`vftable'
	DD	FLAT:??_EPluralKeywordEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@PluralKeywordEnumeration@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:?count@PluralKeywordEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@PluralKeywordEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?reset@PluralKeywordEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$3
__ehfuncinfo$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv162 = -292						; size = 4
tv136 = -292						; size = 4
$T85194 = -284						; size = 4
$T85195 = -272						; size = 4
$T85198 = -260						; size = 4
$T85199 = -248						; size = 4
_node$ = -44						; size = 4
_addKeywordOther$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_header$ = 8						; size = 4
_status$ = 12						; size = 4
??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z PROC ; icu_56::PluralKeywordEnumeration::PluralKeywordEnumeration, COMDAT
; _this$ = ecx
; Line 1342
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0StringEnumeration@icu_56@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralKeywordEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1343
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@PluralKeyw
; Line 1344
	jmp	$LN7@PluralKeyw
$LN6@PluralKeyw:
; Line 1346
	mov	esi, esp
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	DWORD PTR __imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1347
	mov	BYTE PTR _addKeywordOther$[ebp], 1
; Line 1348
	mov	eax, DWORD PTR _header$[ebp]
	mov	DWORD PTR _node$[ebp], eax
$LN5@PluralKeyw:
; Line 1349
	cmp	DWORD PTR _node$[ebp], 0
	je	$LN4@PluralKeyw
; Line 1350
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85195[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T85195[ebp], 0
	je	SHORT $LN9@PluralKeyw
	mov	eax, DWORD PTR _node$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR $T85195[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T85195[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T85195[ebp]
	mov	DWORD PTR tv136[ebp], edx
	jmp	SHORT $LN10@PluralKeyw
$LN9@PluralKeyw:
	mov	DWORD PTR tv136[ebp], 0
$LN10@PluralKeyw:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR $T85194[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T85194[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1351
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@PluralKeyw
; Line 1352
	jmp	$LN7@PluralKeyw
$LN3@PluralKeyw:
; Line 1354
	mov	esi, esp
	push	5
	push	OFFSET _PLURAL_KEYWORD_OTHER
	mov	ecx, DWORD PTR _node$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@PluralKeyw
; Line 1355
	mov	BYTE PTR _addKeywordOther$[ebp], 0
$LN2@PluralKeyw:
; Line 1357
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _node$[ebp], ecx
; Line 1358
	jmp	$LN5@PluralKeyw
$LN4@PluralKeyw:
; Line 1360
	movsx	eax, BYTE PTR _addKeywordOther$[ebp]
	test	eax, eax
	je	$LN7@PluralKeyw
; Line 1361
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85199[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T85199[ebp], 0
	je	SHORT $LN11@PluralKeyw
	mov	esi, esp
	push	OFFSET _PLURAL_KEYWORD_OTHER
	mov	ecx, DWORD PTR $T85199[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T85199[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T85199[ebp]
	mov	DWORD PTR tv162[ebp], ecx
	jmp	SHORT $LN12@PluralKeyw
$LN11@PluralKeyw:
	mov	DWORD PTR tv162[ebp], 0
$LN12@PluralKeyw:
	mov	edx, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T85198[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T85198[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@PluralKeyw:
; Line 1363
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringEnumeration@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T85195[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T85199[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PluralKeywordEnumeration@icu_56@@QAE@PAVRuleChain@1@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralKeywordEnumeration::PluralKeywordEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@13
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@13:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1PluralKeywordEnumeration@icu_56@@UAE@XZ	; icu_56::PluralKeywordEnumeration::~PluralKeywordEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralKeywordEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralKeywordEnumeration@icu_56@@UAEPAXI@Z PROC	; icu_56::PluralKeywordEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralKeywordEnumeration@icu_56@@UAE@XZ ; icu_56::PluralKeywordEnumeration::~PluralKeywordEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@14
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@14:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralKeywordEnumeration@icu_56@@UAEPAXI@Z ENDP	; icu_56::PluralKeywordEnumeration::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?snext@PluralKeywordEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv80 = -208						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?snext@PluralKeywordEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralKeywordEnumeration::snext, COMDAT
; _this$ = ecx
; Line 1366
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1367
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@snext
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], eax
	jge	SHORT $LN1@snext
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+108], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@snext
$LN1@snext:
; Line 1370
	xor	eax, eax
$LN2@snext:
; Line 1371
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?snext@PluralKeywordEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralKeywordEnumeration::snext
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@PluralKeywordEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?reset@PluralKeywordEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z PROC ; icu_56::PluralKeywordEnumeration::reset, COMDAT
; _this$ = ecx
; Line 1374
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1375
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 1376
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@PluralKeywordEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z ENDP ; icu_56::PluralKeywordEnumeration::reset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?count@PluralKeywordEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?count@PluralKeywordEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z PROC ; icu_56::PluralKeywordEnumeration::count, COMDAT
; _this$ = ecx
; Line 1379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1380
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?count@PluralKeywordEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z ENDP ; icu_56::PluralKeywordEnumeration::count
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1PluralKeywordEnumeration@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PluralKeywordEnumeration@icu_56@@UAE@XZ$0
__ehfuncinfo$??1PluralKeywordEnumeration@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1PluralKeywordEnumeration@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1PluralKeywordEnumeration@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1PluralKeywordEnumeration@icu_56@@UAE@XZ PROC		; icu_56::PluralKeywordEnumeration::~PluralKeywordEnumeration, COMDAT
; _this$ = ecx
; Line 1383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PluralKeywordEnumeration@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralKeywordEnumeration@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1384
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringEnumeration@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1PluralKeywordEnumeration@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringEnumeration@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1PluralKeywordEnumeration@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PluralKeywordEnumeration@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PluralKeywordEnumeration@icu_56@@UAE@XZ ENDP		; icu_56::PluralKeywordEnumeration::~PluralKeywordEnumeration
EXTRN	?isNaNOrInfinity@VisibleDigits@icu_56@@QBECXZ:PROC ; icu_56::VisibleDigits::isNaNOrInfinity
EXTRN	?getFixedDecimal@VisibleDigits@icu_56@@QBEXAANAA_J11AAHAAC@Z:PROC ; icu_56::VisibleDigits::getFixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_digits$ = 8						; size = 4
??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z PROC	; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1386
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1390
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?getFixedDecimal@VisibleDigits@icu_56@@QBEXAANAA_J11AAHAAC@Z ; icu_56::VisibleDigits::getFixedDecimal
; Line 1391
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isNegative@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNegative
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+41], al
; Line 1392
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isNaNOrInfinity@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNaNOrInfinity
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+42], al
; Line 1393
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ENDP	; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	?init@FixedDecimal@icu_56@@QAEXNH_J@Z		; icu_56::FixedDecimal::init
PUBLIC	??0FixedDecimal@icu_56@@QAE@NH_J@Z		; icu_56::FixedDecimal::FixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@NH_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 8
_v$ = 16						; size = 4
_f$ = 20						; size = 8
??0FixedDecimal@icu_56@@QAE@NH_J@Z PROC			; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1395
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1396
	mov	eax, DWORD PTR _f$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1410
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0FixedDecimal@icu_56@@QAE@NH_J@Z ENDP			; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ; icu_56::FixedDecimal::getFractionalDigits
PUBLIC	??0FixedDecimal@icu_56@@QAE@NH@Z		; icu_56::FixedDecimal::FixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 8
_v$ = 16						; size = 4
??0FixedDecimal@icu_56@@QAE@NH@Z PROC			; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1414
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ; icu_56::FixedDecimal::getFractionalDigits
	add	esp, 12					; 0000000cH
	push	edx
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1415
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0FixedDecimal@icu_56@@QAE@NH@Z ENDP			; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	?init@FixedDecimal@icu_56@@QAEXN@Z		; icu_56::FixedDecimal::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 8
??0FixedDecimal@icu_56@@QAE@N@Z PROC			; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1417
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1418
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXN@Z	; icu_56::FixedDecimal::init
; Line 1419
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0FixedDecimal@icu_56@@QAE@N@Z ENDP			; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	??0FixedDecimal@icu_56@@QAE@XZ			; icu_56::FixedDecimal::FixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FixedDecimal@icu_56@@QAE@XZ PROC			; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1421
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1422
	push	0
	push	0
	push	0
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1423
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FixedDecimal@icu_56@@QAE@XZ ENDP			; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?getDouble@DigitList@icu_56@@QBENXZ:PROC	; icu_56::DigitList::getDouble
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
EXTRN	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z:PROC ; icu_56::DigitList::set
EXTRN	__imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ:PROC
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
EXTRN	__imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T85245 = -456						; size = 8
_v$76550 = -248						; size = 4
_n$ = -236						; size = 8
_decimalPoint$ = -220					; size = 4
_dl$ = -208						; size = 112
_cs$ = -88						; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_num$ = 8						; size = 4
_status$ = 12						; size = 4
??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1429
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1430
	mov	esi, esp
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1431
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _num$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_?appendInvariantChars@CharString@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1432
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1433
	push	0
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR $T85245[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _dl$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 1434
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@FixedDecim
; Line 1435
	push	0
	push	0
	push	0
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1436
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN4@FixedDecim
$LN3@FixedDecim:
; Line 1438
	mov	esi, esp
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _num$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decimalPoint$[ebp], eax
; Line 1439
	lea	ecx, DWORD PTR _dl$[ebp]
	call	?getDouble@DigitList@icu_56@@QBENXZ	; icu_56::DigitList::getDouble
	fstp	QWORD PTR _n$[ebp]
; Line 1440
	cmp	DWORD PTR _decimalPoint$[ebp], -1
	jne	SHORT $LN2@FixedDecim
; Line 1441
	push	0
	push	0
	push	0
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1442
	jmp	SHORT $LN1@FixedDecim
$LN2@FixedDecim:
; Line 1443
	mov	esi, esp
	mov	ecx, DWORD PTR _num$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _decimalPoint$[ebp]
	sub	eax, 1
	mov	DWORD PTR _v$76550[ebp], eax
; Line 1444
	mov	eax, DWORD PTR _v$76550[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ; icu_56::FixedDecimal::getFractionalDigits
	add	esp, 12					; 0000000cH
	push	edx
	push	eax
	mov	ecx, DWORD PTR _v$76550[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
$LN1@FixedDecim:
; Line 1446
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dl$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@FixedDecim:
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@FixedDecim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN12@FixedDecim:
	DD	2
	DD	$LN11@FixedDecim
$LN11@FixedDecim:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN8@FixedDecim
	DD	-208					; ffffff30H
	DD	112					; 00000070H
	DD	$LN9@FixedDecim
$LN9@FixedDecim:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	0
$LN8@FixedDecim:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _cs$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _dl$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FixedDecimal@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::FixedDecimal::FixedDecimal
PUBLIC	??0FixedDecimal@icu_56@@QAE@ABV01@@Z		; icu_56::FixedDecimal::FixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedDecimal@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0FixedDecimal@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FixedDecimal::FixedDecimal, COMDAT
; _this$ = ecx
; Line 1449
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	fld	QWORD PTR [ecx]
	fstp	QWORD PTR [eax]
; Line 1451
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 1452
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
; Line 1453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	ecx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], ecx
; Line 1454
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	ecx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], ecx
; Line 1455
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+40]
	mov	BYTE PTR [eax+40], dl
; Line 1456
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+41]
	mov	BYTE PTR [eax+41], dl
; Line 1457
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+42]
	mov	BYTE PTR [eax+42], dl
; Line 1458
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0FixedDecimal@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FixedDecimal::FixedDecimal
_TEXT	ENDS
PUBLIC	?decimals@FixedDecimal@icu_56@@SAHN@Z		; icu_56::FixedDecimal::decimals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@FixedDecimal@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_numFractionDigits$ = -20				; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 8
?init@FixedDecimal@icu_56@@QAEXN@Z PROC			; icu_56::FixedDecimal::init, COMDAT
; _this$ = ecx
; Line 1461
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1462
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	?decimals@FixedDecimal@icu_56@@SAHN@Z	; icu_56::FixedDecimal::decimals
	add	esp, 8
	mov	DWORD PTR _numFractionDigits$[ebp], eax
; Line 1463
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ; icu_56::FixedDecimal::getFractionalDigits
	add	esp, 12					; 0000000cH
	push	edx
	push	eax
	mov	ecx, DWORD PTR _numFractionDigits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
; Line 1464
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?init@FixedDecimal@icu_56@@QAEXN@Z ENDP			; icu_56::FixedDecimal::init
_TEXT	ENDS
EXTRN	_uprv_isPositiveInfinity_56:PROC
EXTRN	_uprv_isNaN_56:PROC
EXTRN	_fabs:PROC
EXTRN	__alldiv:PROC
EXTRN	__allrem:PROC
EXTRN	__ftol2:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@FixedDecimal@icu_56@@QAEXNH_J@Z
_TEXT	SEGMENT
tv201 = -228						; size = 8
tv90 = -221						; size = 1
tv78 = -221						; size = 1
tv66 = -221						; size = 1
_fdwtz$76571 = -24					; size = 8
_this$ = -8						; size = 4
_n$ = 8							; size = 8
_v$ = 16						; size = 4
_f$ = 20						; size = 8
?init@FixedDecimal@icu_56@@QAEXNH_J@Z PROC		; icu_56::FixedDecimal::init, COMDAT
; _this$ = ecx
; Line 1467
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1468
	fldz
	fcomp	QWORD PTR _n$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN9@init
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN10@init
$LN9@init:
	mov	BYTE PTR tv66[ebp], 0
$LN10@init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR tv66[ebp]
	mov	BYTE PTR [eax+41], cl
; Line 1469
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	mov	eax, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [eax]
; Line 1470
	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax]
	fstp	QWORD PTR [esp]
	call	_uprv_isNaN_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@init
	mov	edx, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [edx]
	fstp	QWORD PTR [esp]
	call	_uprv_isPositiveInfinity_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@init
	mov	BYTE PTR tv78[ebp], 0
	jmp	SHORT $LN12@init
$LN11@init:
	mov	BYTE PTR tv78[ebp], 1
$LN12@init:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR tv78[ebp]
	mov	BYTE PTR [ecx+42], dl
; Line 1471
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+42]
	test	ecx, ecx
	je	SHORT $LN6@init
; Line 1472
	mov	DWORD PTR _v$[ebp], 0
; Line 1473
	mov	DWORD PTR _f$[ebp], 0
	mov	DWORD PTR _f$[ebp+4], 0
; Line 1474
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	DWORD PTR [eax+36], 0
; Line 1475
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0
; Line 1476
	jmp	SHORT $LN5@init
$LN6@init:
; Line 1477
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax]
	call	__ftol2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
	mov	DWORD PTR [ecx+36], edx
; Line 1478
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	QWORD PTR [ecx]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN13@init
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN14@init
$LN13@init:
	mov	BYTE PTR tv90[ebp], 0
$LN14@init:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv90[ebp]
	mov	BYTE PTR [edx+40], al
$LN5@init:
; Line 1481
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1482
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _f$[ebp+4]
	mov	DWORD PTR [eax+20], edx
; Line 1483
	mov	eax, DWORD PTR _f$[ebp]
	or	eax, DWORD PTR _f$[ebp+4]
	jne	SHORT $LN4@init
; Line 1484
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 1485
	jmp	SHORT $LN3@init
$LN4@init:
; Line 1486
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR _fdwtz$76571[ebp], eax
	mov	ecx, DWORD PTR _f$[ebp+4]
	mov	DWORD PTR _fdwtz$76571[ebp+4], ecx
$LN2@init:
; Line 1487
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _fdwtz$76571[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _fdwtz$76571[ebp]
	push	ecx
	call	__allrem
	mov	DWORD PTR tv201[ebp], eax
	mov	DWORD PTR tv201[ebp+4], edx
	mov	edx, DWORD PTR tv201[ebp]
	or	edx, DWORD PTR tv201[ebp+4]
	jne	SHORT $LN1@init
; Line 1488
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _fdwtz$76571[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _fdwtz$76571[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _fdwtz$76571[ebp], eax
	mov	DWORD PTR _fdwtz$76571[ebp+4], edx
; Line 1489
	jmp	SHORT $LN2@init
$LN1@init:
; Line 1490
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fdwtz$76571[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _fdwtz$76571[ebp+4]
	mov	DWORD PTR [eax+28], edx
$LN3@init:
; Line 1492
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?init@FixedDecimal@icu_56@@QAEXNH_J@Z ENDP		; icu_56::FixedDecimal::init
_TEXT	ENDS
PUBLIC	?quickInit@FixedDecimal@icu_56@@QAECN@Z		; icu_56::FixedDecimal::quickInit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?quickInit@FixedDecimal@icu_56@@QAECN@Z
_TEXT	SEGMENT
_scaledN$76585 = -48					; size = 8
_numFractionDigits$ = -32				; size = 4
_success$ = -17						; size = 1
_this$ = -8						; size = 4
_n$ = 8							; size = 8
?quickInit@FixedDecimal@icu_56@@QAECN@Z PROC		; icu_56::FixedDecimal::quickInit, COMDAT
; _this$ = ecx
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1501
	mov	BYTE PTR _success$[ebp], 0
; Line 1502
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR _n$[ebp]
; Line 1504
	mov	DWORD PTR _numFractionDigits$[ebp], 0
	jmp	SHORT $LN5@quickInit
$LN4@quickInit:
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	add	eax, 1
	mov	DWORD PTR _numFractionDigits$[ebp], eax
$LN5@quickInit:
	cmp	DWORD PTR _numFractionDigits$[ebp], 3
	jg	SHORT $LN3@quickInit
; Line 1505
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	fild	DWORD PTR _p10[eax*4]
	fmul	QWORD PTR _n$[ebp]
	fstp	QWORD PTR _scaledN$76585[ebp]
; Line 1506
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _scaledN$76585[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _scaledN$76585[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@quickInit
; Line 1507
	mov	BYTE PTR _success$[ebp], 1
; Line 1508
	jmp	SHORT $LN3@quickInit
$LN2@quickInit:
; Line 1510
	jmp	SHORT $LN4@quickInit
$LN3@quickInit:
; Line 1511
	movsx	eax, BYTE PTR _success$[ebp]
	test	eax, eax
	je	SHORT $LN1@quickInit
; Line 1512
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ; icu_56::FixedDecimal::getFractionalDigits
	add	esp, 12					; 0000000cH
	push	edx
	push	eax
	mov	ecx, DWORD PTR _numFractionDigits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@FixedDecimal@icu_56@@QAEXNH_J@Z	; icu_56::FixedDecimal::init
$LN1@quickInit:
; Line 1514
	mov	al, BYTE PTR _success$[ebp]
; Line 1515
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?quickInit@FixedDecimal@icu_56@@QAECN@Z ENDP		; icu_56::FixedDecimal::quickInit
_TEXT	ENDS
PUBLIC	??_C@_06DMHMFEIK@?$CF1?415e?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__sprintf:PROC
;	COMDAT ??_C@_06DMHMFEIK@?$CF1?415e?$AA@
CONST	SEGMENT
??_C@_06DMHMFEIK@?$CF1?415e?$AA@ DB '%1.15e', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?decimals@FixedDecimal@icu_56@@SAHN@Z
_TEXT	SEGMENT
_i$76601 = -104						; size = 4
_numFractionDigits$ = -92				; size = 4
_exponent$ = -80					; size = 4
_buf$ = -68						; size = 30
_scaledN$76595 = -28					; size = 8
_ndigits$76591 = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_n$ = 8							; size = 8
?decimals@FixedDecimal@icu_56@@SAHN@Z PROC		; icu_56::FixedDecimal::decimals, COMDAT
; Line 1519
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1522
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR _n$[ebp]
; Line 1523
	mov	DWORD PTR _ndigits$76591[ebp], 0
	jmp	SHORT $LN8@decimals
$LN7@decimals:
	mov	eax, DWORD PTR _ndigits$76591[ebp]
	add	eax, 1
	mov	DWORD PTR _ndigits$76591[ebp], eax
$LN8@decimals:
	cmp	DWORD PTR _ndigits$76591[ebp], 3
	jg	SHORT $LN6@decimals
; Line 1524
	mov	eax, DWORD PTR _ndigits$76591[ebp]
	fild	DWORD PTR _p10[eax*4]
	fmul	QWORD PTR _n$[ebp]
	fstp	QWORD PTR _scaledN$76595[ebp]
; Line 1525
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _scaledN$76595[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _scaledN$76595[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@decimals
; Line 1526
	mov	eax, DWORD PTR _ndigits$76591[ebp]
	jmp	$LN9@decimals
$LN5@decimals:
; Line 1528
	jmp	SHORT $LN7@decimals
$LN6@decimals:
; Line 1531
	mov	BYTE PTR _buf$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _buf$[ebp+1], eax
	mov	DWORD PTR _buf$[ebp+5], eax
	mov	DWORD PTR _buf$[ebp+9], eax
	mov	DWORD PTR _buf$[ebp+13], eax
	mov	DWORD PTR _buf$[ebp+17], eax
	mov	DWORD PTR _buf$[ebp+21], eax
	mov	DWORD PTR _buf$[ebp+25], eax
	mov	BYTE PTR _buf$[ebp+29], al
; Line 1532
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_06DMHMFEIK@?$CF1?415e?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1534
	lea	eax, DWORD PTR _buf$[ebp+18]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _exponent$[ebp], eax
; Line 1535
	mov	DWORD PTR _numFractionDigits$[ebp], 15	; 0000000fH
; Line 1536
	mov	DWORD PTR _i$76601[ebp], 16		; 00000010H
	jmp	SHORT $LN4@decimals
$LN3@decimals:
	mov	eax, DWORD PTR _i$76601[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$76601[ebp], eax
$LN4@decimals:
; Line 1537
	mov	eax, DWORD PTR _i$76601[ebp]
	movsx	ecx, BYTE PTR _buf$[ebp+eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN1@decimals
; Line 1538
	jmp	SHORT $LN2@decimals
$LN1@decimals:
; Line 1540
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	sub	eax, 1
	mov	DWORD PTR _numFractionDigits$[ebp], eax
; Line 1541
	jmp	SHORT $LN3@decimals
$LN2@decimals:
; Line 1542
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
	sub	eax, DWORD PTR _exponent$[ebp]
	mov	DWORD PTR _numFractionDigits$[ebp], eax
; Line 1543
	mov	eax, DWORD PTR _numFractionDigits$[ebp]
$LN9@decimals:
; Line 1544
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@decimals
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@decimals:
	DD	1
	DD	$LN12@decimals
$LN12@decimals:
	DD	-68					; ffffffbcH
	DD	30					; 0000001eH
	DD	$LN11@decimals
$LN11@decimals:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?decimals@FixedDecimal@icu_56@@SAHN@Z ENDP		; icu_56::FixedDecimal::decimals
_TEXT	ENDS
PUBLIC	__real@43e0000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@3fe0000000000000
EXTRN	_pow:PROC
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+018
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z
_TEXT	SEGMENT
tv81 = -228						; size = 4
_scaled$76624 = -28					; size = 8
_fract$ = -12						; size = 8
_n$ = 8							; size = 8
_v$ = 16						; size = 4
?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z PROC	; icu_56::FixedDecimal::getFractionalDigits, COMDAT
; Line 1554
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1555
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN9@getFractio
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR _n$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN9@getFractio
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_isNaN_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN9@getFractio
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_isPositiveInfinity_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN10@getFractio
$LN9@getFractio:
; Line 1556
	xor	eax, eax
	xor	edx, edx
	jmp	$LN7@getFractio
$LN10@getFractio:
; Line 1558
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR _n$[ebp]
; Line 1559
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _n$[ebp]
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fsubr	QWORD PTR _n$[ebp]
	fstp	QWORD PTR _fract$[ebp]
; Line 1560
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN6@getFractio
	cmp	DWORD PTR tv81[ebp], 2
	je	SHORT $LN5@getFractio
	cmp	DWORD PTR tv81[ebp], 3
	je	SHORT $LN4@getFractio
	jmp	SHORT $LN3@getFractio
$LN6@getFractio:
; Line 1561
	fld	QWORD PTR _fract$[ebp]
	fmul	QWORD PTR __real@4024000000000000
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2
	jmp	$LN7@getFractio
$LN5@getFractio:
; Line 1562
	fld	QWORD PTR _fract$[ebp]
	fmul	QWORD PTR __real@4059000000000000
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2
	jmp	SHORT $LN7@getFractio
$LN4@getFractio:
; Line 1563
	fld	QWORD PTR _fract$[ebp]
	fmul	QWORD PTR __real@408f400000000000
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2
	jmp	SHORT $LN7@getFractio
$LN3@getFractio:
; Line 1565
	fild	DWORD PTR _v$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR [esp]
	call	_pow
	add	esp, 16					; 00000010H
	fmul	QWORD PTR _fract$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__floor
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _scaled$76624[ebp]
; Line 1566
	fld	QWORD PTR __real@43e0000000000000
	fcomp	QWORD PTR _scaled$76624[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@getFractio
; Line 1567
	mov	eax, -1
	mov	edx, 2147483647				; 7fffffffH
	jmp	SHORT $LN7@getFractio
; Line 1568
	jmp	SHORT $LN1@getFractio
$LN2@getFractio:
; Line 1569
	fld	QWORD PTR _scaled$76624[ebp]
	call	__ftol2
$LN1@getFractio:
$LN7@getFractio:
; Line 1572
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFractionalDigits@FixedDecimal@icu_56@@SA_JNH@Z ENDP	; icu_56::FixedDecimal::getFractionalDigits
_TEXT	ENDS
PUBLIC	?adjustForMinFractionDigits@FixedDecimal@icu_56@@QAEXH@Z ; icu_56::FixedDecimal::adjustForMinFractionDigits
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adjustForMinFractionDigits@FixedDecimal@icu_56@@QAEXH@Z
_TEXT	SEGMENT
tv83 = -232						; size = 4
_i$76637 = -32						; size = 4
_numTrailingFractionZeros$ = -20			; size = 4
_this$ = -8						; size = 4
_minFractionDigits$ = 8					; size = 4
?adjustForMinFractionDigits@FixedDecimal@icu_56@@QAEXH@Z PROC ; icu_56::FixedDecimal::adjustForMinFractionDigits, COMDAT
; _this$ = ecx
; Line 1575
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1576
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minFractionDigits$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _numTrailingFractionZeros$[ebp], ecx
; Line 1577
	cmp	DWORD PTR _numTrailingFractionZeros$[ebp], 0
	jle	SHORT $LN6@adjustForM
; Line 1578
	mov	DWORD PTR _i$76637[ebp], 0
	jmp	SHORT $LN4@adjustForM
$LN3@adjustForM:
	mov	eax, DWORD PTR _i$76637[ebp]
	add	eax, 1
	mov	DWORD PTR _i$76637[ebp], eax
$LN4@adjustForM:
	mov	eax, DWORD PTR _i$76637[ebp]
	cmp	eax, DWORD PTR _numTrailingFractionZeros$[ebp]
	jge	SHORT $LN2@adjustForM
; Line 1581
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	cmp	DWORD PTR [ecx+20], 23283064		; 01634578H
	jl	SHORT $LN1@adjustForM
	jg	SHORT $LN8@adjustForM
	mov	edx, DWORD PTR tv83[ebp]
	cmp	DWORD PTR [edx+16], 1569325056		; 5d8a0000H
	jb	SHORT $LN1@adjustForM
$LN8@adjustForM:
; Line 1582
	jmp	SHORT $LN2@adjustForM
$LN1@adjustForM:
; Line 1584
	mov	eax, DWORD PTR _this$[ebp]
	push	0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	call	__allmul
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx
; Line 1585
	jmp	SHORT $LN3@adjustForM
$LN2@adjustForM:
; Line 1586
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR _numTrailingFractionZeros$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@adjustForM:
; Line 1588
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adjustForMinFractionDigits@FixedDecimal@icu_56@@QAEXH@Z ENDP ; icu_56::FixedDecimal::adjustForMinFractionDigits
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??get@FixedDecimal@icu_56@@QBENW4tokenType@3@@Z@4JA ; `icu_56::FixedDecimal::get'::`2'::__LINE__Var
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??get@FixedDecimal@icu_56@@QBENW4tokenType@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??get@FixedDecimal@icu_56@@QBENW4tokenType@3@@Z@4JA DD 0637H ; `icu_56::FixedDecimal::get'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?get@FixedDecimal@icu_56@@QBENW4tokenType@2@@Z
_TEXT	SEGMENT
tv64 = -208						; size = 4
_this$ = -8						; size = 4
_operand$ = 8						; size = 4
?get@FixedDecimal@icu_56@@QBENW4tokenType@2@@Z PROC	; icu_56::FixedDecimal::get, COMDAT
; _this$ = ecx
; Line 1591
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1592
	mov	eax, DWORD PTR _operand$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 21					; 00000015H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 4
	ja	SHORT $LN1@get
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@get[edx*4]
$LN6@get:
; Line 1593
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax]
	jmp	SHORT $LN7@get
$LN5@get:
; Line 1594
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+32]
	jmp	SHORT $LN7@get
$LN4@get:
; Line 1595
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+16]
	jmp	SHORT $LN7@get
$LN3@get:
; Line 1596
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+24]
	jmp	SHORT $LN7@get
$LN2@get:
; Line 1597
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+8]
	jmp	SHORT $LN7@get
$LN1@get:
; Line 1599
	xor	eax, eax
	jne	SHORT $LN11@get
	mov	ecx, DWORD PTR ?__LINE__Var@?1??get@FixedDecimal@icu_56@@QBENW4tokenType@3@@Z@4JA
	add	ecx, 8
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@HPFMGEI@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@get:
; Line 1600
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax]
$LN7@get:
; Line 1602
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN12@get:
	DD	$LN6@get
	DD	$LN5@get
	DD	$LN4@get
	DD	$LN2@get
	DD	$LN3@get
?get@FixedDecimal@icu_56@@QBENW4tokenType@2@@Z ENDP	; icu_56::FixedDecimal::get
_TEXT	ENDS
PUBLIC	?getVisibleFractionDigitCount@FixedDecimal@icu_56@@QBEHXZ ; icu_56::FixedDecimal::getVisibleFractionDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getVisibleFractionDigitCount@FixedDecimal@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getVisibleFractionDigitCount@FixedDecimal@icu_56@@QBEHXZ PROC ; icu_56::FixedDecimal::getVisibleFractionDigitCount, COMDAT
; _this$ = ecx
; Line 1604
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1605
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 1606
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getVisibleFractionDigitCount@FixedDecimal@icu_56@@QBEHXZ ENDP ; icu_56::FixedDecimal::getVisibleFractionDigitCount
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_rb$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration, COMDAT
; _this$ = ecx
; Line 1610
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0StringEnumeration@icu_56@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
; Line 1611
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 1612
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 1613
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+108], edx
; Line 1614
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@PluralAvai
; Line 1615
	jmp	SHORT $LN2@PluralAvai
$LN1@PluralAvai:
; Line 1617
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 1618
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	push	OFFSET ??_C@_07GECDDAFN@plurals?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??0LocalUResourceBundlePointer@icu_56@@QAE@PAUUResourceBundle@@@Z ; icu_56::LocalUResourceBundlePointer::LocalUResourceBundlePointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1619
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	push	0
	push	OFFSET ??_C@_07HBKLOBCC@locales?$AA@
	lea	ecx, DWORD PTR _rb$[ebp]
	call	?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
	push	eax
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], eax
; Line 1620
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _rb$[ebp]
	call	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
$LN2@PluralAvai:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@PluralAvai
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@PluralAvai:
	DD	1
	DD	$LN8@PluralAvai
$LN8@PluralAvai:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@PluralAvai
$LN6@PluralAvai:
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringEnumeration@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _rb$[ebp]
	jmp	??1LocalUResourceBundlePointer@icu_56@@QAE@XZ ; icu_56::LocalUResourceBundlePointer::~LocalUResourceBundlePointer
__ehhandler$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ PROC ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration, COMDAT
; _this$ = ecx
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 1624
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	call	_ures_close_56
	add	esp, 4
; Line 1625
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 1626
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 1627
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1StringEnumeration@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ENDP ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
_TEXT	ENDS
EXTRN	_strlen:PROC
EXTRN	_ures_getKey_56:PROC
EXTRN	_ures_getNextResource_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_resultLength$ = 8					; size = 4
_status$ = 12						; size = 4
?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::next, COMDAT
; _this$ = ecx
; Line 1629
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1630
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@next
; Line 1631
	xor	eax, eax
	jmp	$LN7@next
$LN6@next:
; Line 1633
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@next
; Line 1634
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax], edx
; Line 1635
	xor	eax, eax
	jmp	SHORT $LN7@next
$LN5@next:
; Line 1637
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], eax
; Line 1638
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN3@next
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@next
$LN3@next:
; Line 1639
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 8
	jne	SHORT $LN2@next
; Line 1640
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@next:
; Line 1642
	xor	eax, eax
	jmp	SHORT $LN7@next
$LN4@next:
; Line 1644
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 1645
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@next
; Line 1646
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@next:
; Line 1648
	mov	eax, DWORD PTR _result$[ebp]
$LN7@next:
; Line 1649
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::next
_TEXT	ENDS
EXTRN	_ures_resetIterator_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::reset, COMDAT
; _this$ = ecx
; Line 1652
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1653
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@reset
; Line 1654
	jmp	SHORT $LN3@reset
$LN2@reset:
; Line 1656
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@reset
; Line 1657
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax], edx
; Line 1658
	jmp	SHORT $LN3@reset
$LN1@reset:
; Line 1660
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_ures_resetIterator_56
	add	esp, 4
$LN3@reset:
; Line 1661
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::reset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::count, COMDAT
; _this$ = ecx
; Line 1663
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1664
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@count
; Line 1665
	xor	eax, eax
	jmp	SHORT $LN3@count
$LN2@count:
; Line 1667
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@count
; Line 1668
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax], edx
; Line 1669
	xor	eax, eax
	jmp	SHORT $LN3@count
$LN1@count:
; Line 1671
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_ures_getSize_56
	add	esp, 4
$LN3@count:
; Line 1672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::count
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z PROC ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@PAUUResourceBundle@@@Z ENDP ; icu_56::LocalPointerBase<UResourceBundle>::LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@UUResourceBundle@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<UResourceBundle>::~LocalPointerBase<UResourceBundle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ PROC ; icu_56::LocalPointerBase<UResourceBundle>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@UUResourceBundle@@@icu_56@@QBEPAUUResourceBundle@@XZ ENDP ; icu_56::LocalPointerBase<UResourceBundle>::getAlias
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::LocalPointerBase<icu_56::StringEnumeration>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z PROC ; icu_56::LocalPointer<icu_56::StringEnumeration>::LocalPointer<icu_56::StringEnumeration>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::LocalPointerBase<icu_56::StringEnumeration>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ENDP ; icu_56::LocalPointer<icu_56::StringEnumeration>::LocalPointer<icu_56::StringEnumeration>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::~LocalPointerBase<icu_56::StringEnumeration>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T85396 = -236						; size = 4
$T85397 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T85397[ebp], ecx
	mov	edx, DWORD PTR $T85397[ebp]
	mov	DWORD PTR $T85396[ebp], edx
	cmp	DWORD PTR $T85396[ebp], 0
	je	SHORT $LN3@LocalPoint
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T85396[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T85396[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::~LocalPointerBase<icu_56::StringEnumeration>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::~LocalPointerBase<icu_56::StringEnumeration>
__ehhandler$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::StringEnumeration>::~LocalPointer<icu_56::StringEnumeration>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QBEPAVStringEnumeration@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::LocalPointerBase<icu_56::StringEnumeration>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@PAVStringEnumeration@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::LocalPointerBase<icu_56::StringEnumeration>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::~LocalPointerBase<icu_56::StringEnumeration>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VStringEnumeration@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::StringEnumeration>::~LocalPointerBase<icu_56::StringEnumeration>
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$80935 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$80935[ebp], eax
; Line 597
	cmp	DWORD PTR _p$80935[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$80935[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$80935[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$80935[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
PUBLIC	??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>
PUBLIC	??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
PUBLIC	??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
PUBLIC	__$ArrayPad$
EXTRN	__imp_?getInstance@UnifiedCache@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\unifiedcache.h
xdata$x	SEGMENT
__unwindtable$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv84 = -452						; size = 4
tv85 = -448						; size = 4
$T80974 = -440						; size = 216
_cache$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_loc$ = 8						; size = 4
_ptr$ = 12						; size = 4
_status$ = 16						; size = 4
??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z PROC ; icu_56::UnifiedCache::getByLocale<icu_56::SharedPluralRules>, COMDAT
; Line 267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 440				; 000001b8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 268
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	DWORD PTR __imp_?getInstance@UnifiedCache@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _cache$[ebp], eax
; Line 269
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getByLocal
; Line 270
	jmp	SHORT $LN2@getByLocal
$LN1@getByLocal:
; Line 272
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loc$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T80974[ebp]
	call	??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
	mov	DWORD PTR tv85[ebp], eax
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv84[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cache$[ebp]
	call	??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T80974[ebp]
	call	??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>
$LN2@getByLocal:
; Line 273
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR $T80974[ebp]
	jmp	??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>
__ehhandler$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-456]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$getByLocale@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@SAXABVLocale@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ENDP ; icu_56::UnifiedCache::getByLocale<icu_56::SharedPluralRules>
PUBLIC	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
PUBLIC	??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`vftable'
PUBLIC	??_R4?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules> `RTTI Type Descriptor'
PUBLIC	??_R3?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules> `RTTI Type Descriptor'
PUBLIC	??_R3?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CacheKeyBase@icu_56@@8		; icu_56::CacheKeyBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCacheKeyBase@icu_56@@@8			; icu_56::CacheKeyBase `RTTI Type Descriptor'
PUBLIC	??_R3CacheKeyBase@icu_56@@8			; icu_56::CacheKeyBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CacheKeyBase@icu_56@@8			; icu_56::CacheKeyBase::`RTTI Base Class Array'
PUBLIC	?hashCode@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::hashCode
PUBLIC	?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::clone
PUBLIC	??8?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::operator==
PUBLIC	?writeDescription@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::writeDescription
EXTRN	??_E?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z:PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`vector deleting destructor'
;	COMDAT ??_R2CacheKeyBase@icu_56@@8
rdata$r	SEGMENT
??_R2CacheKeyBase@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CacheKeyBase@icu_56@@8 ; icu_56::CacheKeyBase::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CacheKeyBase@icu_56@@8
rdata$r	SEGMENT
??_R3CacheKeyBase@icu_56@@8 DD 00H			; icu_56::CacheKeyBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CacheKeyBase@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCacheKeyBase@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCacheKeyBase@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CacheKeyBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCacheKeyBase@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CacheKeyBase@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CacheKeyBase@icu_56@@8 DD FLAT:??_R0?AVCacheKeyBase@icu_56@@@8 ; icu_56::CacheKeyBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CacheKeyBase@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R2?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD FLAT:??_R1A@?0A@EA@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CacheKeyBase@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R3?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD 00H ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8
_DATA	SEGMENT
??_R0?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CacheKey<icu_56::SharedPluralRules> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD FLAT:??_R0?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD FLAT:??_R0?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R2?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD FLAT:??_R1A@?0A@EA@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@CacheKeyBase@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	SEGMENT
??_R3?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8 DD 00H ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8
_DATA	SEGMENT
??_R0?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@'
	DB	'@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
rdata$r	SEGMENT
??_R4?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ DD 00H ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8
	DD	FLAT:??_R3?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
CONST	SEGMENT
??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ DD FLAT:??_R4?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`vftable'
	DD	FLAT:??_E?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?hashCode@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ
	DD	FLAT:?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ
	DD	FLAT:??8?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z
	DD	FLAT:?createObject@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPBVSharedPluralRules@2@PBXAAW4UErrorCode@@@Z
	DD	FLAT:?writeDescription@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ$0
__ehfuncinfo$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
__ehhandler$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>
PUBLIC	?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::hashCode
EXTRN	__imp_?hashCode@Locale@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?hashCode@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::hashCode, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::hashCode
	mov	esi, eax
	imul	esi, 37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edi, esp
	call	DWORD PTR __imp_?hashCode@Locale@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, esi
; Line 144
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::hashCode
_TEXT	ENDS
PUBLIC	??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z ; icu_56::CacheKey<icu_56::SharedPluralRules>::operator==
EXTRN	__imp_??8Locale@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z
_TEXT	SEGMENT
_fOther$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::operator==, COMDAT
; _this$ = ecx
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN2@operator@4
; Line 148
	mov	al, 1
	jmp	SHORT $LN3@operator@4
$LN2@operator@4:
; Line 150
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z ; icu_56::CacheKey<icu_56::SharedPluralRules>::operator==
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@operator@4
; Line 151
	xor	al, al
	jmp	SHORT $LN3@operator@4
$LN1@operator@4:
; Line 156
	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR _fOther$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _fOther$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??8Locale@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@operator@4:
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::operator==
_TEXT	ENDS
PUBLIC	??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ$0
__ehfuncinfo$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T85443 = -236						; size = 4
$T85444 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::clone, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	esi, esp
	push	216					; 000000d8H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T85444[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T85444[ebp], 0
	je	SHORT $LN3@clone@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T85444[ebp]
	call	??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone@2
$LN3@clone@2:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone@2:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T85443[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T85443[ebp]
; Line 161
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T85444[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPAVCacheKeyBase@2@XZ ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::clone
EXTRN	__imp__strncpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeDescription@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z
_TEXT	SEGMENT
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_buffer$ = 8						; size = 4
_bufLen$ = 12						; size = 4
?writeDescription@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::writeDescription, COMDAT
; _this$ = ecx
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 169
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _bufLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 170
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _bufLen$[ebp]
	mov	BYTE PTR [eax-1], 0
; Line 171
	mov	eax, DWORD PTR _buffer$[ebp]
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeDescription@?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::writeDescription
_TEXT	ENDS
PUBLIC	??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::CacheKey<icu_56::SharedPluralRules>::`vftable'
PUBLIC	??_R4?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Complete Object Locator'
PUBLIC	?writeDescription@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z ; icu_56::CacheKey<icu_56::SharedPluralRules>::writeDescription
EXTRN	__imp_??1CacheKeyBase@icu_56@@UAE@XZ:PROC
EXTRN	??_E?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z:PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::`vector deleting destructor'
;	COMDAT ??_R4?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
rdata$r	SEGMENT
??_R4?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ DD 00H ; icu_56::CacheKey<icu_56::SharedPluralRules>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@@8
	DD	FLAT:??_R3?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
CONST	SEGMENT
??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ DD FLAT:??_R4?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@ ; icu_56::CacheKey<icu_56::SharedPluralRules>::`vftable'
	DD	FLAT:??_E?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ
	DD	FLAT:__purecall
	DD	FLAT:??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z
	DD	FLAT:__purecall
	DD	FLAT:?writeDescription@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CacheKeyBase@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
_TEXT	ENDS
EXTRN	_ustr_hashCharsN_56:PROC
EXTRN	__imp_?name@type_info@@QBEPBDPAU__type_info_node@@@Z:PROC
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:QWORD ; __type_info_root_node
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ
_TEXT	SEGMENT
_s$ = -20						; size = 4
_this$ = -8						; size = 4
?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::hashCode, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	esi, esp
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AVSharedPluralRules@icu_56@@@8
	call	DWORD PTR __imp_?name@type_info@@QBEPBDPAU__type_info_node@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_ustr_hashCharsN_56
	add	esp, 8
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hashCode@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEHXZ ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::hashCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?writeDescription@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z
_TEXT	SEGMENT
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_buffer$ = 8						; size = 4
_bufLen$ = 12						; size = 4
?writeDescription@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::writeDescription, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 115
	mov	esi, esp
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	ecx, OFFSET ??_R0?AVSharedPluralRules@icu_56@@@8
	call	DWORD PTR __imp_?name@type_info@@QBEPBDPAU__type_info_node@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 116
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _bufLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 117
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _bufLen$[ebp]
	mov	BYTE PTR [eax-1], 0
; Line 118
	mov	eax, DWORD PTR _buffer$[ebp]
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeDescription@?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBEPADPADH@Z ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::writeDescription
_TEXT	ENDS
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::operator==, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UBECABVCacheKeyBase@1@@Z ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_G?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::~LocaleCacheKey<icu_56::SharedPluralRules>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@15
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@15:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_G?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@16
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@16:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAEPAXI@Z ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
__ehhandler$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
EXTRN	__imp_??0CacheKeyBase@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0CacheKeyBase@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>
_TEXT	ENDS
PUBLIC	??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z$0
__ehfuncinfo$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_loc$ = 8						; size = 4
??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z PROC ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _loc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@UAE@XZ ; icu_56::CacheKey<icu_56::SharedPluralRules>::~CacheKey<icu_56::SharedPluralRules>
__ehhandler$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocaleCacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@ABVLocale@1@@Z ENDP ; icu_56::LocaleCacheKey<icu_56::SharedPluralRules>::LocaleCacheKey<icu_56::SharedPluralRules>
EXTRN	__imp_??0CacheKeyBase@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0CacheKeyBase@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CacheKey@VSharedPluralRules@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::CacheKey<icu_56::SharedPluralRules>::CacheKey<icu_56::SharedPluralRules>
_TEXT	ENDS
PUBLIC	??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@PBXAAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_ptr$ = 12						; size = 4
_status$ = 16						; size = 4
??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z PROC ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@PBXAAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@AAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ENDP ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
_TEXT	ENDS
PUBLIC	??$clearPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXAAPBVSharedPluralRules@1@@Z ; icu_56::SharedObject::clearPtr<icu_56::SharedPluralRules>
PUBLIC	??$copyPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXPBVSharedPluralRules@1@AAPBV21@@Z ; icu_56::SharedObject::copyPtr<icu_56::SharedPluralRules>
EXTRN	__imp_?_get@UnifiedCache@icu_56@@ABEXABVCacheKeyBase@2@AAPBVSharedObject@2@PBXAAW4UErrorCode@@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@PBXAAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_tvalue$ = -44						; size = 4
_value$ = -32						; size = 4
_creationStatus$ = -20					; size = 4
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_creationContext$ = 12					; size = 4
_ptr$ = 16						; size = 4
_status$ = 20						; size = 4
??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@PBXAAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z PROC ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@get@2
; Line 228
	jmp	$LN5@get@2
$LN4@get@2:
; Line 230
	mov	DWORD PTR _creationStatus$[ebp], 0
; Line 231
	mov	DWORD PTR _value$[ebp], 0
; Line 232
	mov	esi, esp
	lea	eax, DWORD PTR _creationStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _creationContext$[ebp]
	push	ecx
	lea	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_get@UnifiedCache@icu_56@@ABEXABVCacheKeyBase@2@AAPBVSharedObject@2@PBXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 233
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _tvalue$[ebp], eax
; Line 234
	mov	eax, DWORD PTR _creationStatus$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@get@2
; Line 235
	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tvalue$[ebp]
	push	ecx
	call	??$copyPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXPBVSharedPluralRules@1@AAPBV21@@Z ; icu_56::SharedObject::copyPtr<icu_56::SharedPluralRules>
	add	esp, 8
$LN3@get@2:
; Line 237
	lea	eax, DWORD PTR _tvalue$[ebp]
	push	eax
	call	??$clearPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXAAPBVSharedPluralRules@1@@Z ; icu_56::SharedObject::clearPtr<icu_56::SharedPluralRules>
	add	esp, 4
; Line 240
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@get@2
	mov	eax, DWORD PTR _creationStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@get@2
$LN1@get@2:
; Line 241
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _creationStatus$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@get@2:
; Line 243
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@get@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@get@2:
	DD	3
	DD	$LN10@get@2
$LN10@get@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@get@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@get@2
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN9@get@2
$LN9@get@2:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN8@get@2:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN7@get@2:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
??$get@VSharedPluralRules@icu_56@@@UnifiedCache@icu_56@@QBEXABV?$CacheKey@VSharedPluralRules@icu_56@@@1@PBXAAPBVSharedPluralRules@1@AAW4UErrorCode@@@Z ENDP ; icu_56::UnifiedCache::get<icu_56::SharedPluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$copyPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXPBVSharedPluralRules@1@AAPBV21@@Z
_TEXT	SEGMENT
_src$ = 8						; size = 4
_dest$ = 12						; size = 4
??$copyPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXPBVSharedPluralRules@1@AAPBV21@@Z PROC ; icu_56::SharedObject::copyPtr<icu_56::SharedPluralRules>, COMDAT
; File d:\mozilla\intl\icu\source\common\sharedobject.h
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 201
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN4@copyPtr
; Line 202
	mov	eax, DWORD PTR _dest$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@copyPtr
	mov	esi, esp
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?removeRef@SharedObject@icu_56@@QBEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@copyPtr:
; Line 203
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 204
	cmp	DWORD PTR _src$[ebp], 0
	je	SHORT $LN4@copyPtr
	mov	esi, esp
	mov	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?addRef@SharedObject@icu_56@@QBEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@copyPtr:
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$copyPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXPBVSharedPluralRules@1@AAPBV21@@Z ENDP ; icu_56::SharedObject::copyPtr<icu_56::SharedPluralRules>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$clearPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXAAPBVSharedPluralRules@1@@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
??$clearPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXAAPBVSharedPluralRules@1@@Z PROC ; icu_56::SharedObject::clearPtr<icu_56::SharedPluralRules>, COMDAT
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	mov	eax, DWORD PTR _ptr$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@clearPtr
; Line 214
	mov	esi, esp
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?removeRef@SharedObject@icu_56@@QBEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@clearPtr:
; Line 217
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$clearPtr@VSharedPluralRules@icu_56@@@SharedObject@icu_56@@SAXAAPBVSharedPluralRules@1@@Z ENDP ; icu_56::SharedObject::clearPtr<icu_56::SharedPluralRules>
_TEXT	ENDS
END

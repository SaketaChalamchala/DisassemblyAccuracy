; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\repattrn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@RegexPattern@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::RegexPattern::getStaticClassID'::`2'::classID
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??8RegexPattern@icu_56@@QBECABV01@@Z		; icu_56::RegexPattern::operator==
PUBLIC	??9RegexPattern@icu_56@@QBECABV01@@Z		; icu_56::RegexPattern::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9RegexPattern@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9RegexPattern@icu_56@@QBECABV01@@Z PROC		; icu_56::RegexPattern::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\regex.h
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8RegexPattern@icu_56@@QBECABV01@@Z	; icu_56::RegexPattern::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9RegexPattern@icu_56@@QBECABV01@@Z ENDP		; icu_56::RegexPattern::operator!=
_TEXT	ENDS
PUBLIC	??1RegexPattern@icu_56@@UAE@XZ			; icu_56::RegexPattern::~RegexPattern
PUBLIC	??_GRegexPattern@icu_56@@UAEPAXI@Z		; icu_56::RegexPattern::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GRegexPattern@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GRegexPattern@icu_56@@UAEPAXI@Z PROC			; icu_56::RegexPattern::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RegexPattern@icu_56@@UAE@XZ		; icu_56::RegexPattern::~RegexPattern
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRegexPattern@icu_56@@UAEPAXI@Z ENDP			; icu_56::RegexPattern::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ERegexPattern@icu_56@@UAEPAXI@Z		; icu_56::RegexPattern::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ERegexPattern@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ERegexPattern@icu_56@@UAEPAXI@Z PROC			; icu_56::RegexPattern::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1RegexPattern@icu_56@@UAE@XZ	; icu_56::RegexPattern::~RegexPattern
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	152					; 00000098H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RegexPattern@icu_56@@UAE@XZ		; icu_56::RegexPattern::~RegexPattern
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ERegexPattern@icu_56@@UAEPAXI@Z ENDP			; icu_56::RegexPattern::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?init@RegexPattern@icu_56@@AAEXXZ		; icu_56::RegexPattern::init
PUBLIC	??_7RegexPattern@icu_56@@6B@			; icu_56::RegexPattern::`vftable'
PUBLIC	??0RegexPattern@icu_56@@QAE@XZ			; icu_56::RegexPattern::RegexPattern
PUBLIC	??_R4RegexPattern@icu_56@@6B@			; icu_56::RegexPattern::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRegexPattern@icu_56@@@8			; icu_56::RegexPattern `RTTI Type Descriptor'
PUBLIC	??_R3RegexPattern@icu_56@@8			; icu_56::RegexPattern::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RegexPattern@icu_56@@8			; icu_56::RegexPattern::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RegexPattern@icu_56@@8		; icu_56::RegexPattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ ; icu_56::RegexPattern::getDynamicClassID
PUBLIC	?clone@RegexPattern@icu_56@@UBEPAV12@XZ		; icu_56::RegexPattern::clone
PUBLIC	?flags@RegexPattern@icu_56@@UBEIXZ		; icu_56::RegexPattern::flags
PUBLIC	?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::matcher
PUBLIC	?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::matcher
PUBLIC	?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ ; icu_56::RegexPattern::pattern
PUBLIC	?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::patternText
PUBLIC	?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z ; icu_56::RegexPattern::groupNumberFromName
PUBLIC	?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::groupNumberFromName
PUBLIC	?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z ; icu_56::RegexPattern::split
PUBLIC	?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z ; icu_56::RegexPattern::split
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\repattrn.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RegexPattern@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RegexPattern@icu_56@@8 DD FLAT:??_R0?AVRegexPattern@icu_56@@@8 ; icu_56::RegexPattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RegexPattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2RegexPattern@icu_56@@8
rdata$r	SEGMENT
??_R2RegexPattern@icu_56@@8 DD FLAT:??_R1A@?0A@EA@RegexPattern@icu_56@@8 ; icu_56::RegexPattern::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3RegexPattern@icu_56@@8
rdata$r	SEGMENT
??_R3RegexPattern@icu_56@@8 DD 00H			; icu_56::RegexPattern::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2RegexPattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRegexPattern@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRegexPattern@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RegexPattern `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRegexPattern@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RegexPattern@icu_56@@6B@
rdata$r	SEGMENT
??_R4RegexPattern@icu_56@@6B@ DD 00H			; icu_56::RegexPattern::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRegexPattern@icu_56@@@8
	DD	FLAT:??_R3RegexPattern@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7RegexPattern@icu_56@@6B@
CONST	SEGMENT
??_7RegexPattern@icu_56@@6B@ DD FLAT:??_R4RegexPattern@icu_56@@6B@ ; icu_56::RegexPattern::`vftable'
	DD	FLAT:??_ERegexPattern@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@RegexPattern@icu_56@@UBEPAV12@XZ
	DD	FLAT:?flags@RegexPattern@icu_56@@UBEIXZ
	DD	FLAT:?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z
	DD	FLAT:?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	FLAT:?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z
	DD	FLAT:?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z
	DD	FLAT:?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z
	DD	FLAT:?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RegexPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$1
__ehfuncinfo$??0RegexPattern@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RegexPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RegexPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0RegexPattern@icu_56@@QAE@XZ PROC			; icu_56::RegexPattern::RegexPattern, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RegexPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RegexPattern@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RegexPattern@icu_56@@AAEXXZ	; icu_56::RegexPattern::init
; Line 36
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RegexPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RegexPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RegexPattern@icu_56@@QAE@XZ ENDP			; icu_56::RegexPattern::RegexPattern
PUBLIC	??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::RegexPattern::operator=
PUBLIC	??0RegexPattern@icu_56@@QAE@ABV01@@Z		; icu_56::RegexPattern::RegexPattern
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RegexPattern@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0RegexPattern@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0RegexPattern@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0RegexPattern@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0RegexPattern@icu_56@@QAE@ABV01@@Z PROC		; icu_56::RegexPattern::RegexPattern, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RegexPattern@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RegexPattern@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 46
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RegexPattern@icu_56@@AAEXXZ	; icu_56::RegexPattern::init
; Line 47
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::RegexPattern::operator=
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0RegexPattern@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0RegexPattern@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RegexPattern@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RegexPattern@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::RegexPattern::RegexPattern
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0Regex8BitSet@icu_56@@QAE@XZ			; icu_56::Regex8BitSet::Regex8BitSet
PUBLIC	??4Regex8BitSet@icu_56@@QAEXABU01@@Z		; icu_56::Regex8BitSet::operator=
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	?zap@RegexPattern@icu_56@@AAEXXZ		; icu_56::RegexPattern::zap
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	_uhash_puti_56:PROC
EXTRN	_uhash_nextElement_56:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?assign@UVector64@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	_utext_openConstUnicodeString_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	_utext_clone_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
CONST	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$3
__ehfuncinfo$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv262 = -436						; size = 4
tv227 = -436						; size = 4
tv207 = -436						; size = 4
tv94 = -436						; size = 4
$T46025 = -428						; size = 4
$T46026 = -416						; size = 4
$T46029 = -404						; size = 4
$T46030 = -392						; size = 4
$T46031 = -380						; size = 4
$T46034 = -368						; size = 4
$T46035 = -356						; size = 4
$T46038 = -344						; size = 4
$T46039 = -332						; size = 4
_val$38829 = -128					; size = 4
_key$38824 = -116					; size = 4
_name$38822 = -104					; size = 4
_hashEl$38820 = -92					; size = 4
_hashPos$ = -80						; size = 4
_newSet$38810 = -68					; size = 4
_sourceSet$38808 = -56					; size = 4
_numSets$ = -44						; size = 4
_i$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::RegexPattern::operator=, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 424				; 000001a8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN18@operator
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@operator
$LN18@operator:
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	call	?zap@RegexPattern@icu_56@@AAEXXZ	; icu_56::RegexPattern::zap
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@RegexPattern@icu_56@@AAEXXZ	; icu_56::RegexPattern::init
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+92], edx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@operator
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@operator
$LN17@operator:
; Line 76
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN16@operator
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_clone_56
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 79
	jmp	$LN15@operator
$LN16@operator:
; Line 80
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46026[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46026[ebp], 0
	je	SHORT $LN21@operator
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR $T46026[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T46026[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	eax, DWORD PTR $T46026[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN22@operator
$LN21@operator:
	mov	DWORD PTR tv94[ebp], 0
$LN22@operator:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T46025[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T46025[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN14@operator
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 7
; Line 83
	jmp	SHORT $LN15@operator
$LN14@operator:
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	0
	call	_utext_openConstUnicodeString_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN15@operator:
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@operator
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@operator
$LN12@operator:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 92
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+96], edx
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], edx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+120], edx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax+124], edx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax+128], edx
; Line 102
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	DWORD PTR __imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	DWORD PTR [eax+136], edx
; Line 104
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+140]
	call	??4Regex8BitSet@icu_56@@QAEXABU01@@Z	; icu_56::Regex8BitSet::operator=
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dl, BYTE PTR [ecx+144]
	mov	BYTE PTR [eax+144], dl
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	DWORD PTR __imp_?assign@UVector64@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	call	DWORD PTR __imp_?assign@UVector32@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numSets$[ebp], eax
; Line 117
	mov	eax, DWORD PTR _numSets$[ebp]
	mov	DWORD PTR $T46029[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T46029[ebp]
	mov	edx, 32					; 00000020H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46031[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46031[ebp], 0
	je	SHORT $LN23@operator
	push	OFFSET ??0Regex8BitSet@icu_56@@QAE@XZ	; icu_56::Regex8BitSet::Regex8BitSet
	mov	eax, DWORD PTR $T46029[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR $T46031[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T46031[ebp]
	mov	DWORD PTR tv207[ebp], edx
	jmp	SHORT $LN24@operator
$LN23@operator:
	mov	DWORD PTR tv207[ebp], 0
$LN24@operator:
	mov	eax, DWORD PTR tv207[ebp]
	mov	DWORD PTR $T46030[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46030[ebp]
	mov	DWORD PTR [ecx+88], edx
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 0
	jne	SHORT $LN11@operator
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 7
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@operator
$LN11@operator:
; Line 122
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@operator:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numSets$[ebp]
	jge	$LN8@operator
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@operator
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN19@operator
$LN7@operator:
; Line 126
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sourceSet$38808[ebp], eax
; Line 127
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46035[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T46035[ebp], 0
	je	SHORT $LN25@operator
	mov	esi, esp
	mov	eax, DWORD PTR _sourceSet$38808[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46035[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46035[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	edx, DWORD PTR $T46035[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	eax, DWORD PTR $T46035[ebp]
	mov	DWORD PTR tv227[ebp], eax
	jmp	SHORT $LN26@operator
$LN25@operator:
	mov	DWORD PTR tv227[ebp], 0
$LN26@operator:
	mov	ecx, DWORD PTR tv227[ebp]
	mov	DWORD PTR $T46034[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T46034[ebp]
	mov	DWORD PTR _newSet$38810[ebp], edx
; Line 128
	cmp	DWORD PTR _newSet$38810[ebp], 0
	jne	SHORT $LN6@operator
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 7
; Line 130
	jmp	SHORT $LN8@operator
$LN6@operator:
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _newSet$38810[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+84]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 133
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _other$[ebp]
	add	eax, DWORD PTR [ecx+88]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+88]
	call	??4Regex8BitSet@icu_56@@QAEXABU01@@Z	; icu_56::Regex8BitSet::operator=
; Line 134
	jmp	$LN9@operator
$LN8@operator:
; Line 137
	mov	DWORD PTR _hashPos$[ebp], -1
$LN5@operator:
; Line 138
	lea	eax, DWORD PTR _hashPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	push	edx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _hashEl$38820[ebp], eax
	cmp	DWORD PTR _hashEl$38820[ebp], 0
	je	$LN4@operator
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator
; Line 140
	jmp	$LN4@operator
$LN3@operator:
; Line 142
	mov	eax, DWORD PTR _hashEl$38820[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _name$38822[ebp], ecx
; Line 143
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46039[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T46039[ebp], 0
	je	SHORT $LN27@operator
	mov	esi, esp
	mov	eax, DWORD PTR _name$38822[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46039[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46039[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T46039[ebp]
	mov	DWORD PTR tv262[ebp], edx
	jmp	SHORT $LN28@operator
$LN27@operator:
	mov	DWORD PTR tv262[ebp], 0
$LN28@operator:
	mov	eax, DWORD PTR tv262[ebp]
	mov	DWORD PTR $T46038[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46038[ebp]
	mov	DWORD PTR _key$38824[ebp], ecx
; Line 144
	mov	eax, DWORD PTR _hashEl$38820[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _val$38829[ebp], ecx
; Line 145
	cmp	DWORD PTR _key$38824[ebp], 0
	jne	SHORT $LN2@operator
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 7
; Line 147
	jmp	SHORT $LN1@operator
$LN2@operator:
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _val$38829[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$38824[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	call	_uhash_puti_56
	add	esp, 16					; 00000010H
$LN1@operator:
; Line 150
	jmp	$LN5@operator
$LN4@operator:
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
$LN19@operator:
; Line 152
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN36@operator:
	DD	1
	DD	$LN35@operator
$LN35@operator:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN33@operator
$LN33@operator:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46026[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T46031[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T46035[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T46039[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4RegexPattern@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::RegexPattern::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Regex8BitSet@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Regex8BitSet@icu_56@@QAE@XZ PROC			; icu_56::Regex8BitSet::Regex8BitSet, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\regeximp.h
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Regex8BitSet@icu_56@@QAE@XZ ENDP			; icu_56::Regex8BitSet::Regex8BitSet
_TEXT	ENDS
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Regex8BitSet@icu_56@@QAEXABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
??4Regex8BitSet@icu_56@@QAEXABU01@@Z PROC		; icu_56::Regex8BitSet::operator=, COMDAT
; _this$ = ecx
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	32					; 00000020H
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Regex8BitSet@icu_56@@QAEXABU01@@Z ENDP		; icu_56::Regex8BitSet::operator=
_TEXT	ENDS
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_SUVector@icu_56@@6B@				; icu_56::UVector::`local vftable'
PUBLIC	??_SUVector32@icu_56@@6B@			; icu_56::UVector32::`local vftable'
PUBLIC	??_SUVector64@icu_56@@6B@			; icu_56::UVector64::`local vftable'
PUBLIC	??_R4UVector64@icu_56@@6B@			; icu_56::UVector64::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector64@icu_56@@@8			; icu_56::UVector64 `RTTI Type Descriptor'
PUBLIC	??_R3UVector64@icu_56@@8			; icu_56::UVector64::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector64@icu_56@@8			; icu_56::UVector64::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector64@icu_56@@8		; icu_56::UVector64::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UVector32@icu_56@@6B@			; icu_56::UVector32::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector32@icu_56@@@8			; icu_56::UVector32 `RTTI Type Descriptor'
PUBLIC	??_R3UVector32@icu_56@@8			; icu_56::UVector32::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector32@icu_56@@8			; icu_56::UVector32::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector32@icu_56@@8		; icu_56::UVector32::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UVector@icu_56@@6B@			; icu_56::UVector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector@icu_56@@@8			; icu_56::UVector `RTTI Type Descriptor'
PUBLIC	??_R3UVector@icu_56@@8				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector@icu_56@@8				; icu_56::UVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector@icu_56@@8			; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_uhash_setKeyDeleter_56:PROC
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:PROC
EXTRN	_uhash_open_56:PROC
EXTRN	_uhash_hashUnicodeString_56:PROC
EXTRN	_uhash_compareUnicodeString_56:PROC
EXTRN	_uhash_compareLong_56:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UVector64@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	??_EUVector64@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector64::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector64@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector64::getDynamicClassID
EXTRN	??_EUVector32@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector32::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector32::getDynamicClassID
EXTRN	??_EUVector@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UVector@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\repattrn.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector@icu_56@@8 DD FLAT:??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector@icu_56@@8
rdata$r	SEGMENT
??_R2UVector@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector@icu_56@@8
rdata$r	SEGMENT
??_R3UVector@icu_56@@8 DD 00H				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector@icu_56@@6B@ DD 00H				; icu_56::UVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector@icu_56@@@8
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UVector32@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector32@icu_56@@8 DD FLAT:??_R0?AVUVector32@icu_56@@@8 ; icu_56::UVector32::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector32@icu_56@@8
rdata$r	SEGMENT
??_R2UVector32@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector32@icu_56@@8 ; icu_56::UVector32::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector32@icu_56@@8
rdata$r	SEGMENT
??_R3UVector32@icu_56@@8 DD 00H				; icu_56::UVector32::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector32@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector32@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector32 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector32@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector32@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector32@icu_56@@6B@ DD 00H			; icu_56::UVector32::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector32@icu_56@@@8
	DD	FLAT:??_R3UVector32@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UVector64@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector64@icu_56@@8 DD FLAT:??_R0?AVUVector64@icu_56@@@8 ; icu_56::UVector64::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector64@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector64@icu_56@@8
rdata$r	SEGMENT
??_R2UVector64@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector64@icu_56@@8 ; icu_56::UVector64::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector64@icu_56@@8
rdata$r	SEGMENT
??_R3UVector64@icu_56@@8 DD 00H				; icu_56::UVector64::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector64@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector64@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector64@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector64 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector64@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector64@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector64@icu_56@@6B@ DD 00H			; icu_56::UVector64::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector64@icu_56@@@8
	DD	FLAT:??_R3UVector64@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUVector@icu_56@@6B@
CONST	SEGMENT
??_SUVector@icu_56@@6B@ DD FLAT:??_R4UVector@icu_56@@6B@ ; icu_56::UVector::`local vftable'
	DD	FLAT:??_EUVector@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT ??_SUVector32@icu_56@@6B@
CONST	SEGMENT
??_SUVector32@icu_56@@6B@ DD FLAT:??_R4UVector32@icu_56@@6B@ ; icu_56::UVector32::`local vftable'
	DD	FLAT:??_EUVector32@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector32@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT ??_SUVector64@icu_56@@6B@
CONST	SEGMENT
??_SUVector64@icu_56@@6B@ DD FLAT:??_R4UVector64@icu_56@@6B@ ; icu_56::UVector64::`local vftable'
	DD	FLAT:??_EUVector64@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector64@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?init@RegexPattern@icu_56@@AAEXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?init@RegexPattern@icu_56@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?init@RegexPattern@icu_56@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@RegexPattern@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv162 = -340						; size = 4
tv153 = -340						; size = 4
tv144 = -340						; size = 4
tv135 = -340						; size = 4
tv94 = -340						; size = 4
$T46080 = -332						; size = 4
$T46081 = -320						; size = 4
$T46084 = -308						; size = 4
$T46085 = -296						; size = 4
$T46068 = -284						; size = 4
$T46069 = -272						; size = 4
$T46072 = -260						; size = 4
$T46073 = -248						; size = 4
$T46076 = -236						; size = 4
$T46077 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?init@RegexPattern@icu_56@@AAEXXZ PROC			; icu_56::RegexPattern::init, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@RegexPattern@icu_56@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], 0
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+144], 0
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 185
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46069[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46069[ebp], 0
	je	SHORT $LN6@init
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR $T46069[ebp]
	call	DWORD PTR __imp_??0UVector64@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46069[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector64@icu_56@@6B@
	mov	edx, DWORD PTR $T46069[ebp]
	mov	DWORD PTR tv94[ebp], edx
	jmp	SHORT $LN7@init
$LN6@init:
	mov	DWORD PTR tv94[ebp], 0
$LN7@init:
	mov	eax, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T46068[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46068[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 186
	mov	esi, esp
	push	20					; 00000014H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46073[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46073[ebp], 0
	je	SHORT $LN8@init
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR $T46073[ebp]
	call	DWORD PTR __imp_??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46073[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector32@icu_56@@6B@
	mov	edx, DWORD PTR $T46073[ebp]
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN9@init
$LN8@init:
	mov	DWORD PTR tv135[ebp], 0
$LN9@init:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T46072[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46072[ebp]
	mov	DWORD PTR [ecx+108], edx
; Line 187
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46077[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T46077[ebp], 0
	je	SHORT $LN10@init
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR $T46077[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46077[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T46077[ebp]
	mov	DWORD PTR tv144[ebp], edx
	jmp	SHORT $LN11@init
$LN10@init:
	mov	DWORD PTR tv144[ebp], 0
$LN11@init:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T46076[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46076[ebp]
	mov	DWORD PTR [ecx+84], edx
; Line 188
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46081[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T46081[ebp], 0
	je	SHORT $LN12@init
	mov	esi, esp
	mov	ecx, DWORD PTR $T46081[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46081[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	ecx, DWORD PTR $T46081[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	edx, DWORD PTR $T46081[ebp]
	mov	DWORD PTR tv153[ebp], edx
	jmp	SHORT $LN13@init
$LN12@init:
	mov	DWORD PTR tv153[ebp], 0
$LN13@init:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR $T46080[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46080[ebp]
	mov	DWORD PTR [ecx+132], edx
; Line 189
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46085[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T46085[ebp], 0
	je	SHORT $LN14@init
	mov	ecx, DWORD PTR $T46085[ebp]
	call	??0Regex8BitSet@icu_56@@QAE@XZ		; icu_56::Regex8BitSet::Regex8BitSet
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN15@init
$LN14@init:
	mov	DWORD PTR tv162[ebp], 0
$LN15@init:
	mov	eax, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T46084[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T46084[ebp]
	mov	DWORD PTR [ecx+140], edx
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	push	OFFSET _uhash_compareLong_56
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uhash_hashUnicodeString_56
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+148], eax
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@init
; Line 195
	jmp	$LN4@init
$LN3@init:
; Line 198
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN1@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN1@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN1@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN1@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+148], 0
	jne	SHORT $LN2@init
$LN1@init:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 7
; Line 200
	jmp	SHORT $LN4@init
$LN2@init:
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 207
	push	OFFSET _uprv_deleteUObject_56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	call	_uhash_setKeyDeleter_56
	add	esp, 8
$LN4@init:
; Line 208
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46069[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T46073[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T46077[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T46081[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@RegexPattern@icu_56@@AAEXXZ$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T46085[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@RegexPattern@icu_56@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@RegexPattern@icu_56@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@RegexPattern@icu_56@@AAEXXZ ENDP			; icu_56::RegexPattern::init
EXTRN	__imp_??1UVector64@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector64@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector64@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector64::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector64@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector64@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector64::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1UVector32@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector32@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector32@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector32::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector32@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector32@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector32::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_uhash_close_56:PROC
EXTRN	_utext_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?zap@RegexPattern@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv193 = -400						; size = 4
tv170 = -400						; size = 4
tv157 = -400						; size = 4
tv141 = -400						; size = 4
tv129 = -400						; size = 4
tv75 = -400						; size = 4
$T46107 = -392						; size = 4
$T46108 = -380						; size = 4
$T46111 = -368						; size = 4
$T46112 = -356						; size = 4
$T46115 = -344						; size = 4
$T46116 = -332						; size = 4
$T46119 = -320						; size = 4
$T46120 = -308						; size = 4
$T46121 = -296						; size = 4
$T46124 = -284						; size = 4
$T46125 = -272						; size = 4
$T46128 = -260						; size = 4
$T46129 = -248						; size = 4
$T46130 = -236						; size = 4
_s$38884 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?zap@RegexPattern@icu_56@@AAEXXZ PROC			; icu_56::RegexPattern::zap, COMDAT
; _this$ = ecx
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 400				; 00000190H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T46108[ebp], ecx
	mov	edx, DWORD PTR $T46108[ebp]
	mov	DWORD PTR $T46107[ebp], edx
	cmp	DWORD PTR $T46107[ebp], 0
	je	SHORT $LN9@zap
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46107[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46107[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN10@zap
$LN9@zap:
	mov	DWORD PTR tv75[ebp], 0
$LN10@zap:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 220
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN6@zap
$LN5@zap:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@zap:
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@zap
; Line 222
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+84]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$38884[ebp], eax
; Line 223
	cmp	DWORD PTR _s$38884[ebp], 0
	je	SHORT $LN3@zap
; Line 224
	mov	eax, DWORD PTR _s$38884[ebp]
	mov	DWORD PTR $T46112[ebp], eax
	mov	ecx, DWORD PTR $T46112[ebp]
	mov	DWORD PTR $T46111[ebp], ecx
	cmp	DWORD PTR $T46111[ebp], 0
	je	SHORT $LN11@zap
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46111[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46111[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN3@zap
$LN11@zap:
	mov	DWORD PTR tv129[ebp], 0
$LN3@zap:
; Line 226
	jmp	$LN5@zap
$LN4@zap:
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T46116[ebp], ecx
	mov	edx, DWORD PTR $T46116[ebp]
	mov	DWORD PTR $T46115[ebp], edx
	cmp	DWORD PTR $T46115[ebp], 0
	je	SHORT $LN13@zap
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46115[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46115[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN14@zap
$LN13@zap:
	mov	DWORD PTR tv141[ebp], 0
$LN14@zap:
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T46119[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR $T46119[ebp]
	push	edx
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 230
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T46121[ebp], ecx
	mov	edx, DWORD PTR $T46121[ebp]
	mov	DWORD PTR $T46120[ebp], edx
	cmp	DWORD PTR $T46120[ebp], 0
	je	SHORT $LN15@zap
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46120[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46120[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN16@zap
$LN15@zap:
	mov	DWORD PTR tv157[ebp], 0
$LN16@zap:
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR $T46125[ebp], ecx
	mov	edx, DWORD PTR $T46125[ebp]
	mov	DWORD PTR $T46124[ebp], edx
	cmp	DWORD PTR $T46124[ebp], 0
	je	SHORT $LN17@zap
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46124[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46124[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN18@zap
$LN17@zap:
	mov	DWORD PTR tv170[ebp], 0
$LN18@zap:
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR $T46128[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR $T46128[ebp]
	push	edx
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], 0
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@zap
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_close_56
	add	esp, 4
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@zap:
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@zap
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T46130[ebp], ecx
	mov	edx, DWORD PTR $T46130[ebp]
	mov	DWORD PTR $T46129[ebp], edx
	cmp	DWORD PTR $T46129[ebp], 0
	je	SHORT $LN19@zap
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T46129[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T46129[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN20@zap
$LN19@zap:
	mov	DWORD PTR tv193[ebp], 0
$LN20@zap:
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN1@zap:
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	call	_uhash_close_56
	add	esp, 4
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
; Line 247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?zap@RegexPattern@icu_56@@AAEXXZ ENDP			; icu_56::RegexPattern::zap
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RegexPattern@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$1
__ehfuncinfo$??1RegexPattern@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1RegexPattern@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1RegexPattern@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1RegexPattern@icu_56@@UAE@XZ PROC			; icu_56::RegexPattern::~RegexPattern, COMDAT
; _this$ = ecx
; Line 255
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RegexPattern@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RegexPattern@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?zap@RegexPattern@icu_56@@AAEXXZ	; icu_56::RegexPattern::zap
; Line 257
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1RegexPattern@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1RegexPattern@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RegexPattern@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RegexPattern@icu_56@@UAE@XZ ENDP			; icu_56::RegexPattern::~RegexPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@RegexPattern@icu_56@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@RegexPattern@icu_56@@UBEPAV12@XZ$0
__ehfuncinfo$?clone@RegexPattern@icu_56@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@RegexPattern@icu_56@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@RegexPattern@icu_56@@UBEPAV12@XZ
_TEXT	SEGMENT
tv72 = -256						; size = 4
$T46145 = -248						; size = 4
$T46146 = -236						; size = 4
_copy$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@RegexPattern@icu_56@@UBEPAV12@XZ PROC		; icu_56::RegexPattern::clone, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@RegexPattern@icu_56@@UBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	esi, esp
	push	152					; 00000098H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46146[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46146[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46146[ebp]
	call	??0RegexPattern@icu_56@@QAE@ABV01@@Z	; icu_56::RegexPattern::RegexPattern
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv72[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T46145[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T46145[ebp]
	mov	DWORD PTR _copy$[ebp], edx
; Line 267
	mov	eax, DWORD PTR _copy$[ebp]
; Line 268
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@RegexPattern@icu_56@@UBEPAV12@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46146[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@RegexPattern@icu_56@@UBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@RegexPattern@icu_56@@UBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@RegexPattern@icu_56@@UBEPAV12@XZ ENDP		; icu_56::RegexPattern::clone
EXTRN	_utext_equals_56:PROC
EXTRN	_utext_setNativeIndex_56:PROC
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8RegexPattern@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv219 = -244						; size = 8
tv191 = -244						; size = 8
___offset$38928 = -40					; size = 8
___offset$38923 = -24					; size = 8
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8RegexPattern@icu_56@@QBECABV01@@Z PROC		; icu_56::RegexPattern::operator==, COMDAT
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	$LN11@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [eax+92]
	cmp	edx, DWORD PTR [ecx+92]
	jne	$LN11@operator@2
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN10@operator@2
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN10@operator@2
; Line 282
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN12@operator@2
	jmp	$LN11@operator@2
$LN10@operator@2:
; Line 283
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN8@operator@2
; Line 284
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@operator@2
; Line 285
	mov	al, 1
	jmp	$LN12@operator@2
$LN7@operator@2:
; Line 286
	jmp	$LN11@operator@2
$LN8@operator@2:
; Line 287
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN11@operator@2
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	xor	edx, edx
	sub	edx, DWORD PTR [ecx+32]
	mov	eax, 0
	sbb	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$38923[ebp], edx
	mov	DWORD PTR ___offset$38923[ebp+4], eax
	cmp	DWORD PTR ___offset$38923[ebp+4], 0
	jl	SHORT $LN4@operator@2
	jg	SHORT $LN14@operator@2
	cmp	DWORD PTR ___offset$38923[ebp], 0
	jb	SHORT $LN4@operator@2
$LN14@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv191[ebp], eax
	mov	DWORD PTR tv191[ebp+4], edx
	mov	edx, DWORD PTR ___offset$38923[ebp+4]
	cmp	edx, DWORD PTR tv191[ebp+4]
	jg	SHORT $LN4@operator@2
	jl	SHORT $LN15@operator@2
	mov	eax, DWORD PTR ___offset$38923[ebp]
	cmp	eax, DWORD PTR tv191[ebp]
	ja	SHORT $LN4@operator@2
$LN15@operator@2:
	mov	eax, DWORD PTR ___offset$38923[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN3@operator@2
$LN4@operator@2:
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN3@operator@2:
; Line 289
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	xor	edx, edx
	sub	edx, DWORD PTR [ecx+32]
	mov	eax, 0
	sbb	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR ___offset$38928[ebp], edx
	mov	DWORD PTR ___offset$38928[ebp+4], eax
	cmp	DWORD PTR ___offset$38928[ebp+4], 0
	jl	SHORT $LN2@operator@2
	jg	SHORT $LN16@operator@2
	cmp	DWORD PTR ___offset$38928[ebp], 0
	jb	SHORT $LN2@operator@2
$LN16@operator@2:
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+28]
	cdq
	mov	DWORD PTR tv219[ebp], eax
	mov	DWORD PTR tv219[ebp+4], edx
	mov	edx, DWORD PTR ___offset$38928[ebp+4]
	cmp	edx, DWORD PTR tv219[ebp+4]
	jg	SHORT $LN2@operator@2
	jl	SHORT $LN17@operator@2
	mov	eax, DWORD PTR ___offset$38928[ebp]
	cmp	eax, DWORD PTR tv219[ebp]
	ja	SHORT $LN2@operator@2
$LN17@operator@2:
	mov	eax, DWORD PTR ___offset$38928[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN1@operator@2
$LN2@operator@2:
	push	0
	push	0
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_setNativeIndex_56
	add	esp, 12					; 0000000cH
$LN1@operator@2:
; Line 290
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_utext_equals_56
	add	esp, 8
	jmp	SHORT $LN12@operator@2
$LN11@operator@2:
; Line 293
	xor	al, al
$LN12@operator@2:
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8RegexPattern@icu_56@@QBECABV01@@Z ENDP		; icu_56::RegexPattern::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
EXTRN	??1RegexCompile@icu_56@@UAE@XZ:PROC		; icu_56::RegexCompile::~RegexCompile
EXTRN	?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::RegexCompile::compile
EXTRN	??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z:PROC ; icu_56::RegexCompile::RegexCompile
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv153 = -800						; size = 4
tv128 = -800						; size = 4
tv79 = -800						; size = 4
$T46165 = -792						; size = 4
$T46166 = -780						; size = 4
$T46169 = -768						; size = 4
$T46170 = -756						; size = 4
$T46173 = -744						; size = 4
$T46174 = -732						; size = 4
$T46177 = -720						; size = 4
_compiler$ = -516					; size = 472
_This$ = -36						; size = 4
_allFlags$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_regex$ = 8						; size = 4
_flags$ = 12						; size = 4
_pe$ = 16						; size = 4
_status$ = 20						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 788				; 00000314H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-800]
	mov	ecx, 197				; 000000c5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 307
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@compile
; Line 308
	xor	eax, eax
	jmp	$LN7@compile
$LN6@compile:
; Line 313
	mov	DWORD PTR _allFlags$[ebp], 959		; 000003bfH
; Line 315
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, -960				; fffffc40H
	je	SHORT $LN5@compile
; Line 316
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 66315			; 0001030bH
; Line 317
	xor	eax, eax
	jmp	$LN7@compile
$LN5@compile:
; Line 320
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN4@compile
; Line 321
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 66309			; 00010305H
; Line 322
	xor	eax, eax
	jmp	$LN7@compile
$LN4@compile:
; Line 325
	mov	esi, esp
	push	152					; 00000098H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46166[ebp], 0
	je	SHORT $LN9@compile
	mov	ecx, DWORD PTR $T46166[ebp]
	call	??0RegexPattern@icu_56@@QAE@XZ		; icu_56::RegexPattern::RegexPattern
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN10@compile
$LN9@compile:
	mov	DWORD PTR tv79[ebp], 0
$LN10@compile:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T46165[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46165[ebp]
	mov	DWORD PTR _This$[ebp], ecx
; Line 326
	cmp	DWORD PTR _This$[ebp], 0
	jne	SHORT $LN3@compile
; Line 327
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 328
	xor	eax, eax
	jmp	$LN7@compile
$LN3@compile:
; Line 330
	mov	eax, DWORD PTR _This$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@compile
; Line 331
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _This$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax], edx
; Line 332
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46170[ebp], eax
	mov	ecx, DWORD PTR $T46170[ebp]
	mov	DWORD PTR $T46169[ebp], ecx
	cmp	DWORD PTR $T46169[ebp], 0
	je	SHORT $LN11@compile
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46169[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46169[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN12@compile
$LN11@compile:
	mov	DWORD PTR tv128[ebp], 0
$LN12@compile:
; Line 333
	xor	eax, eax
	jmp	$LN7@compile
$LN2@compile:
; Line 335
	mov	eax, DWORD PTR _This$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 337
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _This$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::RegexCompile
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	?compile@RegexCompile@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::compile
; Line 340
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@compile
; Line 341
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46174[ebp], eax
	mov	ecx, DWORD PTR $T46174[ebp]
	mov	DWORD PTR $T46173[ebp], ecx
	cmp	DWORD PTR $T46173[ebp], 0
	je	SHORT $LN13@compile
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46173[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46173[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN14@compile
$LN13@compile:
	mov	DWORD PTR tv153[ebp], 0
$LN14@compile:
; Line 342
	mov	DWORD PTR _This$[ebp], 0
$LN1@compile:
; Line 345
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46177[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
	mov	eax, DWORD PTR $T46177[ebp]
$LN7@compile:
; Line 346
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@compile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 800				; 00000320H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@compile:
	DD	1
	DD	$LN19@compile
$LN19@compile:
	DD	-516					; fffffdfcH
	DD	472					; 000001d8H
	DD	$LN17@compile
$LN17@compile:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46166[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _compiler$[ebp]
	jmp	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-804]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
PUBLIC	__$ArrayPad$
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
EXTRN	?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::RegexCompile::compile
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv153 = -800						; size = 4
tv128 = -800						; size = 4
tv79 = -800						; size = 4
$T46192 = -792						; size = 4
$T46193 = -780						; size = 4
$T46196 = -768						; size = 4
$T46197 = -756						; size = 4
$T46200 = -744						; size = 4
$T46201 = -732						; size = 4
$T46204 = -720						; size = 4
_compiler$ = -516					; size = 472
_This$ = -36						; size = 4
_allFlags$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_regex$ = 8						; size = 4
_flags$ = 12						; size = 4
_pe$ = 16						; size = 4
_status$ = 20						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 357
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 788				; 00000314H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-800]
	mov	ecx, 197				; 000000c5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 358
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@compile@2
; Line 359
	xor	eax, eax
	jmp	$LN7@compile@2
$LN6@compile@2:
; Line 364
	mov	DWORD PTR _allFlags$[ebp], 959		; 000003bfH
; Line 366
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, -960				; fffffc40H
	je	SHORT $LN5@compile@2
; Line 367
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 66315			; 0001030bH
; Line 368
	xor	eax, eax
	jmp	$LN7@compile@2
$LN5@compile@2:
; Line 371
	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN4@compile@2
; Line 372
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 66309			; 00010305H
; Line 373
	xor	eax, eax
	jmp	$LN7@compile@2
$LN4@compile@2:
; Line 376
	mov	esi, esp
	push	152					; 00000098H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46193[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46193[ebp], 0
	je	SHORT $LN9@compile@2
	mov	ecx, DWORD PTR $T46193[ebp]
	call	??0RegexPattern@icu_56@@QAE@XZ		; icu_56::RegexPattern::RegexPattern
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN10@compile@2
$LN9@compile@2:
	mov	DWORD PTR tv79[ebp], 0
$LN10@compile@2:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T46192[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46192[ebp]
	mov	DWORD PTR _This$[ebp], ecx
; Line 377
	cmp	DWORD PTR _This$[ebp], 0
	jne	SHORT $LN3@compile@2
; Line 378
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 379
	xor	eax, eax
	jmp	$LN7@compile@2
$LN3@compile@2:
; Line 381
	mov	eax, DWORD PTR _This$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@compile@2
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _This$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax], edx
; Line 383
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46197[ebp], eax
	mov	ecx, DWORD PTR $T46197[ebp]
	mov	DWORD PTR $T46196[ebp], ecx
	cmp	DWORD PTR $T46196[ebp], 0
	je	SHORT $LN11@compile@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46196[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46196[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN12@compile@2
$LN11@compile@2:
	mov	DWORD PTR tv128[ebp], 0
$LN12@compile@2:
; Line 384
	xor	eax, eax
	jmp	$LN7@compile@2
$LN2@compile@2:
; Line 386
	mov	eax, DWORD PTR _This$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 388
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _This$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	??0RegexCompile@icu_56@@QAE@PAVRegexPattern@1@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::RegexCompile
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 389
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	?compile@RegexCompile@icu_56@@QAEXPAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexCompile::compile
; Line 391
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@compile@2
; Line 392
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46201[ebp], eax
	mov	ecx, DWORD PTR $T46201[ebp]
	mov	DWORD PTR $T46200[ebp], ecx
	cmp	DWORD PTR $T46200[ebp], 0
	je	SHORT $LN13@compile@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46200[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46200[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN14@compile@2
$LN13@compile@2:
	mov	DWORD PTR tv153[ebp], 0
$LN14@compile@2:
; Line 393
	mov	DWORD PTR _This$[ebp], 0
$LN1@compile@2:
; Line 396
	mov	eax, DWORD PTR _This$[ebp]
	mov	DWORD PTR $T46204[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _compiler$[ebp]
	call	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
	mov	eax, DWORD PTR $T46204[ebp]
$LN7@compile@2:
; Line 397
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@compile@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 800				; 00000320H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@compile@2:
	DD	1
	DD	$LN19@compile@2
$LN19@compile@2:
	DD	-516					; fffffdfcH
	DD	472					; 000001d8H
	DD	$LN17@compile@2
$LN17@compile@2:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46193[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _compiler$[ebp]
	jmp	??1RegexCompile@icu_56@@UAE@XZ		; icu_56::RegexCompile::~RegexCompile
__ehhandler$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-804]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_regex$ = 8						; size = 4
_pe$ = 12						; size = 4
_err$ = 16						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	call	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
_TEXT	ENDS
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_regex$ = 8						; size = 4
_pe$ = 12						; size = 4
_err$ = 16						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 419
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	call	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
; Line 420
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_pe$ = -80						; size = 72
__$ArrayPad$ = -4					; size = 4
_regex$ = 8						; size = 4
_flags$ = 12						; size = 4
_err$ = 16						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flags$[ebp]
	push	edx
	mov	eax, DWORD PTR _regex$[ebp]
	push	eax
	call	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
; Line 433
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@compile@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@compile@3:
	DD	1
	DD	$LN4@compile@3
$LN4@compile@3:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN3@compile@3
$LN3@compile@3:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_pe$ = -80						; size = 72
__$ArrayPad$ = -4					; size = 4
_regex$ = 8						; size = 4
_flags$ = 12						; size = 4
_err$ = 16						; size = 4
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::compile, COMDAT
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 445
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _flags$[ebp]
	push	edx
	mov	eax, DWORD PTR _regex$[ebp]
	push	eax
	call	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
; Line 446
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@compile@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@compile@4:
	DD	1
	DD	$LN4@compile@4
$LN4@compile@4:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN3@compile@4
$LN3@compile@4:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::compile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flags@RegexPattern@icu_56@@UBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?flags@RegexPattern@icu_56@@UBEIXZ PROC			; icu_56::RegexPattern::flags, COMDAT
; _this$ = ecx
; Line 454
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?flags@RegexPattern@icu_56@@UBEIXZ ENDP			; icu_56::RegexPattern::flags
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_retMatcher$ = -20					; size = 4
_this$ = -8						; size = 4
_input$ = 8						; size = 4
_status$ = 12						; size = 4
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::matcher, COMDAT
; _this$ = ecx
; Line 465
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 466
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _retMatcher$[ebp], eax
; Line 467
	cmp	DWORD PTR _retMatcher$[ebp], 0
	je	SHORT $LN1@matcher
; Line 468
	mov	eax, DWORD PTR _retMatcher$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+260], edx
; Line 469
	mov	esi, esp
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _retMatcher$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _retMatcher$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@matcher:
; Line 471
	mov	eax, DWORD PTR _retMatcher$[ebp]
; Line 472
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::matcher
_TEXT	ENDS
EXTRN	??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z:PROC ; icu_56::RegexMatcher::RegexMatcher
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
$T46238 = -248						; size = 4
$T46239 = -236						; size = 4
_retMatcher$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::matcher, COMDAT
; _this$ = ecx
; Line 480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 481
	mov	DWORD PTR _retMatcher$[ebp], 0
; Line 483
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@matcher@2
; Line 484
	xor	eax, eax
	jmp	$LN4@matcher@2
$LN3@matcher@2:
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@matcher@2
; Line 487
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax], edx
; Line 488
	xor	eax, eax
	jmp	$LN4@matcher@2
$LN2@matcher@2:
; Line 491
	mov	esi, esp
	push	272					; 00000110H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46239[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46239[ebp], 0
	je	SHORT $LN6@matcher@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46239[ebp]
	call	??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z ; icu_56::RegexMatcher::RegexMatcher
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN7@matcher@2
$LN6@matcher@2:
	mov	DWORD PTR tv82[ebp], 0
$LN7@matcher@2:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T46238[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T46238[ebp]
	mov	DWORD PTR _retMatcher$[ebp], edx
; Line 492
	cmp	DWORD PTR _retMatcher$[ebp], 0
	jne	SHORT $LN1@matcher@2
; Line 493
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 494
	xor	eax, eax
	jmp	SHORT $LN4@matcher@2
$LN1@matcher@2:
; Line 496
	mov	eax, DWORD PTR _retMatcher$[ebp]
$LN4@matcher@2:
; Line 497
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46239[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?matcher@RegexPattern@icu_56@@UBEPAVRegexMatcher@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::matcher
PUBLIC	?matches@RegexPattern@icu_56@@SACABVUnicodeString@2@0AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::matches
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?matches@RegexPattern@icu_56@@SACABVUnicodeString@2@0AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv137 = -280						; size = 4
tv94 = -280						; size = 4
$T46251 = -272						; size = 4
$T46252 = -260						; size = 4
$T46255 = -248						; size = 4
$T46256 = -236						; size = 4
_matcher$ = -32						; size = 4
_pat$ = -20						; size = 4
_retVal$ = -5						; size = 1
_regex$ = 8						; size = 4
_input$ = 12						; size = 4
_pe$ = 16						; size = 4
_status$ = 20						; size = 4
?matches@RegexPattern@icu_56@@SACABVUnicodeString@2@0AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::matches, COMDAT
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 512
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@matches
	xor	al, al
	jmp	$LN2@matches
$LN1@matches:
; Line 515
	mov	DWORD PTR _pat$[ebp], 0
; Line 516
	mov	DWORD PTR _matcher$[ebp], 0
; Line 518
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	call	?compile@RegexPattern@icu_56@@SAPAV12@ABVUnicodeString@2@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pat$[ebp], eax
; Line 519
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pat$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pat$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _matcher$[ebp], eax
; Line 520
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _retVal$[ebp], al
; Line 522
	mov	eax, DWORD PTR _matcher$[ebp]
	mov	DWORD PTR $T46252[ebp], eax
	mov	ecx, DWORD PTR $T46252[ebp]
	mov	DWORD PTR $T46251[ebp], ecx
	cmp	DWORD PTR $T46251[ebp], 0
	je	SHORT $LN4@matches
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46251[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46251[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN5@matches
$LN4@matches:
	mov	DWORD PTR tv94[ebp], 0
$LN5@matches:
; Line 523
	mov	eax, DWORD PTR _pat$[ebp]
	mov	DWORD PTR $T46256[ebp], eax
	mov	ecx, DWORD PTR $T46256[ebp]
	mov	DWORD PTR $T46255[ebp], ecx
	cmp	DWORD PTR $T46255[ebp], 0
	je	SHORT $LN6@matches
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46255[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46255[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN7@matches
$LN6@matches:
	mov	DWORD PTR tv137[ebp], 0
$LN7@matches:
; Line 524
	mov	al, BYTE PTR _retVal$[ebp]
$LN2@matches:
; Line 525
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matches@RegexPattern@icu_56@@SACABVUnicodeString@2@0AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::matches
_TEXT	ENDS
PUBLIC	?matches@RegexPattern@icu_56@@SACPAUUText@@0AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::matches
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?matches@RegexPattern@icu_56@@SACPAUUText@@0AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv144 = -280						; size = 4
tv133 = -280						; size = 4
$T46261 = -272						; size = 4
$T46262 = -260						; size = 4
$T46265 = -248						; size = 4
$T46266 = -236						; size = 4
_matcher$ = -32						; size = 4
_pat$ = -20						; size = 4
_retVal$ = -5						; size = 1
_regex$ = 8						; size = 4
_input$ = 12						; size = 4
_pe$ = 16						; size = 4
_status$ = 20						; size = 4
?matches@RegexPattern@icu_56@@SACPAUUText@@0AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::matches, COMDAT
; Line 534
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 536
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@matches@2
	xor	al, al
	jmp	$LN3@matches@2
$LN2@matches@2:
; Line 538
	mov	BYTE PTR _retVal$[ebp], 0
; Line 539
	mov	DWORD PTR _pat$[ebp], 0
; Line 540
	mov	DWORD PTR _matcher$[ebp], 0
; Line 542
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _regex$[ebp]
	push	edx
	call	?compile@RegexPattern@icu_56@@SAPAV12@PAUUText@@IAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::RegexPattern::compile
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pat$[ebp], eax
; Line 543
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pat$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pat$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _matcher$[ebp], eax
; Line 544
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@matches@2
; Line 545
	mov	esi, esp
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 546
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _matcher$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _retVal$[ebp], al
$LN1@matches@2:
; Line 549
	mov	eax, DWORD PTR _matcher$[ebp]
	mov	DWORD PTR $T46262[ebp], eax
	mov	ecx, DWORD PTR $T46262[ebp]
	mov	DWORD PTR $T46261[ebp], ecx
	cmp	DWORD PTR $T46261[ebp], 0
	je	SHORT $LN5@matches@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46261[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46261[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN6@matches@2
$LN5@matches@2:
	mov	DWORD PTR tv133[ebp], 0
$LN6@matches@2:
; Line 550
	mov	eax, DWORD PTR _pat$[ebp]
	mov	DWORD PTR $T46266[ebp], eax
	mov	ecx, DWORD PTR $T46266[ebp]
	mov	DWORD PTR $T46265[ebp], ecx
	cmp	DWORD PTR $T46265[ebp], 0
	je	SHORT $LN7@matches@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46265[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46265[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN8@matches@2
$LN7@matches@2:
	mov	DWORD PTR tv144[ebp], 0
$LN8@matches@2:
; Line 551
	mov	al, BYTE PTR _retVal$[ebp]
$LN3@matches@2:
; Line 552
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matches@RegexPattern@icu_56@@SACPAUUText@@0AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::matches
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
EXTRN	__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
EXTRN	_utext_extract_56:PROC
EXTRN	_utext_nativeLength_56:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\repattrn.cpp
xdata$x	SEGMENT
__unwindtable$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$1
__ehfuncinfo$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T46275 = -352						; size = 4
_resultChars$39067 = -148				; size = 4
_result$39066 = -136					; size = 64
_len16$39065 = -64					; size = 4
_nativeLen$39064 = -52					; size = 8
_status$39063 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ PROC ; icu_56::RegexPattern::pattern, COMDAT
; _this$ = ecx
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T46275[ebp], 0
; Line 564
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@pattern
; Line 565
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T46275[ebp]
	or	edx, 1
	mov	DWORD PTR $T46275[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@pattern
	jmp	$LN5@pattern
$LN4@pattern:
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@pattern
; Line 567
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T46275[ebp]
	or	eax, 1
	mov	DWORD PTR $T46275[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@pattern
; Line 568
	jmp	$LN5@pattern
$LN2@pattern:
; Line 569
	mov	DWORD PTR _status$39063[ebp], 0
; Line 570
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_nativeLength_56
	add	esp, 4
	mov	DWORD PTR _nativeLen$39064[ebp], eax
	mov	DWORD PTR _nativeLen$39064[ebp+4], edx
; Line 571
	lea	eax, DWORD PTR _status$39063[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _nativeLen$39064[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _nativeLen$39064[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_utext_extract_56
	add	esp, 32					; 00000020H
	mov	DWORD PTR _len16$39065[ebp], eax
; Line 572
	mov	esi, esp
	lea	ecx, DWORD PTR _result$39066[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 574
	mov	DWORD PTR _status$39063[ebp], 0
; Line 575
	mov	esi, esp
	mov	eax, DWORD PTR _len16$39065[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$39066[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _resultChars$39067[ebp], eax
; Line 576
	lea	eax, DWORD PTR _status$39063[ebp]
	push	eax
	mov	ecx, DWORD PTR _len16$39065[ebp]
	push	ecx
	mov	edx, DWORD PTR _resultChars$39067[ebp]
	push	edx
	mov	eax, DWORD PTR _nativeLen$39064[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _nativeLen$39064[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_utext_extract_56
	add	esp, 32					; 00000020H
; Line 577
	mov	esi, esp
	mov	eax, DWORD PTR _len16$39065[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$39066[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 579
	mov	esi, esp
	lea	eax, DWORD PTR _result$39066[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46275[ebp]
	or	ecx, 1
	mov	DWORD PTR $T46275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$39066[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@pattern:
; Line 581
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@pattern
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@pattern:
	DD	2
	DD	$LN13@pattern
$LN13@pattern:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN10@pattern
	DD	-136					; ffffff78H
	DD	64					; 00000040H
	DD	$LN11@pattern
$LN11@pattern:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN10@pattern:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$0:
	mov	eax, DWORD PTR $T46275[ebp]
	and	eax, 1
	je	$LN8@pattern
	and	DWORD PTR $T46275[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN8@pattern:
	ret	0
__unwindfunclet$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$39066[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?pattern@RegexPattern@icu_56@@UBE?AVUnicodeString@2@XZ ENDP ; icu_56::RegexPattern::pattern
EXTRN	?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A:DWORD ; icu_56::RegexStaticSets::gStaticSets
EXTRN	?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z:PROC ; icu_56::RegexStaticSets::initGlobals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::patternText, COMDAT
; _this$ = ecx
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@patternTex
	xor	eax, eax
	jmp	SHORT $LN4@patternTex
$LN3@patternTex:
; Line 593
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@patternTex
; Line 596
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN4@patternTex
; Line 597
	jmp	SHORT $LN4@patternTex
$LN2@patternTex:
; Line 598
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?initGlobals@RegexStaticSets@icu_56@@SAXPAW4UErrorCode@@@Z ; icu_56::RegexStaticSets::initGlobals
	add	esp, 4
; Line 599
	mov	eax, DWORD PTR ?gStaticSets@RegexStaticSets@icu_56@@2PAV12@A ; icu_56::RegexStaticSets::gStaticSets
	mov	eax, DWORD PTR [eax+1044]
$LN4@patternTex:
; Line 601
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?patternText@RegexPattern@icu_56@@UBEPAUUText@@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::patternText
_TEXT	ENDS
EXTRN	_uhash_geti_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_number$ = -20						; size = 4
_this$ = -8						; size = 4
_groupName$ = 8						; size = 4
_status$ = 12						; size = 4
?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::groupNumberFromName, COMDAT
; _this$ = ecx
; Line 609
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 610
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@groupNumbe
; Line 611
	xor	eax, eax
	jmp	SHORT $LN3@groupNumbe
$LN2@groupNumbe:
; Line 617
	mov	eax, DWORD PTR _groupName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	push	edx
	call	_uhash_geti_56
	add	esp, 8
	mov	DWORD PTR _number$[ebp], eax
; Line 618
	cmp	DWORD PTR _number$[ebp], 0
	jne	SHORT $LN1@groupNumbe
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 66325			; 00010315H
$LN1@groupNumbe:
; Line 621
	mov	eax, DWORD PTR _number$[ebp]
$LN3@groupNumbe:
; Line 622
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?groupNumberFromName@RegexPattern@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::groupNumberFromName
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T46295 = -300						; size = 4
_name$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_groupName$ = 8						; size = 4
_nameLength$ = 12					; size = 4
_status$ = 16						; size = 4
?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::groupNumberFromName, COMDAT
; _this$ = ecx
; Line 624
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 625
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@groupNumbe@2
; Line 626
	xor	eax, eax
	jmp	SHORT $LN2@groupNumbe@2
$LN1@groupNumbe@2:
; Line 628
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _nameLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _groupName$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 629
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46295[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46295[ebp]
$LN2@groupNumbe@2:
; Line 630
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@groupNumbe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@groupNumbe@2:
	DD	1
	DD	$LN7@groupNumbe@2
$LN7@groupNumbe@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN5@groupNumbe@2
$LN5@groupNumbe@2:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?groupNumberFromName@RegexPattern@icu_56@@UBEHPBDHAAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::groupNumberFromName
PUBLIC	__$ArrayPad$
EXTRN	??1RegexMatcher@icu_56@@UAE@XZ:PROC		; icu_56::RegexMatcher::~RegexMatcher
EXTRN	?split@RegexMatcher@icu_56@@UAEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z:PROC ; icu_56::RegexMatcher::split
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T46309 = -520						; size = 4
_r$ = -316						; size = 4
_m$ = -304						; size = 272
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::split, COMDAT
; _this$ = ecx
; Line 642
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 128				; 00000080H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 643
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@split
; Line 644
	xor	eax, eax
	jmp	SHORT $LN3@split
$LN2@split:
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z ; icu_56::RegexMatcher::RegexMatcher
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 648
	mov	DWORD PTR _r$[ebp], 0
; Line 650
	mov	eax, DWORD PTR _m$[ebp+260]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@split
; Line 651
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	?split@RegexMatcher@icu_56@@UAEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::split
	mov	DWORD PTR _r$[ebp], eax
$LN1@split:
; Line 653
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T46309[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _m$[ebp]
	call	??1RegexMatcher@icu_56@@UAE@XZ		; icu_56::RegexMatcher::~RegexMatcher
	mov	eax, DWORD PTR $T46309[ebp]
$LN3@split:
; Line 654
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@split
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN9@split:
	DD	1
	DD	$LN8@split
$LN8@split:
	DD	-304					; fffffed0H
	DD	272					; 00000110H
	DD	$LN6@split
$LN6@split:
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _m$[ebp]
	jmp	??1RegexMatcher@icu_56@@UAE@XZ		; icu_56::RegexMatcher::~RegexMatcher
__ehhandler$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-528]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?split@RegexPattern@icu_56@@UBEHABVUnicodeString@2@QAV32@HAAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::split
PUBLIC	__$ArrayPad$
EXTRN	?split@RegexMatcher@icu_56@@UAEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z:PROC ; icu_56::RegexMatcher::split
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T46323 = -520						; size = 4
_r$ = -316						; size = 4
_m$ = -304						; size = 272
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z PROC ; icu_56::RegexPattern::split, COMDAT
; _this$ = ecx
; Line 663
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 512				; 00000200H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 128				; 00000080H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 664
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@split@2
; Line 665
	xor	eax, eax
	jmp	SHORT $LN3@split@2
$LN2@split@2:
; Line 668
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	??0RegexMatcher@icu_56@@AAE@PBVRegexPattern@1@@Z ; icu_56::RegexMatcher::RegexMatcher
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 669
	mov	DWORD PTR _r$[ebp], 0
; Line 671
	mov	eax, DWORD PTR _m$[ebp+260]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@split@2
; Line 672
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	?split@RegexMatcher@icu_56@@UAEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z ; icu_56::RegexMatcher::split
	mov	DWORD PTR _r$[ebp], eax
$LN1@split@2:
; Line 674
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T46323[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _m$[ebp]
	call	??1RegexMatcher@icu_56@@UAE@XZ		; icu_56::RegexMatcher::~RegexMatcher
	mov	eax, DWORD PTR $T46323[ebp]
$LN3@split@2:
; Line 675
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@split@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN9@split@2:
	DD	1
	DD	$LN8@split@2
$LN8@split@2:
	DD	-304					; fffffed0H
	DD	272					; 00000110H
	DD	$LN6@split@2
$LN6@split@2:
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _m$[ebp]
	jmp	??1RegexMatcher@icu_56@@UAE@XZ		; icu_56::RegexMatcher::~RegexMatcher
__ehhandler$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-528]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?split@RegexPattern@icu_56@@UBEHPAUUText@@QAPAU3@HAAW4UErrorCode@@@Z ENDP ; icu_56::RegexPattern::split
PUBLIC	?dumpOp@RegexPattern@icu_56@@ABEXH@Z		; icu_56::RegexPattern::dumpOp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dumpOp@RegexPattern@icu_56@@ABEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?dumpOp@RegexPattern@icu_56@@ABEXH@Z PROC		; icu_56::RegexPattern::dumpOp, COMDAT
; _this$ = ecx
; Line 685
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 807
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?dumpOp@RegexPattern@icu_56@@ABEXH@Z ENDP		; icu_56::RegexPattern::dumpOp
_TEXT	ENDS
PUBLIC	?dumpPattern@RegexPattern@icu_56@@QBEXXZ	; icu_56::RegexPattern::dumpPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dumpPattern@RegexPattern@icu_56@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?dumpPattern@RegexPattern@icu_56@@QBEXXZ PROC		; icu_56::RegexPattern::dumpPattern, COMDAT
; _this$ = ecx
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 886
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dumpPattern@RegexPattern@icu_56@@QBEXXZ ENDP		; icu_56::RegexPattern::dumpPattern
_TEXT	ENDS
PUBLIC	?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ	; icu_56::RegexPattern::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ PROC	; icu_56::RegexPattern::getStaticClassID, COMDAT
; Line 890
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@RegexPattern@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ ENDP	; icu_56::RegexPattern::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ PROC	; icu_56::RegexPattern::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 890
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@RegexPattern@icu_56@@SAPAXXZ ; icu_56::RegexPattern::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@RegexPattern@icu_56@@UBEPAXXZ ENDP	; icu_56::RegexPattern::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector@2:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector@2
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector@2
$LN3@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END

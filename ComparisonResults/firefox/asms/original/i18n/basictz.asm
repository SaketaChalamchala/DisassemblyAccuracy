; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\basictz.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::BasicTimeZone::operator=
EXTRN	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::TimeZone::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::BasicTimeZone::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::BasicTimeZone::operator=
_TEXT	ENDS
PUBLIC	??1BasicTimeZone@icu_56@@UAE@XZ			; icu_56::BasicTimeZone::~BasicTimeZone
PUBLIC	??_GBasicTimeZone@icu_56@@UAEPAXI@Z		; icu_56::BasicTimeZone::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBasicTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBasicTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::BasicTimeZone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBasicTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::BasicTimeZone::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EBasicTimeZone@icu_56@@UAEPAXI@Z		; icu_56::BasicTimeZone::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EBasicTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EBasicTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::BasicTimeZone::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1BasicTimeZone@icu_56@@UAE@XZ	; icu_56::BasicTimeZone::~BasicTimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	68					; 00000044H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EBasicTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::BasicTimeZone::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7BasicTimeZone@icu_56@@6B@			; icu_56::BasicTimeZone::`vftable'
PUBLIC	??0BasicTimeZone@icu_56@@IAE@XZ			; icu_56::BasicTimeZone::BasicTimeZone
PUBLIC	??_R4BasicTimeZone@icu_56@@6B@			; icu_56::BasicTimeZone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBasicTimeZone@icu_56@@@8		; icu_56::BasicTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BasicTimeZone@icu_56@@8		; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@TimeZone@icu_56@@8		; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTimeZone@icu_56@@@8			; icu_56::TimeZone `RTTI Type Descriptor'
PUBLIC	??_R3TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z ; icu_56::BasicTimeZone::hasEquivalentTransitions
PUBLIC	?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z ; icu_56::BasicTimeZone::getSimpleRulesNear
PUBLIC	?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ; icu_56::BasicTimeZone::getOffsetFromLocal
EXTRN	??0TimeZone@icu_56@@IAE@XZ:PROC			; icu_56::TimeZone::TimeZone
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
EXTRN	??8TimeZone@icu_56@@UBECABV01@@Z:PROC		; icu_56::TimeZone::operator==
EXTRN	?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z:PROC ; icu_56::TimeZone::getOffset
EXTRN	?hasSameRules@TimeZone@icu_56@@UBECABV12@@Z:PROC ; icu_56::TimeZone::hasSameRules
EXTRN	?getDSTSavings@TimeZone@icu_56@@UBEHXZ:PROC	; icu_56::TimeZone::getDSTSavings
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\basictz.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8 ; icu_56::TimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZone@icu_56@@8 DD 00H				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::TimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZone@icu_56@@8 DD FLAT:??_R0?AVTimeZone@icu_56@@@8 ; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 DD FLAT:??_R0?AVBasicTimeZone@icu_56@@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2BasicTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3BasicTimeZone@icu_56@@8 DD 00H			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBasicTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBasicTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BasicTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBasicTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BasicTimeZone@icu_56@@6B@
rdata$r	SEGMENT
??_R4BasicTimeZone@icu_56@@6B@ DD 00H			; icu_56::BasicTimeZone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBasicTimeZone@icu_56@@@8
	DD	FLAT:??_R3BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7BasicTimeZone@icu_56@@6B@
CONST	SEGMENT
??_7BasicTimeZone@icu_56@@6B@ DD FLAT:??_R4BasicTimeZone@icu_56@@6B@ ; icu_56::BasicTimeZone::`vftable'
	DD	FLAT:??_EBasicTimeZone@icu_56@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:??8TimeZone@icu_56@@UBECABV01@@Z
	DD	FLAT:?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasSameRules@TimeZone@icu_56@@UBECABV12@@Z
	DD	FLAT:__purecall
	DD	FLAT:?getDSTSavings@TimeZone@icu_56@@UBEHXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	DD	FLAT:?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0BasicTimeZone@icu_56@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0BasicTimeZone@icu_56@@IAE@XZ PROC			; icu_56::BasicTimeZone::BasicTimeZone, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZone@icu_56@@IAE@XZ		; icu_56::TimeZone::TimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BasicTimeZone@icu_56@@6B@
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0BasicTimeZone@icu_56@@IAE@XZ ENDP			; icu_56::BasicTimeZone::BasicTimeZone
_TEXT	ENDS
PUBLIC	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	??0TimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z:PROC ; icu_56::TimeZone::TimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z PROC	; icu_56::BasicTimeZone::BasicTimeZone, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::TimeZone::TimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BasicTimeZone@icu_56@@6B@
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ENDP	; icu_56::BasicTimeZone::BasicTimeZone
_TEXT	ENDS
PUBLIC	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z		; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	??0TimeZone@icu_56@@IAE@ABV01@@Z:PROC		; icu_56::TimeZone::TimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0BasicTimeZone@icu_56@@IAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_source$ = 8						; size = 4
??0BasicTimeZone@icu_56@@IAE@ABV01@@Z PROC		; icu_56::BasicTimeZone::BasicTimeZone, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TimeZone@icu_56@@IAE@ABV01@@Z	; icu_56::TimeZone::TimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BasicTimeZone@icu_56@@6B@
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0BasicTimeZone@icu_56@@IAE@ABV01@@Z ENDP		; icu_56::BasicTimeZone::BasicTimeZone
_TEXT	ENDS
EXTRN	??1TimeZone@icu_56@@UAE@XZ:PROC			; icu_56::TimeZone::~TimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1BasicTimeZone@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1BasicTimeZone@icu_56@@UAE@XZ PROC			; icu_56::BasicTimeZone::~BasicTimeZone, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BasicTimeZone@icu_56@@6B@
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TimeZone@icu_56@@UAE@XZ		; icu_56::TimeZone::~TimeZone
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1BasicTimeZone@icu_56@@UAE@XZ ENDP			; icu_56::BasicTimeZone::~BasicTimeZone
_TEXT	ENDS
EXTRN	??1TimeZoneTransition@icu_56@@UAE@XZ:PROC	; icu_56::TimeZoneTransition::~TimeZoneTransition
EXTRN	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:PROC ; icu_56::TimeZoneTransition::getTo
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
EXTRN	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:PROC ; icu_56::TimeZoneTransition::getFrom
EXTRN	?getTime@TimeZoneTransition@icu_56@@QBENXZ:PROC	; icu_56::TimeZoneTransition::getTime
EXTRN	??0TimeZoneTransition@icu_56@@QAE@XZ:PROC	; icu_56::TimeZoneTransition::TimeZoneTransition
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z$1
__ehfuncinfo$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv536 = -460						; size = 8
tv278 = -453						; size = 1
tv272 = -453						; size = 1
$T43610 = -445						; size = 1
$T43611 = -433						; size = 1
$T43612 = -421						; size = 1
$T43613 = -409						; size = 1
$T43614 = -397						; size = 1
_inRange2$36624 = -193					; size = 1
_inRange1$36623 = -181					; size = 1
_avail2$36611 = -169					; size = 1
_avail1$36610 = -157					; size = 1
_tr2$ = -148						; size = 24
_tr1$ = -116						; size = 24
_time$ = -84						; size = 8
_dst2$ = -68						; size = 4
_dst1$ = -56						; size = 4
_raw2$ = -44						; size = 4
_raw1$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_tz$ = 8						; size = 4
_start$ = 12						; size = 8
_end$ = 20						; size = 8
_ignoreDstAmount$ = 28					; size = 1
_status$ = 32						; size = 4
?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z PROC ; icu_56::BasicTimeZone::hasEquivalentTransitions, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN33@hasEquival
; Line 40
	xor	al, al
	jmp	$LN34@hasEquival
$LN33@hasEquival:
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _tz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN32@hasEquival
; Line 43
	mov	al, 1
	jmp	$LN34@hasEquival
$LN32@hasEquival:
; Line 47
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _raw1$[ebp]
	push	edx
	push	0
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 48
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN31@hasEquival
; Line 49
	xor	al, al
	jmp	$LN34@hasEquival
$LN31@hasEquival:
; Line 51
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _raw2$[ebp]
	push	edx
	push	0
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _tz$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tz$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 52
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN30@hasEquival
; Line 53
	xor	al, al
	jmp	$LN34@hasEquival
$LN30@hasEquival:
; Line 55
	movsx	eax, BYTE PTR _ignoreDstAmount$[ebp]
	test	eax, eax
	je	SHORT $LN29@hasEquival
; Line 58
	mov	eax, DWORD PTR _raw1$[ebp]
	add	eax, DWORD PTR _dst1$[ebp]
	mov	ecx, DWORD PTR _raw2$[ebp]
	add	ecx, DWORD PTR _dst2$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN27@hasEquival
	cmp	DWORD PTR _dst1$[ebp], 0
	je	SHORT $LN26@hasEquival
	cmp	DWORD PTR _dst2$[ebp], 0
	je	SHORT $LN27@hasEquival
$LN26@hasEquival:
	cmp	DWORD PTR _dst1$[ebp], 0
	jne	SHORT $LN28@hasEquival
	cmp	DWORD PTR _dst2$[ebp], 0
	je	SHORT $LN28@hasEquival
$LN27@hasEquival:
; Line 59
	xor	al, al
	jmp	$LN34@hasEquival
$LN28@hasEquival:
; Line 61
	jmp	SHORT $LN24@hasEquival
$LN29@hasEquival:
; Line 62
	mov	eax, DWORD PTR _raw1$[ebp]
	cmp	eax, DWORD PTR _raw2$[ebp]
	jne	SHORT $LN23@hasEquival
	mov	eax, DWORD PTR _dst1$[ebp]
	cmp	eax, DWORD PTR _dst2$[ebp]
	je	SHORT $LN24@hasEquival
$LN23@hasEquival:
; Line 63
	xor	al, al
	jmp	$LN34@hasEquival
$LN24@hasEquival:
; Line 67
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR _time$[ebp]
; Line 68
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 1
$LN22@hasEquival:
; Line 69
	mov	eax, 1
	test	eax, eax
	je	$LN21@hasEquival
; Line 70
	mov	esi, esp
	lea	eax, DWORD PTR _tr1$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail1$36610[ebp], al
; Line 71
	mov	esi, esp
	lea	eax, DWORD PTR _tr2$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _tz$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tz$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail2$36611[ebp], al
; Line 73
	movsx	eax, BYTE PTR _ignoreDstAmount$[ebp]
	test	eax, eax
	je	$LN14@hasEquival
$LN19@hasEquival:
; Line 75
	mov	eax, 1
	test	eax, eax
	je	$LN18@hasEquival
; Line 80
	movsx	eax, BYTE PTR _avail1$36610[ebp]
	test	eax, eax
	je	$LN17@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _end$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN17@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	edi, eax
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	edi, eax
	cmp	esi, edi
	jne	SHORT $LN17@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN17@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN17@hasEquival
; Line 81
	mov	esi, esp
	lea	eax, DWORD PTR _tr1$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	jmp	SHORT $LN16@hasEquival
$LN17@hasEquival:
; Line 83
	jmp	SHORT $LN18@hasEquival
$LN16@hasEquival:
; Line 85
	jmp	$LN19@hasEquival
$LN18@hasEquival:
; Line 86
	mov	eax, 1
	test	eax, eax
	je	$LN14@hasEquival
; Line 91
	movsx	eax, BYTE PTR _avail2$36611[ebp]
	test	eax, eax
	je	$LN13@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _end$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN13@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	edi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	edi, eax
	cmp	esi, edi
	jne	SHORT $LN13@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN13@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN13@hasEquival
; Line 92
	mov	esi, esp
	lea	eax, DWORD PTR _tr2$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _tz$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tz$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	jmp	SHORT $LN12@hasEquival
$LN13@hasEquival:
; Line 94
	jmp	SHORT $LN14@hasEquival
$LN12@hasEquival:
; Line 96
	jmp	$LN18@hasEquival
$LN14@hasEquival:
; Line 99
	movsx	eax, BYTE PTR _avail1$36610[ebp]
	test	eax, eax
	je	SHORT $LN36@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _end$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN36@hasEquival
	mov	BYTE PTR tv272[ebp], 1
	jmp	SHORT $LN37@hasEquival
$LN36@hasEquival:
	mov	BYTE PTR tv272[ebp], 0
$LN37@hasEquival:
	mov	cl, BYTE PTR tv272[ebp]
	mov	BYTE PTR _inRange1$36623[ebp], cl
; Line 100
	movsx	eax, BYTE PTR _avail2$36611[ebp]
	test	eax, eax
	je	SHORT $LN38@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _end$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN38@hasEquival
	mov	BYTE PTR tv278[ebp], 1
	jmp	SHORT $LN39@hasEquival
$LN38@hasEquival:
	mov	BYTE PTR tv278[ebp], 0
$LN39@hasEquival:
	mov	cl, BYTE PTR tv278[ebp]
	mov	BYTE PTR _inRange2$36624[ebp], cl
; Line 101
	movsx	eax, BYTE PTR _inRange1$36623[ebp]
	test	eax, eax
	jne	SHORT $LN11@hasEquival
	movsx	eax, BYTE PTR _inRange2$36624[ebp]
	test	eax, eax
	jne	SHORT $LN11@hasEquival
; Line 103
	jmp	$LN21@hasEquival
$LN11@hasEquival:
; Line 105
	movsx	eax, BYTE PTR _inRange1$36623[ebp]
	test	eax, eax
	je	SHORT $LN9@hasEquival
	movsx	eax, BYTE PTR _inRange2$36624[ebp]
	test	eax, eax
	jne	SHORT $LN10@hasEquival
$LN9@hasEquival:
; Line 106
	mov	BYTE PTR $T43610[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	al, BYTE PTR $T43610[ebp]
	jmp	$LN34@hasEquival
$LN10@hasEquival:
; Line 108
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	lea	ecx, DWORD PTR _tr2$[ebp]
	fstp	QWORD PTR tv536[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fld	QWORD PTR tv536[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN8@hasEquival
; Line 109
	mov	BYTE PTR $T43611[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	al, BYTE PTR $T43611[ebp]
	jmp	$LN34@hasEquival
$LN8@hasEquival:
; Line 111
	movsx	eax, BYTE PTR _ignoreDstAmount$[ebp]
	test	eax, eax
	je	$LN7@hasEquival
; Line 115
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	edi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	edi, eax
	cmp	esi, edi
	jne	SHORT $LN5@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN4@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN5@hasEquival
$LN4@hasEquival:
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN6@hasEquival
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN6@hasEquival
$LN5@hasEquival:
; Line 116
	mov	BYTE PTR $T43612[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	al, BYTE PTR $T43612[ebp]
	jmp	$LN34@hasEquival
$LN6@hasEquival:
; Line 118
	jmp	SHORT $LN2@hasEquival
$LN7@hasEquival:
; Line 120
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cmp	esi, eax
	jne	SHORT $LN1@hasEquival
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	esi, eax
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	cmp	esi, eax
	je	SHORT $LN2@hasEquival
$LN1@hasEquival:
; Line 121
	mov	BYTE PTR $T43613[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	al, BYTE PTR $T43613[ebp]
	jmp	SHORT $LN34@hasEquival
$LN2@hasEquival:
; Line 124
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _time$[ebp]
; Line 125
	jmp	$LN22@hasEquival
$LN21@hasEquival:
; Line 126
	mov	BYTE PTR $T43614[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tr2$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tr1$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	al, BYTE PTR $T43614[ebp]
$LN34@hasEquival:
; Line 127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN50@hasEquival
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN50@hasEquival:
	DD	6
	DD	$LN49@hasEquival
$LN49@hasEquival:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN42@hasEquival
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN43@hasEquival
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN44@hasEquival
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN45@hasEquival
	DD	-116					; ffffff8cH
	DD	24					; 00000018H
	DD	$LN46@hasEquival
	DD	-148					; ffffff6cH
	DD	24					; 00000018H
	DD	$LN47@hasEquival
$LN47@hasEquival:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN46@hasEquival:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN45@hasEquival:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN44@hasEquival:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$LN43@hasEquival:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	50					; 00000032H
	DB	0
$LN42@hasEquival:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _tr1$[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _tr2$[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__ehhandler$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z ENDP ; icu_56::BasicTimeZone::hasEquivalentTransitions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	__real@421d5ec4b0000000
PUBLIC	__$ArrayPad$
EXTRN	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ:PROC ; icu_56::AnnualTimeZoneRule::getStartYear
EXTRN	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z:PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
EXTRN	?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB:DWORD	; icu_56::AnnualTimeZoneRule::MAX_YEAR
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z:PROC	; icu_56::Grego::dayOfWeekInMonth
EXTRN	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z:PROC	; icu_56::Grego::timeToFields
EXTRN	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::TimeZoneRule::getName
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT __real@421d5ec4b0000000
; File d:\mozilla\intl\icu\source\i18n\basictz.cpp
CONST	SEGMENT
__real@421d5ec4b0000000 DQ 0421d5ec4b0000000r	; 3.1536e+010
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv826 = -848						; size = 4
tv737 = -848						; size = 4
tv958 = -844						; size = 8
tv954 = -844						; size = 8
tv823 = -836						; size = 4
tv734 = -836						; size = 4
tv956 = -832						; size = 8
tv952 = -832						; size = 8
tv950 = -832						; size = 8
tv579 = -828						; size = 4
tv513 = -828						; size = 4
tv501 = -828						; size = 4
tv467 = -828						; size = 4
tv447 = -828						; size = 4
tv379 = -828						; size = 4
tv335 = -828						; size = 4
tv277 = -828						; size = 4
tv202 = -828						; size = 4
tv181 = -828						; size = 4
$T43643 = -820						; size = 4
$T43644 = -808						; size = 4
$T43647 = -796						; size = 4
$T43648 = -784						; size = 4
$T43651 = -772						; size = 4
$T43652 = -760						; size = 4
$T43655 = -748						; size = 4
$T43656 = -736						; size = 4
$T43659 = -724						; size = 4
$T43660 = -712						; size = 4
$T43663 = -700						; size = 4
$T43664 = -688						; size = 4
$T43667 = -676						; size = 4
$T43668 = -664						; size = 4
$T43671 = -652						; size = 4
$T43672 = -640						; size = 4
$T43675 = -628						; size = 4
$T43676 = -616						; size = 4
$T43679 = -604						; size = 4
$T43680 = -592						; size = 4
_dtr$36671 = -388					; size = 4
_weekInMonth$36670 = -376				; size = 4
_d$36669 = -364						; size = 8
_mid$36668 = -348					; size = 4
_doy$36667 = -336					; size = 4
_dow$36666 = -324					; size = 4
_dom$36665 = -312					; size = 4
_month$36664 = -300					; size = 4
_year$36663 = -288					; size = 4
_nextTransitionTime$36659 = -276			; size = 8
_tr$ = -260						; size = 24
_avail$ = -225						; size = 1
_name$ = -216						; size = 64
_ar2$ = -144						; size = 4
_ar1$ = -132						; size = 4
_initialName$ = -120					; size = 64
_initialDst$ = -48					; size = 4
_initialRaw$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_date$ = 8						; size = 8
_initial$ = 16						; size = 4
_std$ = 20						; size = 4
_dst$ = 24						; size = 4
_status$ = 28						; size = 4
?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z PROC ; icu_56::BasicTimeZone::getSimpleRulesNear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 836				; 00000344H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-848]
	mov	ecx, 209				; 000000d1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _initial$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _std$[ebp]
	mov	DWORD PTR [eax], 0
; Line 134
	mov	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR [eax], 0
; Line 135
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN28@getSimpleR
; Line 136
	jmp	$LN29@getSimpleR
$LN28@getSimpleR:
; Line 139
	mov	esi, esp
	lea	ecx, DWORD PTR _initialName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 141
	mov	DWORD PTR _ar1$[ebp], 0
; Line 142
	mov	DWORD PTR _ar2$[ebp], 0
; Line 143
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 146
	lea	ecx, DWORD PTR _tr$[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 148
	mov	esi, esp
	lea	eax, DWORD PTR _tr$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 149
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	$LN27@getSimpleR
; Line 150
	lea	eax, DWORD PTR _initialName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 151
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR _initialRaw$[ebp], eax
; Line 152
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR _initialDst$[ebp], eax
; Line 156
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _nextTransitionTime$36659[ebp]
; Line 159
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN24@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN25@getSimpleR
$LN24@getSimpleR:
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	$LN8@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	$LN8@getSimpleR
$LN25@getSimpleR:
	fld	QWORD PTR _date$[ebp]
	fadd	QWORD PTR __real@421d5ec4b0000000
	fcomp	QWORD PTR _nextTransitionTime$36659[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN8@getSimpleR
; Line 166
	lea	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$36667[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$36666[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$36663[ebp]
	push	edx
	fild	DWORD PTR _initialRaw$[ebp]
	fadd	QWORD PTR _nextTransitionTime$36659[ebp]
	fiadd	DWORD PTR _initialDst$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 167
	mov	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$36663[ebp]
	push	edx
	call	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z ; icu_56::Grego::dayOfWeekInMonth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weekInMonth$36670[ebp], eax
; Line 169
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43644[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T43644[ebp], 0
	je	SHORT $LN31@getSimpleR
	push	0
	mov	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	mov	ecx, DWORD PTR _dow$36666[ebp]
	push	ecx
	mov	edx, DWORD PTR _weekInMonth$36670[ebp]
	push	edx
	mov	eax, DWORD PTR _month$36664[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43644[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN32@getSimpleR
$LN31@getSimpleR:
	mov	DWORD PTR tv181[ebp], 0
$LN32@getSimpleR:
	mov	ecx, DWORD PTR tv181[ebp]
	mov	DWORD PTR $T43643[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T43643[ebp]
	mov	DWORD PTR _dtr$36671[ebp], edx
; Line 170
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 179
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43648[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T43648[ebp], 0
	je	SHORT $LN33@getSimpleR
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	push	eax
	mov	ecx, DWORD PTR _year$36663[ebp]
	push	ecx
	mov	edx, DWORD PTR _dtr$36671[ebp]
	push	edx
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	eax, DWORD PTR _initialRaw$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T43648[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv202[ebp], eax
	jmp	SHORT $LN34@getSimpleR
$LN33@getSimpleR:
	mov	DWORD PTR tv202[ebp], 0
$LN34@getSimpleR:
	mov	edx, DWORD PTR tv202[ebp]
	mov	DWORD PTR $T43647[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T43647[ebp]
	mov	DWORD PTR _ar1$[ebp], eax
; Line 181
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cmp	eax, DWORD PTR _initialRaw$[ebp]
	jne	$LN18@getSimpleR
; Line 183
	mov	esi, esp
	lea	eax, DWORD PTR _tr$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _nextTransitionTime$36659[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 184
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	$LN18@getSimpleR
; Line 189
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN19@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN20@getSimpleR
$LN19@getSimpleR:
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	$LN18@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	$LN18@getSimpleR
$LN20@getSimpleR:
	fld	QWORD PTR _nextTransitionTime$36659[ebp]
	fadd	QWORD PTR __real@421d5ec4b0000000
	lea	ecx, DWORD PTR _tr$[ebp]
	fstp	QWORD PTR tv950[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR tv950[ebp]
	fnstsw	ax
	test	ah, 5
	jp	$LN18@getSimpleR
; Line 193
	lea	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$36667[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$36666[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$36663[ebp]
	push	edx
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	lea	ecx, DWORD PTR _tr$[ebp]
	fstp	QWORD PTR tv952[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR tv734[ebp], eax
	fild	DWORD PTR tv734[ebp]
	fadd	QWORD PTR tv952[ebp]
	lea	ecx, DWORD PTR _tr$[ebp]
	fstp	QWORD PTR tv954[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR tv737[ebp], eax
	fild	DWORD PTR tv737[ebp]
	fadd	QWORD PTR tv954[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 194
	mov	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$36663[ebp]
	push	edx
	call	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z ; icu_56::Grego::dayOfWeekInMonth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weekInMonth$36670[ebp], eax
; Line 196
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43652[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T43652[ebp], 0
	je	SHORT $LN35@getSimpleR
	push	0
	mov	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	mov	ecx, DWORD PTR _dow$36666[ebp]
	push	ecx
	mov	edx, DWORD PTR _weekInMonth$36670[ebp]
	push	edx
	mov	eax, DWORD PTR _month$36664[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43652[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN36@getSimpleR
$LN35@getSimpleR:
	mov	DWORD PTR tv277[ebp], 0
$LN36@getSimpleR:
	mov	ecx, DWORD PTR tv277[ebp]
	mov	DWORD PTR $T43651[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T43651[ebp]
	mov	DWORD PTR _dtr$36671[ebp], edx
; Line 197
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 199
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43656[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T43656[ebp], 0
	je	SHORT $LN37@getSimpleR
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	push	eax
	mov	ecx, DWORD PTR _year$36663[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _dtr$36671[ebp]
	push	edx
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43656[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv335[ebp], eax
	jmp	SHORT $LN38@getSimpleR
$LN37@getSimpleR:
	mov	DWORD PTR tv335[ebp], 0
$LN38@getSimpleR:
	mov	ecx, DWORD PTR tv335[ebp]
	mov	DWORD PTR $T43655[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T43655[ebp]
	mov	DWORD PTR _ar2$[ebp], edx
; Line 202
	mov	esi, esp
	lea	eax, DWORD PTR _d$36669[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 205
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	SHORT $LN17@getSimpleR
	fld	QWORD PTR _date$[ebp]
	fcomp	QWORD PTR _d$36669[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN17@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cmp	DWORD PTR _initialRaw$[ebp], eax
	jne	SHORT $LN17@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	cmp	DWORD PTR _initialDst$[ebp], eax
	je	SHORT $LN18@getSimpleR
$LN17@getSimpleR:
; Line 207
	mov	eax, DWORD PTR _ar2$[ebp]
	mov	DWORD PTR $T43660[ebp], eax
	mov	ecx, DWORD PTR $T43660[ebp]
	mov	DWORD PTR $T43659[ebp], ecx
	cmp	DWORD PTR $T43659[ebp], 0
	je	SHORT $LN39@getSimpleR
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43659[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43659[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv379[ebp], eax
	jmp	SHORT $LN40@getSimpleR
$LN39@getSimpleR:
	mov	DWORD PTR tv379[ebp], 0
$LN40@getSimpleR:
; Line 208
	mov	DWORD PTR _ar2$[ebp], 0
$LN18@getSimpleR:
; Line 213
	cmp	DWORD PTR _ar2$[ebp], 0
	jne	$LN11@getSimpleR
; Line 215
	mov	esi, esp
	lea	eax, DWORD PTR _tr$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 216
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	$LN11@getSimpleR
; Line 220
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN12@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN13@getSimpleR
$LN12@getSimpleR:
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	$LN11@getSimpleR
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	$LN11@getSimpleR
$LN13@getSimpleR:
; Line 224
	lea	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$36667[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$36666[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$36663[ebp]
	push	edx
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	lea	ecx, DWORD PTR _tr$[ebp]
	fstp	QWORD PTR tv956[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR tv823[ebp], eax
	fild	DWORD PTR tv823[ebp]
	fadd	QWORD PTR tv956[ebp]
	lea	ecx, DWORD PTR _tr$[ebp]
	fstp	QWORD PTR tv958[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR tv826[ebp], eax
	fild	DWORD PTR tv826[ebp]
	fadd	QWORD PTR tv958[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 225
	mov	eax, DWORD PTR _dom$36665[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$36664[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$36663[ebp]
	push	edx
	call	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z ; icu_56::Grego::dayOfWeekInMonth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weekInMonth$36670[ebp], eax
; Line 226
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43664[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T43664[ebp], 0
	je	SHORT $LN41@getSimpleR
	push	0
	mov	eax, DWORD PTR _mid$36668[ebp]
	push	eax
	mov	ecx, DWORD PTR _dow$36666[ebp]
	push	ecx
	mov	edx, DWORD PTR _weekInMonth$36670[ebp]
	push	edx
	mov	eax, DWORD PTR _month$36664[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43664[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv447[ebp], eax
	jmp	SHORT $LN42@getSimpleR
$LN41@getSimpleR:
	mov	DWORD PTR tv447[ebp], 0
$LN42@getSimpleR:
	mov	ecx, DWORD PTR tv447[ebp]
	mov	DWORD PTR $T43663[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T43663[ebp]
	mov	DWORD PTR _dtr$36671[ebp], edx
; Line 227
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 232
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43668[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T43668[ebp], 0
	je	SHORT $LN43@getSimpleR
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	push	eax
	mov	ecx, DWORD PTR _ar1$[ebp]
	call	?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getStartYear
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _dtr$36671[ebp]
	push	ecx
	mov	edx, DWORD PTR _initialDst$[ebp]
	push	edx
	mov	eax, DWORD PTR _initialRaw$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T43668[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv467[ebp], eax
	jmp	SHORT $LN44@getSimpleR
$LN43@getSimpleR:
	mov	DWORD PTR tv467[ebp], 0
$LN44@getSimpleR:
	mov	edx, DWORD PTR tv467[ebp]
	mov	DWORD PTR $T43667[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T43667[ebp]
	mov	DWORD PTR _ar2$[ebp], eax
; Line 235
	mov	esi, esp
	lea	eax, DWORD PTR _d$36669[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 236
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	SHORT $LN10@getSimpleR
	fld	QWORD PTR _nextTransitionTime$36659[ebp]
	fcomp	QWORD PTR _d$36669[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN11@getSimpleR
$LN10@getSimpleR:
; Line 238
	mov	eax, DWORD PTR _ar2$[ebp]
	mov	DWORD PTR $T43672[ebp], eax
	mov	ecx, DWORD PTR $T43672[ebp]
	mov	DWORD PTR $T43671[ebp], ecx
	cmp	DWORD PTR $T43671[ebp], 0
	je	SHORT $LN45@getSimpleR
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43671[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43671[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv501[ebp], eax
	jmp	SHORT $LN46@getSimpleR
$LN45@getSimpleR:
	mov	DWORD PTR tv501[ebp], 0
$LN46@getSimpleR:
; Line 239
	mov	DWORD PTR _ar2$[ebp], 0
$LN11@getSimpleR:
; Line 244
	cmp	DWORD PTR _ar2$[ebp], 0
	jne	SHORT $LN9@getSimpleR
; Line 246
	mov	eax, DWORD PTR _ar1$[ebp]
	mov	DWORD PTR $T43676[ebp], eax
	mov	ecx, DWORD PTR $T43676[ebp]
	mov	DWORD PTR $T43675[ebp], ecx
	cmp	DWORD PTR $T43675[ebp], 0
	je	SHORT $LN47@getSimpleR
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43675[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43675[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv513[ebp], eax
	jmp	SHORT $LN48@getSimpleR
$LN47@getSimpleR:
	mov	DWORD PTR tv513[ebp], 0
$LN48@getSimpleR:
; Line 247
	mov	DWORD PTR _ar1$[ebp], 0
; Line 248
	jmp	SHORT $LN8@getSimpleR
$LN9@getSimpleR:
; Line 250
	lea	eax, DWORD PTR _initialName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar1$[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 251
	mov	ecx, DWORD PTR _ar1$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR _initialRaw$[ebp], eax
; Line 252
	mov	ecx, DWORD PTR _ar1$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR _initialDst$[ebp], eax
$LN8@getSimpleR:
; Line 256
	jmp	$LN4@getSimpleR
$LN27@getSimpleR:
; Line 258
	mov	esi, esp
	lea	eax, DWORD PTR _tr$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 259
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	SHORT $LN6@getSimpleR
; Line 260
	lea	eax, DWORD PTR _initialName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 261
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR _initialRaw$[ebp], eax
; Line 262
	lea	ecx, DWORD PTR _tr$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR _initialDst$[ebp], eax
; Line 263
	jmp	$LN4@getSimpleR
$LN6@getSimpleR:
; Line 265
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _initialDst$[ebp]
	push	ecx
	lea	edx, DWORD PTR _initialRaw$[ebp]
	push	edx
	push	0
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getSimpleR
; Line 267
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tr$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _initialName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN29@getSimpleR
$LN4@getSimpleR:
; Line 272
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43680[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T43680[ebp], 0
	je	SHORT $LN49@getSimpleR
	mov	eax, DWORD PTR _initialDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initialRaw$[ebp]
	push	ecx
	lea	edx, DWORD PTR _initialName$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T43680[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv579[ebp], eax
	jmp	SHORT $LN50@getSimpleR
$LN49@getSimpleR:
	mov	DWORD PTR tv579[ebp], 0
$LN50@getSimpleR:
	mov	eax, DWORD PTR tv579[ebp]
	mov	DWORD PTR $T43679[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _initial$[ebp]
	mov	edx, DWORD PTR $T43679[ebp]
	mov	DWORD PTR [ecx], edx
; Line 275
	cmp	DWORD PTR _ar1$[ebp], 0
	je	SHORT $LN1@getSimpleR
	cmp	DWORD PTR _ar2$[ebp], 0
	je	SHORT $LN1@getSimpleR
; Line 276
	mov	ecx, DWORD PTR _ar1$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	je	SHORT $LN2@getSimpleR
; Line 277
	mov	eax, DWORD PTR _dst$[ebp]
	mov	ecx, DWORD PTR _ar1$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 278
	mov	eax, DWORD PTR _std$[ebp]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 279
	jmp	SHORT $LN1@getSimpleR
$LN2@getSimpleR:
; Line 280
	mov	eax, DWORD PTR _std$[ebp]
	mov	ecx, DWORD PTR _ar1$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 281
	mov	eax, DWORD PTR _dst$[ebp]
	mov	ecx, DWORD PTR _ar2$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@getSimpleR:
; Line 284
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tr$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _initialName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN29@getSimpleR:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN75@getSimpleR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 848				; 00000350H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN75@getSimpleR:
	DD	12					; 0000000cH
	DD	$LN74@getSimpleR
$LN74@getSimpleR:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN61@getSimpleR
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN62@getSimpleR
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN63@getSimpleR
	DD	-216					; ffffff28H
	DD	64					; 00000040H
	DD	$LN64@getSimpleR
	DD	-260					; fffffefcH
	DD	24					; 00000018H
	DD	$LN65@getSimpleR
	DD	-288					; fffffee0H
	DD	4
	DD	$LN66@getSimpleR
	DD	-300					; fffffed4H
	DD	4
	DD	$LN67@getSimpleR
	DD	-312					; fffffec8H
	DD	4
	DD	$LN68@getSimpleR
	DD	-324					; fffffebcH
	DD	4
	DD	$LN69@getSimpleR
	DD	-336					; fffffeb0H
	DD	4
	DD	$LN70@getSimpleR
	DD	-348					; fffffea4H
	DD	4
	DD	$LN71@getSimpleR
	DD	-364					; fffffe94H
	DD	8
	DD	$LN72@getSimpleR
$LN72@getSimpleR:
	DB	100					; 00000064H
	DB	0
$LN71@getSimpleR:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN70@getSimpleR:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN69@getSimpleR:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN68@getSimpleR:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN67@getSimpleR:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN66@getSimpleR:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN65@getSimpleR:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN64@getSimpleR:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN63@getSimpleR:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN62@getSimpleR:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN61@getSimpleR:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _initialName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _tr$[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T43644[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T43648[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T43652[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T43656[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T43664[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T43668[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T43680[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-852]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z ENDP ; icu_56::BasicTimeZone::getSimpleRulesNear
PUBLIC	??_R0?AVAnnualTimeZoneRule@icu_56@@@8		; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R0?AVTimeZoneRule@icu_56@@@8			; icu_56::TimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8	; icu_56::TimeArrayTimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_SUVector@icu_56@@6B@				; icu_56::UVector::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::BasicTimeZone::getTimeZoneRulesAfter
PUBLIC	??_R4UVector@icu_56@@6B@			; icu_56::UVector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector@icu_56@@@8			; icu_56::UVector `RTTI Type Descriptor'
PUBLIC	??_R3UVector@icu_56@@8				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector@icu_56@@8				; icu_56::UVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector@icu_56@@8			; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z:PROC
EXTRN	__imp_?isEmpty@UVector@icu_56@@QBECXZ:PROC
EXTRN	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z:PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
EXTRN	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ:PROC ; icu_56::AnnualTimeZoneRule::getRule
EXTRN	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ:PROC ; icu_56::AnnualTimeZoneRule::getEndYear
EXTRN	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z:PROC ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
EXTRN	?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z:PROC ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt
EXTRN	?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ:PROC ; icu_56::TimeArrayTimeZoneRule::getTimeType
EXTRN	?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ:PROC ; icu_56::TimeArrayTimeZoneRule::countStartTimes
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	??_EUVector@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UVector@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector@icu_56@@8 DD FLAT:??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector@icu_56@@8
rdata$r	SEGMENT
??_R2UVector@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector@icu_56@@8
rdata$r	SEGMENT
??_R3UVector@icu_56@@8 DD 00H				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector@icu_56@@6B@ DD 00H				; icu_56::UVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector@icu_56@@@8
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAnnualTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAnnualTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeArrayTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeArrayTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_SUVector@icu_56@@6B@
CONST	SEGMENT
??_SUVector@icu_56@@6B@ DD FLAT:??_R4UVector@icu_56@@6B@ ; icu_56::UVector::`local vftable'
	DD	FLAT:??_EUVector@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$17
	DD	01H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$18
	DD	05H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$19
	DD	01H
	DD	FLAT:__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$20
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv975 = -1060						; size = 4
tv971 = -1060						; size = 4
tv707 = -1060						; size = 4
tv664 = -1060						; size = 4
tv653 = -1060						; size = 4
tv633 = -1060						; size = 4
tv622 = -1060						; size = 4
tv599 = -1060						; size = 4
tv588 = -1060						; size = 4
tv552 = -1060						; size = 4
tv457 = -1060						; size = 4
tv334 = -1060						; size = 4
tv215 = -1060						; size = 4
tv188 = -1060						; size = 4
tv89 = -1060						; size = 4
$T43718 = -1052						; size = 4
$T43719 = -1040						; size = 4
$T43722 = -1028						; size = 4
$T43723 = -1016						; size = 4
$T43726 = -1004						; size = 4
$T43727 = -992						; size = 4
$T43731 = -980						; size = 4
$T43732 = -968						; size = 4
$T43735 = -956						; size = 4
$T43736 = -944						; size = 4
$T43739 = -932						; size = 4
$T43740 = -920						; size = 4
$T43743 = -908						; size = 4
$T43744 = -896						; size = 4
$T43747 = -884						; size = 4
$T43748 = -872						; size = 4
$T43751 = -860						; size = 4
$T43752 = -848						; size = 4
$T43755 = -836						; size = 4
$T43756 = -824						; size = 4
$T43759 = -812						; size = 4
$T43760 = -800						; size = 4
$T43763 = -788						; size = 4
$T43764 = -776						; size = 4
_newAr$36868 = -572					; size = 4
_mid$36867 = -560					; size = 4
_doy$36866 = -548					; size = 4
_dow$36865 = -536					; size = 4
_dom$36864 = -524					; size = 4
_month$36863 = -512					; size = 4
_year$36862 = -500					; size = 4
_newTar$36847 = -488					; size = 4
_newidx$36841 = -476					; size = 4
_asize$36835 = -464					; size = 4
_idx$36828 = -452					; size = 4
_timeType$36827 = -440					; size = 4
_startTimes$36826 = -428				; size = 4
_tzt0$36815 = -416					; size = 24
_ar$36813 = -384					; size = 4
_tar$36809 = -372					; size = 4
_toRule$36800 = -360					; size = 4
_updatedTime$36797 = -348				; size = 8
_bFinalDst$ = -329					; size = 1
_bFinalStd$ = -317					; size = 1
_firstStart$ = -308					; size = 8
_newTimes$ = -292					; size = 4
_t$ = -280						; size = 8
_time$ = -264						; size = 8
_i$ = -248						; size = 4
_name$ = -236						; size = 64
_filteredRules$ = -164					; size = 4
_res_initial$ = -152					; size = 4
_done$ = -140						; size = 4
_r$ = -128						; size = 4
_ruleCount$ = -116					; size = 4
_orgRules$ = -104					; size = 4
_avail$ = -89						; size = 1
_tzt$ = -80						; size = 24
_orgtrs$ = -48						; size = 4
_orgini$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 8
_initial$ = 16						; size = 4
_transitionRules$ = 20					; size = 4
_status$ = 24						; size = 4
?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z PROC ; icu_56::BasicTimeZone::getTimeZoneRulesAfter, COMDAT
; _this$ = ecx
; Line 288
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1048				; 00000418H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1060]
	mov	ecx, 262				; 00000106H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 289
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN82@getTimeZon
; Line 290
	jmp	$LN83@getTimeZon
$LN82@getTimeZon:
; Line 294
	mov	DWORD PTR _orgtrs$[ebp], 0
; Line 295
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 297
	mov	DWORD PTR _orgRules$[ebp], 0
; Line 299
	mov	DWORD PTR _r$[ebp], 0
; Line 300
	mov	DWORD PTR _done$[ebp], 0
; Line 301
	mov	DWORD PTR _res_initial$[ebp], 0
; Line 302
	mov	DWORD PTR _filteredRules$[ebp], 0
; Line 303
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 306
	mov	DWORD PTR _newTimes$[ebp], 0
; Line 308
	mov	BYTE PTR _bFinalStd$[ebp], 0
	mov	BYTE PTR _bFinalDst$[ebp], 0
; Line 311
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ruleCount$[ebp], eax
; Line 312
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN81@getTimeZon
; Line 313
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN83@getTimeZon
$LN81@getTimeZon:
; Line 315
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43719[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T43719[ebp], 0
	je	SHORT $LN85@getTimeZon
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T43719[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T43719[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUVector@icu_56@@6B@
	mov	eax, DWORD PTR $T43719[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN86@getTimeZon
$LN85@getTimeZon:
	mov	DWORD PTR tv89[ebp], 0
$LN86@getTimeZon:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T43718[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T43718[ebp]
	mov	DWORD PTR _orgRules$[ebp], edx
; Line 316
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN80@getTimeZon
; Line 317
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN83@getTimeZon
$LN80@getTimeZon:
; Line 319
	mov	eax, DWORD PTR _ruleCount$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _orgtrs$[ebp], eax
; Line 320
	cmp	DWORD PTR _orgtrs$[ebp], 0
	jne	SHORT $LN79@getTimeZon
; Line 321
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 322
	jmp	$error$36764
$LN79@getTimeZon:
; Line 324
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ruleCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _orgtrs$[ebp]
	push	edx
	lea	eax, DWORD PTR _orgini$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 325
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN77@getTimeZon
; Line 326
	jmp	$error$36764
$LN77@getTimeZon:
; Line 328
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN75@getTimeZon
$LN74@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN75@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ruleCount$[ebp]
	jge	SHORT $LN73@getTimeZon
; Line 329
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _orgtrs$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _orgtrs$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	eax, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 330
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN72@getTimeZon
; Line 331
	jmp	$error$36764
$LN72@getTimeZon:
; Line 333
	jmp	SHORT $LN74@getTimeZon
$LN73@getTimeZon:
; Line 334
	mov	eax, DWORD PTR _orgtrs$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 335
	mov	DWORD PTR _orgtrs$[ebp], 0
; Line 337
	mov	esi, esp
	lea	eax, DWORD PTR _tzt$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 338
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	jne	SHORT $LN70@getTimeZon
; Line 340
	mov	eax, DWORD PTR _orgini$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _orgini$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _initial$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 341
	mov	eax, DWORD PTR _transitionRules$[ebp]
	mov	ecx, DWORD PTR _orgRules$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 342
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN83@getTimeZon
$LN70@getTimeZon:
; Line 345
	mov	eax, DWORD PTR _ruleCount$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _done$[ebp], eax
; Line 346
	cmp	DWORD PTR _done$[ebp], 0
	jne	SHORT $LN69@getTimeZon
; Line 347
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 348
	jmp	$error$36764
$LN69@getTimeZon:
; Line 350
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43723[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T43723[ebp], 0
	je	SHORT $LN87@getTimeZon
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43723[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T43723[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T43723[ebp]
	mov	DWORD PTR tv188[ebp], edx
	jmp	SHORT $LN88@getTimeZon
$LN87@getTimeZon:
	mov	DWORD PTR tv188[ebp], 0
$LN88@getTimeZon:
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR $T43722[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T43722[ebp]
	mov	DWORD PTR _filteredRules$[ebp], ecx
; Line 351
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN67@getTimeZon
; Line 352
	jmp	$error$36764
$LN67@getTimeZon:
; Line 356
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 358
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43727[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T43727[ebp], 0
	je	SHORT $LN89@getTimeZon
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43727[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv215[ebp], eax
	jmp	SHORT $LN90@getTimeZon
$LN89@getTimeZon:
	mov	DWORD PTR tv215[ebp], 0
$LN90@getTimeZon:
	mov	ecx, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T43726[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T43726[ebp]
	mov	DWORD PTR _res_initial$[ebp], edx
; Line 361
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN65@getTimeZon
$LN64@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN65@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ruleCount$[ebp]
	jge	SHORT $LN63@getTimeZon
; Line 362
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 363
	mov	esi, esp
	lea	eax, DWORD PTR _time$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _res_initial$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _res_initial$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 364
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	sete	cl
	mov	edx, DWORD PTR _done$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], cl
; Line 365
	jmp	$LN64@getTimeZon
$LN63@getTimeZon:
; Line 367
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR _time$[ebp]
$LN117@getTimeZon:
; Line 368
	movsx	eax, BYTE PTR _bFinalStd$[ebp]
	test	eax, eax
	je	SHORT $LN60@getTimeZon
	movsx	eax, BYTE PTR _bFinalDst$[ebp]
	test	eax, eax
	jne	$LN61@getTimeZon
$LN60@getTimeZon:
; Line 369
	mov	esi, esp
	lea	eax, DWORD PTR _tzt$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 370
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	jne	SHORT $LN59@getTimeZon
; Line 371
	jmp	$LN61@getTimeZon
$LN59@getTimeZon:
; Line 373
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _updatedTime$36797[ebp]
; Line 374
	fld	QWORD PTR _updatedTime$36797[ebp]
	fld	QWORD PTR _time$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN58@getTimeZon
; Line 378
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 379
	jmp	$error$36764
$LN58@getTimeZon:
; Line 381
	fld	QWORD PTR _updatedTime$36797[ebp]
	fstp	QWORD PTR _time$[ebp]
; Line 383
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	DWORD PTR _toRule$36800[ebp], eax
; Line 384
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN56@getTimeZon
$LN55@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN56@getTimeZon:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ruleCount$[ebp]
	jge	SHORT $LN54@getTimeZon
; Line 385
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 386
	mov	esi, esp
	mov	eax, DWORD PTR _toRule$36800[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN53@getTimeZon
; Line 387
	jmp	SHORT $LN54@getTimeZon
$LN53@getTimeZon:
; Line 389
	jmp	SHORT $LN55@getTimeZon
$LN54@getTimeZon:
; Line 390
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ruleCount$[ebp]
	jl	SHORT $LN52@getTimeZon
; Line 392
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 393
	jmp	$error$36764
$LN52@getTimeZon:
; Line 395
	mov	eax, DWORD PTR _done$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN50@getTimeZon
; Line 396
	jmp	$LN117@getTimeZon
$LN50@getTimeZon:
; Line 398
	push	0
	push	OFFSET ??_R0?AVTimeArrayTimeZoneRule@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZoneRule@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _toRule$36800[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _tar$36809[ebp], eax
; Line 400
	cmp	DWORD PTR _tar$36809[ebp], 0
	je	$LN49@getTimeZon
; Line 402
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 403
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR _t$[ebp]
$LN48@getTimeZon:
; Line 404
	mov	eax, 1
	test	eax, eax
	je	$LN47@getTimeZon
; Line 405
	mov	esi, esp
	lea	eax, DWORD PTR _tzt0$36815[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _avail$[ebp], al
; Line 406
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	jne	SHORT $LN46@getTimeZon
; Line 407
	jmp	SHORT $LN47@getTimeZon
$LN46@getTimeZon:
; Line 409
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	DWORD PTR tv334[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _tar$36809[ebp]
	push	eax
	mov	ecx, DWORD PTR tv334[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv334[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN45@getTimeZon
; Line 410
	jmp	SHORT $LN47@getTimeZon
$LN45@getTimeZon:
; Line 412
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _t$[ebp]
; Line 413
	jmp	$LN48@getTimeZon
$LN47@getTimeZon:
; Line 414
	movsx	eax, BYTE PTR _avail$[ebp]
	test	eax, eax
	je	$LN25@getTimeZon
; Line 416
	mov	esi, esp
	lea	eax, DWORD PTR _firstStart$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	mov	ecx, DWORD PTR _tar$36809[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tar$36809[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 417
	fld	QWORD PTR _start$[ebp]
	fcomp	QWORD PTR _firstStart$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN43@getTimeZon
; Line 419
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tar$36809[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _tar$36809[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 420
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN42@getTimeZon
; Line 520
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
; Line 421
	jmp	$error$36764
$LN42@getTimeZon:
; Line 423
	jmp	$LN25@getTimeZon
$LN43@getTimeZon:
; Line 429
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?countStartTimes@TimeArrayTimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeArrayTimeZoneRule::countStartTimes
	mov	DWORD PTR _startTimes$36826[ebp], eax
; Line 430
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getTimeType@TimeArrayTimeZoneRule@icu_56@@QBE?AW4TimeRuleType@DateTimeRule@2@XZ ; icu_56::TimeArrayTimeZoneRule::getTimeType
	mov	DWORD PTR _timeType$36827[ebp], eax
; Line 431
	mov	DWORD PTR _idx$36828[ebp], 0
	jmp	SHORT $LN39@getTimeZon
$LN38@getTimeZon:
	mov	eax, DWORD PTR _idx$36828[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$36828[ebp], eax
$LN39@getTimeZon:
	mov	eax, DWORD PTR _idx$36828[ebp]
	cmp	eax, DWORD PTR _startTimes$36826[ebp]
	jge	$LN37@getTimeZon
; Line 432
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$36828[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt
; Line 433
	cmp	DWORD PTR _timeType$36827[ebp], 1
	jne	SHORT $LN36@getTimeZon
; Line 434
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR tv971[ebp], eax
	fild	DWORD PTR tv971[ebp]
	fsubr	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _t$[ebp]
$LN36@getTimeZon:
; Line 436
	cmp	DWORD PTR _timeType$36827[ebp], 0
	jne	SHORT $LN35@getTimeZon
; Line 437
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR tv975[ebp], eax
	fild	DWORD PTR tv975[ebp]
	fsubr	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _t$[ebp]
$LN35@getTimeZon:
; Line 439
	fld	QWORD PTR _start$[ebp]
	fcomp	QWORD PTR _t$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN34@getTimeZon
; Line 440
	jmp	SHORT $LN37@getTimeZon
$LN34@getTimeZon:
; Line 442
	jmp	$LN38@getTimeZon
$LN37@getTimeZon:
; Line 443
	mov	eax, DWORD PTR _startTimes$36826[ebp]
	sub	eax, DWORD PTR _idx$36828[ebp]
	mov	DWORD PTR _asize$36835[ebp], eax
; Line 444
	cmp	DWORD PTR _asize$36835[ebp], 0
	jle	$LN25@getTimeZon
; Line 445
	mov	eax, DWORD PTR _asize$36835[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newTimes$[ebp], eax
; Line 446
	cmp	DWORD PTR _newTimes$[ebp], 0
	jne	SHORT $LN32@getTimeZon
; Line 447
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 520
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
; Line 448
	jmp	$error$36764
$LN32@getTimeZon:
; Line 450
	mov	DWORD PTR _newidx$36841[ebp], 0
	jmp	SHORT $LN30@getTimeZon
$LN29@getTimeZon:
	mov	eax, DWORD PTR _newidx$36841[ebp]
	add	eax, 1
	mov	DWORD PTR _newidx$36841[ebp], eax
$LN30@getTimeZon:
	mov	eax, DWORD PTR _newidx$36841[ebp]
	cmp	eax, DWORD PTR _asize$36835[ebp]
	jge	SHORT $LN28@getTimeZon
; Line 451
	mov	eax, DWORD PTR _newidx$36841[ebp]
	mov	ecx, DWORD PTR _newTimes$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	push	edx
	mov	eax, DWORD PTR _idx$36828[ebp]
	add	eax, DWORD PTR _newidx$36841[ebp]
	push	eax
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getStartTimeAt@TimeArrayTimeZoneRule@icu_56@@QBECHAAN@Z ; icu_56::TimeArrayTimeZoneRule::getStartTimeAt
; Line 452
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN27@getTimeZon
; Line 453
	mov	eax, DWORD PTR _newTimes$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 454
	mov	DWORD PTR _newTimes$[ebp], 0
; Line 520
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
; Line 455
	jmp	$error$36764
$LN27@getTimeZon:
; Line 457
	jmp	$LN29@getTimeZon
$LN28@getTimeZon:
; Line 458
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 460
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43732[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T43732[ebp], 0
	je	SHORT $LN91@getTimeZon
	mov	eax, DWORD PTR _timeType$36827[ebp]
	push	eax
	mov	ecx, DWORD PTR _asize$36835[ebp]
	push	ecx
	mov	edx, DWORD PTR _newTimes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _tar$36809[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T43732[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv457[ebp], eax
	jmp	SHORT $LN92@getTimeZon
$LN91@getTimeZon:
	mov	DWORD PTR tv457[ebp], 0
$LN92@getTimeZon:
	mov	ecx, DWORD PTR tv457[ebp]
	mov	DWORD PTR $T43731[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR $T43731[ebp]
	mov	DWORD PTR _newTar$36847[ebp], edx
; Line 461
	mov	eax, DWORD PTR _newTimes$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 462
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newTar$36847[ebp]
	push	ecx
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 463
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN25@getTimeZon
; Line 520
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
; Line 464
	jmp	$error$36764
$LN25@getTimeZon:
; Line 469
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN13@getTimeZon
$LN49@getTimeZon:
	push	0
	push	OFFSET ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZoneRule@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _toRule$36800[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ar$36813[ebp], eax
	cmp	DWORD PTR _ar$36813[ebp], 0
	je	$LN13@getTimeZon
; Line 470
	mov	esi, esp
	lea	eax, DWORD PTR _firstStart$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ar$36813[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 471
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fld	QWORD PTR _firstStart$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN21@getTimeZon
; Line 473
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _ar$36813[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 474
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@getTimeZon
; Line 475
	jmp	$error$36764
$LN20@getTimeZon:
; Line 477
	jmp	$LN17@getTimeZon
$LN21@getTimeZon:
; Line 480
	lea	eax, DWORD PTR _mid$36867[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$36866[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$36865[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$36864[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$36863[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$36862[ebp]
	push	edx
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 482
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 484
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43736[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T43736[ebp], 0
	je	SHORT $LN93@getTimeZon
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getEndYear
	push	eax
	mov	eax, DWORD PTR _year$36862[ebp]
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T43736[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv552[ebp], eax
	jmp	SHORT $LN94@getTimeZon
$LN93@getTimeZon:
	mov	DWORD PTR tv552[ebp], 0
$LN94@getTimeZon:
	mov	edx, DWORD PTR tv552[ebp]
	mov	DWORD PTR $T43735[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T43735[ebp]
	mov	DWORD PTR _newAr$36868[ebp], eax
; Line 485
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newAr$36868[ebp]
	push	ecx
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@getTimeZon
; Line 487
	jmp	$error$36764
$LN17@getTimeZon:
; Line 491
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getEndYear
	cmp	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	jne	SHORT $LN13@getTimeZon
; Line 494
	mov	ecx, DWORD PTR _ar$36813[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	jne	SHORT $LN14@getTimeZon
; Line 495
	mov	BYTE PTR _bFinalStd$[ebp], 1
; Line 496
	jmp	SHORT $LN13@getTimeZon
$LN14@getTimeZon:
; Line 497
	mov	BYTE PTR _bFinalDst$[ebp], 1
$LN13@getTimeZon:
; Line 501
	mov	eax, DWORD PTR _done$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 1
; Line 502
	jmp	$LN117@getTimeZon
$LN61@getTimeZon:
; Line 505
	cmp	DWORD PTR _orgRules$[ebp], 0
	je	$LN98@getTimeZon
$LN11@getTimeZon:
; Line 506
	mov	esi, esp
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN10@getTimeZon
; Line 507
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 508
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T43740[ebp], eax
	mov	ecx, DWORD PTR $T43740[ebp]
	mov	DWORD PTR $T43739[ebp], ecx
	cmp	DWORD PTR $T43739[ebp], 0
	je	SHORT $LN95@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43739[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43739[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv588[ebp], eax
	jmp	SHORT $LN96@getTimeZon
$LN95@getTimeZon:
	mov	DWORD PTR tv588[ebp], 0
$LN96@getTimeZon:
; Line 509
	jmp	SHORT $LN11@getTimeZon
$LN10@getTimeZon:
; Line 510
	mov	eax, DWORD PTR _orgRules$[ebp]
	mov	DWORD PTR $T43744[ebp], eax
	mov	ecx, DWORD PTR $T43744[ebp]
	mov	DWORD PTR $T43743[ebp], ecx
	cmp	DWORD PTR $T43743[ebp], 0
	je	SHORT $LN97@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43743[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43743[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv599[ebp], eax
	jmp	SHORT $LN98@getTimeZon
$LN97@getTimeZon:
	mov	DWORD PTR tv599[ebp], 0
$LN98@getTimeZon:
; Line 512
	cmp	DWORD PTR _done$[ebp], 0
	je	SHORT $LN9@getTimeZon
; Line 513
	mov	eax, DWORD PTR _done$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN9@getTimeZon:
; Line 516
	mov	eax, DWORD PTR _initial$[ebp]
	mov	ecx, DWORD PTR _res_initial$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 517
	mov	eax, DWORD PTR _transitionRules$[ebp]
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 518
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN83@getTimeZon
$error$36764:
; Line 521
	cmp	DWORD PTR _orgtrs$[ebp], 0
	je	SHORT $LN8@getTimeZon
; Line 522
	mov	eax, DWORD PTR _orgtrs$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN8@getTimeZon:
; Line 524
	cmp	DWORD PTR _orgRules$[ebp], 0
	je	$LN102@getTimeZon
$LN6@getTimeZon:
; Line 525
	mov	esi, esp
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@getTimeZon
; Line 526
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _orgRules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 527
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T43748[ebp], eax
	mov	ecx, DWORD PTR $T43748[ebp]
	mov	DWORD PTR $T43747[ebp], ecx
	cmp	DWORD PTR $T43747[ebp], 0
	je	SHORT $LN99@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43747[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43747[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv622[ebp], eax
	jmp	SHORT $LN100@getTimeZon
$LN99@getTimeZon:
	mov	DWORD PTR tv622[ebp], 0
$LN100@getTimeZon:
; Line 528
	jmp	SHORT $LN6@getTimeZon
$LN5@getTimeZon:
; Line 529
	mov	eax, DWORD PTR _orgRules$[ebp]
	mov	DWORD PTR $T43752[ebp], eax
	mov	ecx, DWORD PTR $T43752[ebp]
	mov	DWORD PTR $T43751[ebp], ecx
	cmp	DWORD PTR $T43751[ebp], 0
	je	SHORT $LN101@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43751[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43751[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv633[ebp], eax
	jmp	SHORT $LN102@getTimeZon
$LN101@getTimeZon:
	mov	DWORD PTR tv633[ebp], 0
$LN102@getTimeZon:
; Line 531
	cmp	DWORD PTR _done$[ebp], 0
	je	$LN4@getTimeZon
; Line 532
	cmp	DWORD PTR _filteredRules$[ebp], 0
	je	$LN106@getTimeZon
$LN2@getTimeZon:
; Line 533
	mov	esi, esp
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@getTimeZon
; Line 534
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _filteredRules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 535
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR $T43756[ebp], eax
	mov	ecx, DWORD PTR $T43756[ebp]
	mov	DWORD PTR $T43755[ebp], ecx
	cmp	DWORD PTR $T43755[ebp], 0
	je	SHORT $LN103@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43755[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43755[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv653[ebp], eax
	jmp	SHORT $LN104@getTimeZon
$LN103@getTimeZon:
	mov	DWORD PTR tv653[ebp], 0
$LN104@getTimeZon:
; Line 536
	jmp	$LN2@getTimeZon
$LN1@getTimeZon:
; Line 537
	mov	eax, DWORD PTR _filteredRules$[ebp]
	mov	DWORD PTR $T43760[ebp], eax
	mov	ecx, DWORD PTR $T43760[ebp]
	mov	DWORD PTR $T43759[ebp], ecx
	cmp	DWORD PTR $T43759[ebp], 0
	je	SHORT $LN105@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43759[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43759[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv664[ebp], eax
	jmp	SHORT $LN106@getTimeZon
$LN105@getTimeZon:
	mov	DWORD PTR tv664[ebp], 0
$LN106@getTimeZon:
; Line 539
	mov	eax, DWORD PTR _res_initial$[ebp]
	mov	DWORD PTR $T43764[ebp], eax
	mov	ecx, DWORD PTR $T43764[ebp]
	mov	DWORD PTR $T43763[ebp], ecx
	cmp	DWORD PTR $T43763[ebp], 0
	je	SHORT $LN107@getTimeZon
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43763[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43763[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv707[ebp], eax
	jmp	SHORT $LN108@getTimeZon
$LN107@getTimeZon:
	mov	DWORD PTR tv707[ebp], 0
$LN108@getTimeZon:
; Line 540
	mov	eax, DWORD PTR _done$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN4@getTimeZon:
; Line 543
	mov	eax, DWORD PTR _initial$[ebp]
	mov	DWORD PTR [eax], 0
; Line 544
	mov	eax, DWORD PTR _transitionRules$[ebp]
	mov	DWORD PTR [eax], 0
; Line 545
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
$LN83@getTimeZon:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN134@getTimeZon
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1060				; 00000424H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN134@getTimeZon:
	DD	14					; 0000000eH
	DD	$LN133@getTimeZon
$LN133@getTimeZon:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN118@getTimeZon
	DD	-80					; ffffffb0H
	DD	24					; 00000018H
	DD	$LN119@getTimeZon
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN120@getTimeZon
	DD	-236					; ffffff14H
	DD	64					; 00000040H
	DD	$LN121@getTimeZon
	DD	-264					; fffffef8H
	DD	8
	DD	$LN122@getTimeZon
	DD	-280					; fffffee8H
	DD	8
	DD	$LN123@getTimeZon
	DD	-308					; fffffeccH
	DD	8
	DD	$LN124@getTimeZon
	DD	-416					; fffffe60H
	DD	24					; 00000018H
	DD	$LN125@getTimeZon
	DD	-500					; fffffe0cH
	DD	4
	DD	$LN126@getTimeZon
	DD	-512					; fffffe00H
	DD	4
	DD	$LN127@getTimeZon
	DD	-524					; fffffdf4H
	DD	4
	DD	$LN128@getTimeZon
	DD	-536					; fffffde8H
	DD	4
	DD	$LN129@getTimeZon
	DD	-548					; fffffddcH
	DD	4
	DD	$LN130@getTimeZon
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN131@getTimeZon
$LN131@getTimeZon:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN130@getTimeZon:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN129@getTimeZon:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN128@getTimeZon:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN127@getTimeZon:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN126@getTimeZon:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN125@getTimeZon:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	116					; 00000074H
	DB	48					; 00000030H
	DB	0
$LN124@getTimeZon:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN123@getTimeZon:
	DB	116					; 00000074H
	DB	0
$LN122@getTimeZon:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN121@getTimeZon:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN120@getTimeZon:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN119@getTimeZon:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	116					; 00000074H
	DB	0
$LN118@getTimeZon:
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$13:
	lea	ecx, DWORD PTR _tzt$[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$15:
	mov	esi, esp
	mov	eax, DWORD PTR $T43719[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$16:
	mov	esi, esp
	mov	eax, DWORD PTR $T43723[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$17:
	mov	esi, esp
	mov	eax, DWORD PTR $T43727[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$18:
	lea	ecx, DWORD PTR _tzt0$36815[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$19:
	mov	esi, esp
	mov	eax, DWORD PTR $T43732[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z$20:
	mov	esi, esp
	mov	eax, DWORD PTR $T43736[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1064]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z ENDP ; icu_56::BasicTimeZone::getTimeZoneRulesAfter
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 8
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
_status$ = 32						; size = 4
?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z PROC ; icu_56::BasicTimeZone::getOffsetFromLocal, COMDAT
; _this$ = ecx
; Line 549
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 550
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getOffsetF
; Line 551
	jmp	SHORT $LN2@getOffsetF
$LN1@getOffsetF:
; Line 553
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
$LN2@getOffsetF:
; Line 554
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::BasicTimeZone::getOffsetFromLocal
_TEXT	ENDS
END

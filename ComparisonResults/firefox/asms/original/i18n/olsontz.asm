; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\olsontz.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::OlsonTimeZone::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_ZEROS	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::BasicTimeZone::operator=
EXTRN	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::TimeZone::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::BasicTimeZone::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::BasicTimeZone::operator=
_TEXT	ENDS
PUBLIC	??1OlsonTimeZone@icu_56@@UAE@XZ			; icu_56::OlsonTimeZone::~OlsonTimeZone
PUBLIC	??_GOlsonTimeZone@icu_56@@UAEPAXI@Z		; icu_56::OlsonTimeZone::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GOlsonTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GOlsonTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::OlsonTimeZone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1OlsonTimeZone@icu_56@@UAE@XZ		; icu_56::OlsonTimeZone::~OlsonTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GOlsonTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::OlsonTimeZone::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EOlsonTimeZone@icu_56@@UAEPAXI@Z		; icu_56::OlsonTimeZone::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EOlsonTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EOlsonTimeZone@icu_56@@UAEPAXI@Z PROC		; icu_56::OlsonTimeZone::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1OlsonTimeZone@icu_56@@UAE@XZ	; icu_56::OlsonTimeZone::~OlsonTimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	160					; 000000a0H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1OlsonTimeZone@icu_56@@UAE@XZ		; icu_56::OlsonTimeZone::~OlsonTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EOlsonTimeZone@icu_56@@UAEPAXI@Z ENDP		; icu_56::OlsonTimeZone::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ	; icu_56::OlsonTimeZone::transitionCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ PROC	; icu_56::OlsonTimeZone::transitionCount, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\olsontz.h
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+68]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+70]
	add	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+72]
	add	eax, edx
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ENDP	; icu_56::OlsonTimeZone::transitionCount
_TEXT	ENDS
PUBLIC	__real@408f400000000000
PUBLIC	?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ; icu_56::OlsonTimeZone::transitionTimeInSeconds
PUBLIC	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z	; icu_56::OlsonTimeZone::transitionTime
EXTRN	__fltused:DWORD
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z
_TEXT	SEGMENT
tv76 = -212						; size = 8
_this$ = -8						; size = 4
_transIdx$ = 8						; size = 2
?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z PROC	; icu_56::OlsonTimeZone::transitionTime, COMDAT
; _this$ = ecx
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 409
	movzx	eax, WORD PTR _transIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ; icu_56::OlsonTimeZone::transitionTimeInSeconds
	mov	DWORD PTR tv76[ebp], eax
	mov	DWORD PTR tv76[ebp+4], edx
	fild	QWORD PTR tv76[ebp]
	fmul	QWORD PTR __real@408f400000000000
; Line 410
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ENDP	; icu_56::OlsonTimeZone::transitionTime
_TEXT	ENDS
PUBLIC	?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z	; icu_56::OlsonTimeZone::zoneOffsetAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
_typeIdx$ = -20						; size = 2
_this$ = -8						; size = 4
_transIdx$ = 8						; size = 2
?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z PROC	; icu_56::OlsonTimeZone::zoneOffsetAt, COMDAT
; _this$ = ecx
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 414
	movsx	eax, WORD PTR _transIdx$[ebp]
	test	eax, eax
	jl	SHORT $LN3@zoneOffset
	movsx	ecx, WORD PTR _transIdx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@zoneOffset
$LN3@zoneOffset:
	mov	DWORD PTR tv70[ebp], 0
$LN4@zoneOffset:
	mov	edx, DWORD PTR tv70[ebp]
	shl	edx, 1
	mov	WORD PTR _typeIdx$[ebp], dx
; Line 415
	movsx	eax, WORD PTR _typeIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	movsx	ecx, WORD PTR _typeIdx$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+92]
	mov	eax, DWORD PTR [edx+eax*4]
	add	eax, DWORD PTR [esi+ecx*4+4]
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ENDP	; icu_56::OlsonTimeZone::zoneOffsetAt
_TEXT	ENDS
PUBLIC	?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z	; icu_56::OlsonTimeZone::rawOffsetAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
_typeIdx$ = -20						; size = 2
_this$ = -8						; size = 4
_transIdx$ = 8						; size = 2
?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z PROC		; icu_56::OlsonTimeZone::rawOffsetAt, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 420
	movsx	eax, WORD PTR _transIdx$[ebp]
	test	eax, eax
	jl	SHORT $LN3@rawOffsetA
	movsx	ecx, WORD PTR _transIdx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@rawOffsetA
$LN3@rawOffsetA:
	mov	DWORD PTR tv70[ebp], 0
$LN4@rawOffsetA:
	mov	edx, DWORD PTR tv70[ebp]
	shl	edx, 1
	mov	WORD PTR _typeIdx$[ebp], dx
; Line 421
	movsx	eax, WORD PTR _typeIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [edx+eax*4]
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ENDP		; icu_56::OlsonTimeZone::rawOffsetAt
_TEXT	ENDS
PUBLIC	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z	; icu_56::OlsonTimeZone::dstOffsetAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
_typeIdx$ = -20						; size = 2
_this$ = -8						; size = 4
_transIdx$ = 8						; size = 2
?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z PROC		; icu_56::OlsonTimeZone::dstOffsetAt, COMDAT
; _this$ = ecx
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 426
	movsx	eax, WORD PTR _transIdx$[ebp]
	test	eax, eax
	jl	SHORT $LN3@dstOffsetA
	movsx	ecx, WORD PTR _transIdx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@dstOffsetA
$LN3@dstOffsetA:
	mov	DWORD PTR tv70[ebp], 0
$LN4@dstOffsetA:
	mov	edx, DWORD PTR tv70[ebp]
	shl	edx, 1
	mov	WORD PTR _typeIdx$[ebp], dx
; Line 427
	movsx	eax, WORD PTR _typeIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [edx+eax*4+4]
; Line 428
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ENDP		; icu_56::OlsonTimeZone::dstOffsetAt
_TEXT	ENDS
PUBLIC	?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ	; icu_56::OlsonTimeZone::initialRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ PROC	; icu_56::OlsonTimeZone::initialRawOffset, COMDAT
; _this$ = ecx
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	eax, DWORD PTR [ecx]
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ ENDP	; icu_56::OlsonTimeZone::initialRawOffset
_TEXT	ENDS
PUBLIC	?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ	; icu_56::OlsonTimeZone::initialDstOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ PROC	; icu_56::OlsonTimeZone::initialDstOffset, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	eax, DWORD PTR [ecx+4]
; Line 438
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ ENDP	; icu_56::OlsonTimeZone::initialDstOffset
_TEXT	ENDS
PUBLIC	?getCanonicalID@OlsonTimeZone@icu_56@@QBEPB_WXZ	; icu_56::OlsonTimeZone::getCanonicalID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCanonicalID@OlsonTimeZone@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCanonicalID@OlsonTimeZone@icu_56@@QBEPB_WXZ PROC	; icu_56::OlsonTimeZone::getCanonicalID, COMDAT
; _this$ = ecx
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCanonicalID@OlsonTimeZone@icu_56@@QBEPB_WXZ ENDP	; icu_56::OlsonTimeZone::getCanonicalID
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
EXTRN	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_status$ = 24						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\simpletz.h
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeekInMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 888
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
EXTRN	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_status$ = 20						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 894
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
EXTRN	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setStartRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_after$ = 24						; size = 1
_status$ = 28						; size = 4
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setStartRule, COMDAT
; _this$ = ecx
; Line 898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 899
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _after$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setStartRule
; Line 900
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setStartRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setStartRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
EXTRN	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfWeekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_status$ = 24						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 904
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 905
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeekInMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 906
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
EXTRN	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_time$ = 16						; size = 4
_status$ = 20						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 909
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 910
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _time$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHW4TimeMode@12@AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 911
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
EXTRN	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::setEndRule
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_month$ = 8						; size = 4
_dayOfMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_time$ = 20						; size = 4
_after$ = 24						; size = 1
_status$ = 28						; size = 4
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::setEndRule, COMDAT
; _this$ = ecx
; Line 914
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 915
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _after$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _time$[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHW4TimeMode@12@CAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::setEndRule
; Line 916
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?setEndRule@SimpleTimeZone@icu_56@@QAEXHHHHCAAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::setEndRule
_TEXT	ENDS
PUBLIC	?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::getOffset
EXTRN	?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z:PROC ; icu_56::TimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_local$ = 16						; size = 1
_rawOffsetRef$ = 20					; size = 4
_dstOffsetRef$ = 24					; size = 4
_ec$ = 28						; size = 4
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z PROC ; icu_56::SimpleTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 920
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 921
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstOffsetRef$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawOffsetRef$[ebp]
	push	edx
	movzx	eax, BYTE PTR _local$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOffset@TimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::TimeZone::getOffset
; Line 922
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getOffset@SimpleTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::SimpleTimeZone::getOffset
_TEXT	ENDS
PUBLIC	?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTime
EXTRN	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::getTimeInMillis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::getTime, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\calendar.h
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTimeInMillis@Calendar@icu_56@@IBENAAW4UErrorCode@@@Z ; icu_56::Calendar::getTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTime@Calendar@icu_56@@QBENAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::getTime
_TEXT	ENDS
PUBLIC	?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTime
EXTRN	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::setTimeInMillis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_status$ = 16						; size = 4
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z PROC	; icu_56::Calendar::setTime, COMDAT
; _this$ = ecx
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setTimeInMillis@Calendar@icu_56@@IAEXNAAW4UErrorCode@@@Z ; icu_56::Calendar::setTimeInMillis
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setTime@Calendar@icu_56@@QAEXNAAW4UErrorCode@@@Z ENDP	; icu_56::Calendar::setTime
_TEXT	ENDS
PUBLIC	??9Calendar@icu_56@@QBECABV01@@Z		; icu_56::Calendar::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Calendar@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9Calendar@icu_56@@QBECABV01@@Z PROC			; icu_56::Calendar::operator!=, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Calendar@icu_56@@QBECABV01@@Z ENDP			; icu_56::Calendar::operator!=
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1545
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4EDateFields@12@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1559
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+124], 0
	jle	SHORT $LN3@internalGe
	mov	edx, DWORD PTR _field$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN4@internalGe
$LN3@internalGe:
	mov	edx, DWORD PTR _defaultValue$[ebp]
	mov	DWORD PTR tv71[ebp], edx
$LN4@internalGe:
	mov	eax, DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ; icu_56::Calendar::internalGet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z PROC ; icu_56::Calendar::internalGet, COMDAT
; _this$ = ecx
; Line 1569
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?internalGet@Calendar@icu_56@@IBEHW4UCalendarDateFields@@@Z ENDP ; icu_56::Calendar::internalGet
_TEXT	ENDS
PUBLIC	?internalGetTime@Calendar@icu_56@@IBENXZ	; icu_56::Calendar::internalGetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalGetTime@Calendar@icu_56@@IBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalGetTime@Calendar@icu_56@@IBENXZ PROC		; icu_56::Calendar::internalGetTime, COMDAT
; _this$ = ecx
; Line 1898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalGetTime@Calendar@icu_56@@IBENXZ ENDP		; icu_56::Calendar::internalGetTime
_TEXT	ENDS
PUBLIC	?internalSetTime@Calendar@icu_56@@IAEXN@Z	; icu_56::Calendar::internalSetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetTime@Calendar@icu_56@@IAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_time$ = 8						; size = 8
?internalSetTime@Calendar@icu_56@@IAEXN@Z PROC		; icu_56::Calendar::internalSetTime, COMDAT
; _this$ = ecx
; Line 1907
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [eax+224]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetTime@Calendar@icu_56@@IAEXN@Z ENDP		; icu_56::Calendar::internalSetTime
_TEXT	ENDS
PUBLIC	?getGregorianYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianYear@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianYear, COMDAT
; _this$ = ecx
; Line 1970
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1971
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+272]
; Line 1972
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianYear@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianYear
_TEXT	ENDS
PUBLIC	?getGregorianMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianMonth@Calendar@icu_56@@IBEHXZ PROC		; icu_56::Calendar::getGregorianMonth, COMDAT
; _this$ = ecx
; Line 1979
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1980
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]
; Line 1981
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianMonth@Calendar@icu_56@@IBEHXZ ENDP		; icu_56::Calendar::getGregorianMonth
_TEXT	ENDS
PUBLIC	?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfYear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfYear, COMDAT
; _this$ = ecx
; Line 1988
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1989
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+280]
; Line 1990
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfYear@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfYear
_TEXT	ENDS
PUBLIC	?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ	; icu_56::Calendar::getGregorianDayOfMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ PROC	; icu_56::Calendar::getGregorianDayOfMonth, COMDAT
; _this$ = ecx
; Line 1997
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1998
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+284]
; Line 1999
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGregorianDayOfMonth@Calendar@icu_56@@IBEHXZ ENDP	; icu_56::Calendar::getGregorianDayOfMonth
_TEXT	ENDS
PUBLIC	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
EXTRN	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Calendar::createInstance
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_zone$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z PROC ; icu_56::Calendar::createInstance, COMDAT
; Line 2500
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2502
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _zone$[ebp]
	push	ecx
	call	?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::Calendar::createInstance
	add	esp, 12					; 0000000cH
; Line 2503
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?createInstance@Calendar@icu_56@@SAPAV12@PAVTimeZone@2@AAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::createInstance
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2510
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _up$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	add	ecx, -1
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2511
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_up$ = 12						; size = 1
_status$ = 16						; size = 4
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z PROC ; icu_56::Calendar::roll, COMDAT
; _this$ = ecx
; Line 2516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2517
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _up$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?roll@Calendar@icu_56@@QAEXW4UCalendarDateFields@@CAAW4UErrorCode@@@Z ; icu_56::Calendar::roll
; Line 2518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?roll@Calendar@icu_56@@QAEXW4EDateFields@12@CAAW4UErrorCode@@@Z ENDP ; icu_56::Calendar::roll
_TEXT	ENDS
PUBLIC	?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ; icu_56::Calendar::internalSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
_value$ = 12						; size = 4
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z PROC ; icu_56::Calendar::internalSet, COMDAT
; _this$ = ecx
; Line 2531
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2532
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx
; Line 2533
	mov	eax, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+124], 1
; Line 2534
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _field$[ebp]
	mov	BYTE PTR [eax+100], 1
; Line 2535
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSet@Calendar@icu_56@@IAEXW4UCalendarDateFields@@H@Z ENDP ; icu_56::Calendar::internalSet
_TEXT	ENDS
PUBLIC	?weekNumber@Calendar@icu_56@@IAEHHH@Z		; icu_56::Calendar::weekNumber
EXTRN	?weekNumber@Calendar@icu_56@@IAEHHHH@Z:PROC	; icu_56::Calendar::weekNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?weekNumber@Calendar@icu_56@@IAEHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dayOfPeriod$ = 8					; size = 4
_dayOfWeek$ = 12					; size = 4
?weekNumber@Calendar@icu_56@@IAEHHH@Z PROC		; icu_56::Calendar::weekNumber, COMDAT
; _this$ = ecx
; Line 2540
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2541
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfPeriod$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfPeriod$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?weekNumber@Calendar@icu_56@@IAEHHHH@Z	; icu_56::Calendar::weekNumber
; Line 2542
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?weekNumber@Calendar@icu_56@@IAEHHH@Z ENDP		; icu_56::Calendar::weekNumber
_TEXT	ENDS
PUBLIC	??4ZoneMeta@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::ZoneMeta::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ZoneMeta@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ZoneMeta@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::ZoneMeta::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ZoneMeta@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::ZoneMeta::operator=
_TEXT	ENDS
PUBLIC	?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ	; icu_56::OlsonTimeZone::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ PROC	; icu_56::OlsonTimeZone::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\olsontz.cpp
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ ENDP	; icu_56::OlsonTimeZone::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ ; icu_56::OlsonTimeZone::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ PROC	; icu_56::OlsonTimeZone::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@OlsonTimeZone@icu_56@@SAPAXXZ ; icu_56::OlsonTimeZone::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ ENDP	; icu_56::OlsonTimeZone::getDynamicClassID
_TEXT	ENDS
PUBLIC	?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ	; icu_56::OlsonTimeZone::constructEmpty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ PROC	; icu_56::OlsonTimeZone::constructEmpty, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 100
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+72], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+70], dx
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+68], cx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], 0
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0
; Line 105
	mov	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+88], ax
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], OFFSET _ZEROS
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ ENDP	; icu_56::OlsonTimeZone::constructEmpty
_TEXT	ENDS
PUBLIC	__real@4194997000000000
PUBLIC	??_C@_09MKDNPOFA@finalYear?$AA@			; `string'
PUBLIC	??_C@_08PFKHFAOL@finalRaw?$AA@			; `string'
PUBLIC	??_C@_09OAKPIPBL@finalRule?$AA@			; `string'
PUBLIC	??_C@_07JOJDIHPJ@typeMap?$AA@			; `string'
PUBLIC	??_C@_0M@OFKCJMFA@typeOffsets?$AA@		; `string'
PUBLIC	??_C@_0M@MGHGDNHG@transPost32?$AA@		; `string'
PUBLIC	??_C@_05JIFNPOFN@trans?$AA@			; `string'
PUBLIC	??_C@_0L@DDPPGEMO@transPre32?$AA@		; `string'
PUBLIC	?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::clearTransitionRules
PUBLIC	??_7OlsonTimeZone@icu_56@@6B@			; icu_56::OlsonTimeZone::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::OlsonTimeZone
PUBLIC	??_R4OlsonTimeZone@icu_56@@6B@			; icu_56::OlsonTimeZone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVOlsonTimeZone@icu_56@@@8		; icu_56::OlsonTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3OlsonTimeZone@icu_56@@8			; icu_56::OlsonTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OlsonTimeZone@icu_56@@8			; icu_56::OlsonTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OlsonTimeZone@icu_56@@8		; icu_56::OlsonTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@BasicTimeZone@icu_56@@8		; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBasicTimeZone@icu_56@@@8		; icu_56::BasicTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZone@icu_56@@8		; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTimeZone@icu_56@@@8			; icu_56::TimeZone `RTTI Type Descriptor'
PUBLIC	??_R3TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z	; icu_56::OlsonTimeZone::operator==
PUBLIC	?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::getOffset
PUBLIC	?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::getOffset
PUBLIC	?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::getOffset
PUBLIC	?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z	; icu_56::OlsonTimeZone::setRawOffset
PUBLIC	?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ	; icu_56::OlsonTimeZone::getRawOffset
PUBLIC	?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ	; icu_56::OlsonTimeZone::useDaylightTime
PUBLIC	?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::inDaylightTime
PUBLIC	?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z ; icu_56::OlsonTimeZone::hasSameRules
PUBLIC	?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ ; icu_56::OlsonTimeZone::clone
PUBLIC	?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ	; icu_56::OlsonTimeZone::getDSTSavings
PUBLIC	?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::OlsonTimeZone::getNextTransition
PUBLIC	?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::OlsonTimeZone::getPreviousTransition
PUBLIC	?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::countTransitionRules
PUBLIC	?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::getTimeZoneRules
PUBLIC	?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::getOffsetFromLocal
EXTRN	??1BasicTimeZone@icu_56@@UAE@XZ:PROC		; icu_56::BasicTimeZone::~BasicTimeZone
EXTRN	?getCanonicalCLDRID@ZoneMeta@icu_56@@SAPB_WABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::ZoneMeta::getCanonicalCLDRID
EXTRN	_ures_close_56:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	?fieldsToDay@Grego@icu_56@@SANHHH@Z:PROC	; icu_56::Grego::fieldsToDay
EXTRN	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleTimeZone::SimpleTimeZone
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	?loadRule@TimeZone@icu_56@@KAPAUUResourceBundle@@PBU3@ABVUnicodeString@2@PAU3@AAW4UErrorCode@@@Z:PROC ; icu_56::TimeZone::loadRule
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	_ures_getInt_56:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	_ures_getBinary_56:PROC
EXTRN	_ures_getIntVector_56:PROC
EXTRN	_ures_getByKey_56:PROC
EXTRN	_ures_initStackObject_56:PROC
EXTRN	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z:PROC ; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::hasEquivalentTransitions
EXTRN	?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::getSimpleRulesNear
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8 ; icu_56::TimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZone@icu_56@@8 DD 00H				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::TimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZone@icu_56@@8 DD FLAT:??_R0?AVTimeZone@icu_56@@@8 ; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2BasicTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3BasicTimeZone@icu_56@@8 DD 00H			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBasicTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBasicTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BasicTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBasicTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 DD FLAT:??_R0?AVBasicTimeZone@icu_56@@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OlsonTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OlsonTimeZone@icu_56@@8 DD FLAT:??_R0?AVOlsonTimeZone@icu_56@@@8 ; icu_56::OlsonTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3OlsonTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2OlsonTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2OlsonTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@OlsonTimeZone@icu_56@@8 ; icu_56::OlsonTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3OlsonTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3OlsonTimeZone@icu_56@@8 DD 00H			; icu_56::OlsonTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2OlsonTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOlsonTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVOlsonTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::OlsonTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOlsonTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4OlsonTimeZone@icu_56@@6B@
rdata$r	SEGMENT
??_R4OlsonTimeZone@icu_56@@6B@ DD 00H			; icu_56::OlsonTimeZone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOlsonTimeZone@icu_56@@@8
	DD	FLAT:??_R3OlsonTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT __real@4194997000000000
CONST	SEGMENT
__real@4194997000000000 DQ 04194997000000000r	; 8.64e+007
CONST	ENDS
;	COMDAT ??_C@_09MKDNPOFA@finalYear?$AA@
CONST	SEGMENT
??_C@_09MKDNPOFA@finalYear?$AA@ DB 'finalYear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PFKHFAOL@finalRaw?$AA@
CONST	SEGMENT
??_C@_08PFKHFAOL@finalRaw?$AA@ DB 'finalRaw', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OAKPIPBL@finalRule?$AA@
CONST	SEGMENT
??_C@_09OAKPIPBL@finalRule?$AA@ DB 'finalRule', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JOJDIHPJ@typeMap?$AA@
CONST	SEGMENT
??_C@_07JOJDIHPJ@typeMap?$AA@ DB 'typeMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OFKCJMFA@typeOffsets?$AA@
CONST	SEGMENT
??_C@_0M@OFKCJMFA@typeOffsets?$AA@ DB 'typeOffsets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGHGDNHG@transPost32?$AA@
CONST	SEGMENT
??_C@_0M@MGHGDNHG@transPost32?$AA@ DB 'transPost32', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JIFNPOFN@trans?$AA@
CONST	SEGMENT
??_C@_05JIFNPOFN@trans?$AA@ DB 'trans', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDPPGEMO@transPre32?$AA@
CONST	SEGMENT
??_C@_0L@DDPPGEMO@transPre32?$AA@ DB 'transPre32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7OlsonTimeZone@icu_56@@6B@
CONST	SEGMENT
??_7OlsonTimeZone@icu_56@@6B@ DD FLAT:??_R4OlsonTimeZone@icu_56@@6B@ ; icu_56::OlsonTimeZone::`vftable'
	DD	FLAT:??_EOlsonTimeZone@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@OlsonTimeZone@icu_56@@UBEPAXXZ
	DD	FLAT:??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z
	DD	FLAT:?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
	DD	FLAT:?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z
	DD	FLAT:?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ
	DD	FLAT:?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ
	DD	FLAT:?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	DD	FLAT:?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z
	DD	FLAT:?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	FLAT:?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ
	DD	FLAT:?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	DD	FLAT:?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	DD	FLAT:?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$3
__ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv317 = -624						; size = 4
$T79383 = -616						; size = 4
$T79384 = -604						; size = 4
_emptyStr$71985 = -400					; size = 64
_ruleData$71983 = -328					; size = 4
_rule$71982 = -316					; size = 4
_ruleID$71981 = -304					; size = 64
_ruleYear$71979 = -232					; size = 4
_ruleRaw$71977 = -220					; size = 4
_ruleIdUStr$71974 = -208				; size = 4
_r$71949 = -196						; size = 152
_len$71948 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_top$ = 8						; size = 4
_res$ = 12						; size = 4
_tzid$ = 16						; size = 4
_ec$ = 20						; size = 4
??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::OlsonTimeZone, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 612				; 00000264H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 153				; 00000099H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABVUnicodeString@1@@Z ; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OlsonTimeZone@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::clearTransitionRules
; Line 126
	cmp	DWORD PTR _top$[ebp], 0
	je	SHORT $LN28@OlsonTimeZ
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN29@OlsonTimeZ
$LN28@OlsonTimeZ:
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN29@OlsonTimeZ
; Line 127
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN29@OlsonTimeZ:
; Line 129
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN27@OlsonTimeZ
; Line 136
	lea	eax, DWORD PTR _r$71949[ebp]
	push	eax
	call	_ures_initStackObject_56
	add	esp, 4
; Line 139
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_0L@DDPPGEMO@transPre32?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 140
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$71949[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 141
	mov	eax, DWORD PTR _len$71948[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+68], ax
; Line 142
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN26@OlsonTimeZ
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 145
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+68], ax
; Line 146
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN24@OlsonTimeZ
$LN26@OlsonTimeZ:
; Line 147
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN24@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 0
	jl	SHORT $LN23@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 32767	; 00007fffH
	jg	SHORT $LN23@OlsonTimeZ
	mov	eax, DWORD PTR _len$71948[ebp]
	and	eax, 1
	je	SHORT $LN24@OlsonTimeZ
$LN23@OlsonTimeZ:
; Line 148
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN24@OlsonTimeZ:
; Line 152
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_05JIFNPOFN@trans?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 153
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$71949[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _len$71948[ebp]
	mov	WORD PTR [eax+70], cx
; Line 155
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN22@OlsonTimeZ
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 158
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+70], ax
; Line 159
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN20@OlsonTimeZ
$LN22@OlsonTimeZ:
; Line 160
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 0
	jl	SHORT $LN19@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 32767	; 00007fffH
	jle	SHORT $LN20@OlsonTimeZ
$LN19@OlsonTimeZ:
; Line 161
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN20@OlsonTimeZ:
; Line 165
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_0M@MGHGDNHG@transPost32?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 166
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$71949[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 167
	mov	eax, DWORD PTR _len$71948[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+72], ax
; Line 168
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN18@OlsonTimeZ
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 171
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+72], ax
; Line 172
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN16@OlsonTimeZ
$LN18@OlsonTimeZ:
; Line 173
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 0
	jl	SHORT $LN15@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 32767	; 00007fffH
	jg	SHORT $LN15@OlsonTimeZ
	mov	eax, DWORD PTR _len$71948[ebp]
	and	eax, 1
	je	SHORT $LN16@OlsonTimeZ
$LN15@OlsonTimeZ:
; Line 174
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN16@OlsonTimeZ:
; Line 178
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_0M@OFKCJMFA@typeOffsets?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 179
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$71949[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
; Line 180
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 2
	jl	SHORT $LN13@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 32766	; 00007ffeH
	jg	SHORT $LN13@OlsonTimeZ
	mov	eax, DWORD PTR _len$71948[ebp]
	and	eax, 1
	je	SHORT $LN14@OlsonTimeZ
$LN13@OlsonTimeZ:
; Line 181
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN14@OlsonTimeZ:
; Line 183
	movsx	eax, WORD PTR _len$71948[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+88], ax
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	cwde
	test	eax, eax
	jle	SHORT $LN9@OlsonTimeZ
; Line 188
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_07JOJDIHPJ@typeMap?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 189
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$71949[ebp]
	push	edx
	call	_ures_getBinary_56
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], eax
; Line 190
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN11@OlsonTimeZ
; Line 192
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
	jmp	SHORT $LN9@OlsonTimeZ
$LN11@OlsonTimeZ:
; Line 193
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@OlsonTimeZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	cwde
	cmp	DWORD PTR _len$71948[ebp], eax
	je	SHORT $LN9@OlsonTimeZ
; Line 194
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN9@OlsonTimeZ:
; Line 199
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	push	OFFSET ??_C@_09OAKPIPBL@finalRule?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ruleIdUStr$71974[ebp], eax
; Line 200
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_08PFKHFAOL@finalRaw?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 201
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	call	_ures_getInt_56
	add	esp, 8
	mov	DWORD PTR _ruleRaw$71977[ebp], eax
; Line 202
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	push	OFFSET ??_C@_09MKDNPOFA@finalYear?$AA@
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	_ures_getByKey_56
	add	esp, 16					; 00000010H
; Line 203
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$71949[ebp]
	push	ecx
	call	_ures_getInt_56
	add	esp, 8
	mov	DWORD PTR _ruleYear$71979[ebp], eax
; Line 204
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN8@OlsonTimeZ
; Line 205
	mov	esi, esp
	mov	eax, DWORD PTR _len$71948[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleIdUStr$71974[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR _ruleID$71981[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 206
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _ruleID$71981[ebp]
	push	ecx
	mov	edx, DWORD PTR _top$[ebp]
	push	edx
	call	?loadRule@TimeZone@icu_56@@KAPAUUResourceBundle@@PBU3@ABVUnicodeString@2@PAU3@AAW4UErrorCode@@@Z ; icu_56::TimeZone::loadRule
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rule$71982[ebp], eax
; Line 207
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$71948[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$71982[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ruleData$71983[ebp], eax
; Line 208
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN7@OlsonTimeZ
	cmp	DWORD PTR _len$71948[ebp], 11		; 0000000bH
	jne	$LN7@OlsonTimeZ
; Line 209
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$71985[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 219
	mov	esi, esp
	push	136					; 00000088H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79384[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T79384[ebp], 0
	je	$LN32@OlsonTimeZ
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ruleData$71983[ebp]
	mov	edx, DWORD PTR [ecx+40]
	imul	edx, 1000				; 000003e8H
	push	edx
	mov	eax, DWORD PTR _ruleData$71983[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _ruleData$71983[ebp]
	mov	eax, DWORD PTR [edx+32]
	imul	eax, 1000				; 000003e8H
	push	eax
	mov	ecx, DWORD PTR _ruleData$71983[ebp]
	movzx	edx, BYTE PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _ruleData$71983[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _ruleData$71983[ebp]
	movzx	eax, BYTE PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _ruleData$71983[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _ruleData$71983[ebp]
	mov	ecx, DWORD PTR [eax+12]
	imul	ecx, 1000				; 000003e8H
	push	ecx
	mov	edx, DWORD PTR _ruleData$71983[ebp]
	movzx	eax, BYTE PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ruleData$71983[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _ruleData$71983[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _emptyStr$71985[ebp]
	push	edx
	mov	eax, DWORD PTR _ruleRaw$71977[ebp]
	imul	eax, 1000				; 000003e8H
	push	eax
	mov	ecx, DWORD PTR $T79384[ebp]
	call	??0SimpleTimeZone@icu_56@@QAE@HABVUnicodeString@1@CCCHW4TimeMode@01@CCCH1HAAW4UErrorCode@@@Z ; icu_56::SimpleTimeZone::SimpleTimeZone
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN33@OlsonTimeZ
$LN32@OlsonTimeZ:
	mov	DWORD PTR tv317[ebp], 0
$LN33@OlsonTimeZ:
	mov	ecx, DWORD PTR tv317[ebp]
	mov	DWORD PTR $T79383[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T79383[ebp]
	mov	DWORD PTR [edx+100], eax
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN6@OlsonTimeZ
; Line 221
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
; Line 222
	jmp	SHORT $LN5@OlsonTimeZ
$LN6@OlsonTimeZ:
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ruleYear$71979[ebp]
	mov	DWORD PTR [eax+112], ecx
; Line 242
	push	1
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fmul	QWORD PTR __real@4194997000000000
	mov	edx, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [edx+104]
$LN5@OlsonTimeZ:
; Line 244
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$71985[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@OlsonTimeZ
$LN7@OlsonTimeZ:
; Line 245
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 3
$LN4@OlsonTimeZ:
; Line 247
	mov	eax, DWORD PTR _rule$71982[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 248
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleID$71981[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@OlsonTimeZ
$LN8@OlsonTimeZ:
	mov	eax, DWORD PTR _ec$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN2@OlsonTimeZ
; Line 250
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@OlsonTimeZ:
; Line 252
	lea	eax, DWORD PTR _r$71949[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 255
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	call	?getCanonicalCLDRID@ZoneMeta@icu_56@@SAPB_WABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::ZoneMeta::getCanonicalCLDRID
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], eax
$LN27@OlsonTimeZ:
; Line 258
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@OlsonTimeZ
; Line 259
	mov	ecx, DWORD PTR _this$[ebp]
	call	?constructEmpty@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::constructEmpty
$LN1@OlsonTimeZ:
; Line 261
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@OlsonTimeZ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN44@OlsonTimeZ:
	DD	4
	DD	$LN43@OlsonTimeZ
$LN43@OlsonTimeZ:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN38@OlsonTimeZ
	DD	-196					; ffffff3cH
	DD	152					; 00000098H
	DD	$LN39@OlsonTimeZ
	DD	-304					; fffffed0H
	DD	64					; 00000040H
	DD	$LN40@OlsonTimeZ
	DD	-400					; fffffe70H
	DD	64					; 00000040H
	DD	$LN41@OlsonTimeZ
$LN41@OlsonTimeZ:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN40@OlsonTimeZ:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN39@OlsonTimeZ:
	DB	114					; 00000072H
	DB	0
$LN38@OlsonTimeZ:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleID$71981[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _emptyStr$71985[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	mov	eax, DWORD PTR $T79384[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-628]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0OlsonTimeZone@icu_56@@QAE@PBUUResourceBundle@@0ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::OlsonTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::OlsonTimeZone::operator=
PUBLIC	??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z		; icu_56::OlsonTimeZone::OlsonTimeZone
EXTRN	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::BasicTimeZone::BasicTimeZone
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\olsontz.cpp
xdata$x	SEGMENT
__unwindtable$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z PROC		; icu_56::OlsonTimeZone::OlsonTimeZone, COMDAT
; _this$ = ecx
; Line 267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z	; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OlsonTimeZone@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 268
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::OlsonTimeZone::operator=
; Line 269
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::OlsonTimeZone::OlsonTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv147 = -232						; size = 4
tv95 = -232						; size = 4
$T79426 = -224						; size = 4
$T79427 = -212						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::OlsonTimeZone::operator=, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
; Line 278
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dx, WORD PTR [ecx+68]
	mov	WORD PTR [eax+68], dx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dx, WORD PTR [ecx+70]
	mov	WORD PTR [eax+70], dx
; Line 283
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dx, WORD PTR [ecx+72]
	mov	WORD PTR [eax+72], dx
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	dx, WORD PTR [ecx+88]
	mov	WORD PTR [eax+88], dx
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+92], edx
; Line 287
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+96], edx
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T79427[ebp], ecx
	mov	edx, DWORD PTR $T79427[ebp]
	mov	DWORD PTR $T79426[ebp], edx
	cmp	DWORD PTR $T79426[ebp], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79426[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79426[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv95[ebp], 0
$LN4@operator:
; Line 291
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN5@operator
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	DWORD PTR tv147[ebp], 0
$LN6@operator:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [ecx+100], edx
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	fld	QWORD PTR [ecx+104]
	fstp	QWORD PTR [eax+104]
; Line 296
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::clearTransitionRules
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
; Line 299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4OlsonTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::OlsonTimeZone::operator=
_TEXT	ENDS
PUBLIC	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1OlsonTimeZone@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1OlsonTimeZone@icu_56@@UAE@XZ$0
__ehfuncinfo$??1OlsonTimeZone@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1OlsonTimeZone@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1OlsonTimeZone@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv86 = -244						; size = 4
$T79434 = -236						; size = 4
$T79435 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1OlsonTimeZone@icu_56@@UAE@XZ PROC			; icu_56::OlsonTimeZone::~OlsonTimeZone, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1OlsonTimeZone@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OlsonTimeZone@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 305
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR $T79435[ebp], ecx
	mov	edx, DWORD PTR $T79435[ebp]
	mov	DWORD PTR $T79434[ebp], edx
	cmp	DWORD PTR $T79434[ebp], 0
	je	SHORT $LN3@OlsonTimeZ@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79434[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79434[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN1@OlsonTimeZ@2
$LN3@OlsonTimeZ@2:
	mov	DWORD PTR tv86[ebp], 0
$LN1@OlsonTimeZ@2:
; Line 307
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1OlsonTimeZone@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__ehhandler$??1OlsonTimeZone@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1OlsonTimeZone@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1OlsonTimeZone@icu_56@@UAE@XZ ENDP			; icu_56::OlsonTimeZone::~OlsonTimeZone
EXTRN	??8TimeZone@icu_56@@UBECABV01@@Z:PROC		; icu_56::TimeZone::operator==
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z
_TEXT	SEGMENT
tv130 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z PROC	; icu_56::OlsonTimeZone::operator==, COMDAT
; _this$ = ecx
; Line 312
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	je	SHORT $LN4@operator@2
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8TimeZone@icu_56@@UBECABV01@@Z	; icu_56::TimeZone::operator==
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@operator@2
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	BYTE PTR tv130[ebp], 0
	jmp	SHORT $LN5@operator@2
$LN4@operator@2:
	mov	BYTE PTR tv130[ebp], 1
$LN5@operator@2:
	mov	al, BYTE PTR tv130[ebp]
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8OlsonTimeZone@icu_56@@UBECABVTimeZone@1@@Z ENDP	; icu_56::OlsonTimeZone::operator==
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0
__ehfuncinfo$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T79452 = -236						; size = 4
$T79453 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ PROC	; icu_56::OlsonTimeZone::clone, COMDAT
; _this$ = ecx
; Line 322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 323
	mov	esi, esp
	push	160					; 000000a0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79453[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T79453[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T79453[ebp]
	call	??0OlsonTimeZone@icu_56@@QAE@ABV01@@Z	; icu_56::OlsonTimeZone::OlsonTimeZone
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T79452[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T79452[ebp]
; Line 324
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T79453[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@OlsonTimeZone@icu_56@@UBEPAVTimeZone@2@XZ ENDP	; icu_56::OlsonTimeZone::clone
PUBLIC	?monthLength@Grego@icu_56@@SACHH@Z		; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_dom$ = 20						; size = 4
_dow$ = 24						; size = 1
_millis$ = 28						; size = 4
_ec$ = 32						; size = 4
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN3@getOffset
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jle	SHORT $LN4@getOffset
$LN3@getOffset:
; Line 333
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getOffset
; Line 334
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
$LN2@getOffset:
; Line 336
	xor	eax, eax
	jmp	SHORT $LN5@getOffset
; Line 337
	jmp	SHORT $LN5@getOffset
$LN4@getOffset:
; Line 340
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	eax, al
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dow$[ebp]
	push	edx
	mov	eax, DWORD PTR _dom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	movzx	eax, BYTE PTR _era$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@getOffset:
; Line 342
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::getOffset
_TEXT	ENDS
PUBLIC	?isLeapYear@Grego@icu_56@@SACH@Z		; icu_56::Grego::isLeapYear
EXTRN	?MONTH_LENGTH@Grego@icu_56@@0QBCB:BYTE		; icu_56::Grego::MONTH_LENGTH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?monthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
_month$ = 12						; size = 4
?monthLength@Grego@icu_56@@SACHH@Z PROC			; icu_56::Grego::monthLength, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _month$[ebp]
	mov	al, BYTE PTR ?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?monthLength@Grego@icu_56@@SACHH@Z ENDP			; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isLeapYear@Grego@icu_56@@SACH@Z
_TEXT	SEGMENT
tv70 = -193						; size = 1
_year$ = 8						; size = 4
?isLeapYear@Grego@icu_56@@SACH@Z PROC			; icu_56::Grego::isLeapYear, COMDAT
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, 3
	jne	SHORT $LN4@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN3@isLeapYear:
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@isLeapYear
$LN4@isLeapYear:
	mov	BYTE PTR tv70[ebp], 0
$LN5@isLeapYear:
	mov	al, BYTE PTR tv70[ebp]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@Grego@icu_56@@SACH@Z ENDP			; icu_56::Grego::isLeapYear
_TEXT	ENDS
PUBLIC	?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z ; icu_56::OlsonTimeZone::getHistoricalOffset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dstoff$ = -48						; size = 4
_rawoff$ = -36						; size = 4
_date$ = -24						; size = 8
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_dom$ = 20						; size = 4
_dow$ = 24						; size = 1
_millis$ = 28						; size = 4
_monthLength$ = 32					; size = 4
_ec$ = 36						; size = 4
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::getOffset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\olsontz.cpp
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 351
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@getOffset@2
; Line 352
	xor	eax, eax
	jmp	$LN7@getOffset@2
$LN6@getOffset@2:
; Line 365
	movzx	eax, BYTE PTR _era$[ebp]
	cmp	eax, 1
	je	SHORT $LN3@getOffset@2
	movzx	eax, BYTE PTR _era$[ebp]
	test	eax, eax
	jne	SHORT $LN4@getOffset@2
$LN3@getOffset@2:
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jg	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _dom$[ebp], 1
	jl	SHORT $LN4@getOffset@2
	mov	eax, DWORD PTR _dom$[ebp]
	cmp	eax, DWORD PTR _monthLength$[ebp]
	jg	SHORT $LN4@getOffset@2
	movzx	eax, BYTE PTR _dow$[ebp]
	cmp	eax, 1
	jl	SHORT $LN4@getOffset@2
	movzx	eax, BYTE PTR _dow$[ebp]
	cmp	eax, 7
	jg	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _millis$[ebp], 0
	jl	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _millis$[ebp], 86400000	; 05265c00H
	jge	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _monthLength$[ebp], 28	; 0000001cH
	jl	SHORT $LN4@getOffset@2
	cmp	DWORD PTR _monthLength$[ebp], 31	; 0000001fH
	jle	SHORT $LN5@getOffset@2
$LN4@getOffset@2:
; Line 366
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 1
; Line 367
	xor	eax, eax
	jmp	$LN7@getOffset@2
$LN5@getOffset@2:
; Line 370
	movzx	eax, BYTE PTR _era$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getOffset@2
; Line 371
	mov	eax, DWORD PTR _year$[ebp]
	neg	eax
	mov	DWORD PTR _year$[ebp], eax
$LN2@getOffset@2:
; Line 374
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN1@getOffset@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _year$[ebp]
	cmp	ecx, DWORD PTR [eax+112]
	jl	SHORT $LN1@getOffset@2
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _monthLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _millis$[ebp]
	push	edx
	movzx	eax, BYTE PTR _dow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _era$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+100]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@getOffset@2
$LN1@getOffset@2:
; Line 380
	mov	eax, DWORD PTR _dom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fmul	QWORD PTR __real@4194997000000000
	fiadd	DWORD PTR _millis$[ebp]
	fstp	QWORD PTR _date$[ebp]
; Line 382
	lea	eax, DWORD PTR _dstoff$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rawoff$[ebp]
	push	ecx
	push	1
	push	3
	push	1
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z ; icu_56::OlsonTimeZone::getHistoricalOffset
; Line 383
	mov	eax, DWORD PTR _rawoff$[ebp]
	add	eax, DWORD PTR _dstoff$[ebp]
$LN7@getOffset@2:
; Line 384
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getOffset@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN12@getOffset@2:
	DD	2
	DD	$LN11@getOffset@2
$LN11@getOffset@2:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN9@getOffset@2
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN10@getOffset@2
$LN10@getOffset@2:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN9@getOffset@2:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
?getOffset@OlsonTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_local$ = 16						; size = 1
_rawoff$ = 20						; size = 4
_dstoff$ = 24						; size = 4
_ec$ = 28						; size = 4
?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 391
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getOffset@3
; Line 392
	jmp	SHORT $LN4@getOffset@3
$LN3@getOffset@3:
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN2@getOffset@3
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+104]
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@getOffset@3
; Line 395
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawoff$[ebp]
	push	edx
	movzx	eax, BYTE PTR _local$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 396
	jmp	SHORT $LN1@getOffset@3
$LN2@getOffset@3:
; Line 397
	mov	eax, DWORD PTR _dstoff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawoff$[ebp]
	push	ecx
	push	12					; 0000000cH
	push	4
	movzx	edx, BYTE PTR _local$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z ; icu_56::OlsonTimeZone::getHistoricalOffset
$LN1@getOffset@3:
$LN4@getOffset@3:
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getOffset@OlsonTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_nonExistingTimeOpt$ = 16				; size = 4
_duplicatedTimeOpt$ = 20				; size = 4
_rawoff$ = 24						; size = 4
_dstoff$ = 28						; size = 4
_ec$ = 32						; size = 4
?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::getOffsetFromLocal, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	eax, DWORD PTR _ec$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getOffsetF
; Line 405
	jmp	SHORT $LN4@getOffsetF
$LN3@getOffsetF:
; Line 407
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN2@getOffsetF
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+104]
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@getOffsetF
; Line 408
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawoff$[ebp]
	push	edx
	mov	eax, DWORD PTR _duplicatedTimeOpt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nonExistingTimeOpt$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+100]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 409
	jmp	SHORT $LN1@getOffsetF
$LN2@getOffsetF:
; Line 410
	mov	eax, DWORD PTR _dstoff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _duplicatedTimeOpt$[ebp]
	push	edx
	mov	eax, DWORD PTR _nonExistingTimeOpt$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z ; icu_56::OlsonTimeZone::getHistoricalOffset
$LN1@getOffsetF:
$LN4@getOffsetF:
; Line 412
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getOffsetFromLocal@OlsonTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::getOffsetFromLocal
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z PROC	; icu_56::OlsonTimeZone::setRawOffset, COMDAT
; _this$ = ecx
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 423
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setRawOffset@OlsonTimeZone@icu_56@@UAEXH@Z ENDP	; icu_56::OlsonTimeZone::setRawOffset
_TEXT	ENDS
EXTRN	_uprv_getUTCtime_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ
_TEXT	SEGMENT
_dst$ = -44						; size = 4
_raw$ = -32						; size = 4
_ec$ = -20						; size = 4
_this$ = -8						; size = 4
?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ PROC		; icu_56::OlsonTimeZone::getRawOffset, COMDAT
; _this$ = ecx
; Line 428
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 429
	mov	DWORD PTR _ec$[ebp], 0
; Line 432
	mov	esi, esp
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	lea	edx, DWORD PTR _raw$[ebp]
	push	edx
	push	0
	call	_uprv_getUTCtime_56
	fmul	QWORD PTR __real@408f400000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 433
	mov	eax, DWORD PTR _raw$[ebp]
; Line 434
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getRawOffs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@getRawOffs:
	DD	3
	DD	$LN6@getRawOffs
$LN6@getRawOffs:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@getRawOffs
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@getRawOffs
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN5@getRawOffs
$LN5@getRawOffs:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN4@getRawOffs:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
$LN3@getRawOffs:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?getRawOffset@OlsonTimeZone@icu_56@@UBEHXZ ENDP		; icu_56::OlsonTimeZone::getRawOffset
_TEXT	ENDS
PUBLIC	??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA ; `icu_56::OlsonTimeZone::transitionTimeInSeconds'::`2'::__LINE__Var
EXTRN	__imp___wassert:PROC
EXTRN	__allshl:PROC
;	COMDAT ??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@
CONST	SEGMENT
??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@ DB 't'
	DB	00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'I', 00H, 'd', 00H
	DB	'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'I', 00H, 'd', 00H, 'x', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'o', 00H
	DB	'l', 00H, 's', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'z', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA DD 01c1H ; `icu_56::OlsonTimeZone::transitionTimeInSeconds'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_transIdx$ = 8						; size = 2
?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z PROC ; icu_56::OlsonTimeZone::transitionTimeInSeconds, COMDAT
; _this$ = ecx
; Line 449
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	movsx	eax, WORD PTR _transIdx$[ebp]
	test	eax, eax
	jl	SHORT $LN5@transition
	movsx	esi, WORD PTR _transIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	movsx	ecx, ax
	cmp	esi, ecx
	jl	SHORT $LN6@transition
$LN5@transition:
	mov	edx, DWORD PTR ?__LINE__Var@?1??transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z@4JA
	add	edx, 1
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FI@FELEKEAE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FM@GBLELPEG@?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAI?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AAt?$AAr?$AAa?$AAn@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@transition:
; Line 452
	movsx	eax, WORD PTR _transIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+68]
	cmp	eax, edx
	jge	SHORT $LN2@transition
; Line 454
	movsx	eax, WORD PTR _transIdx$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR [edx+eax*4]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	movsx	ecx, WORD PTR _transIdx$[ebp]
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+ecx*4+4]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN3@transition
$LN2@transition:
; Line 457
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	movsx	edx, WORD PTR _transIdx$[ebp]
	sub	edx, ecx
	mov	WORD PTR _transIdx$[ebp], dx
; Line 458
	movsx	eax, WORD PTR _transIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+70]
	cmp	eax, edx
	jge	SHORT $LN1@transition
; Line 459
	movsx	eax, WORD PTR _transIdx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+eax*4]
	cdq
	jmp	SHORT $LN3@transition
$LN1@transition:
; Line 462
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+70]
	movsx	edx, WORD PTR _transIdx$[ebp]
	sub	edx, ecx
	mov	WORD PTR _transIdx$[ebp], dx
; Line 464
	movsx	eax, WORD PTR _transIdx$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	eax, DWORD PTR [edx+eax*4]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	movsx	ecx, WORD PTR _transIdx$[ebp]
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR [esi+ecx*4+4]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
$LN3@transition:
; Line 465
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ENDP ; icu_56::OlsonTimeZone::transitionTimeInSeconds
_TEXT	ENDS
EXTRN	_uprv_floor_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z
_TEXT	SEGMENT
tv266 = -340						; size = 8
tv243 = -340						; size = 8
tv161 = -333						; size = 1
tv156 = -333						; size = 1
_stdToDst$72145 = -133					; size = 1
_dstToStd$72144 = -121					; size = 1
_dstAfter$72143 = -109					; size = 1
_offsetAfter$72142 = -100				; size = 4
_dstBefore$72141 = -85					; size = 1
_offsetBefore$72140 = -76				; size = 4
_transition$72138 = -64					; size = 8
_transIdx$72134 = -48					; size = 2
_sec$72131 = -36					; size = 8
_transCount$ = -20					; size = 2
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_local$ = 16						; size = 1
_NonExistingTimeOpt$ = 20				; size = 4
_DuplicatedTimeOpt$ = 24				; size = 4
_rawoff$ = 28						; size = 4
_dstoff$ = 32						; size = 4
?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z PROC ; icu_56::OlsonTimeZone::getHistoricalOffset, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 481
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	mov	WORD PTR _transCount$[ebp], ax
; Line 483
	movsx	eax, WORD PTR _transCount$[ebp]
	test	eax, eax
	jle	$LN31@getHistori
; Line 484
	fld	QWORD PTR _date$[ebp]
	fdiv	QWORD PTR __real@408f400000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_uprv_floor_56
	add	esp, 8
	fstp	QWORD PTR _sec$72131[ebp]
; Line 485
	movsx	eax, BYTE PTR _local$[ebp]
	test	eax, eax
	jne	SHORT $LN30@getHistori
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ; icu_56::OlsonTimeZone::transitionTimeInSeconds
	mov	DWORD PTR tv243[ebp], eax
	mov	DWORD PTR tv243[ebp+4], edx
	fild	QWORD PTR tv243[ebp]
	fcomp	QWORD PTR _sec$72131[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN30@getHistori
; Line 487
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialRawOffset
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _rawoff$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialDstOffset
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _dstoff$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 489
	jmp	$LN29@getHistori
$LN30@getHistori:
; Line 493
	movsx	eax, WORD PTR _transCount$[ebp]
	sub	eax, 1
	mov	WORD PTR _transIdx$72134[ebp], ax
	jmp	SHORT $LN28@getHistori
$LN27@getHistori:
	mov	ax, WORD PTR _transIdx$72134[ebp]
	sub	ax, 1
	mov	WORD PTR _transIdx$72134[ebp], ax
$LN28@getHistori:
	movsx	eax, WORD PTR _transIdx$72134[ebp]
	test	eax, eax
	jl	$LN26@getHistori
; Line 494
	movzx	eax, WORD PTR _transIdx$72134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ; icu_56::OlsonTimeZone::transitionTimeInSeconds
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
; Line 496
	movsx	eax, BYTE PTR _local$[ebp]
	test	eax, eax
	je	$LN3@getHistori
	mov	eax, DWORD PTR _transition$72138[ebp]
	sub	eax, 86400				; 00015180H
	mov	ecx, DWORD PTR _transition$72138[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR tv266[ebp], eax
	mov	DWORD PTR tv266[ebp+4], ecx
	fild	QWORD PTR tv266[ebp]
	fcomp	QWORD PTR _sec$72131[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN3@getHistori
; Line 497
	movsx	eax, WORD PTR _transIdx$72134[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::zoneOffsetAt
	mov	DWORD PTR _offsetBefore$72140[ebp], eax
; Line 498
	movsx	eax, WORD PTR _transIdx$72134[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::dstOffsetAt
	test	eax, eax
	setne	cl
	mov	BYTE PTR _dstBefore$72141[ebp], cl
; Line 500
	movzx	eax, WORD PTR _transIdx$72134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?zoneOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::zoneOffsetAt
	mov	DWORD PTR _offsetAfter$72142[ebp], eax
; Line 501
	movzx	eax, WORD PTR _transIdx$72134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::dstOffsetAt
	test	eax, eax
	setne	cl
	mov	BYTE PTR _dstAfter$72143[ebp], cl
; Line 503
	movsx	eax, BYTE PTR _dstBefore$72141[ebp]
	test	eax, eax
	je	SHORT $LN34@getHistori
	movsx	ecx, BYTE PTR _dstAfter$72143[ebp]
	test	ecx, ecx
	jne	SHORT $LN34@getHistori
	mov	BYTE PTR tv156[ebp], 1
	jmp	SHORT $LN35@getHistori
$LN34@getHistori:
	mov	BYTE PTR tv156[ebp], 0
$LN35@getHistori:
	mov	dl, BYTE PTR tv156[ebp]
	mov	BYTE PTR _dstToStd$72144[ebp], dl
; Line 504
	movsx	eax, BYTE PTR _dstBefore$72141[ebp]
	test	eax, eax
	jne	SHORT $LN36@getHistori
	movsx	ecx, BYTE PTR _dstAfter$72143[ebp]
	test	ecx, ecx
	je	SHORT $LN36@getHistori
	mov	BYTE PTR tv161[ebp], 1
	jmp	SHORT $LN37@getHistori
$LN36@getHistori:
	mov	BYTE PTR tv161[ebp], 0
$LN37@getHistori:
	mov	dl, BYTE PTR tv161[ebp]
	mov	BYTE PTR _stdToDst$72145[ebp], dl
; Line 506
	mov	eax, DWORD PTR _offsetAfter$72142[ebp]
	sub	eax, DWORD PTR _offsetBefore$72140[ebp]
	js	$LN24@getHistori
; Line 509
	mov	eax, DWORD PTR _NonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN21@getHistori
	movsx	eax, BYTE PTR _dstToStd$72144[ebp]
	test	eax, eax
	jne	SHORT $LN22@getHistori
$LN21@getHistori:
	mov	eax, DWORD PTR _NonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	jne	SHORT $LN23@getHistori
	movsx	eax, BYTE PTR _stdToDst$72145[ebp]
	test	eax, eax
	je	SHORT $LN23@getHistori
$LN22@getHistori:
; Line 510
	mov	eax, DWORD PTR _offsetBefore$72140[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
; Line 511
	jmp	SHORT $LN14@getHistori
$LN23@getHistori:
; Line 512
	mov	eax, DWORD PTR _NonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN17@getHistori
	movsx	eax, BYTE PTR _stdToDst$72145[ebp]
	test	eax, eax
	jne	SHORT $LN18@getHistori
$LN17@getHistori:
	mov	eax, DWORD PTR _NonExistingTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	jne	SHORT $LN19@getHistori
	movsx	eax, BYTE PTR _dstToStd$72144[ebp]
	test	eax, eax
	je	SHORT $LN19@getHistori
$LN18@getHistori:
; Line 513
	mov	eax, DWORD PTR _offsetAfter$72142[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
	jmp	SHORT $LN14@getHistori
$LN19@getHistori:
; Line 514
	mov	eax, DWORD PTR _NonExistingTimeOpt$[ebp]
	and	eax, 12					; 0000000cH
	cmp	eax, 12					; 0000000cH
	jne	SHORT $LN15@getHistori
; Line 515
	mov	eax, DWORD PTR _offsetBefore$72140[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
; Line 516
	jmp	SHORT $LN14@getHistori
$LN15@getHistori:
; Line 519
	mov	eax, DWORD PTR _offsetAfter$72142[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
$LN14@getHistori:
; Line 521
	jmp	$LN3@getHistori
$LN24@getHistori:
; Line 524
	mov	eax, DWORD PTR _DuplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN10@getHistori
	movsx	eax, BYTE PTR _dstToStd$72144[ebp]
	test	eax, eax
	jne	SHORT $LN11@getHistori
$LN10@getHistori:
	mov	eax, DWORD PTR _DuplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	jne	SHORT $LN12@getHistori
	movsx	eax, BYTE PTR _stdToDst$72145[ebp]
	test	eax, eax
	je	SHORT $LN12@getHistori
$LN11@getHistori:
; Line 525
	mov	eax, DWORD PTR _offsetAfter$72142[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
; Line 526
	jmp	SHORT $LN3@getHistori
$LN12@getHistori:
; Line 527
	mov	eax, DWORD PTR _DuplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 1
	jne	SHORT $LN6@getHistori
	movsx	eax, BYTE PTR _stdToDst$72145[ebp]
	test	eax, eax
	jne	SHORT $LN7@getHistori
$LN6@getHistori:
	mov	eax, DWORD PTR _DuplicatedTimeOpt$[ebp]
	and	eax, 3
	cmp	eax, 3
	jne	SHORT $LN8@getHistori
	movsx	eax, BYTE PTR _dstToStd$72144[ebp]
	test	eax, eax
	je	SHORT $LN8@getHistori
$LN7@getHistori:
; Line 528
	mov	eax, DWORD PTR _offsetBefore$72140[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
	jmp	SHORT $LN3@getHistori
$LN8@getHistori:
; Line 529
	mov	eax, DWORD PTR _DuplicatedTimeOpt$[ebp]
	and	eax, 12					; 0000000cH
	cmp	eax, 4
	jne	SHORT $LN4@getHistori
; Line 530
	mov	eax, DWORD PTR _offsetBefore$72140[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
; Line 531
	jmp	SHORT $LN3@getHistori
$LN4@getHistori:
; Line 534
	mov	eax, DWORD PTR _offsetAfter$72142[ebp]
	cdq
	add	eax, DWORD PTR _transition$72138[ebp]
	adc	edx, DWORD PTR _transition$72138[ebp+4]
	mov	DWORD PTR _transition$72138[ebp], eax
	mov	DWORD PTR _transition$72138[ebp+4], edx
$LN3@getHistori:
; Line 538
	fild	QWORD PTR _transition$72138[ebp]
	fcomp	QWORD PTR _sec$72131[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@getHistori
; Line 539
	jmp	SHORT $LN26@getHistori
$LN2@getHistori:
; Line 541
	jmp	$LN27@getHistori
$LN26@getHistori:
; Line 543
	movzx	eax, WORD PTR _transIdx$72134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?rawOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::rawOffsetAt
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _rawoff$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 544
	movzx	eax, WORD PTR _transIdx$72134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::dstOffsetAt
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _dstoff$[ebp]
	mov	DWORD PTR [ecx], eax
$LN29@getHistori:
; Line 546
	jmp	SHORT $LN1@getHistori
$LN31@getHistori:
; Line 548
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialRawOffset
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _rawoff$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 549
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialDstOffset
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _dstoff$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@getHistori:
; Line 553
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getHistoricalOffset@OlsonTimeZone@icu_56@@ABEXNCHHAAH0@Z ENDP ; icu_56::OlsonTimeZone::getHistoricalOffset
_TEXT	ENDS
PUBLIC	__real@40f5180000000000
EXTRN	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z:PROC	; icu_56::Grego::timeToFields
;	COMDAT __real@40f5180000000000
CONST	SEGMENT
__real@40f5180000000000 DQ 040f5180000000000r	; 86400
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ
_TEXT	SEGMENT
tv196 = -360						; size = 8
_transition$72187 = -156				; size = 8
_i$72183 = -140						; size = 2
_limit$ = -128						; size = 8
_start$ = -112						; size = 8
_mid$ = -96						; size = 4
_doy$ = -84						; size = 4
_dow$ = -72						; size = 4
_dom$ = -60						; size = 4
_month$ = -48						; size = 4
_year$ = -36						; size = 4
_current$ = -24						; size = 8
_this$ = -8						; size = 4
?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ PROC	; icu_56::OlsonTimeZone::useDaylightTime, COMDAT
; _this$ = ecx
; Line 558
	push	ebp
	mov	ebp, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 565
	call	_uprv_getUTCtime_56
	fstp	QWORD PTR _current$[ebp]
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN8@useDayligh
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+104]
	fcomp	QWORD PTR _current$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN8@useDayligh
; Line 567
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@useDayligh
$LN8@useDayligh:
; Line 571
	lea	eax, DWORD PTR _mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _current$[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 574
	push	1
	push	0
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fmul	QWORD PTR __real@40f5180000000000
	fstp	QWORD PTR _start$[ebp]
; Line 575
	push	1
	push	0
	mov	eax, DWORD PTR _year$[ebp]
	add	eax, 1
	push	eax
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fmul	QWORD PTR __real@40f5180000000000
	fstp	QWORD PTR _limit$[ebp]
; Line 579
	xor	eax, eax
	mov	WORD PTR _i$72183[ebp], ax
	jmp	SHORT $LN7@useDayligh
$LN6@useDayligh:
	mov	ax, WORD PTR _i$72183[ebp]
	add	ax, 1
	mov	WORD PTR _i$72183[ebp], ax
$LN7@useDayligh:
	movsx	esi, WORD PTR _i$72183[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	cwde
	cmp	esi, eax
	jge	$LN5@useDayligh
; Line 580
	movzx	eax, WORD PTR _i$72183[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTimeInSeconds@OlsonTimeZone@icu_56@@ABE_JF@Z ; icu_56::OlsonTimeZone::transitionTimeInSeconds
	mov	DWORD PTR tv196[ebp], eax
	mov	DWORD PTR tv196[ebp+4], edx
	fild	QWORD PTR tv196[ebp]
	fstp	QWORD PTR _transition$72187[ebp]
; Line 581
	fld	QWORD PTR _limit$[ebp]
	fcomp	QWORD PTR _transition$72187[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN4@useDayligh
; Line 582
	jmp	SHORT $LN5@useDayligh
$LN4@useDayligh:
; Line 585
	fld	QWORD PTR _start$[ebp]
	fcomp	QWORD PTR _transition$72187[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN1@useDayligh
	movzx	eax, WORD PTR _i$72183[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::dstOffsetAt
	test	eax, eax
	jne	SHORT $LN2@useDayligh
$LN1@useDayligh:
	fld	QWORD PTR _start$[ebp]
	fcomp	QWORD PTR _transition$72187[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@useDayligh
	movsx	eax, WORD PTR _i$72183[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?dstOffsetAt@OlsonTimeZone@icu_56@@ABEHF@Z ; icu_56::OlsonTimeZone::dstOffsetAt
	test	eax, eax
	je	SHORT $LN3@useDayligh
$LN2@useDayligh:
; Line 586
	mov	al, 1
	jmp	SHORT $LN9@useDayligh
$LN3@useDayligh:
; Line 588
	jmp	$LN6@useDayligh
$LN5@useDayligh:
; Line 589
	xor	al, al
$LN9@useDayligh:
; Line 590
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@useDayligh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@useDayligh:
	DD	6
	DD	$LN17@useDayligh
$LN17@useDayligh:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@useDayligh
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN12@useDayligh
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN13@useDayligh
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN14@useDayligh
	DD	-84					; ffffffacH
	DD	4
	DD	$LN15@useDayligh
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN16@useDayligh
$LN16@useDayligh:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN15@useDayligh:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN14@useDayligh:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN13@useDayligh:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN12@useDayligh:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN11@useDayligh:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
?useDaylightTime@OlsonTimeZone@icu_56@@UBECXZ ENDP	; icu_56::OlsonTimeZone::useDaylightTime
_TEXT	ENDS
EXTRN	?getDSTSavings@TimeZone@icu_56@@UBEHXZ:PROC	; icu_56::TimeZone::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ PROC	; icu_56::OlsonTimeZone::getDSTSavings, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN1@getDSTSavi
; Line 594
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@getDSTSavi
$LN1@getDSTSavi:
; Line 596
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getDSTSavings@TimeZone@icu_56@@UBEHXZ	; icu_56::TimeZone::getDSTSavings
$LN2@getDSTSavi:
; Line 597
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDSTSavings@OlsonTimeZone@icu_56@@UBEHXZ ENDP	; icu_56::OlsonTimeZone::getDSTSavings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dst$ = -32						; size = 4
_raw$ = -20						; size = 4
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_ec$ = 16						; size = 4
?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::inDaylightTime, COMDAT
; _this$ = ecx
; Line 601
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	esi, esp
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	lea	edx, DWORD PTR _raw$[ebp]
	push	edx
	push	0
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 604
	cmp	DWORD PTR _dst$[ebp], 0
	setne	al
; Line 605
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@inDaylight
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN6@inDaylight:
	DD	2
	DD	$LN5@inDaylight
$LN5@inDaylight:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@inDaylight
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@inDaylight
$LN4@inDaylight:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN3@inDaylight:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
?inDaylightTime@OlsonTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::inDaylightTime
_TEXT	ENDS
EXTRN	___RTDynamicCast:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z
_TEXT	SEGMENT
tv224 = -217						; size = 1
_z$ = -20						; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z PROC ; icu_56::OlsonTimeZone::hasSameRules, COMDAT
; _this$ = ecx
; Line 608
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 609
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN12@hasSameRul
; Line 610
	mov	al, 1
	jmp	$LN13@hasSameRul
$LN12@hasSameRul:
; Line 612
	push	0
	push	OFFSET ??_R0?AVOlsonTimeZone@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZone@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _z$[ebp], eax
; Line 613
	cmp	DWORD PTR _z$[ebp], 0
	jne	SHORT $LN11@hasSameRul
; Line 614
	xor	al, al
	jmp	$LN13@hasSameRul
$LN11@hasSameRul:
; Line 620
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _z$[ebp]
	mov	edx, DWORD PTR [eax+96]
	cmp	edx, DWORD PTR [ecx+96]
	jne	SHORT $LN10@hasSameRul
; Line 621
	mov	al, 1
	jmp	$LN13@hasSameRul
$LN10@hasSameRul:
; Line 628
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN7@hasSameRul
	mov	eax, DWORD PTR _z$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN8@hasSameRul
$LN7@hasSameRul:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN6@hasSameRul
	mov	eax, DWORD PTR _z$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN8@hasSameRul
$LN6@hasSameRul:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN9@hasSameRul
	mov	eax, DWORD PTR _z$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN9@hasSameRul
	mov	eax, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+100]
	call	??9TimeZone@icu_56@@QBECABV01@@Z	; icu_56::TimeZone::operator!=
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@hasSameRul
$LN8@hasSameRul:
; Line 629
	xor	al, al
	jmp	$LN13@hasSameRul
$LN9@hasSameRul:
; Line 632
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN4@hasSameRul
; Line 633
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _z$[ebp]
	mov	edx, DWORD PTR [eax+112]
	cmp	edx, DWORD PTR [ecx+112]
	jne	SHORT $LN3@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _z$[ebp]
	fld	QWORD PTR [eax+104]
	fld	QWORD PTR [ecx+104]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@hasSameRul
$LN3@hasSameRul:
; Line 634
	xor	al, al
	jmp	$LN13@hasSameRul
$LN4@hasSameRul:
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+88]
	mov	edx, DWORD PTR _z$[ebp]
	movsx	eax, WORD PTR [edx+88]
	cmp	ecx, eax
	jne	SHORT $LN1@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	mov	edx, DWORD PTR _z$[ebp]
	movsx	eax, WORD PTR [edx+68]
	cmp	ecx, eax
	jne	SHORT $LN1@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+70]
	mov	edx, DWORD PTR _z$[ebp]
	movsx	eax, WORD PTR [edx+70]
	cmp	ecx, eax
	jne	SHORT $LN1@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+72]
	mov	edx, DWORD PTR _z$[ebp]
	movsx	eax, WORD PTR [edx+72]
	cmp	ecx, eax
	je	SHORT $LN2@hasSameRul
$LN1@hasSameRul:
; Line 641
	xor	al, al
	jmp	$LN13@hasSameRul
$LN2@hasSameRul:
; Line 649
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	shl	ecx, 2
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	?arrayEqual@@YACPBX0H@Z			; arrayEqual
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	$LN15@hasSameRul
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+70]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	?arrayEqual@@YACPBX0H@Z			; arrayEqual
	add	esp, 12					; 0000000cH
	movsx	ecx, al
	test	ecx, ecx
	je	$LN15@hasSameRul
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+72]
	shl	eax, 2
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _z$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	?arrayEqual@@YACPBX0H@Z			; arrayEqual
	add	esp, 12					; 0000000cH
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@hasSameRul
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+88]
	shl	ecx, 2
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR [edx+92]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	call	?arrayEqual@@YACPBX0H@Z			; arrayEqual
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@hasSameRul
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR [edx+96]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	call	?arrayEqual@@YACPBX0H@Z			; arrayEqual
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@hasSameRul
	mov	BYTE PTR tv224[ebp], 1
	jmp	SHORT $LN16@hasSameRul
$LN15@hasSameRul:
	mov	BYTE PTR tv224[ebp], 0
$LN16@hasSameRul:
	mov	al, BYTE PTR tv224[ebp]
$LN13@hasSameRul:
; Line 650
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasSameRules@OlsonTimeZone@icu_56@@UBECABVTimeZone@2@@Z ENDP ; icu_56::OlsonTimeZone::hasSameRules
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?arrayEqual@@YACPBX0H@Z
_TEXT	SEGMENT
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
_size$ = 16						; size = 4
?arrayEqual@@YACPBX0H@Z PROC				; arrayEqual, COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	cmp	DWORD PTR _a1$[ebp], 0
	jne	SHORT $LN5@arrayEqual
	cmp	DWORD PTR _a2$[ebp], 0
	jne	SHORT $LN5@arrayEqual
; Line 54
	mov	al, 1
	jmp	SHORT $LN6@arrayEqual
$LN5@arrayEqual:
; Line 56
	cmp	DWORD PTR _a1$[ebp], 0
	je	SHORT $LN2@arrayEqual
	cmp	DWORD PTR _a2$[ebp], 0
	je	SHORT $LN3@arrayEqual
$LN2@arrayEqual:
	cmp	DWORD PTR _a1$[ebp], 0
	jne	SHORT $LN4@arrayEqual
	cmp	DWORD PTR _a2$[ebp], 0
	je	SHORT $LN4@arrayEqual
$LN3@arrayEqual:
; Line 57
	xor	al, al
	jmp	SHORT $LN6@arrayEqual
$LN4@arrayEqual:
; Line 59
	mov	eax, DWORD PTR _a1$[ebp]
	cmp	eax, DWORD PTR _a2$[ebp]
	jne	SHORT $LN1@arrayEqual
; Line 60
	mov	al, 1
	jmp	SHORT $LN6@arrayEqual
$LN1@arrayEqual:
; Line 63
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _a1$[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	sete	al
$LN6@arrayEqual:
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?arrayEqual@@YACPBX0H@Z ENDP				; arrayEqual
_TEXT	ENDS
PUBLIC	?reset@UInitOnce@icu_56@@QAEXXZ			; icu_56::UInitOnce::reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ PROC	; icu_56::OlsonTimeZone::clearTransitionRules, COMDAT
; _this$ = ecx
; Line 653
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 655
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 656
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 658
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+140], ax
; Line 659
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 0
; Line 660
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+128], ax
; Line 661
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?reset@UInitOnce@icu_56@@QAEXXZ		; icu_56::UInitOnce::reset
; Line 662
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ENDP	; icu_56::OlsonTimeZone::clearTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reset@UInitOnce@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reset@UInitOnce@icu_56@@QAEXXZ PROC			; icu_56::UInitOnce::reset, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@UInitOnce@icu_56@@QAEXXZ ENDP			; icu_56::UInitOnce::reset
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv175 = -340						; size = 4
tv151 = -340						; size = 4
tv137 = -340						; size = 4
tv91 = -340						; size = 4
tv77 = -340						; size = 4
$T79535 = -332						; size = 4
$T79536 = -320						; size = 4
$T79539 = -308						; size = 4
$T79540 = -296						; size = 4
$T79543 = -284						; size = 4
$T79544 = -272						; size = 4
$T79547 = -260						; size = 4
$T79548 = -248						; size = 4
$T79551 = -236						; size = 4
$T79552 = -224						; size = 4
_i$72245 = -20						; size = 4
_this$ = -8						; size = 4
?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ PROC ; icu_56::OlsonTimeZone::deleteTransitionRules, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\olsontz.cpp
; Line 665
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 666
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN9@deleteTran
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR $T79536[ebp], ecx
	mov	edx, DWORD PTR $T79536[ebp]
	mov	DWORD PTR $T79535[ebp], edx
	cmp	DWORD PTR $T79535[ebp], 0
	je	SHORT $LN12@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79535[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79535[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN9@deleteTran
$LN12@deleteTran:
	mov	DWORD PTR tv77[ebp], 0
$LN9@deleteTran:
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN8@deleteTran
; Line 670
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR $T79540[ebp], ecx
	mov	edx, DWORD PTR $T79540[ebp]
	mov	DWORD PTR $T79539[ebp], edx
	cmp	DWORD PTR $T79539[ebp], 0
	je	SHORT $LN14@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79539[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79539[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@deleteTran
$LN14@deleteTran:
	mov	DWORD PTR tv91[ebp], 0
$LN8@deleteTran:
; Line 672
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN7@deleteTran
; Line 673
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR $T79544[ebp], ecx
	mov	edx, DWORD PTR $T79544[ebp]
	mov	DWORD PTR $T79543[ebp], edx
	cmp	DWORD PTR $T79543[ebp], 0
	je	SHORT $LN16@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79543[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79543[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN7@deleteTran
$LN16@deleteTran:
	mov	DWORD PTR tv137[ebp], 0
$LN7@deleteTran:
; Line 675
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN6@deleteTran
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR $T79548[ebp], ecx
	mov	edx, DWORD PTR $T79548[ebp]
	mov	DWORD PTR $T79547[ebp], edx
	cmp	DWORD PTR $T79547[ebp], 0
	je	SHORT $LN18@deleteTran
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T79547[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T79547[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN6@deleteTran
$LN18@deleteTran:
	mov	DWORD PTR tv151[ebp], 0
$LN6@deleteTran:
; Line 678
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	$LN5@deleteTran
; Line 679
	mov	DWORD PTR _i$72245[ebp], 0
	jmp	SHORT $LN4@deleteTran
$LN3@deleteTran:
	mov	eax, DWORD PTR _i$72245[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72245[ebp], eax
$LN4@deleteTran:
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+140]
	cmp	DWORD PTR _i$72245[ebp], ecx
	jge	SHORT $LN2@deleteTran
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _i$72245[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN1@deleteTran
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _i$72245[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T79552[ebp], eax
	mov	ecx, DWORD PTR $T79552[ebp]
	mov	DWORD PTR $T79551[ebp], ecx
	cmp	DWORD PTR $T79551[ebp], 0
	je	SHORT $LN20@deleteTran
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T79551[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T79551[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv175[ebp], eax
	jmp	SHORT $LN1@deleteTran
$LN20@deleteTran:
	mov	DWORD PTR tv175[ebp], 0
$LN1@deleteTran:
; Line 683
	jmp	$LN3@deleteTran
$LN2@deleteTran:
; Line 684
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN5@deleteTran:
; Line 686
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clearTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::clearTransitionRules
; Line 687
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ENDP ; icu_56::OlsonTimeZone::deleteTransitionRules
_TEXT	ENDS
PUBLIC	??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z ; icu_56::umtx_initOnce<icu_56::OlsonTimeZone *>
PUBLIC	?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::checkTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ncThis$ = -20						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::checkTransitionRules, COMDAT
; _this$ = ecx
; Line 698
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _ncThis$[ebp], eax
; Line 700
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ncThis$[ebp]
	push	ecx
	push	OFFSET ?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z ; icu_56::initRules
	mov	edx, DWORD PTR _ncThis$[ebp]
	add	edx, 148				; 00000094H
	push	edx
	call	??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z ; icu_56::umtx_initOnce<icu_56::OlsonTimeZone *>
	add	esp, 16					; 00000010H
; Line 701
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::checkTransitionRules
_TEXT	ENDS
PUBLIC	?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::initTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_This$ = 8						; size = 4
_status$ = 12						; size = 4
?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z PROC ; icu_56::initRules, COMDAT
; Line 693
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 694
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _This$[ebp]
	call	?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::initTransitionRules
; Line 695
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initRules@icu_56@@YAXPAVOlsonTimeZone@1@AAW4UErrorCode@@@Z ENDP ; icu_56::initRules
_TEXT	ENDS
PUBLIC	??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z:PROC ; icu_56::TimeZoneTransition::adoptTo
EXTRN	?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z:PROC ; icu_56::TimeZoneTransition::adoptFrom
EXTRN	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z:PROC ; icu_56::TimeZoneTransition::setTime
EXTRN	?getTime@TimeZoneTransition@icu_56@@QBENXZ:PROC	; icu_56::TimeZoneTransition::getTime
EXTRN	??1TimeZoneTransition@icu_56@@UAE@XZ:PROC	; icu_56::TimeZoneTransition::~TimeZoneTransition
EXTRN	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:PROC ; icu_56::TimeZoneTransition::getTo
EXTRN	??0TimeZoneTransition@icu_56@@QAE@XZ:PROC	; icu_56::TimeZoneTransition::TimeZoneTransition
EXTRN	?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z:PROC ; icu_56::SimpleTimeZone::setStartYear
EXTRN	??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z:PROC ; icu_56::TimeZoneTransition::TimeZoneTransition
EXTRN	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z:PROC ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
EXTRN	_uprv_malloc_56:PROC
EXTRN	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
EXTRN	__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:PROC
;	COMDAT ??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@ DB '(', 00H, 'D'
	DB	00H, 'S', 00H, 'T', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@ DB '(', 00H, 'S'
	DB	00H, 'T', 00H, 'D', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$9
	DD	06H
	DD	FLAT:__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv508 = -916						; size = 4
tv505 = -916						; size = 4
tv259 = -916						; size = 4
tv153 = -916						; size = 4
tv552 = -912						; size = 4
tv548 = -912						; size = 4
tv487 = -912						; size = 4
tv426 = -912						; size = 4
tv363 = -912						; size = 4
tv299 = -912						; size = 4
tv257 = -912						; size = 4
tv151 = -912						; size = 4
$T72279 = -904						; size = 64
$T72284 = -832						; size = 64
$T79562 = -760						; size = 4
$T79563 = -748						; size = 4
$T79564 = -736						; size = 4
$T79569 = -724						; size = 4
$T79570 = -712						; size = 4
$T79571 = -700						; size = 4
$T79576 = -688						; size = 4
$T79577 = -676						; size = 4
$T79580 = -664						; size = 4
$T79581 = -652						; size = 4
$T79584 = -640						; size = 4
$T79585 = -628						; size = 4
_prevRule$72363 = -424					; size = 4
_tzt$72353 = -412					; size = 24
_firstFinalRule$72349 = -380				; size = 4
_startTime$72347 = -368					; size = 8
_i$72328 = -352						; size = 4
_tt$72319 = -340					; size = 8
_nTimes$72313 = -324					; size = 4
_times$72306 = -312					; size = 4
_typeIdx$72299 = -300					; size = 2
_transitionIdx$72298 = -288				; size = 2
_transCount$ = -276					; size = 4
_dst$ = -264						; size = 4
_raw$ = -252						; size = 4
_dstName$ = -240					; size = 64
_stdName$ = -168					; size = 64
_tzid$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::initTransitionRules, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 904				; 00000388H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-916]
	mov	ecx, 226				; 000000e2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 705
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@initTransi
; Line 706
	jmp	$LN38@initTransi
$LN37@initTransi:
; Line 708
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 709
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 710
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 712
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T72279[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv548[ebp], eax
	mov	eax, DWORD PTR tv548[ebp]
	mov	DWORD PTR tv505[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv505[ebp]
	push	ecx
	lea	edx, DWORD PTR _tzid$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T72279[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 713
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T72284[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv552[ebp], eax
	mov	eax, DWORD PTR tv552[ebp]
	mov	DWORD PTR tv508[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	mov	ecx, DWORD PTR tv508[ebp]
	push	ecx
	lea	edx, DWORD PTR _tzid$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T72284[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialRawOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialRawOffset
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _raw$[ebp], eax
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initialDstOffset@OlsonTimeZone@icu_56@@ABEHXZ ; icu_56::OlsonTimeZone::initialDstOffset
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _dst$[ebp], eax
; Line 720
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79563[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T79563[ebp], 0
	je	SHORT $LN42@initTransi
	cmp	DWORD PTR _dst$[ebp], 0
	jne	SHORT $LN40@initTransi
	lea	eax, DWORD PTR _stdName$[ebp]
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN41@initTransi
$LN40@initTransi:
	lea	ecx, DWORD PTR _dstName$[ebp]
	mov	DWORD PTR tv151[ebp], ecx
$LN41@initTransi:
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR $T79564[ebp], edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _raw$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T79564[ebp]
	push	edx
	mov	ecx, DWORD PTR $T79563[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN43@initTransi
$LN42@initTransi:
	mov	DWORD PTR tv153[ebp], 0
$LN43@initTransi:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR $T79562[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T79562[ebp]
	mov	DWORD PTR [ecx+120], edx
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jne	SHORT $LN36@initTransi
; Line 723
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 724
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 725
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN36@initTransi:
; Line 728
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	cwde
	mov	DWORD PTR _transCount$[ebp], eax
; Line 729
	cmp	DWORD PTR _transCount$[ebp], 0
	jle	$LN11@initTransi
; Line 735
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+128], ax
; Line 736
	xor	eax, eax
	mov	WORD PTR _transitionIdx$72298[ebp], ax
	jmp	SHORT $LN34@initTransi
$LN33@initTransi:
	mov	ax, WORD PTR _transitionIdx$72298[ebp]
	add	ax, 1
	mov	WORD PTR _transitionIdx$72298[ebp], ax
$LN34@initTransi:
	movsx	eax, WORD PTR _transitionIdx$72298[ebp]
	cmp	eax, DWORD PTR _transCount$[ebp]
	jge	SHORT $LN32@initTransi
; Line 737
	movsx	eax, WORD PTR _transitionIdx$72298[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	movzx	eax, BYTE PTR [edx+eax]
	test	eax, eax
	je	SHORT $LN31@initTransi
; Line 738
	jmp	SHORT $LN32@initTransi
$LN31@initTransi:
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+128]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+128], cx
; Line 741
	jmp	SHORT $LN33@initTransi
$LN32@initTransi:
; Line 742
	movsx	eax, WORD PTR _transitionIdx$72298[ebp]
	cmp	eax, DWORD PTR _transCount$[ebp]
	jne	SHORT $LN30@initTransi
; Line 744
	jmp	$LN11@initTransi
$LN30@initTransi:
; Line 746
	mov	eax, DWORD PTR _transCount$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _times$72306[ebp], eax
; Line 747
	cmp	DWORD PTR _times$72306[ebp], 0
	jne	SHORT $LN28@initTransi
; Line 748
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 750
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN28@initTransi:
; Line 752
	xor	eax, eax
	mov	WORD PTR _typeIdx$72299[ebp], ax
	jmp	SHORT $LN27@initTransi
$LN26@initTransi:
	mov	ax, WORD PTR _typeIdx$72299[ebp]
	add	ax, 1
	mov	WORD PTR _typeIdx$72299[ebp], ax
$LN27@initTransi:
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+88]
	cmp	eax, edx
	jge	$LN25@initTransi
; Line 754
	mov	DWORD PTR _nTimes$72313[ebp], 0
; Line 755
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+128]
	mov	WORD PTR _transitionIdx$72298[ebp], cx
	jmp	SHORT $LN24@initTransi
$LN23@initTransi:
	mov	ax, WORD PTR _transitionIdx$72298[ebp]
	add	ax, 1
	mov	WORD PTR _transitionIdx$72298[ebp], ax
$LN24@initTransi:
	movsx	eax, WORD PTR _transitionIdx$72298[ebp]
	cmp	eax, DWORD PTR _transCount$[ebp]
	jge	SHORT $LN22@initTransi
; Line 756
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	movsx	ecx, WORD PTR _transitionIdx$72298[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+96]
	movzx	ecx, BYTE PTR [edx+ecx]
	cmp	eax, ecx
	jne	SHORT $LN20@initTransi
; Line 757
	movzx	eax, WORD PTR _transitionIdx$72298[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	fstp	QWORD PTR _tt$72319[ebp]
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN19@initTransi
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+104]
	fcomp	QWORD PTR _tt$72319[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN20@initTransi
$LN19@initTransi:
; Line 760
	mov	eax, DWORD PTR _nTimes$72313[ebp]
	mov	ecx, DWORD PTR _times$72306[ebp]
	fld	QWORD PTR _tt$72319[ebp]
	fstp	QWORD PTR [ecx+eax*8]
	mov	edx, DWORD PTR _nTimes$72313[ebp]
	add	edx, 1
	mov	DWORD PTR _nTimes$72313[ebp], edx
$LN20@initTransi:
; Line 763
	jmp	$LN23@initTransi
$LN22@initTransi:
; Line 764
	cmp	DWORD PTR _nTimes$72313[ebp], 0
	jle	$LN12@initTransi
; Line 766
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [edx+eax*4]
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _raw$[ebp], eax
; Line 767
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [edx+eax*4+4]
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _dst$[ebp], eax
; Line 768
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	jne	$LN13@initTransi
; Line 769
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+88]
	mov	WORD PTR [eax+140], dx
; Line 770
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+140]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+136], eax
; Line 771
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	jne	SHORT $LN16@initTransi
; Line 772
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 773
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 774
	mov	eax, DWORD PTR _times$72306[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 775
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN16@initTransi:
; Line 777
	mov	DWORD PTR _i$72328[ebp], 0
	jmp	SHORT $LN15@initTransi
$LN14@initTransi:
	mov	eax, DWORD PTR _i$72328[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72328[ebp], eax
$LN15@initTransi:
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+140]
	cmp	DWORD PTR _i$72328[ebp], ecx
	jge	SHORT $LN13@initTransi
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _i$72328[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 780
	jmp	SHORT $LN14@initTransi
$LN13@initTransi:
; Line 783
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79570[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T79570[ebp], 0
	je	SHORT $LN46@initTransi
	cmp	DWORD PTR _dst$[ebp], 0
	jne	SHORT $LN44@initTransi
	lea	eax, DWORD PTR _stdName$[ebp]
	mov	DWORD PTR tv257[ebp], eax
	jmp	SHORT $LN45@initTransi
$LN44@initTransi:
	lea	ecx, DWORD PTR _dstName$[ebp]
	mov	DWORD PTR tv257[ebp], ecx
$LN45@initTransi:
	mov	edx, DWORD PTR tv257[ebp]
	mov	DWORD PTR $T79571[ebp], edx
	push	2
	mov	eax, DWORD PTR _nTimes$72313[ebp]
	push	eax
	mov	ecx, DWORD PTR _times$72306[ebp]
	push	ecx
	mov	edx, DWORD PTR _dst$[ebp]
	push	edx
	mov	eax, DWORD PTR _raw$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T79571[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T79570[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv259[ebp], eax
	jmp	SHORT $LN47@initTransi
$LN46@initTransi:
	mov	DWORD PTR tv259[ebp], 0
$LN47@initTransi:
	mov	edx, DWORD PTR tv259[ebp]
	mov	DWORD PTR $T79569[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	ecx, DWORD PTR $T79569[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 785
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	cmp	DWORD PTR [edx+eax*4], 0
	jne	SHORT $LN12@initTransi
; Line 786
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 787
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 788
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN12@initTransi:
; Line 791
	jmp	$LN26@initTransi
$LN25@initTransi:
; Line 792
	mov	eax, DWORD PTR _times$72306[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 795
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+128]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	movzx	cx, BYTE PTR [eax+ecx]
	mov	WORD PTR _typeIdx$72299[ebp], cx
; Line 797
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79577[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T79577[ebp], 0
	je	SHORT $LN48@initTransi
	movsx	eax, WORD PTR _typeIdx$72299[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T79577[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@NABVTimeZoneRule@1@0@Z ; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR tv299[ebp], eax
	jmp	SHORT $LN49@initTransi
$LN48@initTransi:
	mov	DWORD PTR tv299[ebp], 0
$LN49@initTransi:
	mov	edx, DWORD PTR tv299[ebp]
	mov	DWORD PTR $T79576[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T79576[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 799
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	jne	SHORT $LN11@initTransi
; Line 800
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 802
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN11@initTransi:
; Line 806
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	$LN10@initTransi
; Line 808
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+104]
	fstp	QWORD PTR _startTime$72347[ebp]
; Line 809
	mov	DWORD PTR _firstFinalRule$72349[ebp], 0
; Line 811
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN9@initTransi
; Line 819
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+144], eax
; Line 821
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN8@initTransi
; Line 822
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 823
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 824
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN8@initTransi:
; Line 826
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	call	?setStartYear@SimpleTimeZone@icu_56@@QAEXH@Z ; icu_56::SimpleTimeZone::setStartYear
; Line 828
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 829
	mov	esi, esp
	lea	eax, DWORD PTR _tzt$72353[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _startTime$72347[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 830
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	DWORD PTR tv363[ebp], eax
	mov	eax, DWORD PTR tv363[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv363[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _firstFinalRule$72349[ebp], eax
; Line 832
	cmp	DWORD PTR _firstFinalRule$72349[ebp], 0
	jne	SHORT $LN7@initTransi
; Line 833
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 834
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 835
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN7@initTransi:
; Line 837
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _startTime$72347[ebp]
; Line 838
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	jmp	$LN4@initTransi
$LN9@initTransi:
; Line 840
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+144], eax
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN5@initTransi
; Line 843
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 844
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 845
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN5@initTransi:
; Line 847
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+100]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 849
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79581[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T79581[ebp], 0
	je	SHORT $LN50@initTransi
	push	2
	push	1
	lea	eax, DWORD PTR _startTime$72347[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T79581[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv426[ebp], eax
	jmp	SHORT $LN51@initTransi
$LN50@initTransi:
	mov	DWORD PTR tv426[ebp], 0
$LN51@initTransi:
	mov	edx, DWORD PTR tv426[ebp]
	mov	DWORD PTR $T79580[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR $T79580[ebp]
	mov	DWORD PTR _firstFinalRule$72349[ebp], eax
; Line 851
	cmp	DWORD PTR _firstFinalRule$72349[ebp], 0
	jne	SHORT $LN4@initTransi
; Line 852
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 853
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 854
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN4@initTransi:
; Line 857
	mov	DWORD PTR _prevRule$72363[ebp], 0
; Line 858
	cmp	DWORD PTR _transCount$[ebp], 0
	jle	SHORT $LN3@initTransi
; Line 859
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _transCount$[ebp]
	movzx	eax, BYTE PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _prevRule$72363[ebp], eax
$LN3@initTransi:
; Line 861
	cmp	DWORD PTR _prevRule$72363[ebp], 0
	jne	SHORT $LN2@initTransi
; Line 863
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _prevRule$72363[ebp], ecx
$LN2@initTransi:
; Line 865
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T79585[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T79585[ebp], 0
	je	SHORT $LN52@initTransi
	mov	ecx, DWORD PTR $T79585[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	DWORD PTR tv487[ebp], eax
	jmp	SHORT $LN53@initTransi
$LN52@initTransi:
	mov	DWORD PTR tv487[ebp], 0
$LN53@initTransi:
	mov	eax, DWORD PTR tv487[ebp]
	mov	DWORD PTR $T79584[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T79584[ebp]
	mov	DWORD PTR [ecx+132], edx
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	jne	SHORT $LN1@initTransi
; Line 868
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 869
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteTransitionRules@OlsonTimeZone@icu_56@@AAEXXZ ; icu_56::OlsonTimeZone::deleteTransitionRules
; Line 870
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN38@initTransi
$LN1@initTransi:
; Line 872
	sub	esp, 8
	fld	QWORD PTR _startTime$72347[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 873
	mov	eax, DWORD PTR _prevRule$72363[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _prevRule$72363[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptFrom
; Line 874
	mov	eax, DWORD PTR _firstFinalRule$72349[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptTo
$LN10@initTransi:
; Line 876
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN38@initTransi:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN72@initTransi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 916				; 00000394H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN72@initTransi:
	DD	5
	DD	$LN71@initTransi
$LN71@initTransi:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN65@initTransi
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN66@initTransi
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN67@initTransi
	DD	-368					; fffffe90H
	DD	8
	DD	$LN68@initTransi
	DD	-412					; fffffe64H
	DD	24					; 00000018H
	DD	$LN69@initTransi
$LN69@initTransi:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	116					; 00000074H
	DB	0
$LN68@initTransi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN67@initTransi:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN66@initTransi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN65@initTransi:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T72279[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T72284[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T79563[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T79570[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T79577[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$8:
	lea	ecx, DWORD PTR _tzt$72353[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T79581[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T79585[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-920]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initTransitionRules@OlsonTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::initTransitionRules
PUBLIC	__$ArrayPad$
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::TimeZoneRule::getName
EXTRN	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z:PROC ; icu_56::TimeZoneTransition::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1
__ehfuncinfo$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
$T79615 = -473						; size = 1
$T79616 = -461						; size = 1
_toName$72406 = -260					; size = 64
_fromName$72405 = -188					; size = 64
_startTime$72403 = -116					; size = 8
_from$72402 = -100					; size = 4
_to$72401 = -88						; size = 4
_t$72391 = -76						; size = 8
_ttidx$72387 = -60					; size = 2
_transCount$72386 = -48					; size = 2
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::OlsonTimeZone::getNextTransition, COMDAT
; _this$ = ecx
; Line 879
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 468				; 000001d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-480]
	mov	ecx, 117				; 00000075H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 880
	mov	DWORD PTR _status$[ebp], 0
; Line 881
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::checkTransitionRules
; Line 882
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@getNextTra
; Line 883
	xor	al, al
	jmp	$LN21@getNextTra
$LN20@getNextTra:
; Line 886
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	$LN14@getNextTra
; Line 887
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	je	SHORT $LN18@getNextTra
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN18@getNextTra
; Line 888
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 889
	mov	al, 1
	jmp	$LN21@getNextTra
	jmp	SHORT $LN14@getNextTra
$LN18@getNextTra:
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN14@getNextTra
; Line 891
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@getNextTra
; Line 893
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN21@getNextTra
; Line 894
	jmp	SHORT $LN14@getNextTra
$LN15@getNextTra:
; Line 896
	xor	al, al
	jmp	$LN21@getNextTra
$LN14@getNextTra:
; Line 900
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	$LN2@getNextTra
; Line 902
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	mov	WORD PTR _transCount$72386[ebp], ax
; Line 903
	movsx	eax, WORD PTR _transCount$72386[ebp]
	sub	eax, 1
	mov	WORD PTR _ttidx$72387[ebp], ax
	jmp	SHORT $LN12@getNextTra
$LN11@getNextTra:
; Line 904
	mov	ax, WORD PTR _ttidx$72387[ebp]
	sub	ax, 1
	mov	WORD PTR _ttidx$72387[ebp], ax
$LN12@getNextTra:
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+128]
	cmp	eax, edx
	jl	SHORT $LN10@getNextTra
; Line 905
	movzx	eax, WORD PTR _ttidx$72387[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	fstp	QWORD PTR _t$72391[ebp]
; Line 906
	fld	QWORD PTR _t$72391[ebp]
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN8@getNextTra
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	jne	SHORT $LN9@getNextTra
	fld	QWORD PTR _base$[ebp]
	fld	QWORD PTR _t$72391[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@getNextTra
$LN8@getNextTra:
; Line 907
	jmp	SHORT $LN10@getNextTra
$LN9@getNextTra:
; Line 909
	jmp	SHORT $LN11@getNextTra
$LN10@getNextTra:
; Line 910
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	movsx	ecx, WORD PTR _transCount$72386[ebp]
	sub	ecx, 1
	cmp	eax, ecx
	jne	SHORT $LN7@getNextTra
; Line 911
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN6@getNextTra
; Line 912
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 913
	mov	al, 1
	jmp	$LN21@getNextTra
; Line 914
	jmp	SHORT $LN5@getNextTra
$LN6@getNextTra:
; Line 915
	xor	al, al
	jmp	$LN21@getNextTra
$LN5@getNextTra:
; Line 916
	jmp	$LN2@getNextTra
$LN7@getNextTra:
; Line 917
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+128]
	cmp	eax, edx
	jge	SHORT $LN3@getNextTra
; Line 918
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 919
	mov	al, 1
	jmp	$LN21@getNextTra
; Line 920
	jmp	$LN2@getNextTra
$LN3@getNextTra:
; Line 922
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	movzx	eax, BYTE PTR [edx+eax+1]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _to$72401[ebp], eax
; Line 923
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	movzx	eax, BYTE PTR [edx+eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _from$72402[ebp], eax
; Line 924
	movsx	eax, WORD PTR _ttidx$72387[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	fstp	QWORD PTR _startTime$72403[ebp]
; Line 927
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72405[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72406[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 928
	lea	eax, DWORD PTR _fromName$72405[ebp]
	push	eax
	mov	ecx, DWORD PTR _from$72402[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 929
	lea	eax, DWORD PTR _toName$72406[ebp]
	push	eax
	mov	ecx, DWORD PTR _to$72401[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 931
	mov	esi, esp
	lea	eax, DWORD PTR _toName$72406[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromName$72405[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN1@getNextTra
	mov	ecx, DWORD PTR _from$72402[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	mov	ecx, DWORD PTR _to$72401[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cmp	esi, eax
	jne	$LN1@getNextTra
	mov	ecx, DWORD PTR _from$72402[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	esi, eax
	mov	ecx, DWORD PTR _to$72401[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	cmp	esi, eax
	jne	SHORT $LN1@getNextTra
; Line 932
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _startTime$72403[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T79615[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72406[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72405[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T79615[ebp]
	jmp	$LN21@getNextTra
$LN1@getNextTra:
; Line 934
	sub	esp, 8
	fld	QWORD PTR _startTime$72403[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 935
	mov	eax, DWORD PTR _from$72402[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _from$72402[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptFrom
; Line 936
	mov	eax, DWORD PTR _to$72401[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _to$72401[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptTo
; Line 937
	mov	BYTE PTR $T79616[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72406[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72405[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T79616[ebp]
	jmp	SHORT $LN21@getNextTra
$LN2@getNextTra:
; Line 940
	xor	al, al
$LN21@getNextTra:
; Line 941
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@getNextTra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 480				; 000001e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN30@getNextTra:
	DD	3
	DD	$LN29@getNextTra
$LN29@getNextTra:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN25@getNextTra
	DD	-188					; ffffff44H
	DD	64					; 00000040H
	DD	$LN26@getNextTra
	DD	-260					; fffffefcH
	DD	64					; 00000040H
	DD	$LN27@getNextTra
$LN27@getNextTra:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN26@getNextTra:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN25@getNextTra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72405[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72406[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-484]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getNextTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::OlsonTimeZone::getNextTransition
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1
__ehfuncinfo$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
$T79633 = -461						; size = 1
$T79634 = -449						; size = 1
_toName$72442 = -248					; size = 64
_fromName$72441 = -176					; size = 64
_startTime$72439 = -104					; size = 8
_from$72438 = -88					; size = 4
_to$72437 = -76						; size = 4
_t$72429 = -64						; size = 8
_ttidx$72425 = -48					; size = 2
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::OlsonTimeZone::getPreviousTransition, COMDAT
; _this$ = ecx
; Line 944
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 456				; 000001c8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-468]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	DWORD PTR _status$[ebp], 0
; Line 946
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::checkTransitionRules
; Line 947
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@getPreviou
; Line 948
	xor	al, al
	jmp	$LN19@getPreviou
$LN18@getPreviou:
; Line 951
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	$LN12@getPreviou
; Line 952
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	je	SHORT $LN16@getPreviou
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fld	QWORD PTR _base$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN16@getPreviou
; Line 953
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 954
	mov	al, 1
	jmp	$LN19@getPreviou
	jmp	$LN12@getPreviou
$LN16@getPreviou:
; Line 955
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN12@getPreviou
; Line 956
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@getPreviou
; Line 958
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getPreviou
; Line 959
	jmp	SHORT $LN12@getPreviou
$LN13@getPreviou:
; Line 960
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 961
	mov	al, 1
	jmp	$LN19@getPreviou
$LN12@getPreviou:
; Line 966
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	$LN2@getPreviou
; Line 968
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionCount@OlsonTimeZone@icu_56@@ABEFXZ ; icu_56::OlsonTimeZone::transitionCount
	cwde
	sub	eax, 1
	mov	WORD PTR _ttidx$72425[ebp], ax
	jmp	SHORT $LN10@getPreviou
$LN9@getPreviou:
; Line 969
	mov	ax, WORD PTR _ttidx$72425[ebp]
	sub	ax, 1
	mov	WORD PTR _ttidx$72425[ebp], ax
$LN10@getPreviou:
	movsx	eax, WORD PTR _ttidx$72425[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+128]
	cmp	eax, edx
	jl	SHORT $LN8@getPreviou
; Line 970
	movzx	eax, WORD PTR _ttidx$72425[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	fstp	QWORD PTR _t$72429[ebp]
; Line 971
	fld	QWORD PTR _t$72429[ebp]
	fcomp	QWORD PTR _base$[ebp]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN6@getPreviou
	movsx	eax, BYTE PTR _inclusive$[ebp]
	test	eax, eax
	je	SHORT $LN7@getPreviou
	fld	QWORD PTR _base$[ebp]
	fld	QWORD PTR _t$72429[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@getPreviou
$LN6@getPreviou:
; Line 972
	jmp	SHORT $LN8@getPreviou
$LN7@getPreviou:
; Line 974
	jmp	SHORT $LN9@getPreviou
$LN8@getPreviou:
; Line 975
	movsx	eax, WORD PTR _ttidx$72425[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+128]
	cmp	eax, edx
	jge	SHORT $LN5@getPreviou
; Line 977
	xor	al, al
	jmp	$LN19@getPreviou
	jmp	$LN2@getPreviou
$LN5@getPreviou:
; Line 978
	movsx	eax, WORD PTR _ttidx$72425[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+128]
	cmp	eax, edx
	jne	SHORT $LN3@getPreviou
; Line 979
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	??4TimeZoneTransition@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::TimeZoneTransition::operator=
; Line 980
	mov	al, 1
	jmp	$LN19@getPreviou
; Line 981
	jmp	$LN2@getPreviou
$LN3@getPreviou:
; Line 983
	movsx	eax, WORD PTR _ttidx$72425[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	movzx	eax, BYTE PTR [edx+eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _to$72437[ebp], eax
; Line 984
	movsx	eax, WORD PTR _ttidx$72425[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	movzx	eax, BYTE PTR [edx+eax-1]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _from$72438[ebp], eax
; Line 985
	movzx	eax, WORD PTR _ttidx$72425[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?transitionTime@OlsonTimeZone@icu_56@@ABENF@Z ; icu_56::OlsonTimeZone::transitionTime
	fstp	QWORD PTR _startTime$72439[ebp]
; Line 988
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72441[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72442[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 989
	lea	eax, DWORD PTR _fromName$72441[ebp]
	push	eax
	mov	ecx, DWORD PTR _from$72438[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 990
	lea	eax, DWORD PTR _toName$72442[ebp]
	push	eax
	mov	ecx, DWORD PTR _to$72437[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 992
	mov	esi, esp
	lea	eax, DWORD PTR _toName$72442[ebp]
	push	eax
	lea	ecx, DWORD PTR _fromName$72441[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN1@getPreviou
	mov	ecx, DWORD PTR _from$72438[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	mov	ecx, DWORD PTR _to$72437[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	cmp	esi, eax
	jne	$LN1@getPreviou
	mov	ecx, DWORD PTR _from$72438[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	esi, eax
	mov	ecx, DWORD PTR _to$72437[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	cmp	esi, eax
	jne	SHORT $LN1@getPreviou
; Line 993
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _startTime$72439[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T79633[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72442[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72441[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T79633[ebp]
	jmp	$LN19@getPreviou
$LN1@getPreviou:
; Line 995
	sub	esp, 8
	fld	QWORD PTR _startTime$72439[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setTime@TimeZoneTransition@icu_56@@QAEXN@Z ; icu_56::TimeZoneTransition::setTime
; Line 996
	mov	eax, DWORD PTR _from$72438[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _from$72438[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?adoptFrom@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptFrom
; Line 997
	mov	eax, DWORD PTR _to$72437[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _to$72437[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?adoptTo@TimeZoneTransition@icu_56@@QAEXPAVTimeZoneRule@2@@Z ; icu_56::TimeZoneTransition::adoptTo
; Line 998
	mov	BYTE PTR $T79634[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72442[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72441[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T79634[ebp]
	jmp	SHORT $LN19@getPreviou
$LN2@getPreviou:
; Line 1001
	xor	al, al
$LN19@getPreviou:
; Line 1002
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@getPreviou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 468				; 000001d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN28@getPreviou:
	DD	3
	DD	$LN27@getPreviou
$LN27@getPreviou:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN23@getPreviou
	DD	-176					; ffffff50H
	DD	64					; 00000040H
	DD	$LN24@getPreviou
	DD	-248					; ffffff08H
	DD	64					; 00000040H
	DD	$LN25@getPreviou
$LN25@getPreviou:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN24@getPreviou:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN23@getPreviou:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _fromName$72441[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _toName$72442[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-472]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getPreviousTransition@OlsonTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::OlsonTimeZone::getPreviousTransition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$72454 = -32						; size = 4
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::countTransitionRules, COMDAT
; _this$ = ecx
; Line 1005
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1006
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@countTrans
; Line 1007
	xor	eax, eax
	jmp	$LN11@countTrans
$LN10@countTrans:
; Line 1009
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::checkTransitionRules
; Line 1010
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@countTrans
; Line 1011
	xor	eax, eax
	jmp	$LN11@countTrans
$LN9@countTrans:
; Line 1014
	mov	DWORD PTR _count$[ebp], 0
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN8@countTrans
; Line 1018
	mov	DWORD PTR _i$72454[ebp], 0
	jmp	SHORT $LN7@countTrans
$LN6@countTrans:
	mov	eax, DWORD PTR _i$72454[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72454[ebp], eax
$LN7@countTrans:
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+140]
	cmp	DWORD PTR _i$72454[ebp], ecx
	jge	SHORT $LN8@countTrans
; Line 1019
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _i$72454[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN4@countTrans
; Line 1020
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN4@countTrans:
; Line 1022
	jmp	SHORT $LN6@countTrans
$LN8@countTrans:
; Line 1024
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN3@countTrans
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@countTrans
; Line 1026
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 2
	mov	DWORD PTR _count$[ebp], eax
; Line 1027
	jmp	SHORT $LN3@countTrans
$LN2@countTrans:
; Line 1028
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN3@countTrans:
; Line 1031
	mov	eax, DWORD PTR _count$[ebp]
$LN11@countTrans:
; Line 1032
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?countTransitionRules@OlsonTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::countTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_tmpcnt$72481 = -56					; size = 4
_tmpini$72480 = -44					; size = 4
_i$72473 = -32						; size = 4
_cnt$ = -20						; size = 4
_this$ = -8						; size = 4
_initial$ = 8						; size = 4
_trsrules$ = 12						; size = 4
_trscount$ = 16						; size = 4
_status$ = 20						; size = 4
?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z PROC ; icu_56::OlsonTimeZone::getTimeZoneRules, COMDAT
; _this$ = ecx
; Line 1038
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1039
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@getTimeZon
; Line 1040
	jmp	$LN11@getTimeZon
$LN10@getTimeZon:
; Line 1042
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?checkTransitionRules@OlsonTimeZone@icu_56@@ABEXAAW4UErrorCode@@@Z ; icu_56::OlsonTimeZone::checkTransitionRules
; Line 1043
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@getTimeZon
; Line 1044
	jmp	$LN11@getTimeZon
$LN9@getTimeZon:
; Line 1048
	mov	eax, DWORD PTR _initial$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax], edx
; Line 1051
	mov	DWORD PTR _cnt$[ebp], 0
; Line 1052
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN8@getTimeZon
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _cnt$[ebp]
	jle	SHORT $LN8@getTimeZon
; Line 1055
	mov	DWORD PTR _i$72473[ebp], 0
	jmp	SHORT $LN7@getTimeZon
$LN6@getTimeZon:
	mov	eax, DWORD PTR _i$72473[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72473[ebp], eax
$LN7@getTimeZon:
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+140]
	cmp	DWORD PTR _i$72473[ebp], ecx
	jge	SHORT $LN8@getTimeZon
; Line 1056
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _i$72473[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN4@getTimeZon
; Line 1057
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _cnt$[ebp]
	mov	eax, DWORD PTR _trsrules$[ebp]
	mov	esi, DWORD PTR _i$72473[ebp]
	mov	ecx, DWORD PTR [ecx+esi*4]
	mov	DWORD PTR [eax+edx*4], ecx
	mov	edx, DWORD PTR _cnt$[ebp]
	add	edx, 1
	mov	DWORD PTR _cnt$[ebp], edx
; Line 1058
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR _cnt$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN4@getTimeZon
; Line 1059
	jmp	SHORT $LN8@getTimeZon
$LN4@getTimeZon:
; Line 1062
	jmp	SHORT $LN6@getTimeZon
$LN8@getTimeZon:
; Line 1064
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN2@getTimeZon
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _cnt$[ebp]
	jle	SHORT $LN2@getTimeZon
; Line 1066
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _cnt$[ebp]
	mov	DWORD PTR _tmpcnt$72481[ebp], ecx
; Line 1067
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpcnt$72481[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnt$[ebp]
	mov	eax, DWORD PTR _trsrules$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	lea	edx, DWORD PTR _tmpini$72480[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1068
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getTimeZon
; Line 1069
	jmp	SHORT $LN11@getTimeZon
$LN1@getTimeZon:
; Line 1071
	mov	eax, DWORD PTR _cnt$[ebp]
	add	eax, DWORD PTR _tmpcnt$72481[ebp]
	mov	DWORD PTR _cnt$[ebp], eax
$LN2@getTimeZon:
; Line 1074
	mov	eax, DWORD PTR _trscount$[ebp]
	mov	ecx, DWORD PTR _cnt$[ebp]
	mov	DWORD PTR [eax], ecx
$LN11@getTimeZon:
; Line 1075
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@getTimeZon
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN16@getTimeZon:
	DD	2
	DD	$LN15@getTimeZon
$LN15@getTimeZon:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@getTimeZon
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN14@getTimeZon
$LN14@getTimeZon:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	99					; 00000063H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN13@getTimeZon:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	0
?getTimeZoneRules@OlsonTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ENDP ; icu_56::OlsonTimeZone::getTimeZoneRules
_TEXT	ENDS
PUBLIC	?umtx_loadAcquire@icu_56@@YAHACJ@Z		; icu_56::umtx_loadAcquire
EXTRN	__imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:PROC
EXTRN	__imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z
_TEXT	SEGMENT
_uio$ = 8						; size = 4
_fp$ = 12						; size = 4
_context$ = 16						; size = 4
_errCode$ = 20						; size = 4
??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z PROC ; icu_56::umtx_initOnce<icu_56::OlsonTimeZone *>, COMDAT
; File d:\mozilla\intl\icu\source\common\umutex.h
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 289
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@umtx_initO
; Line 290
	jmp	$LN5@umtx_initO
$LN4@umtx_initO:
; Line 292
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	?umtx_loadAcquire@icu_56@@YAHACJ@Z	; icu_56::umtx_loadAcquire
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@umtx_initO
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@umtx_initO
; Line 294
	mov	esi, esp
	mov	eax, DWORD PTR _errCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	call	DWORD PTR _fp$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 295
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR _errCode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 296
	mov	esi, esp
	mov	eax, DWORD PTR _uio$[ebp]
	push	eax
	call	DWORD PTR __imp_?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 297
	jmp	SHORT $LN5@umtx_initO
$LN3@umtx_initO:
; Line 299
	mov	eax, DWORD PTR _uio$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@umtx_initO
; Line 300
	mov	eax, DWORD PTR _errCode$[ebp]
	mov	ecx, DWORD PTR _uio$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN5@umtx_initO:
; Line 303
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$umtx_initOnce@PAVOlsonTimeZone@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVOlsonTimeZone@0@AAW4UErrorCode@@@Z12@Z ENDP ; icu_56::umtx_initOnce<icu_56::OlsonTimeZone *>
_TEXT	ENDS
EXTRN	__imp__InterlockedCompareExchange@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?umtx_loadAcquire@icu_56@@YAHACJ@Z
_TEXT	SEGMENT
_var$ = 8						; size = 4
?umtx_loadAcquire@icu_56@@YAHACJ@Z PROC			; icu_56::umtx_loadAcquire, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _var$[ebp]
	push	eax
	call	DWORD PTR __imp__InterlockedCompareExchange@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?umtx_loadAcquire@icu_56@@YAHACJ@Z ENDP			; icu_56::umtx_loadAcquire
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\vtzone.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?classID@?1??getStaticClassID@VTimeZone@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::VTimeZone::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_ICAL_BEGIN_VTIMEZONE DW 042H
	DW	045H
	DW	047H
	DW	049H
	DW	04eH
	DW	03aH
	DW	056H
	DW	054H
	DW	049H
	DW	04dH
	DW	045H
	DW	05aH
	DW	04fH
	DW	04eH
	DW	045H
	DW	00H
_ICAL_END_VTIMEZONE DW 045H
	DW	04eH
	DW	044H
	DW	03aH
	DW	056H
	DW	054H
	DW	049H
	DW	04dH
	DW	045H
	DW	05aH
	DW	04fH
	DW	04eH
	DW	045H
	DW	00H
_ICAL_BEGIN DW	042H
	DW	045H
	DW	047H
	DW	049H
	DW	04eH
	DW	00H
_ICAL_END DW	045H
	DW	04eH
	DW	044H
	DW	00H
_ICAL_VTIMEZONE DW 056H
	DW	054H
	DW	049H
	DW	04dH
	DW	045H
	DW	05aH
	DW	04fH
	DW	04eH
	DW	045H
	DW	00H
_ICAL_TZID DW	054H
	DW	05aH
	DW	049H
	DW	044H
	DW	00H
	ORG $+2
_ICAL_STANDARD DW 053H
	DW	054H
	DW	041H
	DW	04eH
	DW	044H
	DW	041H
	DW	052H
	DW	044H
	DW	00H
	ORG $+2
_ICAL_DAYLIGHT DW 044H
	DW	041H
	DW	059H
	DW	04cH
	DW	049H
	DW	047H
	DW	048H
	DW	054H
	DW	00H
	ORG $+2
_ICAL_DTSTART DW 044H
	DW	054H
	DW	053H
	DW	054H
	DW	041H
	DW	052H
	DW	054H
	DW	00H
_ICAL_TZOFFSETFROM DW 054H
	DW	05aH
	DW	04fH
	DW	046H
	DW	046H
	DW	053H
	DW	045H
	DW	054H
	DW	046H
	DW	052H
	DW	04fH
	DW	04dH
	DW	00H
	ORG $+2
_ICAL_TZOFFSETTO DW 054H
	DW	05aH
	DW	04fH
	DW	046H
	DW	046H
	DW	053H
	DW	045H
	DW	054H
	DW	054H
	DW	04fH
	DW	00H
	ORG $+2
_ICAL_RDATE DW	052H
	DW	044H
	DW	041H
	DW	054H
	DW	045H
	DW	00H
_ICAL_RRULE DW	052H
	DW	052H
	DW	055H
	DW	04cH
	DW	045H
	DW	00H
_ICAL_TZNAME DW	054H
	DW	05aH
	DW	04eH
	DW	041H
	DW	04dH
	DW	045H
	DW	00H
	ORG $+2
_ICAL_TZURL DW	054H
	DW	05aH
	DW	055H
	DW	052H
	DW	04cH
	DW	00H
_ICAL_LASTMOD DW 04cH
	DW	041H
	DW	053H
	DW	054H
	DW	02dH
	DW	04dH
	DW	04fH
	DW	044H
	DW	049H
	DW	046H
	DW	049H
	DW	045H
	DW	044H
	DW	00H
_ICAL_FREQ DW	046H
	DW	052H
	DW	045H
	DW	051H
	DW	00H
	ORG $+2
_ICAL_UNTIL DW	055H
	DW	04eH
	DW	054H
	DW	049H
	DW	04cH
	DW	00H
_ICAL_YEARLY DW	059H
	DW	045H
	DW	041H
	DW	052H
	DW	04cH
	DW	059H
	DW	00H
	ORG $+2
_ICAL_BYMONTH DW 042H
	DW	059H
	DW	04dH
	DW	04fH
	DW	04eH
	DW	054H
	DW	048H
	DW	00H
_ICAL_BYDAY DW	042H
	DW	059H
	DW	044H
	DW	041H
	DW	059H
	DW	00H
_ICAL_BYMONTHDAY DW 042H
	DW	059H
	DW	04dH
	DW	04fH
	DW	04eH
	DW	054H
	DW	048H
	DW	044H
	DW	041H
	DW	059H
	DW	00H
	ORG $+2
_ICAL_NEWLINE DW 0dH
	DW	0aH
	DW	00H
	ORG $+2
_ICAL_DOW_NAMES DW 053H
	DW	055H
	DW	00H
	DW	04dH
	DW	04fH
	DW	00H
	DW	054H
	DW	055H
	DW	00H
	DW	057H
	DW	045H
	DW	00H
	DW	054H
	DW	048H
	DW	00H
	DW	046H
	DW	052H
	DW	00H
	DW	053H
	DW	041H
	DW	00H
	ORG $+2
_MONTHLENGTH DD	01fH
	DD	01cH
	DD	01fH
	DD	01eH
	DD	01fH
	DD	01eH
	DD	01fH
	DD	01fH
	DD	01eH
	DD	01fH
	DD	01eH
	DD	01fH
_ICU_TZINFO_PROP DW 058H
	DW	02dH
	DW	054H
	DW	05aH
	DW	049H
	DW	04eH
	DW	046H
	DW	04fH
	DW	03aH
	DW	00H
_ICU_TZINFO_PARTIAL DW 02fH
	DW	050H
	DW	061H
	DW	072H
	DW	074H
	DW	069H
	DW	061H
	DW	06cH
	DW	040H
	DW	00H
_ICU_TZINFO_SIMPLE DW 02fH
	DW	053H
	DW	069H
	DW	06dH
	DW	070H
	DW	06cH
	DW	065H
	DW	040H
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9TimeZone@icu_56@@QBECABV01@@Z		; icu_56::TimeZone::operator!=
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9TimeZone@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9TimeZone@icu_56@@QBECABV01@@Z PROC			; icu_56::TimeZone::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\timezone.h
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9TimeZone@icu_56@@QBECABV01@@Z ENDP			; icu_56::TimeZone::operator!=
_TEXT	ENDS
PUBLIC	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::TimeZone::getID, COMDAT
; _this$ = ecx
; Line 951
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 953
	mov	eax, DWORD PTR _ID$[ebp]
; Line 954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::TimeZone::getID
_TEXT	ENDS
PUBLIC	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ID$ = 8						; size = 4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::TimeZone::setID, COMDAT
; _this$ = ecx
; Line 960
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::TimeZone::setID
_TEXT	ENDS
PUBLIC	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::BasicTimeZone::operator=
EXTRN	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::TimeZone::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::BasicTimeZone::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4TimeZone@icu_56@@IAEAAV01@ABV01@@Z	; icu_56::TimeZone::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::BasicTimeZone::operator=
_TEXT	ENDS
PUBLIC	??1VTimeZone@icu_56@@UAE@XZ			; icu_56::VTimeZone::~VTimeZone
PUBLIC	??_GVTimeZone@icu_56@@UAEPAXI@Z			; icu_56::VTimeZone::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GVTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GVTimeZone@icu_56@@UAEPAXI@Z PROC			; icu_56::VTimeZone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VTimeZone@icu_56@@UAE@XZ		; icu_56::VTimeZone::~VTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVTimeZone@icu_56@@UAEPAXI@Z ENDP			; icu_56::VTimeZone::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EVTimeZone@icu_56@@UAEPAXI@Z			; icu_56::VTimeZone::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EVTimeZone@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EVTimeZone@icu_56@@UAEPAXI@Z PROC			; icu_56::VTimeZone::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1VTimeZone@icu_56@@UAE@XZ	; icu_56::VTimeZone::~VTimeZone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	280					; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VTimeZone@icu_56@@UAE@XZ		; icu_56::VTimeZone::~VTimeZone
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EVTimeZone@icu_56@@UAEPAXI@Z ENDP			; icu_56::VTimeZone::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z	; icu_56::VTZWriter::VTZWriter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_output$ = 8						; size = 4
??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z PROC	; icu_56::VTZWriter::VTZWriter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\vtzone.cpp
; Line 895
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 896
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _output$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 897
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z ENDP	; icu_56::VTZWriter::VTZWriter
_TEXT	ENDS
PUBLIC	??1VTZWriter@icu_56@@QAE@XZ			; icu_56::VTZWriter::~VTZWriter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VTZWriter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VTZWriter@icu_56@@QAE@XZ PROC			; icu_56::VTZWriter::~VTZWriter, COMDAT
; _this$ = ecx
; Line 899
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 900
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1VTZWriter@icu_56@@QAE@XZ ENDP			; icu_56::VTZWriter::~VTZWriter
_TEXT	ENDS
PUBLIC	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z PROC	; icu_56::VTZWriter::write, COMDAT
; _this$ = ecx
; Line 903
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 904
	mov	esi, esp
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 905
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ENDP	; icu_56::VTZWriter::write
_TEXT	ENDS
PUBLIC	?write@VTZWriter@icu_56@@QAEX_W@Z		; icu_56::VTZWriter::write
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?write@VTZWriter@icu_56@@QAEX_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ch$ = 8						; size = 2
?write@VTZWriter@icu_56@@QAEX_W@Z PROC			; icu_56::VTZWriter::write, COMDAT
; _this$ = ecx
; Line 908
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 909
	mov	esi, esp
	movzx	eax, WORD PTR _ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 910
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?write@VTZWriter@icu_56@@QAEX_W@Z ENDP			; icu_56::VTZWriter::write
_TEXT	ENDS
PUBLIC	?write@VTZWriter@icu_56@@QAEXPB_W@Z		; icu_56::VTZWriter::write
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?write@VTZWriter@icu_56@@QAEXPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?write@VTZWriter@icu_56@@QAEXPB_W@Z PROC		; icu_56::VTZWriter::write, COMDAT
; _this$ = ecx
; Line 913
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 914
	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 915
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?write@VTZWriter@icu_56@@QAEXPB_W@Z ENDP		; icu_56::VTZWriter::write
_TEXT	ENDS
PUBLIC	??0VTZReader@icu_56@@QAE@ABVUnicodeString@1@@Z	; icu_56::VTZReader::VTZReader
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VTZReader@icu_56@@QAE@ABVUnicodeString@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??0VTZReader@icu_56@@QAE@ABVUnicodeString@1@@Z PROC	; icu_56::VTZReader::VTZReader, COMDAT
; _this$ = ecx
; Line 935
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 936
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 937
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0VTZReader@icu_56@@QAE@ABVUnicodeString@1@@Z ENDP	; icu_56::VTZReader::VTZReader
_TEXT	ENDS
PUBLIC	??1VTZReader@icu_56@@QAE@XZ			; icu_56::VTZReader::~VTZReader
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VTZReader@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VTZReader@icu_56@@QAE@XZ PROC			; icu_56::VTZReader::~VTZReader, COMDAT
; _this$ = ecx
; Line 940
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1VTZReader@icu_56@@QAE@XZ ENDP			; icu_56::VTZReader::~VTZReader
_TEXT	ENDS
PUBLIC	?read@VTZReader@icu_56@@QAE_WXZ			; icu_56::VTZReader::read
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?read@VTZReader@icu_56@@QAE_WXZ
_TEXT	SEGMENT
_ch$ = -20						; size = 2
_this$ = -8						; size = 4
?read@VTZReader@icu_56@@QAE_WXZ PROC			; icu_56::VTZReader::read, COMDAT
; _this$ = ecx
; Line 944
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	eax, 65535				; 0000ffffH
	mov	WORD PTR _ch$[ebp], ax
; Line 946
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jge	SHORT $LN1@read
; Line 947
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _ch$[ebp], ax
$LN1@read:
; Line 949
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 950
	mov	ax, WORD PTR _ch$[ebp]
; Line 951
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?read@VTZReader@icu_56@@QAE_WXZ ENDP			; icu_56::VTZReader::read
_TEXT	ENDS
PUBLIC	?getStaticClassID@VTimeZone@icu_56@@SAPAXXZ	; icu_56::VTimeZone::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@VTimeZone@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@VTimeZone@icu_56@@SAPAXXZ PROC	; icu_56::VTimeZone::getStaticClassID, COMDAT
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@VTimeZone@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@VTimeZone@icu_56@@SAPAXXZ ENDP	; icu_56::VTimeZone::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@VTimeZone@icu_56@@UBEPAXXZ	; icu_56::VTimeZone::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@VTimeZone@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@VTimeZone@icu_56@@UBEPAXXZ PROC	; icu_56::VTimeZone::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@VTimeZone@icu_56@@SAPAXXZ ; icu_56::VTimeZone::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@VTimeZone@icu_56@@UBEPAXXZ ENDP	; icu_56::VTimeZone::getDynamicClassID
_TEXT	ENDS
PUBLIC	__real@43846a3eddf8cd80
PUBLIC	??_7VTimeZone@icu_56@@6B@			; icu_56::VTimeZone::`vftable'
PUBLIC	??0VTimeZone@icu_56@@AAE@XZ			; icu_56::VTimeZone::VTimeZone
PUBLIC	??_R4VTimeZone@icu_56@@6B@			; icu_56::VTimeZone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVTimeZone@icu_56@@@8			; icu_56::VTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3VTimeZone@icu_56@@8			; icu_56::VTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VTimeZone@icu_56@@8			; icu_56::VTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VTimeZone@icu_56@@8		; icu_56::VTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@BasicTimeZone@icu_56@@8		; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBasicTimeZone@icu_56@@@8		; icu_56::BasicTimeZone `RTTI Type Descriptor'
PUBLIC	??_R3BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BasicTimeZone@icu_56@@8			; icu_56::BasicTimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TimeZone@icu_56@@8		; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTimeZone@icu_56@@@8			; icu_56::TimeZone `RTTI Type Descriptor'
PUBLIC	??_R3TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TimeZone@icu_56@@8				; icu_56::TimeZone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??8VTimeZone@icu_56@@UBECABVTimeZone@1@@Z	; icu_56::VTimeZone::operator==
PUBLIC	?getOffset@VTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ; icu_56::VTimeZone::getOffset
PUBLIC	?getOffset@VTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::getOffset
PUBLIC	?getOffset@VTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::getOffset
PUBLIC	?setRawOffset@VTimeZone@icu_56@@UAEXH@Z		; icu_56::VTimeZone::setRawOffset
PUBLIC	?getRawOffset@VTimeZone@icu_56@@UBEHXZ		; icu_56::VTimeZone::getRawOffset
PUBLIC	?useDaylightTime@VTimeZone@icu_56@@UBECXZ	; icu_56::VTimeZone::useDaylightTime
PUBLIC	?inDaylightTime@VTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::inDaylightTime
PUBLIC	?hasSameRules@VTimeZone@icu_56@@UBECABVTimeZone@2@@Z ; icu_56::VTimeZone::hasSameRules
PUBLIC	?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ	; icu_56::VTimeZone::clone
PUBLIC	?getNextTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::VTimeZone::getNextTransition
PUBLIC	?getPreviousTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ; icu_56::VTimeZone::getPreviousTransition
PUBLIC	?countTransitionRules@VTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::countTransitionRules
PUBLIC	?getTimeZoneRules@VTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::getTimeZoneRules
PUBLIC	??9VTimeZone@icu_56@@UBECABVTimeZone@1@@Z	; icu_56::VTimeZone::operator!=
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	??1BasicTimeZone@icu_56@@UAE@XZ:PROC		; icu_56::BasicTimeZone::~BasicTimeZone
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	??0BasicTimeZone@icu_56@@IAE@XZ:PROC		; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDSTSavings@TimeZone@icu_56@@UBEHXZ:PROC	; icu_56::TimeZone::getDSTSavings
EXTRN	?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::hasEquivalentTransitions
EXTRN	?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::getSimpleRulesNear
EXTRN	?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::getOffsetFromLocal
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2TimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8 ; icu_56::TimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3TimeZone@icu_56@@8 DD 00H				; icu_56::TimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::TimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TimeZone@icu_56@@8 DD FLAT:??_R0?AVTimeZone@icu_56@@@8 ; icu_56::TimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2BasicTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3BasicTimeZone@icu_56@@8 DD 00H			; icu_56::BasicTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBasicTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVBasicTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::BasicTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBasicTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BasicTimeZone@icu_56@@8 DD FLAT:??_R0?AVBasicTimeZone@icu_56@@@8 ; icu_56::BasicTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BasicTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VTimeZone@icu_56@@8 DD FLAT:??_R0?AVVTimeZone@icu_56@@@8 ; icu_56::VTimeZone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2VTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R2VTimeZone@icu_56@@8 DD FLAT:??_R1A@?0A@EA@VTimeZone@icu_56@@8 ; icu_56::VTimeZone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BasicTimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@TimeZone@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3VTimeZone@icu_56@@8
rdata$r	SEGMENT
??_R3VTimeZone@icu_56@@8 DD 00H				; icu_56::VTimeZone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2VTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVTimeZone@icu_56@@@8
_DATA	SEGMENT
??_R0?AVVTimeZone@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::VTimeZone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVTimeZone@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VTimeZone@icu_56@@6B@
rdata$r	SEGMENT
??_R4VTimeZone@icu_56@@6B@ DD 00H			; icu_56::VTimeZone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVTimeZone@icu_56@@@8
	DD	FLAT:??_R3VTimeZone@icu_56@@8
rdata$r	ENDS
;	COMDAT __real@43846a3eddf8cd80
CONST	SEGMENT
__real@43846a3eddf8cd80 DQ 043846a3eddf8cd80r	; 1.83882e+017
CONST	ENDS
;	COMDAT ??_7VTimeZone@icu_56@@6B@
CONST	SEGMENT
??_7VTimeZone@icu_56@@6B@ DD FLAT:??_R4VTimeZone@icu_56@@6B@ ; icu_56::VTimeZone::`vftable'
	DD	FLAT:??_EVTimeZone@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@VTimeZone@icu_56@@UBEPAXXZ
	DD	FLAT:??8VTimeZone@icu_56@@UBECABVTimeZone@1@@Z
	DD	FLAT:?getOffset@VTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@VTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
	DD	FLAT:?getOffset@VTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
	DD	FLAT:?setRawOffset@VTimeZone@icu_56@@UAEXH@Z
	DD	FLAT:?getRawOffset@VTimeZone@icu_56@@UBEHXZ
	DD	FLAT:?useDaylightTime@VTimeZone@icu_56@@UBECXZ
	DD	FLAT:?inDaylightTime@VTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
	DD	FLAT:?hasSameRules@VTimeZone@icu_56@@UBECABVTimeZone@2@@Z
	DD	FLAT:?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	FLAT:?getDSTSavings@TimeZone@icu_56@@UBEHXZ
	DD	FLAT:?getNextTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?getPreviousTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
	DD	FLAT:?hasEquivalentTransitions@BasicTimeZone@icu_56@@UBECABV12@NNCAAW4UErrorCode@@@Z
	DD	FLAT:?countTransitionRules@VTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?getTimeZoneRules@VTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:?getSimpleRulesNear@BasicTimeZone@icu_56@@UBEXNAAPAVInitialTimeZoneRule@2@AAPAVAnnualTimeZoneRule@2@1AAW4UErrorCode@@@Z
	DD	FLAT:?getOffsetFromLocal@BasicTimeZone@icu_56@@UBEXNHHAAH0AAW4UErrorCode@@@Z
	DD	FLAT:??9VTimeZone@icu_56@@UBECABVTimeZone@1@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0VTimeZone@icu_56@@AAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$2
__ehfuncinfo$??0VTimeZone@icu_56@@AAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0VTimeZone@icu_56@@AAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VTimeZone@icu_56@@AAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VTimeZone@icu_56@@AAE@XZ PROC			; icu_56::VTimeZone::VTimeZone, COMDAT
; _this$ = ecx
; Line 958
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VTimeZone@icu_56@@AAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@XZ		; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VTimeZone@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [eax+144]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 959
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0VTimeZone@icu_56@@AAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0VTimeZone@icu_56@@AAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VTimeZone@icu_56@@AAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VTimeZone@icu_56@@AAE@XZ ENDP			; icu_56::VTimeZone::VTimeZone
PUBLIC	??_SUVector@icu_56@@6B@				; icu_56::UVector::`local vftable'
PUBLIC	??0VTimeZone@icu_56@@QAE@ABV01@@Z		; icu_56::VTimeZone::VTimeZone
PUBLIC	??_R4UVector@icu_56@@6B@			; icu_56::UVector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUVector@icu_56@@@8			; icu_56::UVector `RTTI Type Descriptor'
PUBLIC	??_R3UVector@icu_56@@8				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UVector@icu_56@@8				; icu_56::UVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UVector@icu_56@@8			; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z:PROC
EXTRN	_uprv_deleteUObject_56:PROC
EXTRN	_uhash_compareUnicodeString_56:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::BasicTimeZone::BasicTimeZone
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_EUVector@icu_56@@UAEPAXI@Z:PROC		; icu_56::UVector::`vector deleting destructor'
EXTRN	?getDynamicClassID@UVector@icu_56@@UBEPAXXZ:PROC ; icu_56::UVector::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UVector@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UVector@icu_56@@8 DD FLAT:??_R0?AVUVector@icu_56@@@8 ; icu_56::UVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UVector@icu_56@@8
rdata$r	SEGMENT
??_R2UVector@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UVector@icu_56@@8 ; icu_56::UVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UVector@icu_56@@8
rdata$r	SEGMENT
??_R3UVector@icu_56@@8 DD 00H				; icu_56::UVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUVector@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUVector@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUVector@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UVector@icu_56@@6B@
rdata$r	SEGMENT
??_R4UVector@icu_56@@6B@ DD 00H				; icu_56::UVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUVector@icu_56@@@8
	DD	FLAT:??_R3UVector@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUVector@icu_56@@6B@
CONST	SEGMENT
??_SUVector@icu_56@@6B@ DD FLAT:??_R4UVector@icu_56@@6B@ ; icu_56::UVector::`local vftable'
	DD	FLAT:??_EUVector@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UVector@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0VTimeZone@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0VTimeZone@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0VTimeZone@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VTimeZone@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv220 = -316						; size = 4
tv173 = -316						; size = 4
$T45506 = -308						; size = 4
$T45507 = -296						; size = 4
$T45510 = -284						; size = 4
$T45511 = -272						; size = 4
_line$37591 = -68					; size = 4
_i$37587 = -56						; size = 4
_size$37581 = -44					; size = 4
_status$37580 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0VTimeZone@icu_56@@QAE@ABV01@@Z PROC			; icu_56::VTimeZone::VTimeZone, COMDAT
; _this$ = ecx
; Line 964
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VTimeZone@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0BasicTimeZone@icu_56@@IAE@ABV01@@Z	; icu_56::BasicTimeZone::BasicTimeZone
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VTimeZone@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 76					; 0000004cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	fld	QWORD PTR [ecx+144]
	fstp	QWORD PTR [eax+144]
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, 216				; 000000d8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 965
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN8@VTimeZone
; Line 966
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
$LN8@VTimeZone:
; Line 968
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	$LN14@VTimeZone
; Line 969
	mov	DWORD PTR _status$37580[ebp], 0
; Line 970
	mov	esi, esp
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$37581[ebp], eax
; Line 971
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45507[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T45507[ebp], 0
	je	SHORT $LN11@VTimeZone
	mov	esi, esp
	lea	eax, DWORD PTR _status$37580[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$37581[ebp]
	push	ecx
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T45507[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T45507[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUVector@icu_56@@6B@
	mov	eax, DWORD PTR $T45507[ebp]
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN12@VTimeZone
$LN11@VTimeZone:
	mov	DWORD PTR tv173[ebp], 0
$LN12@VTimeZone:
	mov	ecx, DWORD PTR tv173[ebp]
	mov	DWORD PTR $T45506[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T45506[ebp]
	mov	DWORD PTR [edx+72], eax
; Line 972
	mov	eax, DWORD PTR _status$37580[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@VTimeZone
; Line 973
	mov	DWORD PTR _i$37587[ebp], 0
	jmp	SHORT $LN5@VTimeZone
$LN4@VTimeZone:
	mov	eax, DWORD PTR _i$37587[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37587[ebp], eax
$LN5@VTimeZone:
	mov	eax, DWORD PTR _i$37587[ebp]
	cmp	eax, DWORD PTR _size$37581[ebp]
	jge	SHORT $LN3@VTimeZone
; Line 974
	mov	esi, esp
	mov	eax, DWORD PTR _i$37587[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _line$37591[ebp], eax
; Line 975
	mov	esi, esp
	lea	eax, DWORD PTR _status$37580[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$37591[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _line$37591[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 976
	mov	eax, DWORD PTR _status$37580[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@VTimeZone
; Line 977
	jmp	SHORT $LN3@VTimeZone
$LN2@VTimeZone:
; Line 979
	jmp	SHORT $LN4@VTimeZone
$LN3@VTimeZone:
; Line 981
	mov	eax, DWORD PTR _status$37580[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@VTimeZone
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN14@VTimeZone
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T45511[ebp], ecx
	mov	edx, DWORD PTR $T45511[ebp]
	mov	DWORD PTR $T45510[ebp], edx
	cmp	DWORD PTR $T45510[ebp], 0
	je	SHORT $LN13@VTimeZone
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45510[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45510[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv220[ebp], eax
	jmp	SHORT $LN14@VTimeZone
$LN13@VTimeZone:
	mov	DWORD PTR tv220[ebp], 0
$LN14@VTimeZone:
; Line 985
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@VTimeZone
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN23@VTimeZone:
	DD	1
	DD	$LN22@VTimeZone
$LN22@VTimeZone:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@VTimeZone
$LN20@VTimeZone:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0VTimeZone@icu_56@@QAE@ABV01@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T45507[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0VTimeZone@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VTimeZone@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VTimeZone@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::VTimeZone::VTimeZone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUVector@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUVector@icu_56@@UAEPAXI@Z PROC			; icu_56::UVector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUVector@icu_56@@UAEPAXI@Z ENDP			; icu_56::UVector::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\vtzone.cpp
xdata$x	SEGMENT
__unwindtable$??1VTimeZone@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$3
__ehfuncinfo$??1VTimeZone@icu_56@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1VTimeZone@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1VTimeZone@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv139 = -268						; size = 4
tv93 = -268						; size = 4
$T45537 = -260						; size = 4
$T45538 = -248						; size = 4
$T45541 = -236						; size = 4
$T45542 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1VTimeZone@icu_56@@UAE@XZ PROC			; icu_56::VTimeZone::~VTimeZone, COMDAT
; _this$ = ecx
; Line 987
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VTimeZone@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VTimeZone@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 988
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@VTimeZone@2
; Line 989
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T45538[ebp], ecx
	mov	edx, DWORD PTR $T45538[ebp]
	mov	DWORD PTR $T45537[ebp], edx
	cmp	DWORD PTR $T45537[ebp], 0
	je	SHORT $LN5@VTimeZone@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45537[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45537[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN2@VTimeZone@2
$LN5@VTimeZone@2:
	mov	DWORD PTR tv93[ebp], 0
$LN2@VTimeZone@2:
; Line 991
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN3@VTimeZone@2
; Line 992
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T45542[ebp], ecx
	mov	edx, DWORD PTR $T45542[ebp]
	mov	DWORD PTR $T45541[ebp], edx
	cmp	DWORD PTR $T45541[ebp], 0
	je	SHORT $LN7@VTimeZone@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45541[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45541[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN3@VTimeZone@2
$LN7@VTimeZone@2:
	mov	DWORD PTR tv139[ebp], 0
$LN3@VTimeZone@2:
; Line 994
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1BasicTimeZone@icu_56@@UAE@XZ		; icu_56::BasicTimeZone::~BasicTimeZone
__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1VTimeZone@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1VTimeZone@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VTimeZone@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VTimeZone@icu_56@@UAE@XZ ENDP			; icu_56::VTimeZone::~VTimeZone
PUBLIC	??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::VTimeZone::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv225 = -364						; size = 4
tv178 = -364						; size = 4
tv165 = -364						; size = 4
tv131 = -364						; size = 4
$T45557 = -356						; size = 4
$T45558 = -344						; size = 4
$T45561 = -332						; size = 4
$T45562 = -320						; size = 4
$T45565 = -308						; size = 4
$T45566 = -296						; size = 4
$T45569 = -284						; size = 4
$T45570 = -272						; size = 4
_line$37636 = -68					; size = 4
_i$37632 = -56						; size = 4
_size$37626 = -44					; size = 4
_status$37625 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_right$ = 8						; size = 4
??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::VTimeZone::operator=, COMDAT
; _this$ = ecx
; Line 997
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 998
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _right$[ebp]
	jne	SHORT $LN12@operator
; Line 999
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN13@operator
$LN12@operator:
; Line 1001
	mov	esi, esp
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN11@operator
; Line 1002
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4BasicTimeZone@icu_56@@QAEAAV01@ABV01@@Z
; Line 1003
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN10@operator
; Line 1004
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR $T45558[ebp], ecx
	mov	edx, DWORD PTR $T45558[ebp]
	mov	DWORD PTR $T45557[ebp], edx
	cmp	DWORD PTR $T45557[ebp], 0
	je	SHORT $LN15@operator
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45557[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45557[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN16@operator
$LN15@operator:
	mov	DWORD PTR tv131[ebp], 0
$LN16@operator:
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
$LN10@operator:
; Line 1007
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN9@operator
; Line 1008
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _right$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
$LN9@operator:
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN18@operator
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T45562[ebp], ecx
	mov	edx, DWORD PTR $T45562[ebp]
	mov	DWORD PTR $T45561[ebp], edx
	cmp	DWORD PTR $T45561[ebp], 0
	je	SHORT $LN17@operator
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45561[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45561[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	DWORD PTR tv165[ebp], 0
$LN18@operator:
; Line 1013
	mov	eax, DWORD PTR _right$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	$LN1@operator
; Line 1014
	mov	DWORD PTR _status$37625[ebp], 0
; Line 1015
	mov	esi, esp
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$37626[ebp], eax
; Line 1016
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45566[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45566[ebp], 0
	je	SHORT $LN19@operator
	mov	esi, esp
	lea	eax, DWORD PTR _status$37625[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$37626[ebp]
	push	ecx
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T45566[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T45566[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUVector@icu_56@@6B@
	mov	eax, DWORD PTR $T45566[ebp]
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN20@operator
$LN19@operator:
	mov	DWORD PTR tv178[ebp], 0
$LN20@operator:
	mov	ecx, DWORD PTR tv178[ebp]
	mov	DWORD PTR $T45565[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T45565[ebp]
	mov	DWORD PTR [edx+72], eax
; Line 1017
	mov	eax, DWORD PTR _status$37625[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator
; Line 1018
	mov	DWORD PTR _i$37632[ebp], 0
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	eax, DWORD PTR _i$37632[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37632[ebp], eax
$LN5@operator:
	mov	eax, DWORD PTR _i$37632[ebp]
	cmp	eax, DWORD PTR _size$37626[ebp]
	jge	SHORT $LN3@operator
; Line 1019
	mov	esi, esp
	mov	eax, DWORD PTR _i$37632[ebp]
	push	eax
	mov	ecx, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _line$37636[ebp], eax
; Line 1020
	mov	esi, esp
	lea	eax, DWORD PTR _status$37625[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$37636[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	ecx, DWORD PTR _line$37636[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1021
	mov	eax, DWORD PTR _status$37625[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@operator
; Line 1022
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 1024
	jmp	SHORT $LN4@operator
$LN3@operator:
; Line 1026
	mov	eax, DWORD PTR _status$37625[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN1@operator
; Line 1027
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T45570[ebp], ecx
	mov	edx, DWORD PTR $T45570[ebp]
	mov	DWORD PTR $T45569[ebp], edx
	cmp	DWORD PTR $T45569[ebp], 0
	je	SHORT $LN21@operator
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45569[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45569[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv225[ebp], eax
	jmp	SHORT $LN22@operator
$LN21@operator:
	mov	DWORD PTR tv225[ebp], 0
$LN22@operator:
; Line 1028
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
$LN1@operator:
; Line 1031
	mov	eax, DWORD PTR _right$[ebp]
	add	eax, 76					; 0000004cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1032
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _right$[ebp]
	fld	QWORD PTR [ecx+144]
	fstp	QWORD PTR [eax+144]
; Line 1033
	mov	eax, DWORD PTR _right$[ebp]
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1034
	mov	eax, DWORD PTR _right$[ebp]
	add	eax, 216				; 000000d8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@operator:
; Line 1036
	mov	eax, DWORD PTR _this$[ebp]
$LN13@operator:
; Line 1037
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@operator:
	DD	1
	DD	$LN26@operator
$LN26@operator:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN24@operator
$LN24@operator:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T45566[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4VTimeZone@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::VTimeZone::operator=
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	??8TimeZone@icu_56@@UBECABV01@@Z:PROC		; icu_56::TimeZone::operator==
EXTRN	__imp_??9type_info@@QBE_NABV0@@Z:PROC
EXTRN	___RTtypeid:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8VTimeZone@icu_56@@UBECABVTimeZone@1@@Z
_TEXT	SEGMENT
_vtz$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8VTimeZone@icu_56@@UBECABVTimeZone@1@@Z PROC		; icu_56::VTimeZone::operator==, COMDAT
; _this$ = ecx
; Line 1040
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1041
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN4@operator@2
; Line 1042
	mov	al, 1
	jmp	$LN5@operator@2
$LN4@operator@2:
; Line 1044
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_??9type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@2
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8TimeZone@icu_56@@UBECABV01@@Z	; icu_56::TimeZone::operator==
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 1045
	xor	al, al
	jmp	SHORT $LN5@operator@2
$LN3@operator@2:
; Line 1047
	mov	eax, DWORD PTR _that$[ebp]
	mov	DWORD PTR _vtz$[ebp], eax
; Line 1052
	mov	esi, esp
	mov	eax, DWORD PTR _vtz$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _vtz$[ebp]
	add	eax, 76					; 0000004cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vtz$[ebp]
	fld	QWORD PTR [eax+144]
	fld	QWORD PTR [ecx+144]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@operator@2
; Line 1053
	mov	al, 1
	jmp	SHORT $LN5@operator@2
$LN1@operator@2:
; Line 1055
	xor	al, al
$LN5@operator@2:
; Line 1056
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8VTimeZone@icu_56@@UBECABVTimeZone@1@@Z ENDP		; icu_56::VTimeZone::operator==
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??9VTimeZone@icu_56@@UBECABVTimeZone@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??9VTimeZone@icu_56@@UBECABVTimeZone@1@@Z PROC		; icu_56::VTimeZone::operator!=, COMDAT
; _this$ = ecx
; Line 1059
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1060
	mov	esi, esp
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 1061
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9VTimeZone@icu_56@@UBECABVTimeZone@1@@Z ENDP		; icu_56::VTimeZone::operator!=
_TEXT	ENDS
PUBLIC	??_C@_09HHCKHDI@TZVersion?$AA@			; `string'
PUBLIC	??_C@_0L@GGJIIHAB@zoneinfo64?$AA@		; `string'
PUBLIC	?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ; icu_56::VTimeZone::createVTimeZoneByID
EXTRN	_ures_close_56:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	_ures_getStringByKey_56:PROC
EXTRN	_ures_openDirect_56:PROC
EXTRN	?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:PROC ; icu_56::TimeZone::createTimeZone
;	COMDAT ??_C@_09HHCKHDI@TZVersion?$AA@
CONST	SEGMENT
??_C@_09HHCKHDI@TZVersion?$AA@ DB 'TZVersion', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GGJIIHAB@zoneinfo64?$AA@
CONST	SEGMENT
??_C@_0L@GGJIIHAB@zoneinfo64?$AA@ DB 'zoneinfo64', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0
__ehfuncinfo$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
tv71 = -292						; size = 4
$T45589 = -284						; size = 4
$T45590 = -272						; size = 4
_len$ = -68						; size = 4
_versionStr$ = -56					; size = 4
_bundle$ = -44						; size = 4
_status$ = -32						; size = 4
_vtz$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z PROC ; icu_56::VTimeZone::createVTimeZoneByID, COMDAT
; Line 1064
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1065
	mov	esi, esp
	push	280					; 00000118H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45590[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45590[ebp], 0
	je	SHORT $LN4@createVTim
	mov	ecx, DWORD PTR $T45590[ebp]
	call	??0VTimeZone@icu_56@@AAE@XZ		; icu_56::VTimeZone::VTimeZone
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@createVTim
$LN4@createVTim:
	mov	DWORD PTR tv71[ebp], 0
$LN5@createVTim:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T45589[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T45589[ebp]
	mov	DWORD PTR _vtz$[ebp], ecx
; Line 1066
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?createTimeZone@TimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ; icu_56::TimeZone::createTimeZone
	add	esp, 4
	mov	ecx, DWORD PTR _vtz$[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 1067
	mov	eax, DWORD PTR _vtz$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _vtz$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 1070
	mov	DWORD PTR _status$[ebp], 0
; Line 1071
	mov	DWORD PTR _bundle$[ebp], 0
; Line 1072
	mov	DWORD PTR _versionStr$[ebp], 0
; Line 1073
	mov	DWORD PTR _len$[ebp], 0
; Line 1074
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@GGJIIHAB@zoneinfo64?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 1075
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_09HHCKHDI@TZVersion?$AA@
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _versionStr$[ebp], eax
; Line 1076
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@createVTim
; Line 1077
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _versionStr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vtz$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@createVTim:
; Line 1079
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1080
	mov	eax, DWORD PTR _vtz$[ebp]
; Line 1081
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@createVTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@createVTim:
	DD	2
	DD	$LN10@createVTim
$LN10@createVTim:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@createVTim
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN8@createVTim
$LN8@createVTim:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN7@createVTim:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T45590[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createVTimeZoneByID@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@@Z ENDP ; icu_56::VTimeZone::createVTimeZoneByID
PUBLIC	?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::createVTimeZoneFromBasicTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv133 = -304						; size = 4
tv75 = -304						; size = 4
$T45606 = -296						; size = 4
$T45607 = -284						; size = 4
$T45610 = -272						; size = 4
$T45611 = -260						; size = 4
_len$ = -56						; size = 4
_versionStr$ = -44					; size = 4
_bundle$ = -32						; size = 4
_vtz$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_basic_time_zone$ = 8					; size = 4
_status$ = 12						; size = 4
?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::createVTimeZoneFromBasicTimeZone, COMDAT
; Line 1084
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1085
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@createVTim@2
; Line 1086
	xor	eax, eax
	jmp	$LN5@createVTim@2
$LN4@createVTim@2:
; Line 1088
	mov	esi, esp
	push	280					; 00000118H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45607[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45607[ebp], 0
	je	SHORT $LN7@createVTim@2
	mov	ecx, DWORD PTR $T45607[ebp]
	call	??0VTimeZone@icu_56@@AAE@XZ		; icu_56::VTimeZone::VTimeZone
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN8@createVTim@2
$LN7@createVTim@2:
	mov	DWORD PTR tv75[ebp], 0
$LN8@createVTim@2:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T45606[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T45606[ebp]
	mov	DWORD PTR _vtz$[ebp], ecx
; Line 1089
	cmp	DWORD PTR _vtz$[ebp], 0
	jne	SHORT $LN3@createVTim@2
; Line 1090
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1091
	xor	eax, eax
	jmp	$LN5@createVTim@2
$LN3@createVTim@2:
; Line 1093
	mov	eax, DWORD PTR _basic_time_zone$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _basic_time_zone$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _vtz$[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 1094
	mov	eax, DWORD PTR _vtz$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN2@createVTim@2
; Line 1095
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1096
	mov	eax, DWORD PTR _vtz$[ebp]
	mov	DWORD PTR $T45611[ebp], eax
	mov	ecx, DWORD PTR $T45611[ebp]
	mov	DWORD PTR $T45610[ebp], ecx
	cmp	DWORD PTR $T45610[ebp], 0
	je	SHORT $LN9@createVTim@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45610[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45610[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN10@createVTim@2
$LN9@createVTim@2:
	mov	DWORD PTR tv133[ebp], 0
$LN10@createVTim@2:
; Line 1097
	xor	eax, eax
	jmp	$LN5@createVTim@2
$LN2@createVTim@2:
; Line 1099
	mov	eax, DWORD PTR _vtz$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _vtz$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 1102
	mov	DWORD PTR _bundle$[ebp], 0
; Line 1103
	mov	DWORD PTR _versionStr$[ebp], 0
; Line 1104
	mov	DWORD PTR _len$[ebp], 0
; Line 1105
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@GGJIIHAB@zoneinfo64?$AA@
	push	0
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 1106
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_09HHCKHDI@TZVersion?$AA@
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _versionStr$[ebp], eax
; Line 1107
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createVTim@2
; Line 1108
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _versionStr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vtz$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@createVTim@2:
; Line 1110
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 1111
	mov	eax, DWORD PTR _vtz$[ebp]
$LN5@createVTim@2:
; Line 1112
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@createVTim@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@createVTim@2:
	DD	1
	DD	$LN14@createVTim@2
$LN14@createVTim@2:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN12@createVTim@2
$LN12@createVTim@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T45607[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createVTimeZoneFromBasicTimeZone@VTimeZone@icu_56@@SAPAV12@ABVBasicTimeZone@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::createVTimeZoneFromBasicTimeZone
PUBLIC	?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::load
PUBLIC	?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::createVTimeZone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv128 = -308						; size = 4
tv79 = -308						; size = 4
$T45626 = -300						; size = 4
$T45627 = -288						; size = 4
$T45630 = -276						; size = 4
$T45631 = -264						; size = 4
$T45634 = -252						; size = 4
$T45635 = -240						; size = 4
_vtz$ = -36						; size = 4
_reader$ = -24						; size = 8
__$EHRec$ = -12						; size = 12
_vtzdata$ = 8						; size = 4
_status$ = 12						; size = 4
?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::createVTimeZone, COMDAT
; Line 1115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1116
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createVTim@3
; Line 1117
	xor	eax, eax
	jmp	$LN3@createVTim@3
$LN2@createVTim@3:
; Line 1119
	mov	eax, DWORD PTR _vtzdata$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reader$[ebp]
	call	??0VTZReader@icu_56@@QAE@ABVUnicodeString@1@@Z ; icu_56::VTZReader::VTZReader
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1120
	mov	esi, esp
	push	280					; 00000118H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45627[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T45627[ebp], 0
	je	SHORT $LN5@createVTim@3
	mov	ecx, DWORD PTR $T45627[ebp]
	call	??0VTimeZone@icu_56@@AAE@XZ		; icu_56::VTimeZone::VTimeZone
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN6@createVTim@3
$LN5@createVTim@3:
	mov	DWORD PTR tv79[ebp], 0
$LN6@createVTim@3:
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T45626[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T45626[ebp]
	mov	DWORD PTR _vtz$[ebp], ecx
; Line 1121
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _reader$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vtz$[ebp]
	call	?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::load
; Line 1122
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createVTim@3
; Line 1123
	mov	eax, DWORD PTR _vtz$[ebp]
	mov	DWORD PTR $T45631[ebp], eax
	mov	ecx, DWORD PTR $T45631[ebp]
	mov	DWORD PTR $T45630[ebp], ecx
	cmp	DWORD PTR $T45630[ebp], 0
	je	SHORT $LN7@createVTim@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45630[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45630[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN8@createVTim@3
$LN7@createVTim@3:
	mov	DWORD PTR tv128[ebp], 0
$LN8@createVTim@3:
; Line 1124
	mov	DWORD PTR $T45634[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _reader$[ebp]
	call	??1VTZReader@icu_56@@QAE@XZ		; icu_56::VTZReader::~VTZReader
	mov	eax, DWORD PTR $T45634[ebp]
	jmp	SHORT $LN3@createVTim@3
$LN1@createVTim@3:
; Line 1126
	mov	eax, DWORD PTR _vtz$[ebp]
	mov	DWORD PTR $T45635[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _reader$[ebp]
	call	??1VTZReader@icu_56@@QAE@XZ		; icu_56::VTZReader::~VTZReader
	mov	eax, DWORD PTR $T45635[ebp]
$LN3@createVTim@3:
; Line 1127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@createVTim@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@createVTim@3:
	DD	1
	DD	$LN13@createVTim@3
$LN13@createVTim@3:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN11@createVTim@3
$LN11@createVTim@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _reader$[ebp]
	jmp	??1VTZReader@icu_56@@QAE@XZ		; icu_56::VTZReader::~VTZReader
__unwindfunclet$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T45627[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createVTimeZone@VTimeZone@icu_56@@SAPAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::createVTimeZone
PUBLIC	?getTZURL@VTimeZone@icu_56@@QBECAAVUnicodeString@2@@Z ; icu_56::VTimeZone::getTZURL
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTZURL@VTimeZone@icu_56@@QBECAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_url$ = 8						; size = 4
?getTZURL@VTimeZone@icu_56@@QBECAAVUnicodeString@2@@Z PROC ; icu_56::VTimeZone::getTZURL, COMDAT
; _this$ = ecx
; Line 1130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN1@getTZURL
; Line 1132
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _url$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1133
	mov	al, 1
	jmp	SHORT $LN2@getTZURL
$LN1@getTZURL:
; Line 1135
	xor	al, al
$LN2@getTZURL:
; Line 1136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTZURL@VTimeZone@icu_56@@QBECAAVUnicodeString@2@@Z ENDP ; icu_56::VTimeZone::getTZURL
_TEXT	ENDS
PUBLIC	?setTZURL@VTimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTimeZone::setTZURL
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTZURL@VTimeZone@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_url$ = 8						; size = 4
?setTZURL@VTimeZone@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::VTimeZone::setTZURL, COMDAT
; _this$ = ecx
; Line 1139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1140
	mov	esi, esp
	mov	eax, DWORD PTR _url$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setTZURL@VTimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::VTimeZone::setTZURL
_TEXT	ENDS
PUBLIC	?getLastModified@VTimeZone@icu_56@@QBECAAN@Z	; icu_56::VTimeZone::getLastModified
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLastModified@VTimeZone@icu_56@@QBECAAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lastModified$ = 8					; size = 4
?getLastModified@VTimeZone@icu_56@@QBECAAN@Z PROC	; icu_56::VTimeZone::getLastModified, COMDAT
; _this$ = ecx
; Line 1144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1145
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+144]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@getLastMod
; Line 1146
	mov	eax, DWORD PTR _lastModified$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	QWORD PTR [ecx+144]
	fstp	QWORD PTR [eax]
; Line 1147
	mov	al, 1
	jmp	SHORT $LN2@getLastMod
$LN1@getLastMod:
; Line 1149
	xor	al, al
$LN2@getLastMod:
; Line 1150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getLastModified@VTimeZone@icu_56@@QBECAAN@Z ENDP	; icu_56::VTimeZone::getLastModified
_TEXT	ENDS
PUBLIC	?setLastModified@VTimeZone@icu_56@@QAEXN@Z	; icu_56::VTimeZone::setLastModified
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLastModified@VTimeZone@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lastModified$ = 8					; size = 8
?setLastModified@VTimeZone@icu_56@@QAEXN@Z PROC		; icu_56::VTimeZone::setLastModified, COMDAT
; _this$ = ecx
; Line 1153
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1154
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _lastModified$[ebp]
	fstp	QWORD PTR [eax+144]
; Line 1155
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?setLastModified@VTimeZone@icu_56@@QAEXN@Z ENDP		; icu_56::VTimeZone::setLastModified
_TEXT	ENDS
PUBLIC	?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
PUBLIC	?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_writer$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
_status$ = 12						; size = 4
?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::write, COMDAT
; _this$ = ecx
; Line 1158
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1159
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1160
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::VTZWriter::VTZWriter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1161
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
; Line 1162
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@write
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@write:
	DD	1
	DD	$LN6@write
$LN6@write:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@write
$LN4@write:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _writer$[ebp]
	jmp	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
__ehhandler$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write@VTimeZone@icu_56@@QBEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::write
PUBLIC	?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
PUBLIC	?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_writer$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 8
_result$ = 16						; size = 4
_status$ = 20						; size = 4
?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::write, COMDAT
; _this$ = ecx
; Line 1165
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1166
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1167
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::VTZWriter::VTZWriter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1168
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::write
; Line 1169
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@write@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@write@2:
	DD	1
	DD	$LN6@write@2
$LN6@write@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@write@2
$LN4@write@2:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _writer$[ebp]
	jmp	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
__ehhandler$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::write
PUBLIC	?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeSimple
PUBLIC	?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeSimple
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_writer$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_time$ = 8						; size = 8
_result$ = 16						; size = 4
_status$ = 20						; size = 4
?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeSimple, COMDAT
; _this$ = ecx
; Line 1172
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1173
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1174
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??0VTZWriter@icu_56@@QAE@AAVUnicodeString@1@@Z ; icu_56::VTZWriter::VTZWriter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1175
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeSimple
; Line 1176
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _writer$[ebp]
	call	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@writeSimpl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@writeSimpl:
	DD	1
	DD	$LN6@writeSimpl
$LN6@writeSimpl:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@writeSimpl
$LN4@writeSimpl:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _writer$[ebp]
	jmp	??1VTZWriter@icu_56@@QAE@XZ		; icu_56::VTZWriter::~VTZWriter
__ehhandler$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeSimple@VTimeZone@icu_56@@QBEXNAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeSimple
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0
__ehfuncinfo$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T45693 = -236						; size = 4
$T45694 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ PROC	; icu_56::VTimeZone::clone, COMDAT
; _this$ = ecx
; Line 1179
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1180
	mov	esi, esp
	push	280					; 00000118H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45694[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45694[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45694[ebp]
	call	??0VTimeZone@icu_56@@QAE@ABV01@@Z	; icu_56::VTimeZone::VTimeZone
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T45693[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T45693[ebp]
; Line 1181
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T45694[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@VTimeZone@icu_56@@UBEPAVTimeZone@2@XZ ENDP	; icu_56::VTimeZone::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOffset@VTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_day$ = 20						; size = 4
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
_status$ = 32						; size = 4
?getOffset@VTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 1185
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1186
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _millis$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _day$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	movzx	eax, BYTE PTR _era$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?getOffset@VTimeZone@icu_56@@UBEHEHHHEHAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOffset@VTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_era$ = 8						; size = 1
_year$ = 12						; size = 4
_month$ = 16						; size = 4
_day$ = 20						; size = 4
_dayOfWeek$ = 24					; size = 1
_millis$ = 28						; size = 4
_monthLength$ = 32					; size = 4
_status$ = 36						; size = 4
?getOffset@VTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 1192
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1193
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _monthLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _millis$[ebp]
	push	edx
	movzx	eax, BYTE PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _day$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _era$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1194
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?getOffset@VTimeZone@icu_56@@UBEHEHHHEHHAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getOffset@VTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_local$ = 16						; size = 1
_rawOffset$ = 20					; size = 4
_dstOffset$ = 24					; size = 4
_status$ = 28						; size = 4
?getOffset@VTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::getOffset, COMDAT
; _this$ = ecx
; Line 1198
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawOffset$[ebp]
	push	edx
	movzx	eax, BYTE PTR _local$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?getOffset@VTimeZone@icu_56@@UBEXNCAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::getOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setRawOffset@VTimeZone@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offsetMillis$ = 8					; size = 4
?setRawOffset@VTimeZone@icu_56@@UAEXH@Z PROC		; icu_56::VTimeZone::setRawOffset, COMDAT
; _this$ = ecx
; Line 1203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1204
	mov	esi, esp
	mov	eax, DWORD PTR _offsetMillis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setRawOffset@VTimeZone@icu_56@@UAEXH@Z ENDP		; icu_56::VTimeZone::setRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRawOffset@VTimeZone@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRawOffset@VTimeZone@icu_56@@UBEHXZ PROC		; icu_56::VTimeZone::getRawOffset, COMDAT
; _this$ = ecx
; Line 1208
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getRawOffset@VTimeZone@icu_56@@UBEHXZ ENDP		; icu_56::VTimeZone::getRawOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?useDaylightTime@VTimeZone@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?useDaylightTime@VTimeZone@icu_56@@UBECXZ PROC		; icu_56::VTimeZone::useDaylightTime, COMDAT
; _this$ = ecx
; Line 1213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?useDaylightTime@VTimeZone@icu_56@@UBECXZ ENDP		; icu_56::VTimeZone::useDaylightTime
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?inDaylightTime@VTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_date$ = 8						; size = 8
_status$ = 16						; size = 4
?inDaylightTime@VTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::inDaylightTime, COMDAT
; _this$ = ecx
; Line 1218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1219
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _date$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?inDaylightTime@VTimeZone@icu_56@@UBECNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::inDaylightTime
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?hasSameRules@VTimeZone@icu_56@@UBECABVTimeZone@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?hasSameRules@VTimeZone@icu_56@@UBECABVTimeZone@2@@Z PROC ; icu_56::VTimeZone::hasSameRules, COMDAT
; _this$ = ecx
; Line 1223
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1224
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?hasSameRules@VTimeZone@icu_56@@UBECABVTimeZone@2@@Z ENDP ; icu_56::VTimeZone::hasSameRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getNextTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getNextTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::VTimeZone::getNextTransition, COMDAT
; _this$ = ecx
; Line 1228
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1229
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1230
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getNextTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::VTimeZone::getNextTransition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPreviousTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_base$ = 8						; size = 8
_inclusive$ = 16					; size = 1
_result$ = 20						; size = 4
?getPreviousTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z PROC ; icu_56::VTimeZone::getPreviousTransition, COMDAT
; _this$ = ecx
; Line 1233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1234
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _inclusive$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _base$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getPreviousTransition@VTimeZone@icu_56@@UBECNCAAVTimeZoneTransition@2@@Z ENDP ; icu_56::VTimeZone::getPreviousTransition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?countTransitionRules@VTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?countTransitionRules@VTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::countTransitionRules, COMDAT
; _this$ = ecx
; Line 1238
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1239
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?countTransitionRules@VTimeZone@icu_56@@UBEHAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::countTransitionRules
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTimeZoneRules@VTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_initial$ = 8						; size = 4
_trsrules$ = 12						; size = 4
_trscount$ = 16						; size = 4
_status$ = 20						; size = 4
?getTimeZoneRules@VTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::getTimeZoneRules, COMDAT
; _this$ = ecx
; Line 1245
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1246
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trscount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _trsrules$[ebp]
	push	edx
	mov	eax, DWORD PTR _initial$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1247
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?getTimeZoneRules@VTimeZone@icu_56@@UBEXAAPBVInitialTimeZoneRule@2@QAPBVTimeZoneRule@2@AAHAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::getTimeZoneRules
_TEXT	ENDS
PUBLIC	?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z	; icu_56::VTimeZone::parse
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	??_EUnicodeString@icu_56@@UAEPAXI@Z:PROC	; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv243 = -488						; size = 4
tv215 = -488						; size = 4
tv194 = -488						; size = 4
tv164 = -488						; size = 4
tv136 = -488						; size = 4
tv71 = -488						; size = 4
$T45731 = -480						; size = 4
$T45732 = -468						; size = 4
$T45735 = -456						; size = 4
$T45736 = -444						; size = 4
$T45739 = -432						; size = 4
$T45740 = -420						; size = 4
$T45743 = -408						; size = 4
$T45744 = -396						; size = 4
$T45747 = -384						; size = 4
$T45748 = -372						; size = 4
$T45751 = -360						; size = 4
$T45752 = -348						; size = 4
_ch$37843 = -144					; size = 2
_line$ = -132						; size = 64
_success$ = -57						; size = 1
_start$ = -45						; size = 1
_eol$ = -33						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_reader$ = 8						; size = 4
_status$ = 12						; size = 4
?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::load, COMDAT
; _this$ = ecx
; Line 1250
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 476				; 000001dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 119				; 00000077H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45732[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T45732[ebp], 0
	je	SHORT $LN32@load
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	100					; 00000064H
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T45732[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45732[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T45732[ebp]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN33@load
$LN32@load:
	mov	DWORD PTR tv71[ebp], 0
$LN33@load:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T45731[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T45731[ebp]
	mov	DWORD PTR [ecx+72], edx
; Line 1252
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN29@load
; Line 1253
	jmp	$LN30@load
$LN29@load:
; Line 1255
	mov	BYTE PTR _eol$[ebp], 0
; Line 1256
	mov	BYTE PTR _start$[ebp], 0
; Line 1257
	mov	BYTE PTR _success$[ebp], 0
; Line 1258
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
$LN28@load:
; Line 1260
	mov	eax, 1
	test	eax, eax
	je	$LN27@load
; Line 1261
	mov	ecx, DWORD PTR _reader$[ebp]
	call	?read@VTZReader@icu_56@@QAE_WXZ		; icu_56::VTZReader::read
	mov	WORD PTR _ch$37843[ebp], ax
; Line 1262
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 65535				; 0000ffffH
	jne	$LN26@load
; Line 1264
	movsx	eax, BYTE PTR _start$[ebp]
	test	eax, eax
	je	$LN25@load
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_END_VTIMEZONE
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN25@load
; Line 1265
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45736[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T45736[ebp], 0
	je	SHORT $LN34@load
	mov	esi, esp
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45736[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45736[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T45736[ebp]
	mov	DWORD PTR tv136[ebp], edx
	jmp	SHORT $LN35@load
$LN34@load:
	mov	DWORD PTR tv136[ebp], 0
$LN35@load:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR $T45735[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T45735[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1266
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN24@load
; Line 1267
	jmp	$cleanupVtzlines$37851
$LN24@load:
; Line 1269
	mov	BYTE PTR _success$[ebp], 1
$LN25@load:
; Line 1271
	jmp	$LN27@load
$LN26@load:
; Line 1273
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN22@load
; Line 1275
	jmp	$LN28@load
$LN22@load:
; Line 1277
	movsx	eax, BYTE PTR _eol$[ebp]
	test	eax, eax
	je	$LN21@load
; Line 1278
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 9
	je	$LN20@load
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 32					; 00000020H
	je	$LN20@load
; Line 1280
	movsx	eax, BYTE PTR _start$[ebp]
	test	eax, eax
	je	$LN19@load
; Line 1281
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN19@load
; Line 1282
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45740[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T45740[ebp], 0
	je	SHORT $LN36@load
	mov	esi, esp
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45740[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45740[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T45740[ebp]
	mov	DWORD PTR tv164[ebp], edx
	jmp	SHORT $LN37@load
$LN36@load:
	mov	DWORD PTR tv164[ebp], 0
$LN37@load:
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T45739[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T45739[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1283
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN19@load
; Line 1284
	jmp	$cleanupVtzlines$37851
$LN19@load:
; Line 1288
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1289
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN20@load
; Line 1290
	mov	esi, esp
	movzx	eax, WORD PTR _ch$37843[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@load:
; Line 1293
	mov	BYTE PTR _eol$[ebp], 0
; Line 1294
	jmp	$LN14@load
$LN21@load:
; Line 1295
	movzx	eax, WORD PTR _ch$37843[ebp]
	cmp	eax, 10					; 0000000aH
	jne	$LN13@load
; Line 1297
	mov	BYTE PTR _eol$[ebp], 1
; Line 1298
	movsx	eax, BYTE PTR _start$[ebp]
	test	eax, eax
	je	$LN12@load
; Line 1299
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_END_VTIMEZONE
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN11@load
; Line 1300
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45744[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T45744[ebp], 0
	je	SHORT $LN38@load
	mov	esi, esp
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45744[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45744[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T45744[ebp]
	mov	DWORD PTR tv194[ebp], edx
	jmp	SHORT $LN39@load
$LN38@load:
	mov	DWORD PTR tv194[ebp], 0
$LN39@load:
	mov	eax, DWORD PTR tv194[ebp]
	mov	DWORD PTR $T45743[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T45743[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1301
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@load
; Line 1302
	jmp	$cleanupVtzlines$37851
$LN10@load:
; Line 1304
	mov	BYTE PTR _success$[ebp], 1
; Line 1305
	jmp	$LN27@load
$LN11@load:
; Line 1307
	jmp	$LN8@load
$LN12@load:
; Line 1308
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BEGIN_VTIMEZONE
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN8@load
; Line 1309
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45748[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T45748[ebp], 0
	je	SHORT $LN40@load
	mov	esi, esp
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45748[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45748[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T45748[ebp]
	mov	DWORD PTR tv215[ebp], edx
	jmp	SHORT $LN41@load
$LN40@load:
	mov	DWORD PTR tv215[ebp], 0
$LN41@load:
	mov	eax, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T45747[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T45747[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1310
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@load
; Line 1311
	jmp	$cleanupVtzlines$37851
$LN6@load:
; Line 1313
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1314
	mov	BYTE PTR _start$[ebp], 1
; Line 1315
	mov	BYTE PTR _eol$[ebp], 0
$LN8@load:
; Line 1318
	jmp	SHORT $LN14@load
$LN13@load:
; Line 1319
	mov	esi, esp
	movzx	eax, WORD PTR _ch$37843[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@load:
; Line 1322
	jmp	$LN28@load
$LN27@load:
; Line 1323
	movsx	eax, BYTE PTR _success$[ebp]
	test	eax, eax
	jne	SHORT $LN3@load
; Line 1324
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT __unwind$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$4
; Line 1325
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
__unwind$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$4:
; Line 1327
	jmp	SHORT $cleanupVtzlines$37851
$LN3@load:
; Line 1329
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::VTimeZone::parse
; Line 1330
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN30@load
$cleanupVtzlines$37851:
; Line 1333
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR $T45752[ebp], ecx
	mov	edx, DWORD PTR $T45752[ebp]
	mov	DWORD PTR $T45751[ebp], edx
	cmp	DWORD PTR $T45751[ebp], 0
	je	SHORT $LN42@load
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T45751[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T45751[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv243[ebp], eax
	jmp	SHORT $LN43@load
$LN42@load:
	mov	DWORD PTR tv243[ebp], 0
$LN43@load:
; Line 1334
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 1335
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@load:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN54@load
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN54@load:
	DD	1
	DD	$LN53@load
$LN53@load:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN51@load
$LN51@load:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T45732[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _line$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	mov	eax, DWORD PTR $T45736[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T45740[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T45744[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z$10:
	mov	esi, esp
	mov	eax, DWORD PTR $T45748[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-492]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?load@VTimeZone@icu_56@@AAEXAAVVTZReader@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::load
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVTimeZoneRule@icu_56@@@8			; icu_56::TimeZoneRule `RTTI Type Descriptor'
PUBLIC	??_R0?AVAnnualTimeZoneRule@icu_56@@@8		; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
EXTRN	?complete@RuleBasedTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedTimeZone::complete
EXTRN	?addTransitionRule@RuleBasedTimeZone@icu_56@@QAEXPAVTimeZoneRule@2@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedTimeZone::addTransitionRule
EXTRN	__imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z:PROC
EXTRN	__imp_?isEmpty@UVector@icu_56@@QBECXZ:PROC
EXTRN	__imp_?removeElementAt@UVector@icu_56@@QAEXH@Z:PROC
EXTRN	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z:PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
EXTRN	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ:PROC ; icu_56::AnnualTimeZoneRule::getRule
EXTRN	?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ:PROC ; icu_56::AnnualTimeZoneRule::getStartYear
EXTRN	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z:PROC	; icu_56::Grego::timeToFields
EXTRN	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z:PROC ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
EXTRN	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::TimeZoneRule::getName
EXTRN	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getDSTSavings
EXTRN	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ:PROC	; icu_56::TimeZoneRule::getRawOffset
EXTRN	?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB:DWORD	; icu_56::AnnualTimeZoneRule::MAX_YEAR
EXTRN	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ:PROC ; icu_56::AnnualTimeZoneRule::getEndYear
EXTRN	??0RuleBasedTimeZone@icu_56@@QAE@ABVUnicodeString@1@PAVInitialTimeZoneRule@1@@Z:PROC ; icu_56::RuleBasedTimeZone::RuleBasedTimeZone
EXTRN	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z:PROC ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
EXTRN	__imp_?removeAllElements@UVector@icu_56@@QAEXXZ:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::TimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
_DATA	SEGMENT
??_R0?AVAnnualTimeZoneRule@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::AnnualTimeZoneRule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAnnualTimeZoneRule@icu_56@@', 00H
_DATA	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	011H
	DD	FLAT:__unwindtable$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$24
	DD	01H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$25
	DD	02H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$26
	DD	03H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$27
	DD	04H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$28
	DD	05H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$29
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$30
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$31
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$32
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$33
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$34
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$37
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$38
	DD	06H
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$39
	DD	0eH
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$40
	DD	0eH
	DD	FLAT:__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$41
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv891 = -1808						; size = 4
tv887 = -1808						; size = 4
tv871 = -1808						; size = 4
tv859 = -1808						; size = 4
tv847 = -1808						; size = 4
tv835 = -1808						; size = 4
tv824 = -1808						; size = 4
tv794 = -1808						; size = 4
tv783 = -1808						; size = 4
tv752 = -1808						; size = 4
tv731 = -1808						; size = 4
tv684 = -1808						; size = 4
tv532 = -1808						; size = 4
tv522 = -1808						; size = 4
tv382 = -1808						; size = 4
tv319 = -1808						; size = 4
tv311 = -1808						; size = 4
tv173 = -1808						; size = 4
tv146 = -1808						; size = 4
tv133 = -1808						; size = 4
$T45776 = -1800						; size = 4
$T45777 = -1788						; size = 4
$T45780 = -1776						; size = 4
$T45781 = -1764						; size = 4
$T45784 = -1752						; size = 4
$T45785 = -1740						; size = 4
$T45788 = -1728						; size = 4
$T45789 = -1716						; size = 4
$T45792 = -1704						; size = 4
$T45793 = -1692						; size = 4
$T45796 = -1680						; size = 4
$T45797 = -1668						; size = 4
$T45798 = -1656						; size = 4
$T45799 = -1644						; size = 4
$T45802 = -1632						; size = 4
$T45803 = -1620						; size = 4
$T45807 = -1608						; size = 4
$T45808 = -1596						; size = 4
$T45811 = -1584						; size = 4
$T45812 = -1572						; size = 4
$T45815 = -1560						; size = 4
$T45816 = -1548						; size = 4
$T45819 = -1536						; size = 4
$T45820 = -1524						; size = 4
$T45823 = -1512						; size = 4
$T45824 = -1500						; size = 4
$T45827 = -1488						; size = 4
$T45828 = -1476						; size = 4
$T45831 = -1464						; size = 4
$T45832 = -1452						; size = 4
$T45835 = -1440						; size = 4
$T45836 = -1428						; size = 4
$T45839 = -1416						; size = 4
$T45840 = -1404						; size = 4
$T45843 = -1392						; size = 4
$T45844 = -1380						; size = 4
_r$38133 = -1176					; size = 4
_tzr$38119 = -1164					; size = 4
_mid$38105 = -1152					; size = 4
_doy$38104 = -1140					; size = 4
_dow$38103 = -1128					; size = 4
_d$38102 = -1116					; size = 4
_m$38101 = -1104					; size = 4
_y$38100 = -1092					; size = 4
_tznam$38093 = -1080					; size = 64
_newRule$38092 = -1008					; size = 4
_lastStart$38090 = -996					; size = 8
_r$38088 = -980						; size = 4
_start$38083 = -968					; size = 8
_finalStart$38082 = -952				; size = 8
_tmpDST$38081 = -936					; size = 4
_tmpRaw$38080 = -924					; size = 4
_finalRule$38078 = -912					; size = 4
_atzrule$38067 = -900					; size = 4
_r$38065 = -888						; size = 4
_startAvail$38039 = -873				; size = 1
_actualStart$38032 = -864				; size = 8
_start$38023 = -848					; size = 8
_dstSavings$38022 = -832				; size = 4
_rawOffset$38021 = -820					; size = 4
_toOffset$38020 = -808					; size = 4
_fromOffset$38019 = -796				; size = 4
_rule$38018 = -784					; size = 4
_dend$37988 = -772					; size = 4
_dstr$37984 = -760					; size = 4
_dstart$37983 = -748					; size = 4
_nextDate$37982 = -733					; size = 1
_isDST$37960 = -721					; size = 1
_valueSep$37942 = -712					; size = 4
_line$37940 = -700					; size = 4
_finalRuleCount$ = -688					; size = 4
_finalRuleIdx$ = -676					; size = 4
_rules$ = -664						; size = 4
_dates$ = -652						; size = 4
_value$ = -640						; size = 64
_name$ = -568						; size = 64
_firstStart$ = -496					; size = 8
_initialDSTSavings$ = -480				; size = 4
_initialRawOffset$ = -468				; size = 4
_isRRULE$ = -453					; size = 1
_dtstart$ = -444					; size = 64
_zonename$ = -372					; size = 64
_to$ = -300						; size = 64
_from$ = -228						; size = 64
_dst$ = -153						; size = 1
_n$ = -144						; size = 4
_state$ = -132						; size = 4
_tzid$ = -120						; size = 64
_rbtz$ = -48						; size = 4
_initialRule$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z PROC	; icu_56::VTimeZone::parse, COMDAT
; _this$ = ecx
; Line 1346
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1796				; 00000704H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1808]
	mov	ecx, 449				; 000001c1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1347
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN127@parse
; Line 1348
	jmp	$LN128@parse
$LN127@parse:
; Line 1350
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN125@parse
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN126@parse
$LN125@parse:
; Line 1351
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 1352
	jmp	$LN128@parse
$LN126@parse:
; Line 1354
	mov	DWORD PTR _initialRule$[ebp], 0
; Line 1355
	mov	DWORD PTR _rbtz$[ebp], 0
; Line 1358
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1360
	mov	DWORD PTR _state$[ebp], 0
; Line 1361
	mov	DWORD PTR _n$[ebp], 0
; Line 1362
	mov	BYTE PTR _dst$[ebp], 0
; Line 1363
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1364
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1365
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1366
	mov	esi, esp
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1367
	mov	BYTE PTR _isRRULE$[ebp], 0
; Line 1368
	mov	DWORD PTR _initialRawOffset$[ebp], 0
; Line 1369
	mov	DWORD PTR _initialDSTSavings$[ebp], 0
; Line 1370
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR _firstStart$[ebp]
; Line 1371
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1372
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1374
	mov	DWORD PTR _dates$[ebp], 0
; Line 1375
	mov	DWORD PTR _rules$[ebp], 0
; Line 1377
	mov	DWORD PTR _finalRuleIdx$[ebp], -1
; Line 1378
	mov	DWORD PTR _finalRuleCount$[ebp], 0
; Line 1380
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45777[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T45777[ebp], 0
	je	SHORT $LN130@parse
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45777[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45777[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T45777[ebp]
	mov	DWORD PTR tv133[ebp], edx
	jmp	SHORT $LN131@parse
$LN130@parse:
	mov	DWORD PTR tv133[ebp], 0
$LN131@parse:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T45776[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR $T45776[ebp]
	mov	DWORD PTR _rules$[ebp], ecx
; Line 1381
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN124@parse
; Line 1382
	jmp	$cleanupParse$37926
$LN124@parse:
; Line 1385
	mov	esi, esp
	push	OFFSET _deleteTimeZoneRule
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?setDeleter@UVector@icu_56@@QAEP6AXPAX@ZP6AX0@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1387
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45781[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T45781[ebp], 0
	je	SHORT $LN132@parse
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T45781[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45781[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T45781[ebp]
	mov	DWORD PTR tv146[ebp], edx
	jmp	SHORT $LN133@parse
$LN132@parse:
	mov	DWORD PTR tv146[ebp], 0
$LN133@parse:
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR $T45780[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR $T45780[ebp]
	mov	DWORD PTR _dates$[ebp], ecx
; Line 1388
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN122@parse
; Line 1389
	jmp	$cleanupParse$37926
$LN122@parse:
; Line 1391
	cmp	DWORD PTR _rules$[ebp], 0
	je	SHORT $LN119@parse
	cmp	DWORD PTR _dates$[ebp], 0
	jne	SHORT $LN120@parse
$LN119@parse:
; Line 1392
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1393
	jmp	$cleanupParse$37926
$LN120@parse:
; Line 1396
	mov	DWORD PTR _n$[ebp], 0
	jmp	SHORT $LN117@parse
$LN116@parse:
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN117@parse:
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _n$[ebp], eax
	jge	$LN115@parse
; Line 1397
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _line$37940[ebp], eax
; Line 1398
	mov	esi, esp
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _line$37940[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _valueSep$37942[ebp], eax
; Line 1399
	cmp	DWORD PTR _valueSep$37942[ebp], 0
	jge	SHORT $LN114@parse
; Line 1400
	jmp	SHORT $LN116@parse
$LN114@parse:
; Line 1402
	mov	esi, esp
	mov	eax, DWORD PTR _valueSep$37942[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _line$37940[ebp]
	push	ecx
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1403
	mov	eax, DWORD PTR _valueSep$37942[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _line$37940[ebp]
	push	ecx
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1405
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR tv173[ebp], eax
	cmp	DWORD PTR tv173[ebp], 0
	je	SHORT $LN111@parse
	cmp	DWORD PTR tv173[ebp], 1
	je	SHORT $LN109@parse
	cmp	DWORD PTR tv173[ebp], 2
	je	$LN90@parse
	jmp	$LN112@parse
$LN111@parse:
; Line 1408
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BEGIN
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN110@parse
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_VTIMEZONE
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN110@parse
; Line 1409
	mov	DWORD PTR _state$[ebp], 1
$LN110@parse:
; Line 1411
	jmp	$LN112@parse
$LN109@parse:
; Line 1414
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZID
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN108@parse
; Line 1415
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN91@parse
$LN108@parse:
; Line 1416
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZURL
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN106@parse
; Line 1417
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN91@parse
$LN106@parse:
; Line 1418
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_LASTMOD
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN104@parse
; Line 1421
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::parseDateTimeString
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [edx+144]
; Line 1422
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN103@parse
; Line 1423
	jmp	$cleanupParse$37926
$LN103@parse:
; Line 1424
	jmp	$LN91@parse
$LN104@parse:
; Line 1425
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BEGIN
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN100@parse
; Line 1426
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_DAYLIGHT
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	sete	cl
	mov	BYTE PTR _isDST$37960[ebp], cl
; Line 1427
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_STANDARD
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN98@parse
	movsx	eax, BYTE PTR _isDST$37960[ebp]
	test	eax, eax
	je	$LN99@parse
$LN98@parse:
; Line 1429
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN97@parse
; Line 1430
	jmp	$cleanupParse$37926
$LN97@parse:
; Line 1433
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN95@parse
; Line 1434
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?removeAllElements@UVector@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN95@parse:
; Line 1436
	mov	BYTE PTR _isRRULE$[ebp], 0
; Line 1437
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1438
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1439
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1440
	mov	al, BYTE PTR _isDST$37960[ebp]
	mov	BYTE PTR _dst$[ebp], al
; Line 1441
	mov	DWORD PTR _state$[ebp], 2
; Line 1442
	jmp	SHORT $LN94@parse
$LN99@parse:
; Line 1445
	jmp	$cleanupParse$37926
$LN94@parse:
; Line 1446
	jmp	SHORT $LN91@parse
$LN100@parse:
; Line 1447
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_END
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN91@parse
; Line 1448
	jmp	$LN112@parse
$LN91@parse:
; Line 1450
	jmp	$LN112@parse
$LN90@parse:
; Line 1452
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_DTSTART
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN89@parse
; Line 1453
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN65@parse
$LN89@parse:
; Line 1454
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZNAME
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN87@parse
; Line 1455
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN65@parse
$LN87@parse:
; Line 1456
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZOFFSETFROM
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN85@parse
; Line 1457
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN65@parse
$LN85@parse:
; Line 1458
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZOFFSETTO
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN83@parse
; Line 1459
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN65@parse
$LN83@parse:
; Line 1460
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_RDATE
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN81@parse
; Line 1462
	movsx	eax, BYTE PTR _isRRULE$[ebp]
	test	eax, eax
	je	SHORT $LN80@parse
; Line 1463
	jmp	$cleanupParse$37926
$LN80@parse:
; Line 1467
	mov	BYTE PTR _nextDate$37982[ebp], 1
; Line 1468
	mov	DWORD PTR _dstart$37983[ebp], 0
$LN78@parse:
; Line 1470
	movsx	eax, BYTE PTR _nextDate$37982[ebp]
	test	eax, eax
	je	$LN77@parse
; Line 1471
	mov	esi, esp
	mov	eax, DWORD PTR _dstart$37983[ebp]
	push	eax
	push	44					; 0000002cH
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dend$37988[ebp], eax
; Line 1472
	cmp	DWORD PTR _dend$37988[ebp], -1
	jne	$LN76@parse
; Line 1473
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45785[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T45785[ebp], 0
	je	SHORT $LN134@parse
	mov	esi, esp
	mov	eax, DWORD PTR _dstart$37983[ebp]
	push	eax
	lea	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T45785[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T45785[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	eax, DWORD PTR $T45785[ebp]
	mov	DWORD PTR tv311[ebp], eax
	jmp	SHORT $LN135@parse
$LN134@parse:
	mov	DWORD PTR tv311[ebp], 0
$LN135@parse:
	mov	ecx, DWORD PTR tv311[ebp]
	mov	DWORD PTR $T45784[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR $T45784[ebp]
	mov	DWORD PTR _dstr$37984[ebp], edx
; Line 1474
	mov	BYTE PTR _nextDate$37982[ebp], 0
; Line 1475
	jmp	$LN75@parse
$LN76@parse:
; Line 1476
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45789[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T45789[ebp], 0
	je	SHORT $LN136@parse
	mov	eax, DWORD PTR _dend$37988[ebp]
	sub	eax, DWORD PTR _dstart$37983[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dstart$37983[ebp]
	push	ecx
	lea	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T45789[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45789[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T45789[ebp]
	mov	DWORD PTR tv319[ebp], ecx
	jmp	SHORT $LN137@parse
$LN136@parse:
	mov	DWORD PTR tv319[ebp], 0
$LN137@parse:
	mov	edx, DWORD PTR tv319[ebp]
	mov	DWORD PTR $T45788[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR $T45788[ebp]
	mov	DWORD PTR _dstr$37984[ebp], eax
$LN75@parse:
; Line 1478
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstr$37984[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1479
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN74@parse
; Line 1480
	jmp	$cleanupParse$37926
$LN74@parse:
; Line 1482
	mov	eax, DWORD PTR _dend$37988[ebp]
	add	eax, 1
	mov	DWORD PTR _dstart$37983[ebp], eax
; Line 1483
	jmp	$LN78@parse
$LN77@parse:
; Line 1484
	jmp	$LN65@parse
$LN81@parse:
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_RRULE
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN71@parse
; Line 1486
	movsx	eax, BYTE PTR _isRRULE$[ebp]
	test	eax, eax
	jne	SHORT $LN70@parse
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN70@parse
; Line 1487
	jmp	$cleanupParse$37926
$LN70@parse:
; Line 1489
	mov	BYTE PTR _isRRULE$[ebp], 1
; Line 1490
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45793[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T45793[ebp], 0
	je	SHORT $LN138@parse
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45793[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T45793[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	edx, DWORD PTR $T45793[ebp]
	mov	DWORD PTR tv382[ebp], edx
	jmp	SHORT $LN139@parse
$LN138@parse:
	mov	DWORD PTR tv382[ebp], 0
$LN139@parse:
	mov	eax, DWORD PTR tv382[ebp]
	mov	DWORD PTR $T45792[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T45792[ebp]
	push	edx
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1491
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN68@parse
; Line 1492
	jmp	$cleanupParse$37926
$LN68@parse:
; Line 1493
	jmp	$LN65@parse
$LN71@parse:
; Line 1494
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_END
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN65@parse
; Line 1496
	mov	esi, esp
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN63@parse
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN63@parse
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN64@parse
$LN63@parse:
; Line 1497
	jmp	$cleanupParse$37926
$LN64@parse:
; Line 1500
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN61@parse
; Line 1501
	lea	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _dst$[ebp]
	push	ecx
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45796[ebp], esp
	mov	esi, esp
	lea	edx, DWORD PTR _tzid$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv887[ebp], eax
	call	?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z ; icu_56::getDefaultTZName
	add	esp, 72					; 00000048H
$LN61@parse:
; Line 1505
	mov	DWORD PTR _rule$38018[ebp], 0
; Line 1506
	mov	DWORD PTR _fromOffset$38019[ebp], 0
; Line 1507
	mov	DWORD PTR _toOffset$38020[ebp], 0
; Line 1508
	mov	DWORD PTR _rawOffset$38021[ebp], 0
; Line 1509
	mov	DWORD PTR _dstSavings$38022[ebp], 0
; Line 1510
	fldz
	fstp	QWORD PTR _start$38023[ebp]
; Line 1513
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _from$[ebp]
	push	ecx
	call	?offsetStrToMillis@icu_56@@YAHABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::offsetStrToMillis
	add	esp, 8
	mov	DWORD PTR _fromOffset$38019[ebp], eax
; Line 1514
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _to$[ebp]
	push	ecx
	call	?offsetStrToMillis@icu_56@@YAHABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::offsetStrToMillis
	add	esp, 8
	mov	DWORD PTR _toOffset$38020[ebp], eax
; Line 1515
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN60@parse
; Line 1516
	jmp	$cleanupParse$37926
$LN60@parse:
; Line 1519
	movsx	eax, BYTE PTR _dst$[ebp]
	test	eax, eax
	je	SHORT $LN58@parse
; Line 1521
	mov	eax, DWORD PTR _toOffset$38020[ebp]
	sub	eax, DWORD PTR _fromOffset$38019[ebp]
	test	eax, eax
	jle	SHORT $LN57@parse
; Line 1522
	mov	eax, DWORD PTR _fromOffset$38019[ebp]
	mov	DWORD PTR _rawOffset$38021[ebp], eax
; Line 1523
	mov	eax, DWORD PTR _toOffset$38020[ebp]
	sub	eax, DWORD PTR _fromOffset$38019[ebp]
	mov	DWORD PTR _dstSavings$38022[ebp], eax
; Line 1524
	jmp	SHORT $LN56@parse
$LN57@parse:
; Line 1526
	mov	eax, DWORD PTR _toOffset$38020[ebp]
	sub	eax, 3600000				; 0036ee80H
	mov	DWORD PTR _rawOffset$38021[ebp], eax
; Line 1527
	mov	DWORD PTR _dstSavings$38022[ebp], 3600000 ; 0036ee80H
$LN56@parse:
; Line 1529
	jmp	SHORT $LN55@parse
$LN58@parse:
; Line 1530
	mov	eax, DWORD PTR _toOffset$38020[ebp]
	mov	DWORD PTR _rawOffset$38021[ebp], eax
; Line 1531
	mov	DWORD PTR _dstSavings$38022[ebp], 0
$LN55@parse:
; Line 1535
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$38019[ebp]
	push	ecx
	lea	edx, DWORD PTR _dtstart$[ebp]
	push	edx
	call	?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::parseDateTimeString
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _start$38023[ebp]
; Line 1536
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN54@parse
; Line 1537
	jmp	$cleanupParse$37926
$LN54@parse:
; Line 1541
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR _actualStart$38032[ebp]
; Line 1542
	movsx	eax, BYTE PTR _isRRULE$[ebp]
	test	eax, eax
	je	SHORT $LN52@parse
; Line 1543
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$38019[ebp]
	push	ecx
	mov	edx, DWORD PTR _dates$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _start$38023[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _dstSavings$38022[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$38021[ebp]
	push	ecx
	lea	edx, DWORD PTR _zonename$[ebp]
	push	edx
	call	?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z ; icu_56::createRuleByRRULE
	add	esp, 32					; 00000020H
	mov	DWORD PTR _rule$38018[ebp], eax
; Line 1544
	jmp	SHORT $LN51@parse
$LN52@parse:
; Line 1545
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$38019[ebp]
	push	ecx
	mov	edx, DWORD PTR _dates$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _start$38023[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _dstSavings$38022[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$38021[ebp]
	push	ecx
	lea	edx, DWORD PTR _zonename$[ebp]
	push	edx
	call	?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z ; icu_56::createRuleByRDATE
	add	esp, 32					; 00000020H
	mov	DWORD PTR _rule$38018[ebp], eax
$LN51@parse:
; Line 1547
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN49@parse
	cmp	DWORD PTR _rule$38018[ebp], 0
	jne	SHORT $LN50@parse
$LN49@parse:
; Line 1548
	jmp	$cleanupParse$37926
; Line 1549
	jmp	$LN42@parse
$LN50@parse:
; Line 1550
	mov	esi, esp
	lea	eax, DWORD PTR _actualStart$38032[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _fromOffset$38019[ebp]
	push	ecx
	mov	edx, DWORD PTR _rule$38018[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _rule$38018[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _startAvail$38039[ebp], al
; Line 1551
	movsx	eax, BYTE PTR _startAvail$38039[ebp]
	test	eax, eax
	je	$LN42@parse
	fld	QWORD PTR _firstStart$[ebp]
	fcomp	QWORD PTR _actualStart$38032[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN42@parse
; Line 1553
	fld	QWORD PTR _actualStart$38032[ebp]
	fstp	QWORD PTR _firstStart$[ebp]
; Line 1557
	cmp	DWORD PTR _dstSavings$38022[ebp], 0
	jle	SHORT $LN45@parse
; Line 1558
	mov	eax, DWORD PTR _fromOffset$38019[ebp]
	mov	DWORD PTR _initialRawOffset$[ebp], eax
; Line 1559
	mov	DWORD PTR _initialDSTSavings$[ebp], 0
; Line 1560
	jmp	SHORT $LN42@parse
$LN45@parse:
; Line 1561
	mov	eax, DWORD PTR _fromOffset$38019[ebp]
	sub	eax, DWORD PTR _toOffset$38020[ebp]
	cmp	eax, 3600000				; 0036ee80H
	jne	SHORT $LN43@parse
; Line 1562
	mov	eax, DWORD PTR _fromOffset$38019[ebp]
	sub	eax, 3600000				; 0036ee80H
	mov	DWORD PTR _initialRawOffset$[ebp], eax
; Line 1563
	mov	DWORD PTR _initialDSTSavings$[ebp], 3600000 ; 0036ee80H
; Line 1564
	jmp	SHORT $LN42@parse
$LN43@parse:
; Line 1565
	mov	eax, DWORD PTR _fromOffset$38019[ebp]
	mov	DWORD PTR _initialRawOffset$[ebp], eax
; Line 1566
	mov	DWORD PTR _initialDSTSavings$[ebp], 0
$LN42@parse:
; Line 1571
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$38018[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1572
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN41@parse
; Line 1573
	jmp	$cleanupParse$37926
$LN41@parse:
; Line 1575
	mov	DWORD PTR _state$[ebp], 1
$LN65@parse:
$LN112@parse:
; Line 1579
	jmp	$LN116@parse
$LN115@parse:
; Line 1581
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN39@parse
; Line 1582
	jmp	$cleanupParse$37926
$LN39@parse:
; Line 1586
	lea	eax, DWORD PTR _zonename$[ebp]
	push	eax
	push	0
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45797[ebp], esp
	mov	esi, esp
	lea	edx, DWORD PTR _tzid$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv891[ebp], eax
	call	?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z ; icu_56::getDefaultTZName
	add	esp, 72					; 00000048H
; Line 1588
	mov	esi, esp
	push	76					; 0000004cH
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45799[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T45799[ebp], 0
	je	SHORT $LN140@parse
	mov	eax, DWORD PTR _initialDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initialRawOffset$[ebp]
	push	ecx
	lea	edx, DWORD PTR _zonename$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T45799[ebp]
	call	??0InitialTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HH@Z ; icu_56::InitialTimeZoneRule::InitialTimeZoneRule
	mov	DWORD PTR tv522[ebp], eax
	jmp	SHORT $LN141@parse
$LN140@parse:
	mov	DWORD PTR tv522[ebp], 0
$LN141@parse:
	mov	eax, DWORD PTR tv522[ebp]
	mov	DWORD PTR $T45798[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR $T45798[ebp]
	mov	DWORD PTR _initialRule$[ebp], ecx
; Line 1589
	cmp	DWORD PTR _initialRule$[ebp], 0
	jne	SHORT $LN37@parse
; Line 1590
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1591
	jmp	$cleanupParse$37926
$LN37@parse:
; Line 1595
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45803[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T45803[ebp], 0
	je	SHORT $LN142@parse
	mov	eax, DWORD PTR _initialRule$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T45803[ebp]
	call	??0RuleBasedTimeZone@icu_56@@QAE@ABVUnicodeString@1@PAVInitialTimeZoneRule@1@@Z ; icu_56::RuleBasedTimeZone::RuleBasedTimeZone
	mov	DWORD PTR tv532[ebp], eax
	jmp	SHORT $LN143@parse
$LN142@parse:
	mov	DWORD PTR tv532[ebp], 0
$LN143@parse:
	mov	edx, DWORD PTR tv532[ebp]
	mov	DWORD PTR $T45802[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR $T45802[ebp]
	mov	DWORD PTR _rbtz$[ebp], eax
; Line 1596
	cmp	DWORD PTR _rbtz$[ebp], 0
	jne	SHORT $LN35@parse
; Line 1597
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1598
	jmp	$cleanupParse$37926
$LN35@parse:
; Line 1600
	mov	DWORD PTR _initialRule$[ebp], 0
; Line 1602
	mov	DWORD PTR _n$[ebp], 0
	jmp	SHORT $LN33@parse
$LN32@parse:
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN33@parse:
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _n$[ebp], eax
	jge	$LN31@parse
; Line 1603
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$38065[ebp], eax
; Line 1604
	push	0
	push	OFFSET ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZoneRule@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _r$38065[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _atzrule$38067[ebp], eax
; Line 1605
	cmp	DWORD PTR _atzrule$38067[ebp], 0
	je	SHORT $LN29@parse
; Line 1606
	mov	ecx, DWORD PTR _atzrule$38067[ebp]
	call	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getEndYear
	cmp	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	jne	SHORT $LN29@parse
; Line 1607
	mov	eax, DWORD PTR _finalRuleCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _finalRuleCount$[ebp], eax
; Line 1608
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _finalRuleIdx$[ebp], eax
$LN29@parse:
; Line 1611
	jmp	$LN32@parse
$LN31@parse:
; Line 1612
	cmp	DWORD PTR _finalRuleCount$[ebp], 2
	jle	SHORT $LN28@parse
; Line 1614
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1615
	jmp	$cleanupParse$37926
$LN28@parse:
; Line 1618
	cmp	DWORD PTR _finalRuleCount$[ebp], 1
	jne	$LN24@parse
; Line 1619
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN25@parse
; Line 1623
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?removeAllElements@UVector@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1624
	jmp	$LN24@parse
$LN25@parse:
; Line 1626
	mov	esi, esp
	mov	eax, DWORD PTR _finalRuleIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _finalRule$38078[ebp], eax
; Line 1627
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	DWORD PTR _tmpRaw$38080[ebp], eax
; Line 1628
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR _tmpDST$38081[ebp], eax
; Line 1632
	mov	esi, esp
	lea	eax, DWORD PTR _finalStart$38082[ebp]
	push	eax
	mov	ecx, DWORD PTR _initialDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _initialRawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _finalRule$38078[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1633
	fld	QWORD PTR _finalStart$38082[ebp]
	fstp	QWORD PTR _start$38083[ebp]
; Line 1634
	mov	DWORD PTR _n$[ebp], 0
	jmp	SHORT $LN23@parse
$LN22@parse:
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN23@parse:
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _n$[ebp], eax
	jge	$LN21@parse
; Line 1635
	mov	eax, DWORD PTR _finalRuleIdx$[ebp]
	cmp	eax, DWORD PTR _n$[ebp]
	jne	SHORT $LN20@parse
; Line 1636
	jmp	SHORT $LN22@parse
$LN20@parse:
; Line 1638
	mov	esi, esp
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$38088[ebp], eax
; Line 1640
	mov	esi, esp
	lea	eax, DWORD PTR _lastStart$38090[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpDST$38081[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpRaw$38080[ebp]
	push	edx
	mov	eax, DWORD PTR _r$38088[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _r$38088[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1641
	fld	QWORD PTR _start$38083[ebp]
	fcomp	QWORD PTR _lastStart$38090[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN19@parse
; Line 1646
	mov	esi, esp
	lea	eax, DWORD PTR _start$38083[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _r$38088[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _r$38088[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	sub	esp, 8
	fld	QWORD PTR _lastStart$38090[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@parse:
; Line 1648
	jmp	$LN22@parse
$LN21@parse:
; Line 1651
	mov	esi, esp
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 1652
	fld	QWORD PTR _start$38083[ebp]
	fld	QWORD PTR _finalStart$38082[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	$LN18@parse
; Line 1660
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45808[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T45808[ebp], 0
	je	SHORT $LN144@parse
	push	2
	push	1
	lea	eax, DWORD PTR _finalStart$38082[ebp]
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	push	ecx
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
	push	eax
	mov	ecx, DWORD PTR $T45808[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv684[ebp], eax
	jmp	SHORT $LN145@parse
$LN144@parse:
	mov	DWORD PTR tv684[ebp], 0
$LN145@parse:
	mov	edx, DWORD PTR tv684[ebp]
	mov	DWORD PTR $T45807[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR $T45807[ebp]
	mov	DWORD PTR _newRule$38092[ebp], eax
; Line 1661
	jmp	$LN17@parse
$LN18@parse:
; Line 1664
	lea	eax, DWORD PTR _mid$38105[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$38104[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$38103[ebp]
	push	edx
	lea	eax, DWORD PTR _d$38102[ebp]
	push	eax
	lea	ecx, DWORD PTR _m$38101[ebp]
	push	ecx
	lea	edx, DWORD PTR _y$38100[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _start$38083[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 1671
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45812[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	cmp	DWORD PTR $T45812[ebp], 0
	je	SHORT $LN146@parse
	mov	eax, DWORD PTR _y$38100[ebp]
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getStartYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getStartYear
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	push	eax
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	push	eax
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	push	ecx
	mov	ecx, DWORD PTR _finalRule$38078[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
	push	eax
	mov	ecx, DWORD PTR $T45812[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHABVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv731[ebp], eax
	jmp	SHORT $LN147@parse
$LN146@parse:
	mov	DWORD PTR tv731[ebp], 0
$LN147@parse:
	mov	edx, DWORD PTR tv731[ebp]
	mov	DWORD PTR $T45811[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR $T45811[ebp]
	mov	DWORD PTR _newRule$38092[ebp], eax
$LN17@parse:
; Line 1673
	cmp	DWORD PTR _newRule$38092[ebp], 0
	jne	SHORT $LN16@parse
; Line 1674
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1704
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1675
	jmp	$cleanupParse$37926
$LN16@parse:
; Line 1677
	mov	esi, esp
	mov	eax, DWORD PTR _finalRuleIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?removeElementAt@UVector@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1678
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newRule$38092[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1679
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@parse
; Line 1680
	mov	eax, DWORD PTR _newRule$38092[ebp]
	mov	DWORD PTR $T45816[ebp], eax
	mov	ecx, DWORD PTR $T45816[ebp]
	mov	DWORD PTR $T45815[ebp], ecx
	cmp	DWORD PTR $T45815[ebp], 0
	je	SHORT $LN148@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45815[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45815[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv752[ebp], eax
	jmp	SHORT $LN149@parse
$LN148@parse:
	mov	DWORD PTR tv752[ebp], 0
$LN149@parse:
; Line 1704
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1681
	jmp	$cleanupParse$37926
$LN14@parse:
; Line 1683
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@parse:
; Line 1686
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@parse
; Line 1687
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tzr$38119[ebp], eax
; Line 1688
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tzr$38119[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rbtz$[ebp]
	call	?addTransitionRule@RuleBasedTimeZone@icu_56@@QAEXPAVTimeZoneRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::addTransitionRule
; Line 1689
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@parse
; Line 1690
	jmp	$cleanupParse$37926
$LN10@parse:
; Line 1692
	jmp	SHORT $LN24@parse
$LN11@parse:
; Line 1693
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rbtz$[ebp]
	call	?complete@RuleBasedTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::complete
; Line 1694
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@parse
; Line 1695
	jmp	$cleanupParse$37926
$LN8@parse:
; Line 1697
	mov	eax, DWORD PTR _rules$[ebp]
	mov	DWORD PTR $T45820[ebp], eax
	mov	ecx, DWORD PTR $T45820[ebp]
	mov	DWORD PTR $T45819[ebp], ecx
	cmp	DWORD PTR $T45819[ebp], 0
	je	SHORT $LN150@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45819[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45819[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv783[ebp], eax
	jmp	SHORT $LN151@parse
$LN150@parse:
	mov	DWORD PTR tv783[ebp], 0
$LN151@parse:
; Line 1698
	mov	eax, DWORD PTR _dates$[ebp]
	mov	DWORD PTR $T45824[ebp], eax
	mov	ecx, DWORD PTR $T45824[ebp]
	mov	DWORD PTR $T45823[ebp], ecx
	cmp	DWORD PTR $T45823[ebp], 0
	je	SHORT $LN152@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45823[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45823[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv794[ebp], eax
	jmp	SHORT $LN153@parse
$LN152@parse:
	mov	DWORD PTR tv794[ebp], 0
$LN153@parse:
; Line 1700
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rbtz$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 1701
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setID@TimeZone@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::TimeZone::setID
; Line 1702
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN128@parse
$cleanupParse$37926:
; Line 1705
	cmp	DWORD PTR _rules$[ebp], 0
	je	$LN157@parse
$LN5@parse:
; Line 1706
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@parse
; Line 1707
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$38133[ebp], eax
; Line 1708
	mov	eax, DWORD PTR _r$38133[ebp]
	mov	DWORD PTR $T45828[ebp], eax
	mov	ecx, DWORD PTR $T45828[ebp]
	mov	DWORD PTR $T45827[ebp], ecx
	cmp	DWORD PTR $T45827[ebp], 0
	je	SHORT $LN154@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45827[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45827[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv824[ebp], eax
	jmp	SHORT $LN155@parse
$LN154@parse:
	mov	DWORD PTR tv824[ebp], 0
$LN155@parse:
; Line 1709
	jmp	$LN5@parse
$LN4@parse:
; Line 1710
	mov	eax, DWORD PTR _rules$[ebp]
	mov	DWORD PTR $T45832[ebp], eax
	mov	ecx, DWORD PTR $T45832[ebp]
	mov	DWORD PTR $T45831[ebp], ecx
	cmp	DWORD PTR $T45831[ebp], 0
	je	SHORT $LN156@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45831[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45831[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv835[ebp], eax
	jmp	SHORT $LN157@parse
$LN156@parse:
	mov	DWORD PTR tv835[ebp], 0
$LN157@parse:
; Line 1712
	cmp	DWORD PTR _dates$[ebp], 0
	je	SHORT $LN159@parse
; Line 1713
	mov	eax, DWORD PTR _dates$[ebp]
	mov	DWORD PTR $T45836[ebp], eax
	mov	ecx, DWORD PTR $T45836[ebp]
	mov	DWORD PTR $T45835[ebp], ecx
	cmp	DWORD PTR $T45835[ebp], 0
	je	SHORT $LN158@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45835[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45835[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv847[ebp], eax
	jmp	SHORT $LN159@parse
$LN158@parse:
	mov	DWORD PTR tv847[ebp], 0
$LN159@parse:
; Line 1715
	cmp	DWORD PTR _initialRule$[ebp], 0
	je	SHORT $LN161@parse
; Line 1716
	mov	eax, DWORD PTR _initialRule$[ebp]
	mov	DWORD PTR $T45840[ebp], eax
	mov	ecx, DWORD PTR $T45840[ebp]
	mov	DWORD PTR $T45839[ebp], ecx
	cmp	DWORD PTR $T45839[ebp], 0
	je	SHORT $LN160@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45839[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45839[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv859[ebp], eax
	jmp	SHORT $LN161@parse
$LN160@parse:
	mov	DWORD PTR tv859[ebp], 0
$LN161@parse:
; Line 1718
	cmp	DWORD PTR _rbtz$[ebp], 0
	je	SHORT $LN163@parse
; Line 1719
	mov	eax, DWORD PTR _rbtz$[ebp]
	mov	DWORD PTR $T45844[ebp], eax
	mov	ecx, DWORD PTR $T45844[ebp]
	mov	DWORD PTR $T45843[ebp], ecx
	cmp	DWORD PTR $T45843[ebp], 0
	je	SHORT $LN162@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45843[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45843[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv871[ebp], eax
	jmp	SHORT $LN163@parse
$LN162@parse:
	mov	DWORD PTR tv871[ebp], 0
$LN163@parse:
; Line 1721
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN128@parse:
; Line 1722
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN203@parse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1808				; 00000710H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN203@parse:
	DD	18					; 00000012H
	DD	$LN202@parse
$LN202@parse:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN183@parse
	DD	-228					; ffffff1cH
	DD	64					; 00000040H
	DD	$LN184@parse
	DD	-300					; fffffed4H
	DD	64					; 00000040H
	DD	$LN185@parse
	DD	-372					; fffffe8cH
	DD	64					; 00000040H
	DD	$LN186@parse
	DD	-444					; fffffe44H
	DD	64					; 00000040H
	DD	$LN187@parse
	DD	-568					; fffffdc8H
	DD	64					; 00000040H
	DD	$LN188@parse
	DD	-640					; fffffd80H
	DD	64					; 00000040H
	DD	$LN189@parse
	DD	-864					; fffffca0H
	DD	8
	DD	$LN190@parse
	DD	-952					; fffffc48H
	DD	8
	DD	$LN191@parse
	DD	-968					; fffffc38H
	DD	8
	DD	$LN192@parse
	DD	-996					; fffffc1cH
	DD	8
	DD	$LN193@parse
	DD	-1080					; fffffbc8H
	DD	64					; 00000040H
	DD	$LN194@parse
	DD	-1092					; fffffbbcH
	DD	4
	DD	$LN195@parse
	DD	-1104					; fffffbb0H
	DD	4
	DD	$LN196@parse
	DD	-1116					; fffffba4H
	DD	4
	DD	$LN197@parse
	DD	-1128					; fffffb98H
	DD	4
	DD	$LN198@parse
	DD	-1140					; fffffb8cH
	DD	4
	DD	$LN199@parse
	DD	-1152					; fffffb80H
	DD	4
	DD	$LN200@parse
$LN200@parse:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN199@parse:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN198@parse:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN197@parse:
	DB	100					; 00000064H
	DB	0
$LN196@parse:
	DB	109					; 0000006dH
	DB	0
$LN195@parse:
	DB	121					; 00000079H
	DB	0
$LN194@parse:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN193@parse:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN192@parse:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN191@parse:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN190@parse:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN189@parse:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN188@parse:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN187@parse:
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN186@parse:
	DB	122					; 0000007aH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN185@parse:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	0
$LN184@parse:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN183@parse:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$23:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$24:
	mov	esi, esp
	lea	ecx, DWORD PTR _from$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$25:
	mov	esi, esp
	lea	ecx, DWORD PTR _to$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$26:
	mov	esi, esp
	lea	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$27:
	mov	esi, esp
	lea	ecx, DWORD PTR _dtstart$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$28:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$29:
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$30:
	mov	esi, esp
	mov	eax, DWORD PTR $T45777[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$31:
	mov	esi, esp
	mov	eax, DWORD PTR $T45781[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$32:
	mov	esi, esp
	mov	eax, DWORD PTR $T45785[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$33:
	mov	esi, esp
	mov	eax, DWORD PTR $T45789[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$34:
	mov	esi, esp
	mov	eax, DWORD PTR $T45793[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$37:
	mov	esi, esp
	mov	eax, DWORD PTR $T45799[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$38:
	mov	esi, esp
	mov	eax, DWORD PTR $T45803[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$39:
	mov	esi, esp
	lea	ecx, DWORD PTR _tznam$38093[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$40:
	mov	esi, esp
	mov	eax, DWORD PTR $T45808[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z$41:
	mov	esi, esp
	mov	eax, DWORD PTR $T45812[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1812]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@VTimeZone@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP	; icu_56::VTimeZone::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _deleteTimeZoneRule
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T45896 = -212						; size = 4
$T45897 = -200						; size = 4
_obj$ = 8						; size = 4
_deleteTimeZoneRule PROC				; COMDAT
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 29
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR $T45897[ebp], eax
	mov	ecx, DWORD PTR $T45897[ebp]
	mov	DWORD PTR $T45896[ebp], ecx
	cmp	DWORD PTR $T45896[ebp], 0
	je	SHORT $LN3@deleteTime
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T45896[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T45896[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@deleteTime
$LN3@deleteTime:
	mov	DWORD PTR tv74[ebp], 0
$LN1@deleteTime:
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_deleteTimeZoneRule ENDP
_TEXT	ENDS
PUBLIC	__real@4194997000000000
PUBLIC	?monthLength@Grego@icu_56@@SACHH@Z		; icu_56::Grego::monthLength
EXTRN	?fieldsToDay@Grego@icu_56@@SANHHH@Z:PROC	; icu_56::Grego::fieldsToDay
;	COMDAT __real@4194997000000000
CONST	SEGMENT
__real@4194997000000000 DQ 04194997000000000r	; 8.64e+007
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv233 = -332						; size = 4
_time$ = -132						; size = 8
_maxDayOfMonth$37123 = -116				; size = 4
_length$37117 = -104					; size = 4
_isValid$ = -89						; size = 1
_isUTC$ = -77						; size = 1
_sec$ = -68						; size = 4
_min$ = -56						; size = 4
_hour$ = -44						; size = 4
_day$ = -32						; size = 4
_month$ = -20						; size = 4
_year$ = -8						; size = 4
_str$ = 8						; size = 4
_offset$ = 12						; size = 4
_status$ = 16						; size = 4
?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z PROC ; icu_56::parseDateTimeString, COMDAT
; Line 225
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 226
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseDateT
; Line 227
	fldz
	jmp	$LN14@parseDateT
$LN13@parseDateT:
; Line 230
	mov	DWORD PTR _year$[ebp], 0
	mov	DWORD PTR _month$[ebp], 0
	mov	DWORD PTR _day$[ebp], 0
	mov	DWORD PTR _hour$[ebp], 0
	mov	DWORD PTR _min$[ebp], 0
	mov	DWORD PTR _sec$[ebp], 0
; Line 231
	mov	BYTE PTR _isUTC$[ebp], 0
; Line 232
	mov	BYTE PTR _isValid$[ebp], 0
$LN12@parseDateT:
; Line 234
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$37117[ebp], eax
; Line 235
	cmp	DWORD PTR _length$37117[ebp], 15	; 0000000fH
	je	SHORT $LN9@parseDateT
	cmp	DWORD PTR _length$37117[ebp], 16	; 00000010H
	je	SHORT $LN9@parseDateT
; Line 238
	jmp	$LN10@parseDateT
$LN9@parseDateT:
; Line 240
	mov	esi, esp
	push	8
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 84					; 00000054H
	je	SHORT $LN8@parseDateT
; Line 242
	jmp	$LN10@parseDateT
$LN8@parseDateT:
; Line 244
	cmp	DWORD PTR _length$37117[ebp], 16	; 00000010H
	jne	SHORT $LN7@parseDateT
; Line 245
	mov	esi, esp
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 90					; 0000005aH
	je	SHORT $LN6@parseDateT
; Line 247
	jmp	$LN10@parseDateT
$LN6@parseDateT:
; Line 249
	mov	BYTE PTR _isUTC$[ebp], 1
$LN7@parseDateT:
; Line 252
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	4
	push	0
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _year$[ebp], eax
; Line 253
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	4
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	sub	eax, 1
	mov	DWORD PTR _month$[ebp], eax
; Line 254
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	6
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _day$[ebp], eax
; Line 255
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	9
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hour$[ebp], eax
; Line 256
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _min$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _sec$[ebp], eax
; Line 259
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@parseDateT
; Line 260
	jmp	SHORT $LN10@parseDateT
$LN5@parseDateT:
; Line 264
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?monthLength@Grego@icu_56@@SACHH@Z	; icu_56::Grego::monthLength
	add	esp, 8
	movsx	edx, al
	mov	DWORD PTR _maxDayOfMonth$37123[ebp], edx
; Line 266
	cmp	DWORD PTR _year$[ebp], 0
	jl	SHORT $LN3@parseDateT
	cmp	DWORD PTR _month$[ebp], 0
	jl	SHORT $LN3@parseDateT
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jg	SHORT $LN3@parseDateT
	cmp	DWORD PTR _day$[ebp], 1
	jl	SHORT $LN3@parseDateT
	mov	eax, DWORD PTR _day$[ebp]
	cmp	eax, DWORD PTR _maxDayOfMonth$37123[ebp]
	jg	SHORT $LN3@parseDateT
	cmp	DWORD PTR _hour$[ebp], 0
	jl	SHORT $LN3@parseDateT
	cmp	DWORD PTR _hour$[ebp], 24		; 00000018H
	jge	SHORT $LN3@parseDateT
	cmp	DWORD PTR _min$[ebp], 0
	jl	SHORT $LN3@parseDateT
	cmp	DWORD PTR _min$[ebp], 60		; 0000003cH
	jge	SHORT $LN3@parseDateT
	cmp	DWORD PTR _sec$[ebp], 0
	jl	SHORT $LN3@parseDateT
	cmp	DWORD PTR _sec$[ebp], 60		; 0000003cH
	jl	SHORT $LN4@parseDateT
$LN3@parseDateT:
; Line 267
	jmp	SHORT $LN10@parseDateT
$LN4@parseDateT:
; Line 270
	mov	BYTE PTR _isValid$[ebp], 1
; Line 271
	xor	eax, eax
	jne	$LN12@parseDateT
$LN10@parseDateT:
; Line 273
	movsx	eax, BYTE PTR _isValid$[ebp]
	test	eax, eax
	jne	SHORT $LN2@parseDateT
; Line 274
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 275
	fldz
	jmp	SHORT $LN14@parseDateT
$LN2@parseDateT:
; Line 278
	mov	eax, DWORD PTR _day$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?fieldsToDay@Grego@icu_56@@SANHHH@Z	; icu_56::Grego::fieldsToDay
	add	esp, 12					; 0000000cH
	fmul	QWORD PTR __real@4194997000000000
	fstp	QWORD PTR _time$[ebp]
; Line 279
	mov	eax, DWORD PTR _hour$[ebp]
	imul	eax, 3600000				; 0036ee80H
	mov	ecx, DWORD PTR _min$[ebp]
	imul	ecx, 60000				; 0000ea60H
	add	eax, ecx
	mov	edx, DWORD PTR _sec$[ebp]
	imul	edx, 1000				; 000003e8H
	add	eax, edx
	mov	DWORD PTR tv233[ebp], eax
	fild	DWORD PTR tv233[ebp]
	fadd	QWORD PTR _time$[ebp]
	fstp	QWORD PTR _time$[ebp]
; Line 280
	movsx	eax, BYTE PTR _isUTC$[ebp]
	test	eax, eax
	jne	SHORT $LN1@parseDateT
; Line 281
	fild	DWORD PTR _offset$[ebp]
	fsubr	QWORD PTR _time$[ebp]
	fstp	QWORD PTR _time$[ebp]
$LN1@parseDateT:
; Line 283
	fld	QWORD PTR _time$[ebp]
$LN14@parseDateT:
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z ENDP ; icu_56::parseDateTimeString
_TEXT	ENDS
PUBLIC	?isLeapYear@Grego@icu_56@@SACH@Z		; icu_56::Grego::isLeapYear
EXTRN	?MONTH_LENGTH@Grego@icu_56@@0QBCB:BYTE		; icu_56::Grego::MONTH_LENGTH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?monthLength@Grego@icu_56@@SACHH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
_month$ = 12						; size = 4
?monthLength@Grego@icu_56@@SACHH@Z PROC			; icu_56::Grego::monthLength, COMDAT
; File d:\mozilla\intl\icu\source\i18n\gregoimp.h
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@Grego@icu_56@@SACH@Z	; icu_56::Grego::isLeapYear
	add	esp, 4
	movsx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _month$[ebp]
	mov	al, BYTE PTR ?MONTH_LENGTH@Grego@icu_56@@0QBCB[edx+ecx]
; Line 266
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?monthLength@Grego@icu_56@@SACHH@Z ENDP			; icu_56::Grego::monthLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isLeapYear@Grego@icu_56@@SACH@Z
_TEXT	SEGMENT
tv70 = -193						; size = 1
_year$ = 8						; size = 4
?isLeapYear@Grego@icu_56@@SACH@Z PROC			; icu_56::Grego::isLeapYear, COMDAT
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 260
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, 3
	jne	SHORT $LN4@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN3@isLeapYear:
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@isLeapYear
$LN4@isLeapYear:
	mov	BYTE PTR tv70[ebp], 0
$LN5@isLeapYear:
	mov	al, BYTE PTR tv70[ebp]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@Grego@icu_56@@SACH@Z ENDP			; icu_56::Grego::isLeapYear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_digit$37030 = -44					; size = 4
_i$37026 = -32						; size = 4
_num$ = -20						; size = 4
_sign$ = -8						; size = 4
_str$ = 8						; size = 4
_start$ = 12						; size = 4
_length$ = 16						; size = 4
_status$ = 20						; size = 4
?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z PROC ; icu_56::parseAsciiDigits, COMDAT
; File d:\mozilla\intl\icu\source\i18n\vtzone.cpp
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 90
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@parseAscii
; Line 91
	xor	eax, eax
	jmp	$LN12@parseAscii
$LN11@parseAscii:
; Line 93
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN9@parseAscii
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _start$[ebp]
	jl	SHORT $LN9@parseAscii
	mov	esi, DWORD PTR _start$[ebp]
	add	esi, DWORD PTR _length$[ebp]
	mov	edi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jle	SHORT $LN10@parseAscii
$LN9@parseAscii:
; Line 94
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 95
	xor	eax, eax
	jmp	$LN12@parseAscii
$LN10@parseAscii:
; Line 97
	mov	DWORD PTR _sign$[ebp], 1
; Line 98
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 43					; 0000002bH
	jne	SHORT $LN8@parseAscii
; Line 99
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 100
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	jmp	SHORT $LN7@parseAscii
$LN8@parseAscii:
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN7@parseAscii
; Line 102
	mov	DWORD PTR _sign$[ebp], -1
; Line 103
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
; Line 104
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
$LN7@parseAscii:
; Line 106
	mov	DWORD PTR _num$[ebp], 0
; Line 107
	mov	DWORD PTR _i$37026[ebp], 0
	jmp	SHORT $LN5@parseAscii
$LN4@parseAscii:
	mov	eax, DWORD PTR _i$37026[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37026[ebp], eax
$LN5@parseAscii:
	mov	eax, DWORD PTR _i$37026[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN3@parseAscii
; Line 108
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _i$37026[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _digit$37030[ebp], ecx
; Line 109
	js	SHORT $LN1@parseAscii
	cmp	DWORD PTR _digit$37030[ebp], 9
	jle	SHORT $LN2@parseAscii
$LN1@parseAscii:
; Line 110
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 111
	xor	eax, eax
	jmp	SHORT $LN12@parseAscii
$LN2@parseAscii:
; Line 113
	mov	eax, DWORD PTR _num$[ebp]
	imul	eax, 10					; 0000000aH
	add	eax, DWORD PTR _digit$37030[ebp]
	mov	DWORD PTR _num$[ebp], eax
; Line 114
	jmp	SHORT $LN4@parseAscii
$LN3@parseAscii:
; Line 115
	mov	eax, DWORD PTR _sign$[ebp]
	imul	eax, DWORD PTR _num$[ebp]
$LN12@parseAscii:
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ENDP ; icu_56::parseAsciiDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?offsetStrToMillis@icu_56@@YAHABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_millis$ = -92						; size = 4
_s$37144 = -80						; size = 2
_length$37142 = -68					; size = 4
_sec$ = -56						; size = 4
_min$ = -44						; size = 4
_hour$ = -32						; size = 4
_sign$ = -20						; size = 4
_isValid$ = -5						; size = 1
_str$ = 8						; size = 4
_status$ = 12						; size = 4
?offsetStrToMillis@icu_56@@YAHABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::offsetStrToMillis, COMDAT
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 290
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@offsetStrT
; Line 291
	xor	eax, eax
	jmp	$LN13@offsetStrT
$LN12@offsetStrT:
; Line 294
	mov	BYTE PTR _isValid$[ebp], 0
; Line 295
	mov	DWORD PTR _sign$[ebp], 0
	mov	DWORD PTR _hour$[ebp], 0
	mov	DWORD PTR _min$[ebp], 0
	mov	DWORD PTR _sec$[ebp], 0
$LN11@offsetStrT:
; Line 298
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$37142[ebp], eax
; Line 299
	cmp	DWORD PTR _length$37142[ebp], 5
	je	SHORT $LN8@offsetStrT
	cmp	DWORD PTR _length$37142[ebp], 7
	je	SHORT $LN8@offsetStrT
; Line 301
	jmp	$LN9@offsetStrT
$LN8@offsetStrT:
; Line 304
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _s$37144[ebp], ax
; Line 305
	movzx	eax, WORD PTR _s$37144[ebp]
	cmp	eax, 43					; 0000002bH
	jne	SHORT $LN7@offsetStrT
; Line 306
	mov	DWORD PTR _sign$[ebp], 1
	jmp	SHORT $LN6@offsetStrT
$LN7@offsetStrT:
; Line 307
	movzx	eax, WORD PTR _s$37144[ebp]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN5@offsetStrT
; Line 308
	mov	DWORD PTR _sign$[ebp], -1
; Line 309
	jmp	SHORT $LN6@offsetStrT
$LN5@offsetStrT:
; Line 311
	jmp	SHORT $LN9@offsetStrT
$LN6@offsetStrT:
; Line 313
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	1
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hour$[ebp], eax
; Line 314
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	3
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _min$[ebp], eax
; Line 315
	cmp	DWORD PTR _length$37142[ebp], 7
	jne	SHORT $LN3@offsetStrT
; Line 316
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	push	5
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _sec$[ebp], eax
$LN3@offsetStrT:
; Line 318
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@offsetStrT
; Line 319
	jmp	SHORT $LN9@offsetStrT
$LN2@offsetStrT:
; Line 321
	mov	BYTE PTR _isValid$[ebp], 1
; Line 322
	xor	eax, eax
	jne	$LN11@offsetStrT
$LN9@offsetStrT:
; Line 324
	movsx	eax, BYTE PTR _isValid$[ebp]
	test	eax, eax
	jne	SHORT $LN1@offsetStrT
; Line 325
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 326
	xor	eax, eax
	jmp	SHORT $LN13@offsetStrT
$LN1@offsetStrT:
; Line 328
	mov	eax, DWORD PTR _hour$[ebp]
	imul	eax, 60					; 0000003cH
	add	eax, DWORD PTR _min$[ebp]
	imul	eax, 60					; 0000003cH
	add	eax, DWORD PTR _sec$[ebp]
	imul	eax, DWORD PTR _sign$[ebp]
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _millis$[ebp], eax
; Line 329
	mov	eax, DWORD PTR _millis$[ebp]
$LN13@offsetStrT:
; Line 330
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?offsetStrToMillis@icu_56@@YAHABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::offsetStrToMillis
_TEXT	ENDS
PUBLIC	??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
;	COMDAT ??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@ DB '(', 00H, 'S'
	DB	00H, 'T', 00H, 'D', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@ DB '(', 00H, 'D'
	DB	00H, 'S', 00H, 'T', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$2
__ehfuncinfo$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z
_TEXT	SEGMENT
tv91 = -360						; size = 4
tv89 = -360						; size = 4
tv130 = -356						; size = 4
tv95 = -356						; size = 4
$T37170 = -348						; size = 64
$T37174 = -276						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_tzid$ = 8						; size = 64
_isDST$ = 72						; size = 1
_zonename$ = 76						; size = 4
?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z PROC ; icu_56::getDefaultTZName, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 360
	mov	esi, esp
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 361
	movsx	eax, BYTE PTR _isDST$[ebp]
	test	eax, eax
	je	SHORT $LN2@getDefault
; Line 362
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@JMMKGNDM@?$AA?$CI?$AAD?$AAS?$AAT?$AA?$CJ?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T37170[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	mov	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T37170[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 363
	jmp	SHORT $LN1@getDefault
$LN2@getDefault:
; Line 364
	mov	esi, esp
	push	-1
	push	OFFSET ??_C@_1M@FAKLPMCP@?$AA?$CI?$AAS?$AAT?$AAD?$AA?$CJ?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T37174[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv91[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	mov	ecx, DWORD PTR _zonename$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR $T37174[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getDefault:
; Line 366
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37170[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37174[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z ENDP ; icu_56::getDefaultTZName
PUBLIC	__real@c384763b62073280
PUBLIC	__$ArrayPad$
EXTRN	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z:PROC ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
EXTRN	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z:PROC ; icu_56::DateTimeRule::DateTimeRule
;	COMDAT __real@c384763b62073280
CONST	SEGMENT
__real@c384763b62073280 DQ 0c384763b62073280r	; -1.84304e+017
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$15
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv353 = -904						; size = 4
tv336 = -904						; size = 4
tv320 = -904						; size = 4
tv305 = -904						; size = 4
tv267 = -904						; size = 4
tv261 = -904						; size = 4
tv175 = -904						; size = 4
tv173 = -904						; size = 4
$T45930 = -896						; size = 4
$T45935 = -884						; size = 4
$T45940 = -872						; size = 4
$T45941 = -860						; size = 4
$T45944 = -848						; size = 4
$T45945 = -836						; size = 4
$T45948 = -824						; size = 4
$T45949 = -812						; size = 4
$T45952 = -800						; size = 4
$T45953 = -788						; size = 4
$T45954 = -776						; size = 4
$T45957 = -764						; size = 4
_endMID$37378 = -560					; size = 4
_endDOY$37377 = -548					; size = 4
_endDOW$37376 = -536					; size = 4
_endDOM$37375 = -524					; size = 4
_endMonth$37374 = -512					; size = 4
_endYear$ = -500					; size = 4
_startMID$ = -488					; size = 4
_startDOY$ = -476					; size = 4
_startDOW$ = -464					; size = 4
_startDOM$ = -452					; size = 4
_startMonth$ = -440					; size = 4
_startYear$ = -428					; size = 4
_diff$37347 = -416					; size = 4
_tmp_daysCount$37334 = -404				; size = 4
_tmp_days$37333 = -392					; size = 28
_tmp_nthDayOfWeek$37332 = -356				; size = 4
_tmp_dayOfWeek$37331 = -344				; size = 4
_tmp_month$37330 = -332					; size = 4
_tmp_until$37329 = -320					; size = 8
_anotherMonth$37324 = -304				; size = 4
_dom$37323 = -292					; size = 4
_earliestDay$37319 = -280				; size = 4
_earliestMonth$37318 = -268				; size = 4
_found$37305 = -253					; size = 1
_firstDay$37296 = -244					; size = 4
_until$ = -232						; size = 8
_daysCount$ = -216					; size = 4
_days$ = -204						; size = 28
_dayOfMonth$ = -168					; size = 4
_nthDayOfWeek$ = -156					; size = 4
_dayOfWeek$ = -144					; size = 4
_month$ = -132						; size = 4
_rrule$ = -120						; size = 64
_adtr$ = -48						; size = 4
_j$ = -36						; size = 4
_i$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_zonename$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
_start$ = 20						; size = 8
_dates$ = 28						; size = 4
_fromOffset$ = 32					; size = 4
_status$ = 36						; size = 4
?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z PROC ; icu_56::createRuleByRRULE, COMDAT
; Line 525
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 892				; 0000037cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-904]
	mov	ecx, 223				; 000000dfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 526
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN73@createRule
; Line 527
	xor	eax, eax
	jmp	$LN74@createRule
$LN73@createRule:
; Line 529
	cmp	DWORD PTR _dates$[ebp], 0
	je	SHORT $LN71@createRule
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN72@createRule
$LN71@createRule:
; Line 530
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 531
	xor	eax, eax
	jmp	$LN74@createRule
$LN72@createRule:
; Line 535
	mov	DWORD PTR _adtr$[ebp], 0
; Line 538
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 539
	mov	DWORD PTR _dayOfMonth$[ebp], 0
; Line 541
	mov	DWORD PTR _daysCount$[ebp], 7
; Line 544
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _until$[ebp]
	push	ecx
	lea	edx, DWORD PTR _daysCount$[ebp]
	push	edx
	lea	eax, DWORD PTR _days$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nthDayOfWeek$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dayOfWeek$[ebp]
	push	edx
	lea	eax, DWORD PTR _month$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rrule$[ebp]
	push	ecx
	call	?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z ; icu_56::parseRRULE
	add	esp, 32					; 00000020H
; Line 545
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN70@createRule
; Line 546
	mov	DWORD PTR $T45930[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45930[ebp]
	jmp	$LN74@createRule
$LN70@createRule:
; Line 549
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN69@createRule
; Line 551
	cmp	DWORD PTR _daysCount$[ebp], 1
	jle	$LN68@createRule
; Line 553
	cmp	DWORD PTR _daysCount$[ebp], 7
	jne	SHORT $LN66@createRule
	cmp	DWORD PTR _month$[ebp], -1
	je	SHORT $LN66@createRule
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	jne	SHORT $LN67@createRule
$LN66@createRule:
; Line 556
	jmp	$unsupportedRRule$37294
$LN67@createRule:
; Line 558
	mov	DWORD PTR _firstDay$37296[ebp], 31	; 0000001fH
; Line 559
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN64@createRule
$LN63@createRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN64@createRule:
	cmp	DWORD PTR _i$[ebp], 7
	jge	SHORT $LN62@createRule
; Line 563
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _days$[ebp+eax*4], 0
	jge	SHORT $LN61@createRule
; Line 564
	mov	eax, DWORD PTR _month$[ebp]
	mov	ecx, DWORD PTR _MONTHLENGTH[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _days$[ebp+edx*4]
	lea	ecx, DWORD PTR [ecx+eax+1]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _days$[ebp+edx*4], ecx
$LN61@createRule:
; Line 566
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _days$[ebp+eax*4]
	cmp	ecx, DWORD PTR _firstDay$37296[ebp]
	jge	SHORT $LN60@createRule
; Line 567
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _days$[ebp+eax*4]
	mov	DWORD PTR _firstDay$37296[ebp], ecx
$LN60@createRule:
; Line 569
	jmp	SHORT $LN63@createRule
$LN62@createRule:
; Line 571
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN59@createRule
$LN58@createRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN59@createRule:
	cmp	DWORD PTR _i$[ebp], 7
	jge	SHORT $LN57@createRule
; Line 572
	mov	BYTE PTR _found$37305[ebp], 0
; Line 573
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN56@createRule
$LN55@createRule:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN56@createRule:
	cmp	DWORD PTR _j$[ebp], 7
	jge	SHORT $LN54@createRule
; Line 574
	mov	eax, DWORD PTR _firstDay$37296[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	DWORD PTR _days$[ebp+ecx*4], eax
	jne	SHORT $LN53@createRule
; Line 575
	mov	BYTE PTR _found$37305[ebp], 1
; Line 576
	jmp	SHORT $LN54@createRule
$LN53@createRule:
; Line 578
	jmp	SHORT $LN55@createRule
$LN54@createRule:
; Line 579
	movsx	eax, BYTE PTR _found$37305[ebp]
	test	eax, eax
	jne	SHORT $LN52@createRule
; Line 581
	jmp	$unsupportedRRule$37294
$LN52@createRule:
; Line 583
	jmp	SHORT $LN58@createRule
$LN57@createRule:
; Line 585
	mov	eax, DWORD PTR _firstDay$37296[ebp]
	mov	DWORD PTR _dayOfMonth$[ebp], eax
$LN68@createRule:
; Line 587
	jmp	$LN50@createRule
$LN69@createRule:
; Line 590
	cmp	DWORD PTR _month$[ebp], -1
	je	SHORT $LN48@createRule
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	je	SHORT $LN48@createRule
	cmp	DWORD PTR _daysCount$[ebp], 0
	jne	SHORT $LN49@createRule
$LN48@createRule:
; Line 592
	jmp	$unsupportedRRule$37294
$LN49@createRule:
; Line 596
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 7
	jle	SHORT $LN46@createRule
; Line 597
	jmp	$unsupportedRRule$37294
$LN46@createRule:
; Line 604
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR _earliestMonth$37318[ebp], eax
; Line 605
	mov	DWORD PTR _earliestDay$37319[ebp], 31	; 0000001fH
; Line 606
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN44@createRule
$LN43@createRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN44@createRule:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _daysCount$[ebp]
	jge	$LN42@createRule
; Line 607
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _days$[ebp+eax*4]
	mov	DWORD PTR _dom$37323[ebp], ecx
; Line 608
	cmp	DWORD PTR _dom$37323[ebp], 0
	jle	SHORT $LN76@createRule
	mov	eax, DWORD PTR _dom$37323[ebp]
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN77@createRule
$LN76@createRule:
	mov	ecx, DWORD PTR _month$[ebp]
	mov	edx, DWORD PTR _MONTHLENGTH[ecx*4]
	mov	eax, DWORD PTR _dom$37323[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	mov	DWORD PTR tv173[ebp], ecx
$LN77@createRule:
	mov	edx, DWORD PTR tv173[ebp]
	mov	DWORD PTR _dom$37323[ebp], edx
; Line 609
	mov	eax, DWORD PTR _dom$37323[ebp]
	cmp	eax, DWORD PTR _earliestDay$37319[ebp]
	jge	SHORT $LN78@createRule
	mov	ecx, DWORD PTR _dom$37323[ebp]
	mov	DWORD PTR tv175[ebp], ecx
	jmp	SHORT $LN79@createRule
$LN78@createRule:
	mov	edx, DWORD PTR _earliestDay$37319[ebp]
	mov	DWORD PTR tv175[ebp], edx
$LN79@createRule:
	mov	eax, DWORD PTR tv175[ebp]
	mov	DWORD PTR _earliestDay$37319[ebp], eax
; Line 610
	jmp	$LN43@createRule
$LN42@createRule:
; Line 612
	mov	DWORD PTR _anotherMonth$37324[ebp], -1
; Line 613
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN41@createRule
$LN40@createRule:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN41@createRule:
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN39@createRule
; Line 614
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 618
	mov	DWORD PTR _tmp_daysCount$37334[ebp], 7
; Line 619
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp_until$37329[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp_daysCount$37334[ebp]
	push	edx
	lea	eax, DWORD PTR _tmp_days$37333[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp_nthDayOfWeek$37332[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmp_dayOfWeek$37331[ebp]
	push	edx
	lea	eax, DWORD PTR _tmp_month$37330[ebp]
	push	eax
	lea	ecx, DWORD PTR _rrule$[ebp]
	push	ecx
	call	?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z ; icu_56::parseRRULE
	add	esp, 32					; 00000020H
; Line 620
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN38@createRule
; Line 621
	mov	DWORD PTR $T45935[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45935[ebp]
	jmp	$LN74@createRule
$LN38@createRule:
; Line 624
	fld	QWORD PTR _until$[ebp]
	fcomp	QWORD PTR _tmp_until$37329[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN37@createRule
; Line 625
	fld	QWORD PTR _tmp_until$37329[ebp]
	fstp	QWORD PTR _until$[ebp]
$LN37@createRule:
; Line 629
	cmp	DWORD PTR _tmp_month$37330[ebp], -1
	je	SHORT $LN35@createRule
	cmp	DWORD PTR _tmp_dayOfWeek$37331[ebp], 0
	je	SHORT $LN35@createRule
	cmp	DWORD PTR _tmp_daysCount$37334[ebp], 0
	jne	SHORT $LN36@createRule
$LN35@createRule:
; Line 630
	jmp	$unsupportedRRule$37294
$LN36@createRule:
; Line 633
	mov	eax, DWORD PTR _daysCount$[ebp]
	add	eax, DWORD PTR _tmp_daysCount$37334[ebp]
	cmp	eax, 7
	jle	SHORT $LN33@createRule
; Line 635
	jmp	$unsupportedRRule$37294
$LN33@createRule:
; Line 639
	mov	eax, DWORD PTR _tmp_dayOfWeek$37331[ebp]
	cmp	eax, DWORD PTR _dayOfWeek$[ebp]
	je	SHORT $LN31@createRule
; Line 640
	jmp	$unsupportedRRule$37294
$LN31@createRule:
; Line 643
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	cmp	eax, DWORD PTR _month$[ebp]
	je	$LN19@createRule
; Line 644
	cmp	DWORD PTR _anotherMonth$37324[ebp], -1
	jne	SHORT $LN28@createRule
; Line 645
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	sub	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR _diff$37347[ebp], eax
; Line 646
	cmp	DWORD PTR _diff$37347[ebp], -11		; fffffff5H
	je	SHORT $LN26@createRule
	cmp	DWORD PTR _diff$37347[ebp], -1
	jne	SHORT $LN27@createRule
$LN26@createRule:
; Line 648
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	mov	DWORD PTR _anotherMonth$37324[ebp], eax
; Line 649
	mov	eax, DWORD PTR _anotherMonth$37324[ebp]
	mov	DWORD PTR _earliestMonth$37318[ebp], eax
; Line 651
	mov	DWORD PTR _earliestDay$37319[ebp], 31	; 0000001fH
	jmp	SHORT $LN22@createRule
$LN27@createRule:
; Line 652
	cmp	DWORD PTR _diff$37347[ebp], 11		; 0000000bH
	je	SHORT $LN23@createRule
	cmp	DWORD PTR _diff$37347[ebp], 1
	jne	SHORT $LN24@createRule
$LN23@createRule:
; Line 654
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	mov	DWORD PTR _anotherMonth$37324[ebp], eax
; Line 655
	jmp	SHORT $LN22@createRule
$LN24@createRule:
; Line 657
	jmp	$unsupportedRRule$37294
$LN22@createRule:
; Line 658
	jmp	SHORT $LN19@createRule
$LN28@createRule:
; Line 659
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	cmp	eax, DWORD PTR _month$[ebp]
	je	SHORT $LN19@createRule
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	cmp	eax, DWORD PTR _anotherMonth$37324[ebp]
	je	SHORT $LN19@createRule
; Line 661
	jmp	$unsupportedRRule$37294
$LN19@createRule:
; Line 665
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	cmp	eax, DWORD PTR _earliestMonth$37318[ebp]
	jne	$LN14@createRule
; Line 666
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN16@createRule
$LN15@createRule:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN16@createRule:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _tmp_daysCount$37334[ebp]
	jge	$LN14@createRule
; Line 667
	mov	eax, DWORD PTR _j$[ebp]
	cmp	DWORD PTR _tmp_days$37333[ebp+eax*4], 0
	jle	SHORT $LN80@createRule
	mov	ecx, DWORD PTR _j$[ebp]
	mov	edx, DWORD PTR _tmp_days$37333[ebp+ecx*4]
	mov	DWORD PTR tv261[ebp], edx
	jmp	SHORT $LN81@createRule
$LN80@createRule:
	mov	eax, DWORD PTR _tmp_month$37330[ebp]
	mov	ecx, DWORD PTR _MONTHLENGTH[eax*4]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _tmp_days$37333[ebp+edx*4]
	lea	ecx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR tv261[ebp], ecx
$LN81@createRule:
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR tv261[ebp]
	mov	DWORD PTR _tmp_days$37333[ebp+edx*4], eax
; Line 668
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _tmp_days$37333[ebp+eax*4]
	cmp	ecx, DWORD PTR _earliestDay$37319[ebp]
	jge	SHORT $LN82@createRule
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _tmp_days$37333[ebp+edx*4]
	mov	DWORD PTR tv267[ebp], eax
	jmp	SHORT $LN83@createRule
$LN82@createRule:
	mov	ecx, DWORD PTR _earliestDay$37319[ebp]
	mov	DWORD PTR tv267[ebp], ecx
$LN83@createRule:
	mov	edx, DWORD PTR tv267[ebp]
	mov	DWORD PTR _earliestDay$37319[ebp], edx
; Line 669
	jmp	$LN15@createRule
$LN14@createRule:
; Line 671
	mov	eax, DWORD PTR _daysCount$[ebp]
	add	eax, DWORD PTR _tmp_daysCount$37334[ebp]
	mov	DWORD PTR _daysCount$[ebp], eax
; Line 672
	jmp	$LN40@createRule
$LN39@createRule:
; Line 673
	cmp	DWORD PTR _daysCount$[ebp], 7
	je	SHORT $LN13@createRule
; Line 675
	jmp	$unsupportedRRule$37294
$LN13@createRule:
; Line 677
	mov	eax, DWORD PTR _earliestMonth$37318[ebp]
	mov	DWORD PTR _month$[ebp], eax
; Line 678
	mov	eax, DWORD PTR _earliestDay$37319[ebp]
	mov	DWORD PTR _dayOfMonth$[ebp], eax
$LN50@createRule:
; Line 684
	lea	eax, DWORD PTR _startMID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _startDOY$[ebp]
	push	ecx
	lea	edx, DWORD PTR _startDOW$[ebp]
	push	edx
	lea	eax, DWORD PTR _startDOM$[ebp]
	push	eax
	lea	ecx, DWORD PTR _startMonth$[ebp]
	push	ecx
	lea	edx, DWORD PTR _startYear$[ebp]
	push	edx
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _start$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 685
	cmp	DWORD PTR _month$[ebp], -1
	jne	SHORT $LN11@createRule
; Line 687
	mov	eax, DWORD PTR _startMonth$[ebp]
	mov	DWORD PTR _month$[ebp], eax
$LN11@createRule:
; Line 689
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	jne	SHORT $LN10@createRule
	cmp	DWORD PTR _nthDayOfWeek$[ebp], 0
	jne	SHORT $LN10@createRule
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	jne	SHORT $LN10@createRule
; Line 691
	mov	eax, DWORD PTR _startDOM$[ebp]
	mov	DWORD PTR _dayOfMonth$[ebp], eax
$LN10@createRule:
; Line 695
	fld	QWORD PTR _until$[ebp]
	fld	QWORD PTR __real@c384763b62073280
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN9@createRule
; Line 697
	lea	eax, DWORD PTR _endMID$37378[ebp]
	push	eax
	lea	ecx, DWORD PTR _endDOY$37377[ebp]
	push	ecx
	lea	edx, DWORD PTR _endDOW$37376[ebp]
	push	edx
	lea	eax, DWORD PTR _endDOM$37375[ebp]
	push	eax
	lea	ecx, DWORD PTR _endMonth$37374[ebp]
	push	ecx
	lea	edx, DWORD PTR _endYear$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _until$[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 698
	jmp	SHORT $LN8@createRule
$LN9@createRule:
; Line 699
	mov	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	mov	DWORD PTR _endYear$[ebp], eax
$LN8@createRule:
; Line 703
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	jne	$LN7@createRule
	cmp	DWORD PTR _nthDayOfWeek$[ebp], 0
	jne	$LN7@createRule
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	je	SHORT $LN7@createRule
; Line 705
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45941[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T45941[ebp], 0
	je	SHORT $LN84@createRule
	push	0
	mov	eax, DWORD PTR _startMID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T45941[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv305[ebp], eax
	jmp	SHORT $LN85@createRule
$LN84@createRule:
	mov	DWORD PTR tv305[ebp], 0
$LN85@createRule:
	mov	eax, DWORD PTR tv305[ebp]
	mov	DWORD PTR $T45940[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T45940[ebp]
	mov	DWORD PTR _adtr$[ebp], ecx
	jmp	$LN3@createRule
$LN7@createRule:
; Line 706
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	je	$LN5@createRule
	cmp	DWORD PTR _nthDayOfWeek$[ebp], 0
	je	$LN5@createRule
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	jne	$LN5@createRule
; Line 708
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45945[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T45945[ebp], 0
	je	SHORT $LN86@createRule
	push	0
	mov	eax, DWORD PTR _startMID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nthDayOfWeek$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45945[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv320[ebp], eax
	jmp	SHORT $LN87@createRule
$LN86@createRule:
	mov	DWORD PTR tv320[ebp], 0
$LN87@createRule:
	mov	ecx, DWORD PTR tv320[ebp]
	mov	DWORD PTR $T45944[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T45944[ebp]
	mov	DWORD PTR _adtr$[ebp], edx
	jmp	$LN3@createRule
$LN5@createRule:
; Line 709
	cmp	DWORD PTR _dayOfWeek$[ebp], 0
	je	$LN3@createRule
	cmp	DWORD PTR _nthDayOfWeek$[ebp], 0
	jne	$LN3@createRule
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	je	SHORT $LN3@createRule
; Line 712
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T45949[ebp], 0
	je	SHORT $LN88@createRule
	push	0
	mov	eax, DWORD PTR _startMID$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T45949[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv336[ebp], eax
	jmp	SHORT $LN89@createRule
$LN88@createRule:
	mov	DWORD PTR tv336[ebp], 0
$LN89@createRule:
	mov	ecx, DWORD PTR tv336[ebp]
	mov	DWORD PTR $T45948[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T45948[ebp]
	mov	DWORD PTR _adtr$[ebp], edx
$LN3@createRule:
; Line 714
	cmp	DWORD PTR _adtr$[ebp], 0
	jne	SHORT $LN2@createRule
; Line 715
	jmp	$unsupportedRRule$37294
$LN2@createRule:
; Line 717
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T45954[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T45954[ebp], 0
	je	SHORT $LN90@createRule
	mov	eax, DWORD PTR _endYear$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startYear$[ebp]
	push	ecx
	mov	edx, DWORD PTR _adtr$[ebp]
	push	edx
	mov	eax, DWORD PTR _dstSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rawOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zonename$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T45954[ebp]
	call	??0AnnualTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPAVDateTimeRule@1@HH@Z ; icu_56::AnnualTimeZoneRule::AnnualTimeZoneRule
	mov	DWORD PTR tv353[ebp], eax
	jmp	SHORT $LN91@createRule
$LN90@createRule:
	mov	DWORD PTR tv353[ebp], 0
$LN91@createRule:
	mov	eax, DWORD PTR tv353[ebp]
	mov	DWORD PTR $T45953[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T45953[ebp]
	mov	DWORD PTR $T45952[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45952[ebp]
	jmp	SHORT $LN74@createRule
$unsupportedRRule$37294:
; Line 720
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 27			; 0000001bH
; Line 721
	mov	DWORD PTR $T45957[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45957[ebp]
$LN74@createRule:
; Line 722
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN124@createRule
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 904				; 00000388H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN124@createRule:
	DD	25					; 00000019H
	DD	$LN123@createRule
$LN123@createRule:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN97@createRule
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN98@createRule
	DD	-144					; ffffff70H
	DD	4
	DD	$LN99@createRule
	DD	-156					; ffffff64H
	DD	4
	DD	$LN100@createRule
	DD	-204					; ffffff34H
	DD	28					; 0000001cH
	DD	$LN101@createRule
	DD	-216					; ffffff28H
	DD	4
	DD	$LN102@createRule
	DD	-232					; ffffff18H
	DD	8
	DD	$LN103@createRule
	DD	-320					; fffffec0H
	DD	8
	DD	$LN104@createRule
	DD	-332					; fffffeb4H
	DD	4
	DD	$LN105@createRule
	DD	-344					; fffffea8H
	DD	4
	DD	$LN106@createRule
	DD	-356					; fffffe9cH
	DD	4
	DD	$LN107@createRule
	DD	-392					; fffffe78H
	DD	28					; 0000001cH
	DD	$LN108@createRule
	DD	-404					; fffffe6cH
	DD	4
	DD	$LN109@createRule
	DD	-428					; fffffe54H
	DD	4
	DD	$LN110@createRule
	DD	-440					; fffffe48H
	DD	4
	DD	$LN111@createRule
	DD	-452					; fffffe3cH
	DD	4
	DD	$LN112@createRule
	DD	-464					; fffffe30H
	DD	4
	DD	$LN113@createRule
	DD	-476					; fffffe24H
	DD	4
	DD	$LN114@createRule
	DD	-488					; fffffe18H
	DD	4
	DD	$LN115@createRule
	DD	-500					; fffffe0cH
	DD	4
	DD	$LN116@createRule
	DD	-512					; fffffe00H
	DD	4
	DD	$LN117@createRule
	DD	-524					; fffffdf4H
	DD	4
	DD	$LN118@createRule
	DD	-536					; fffffde8H
	DD	4
	DD	$LN119@createRule
	DD	-548					; fffffddcH
	DD	4
	DD	$LN120@createRule
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN121@createRule
$LN121@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	77					; 0000004dH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN120@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	89					; 00000059H
	DB	0
$LN119@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	87					; 00000057H
	DB	0
$LN118@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	77					; 0000004dH
	DB	0
$LN117@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN116@createRule:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	89					; 00000059H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN115@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN114@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	89					; 00000059H
	DB	0
$LN113@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	87					; 00000057H
	DB	0
$LN112@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	79					; 0000004fH
	DB	77					; 0000004dH
	DB	0
$LN111@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN110@createRule:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	89					; 00000059H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN109@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN108@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	0
$LN107@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	0
$LN106@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	0
$LN105@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN104@createRule:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	95					; 0000005fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	0
$LN103@createRule:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	0
$LN102@createRule:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN101@createRule:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	0
$LN100@createRule:
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	0
$LN99@createRule:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	107					; 0000006bH
	DB	0
$LN98@createRule:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN97@createRule:
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	mov	eax, DWORD PTR $T45941[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$13:
	mov	esi, esp
	mov	eax, DWORD PTR $T45945[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$14:
	mov	esi, esp
	mov	eax, DWORD PTR $T45949[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$15:
	mov	esi, esp
	mov	eax, DWORD PTR $T45954[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-908]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createRuleByRRULE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z ENDP ; icu_56::createRuleByRRULE
PUBLIC	__$ArrayPad$
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$14
__ehfuncinfo$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_nextDOM$37251 = -393					; size = 1
_dom_end$37250 = -384					; size = 4
_dom_start$37249 = -372					; size = 4
_dom_idx$37248 = -360					; size = 4
_wday$37238 = -348					; size = 4
_n$37234 = -336						; size = 4
_sign$37227 = -324					; size = 4
_length$37222 = -312					; size = 4
_eql$37200 = -300					; size = 4
_nextProp$ = -285					; size = 1
_value$ = -276						; size = 64
_attr$ = -204						; size = 64
_prop$ = -132						; size = 64
_prop_end$ = -60					; size = 4
_prop_start$ = -48					; size = 4
_yearly$ = -33						; size = 1
_numDom$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rrule$ = 8						; size = 4
_month$ = 12						; size = 4
_dow$ = 16						; size = 4
_wim$ = 20						; size = 4
_dom$ = 24						; size = 4
_domCount$ = 28						; size = 4
_until$ = 32						; size = 4
_status$ = 36						; size = 4
?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z PROC ; icu_56::parseRRULE, COMDAT
; Line 381
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 580				; 00000244H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-592]
	mov	ecx, 145				; 00000091H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 382
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN58@parseRRULE
; Line 383
	jmp	$LN59@parseRRULE
$LN58@parseRRULE:
; Line 385
	mov	DWORD PTR _numDom$[ebp], 0
; Line 387
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR [eax], -1
; Line 388
	mov	eax, DWORD PTR _dow$[ebp]
	mov	DWORD PTR [eax], 0
; Line 389
	mov	eax, DWORD PTR _wim$[ebp]
	mov	DWORD PTR [eax], 0
; Line 390
	mov	eax, DWORD PTR _until$[ebp]
	fld	QWORD PTR __real@c384763b62073280
	fstp	QWORD PTR [eax]
; Line 392
	mov	BYTE PTR _yearly$[ebp], 0
; Line 395
	mov	DWORD PTR _prop_start$[ebp], 0
; Line 397
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 398
	mov	BYTE PTR _nextProp$[ebp], 1
$LN57@parseRRULE:
; Line 400
	movsx	eax, BYTE PTR _nextProp$[ebp]
	test	eax, eax
	je	$LN56@parseRRULE
; Line 401
	mov	esi, esp
	mov	eax, DWORD PTR _prop_start$[ebp]
	push	eax
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _rrule$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _prop_end$[ebp], eax
; Line 402
	cmp	DWORD PTR _prop_end$[ebp], -1
	jne	SHORT $LN55@parseRRULE
; Line 403
	mov	esi, esp
	mov	eax, DWORD PTR _prop_start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rrule$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 404
	mov	BYTE PTR _nextProp$[ebp], 0
; Line 405
	jmp	SHORT $LN54@parseRRULE
$LN55@parseRRULE:
; Line 406
	mov	eax, DWORD PTR _prop_end$[ebp]
	sub	eax, DWORD PTR _prop_start$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _prop_start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rrule$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 407
	mov	eax, DWORD PTR _prop_end$[ebp]
	add	eax, 1
	mov	DWORD PTR _prop_start$[ebp], eax
$LN54@parseRRULE:
; Line 409
	mov	esi, esp
	push	61					; 0000003dH
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _eql$37200[ebp], eax
; Line 410
	cmp	DWORD PTR _eql$37200[ebp], -1
	je	SHORT $LN53@parseRRULE
; Line 411
	mov	esi, esp
	mov	eax, DWORD PTR _eql$37200[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 412
	mov	eax, DWORD PTR _eql$37200[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 413
	jmp	SHORT $LN52@parseRRULE
$LN53@parseRRULE:
; Line 414
	jmp	$rruleParseError$37203
$LN52@parseRRULE:
; Line 417
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_FREQ
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN50@parseRRULE
; Line 419
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_YEARLY
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN49@parseRRULE
; Line 420
	mov	BYTE PTR _yearly$[ebp], 1
; Line 421
	jmp	SHORT $LN48@parseRRULE
$LN49@parseRRULE:
; Line 422
	jmp	$rruleParseError$37203
$LN48@parseRRULE:
; Line 423
	jmp	$LN12@parseRRULE
$LN50@parseRRULE:
; Line 424
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_UNTIL
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN45@parseRRULE
; Line 426
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::parseDateTimeString
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _until$[ebp]
	fstp	QWORD PTR [edx]
; Line 427
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@parseRRULE
; Line 428
	jmp	$rruleParseError$37203
$LN44@parseRRULE:
; Line 429
	jmp	$LN12@parseRRULE
$LN45@parseRRULE:
; Line 430
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BYMONTH
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN41@parseRRULE
; Line 433
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 2
	jle	SHORT $LN40@parseRRULE
; Line 434
	jmp	$rruleParseError$37203
$LN40@parseRRULE:
; Line 436
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	sub	eax, 1
	mov	edx, DWORD PTR _month$[ebp]
	mov	DWORD PTR [edx], eax
; Line 437
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN37@parseRRULE
	mov	eax, DWORD PTR _month$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN37@parseRRULE
	mov	eax, DWORD PTR _month$[ebp]
	cmp	DWORD PTR [eax], 12			; 0000000cH
	jl	SHORT $LN38@parseRRULE
$LN37@parseRRULE:
; Line 438
	jmp	$rruleParseError$37203
$LN38@parseRRULE:
; Line 439
	jmp	$LN12@parseRRULE
$LN41@parseRRULE:
; Line 440
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BYDAY
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN34@parseRRULE
; Line 446
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$37222[ebp], eax
; Line 447
	cmp	DWORD PTR _length$37222[ebp], 2
	jl	SHORT $LN32@parseRRULE
	cmp	DWORD PTR _length$37222[ebp], 4
	jle	SHORT $LN33@parseRRULE
$LN32@parseRRULE:
; Line 448
	jmp	$rruleParseError$37203
$LN33@parseRRULE:
; Line 450
	cmp	DWORD PTR _length$37222[ebp], 2
	jle	$LN30@parseRRULE
; Line 452
	mov	DWORD PTR _sign$37227[ebp], 1
; Line 453
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 43					; 0000002bH
	jne	SHORT $LN29@parseRRULE
; Line 454
	mov	DWORD PTR _sign$37227[ebp], 1
	jmp	SHORT $LN25@parseRRULE
$LN29@parseRRULE:
; Line 455
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN27@parseRRULE
; Line 456
	mov	DWORD PTR _sign$37227[ebp], -1
	jmp	SHORT $LN25@parseRRULE
$LN27@parseRRULE:
; Line 457
	cmp	DWORD PTR _length$37222[ebp], 4
	jne	SHORT $LN25@parseRRULE
; Line 458
	jmp	$rruleParseError$37203
$LN25@parseRRULE:
; Line 460
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _length$37222[ebp]
	sub	ecx, 3
	push	ecx
	lea	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	DWORD PTR _n$37234[ebp], eax
; Line 461
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN22@parseRRULE
	cmp	DWORD PTR _n$37234[ebp], 0
	je	SHORT $LN22@parseRRULE
	cmp	DWORD PTR _n$37234[ebp], 4
	jle	SHORT $LN23@parseRRULE
$LN22@parseRRULE:
; Line 462
	jmp	$rruleParseError$37203
$LN23@parseRRULE:
; Line 464
	mov	eax, DWORD PTR _n$37234[ebp]
	imul	eax, DWORD PTR _sign$37227[ebp]
	mov	ecx, DWORD PTR _wim$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 465
	mov	eax, DWORD PTR _length$37222[ebp]
	sub	eax, 2
	mov	esi, esp
	push	eax
	push	0
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@parseRRULE:
; Line 468
	mov	DWORD PTR _wday$37238[ebp], 0
	jmp	SHORT $LN20@parseRRULE
$LN19@parseRRULE:
	mov	eax, DWORD PTR _wday$37238[ebp]
	add	eax, 1
	mov	DWORD PTR _wday$37238[ebp], eax
$LN20@parseRRULE:
	cmp	DWORD PTR _wday$37238[ebp], 7
	jge	SHORT $LN18@parseRRULE
; Line 469
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _wday$37238[ebp]
	imul	eax, 6
	add	eax, OFFSET _ICAL_DOW_NAMES
	push	eax
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@parseRRULE
; Line 470
	jmp	SHORT $LN18@parseRRULE
$LN17@parseRRULE:
; Line 472
	jmp	SHORT $LN19@parseRRULE
$LN18@parseRRULE:
; Line 473
	cmp	DWORD PTR _wday$37238[ebp], 7
	jge	SHORT $LN16@parseRRULE
; Line 475
	mov	eax, DWORD PTR _wday$37238[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _dow$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 476
	jmp	SHORT $LN15@parseRRULE
$LN16@parseRRULE:
; Line 477
	jmp	$rruleParseError$37203
$LN15@parseRRULE:
; Line 478
	jmp	$LN12@parseRRULE
$LN34@parseRRULE:
; Line 479
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_BYMONTHDAY
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	$LN12@parseRRULE
; Line 484
	mov	DWORD PTR _dom_idx$37248[ebp], 0
; Line 485
	mov	DWORD PTR _dom_start$37249[ebp], 0
; Line 487
	mov	BYTE PTR _nextDOM$37251[ebp], 1
$LN11@parseRRULE:
; Line 488
	movsx	eax, BYTE PTR _nextDOM$37251[ebp]
	test	eax, eax
	je	$LN10@parseRRULE
; Line 489
	mov	esi, esp
	mov	eax, DWORD PTR _dom_start$37249[ebp]
	push	eax
	push	44					; 0000002cH
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dom_end$37250[ebp], eax
; Line 490
	cmp	DWORD PTR _dom_end$37250[ebp], -1
	jne	SHORT $LN9@parseRRULE
; Line 491
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dom_end$37250[ebp], eax
; Line 492
	mov	BYTE PTR _nextDOM$37251[ebp], 0
$LN9@parseRRULE:
; Line 494
	mov	eax, DWORD PTR _domCount$[ebp]
	mov	ecx, DWORD PTR _dom_idx$37248[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN8@parseRRULE
; Line 495
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dom_end$37250[ebp]
	sub	ecx, DWORD PTR _dom_start$37249[ebp]
	push	ecx
	mov	edx, DWORD PTR _dom_start$37249[ebp]
	push	edx
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?parseAsciiDigits@icu_56@@YAHABVUnicodeString@1@HHAAW4UErrorCode@@@Z ; icu_56::parseAsciiDigits
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _dom_idx$37248[ebp]
	mov	edx, DWORD PTR _dom$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 496
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseRRULE
; Line 497
	jmp	$rruleParseError$37203
$LN7@parseRRULE:
; Line 499
	mov	eax, DWORD PTR _dom_idx$37248[ebp]
	add	eax, 1
	mov	DWORD PTR _dom_idx$37248[ebp], eax
; Line 500
	jmp	SHORT $LN5@parseRRULE
$LN8@parseRRULE:
; Line 501
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 502
	jmp	$rruleParseError$37203
$LN5@parseRRULE:
; Line 504
	mov	eax, DWORD PTR _dom_end$37250[ebp]
	add	eax, 1
	mov	DWORD PTR _dom_start$37249[ebp], eax
; Line 505
	jmp	$LN11@parseRRULE
$LN10@parseRRULE:
; Line 506
	mov	eax, DWORD PTR _dom_idx$37248[ebp]
	mov	DWORD PTR _numDom$[ebp], eax
$LN12@parseRRULE:
; Line 508
	jmp	$LN57@parseRRULE
$LN56@parseRRULE:
; Line 509
	movsx	eax, BYTE PTR _yearly$[ebp]
	test	eax, eax
	jne	SHORT $LN3@parseRRULE
; Line 511
	jmp	SHORT $rruleParseError$37203
$LN3@parseRRULE:
; Line 514
	mov	eax, DWORD PTR _domCount$[ebp]
	mov	ecx, DWORD PTR _numDom$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 515
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN59@parseRRULE
$rruleParseError$37203:
; Line 518
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseRRULE
; Line 520
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@parseRRULE:
; Line 522
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN59@parseRRULE:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN69@parseRRULE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 592				; 00000250H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN69@parseRRULE:
	DD	3
	DD	$LN68@parseRRULE
$LN68@parseRRULE:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN64@parseRRULE
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN65@parseRRULE
	DD	-276					; fffffeecH
	DD	64					; 00000040H
	DD	$LN66@parseRRULE
$LN66@parseRRULE:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN65@parseRRULE:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN64@parseRRULE:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR _attr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseRRULE@icu_56@@YAXABVUnicodeString@1@AAH11PAH1AANAAW4UErrorCode@@@Z ENDP ; icu_56::parseRRULE
EXTRN	_uprv_free_56:PROC
EXTRN	_uprv_malloc_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$1
__ehfuncinfo$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv152 = -316						; size = 4
tv85 = -316						; size = 4
$T46017 = -308						; size = 4
$T46018 = -296						; size = 4
$T46021 = -284						; size = 4
$T46022 = -272						; size = 4
_datestr$37432 = -68					; size = 4
_i$37428 = -56						; size = 4
_times$37424 = -44					; size = 4
_size$37423 = -32					; size = 4
_retVal$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_zonename$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
_start$ = 20						; size = 8
_dates$ = 28						; size = 4
_fromOffset$ = 32					; size = 4
_status$ = 36						; size = 4
?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z PROC ; icu_56::createRuleByRDATE, COMDAT
; Line 728
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 729
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@createRule@2
; Line 730
	xor	eax, eax
	jmp	$LN10@createRule@2
$LN9@createRule@2:
; Line 732
	mov	DWORD PTR _retVal$[ebp], 0
; Line 733
	cmp	DWORD PTR _dates$[ebp], 0
	je	SHORT $LN7@createRule@2
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@createRule@2
$LN7@createRule@2:
; Line 737
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46018[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46018[ebp], 0
	je	SHORT $LN12@createRule@2
	push	2
	push	1
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46018[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN13@createRule@2
$LN12@createRule@2:
	mov	DWORD PTR tv85[ebp], 0
$LN13@createRule@2:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T46017[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T46017[ebp]
	mov	DWORD PTR _retVal$[ebp], edx
; Line 738
	jmp	$LN6@createRule@2
$LN8@createRule@2:
; Line 740
	mov	esi, esp
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$37423[ebp], eax
; Line 741
	mov	eax, DWORD PTR _size$37423[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _times$37424[ebp], eax
; Line 742
	cmp	DWORD PTR _times$37424[ebp], 0
	jne	SHORT $LN5@createRule@2
; Line 743
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 744
	xor	eax, eax
	jmp	$LN10@createRule@2
$LN5@createRule@2:
; Line 746
	mov	DWORD PTR _i$37428[ebp], 0
	jmp	SHORT $LN4@createRule@2
$LN3@createRule@2:
	mov	eax, DWORD PTR _i$37428[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37428[ebp], eax
$LN4@createRule@2:
	mov	eax, DWORD PTR _i$37428[ebp]
	cmp	eax, DWORD PTR _size$37423[ebp]
	jge	SHORT $LN2@createRule@2
; Line 747
	mov	esi, esp
	mov	eax, DWORD PTR _i$37428[ebp]
	push	eax
	mov	ecx, DWORD PTR _dates$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _datestr$37432[ebp], eax
; Line 748
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _datestr$37432[ebp]
	push	edx
	call	?parseDateTimeString@icu_56@@YANABVUnicodeString@1@HAAW4UErrorCode@@@Z ; icu_56::parseDateTimeString
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _i$37428[ebp]
	mov	ecx, DWORD PTR _times$37424[ebp]
	fstp	QWORD PTR [ecx+eax*8]
; Line 749
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@createRule@2
; Line 750
	mov	eax, DWORD PTR _times$37424[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 751
	xor	eax, eax
	jmp	$LN10@createRule@2
$LN1@createRule@2:
; Line 753
	jmp	SHORT $LN3@createRule@2
$LN2@createRule@2:
; Line 755
	mov	esi, esp
	push	344					; 00000158H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46022[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46022[ebp], 0
	je	SHORT $LN14@createRule@2
	push	2
	mov	eax, DWORD PTR _size$37423[ebp]
	push	eax
	mov	ecx, DWORD PTR _times$37424[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _rawOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _zonename$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T46022[ebp]
	call	??0TimeArrayTimeZoneRule@icu_56@@QAE@ABVUnicodeString@1@HHPBNHW4TimeRuleType@DateTimeRule@1@@Z ; icu_56::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN15@createRule@2
$LN14@createRule@2:
	mov	DWORD PTR tv152[ebp], 0
$LN15@createRule@2:
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T46021[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T46021[ebp]
	mov	DWORD PTR _retVal$[ebp], eax
; Line 756
	mov	eax, DWORD PTR _times$37424[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN6@createRule@2:
; Line 758
	mov	eax, DWORD PTR _retVal$[ebp]
$LN10@createRule@2:
; Line 759
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46018[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T46022[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createRuleByRDATE@icu_56@@YAPAVTimeZoneRule@1@ABVUnicodeString@1@HHNPAVUVector@1@HAAW4UErrorCode@@@Z ENDP ; icu_56::createRuleByRDATE
PUBLIC	?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZone
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_W@Z:PROC
EXTRN	_u_strlen_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv244 = -464						; size = 4
tv227 = -464						; size = 4
tv216 = -464						; size = 4
tv188 = -464						; size = 4
tv175 = -464						; size = 4
$T46036 = -456						; size = 4
$T46037 = -444						; size = 4
$T46040 = -432						; size = 4
$T46041 = -420						; size = 4
$T46044 = -408						; size = 4
$T46045 = -396						; size = 4
$T46048 = -384						; size = 4
$T46049 = -372						; size = 4
$T46052 = -360						; size = 4
$T46053 = -348						; size = 4
_icutzprop$38173 = -144					; size = 4
_customProps$38166 = -132				; size = 4
_utcString$38163 = -120					; size = 64
_line$38158 = -48					; size = 4
_i$38154 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_status$ = 12						; size = 4
?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::write, COMDAT
; _this$ = ecx
; Line 1725
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-464]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1726
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	$LN12@write@3
; Line 1727
	mov	DWORD PTR _i$38154[ebp], 0
	jmp	SHORT $LN11@write@3
$LN10@write@3:
	mov	eax, DWORD PTR _i$38154[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38154[ebp], eax
$LN11@write@3:
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$38154[ebp], eax
	jge	$LN9@write@3
; Line 1728
	mov	esi, esp
	mov	eax, DWORD PTR _i$38154[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+72]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _line$38158[ebp], eax
; Line 1730
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_TZURL
	mov	ecx, DWORD PTR _line$38158[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN8@write@3
	push	OFFSET _ICAL_TZURL
	call	_u_strlen_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _line$38158[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN8@write@3
; Line 1731
	push	OFFSET _ICAL_TZURL
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 1732
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 1733
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 1734
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 1735
	jmp	$LN5@write@3
$LN8@write@3:
; Line 1736
	mov	esi, esp
	push	-1
	push	OFFSET _ICAL_LASTMOD
	mov	ecx, DWORD PTR _line$38158[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN6@write@3
	push	OFFSET _ICAL_LASTMOD
	call	_u_strlen_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _line$38158[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN6@write@3
; Line 1737
	mov	esi, esp
	lea	ecx, DWORD PTR _utcString$38163[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1738
	push	OFFSET _ICAL_LASTMOD
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 1739
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 1740
	lea	eax, DWORD PTR _utcString$38163[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [ecx+144]
	fstp	QWORD PTR [esp]
	call	?getUTCDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getUTCDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 1741
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 1742
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _utcString$38163[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@write@3
$LN6@write@3:
; Line 1743
	mov	eax, DWORD PTR _line$38158[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 1744
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN5@write@3:
; Line 1746
	jmp	$LN10@write@3
$LN9@write@3:
	jmp	$LN24@write@3
$LN12@write@3:
; Line 1748
	mov	DWORD PTR _customProps$38166[ebp], 0
; Line 1749
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN1@write@3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN1@write@3
; Line 1750
	mov	esi, esp
	push	24					; 00000018H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46037[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46037[ebp], 0
	je	SHORT $LN15@write@3
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	mov	ecx, DWORD PTR $T46037[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T46037[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_SUVector@icu_56@@6B@
	mov	edx, DWORD PTR $T46037[ebp]
	mov	DWORD PTR tv175[ebp], edx
	jmp	SHORT $LN16@write@3
$LN15@write@3:
	mov	DWORD PTR tv175[ebp], 0
$LN16@write@3:
	mov	eax, DWORD PTR tv175[ebp]
	mov	DWORD PTR $T46036[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46036[ebp]
	mov	DWORD PTR _customProps$38166[ebp], ecx
; Line 1751
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@write@3
; Line 1752
	jmp	$LN13@write@3
$LN2@write@3:
; Line 1754
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46041[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T46041[ebp], 0
	je	SHORT $LN17@write@3
	mov	esi, esp
	push	OFFSET _ICU_TZINFO_PROP
	mov	ecx, DWORD PTR $T46041[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46041[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T46041[ebp]
	mov	DWORD PTR tv188[ebp], ecx
	jmp	SHORT $LN18@write@3
$LN17@write@3:
	mov	DWORD PTR tv188[ebp], 0
$LN18@write@3:
	mov	edx, DWORD PTR tv188[ebp]
	mov	DWORD PTR $T46040[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T46040[ebp]
	mov	DWORD PTR _icutzprop$38173[ebp], eax
; Line 1755
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38173[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1756
	mov	esi, esp
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _icutzprop$38173[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1757
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38173[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1758
	mov	esi, esp
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _icutzprop$38173[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1759
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38173[ebp]
	push	ecx
	mov	ecx, DWORD PTR _customProps$38166[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1760
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@write@3
; Line 1761
	mov	eax, DWORD PTR _icutzprop$38173[ebp]
	mov	DWORD PTR $T46045[ebp], eax
	mov	ecx, DWORD PTR $T46045[ebp]
	mov	DWORD PTR $T46044[ebp], ecx
	cmp	DWORD PTR $T46044[ebp], 0
	je	SHORT $LN19@write@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46044[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46044[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv216[ebp], eax
	jmp	SHORT $LN20@write@3
$LN19@write@3:
	mov	DWORD PTR tv216[ebp], 0
$LN20@write@3:
; Line 1762
	mov	eax, DWORD PTR _customProps$38166[ebp]
	mov	DWORD PTR $T46049[ebp], eax
	mov	ecx, DWORD PTR $T46049[ebp]
	mov	DWORD PTR $T46048[ebp], ecx
	cmp	DWORD PTR $T46048[ebp], 0
	je	SHORT $LN21@write@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46048[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46048[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv227[ebp], eax
	jmp	SHORT $LN22@write@3
$LN21@write@3:
	mov	DWORD PTR tv227[ebp], 0
$LN22@write@3:
; Line 1763
	jmp	SHORT $LN13@write@3
$LN1@write@3:
; Line 1766
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _customProps$38166[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZone
; Line 1767
	mov	eax, DWORD PTR _customProps$38166[ebp]
	mov	DWORD PTR $T46053[ebp], eax
	mov	ecx, DWORD PTR $T46053[ebp]
	mov	DWORD PTR $T46052[ebp], ecx
	cmp	DWORD PTR $T46052[ebp], 0
	je	SHORT $LN23@write@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46052[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46052[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv244[ebp], eax
	jmp	SHORT $LN24@write@3
$LN23@write@3:
	mov	DWORD PTR tv244[ebp], 0
$LN24@write@3:
$LN13@write@3:
; Line 1769
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@write@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 464				; 000001d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN31@write@3:
	DD	1
	DD	$LN30@write@3
$LN30@write@3:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN28@write@3
$LN28@write@3:
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _utcString$38163[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T46037[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T46041[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-468]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::write
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUTCDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z
_TEXT	SEGMENT
_time$ = 8						; size = 8
_str$ = 16						; size = 4
?getUTCDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z PROC ; icu_56::getUTCDateTimeString, COMDAT
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 216
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
; Line 217
	mov	esi, esp
	push	90					; 0000005aH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 218
	mov	eax, DWORD PTR _str$[ebp]
; Line 219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getUTCDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ENDP ; icu_56::getUTCDateTimeString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z
_TEXT	SEGMENT
_sec$ = -116						; size = 4
_min$ = -104						; size = 4
_hour$ = -92						; size = 4
_t$ = -80						; size = 4
_mid$ = -68						; size = 4
_doy$ = -56						; size = 4
_dow$ = -44						; size = 4
_dom$ = -32						; size = 4
_month$ = -20						; size = 4
_year$ = -8						; size = 4
_time$ = 8						; size = 8
_str$ = 16						; size = 4
?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z PROC ; icu_56::getDateTimeString, COMDAT
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	lea	eax, DWORD PTR _mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 193
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 194
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 195
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _month$[ebp]
	add	ecx, 1
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 196
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 197
	mov	esi, esp
	push	84					; 00000054H
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 200
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _hour$[ebp], eax
; Line 201
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	mov	DWORD PTR _t$[ebp], edx
; Line 202
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _min$[ebp], eax
; Line 203
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	mov	DWORD PTR _t$[ebp], edx
; Line 204
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _sec$[ebp], eax
; Line 206
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _hour$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 207
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _min$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 208
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _sec$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 209
	mov	eax, DWORD PTR _str$[ebp]
; Line 210
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getDateTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@getDateTim:
	DD	6
	DD	$LN9@getDateTim
$LN9@getDateTim:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@getDateTim
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getDateTim
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@getDateTim
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@getDateTim
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@getDateTim
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN8@getDateTim
$LN8@getDateTim:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN7@getDateTim:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN6@getDateTim:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN5@getDateTim:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN4@getDateTim:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN3@getDateTim:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ENDP ; icu_56::getDateTimeString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z
_TEXT	SEGMENT
tv69 = -272						; size = 4
_i$ = -72						; size = 4
_digits$ = -60						; size = 40
_negative$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 4
_length$ = 12						; size = 1
_str$ = 16						; size = 4
?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z PROC ; icu_56::appendAsciiDigits, COMDAT
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 119
	mov	BYTE PTR _negative$[ebp], 0
; Line 123
	cmp	DWORD PTR _number$[ebp], 0
	jge	SHORT $LN13@appendAsci
; Line 124
	mov	BYTE PTR _negative$[ebp], 1
; Line 125
	mov	eax, DWORD PTR _number$[ebp]
	imul	eax, -1
	mov	DWORD PTR _number$[ebp], eax
$LN13@appendAsci:
; Line 128
	movzx	eax, BYTE PTR _length$[ebp]
	cmp	eax, 10					; 0000000aH
	jle	SHORT $LN16@appendAsci
	mov	DWORD PTR tv69[ebp], 10			; 0000000aH
	jmp	SHORT $LN17@appendAsci
$LN16@appendAsci:
	movzx	ecx, BYTE PTR _length$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN17@appendAsci:
	mov	dl, BYTE PTR tv69[ebp]
	mov	BYTE PTR _length$[ebp], dl
; Line 129
	movzx	eax, BYTE PTR _length$[ebp]
	test	eax, eax
	jne	SHORT $LN12@appendAsci
; Line 131
	mov	DWORD PTR _i$[ebp], 0
$LN11@appendAsci:
; Line 133
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _digits$[ebp+eax*4], edx
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 134
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _number$[ebp], eax
; Line 135
	cmp	DWORD PTR _number$[ebp], 0
	jne	SHORT $LN11@appendAsci
; Line 136
	mov	al, BYTE PTR _i$[ebp]
	mov	BYTE PTR _length$[ebp], al
; Line 137
	jmp	SHORT $LN8@appendAsci
$LN12@appendAsci:
; Line 139
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@appendAsci
$LN6@appendAsci:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@appendAsci:
	movzx	eax, BYTE PTR _length$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN8@appendAsci
; Line 140
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _digits$[ebp+eax*4], edx
; Line 141
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _number$[ebp], eax
; Line 142
	jmp	SHORT $LN6@appendAsci
$LN8@appendAsci:
; Line 144
	movsx	eax, BYTE PTR _negative$[ebp]
	test	eax, eax
	je	SHORT $LN4@appendAsci
; Line 145
	mov	esi, esp
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@appendAsci:
; Line 147
	movzx	eax, BYTE PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@appendAsci
$LN2@appendAsci:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@appendAsci:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN1@appendAsci
; Line 148
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _digits$[ebp+eax*4]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 149
	jmp	SHORT $LN2@appendAsci
$LN1@appendAsci:
; Line 150
	mov	eax, DWORD PTR _str$[ebp]
; Line 151
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@appendAsci
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@appendAsci:
	DD	1
	DD	$LN19@appendAsci
$LN19@appendAsci:
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$LN18@appendAsci
$LN18@appendAsci:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ENDP ; icu_56::appendAsciiDigits
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??1RuleBasedTimeZone@icu_56@@UAE@XZ:PROC	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
EXTRN	?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z:PROC ; icu_56::BasicTimeZone::getTimeZoneRulesAfter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$6
__ehfuncinfo$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv263 = -628						; size = 4
tv252 = -628						; size = 4
tv233 = -628						; size = 4
tv212 = -628						; size = 4
tv179 = -628						; size = 4
tv158 = -628						; size = 4
$T46091 = -620						; size = 4
$T46092 = -608						; size = 4
$T46095 = -596						; size = 4
$T46096 = -584						; size = 4
$T46099 = -572						; size = 4
$T46100 = -560						; size = 4
$T46103 = -548						; size = 4
$T46104 = -536						; size = 4
$T46107 = -524						; size = 4
$T46108 = -512						; size = 4
$T46111 = -500						; size = 4
$T46112 = -488						; size = 4
_tr$38232 = -284					; size = 4
_icutzprop$38214 = -272					; size = 4
_tr$38204 = -260					; size = 4
_rbtz$ = -248						; size = 88
_tzid$ = -152						; size = 64
_customProps$ = -80					; size = 24
_transitionRules$ = -48					; size = 4
_initial$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_start$ = 8						; size = 8
_writer$ = 16						; size = 4
_status$ = 20						; size = 4
?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::write, COMDAT
; _this$ = ecx
; Line 1772
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 616				; 00000268H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1773
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN16@write@4
; Line 1774
	jmp	$LN17@write@4
$LN16@write@4:
; Line 1776
	mov	DWORD PTR _initial$[ebp], 0
; Line 1777
	mov	DWORD PTR _transitionRules$[ebp], 0
; Line 1778
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1779
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1782
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _transitionRules$[ebp]
	push	ecx
	lea	edx, DWORD PTR _initial$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getTimeZoneRulesAfter@BasicTimeZone@icu_56@@IBEXNAAPAVInitialTimeZoneRule@2@AAPAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::BasicTimeZone::getTimeZoneRulesAfter
; Line 1783
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@write@4
; Line 1784
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@write@4
$LN15@write@4:
; Line 1788
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 1789
	mov	eax, DWORD PTR _initial$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rbtz$[ebp]
	call	??0RuleBasedTimeZone@icu_56@@QAE@ABVUnicodeString@1@PAVInitialTimeZoneRule@1@@Z ; icu_56::RuleBasedTimeZone::RuleBasedTimeZone
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1790
	cmp	DWORD PTR _transitionRules$[ebp], 0
	je	$LN14@write@4
$LN13@write@4:
; Line 1791
	mov	esi, esp
	mov	ecx, DWORD PTR _transitionRules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN12@write@4
; Line 1792
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _transitionRules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tr$38204[ebp], eax
; Line 1793
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tr$38204[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rbtz$[ebp]
	call	?addTransitionRule@RuleBasedTimeZone@icu_56@@QAEXPAVTimeZoneRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::addTransitionRule
; Line 1794
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@write@4
; Line 1795
	jmp	$cleanupWritePartial$38207
$LN11@write@4:
; Line 1797
	jmp	SHORT $LN13@write@4
$LN12@write@4:
; Line 1798
	mov	eax, DWORD PTR _transitionRules$[ebp]
	mov	DWORD PTR $T46092[ebp], eax
	mov	ecx, DWORD PTR $T46092[ebp]
	mov	DWORD PTR $T46091[ebp], ecx
	cmp	DWORD PTR $T46091[ebp], 0
	je	SHORT $LN19@write@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46091[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46091[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $LN20@write@4
$LN19@write@4:
	mov	DWORD PTR tv158[ebp], 0
$LN20@write@4:
; Line 1799
	mov	DWORD PTR _transitionRules$[ebp], 0
$LN14@write@4:
; Line 1801
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rbtz$[ebp]
	call	?complete@RuleBasedTimeZone@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::complete
; Line 1802
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@write@4
; Line 1803
	jmp	$cleanupWritePartial$38207
$LN9@write@4:
; Line 1806
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN6@write@4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN6@write@4
; Line 1807
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46096[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T46096[ebp], 0
	je	SHORT $LN21@write@4
	mov	esi, esp
	push	OFFSET _ICU_TZINFO_PROP
	mov	ecx, DWORD PTR $T46096[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46096[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T46096[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	jmp	SHORT $LN22@write@4
$LN21@write@4:
	mov	DWORD PTR tv179[ebp], 0
$LN22@write@4:
	mov	edx, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T46095[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T46095[ebp]
	mov	DWORD PTR _icutzprop$38214[ebp], eax
; Line 1808
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1809
	mov	esi, esp
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1810
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1811
	mov	esi, esp
	push	-1
	push	OFFSET _ICU_TZINFO_PARTIAL
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1812
	mov	eax, DWORD PTR _icutzprop$38214[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _start$[ebp]
	fstp	QWORD PTR [esp]
	call	?appendMillis@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::appendMillis
	add	esp, 12					; 0000000cH
; Line 1813
	mov	esi, esp
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1814
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38214[ebp]
	push	ecx
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1815
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@write@4
; Line 1816
	mov	eax, DWORD PTR _icutzprop$38214[ebp]
	mov	DWORD PTR $T46100[ebp], eax
	mov	ecx, DWORD PTR $T46100[ebp]
	mov	DWORD PTR $T46099[ebp], ecx
	cmp	DWORD PTR $T46099[ebp], 0
	je	SHORT $LN23@write@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46099[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46099[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv212[ebp], eax
	jmp	SHORT $LN24@write@4
$LN23@write@4:
	mov	DWORD PTR tv212[ebp], 0
$LN24@write@4:
; Line 1817
	jmp	SHORT $cleanupWritePartial$38207
$LN6@write@4:
; Line 1820
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _customProps$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rbtz$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZone
; Line 1821
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rbtz$[ebp]
	call	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@write@4
$cleanupWritePartial$38207:
; Line 1824
	cmp	DWORD PTR _initial$[ebp], 0
	je	SHORT $LN26@write@4
; Line 1825
	mov	eax, DWORD PTR _initial$[ebp]
	mov	DWORD PTR $T46104[ebp], eax
	mov	ecx, DWORD PTR $T46104[ebp]
	mov	DWORD PTR $T46103[ebp], ecx
	cmp	DWORD PTR $T46103[ebp], 0
	je	SHORT $LN25@write@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46103[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46103[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv233[ebp], eax
	jmp	SHORT $LN26@write@4
$LN25@write@4:
	mov	DWORD PTR tv233[ebp], 0
$LN26@write@4:
; Line 1827
	cmp	DWORD PTR _transitionRules$[ebp], 0
	je	$LN30@write@4
$LN2@write@4:
; Line 1828
	mov	esi, esp
	mov	ecx, DWORD PTR _transitionRules$[ebp]
	call	DWORD PTR __imp_?isEmpty@UVector@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@write@4
; Line 1829
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _transitionRules$[ebp]
	call	DWORD PTR __imp_?orphanElementAt@UVector@icu_56@@QAEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tr$38232[ebp], eax
; Line 1830
	mov	eax, DWORD PTR _tr$38232[ebp]
	mov	DWORD PTR $T46108[ebp], eax
	mov	ecx, DWORD PTR $T46108[ebp]
	mov	DWORD PTR $T46107[ebp], ecx
	cmp	DWORD PTR $T46107[ebp], 0
	je	SHORT $LN27@write@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46107[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46107[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv252[ebp], eax
	jmp	SHORT $LN28@write@4
$LN27@write@4:
	mov	DWORD PTR tv252[ebp], 0
$LN28@write@4:
; Line 1831
	jmp	$LN2@write@4
$LN1@write@4:
; Line 1832
	mov	eax, DWORD PTR _transitionRules$[ebp]
	mov	DWORD PTR $T46112[ebp], eax
	mov	ecx, DWORD PTR $T46112[ebp]
	mov	DWORD PTR $T46111[ebp], ecx
	cmp	DWORD PTR $T46111[ebp], 0
	je	SHORT $LN29@write@4
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46111[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46111[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv263[ebp], eax
	jmp	SHORT $LN30@write@4
$LN29@write@4:
	mov	DWORD PTR tv263[ebp], 0
$LN30@write@4:
; Line 1834
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rbtz$[ebp]
	call	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@write@4:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@write@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN42@write@4:
	DD	5
	DD	$LN41@write@4
$LN41@write@4:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN35@write@4
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN36@write@4
	DD	-80					; ffffffb0H
	DD	24					; 00000018H
	DD	$LN37@write@4
	DD	-152					; ffffff68H
	DD	64					; 00000040H
	DD	$LN38@write@4
	DD	-248					; ffffff08H
	DD	88					; 00000058H
	DD	$LN39@write@4
$LN39@write@4:
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	0
$LN38@write@4:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN37@write@4:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN36@write@4:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN35@write@4:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$5:
	lea	ecx, DWORD PTR _rbtz$[ebp]
	jmp	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
__unwindfunclet$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T46096[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-632]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::write
PUBLIC	__$ArrayPad$
EXTRN	__alldiv:PROC
EXTRN	__allrem:PROC
EXTRN	__allmul:PROC
EXTRN	__ftol2:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendMillis@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z
_TEXT	SEGMENT
tv89 = -326						; size = 2
_number$ = -128						; size = 8
_i$ = -112						; size = 4
_digits$ = -100						; size = 80
_negative$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
_date$ = 8						; size = 8
_str$ = 16						; size = 4
?appendMillis@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z PROC ; icu_56::appendMillis, COMDAT
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 154
	mov	BYTE PTR _negative$[ebp], 0
; Line 159
	fld	QWORD PTR __real@c384763b62073280
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN11@appendMill
; Line 160
	mov	DWORD PTR _number$[ebp], -1088835584	; bf19b000H
	mov	DWORD PTR _number$[ebp+4], -42911597	; fd713893H
	jmp	SHORT $LN8@appendMill
$LN11@appendMill:
; Line 161
	fld	QWORD PTR __real@43846a3eddf8cd80
	fcomp	QWORD PTR _date$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@appendMill
; Line 162
	mov	DWORD PTR _number$[ebp], -1088835584	; bf19b000H
	mov	DWORD PTR _number$[ebp+4], 42813403	; 028d47dbH
; Line 163
	jmp	SHORT $LN8@appendMill
$LN9@appendMill:
; Line 164
	fld	QWORD PTR _date$[ebp]
	call	__ftol2
	mov	DWORD PTR _number$[ebp], eax
	mov	DWORD PTR _number$[ebp+4], edx
$LN8@appendMill:
; Line 166
	cmp	DWORD PTR _number$[ebp+4], 0
	jg	SHORT $LN7@appendMill
	jl	SHORT $LN14@appendMill
	cmp	DWORD PTR _number$[ebp], 0
	jae	SHORT $LN7@appendMill
$LN14@appendMill:
; Line 167
	mov	BYTE PTR _negative$[ebp], 1
; Line 168
	push	-1
	push	-1
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__allmul
	mov	DWORD PTR _number$[ebp], eax
	mov	DWORD PTR _number$[ebp+4], edx
$LN7@appendMill:
; Line 170
	mov	DWORD PTR _i$[ebp], 0
$LN6@appendMill:
; Line 172
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__allrem
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _digits$[ebp+edx*4], eax
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 173
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _number$[ebp], eax
	mov	DWORD PTR _number$[ebp+4], edx
; Line 174
	mov	eax, DWORD PTR _number$[ebp]
	or	eax, DWORD PTR _number$[ebp+4]
	jne	SHORT $LN6@appendMill
; Line 176
	movsx	eax, BYTE PTR _negative$[ebp]
	test	eax, eax
	je	SHORT $LN3@appendMill
; Line 177
	mov	esi, esp
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@appendMill:
; Line 179
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN2@appendMill:
; Line 180
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN1@appendMill
; Line 181
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _digits$[ebp+eax*4]
	add	ecx, 48					; 00000030H
	mov	WORD PTR tv89[ebp], cx
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	mov	esi, esp
	movzx	eax, WORD PTR tv89[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 182
	jmp	SHORT $LN2@appendMill
$LN1@appendMill:
; Line 183
	mov	eax, DWORD PTR _str$[ebp]
; Line 184
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@appendMill
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@appendMill:
	DD	1
	DD	$LN16@appendMill
$LN16@appendMill:
	DD	-100					; ffffff9cH
	DD	80					; 00000050H
	DD	$LN15@appendMill
$LN15@appendMill:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?appendMillis@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ENDP ; icu_56::appendMillis
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$5
__ehfuncinfo$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv248 = -592						; size = 4
tv236 = -592						; size = 4
tv224 = -592						; size = 4
tv203 = -592						; size = 4
tv170 = -592						; size = 4
$T46146 = -584						; size = 4
$T46147 = -572						; size = 4
$T46150 = -560						; size = 4
$T46151 = -548						; size = 4
$T46154 = -536						; size = 4
$T46155 = -524						; size = 4
$T46158 = -512						; size = 4
$T46159 = -500						; size = 4
$T46162 = -488						; size = 4
$T46163 = -476						; size = 4
_icutzprop$38257 = -272					; size = 4
_rbtz$38251 = -260					; size = 88
_dst$ = -164						; size = 4
_std$ = -152						; size = 4
_initial$ = -140					; size = 4
_tzid$ = -128						; size = 64
_customProps$ = -56					; size = 24
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_time$ = 8						; size = 8
_writer$ = 16						; size = 4
_status$ = 20						; size = 4
?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeSimple, COMDAT
; _this$ = ecx
; Line 1837
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 580				; 00000244H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-592]
	mov	ecx, 145				; 00000091H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1838
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@writeSimpl@2
; Line 1839
	jmp	$LN12@writeSimpl@2
$LN11@writeSimpl@2:
; Line 1842
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET _uhash_compareUnicodeString_56
	push	OFFSET _uprv_deleteUObject_56
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1843
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1846
	mov	DWORD PTR _initial$[ebp], 0
; Line 1847
	mov	DWORD PTR _std$[ebp], 0
	mov	DWORD PTR _dst$[ebp], 0
; Line 1848
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	lea	edx, DWORD PTR _std$[ebp]
	push	edx
	lea	eax, DWORD PTR _initial$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1849
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN10@writeSimpl@2
; Line 1851
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 1852
	mov	eax, DWORD PTR _initial$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzid$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	??0RuleBasedTimeZone@icu_56@@QAE@ABVUnicodeString@1@PAVInitialTimeZoneRule@1@@Z ; icu_56::RuleBasedTimeZone::RuleBasedTimeZone
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1853
	cmp	DWORD PTR _std$[ebp], 0
	je	SHORT $LN9@writeSimpl@2
	cmp	DWORD PTR _dst$[ebp], 0
	je	SHORT $LN9@writeSimpl@2
; Line 1854
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _std$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	?addTransitionRule@RuleBasedTimeZone@icu_56@@QAEXPAVTimeZoneRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::addTransitionRule
; Line 1855
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	?addTransitionRule@RuleBasedTimeZone@icu_56@@QAEXPAVTimeZoneRule@2@AAW4UErrorCode@@@Z ; icu_56::RuleBasedTimeZone::addTransitionRule
$LN9@writeSimpl@2:
; Line 1857
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@writeSimpl@2
; Line 1879
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
; Line 1858
	jmp	$cleanupWriteSimple$38254
$LN8@writeSimpl@2:
; Line 1861
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN5@writeSimpl@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN5@writeSimpl@2
; Line 1862
	mov	esi, esp
	push	64					; 00000040H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T46147[ebp], 0
	je	SHORT $LN14@writeSimpl@2
	mov	esi, esp
	push	OFFSET _ICU_TZINFO_PROP
	mov	ecx, DWORD PTR $T46147[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46147[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	mov	ecx, DWORD PTR $T46147[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	jmp	SHORT $LN15@writeSimpl@2
$LN14@writeSimpl@2:
	mov	DWORD PTR tv170[ebp], 0
$LN15@writeSimpl@2:
	mov	edx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T46146[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T46146[ebp]
	mov	DWORD PTR _icutzprop$38257[ebp], eax
; Line 1863
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1864
	mov	esi, esp
	push	91					; 0000005bH
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1865
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1866
	mov	esi, esp
	push	-1
	push	OFFSET _ICU_TZINFO_SIMPLE
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1867
	mov	eax, DWORD PTR _icutzprop$38257[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	call	?appendMillis@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::appendMillis
	add	esp, 12					; 0000000cH
; Line 1868
	mov	esi, esp
	push	93					; 0000005dH
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1869
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _icutzprop$38257[ebp]
	push	ecx
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1870
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@writeSimpl@2
; Line 1871
	mov	eax, DWORD PTR _icutzprop$38257[ebp]
	mov	DWORD PTR $T46151[ebp], eax
	mov	ecx, DWORD PTR $T46151[ebp]
	mov	DWORD PTR $T46150[ebp], ecx
	cmp	DWORD PTR $T46150[ebp], 0
	je	SHORT $LN16@writeSimpl@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46150[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46150[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN17@writeSimpl@2
$LN16@writeSimpl@2:
	mov	DWORD PTR tv203[ebp], 0
$LN17@writeSimpl@2:
; Line 1879
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
; Line 1872
	jmp	SHORT $cleanupWriteSimple$38254
$LN5@writeSimpl@2:
; Line 1875
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _customProps$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rbtz$38251[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZone
; Line 1876
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	call	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
$LN10@writeSimpl@2:
; Line 1877
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN12@writeSimpl@2
$cleanupWriteSimple$38254:
; Line 1880
	cmp	DWORD PTR _initial$[ebp], 0
	je	SHORT $LN19@writeSimpl@2
; Line 1881
	mov	eax, DWORD PTR _initial$[ebp]
	mov	DWORD PTR $T46155[ebp], eax
	mov	ecx, DWORD PTR $T46155[ebp]
	mov	DWORD PTR $T46154[ebp], ecx
	cmp	DWORD PTR $T46154[ebp], 0
	je	SHORT $LN18@writeSimpl@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46154[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46154[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv224[ebp], eax
	jmp	SHORT $LN19@writeSimpl@2
$LN18@writeSimpl@2:
	mov	DWORD PTR tv224[ebp], 0
$LN19@writeSimpl@2:
; Line 1883
	cmp	DWORD PTR _std$[ebp], 0
	je	SHORT $LN21@writeSimpl@2
; Line 1884
	mov	eax, DWORD PTR _std$[ebp]
	mov	DWORD PTR $T46159[ebp], eax
	mov	ecx, DWORD PTR $T46159[ebp]
	mov	DWORD PTR $T46158[ebp], ecx
	cmp	DWORD PTR $T46158[ebp], 0
	je	SHORT $LN20@writeSimpl@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46158[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46158[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv236[ebp], eax
	jmp	SHORT $LN21@writeSimpl@2
$LN20@writeSimpl@2:
	mov	DWORD PTR tv236[ebp], 0
$LN21@writeSimpl@2:
; Line 1886
	cmp	DWORD PTR _dst$[ebp], 0
	je	SHORT $LN23@writeSimpl@2
; Line 1887
	mov	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR $T46163[ebp], eax
	mov	ecx, DWORD PTR $T46163[ebp]
	mov	DWORD PTR $T46162[ebp], ecx
	cmp	DWORD PTR $T46162[ebp], 0
	je	SHORT $LN22@writeSimpl@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46162[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46162[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv248[ebp], eax
	jmp	SHORT $LN23@writeSimpl@2
$LN22@writeSimpl@2:
	mov	DWORD PTR tv248[ebp], 0
$LN23@writeSimpl@2:
; Line 1889
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@writeSimpl@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@writeSimpl@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 592				; 00000250H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN36@writeSimpl@2:
	DD	6
	DD	$LN35@writeSimpl@2
$LN35@writeSimpl@2:
	DD	-56					; ffffffc8H
	DD	24					; 00000018H
	DD	$LN28@writeSimpl@2
	DD	-128					; ffffff80H
	DD	64					; 00000040H
	DD	$LN29@writeSimpl@2
	DD	-140					; ffffff74H
	DD	4
	DD	$LN30@writeSimpl@2
	DD	-152					; ffffff68H
	DD	4
	DD	$LN31@writeSimpl@2
	DD	-164					; ffffff5cH
	DD	4
	DD	$LN32@writeSimpl@2
	DD	-260					; fffffefcH
	DD	88					; 00000058H
	DD	$LN33@writeSimpl@2
$LN33@writeSimpl@2:
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	0
$LN32@writeSimpl@2:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN31@writeSimpl@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	0
$LN30@writeSimpl@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN29@writeSimpl@2:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN28@writeSimpl@2:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$4:
	lea	ecx, DWORD PTR _rbtz$38251[ebp]
	jmp	??1RuleBasedTimeZone@icu_56@@UAE@XZ	; icu_56::RuleBasedTimeZone::~RuleBasedTimeZone
__unwindfunclet$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	mov	eax, DWORD PTR $T46147[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeSimple@VTimeZone@icu_56@@ABEXNAAVVTZWriter@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeSimple
PUBLIC	?writeFooter@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFooter
PUBLIC	??_C@_1BO@PLMOKKDK@?$AAn?$AAe?$AAx?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FG@POCIDALE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@3@AAVBasicTimeZone@3@PAVUVector@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::VTimeZone::writeZone'::`2'::__LINE__Var
PUBLIC	?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFinalRule
PUBLIC	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
PUBLIC	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
PUBLIC	?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeHeaders
PUBLIC	__$ArrayPad$
EXTRN	??1TimeZoneTransition@icu_56@@UAE@XZ:PROC	; icu_56::TimeZoneTransition::~TimeZoneTransition
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z:PROC	; icu_56::Grego::dayOfWeekInMonth
EXTRN	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:PROC ; icu_56::TimeZoneTransition::getFrom
EXTRN	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ:PROC ; icu_56::TimeZoneTransition::getTo
EXTRN	?getTime@TimeZoneTransition@icu_56@@QBENXZ:PROC	; icu_56::TimeZoneTransition::getTime
EXTRN	??0TimeZoneTransition@icu_56@@QAE@XZ:PROC	; icu_56::TimeZoneTransition::TimeZoneTransition
;	COMDAT ??_C@_1BO@PLMOKKDK@?$AAn?$AAe?$AAx?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@PLMOKKDK@?$AAn?$AAe?$AAx?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'A', 00H, 'v', 00H, 'a', 00H, 'i', 00H, 'l'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@POCIDALE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FG@POCIDALE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'v', 00H
	DB	't', 00H, 'z', 00H, 'o', 00H, 'n', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@3@AAVBasicTimeZone@3@PAVUVector@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@3@AAVBasicTimeZone@3@PAVUVector@3@AAW4UErrorCode@@@Z@4JA DD 0765H ; `icu_56::VTimeZone::writeZone'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$12
	DD	02H
	DD	FLAT:__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$13
	DD	03H
	DD	FLAT:__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$14
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv720 = -1220						; size = 4
tv711 = -1220						; size = 4
tv667 = -1220						; size = 4
tv316 = -1220						; size = 4
tv243 = -1220						; size = 4
$T46187 = -1212						; size = 4
$T46190 = -1200						; size = 4
$T46191 = -1188						; size = 4
$T46194 = -1176						; size = 4
$T46195 = -1164						; size = 4
_nextStartAvail$38415 = -957				; size = 1
_nextStart$38414 = -948					; size = 8
_nextStartAvail$38393 = -929				; size = 1
_nextStart$38392 = -920					; size = 8
_tzid$38374 = -904					; size = 64
_offset$38371 = -832					; size = 4
_dst$38370 = -820					; size = 4
_raw$38369 = -808					; size = 4
_atzrule$38340 = -796					; size = 4
_sameRule$38339 = -781					; size = 1
_weekInMonth$38338 = -772				; size = 4
_toOffset$38337 = -760					; size = 4
_fromDSTSavings$38336 = -748				; size = 4
_fromOffset$38335 = -736				; size = 4
_isDst$ = -721						; size = 1
_name$ = -712						; size = 64
_tztAvail$ = -637					; size = 1
_tzt$ = -628						; size = 24
_hasTransitions$ = -593					; size = 1
_mid$ = -584						; size = 4
_doy$ = -572						; size = 4
_dow$ = -560						; size = 4
_dom$ = -548						; size = 4
_month$ = -536						; size = 4
_year$ = -524						; size = 4
_finalStdRule$ = -512					; size = 4
_stdCount$ = -500					; size = 4
_stdUntilTime$ = -488					; size = 8
_stdStartTime$ = -472					; size = 8
_stdMillisInDay$ = -456					; size = 4
_stdWeekInMonth$ = -444					; size = 4
_stdDayOfWeek$ = -432					; size = 4
_stdMonth$ = -420					; size = 4
_stdStartYear$ = -408					; size = 4
_stdToOffset$ = -396					; size = 4
_stdFromDSTSavings$ = -384				; size = 4
_stdFromOffset$ = -372					; size = 4
_stdName$ = -360					; size = 64
_finalDstRule$ = -288					; size = 4
_dstCount$ = -276					; size = 4
_dstUntilTime$ = -264					; size = 8
_dstStartTime$ = -248					; size = 8
_dstMillisInDay$ = -232					; size = 4
_dstWeekInMonth$ = -220					; size = 4
_dstDayOfWeek$ = -208					; size = 4
_dstMonth$ = -196					; size = 4
_dstStartYear$ = -184					; size = 4
_dstToOffset$ = -172					; size = 4
_dstFromDSTSavings$ = -160				; size = 4
_dstFromOffset$ = -148					; size = 4
_dstName$ = -136					; size = 64
_t$ = -64						; size = 8
_custprop$38291 = -48					; size = 4
_i$38287 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_w$ = 8							; size = 4
_basictz$ = 12						; size = 4
_customProps$ = 16					; size = 4
_status$ = 20						; size = 4
?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZone, COMDAT
; _this$ = ecx
; Line 1893
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1208				; 000004b8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1220]
	mov	ecx, 302				; 0000012eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1894
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN71@writeZone
; Line 1895
	jmp	$LN72@writeZone
$LN71@writeZone:
; Line 1897
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeHeaders
; Line 1898
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN70@writeZone
; Line 1899
	jmp	$LN72@writeZone
$LN70@writeZone:
; Line 1902
	cmp	DWORD PTR _customProps$[ebp], 0
	je	SHORT $LN66@writeZone
; Line 1903
	mov	DWORD PTR _i$38287[ebp], 0
	jmp	SHORT $LN68@writeZone
$LN67@writeZone:
	mov	eax, DWORD PTR _i$38287[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38287[ebp], eax
$LN68@writeZone:
	mov	esi, esp
	mov	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$38287[ebp], eax
	jge	SHORT $LN66@writeZone
; Line 1904
	mov	esi, esp
	mov	eax, DWORD PTR _i$38287[ebp]
	push	eax
	mov	ecx, DWORD PTR _customProps$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _custprop$38291[ebp], eax
; Line 1905
	mov	eax, DWORD PTR _custprop$38291[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 1906
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _w$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 1907
	jmp	SHORT $LN67@writeZone
$LN66@writeZone:
; Line 1910
	fld	QWORD PTR __real@c384763b62073280
	fstp	QWORD PTR _t$[ebp]
; Line 1911
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1912
	mov	DWORD PTR _dstFromOffset$[ebp], 0
; Line 1913
	mov	DWORD PTR _dstFromDSTSavings$[ebp], 0
; Line 1914
	mov	DWORD PTR _dstToOffset$[ebp], 0
; Line 1915
	mov	DWORD PTR _dstStartYear$[ebp], 0
; Line 1916
	mov	DWORD PTR _dstMonth$[ebp], 0
; Line 1917
	mov	DWORD PTR _dstDayOfWeek$[ebp], 0
; Line 1918
	mov	DWORD PTR _dstWeekInMonth$[ebp], 0
; Line 1919
	mov	DWORD PTR _dstMillisInDay$[ebp], 0
; Line 1920
	fldz
	fstp	QWORD PTR _dstStartTime$[ebp]
; Line 1921
	fldz
	fstp	QWORD PTR _dstUntilTime$[ebp]
; Line 1922
	mov	DWORD PTR _dstCount$[ebp], 0
; Line 1923
	mov	DWORD PTR _finalDstRule$[ebp], 0
; Line 1925
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1926
	mov	DWORD PTR _stdFromOffset$[ebp], 0
; Line 1927
	mov	DWORD PTR _stdFromDSTSavings$[ebp], 0
; Line 1928
	mov	DWORD PTR _stdToOffset$[ebp], 0
; Line 1929
	mov	DWORD PTR _stdStartYear$[ebp], 0
; Line 1930
	mov	DWORD PTR _stdMonth$[ebp], 0
; Line 1931
	mov	DWORD PTR _stdDayOfWeek$[ebp], 0
; Line 1932
	mov	DWORD PTR _stdWeekInMonth$[ebp], 0
; Line 1933
	mov	DWORD PTR _stdMillisInDay$[ebp], 0
; Line 1934
	fldz
	fstp	QWORD PTR _stdStartTime$[ebp]
; Line 1935
	fldz
	fstp	QWORD PTR _stdUntilTime$[ebp]
; Line 1936
	mov	DWORD PTR _stdCount$[ebp], 0
; Line 1937
	mov	DWORD PTR _finalStdRule$[ebp], 0
; Line 1940
	mov	BYTE PTR _hasTransitions$[ebp], 0
; Line 1941
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??0TimeZoneTransition@icu_56@@QAE@XZ	; icu_56::TimeZoneTransition::TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1943
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN65@writeZone:
; Line 1947
	mov	eax, 1
	test	eax, eax
	je	$LN64@writeZone
; Line 1948
	mov	esi, esp
	lea	eax, DWORD PTR _tzt$[ebp]
	push	eax
	push	0
	sub	esp, 8
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _basictz$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _basictz$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _tztAvail$[ebp], al
; Line 1949
	movsx	eax, BYTE PTR _tztAvail$[ebp]
	test	eax, eax
	jne	SHORT $LN63@writeZone
; Line 1950
	jmp	$LN64@writeZone
$LN63@writeZone:
; Line 1952
	mov	BYTE PTR _hasTransitions$[ebp], 1
; Line 1953
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fstp	QWORD PTR _t$[ebp]
; Line 1954
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 1955
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	test	eax, eax
	setne	al
	mov	BYTE PTR _isDst$[ebp], al
; Line 1956
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	mov	DWORD PTR _fromOffset$38335[ebp], esi
; Line 1957
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getFrom@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getFrom
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	mov	DWORD PTR _fromDSTSavings$38336[ebp], eax
; Line 1958
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	ecx, eax
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	mov	DWORD PTR _toOffset$38337[ebp], esi
; Line 1959
	lea	eax, DWORD PTR _mid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _doy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dow$[ebp]
	push	edx
	lea	eax, DWORD PTR _dom$[ebp]
	push	eax
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTime@TimeZoneTransition@icu_56@@QBENXZ ; icu_56::TimeZoneTransition::getTime
	fiadd	DWORD PTR _fromOffset$38335[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?timeToFields@Grego@icu_56@@SAXNAAH00000@Z ; icu_56::Grego::timeToFields
	add	esp, 32					; 00000020H
; Line 1960
	mov	eax, DWORD PTR _dom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _year$[ebp]
	push	edx
	call	?dayOfWeekInMonth@Grego@icu_56@@SAHHHH@Z ; icu_56::Grego::dayOfWeekInMonth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _weekInMonth$38338[ebp], eax
; Line 1961
	mov	BYTE PTR _sameRule$38339[ebp], 0
; Line 1963
	movsx	eax, BYTE PTR _isDst$[ebp]
	test	eax, eax
	je	$LN62@writeZone
; Line 1967
	cmp	DWORD PTR _finalDstRule$[ebp], 0
	jne	SHORT $LN61@writeZone
	push	0
	push	OFFSET ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZoneRule@icu_56@@@8
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _atzrule$38340[ebp], eax
	cmp	DWORD PTR _atzrule$38340[ebp], 0
	je	SHORT $LN61@writeZone
	mov	ecx, DWORD PTR _atzrule$38340[ebp]
	call	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getEndYear
	cmp	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	jne	SHORT $LN61@writeZone
; Line 1968
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	DWORD PTR tv243[ebp], eax
	mov	eax, DWORD PTR tv243[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv243[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _finalDstRule$[ebp], eax
$LN61@writeZone:
; Line 1970
	cmp	DWORD PTR _dstCount$[ebp], 0
	jle	$LN55@writeZone
; Line 1978
	mov	eax, DWORD PTR _dstStartYear$[ebp]
	add	eax, DWORD PTR _dstCount$[ebp]
	cmp	DWORD PTR _year$[ebp], eax
	jne	$LN59@writeZone
	mov	esi, esp
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstFromOffset$[ebp]
	cmp	eax, DWORD PTR _fromOffset$38335[ebp]
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstToOffset$[ebp]
	cmp	eax, DWORD PTR _toOffset$38337[ebp]
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstMonth$[ebp]
	cmp	eax, DWORD PTR _month$[ebp]
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstDayOfWeek$[ebp]
	cmp	eax, DWORD PTR _dow$[ebp]
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstWeekInMonth$[ebp]
	cmp	eax, DWORD PTR _weekInMonth$38338[ebp]
	jne	SHORT $LN59@writeZone
	mov	eax, DWORD PTR _dstMillisInDay$[ebp]
	cmp	eax, DWORD PTR _mid$[ebp]
	jne	SHORT $LN59@writeZone
; Line 1980
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _dstUntilTime$[ebp]
; Line 1981
	mov	eax, DWORD PTR _dstCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _dstCount$[ebp], eax
; Line 1982
	mov	BYTE PTR _sameRule$38339[ebp], 1
$LN59@writeZone:
; Line 1984
	movsx	eax, BYTE PTR _sameRule$38339[ebp]
	test	eax, eax
	jne	$LN55@writeZone
; Line 1985
	cmp	DWORD PTR _dstCount$[ebp], 1
	jne	SHORT $LN57@writeZone
; Line 1987
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
; Line 1988
	jmp	SHORT $LN56@writeZone
$LN57@writeZone:
; Line 1990
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _dstUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _dstMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
$LN56@writeZone:
; Line 1992
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN55@writeZone
; Line 1993
	jmp	$cleanupWriteZone$38351
$LN55@writeZone:
; Line 1997
	movsx	eax, BYTE PTR _sameRule$38339[ebp]
	test	eax, eax
	jne	$LN53@writeZone
; Line 1999
	mov	esi, esp
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2000
	mov	eax, DWORD PTR _fromOffset$38335[ebp]
	mov	DWORD PTR _dstFromOffset$[ebp], eax
; Line 2001
	mov	eax, DWORD PTR _fromDSTSavings$38336[ebp]
	mov	DWORD PTR _dstFromDSTSavings$[ebp], eax
; Line 2002
	mov	eax, DWORD PTR _toOffset$38337[ebp]
	mov	DWORD PTR _dstToOffset$[ebp], eax
; Line 2003
	mov	eax, DWORD PTR _year$[ebp]
	mov	DWORD PTR _dstStartYear$[ebp], eax
; Line 2004
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR _dstMonth$[ebp], eax
; Line 2005
	mov	eax, DWORD PTR _dow$[ebp]
	mov	DWORD PTR _dstDayOfWeek$[ebp], eax
; Line 2006
	mov	eax, DWORD PTR _weekInMonth$38338[ebp]
	mov	DWORD PTR _dstWeekInMonth$[ebp], eax
; Line 2007
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _dstMillisInDay$[ebp], eax
; Line 2008
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _dstUntilTime$[ebp]
	fld	QWORD PTR _dstUntilTime$[ebp]
	fstp	QWORD PTR _dstStartTime$[ebp]
; Line 2009
	mov	DWORD PTR _dstCount$[ebp], 1
$LN53@writeZone:
; Line 2011
	cmp	DWORD PTR _finalStdRule$[ebp], 0
	je	SHORT $LN52@writeZone
	cmp	DWORD PTR _finalDstRule$[ebp], 0
	je	SHORT $LN52@writeZone
; Line 2012
	jmp	$LN64@writeZone
$LN52@writeZone:
; Line 2014
	jmp	$LN41@writeZone
$LN62@writeZone:
; Line 2018
	cmp	DWORD PTR _finalStdRule$[ebp], 0
	jne	SHORT $LN50@writeZone
	push	0
	push	OFFSET ??_R0?AVAnnualTimeZoneRule@icu_56@@@8
	push	OFFSET ??_R0?AVTimeZoneRule@icu_56@@@8
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _atzrule$38340[ebp], eax
	cmp	DWORD PTR _atzrule$38340[ebp], 0
	je	SHORT $LN50@writeZone
	mov	ecx, DWORD PTR _atzrule$38340[ebp]
	call	?getEndYear@AnnualTimeZoneRule@icu_56@@QBEHXZ ; icu_56::AnnualTimeZoneRule::getEndYear
	cmp	eax, DWORD PTR ?MAX_YEAR@AnnualTimeZoneRule@icu_56@@2HB ; icu_56::AnnualTimeZoneRule::MAX_YEAR
	jne	SHORT $LN50@writeZone
; Line 2019
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	?getTo@TimeZoneTransition@icu_56@@QBEPBVTimeZoneRule@2@XZ ; icu_56::TimeZoneTransition::getTo
	mov	DWORD PTR tv316[ebp], eax
	mov	eax, DWORD PTR tv316[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv316[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _finalStdRule$[ebp], eax
$LN50@writeZone:
; Line 2021
	cmp	DWORD PTR _stdCount$[ebp], 0
	jle	$LN44@writeZone
; Line 2029
	mov	eax, DWORD PTR _stdStartYear$[ebp]
	add	eax, DWORD PTR _stdCount$[ebp]
	cmp	DWORD PTR _year$[ebp], eax
	jne	$LN48@writeZone
	mov	esi, esp
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdFromOffset$[ebp]
	cmp	eax, DWORD PTR _fromOffset$38335[ebp]
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdToOffset$[ebp]
	cmp	eax, DWORD PTR _toOffset$38337[ebp]
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdMonth$[ebp]
	cmp	eax, DWORD PTR _month$[ebp]
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdDayOfWeek$[ebp]
	cmp	eax, DWORD PTR _dow$[ebp]
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdWeekInMonth$[ebp]
	cmp	eax, DWORD PTR _weekInMonth$38338[ebp]
	jne	SHORT $LN48@writeZone
	mov	eax, DWORD PTR _stdMillisInDay$[ebp]
	cmp	eax, DWORD PTR _mid$[ebp]
	jne	SHORT $LN48@writeZone
; Line 2031
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _stdUntilTime$[ebp]
; Line 2032
	mov	eax, DWORD PTR _stdCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _stdCount$[ebp], eax
; Line 2033
	mov	BYTE PTR _sameRule$38339[ebp], 1
$LN48@writeZone:
; Line 2035
	movsx	eax, BYTE PTR _sameRule$38339[ebp]
	test	eax, eax
	jne	$LN44@writeZone
; Line 2036
	cmp	DWORD PTR _stdCount$[ebp], 1
	jne	SHORT $LN46@writeZone
; Line 2038
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
; Line 2039
	jmp	SHORT $LN45@writeZone
$LN46@writeZone:
; Line 2041
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _stdUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _stdMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
$LN45@writeZone:
; Line 2043
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@writeZone
; Line 2044
	jmp	$cleanupWriteZone$38351
$LN44@writeZone:
; Line 2048
	movsx	eax, BYTE PTR _sameRule$38339[ebp]
	test	eax, eax
	jne	$LN42@writeZone
; Line 2050
	mov	esi, esp
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2051
	mov	eax, DWORD PTR _fromOffset$38335[ebp]
	mov	DWORD PTR _stdFromOffset$[ebp], eax
; Line 2052
	mov	eax, DWORD PTR _fromDSTSavings$38336[ebp]
	mov	DWORD PTR _stdFromDSTSavings$[ebp], eax
; Line 2053
	mov	eax, DWORD PTR _toOffset$38337[ebp]
	mov	DWORD PTR _stdToOffset$[ebp], eax
; Line 2054
	mov	eax, DWORD PTR _year$[ebp]
	mov	DWORD PTR _stdStartYear$[ebp], eax
; Line 2055
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR _stdMonth$[ebp], eax
; Line 2056
	mov	eax, DWORD PTR _dow$[ebp]
	mov	DWORD PTR _stdDayOfWeek$[ebp], eax
; Line 2057
	mov	eax, DWORD PTR _weekInMonth$38338[ebp]
	mov	DWORD PTR _stdWeekInMonth$[ebp], eax
; Line 2058
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _stdMillisInDay$[ebp], eax
; Line 2059
	fld	QWORD PTR _t$[ebp]
	fstp	QWORD PTR _stdUntilTime$[ebp]
	fld	QWORD PTR _stdUntilTime$[ebp]
	fstp	QWORD PTR _stdStartTime$[ebp]
; Line 2060
	mov	DWORD PTR _stdCount$[ebp], 1
$LN42@writeZone:
; Line 2062
	cmp	DWORD PTR _finalStdRule$[ebp], 0
	je	SHORT $LN41@writeZone
	cmp	DWORD PTR _finalDstRule$[ebp], 0
	je	SHORT $LN41@writeZone
; Line 2063
	jmp	SHORT $LN64@writeZone
$LN41@writeZone:
; Line 2066
	jmp	$LN65@writeZone
$LN64@writeZone:
; Line 2067
	movsx	eax, BYTE PTR _hasTransitions$[ebp]
	test	eax, eax
	jne	$LN40@writeZone
; Line 2070
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dst$38370[ebp]
	push	ecx
	lea	edx, DWORD PTR _raw$38369[ebp]
	push	edx
	push	0
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _basictz$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _basictz$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2071
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN39@writeZone
; Line 2072
	jmp	$cleanupWriteZone$38351
$LN39@writeZone:
; Line 2074
	mov	eax, DWORD PTR _raw$38369[ebp]
	add	eax, DWORD PTR _dst$38370[ebp]
	mov	DWORD PTR _offset$38371[ebp], eax
; Line 2075
	cmp	DWORD PTR _dst$38370[ebp], 0
	setne	al
	mov	BYTE PTR _isDst$[ebp], al
; Line 2076
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$38374[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 2077
	lea	eax, DWORD PTR _tzid$38374[ebp]
	push	eax
	mov	ecx, DWORD PTR _basictz$[ebp]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 2078
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T46187[ebp], esp
	mov	esi, esp
	lea	edx, DWORD PTR _tzid$38374[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv720[ebp], eax
	call	?getDefaultTZName@icu_56@@YAXVUnicodeString@1@CAAV21@@Z ; icu_56::getDefaultTZName
	add	esp, 72					; 00000048H
; Line 2080
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	fild	DWORD PTR _offset$38371[ebp]
	fldz
	fsubrp	ST(1), ST(0)
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _offset$38371[ebp]
	push	ecx
	mov	edx, DWORD PTR _offset$38371[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
; Line 2081
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@writeZone
; Line 2172
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$38374[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2082
	jmp	$cleanupWriteZone$38351
$LN37@writeZone:
; Line 2084
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$38374[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN4@writeZone
$LN40@writeZone:
; Line 2085
	cmp	DWORD PTR _dstCount$[ebp], 0
	jle	$LN20@writeZone
; Line 2086
	cmp	DWORD PTR _finalDstRule$[ebp], 0
	jne	$LN33@writeZone
; Line 2087
	cmp	DWORD PTR _dstCount$[ebp], 1
	jne	SHORT $LN32@writeZone
; Line 2089
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
; Line 2090
	jmp	SHORT $LN31@writeZone
$LN32@writeZone:
; Line 2092
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _dstUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _dstMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
$LN31@writeZone:
; Line 2094
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN30@writeZone
; Line 2095
	jmp	$cleanupWriteZone$38351
$LN30@writeZone:
; Line 2097
	jmp	$LN20@writeZone
$LN33@writeZone:
; Line 2098
	cmp	DWORD PTR _dstCount$[ebp], 1
	jne	SHORT $LN27@writeZone
; Line 2100
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	sub	edx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _finalDstRule$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFinalRule
; Line 2101
	jmp	$LN21@writeZone
$LN27@writeZone:
; Line 2103
	mov	ecx, DWORD PTR _finalDstRule$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	push	eax
	mov	eax, DWORD PTR _dstDayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstWeekInMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstMonth$[ebp]
	push	edx
	call	?isEquivalentDateRule@icu_56@@YACHHHPBVDateTimeRule@1@@Z ; icu_56::isEquivalentDateRule
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN25@writeZone
; Line 2105
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _dstMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2106
	jmp	$LN21@writeZone
$LN25@writeZone:
; Line 2109
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _dstUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _dstStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _dstMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dstToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dstName$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2110
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN23@writeZone
; Line 2111
	jmp	$cleanupWriteZone$38351
$LN23@writeZone:
; Line 2114
	mov	esi, esp
	lea	eax, DWORD PTR _nextStart$38392[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	sub	edx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _dstUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _finalDstRule$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _finalDstRule$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _nextStartAvail$38393[ebp], al
; Line 2115
	movsx	eax, BYTE PTR _nextStartAvail$38393[ebp]
	test	eax, eax
	jne	SHORT $LN74@writeZone
	mov	ecx, DWORD PTR ?__LINE__Var@?1??writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@3@AAVBasicTimeZone@3@PAVUVector@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 222				; 000000deH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FG@POCIDALE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@PLMOKKDK@?$AAn?$AAe?$AAx?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN74@writeZone:
; Line 2116
	movsx	eax, BYTE PTR _nextStartAvail$38393[ebp]
	test	eax, eax
	je	SHORT $LN21@writeZone
; Line 2118
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _nextStart$38392[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dstFromOffset$[ebp]
	sub	edx, DWORD PTR _dstFromDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _finalDstRule$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFinalRule
$LN21@writeZone:
; Line 2122
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN20@writeZone
; Line 2123
	jmp	$cleanupWriteZone$38351
$LN20@writeZone:
; Line 2127
	cmp	DWORD PTR _stdCount$[ebp], 0
	jle	$LN4@writeZone
; Line 2128
	cmp	DWORD PTR _finalStdRule$[ebp], 0
	jne	$LN17@writeZone
; Line 2129
	cmp	DWORD PTR _stdCount$[ebp], 1
	jne	SHORT $LN16@writeZone
; Line 2131
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByTime
; Line 2132
	jmp	SHORT $LN15@writeZone
$LN16@writeZone:
; Line 2134
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _stdUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _stdMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
$LN15@writeZone:
; Line 2136
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@writeZone
; Line 2137
	jmp	$cleanupWriteZone$38351
$LN14@writeZone:
; Line 2139
	jmp	$LN4@writeZone
$LN17@writeZone:
; Line 2140
	cmp	DWORD PTR _stdCount$[ebp], 1
	jne	SHORT $LN11@writeZone
; Line 2142
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	sub	edx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _finalStdRule$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFinalRule
; Line 2143
	jmp	$LN5@writeZone
$LN11@writeZone:
; Line 2145
	mov	ecx, DWORD PTR _finalStdRule$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	push	eax
	mov	eax, DWORD PTR _stdDayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stdWeekInMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdMonth$[ebp]
	push	edx
	call	?isEquivalentDateRule@icu_56@@YACHHHPBVDateTimeRule@1@@Z ; icu_56::isEquivalentDateRule
	add	esp, 16					; 00000010H
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@writeZone
; Line 2147
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _stdMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2148
	jmp	$LN5@writeZone
$LN9@writeZone:
; Line 2151
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _stdUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _stdStartTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdDayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdWeekInMonth$[ebp]
	push	edx
	mov	eax, DWORD PTR _stdMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stdToOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	push	edx
	lea	eax, DWORD PTR _stdName$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2152
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@writeZone
; Line 2153
	jmp	$cleanupWriteZone$38351
$LN7@writeZone:
; Line 2156
	mov	esi, esp
	lea	eax, DWORD PTR _nextStart$38414[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	sub	edx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _stdUntilTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _finalStdRule$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _finalStdRule$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _nextStartAvail$38415[ebp], al
; Line 2157
	movsx	eax, BYTE PTR _nextStartAvail$38415[ebp]
	test	eax, eax
	jne	SHORT $LN75@writeZone
	mov	ecx, DWORD PTR ?__LINE__Var@?1??writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@3@AAVBasicTimeZone@3@PAVUVector@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 264				; 00000108H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FG@POCIDALE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@PLMOKKDK@?$AAn?$AAe?$AAx?$AAt?$AAS?$AAt?$AAa?$AAr?$AAt?$AAA?$AAv?$AAa?$AAi?$AAl?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN75@writeZone:
; Line 2158
	movsx	eax, BYTE PTR _nextStartAvail$38415[ebp]
	test	eax, eax
	je	SHORT $LN5@writeZone
; Line 2160
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _nextStart$38414[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stdFromOffset$[ebp]
	sub	edx, DWORD PTR _stdFromDSTSavings$[ebp]
	push	edx
	mov	eax, DWORD PTR _finalStdRule$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFinalRule
$LN5@writeZone:
; Line 2164
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@writeZone
; Line 2165
	jmp	SHORT $cleanupWriteZone$38351
$LN4@writeZone:
; Line 2170
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeFooter@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeFooter
$cleanupWriteZone$38351:
; Line 2174
	cmp	DWORD PTR _finalStdRule$[ebp], 0
	je	SHORT $LN77@writeZone
; Line 2175
	mov	eax, DWORD PTR _finalStdRule$[ebp]
	mov	DWORD PTR $T46191[ebp], eax
	mov	ecx, DWORD PTR $T46191[ebp]
	mov	DWORD PTR $T46190[ebp], ecx
	cmp	DWORD PTR $T46190[ebp], 0
	je	SHORT $LN76@writeZone
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46190[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46190[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv667[ebp], eax
	jmp	SHORT $LN77@writeZone
$LN76@writeZone:
	mov	DWORD PTR tv667[ebp], 0
$LN77@writeZone:
; Line 2177
	cmp	DWORD PTR _finalDstRule$[ebp], 0
	je	SHORT $LN79@writeZone
; Line 2178
	mov	eax, DWORD PTR _finalDstRule$[ebp]
	mov	DWORD PTR $T46195[ebp], eax
	mov	ecx, DWORD PTR $T46195[ebp]
	mov	DWORD PTR $T46194[ebp], ecx
	cmp	DWORD PTR $T46194[ebp], 0
	je	SHORT $LN78@writeZone
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46194[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46194[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv711[ebp], eax
	jmp	SHORT $LN79@writeZone
$LN78@writeZone:
	mov	DWORD PTR tv711[ebp], 0
$LN79@writeZone:
; Line 2180
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _tzt$[ebp]
	call	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN72@writeZone:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN103@writeZone
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1220				; 000004c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN103@writeZone:
	DD	15					; 0000000fH
	DD	$LN102@writeZone
$LN102@writeZone:
	DD	-136					; ffffff78H
	DD	64					; 00000040H
	DD	$LN86@writeZone
	DD	-360					; fffffe98H
	DD	64					; 00000040H
	DD	$LN87@writeZone
	DD	-524					; fffffdf4H
	DD	4
	DD	$LN88@writeZone
	DD	-536					; fffffde8H
	DD	4
	DD	$LN89@writeZone
	DD	-548					; fffffddcH
	DD	4
	DD	$LN90@writeZone
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN91@writeZone
	DD	-572					; fffffdc4H
	DD	4
	DD	$LN92@writeZone
	DD	-584					; fffffdb8H
	DD	4
	DD	$LN93@writeZone
	DD	-628					; fffffd8cH
	DD	24					; 00000018H
	DD	$LN94@writeZone
	DD	-712					; fffffd38H
	DD	64					; 00000040H
	DD	$LN95@writeZone
	DD	-808					; fffffcd8H
	DD	4
	DD	$LN96@writeZone
	DD	-820					; fffffcccH
	DD	4
	DD	$LN97@writeZone
	DD	-904					; fffffc78H
	DD	64					; 00000040H
	DD	$LN98@writeZone
	DD	-920					; fffffc68H
	DD	8
	DD	$LN99@writeZone
	DD	-948					; fffffc4cH
	DD	8
	DD	$LN100@writeZone
$LN100@writeZone:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN99@writeZone:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN98@writeZone:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN97@writeZone:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN96@writeZone:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	0
$LN95@writeZone:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN94@writeZone:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	116					; 00000074H
	DB	0
$LN93@writeZone:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN92@writeZone:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	121					; 00000079H
	DB	0
$LN91@writeZone:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN90@writeZone:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN89@writeZone:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN88@writeZone:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN87@writeZone:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN86@writeZone:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR _stdName$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$12:
	lea	ecx, DWORD PTR _tzt$[ebp]
	jmp	??1TimeZoneTransition@icu_56@@UAE@XZ	; icu_56::TimeZoneTransition::~TimeZoneTransition
__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$38374[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeZone@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAVBasicTimeZone@2@PAVUVector@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZone
EXTRN	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleDayOfMonth
EXTRN	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleWeekInMonth
EXTRN	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ:PROC ; icu_56::DateTimeRule::getDateRuleType
EXTRN	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ:PROC ; icu_56::DateTimeRule::getTimeRuleType
EXTRN	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleDayOfWeek
EXTRN	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ:PROC	; icu_56::DateTimeRule::getRuleMonth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isEquivalentDateRule@icu_56@@YACHHHPBVDateTimeRule@1@@Z
_TEXT	SEGMENT
_ruleDOM$ = -8						; size = 4
_month$ = 8						; size = 4
_weekInMonth$ = 12					; size = 4
_dayOfWeek$ = 16					; size = 4
_dtrule$ = 20						; size = 4
?isEquivalentDateRule@icu_56@@YACHHHPBVDateTimeRule@1@@Z PROC ; icu_56::isEquivalentDateRule, COMDAT
; Line 765
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 766
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	cmp	DWORD PTR _month$[ebp], eax
	jne	SHORT $LN9@isEquivale
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	cmp	DWORD PTR _dayOfWeek$[ebp], eax
	je	SHORT $LN10@isEquivale
$LN9@isEquivale:
; Line 767
	xor	al, al
	jmp	$LN11@isEquivale
$LN10@isEquivale:
; Line 769
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	test	eax, eax
	je	SHORT $LN8@isEquivale
; Line 771
	xor	al, al
	jmp	$LN11@isEquivale
$LN8@isEquivale:
; Line 774
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	cmp	eax, 1
	jne	SHORT $LN7@isEquivale
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	cmp	eax, DWORD PTR _weekInMonth$[ebp]
	jne	SHORT $LN7@isEquivale
; Line 775
	mov	al, 1
	jmp	$LN11@isEquivale
$LN7@isEquivale:
; Line 777
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	mov	DWORD PTR _ruleDOM$[ebp], eax
; Line 778
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	cmp	eax, 2
	jne	SHORT $LN6@isEquivale
; Line 779
	mov	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	edx, 1
	jne	SHORT $LN5@isEquivale
	mov	eax, DWORD PTR _ruleDOM$[ebp]
	add	eax, 6
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	eax, DWORD PTR _weekInMonth$[ebp]
	jne	SHORT $LN5@isEquivale
; Line 780
	mov	al, 1
	jmp	$LN11@isEquivale
$LN5@isEquivale:
; Line 783
	cmp	DWORD PTR _month$[ebp], 1
	je	SHORT $LN6@isEquivale
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	edx, 6
	jne	SHORT $LN6@isEquivale
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _ruleDOM$[ebp]
	add	eax, 1
	cdq
	mov	ecx, 7
	idiv	ecx
	imul	eax, -1
	cmp	DWORD PTR _weekInMonth$[ebp], eax
	jne	SHORT $LN6@isEquivale
; Line 784
	mov	al, 1
	jmp	SHORT $LN11@isEquivale
$LN6@isEquivale:
; Line 787
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	cmp	eax, 3
	jne	SHORT $LN3@isEquivale
; Line 788
	mov	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN2@isEquivale
	mov	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	eax, DWORD PTR _weekInMonth$[ebp]
	jne	SHORT $LN2@isEquivale
; Line 789
	mov	al, 1
	jmp	SHORT $LN11@isEquivale
$LN2@isEquivale:
; Line 792
	cmp	DWORD PTR _month$[ebp], 1
	je	SHORT $LN3@isEquivale
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN3@isEquivale
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _ruleDOM$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	add	eax, 1
	imul	eax, -1
	cmp	DWORD PTR _weekInMonth$[ebp], eax
	jne	SHORT $LN3@isEquivale
; Line 793
	mov	al, 1
	jmp	SHORT $LN11@isEquivale
$LN3@isEquivale:
; Line 796
	xor	al, al
$LN11@isEquivale:
; Line 797
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isEquivalentDateRule@icu_56@@YACHHHPBVDateTimeRule@1@@Z ENDP ; icu_56::isEquivalentDateRule
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_lastmodStr$38435 = -168				; size = 64
_tzid$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_status$ = 12						; size = 4
?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeHeaders, COMDAT
; _this$ = ecx
; Line 2183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2184
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@writeHeade
; Line 2185
	jmp	$LN4@writeHeade
$LN3@writeHeade:
; Line 2187
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2188
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+68]
	call	?getID@TimeZone@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZone::getID
; Line 2190
	push	OFFSET _ICAL_BEGIN
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2191
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2192
	push	OFFSET _ICAL_VTIMEZONE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2193
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2194
	push	OFFSET _ICAL_TZID
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2195
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2196
	lea	eax, DWORD PTR _tzid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2197
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2198
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@writeHeade
; Line 2199
	push	OFFSET _ICAL_TZURL
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2200
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2201
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2202
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN2@writeHeade:
; Line 2204
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+144]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@writeHeade
; Line 2205
	mov	esi, esp
	lea	ecx, DWORD PTR _lastmodStr$38435[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2206
	push	OFFSET _ICAL_LASTMOD
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2207
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2208
	lea	eax, DWORD PTR _lastmodStr$38435[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [ecx+144]
	fstp	QWORD PTR [esp]
	call	?getUTCDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getUTCDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2209
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2210
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _lastmodStr$38435[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@writeHeade:
; Line 2211
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@writeHeade:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@writeHeade
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN12@writeHeade:
	DD	2
	DD	$LN11@writeHeade
$LN11@writeHeade:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@writeHeade
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN9@writeHeade
$LN9@writeHeade:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN8@writeHeade:
	DB	116					; 00000074H
	DB	122					; 0000007aH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _tzid$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _lastmodStr$38435[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeHeaders@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeHeaders
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeFooter@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_writer$ = 8						; size = 4
_status$ = 12						; size = 4
?writeFooter@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeFooter, COMDAT
; _this$ = ecx
; Line 2217
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2218
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@writeFoote
; Line 2219
	jmp	SHORT $LN2@writeFoote
$LN1@writeFoote:
; Line 2221
	push	OFFSET _ICAL_END
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2222
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2223
	push	OFFSET _ICAL_VTIMEZONE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2224
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN2@writeFoote:
; Line 2225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeFooter@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeFooter
_TEXT	ENDS
PUBLIC	?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ; icu_56::VTimeZone::endZoneProps
PUBLIC	?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginZoneProps
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_timestr$38456 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_time$ = 28						; size = 8
_withRDATE$ = 36					; size = 1
_status$ = 40						; size = 4
?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByTime, COMDAT
; _this$ = ecx
; Line 2233
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2234
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@writeZoneP
; Line 2235
	jmp	$LN5@writeZoneP
$LN4@writeZoneP:
; Line 2237
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginZoneProps
; Line 2238
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@writeZoneP
; Line 2239
	jmp	$LN5@writeZoneP
$LN3@writeZoneP:
; Line 2241
	movsx	eax, BYTE PTR _withRDATE$[ebp]
	test	eax, eax
	je	SHORT $LN2@writeZoneP
; Line 2242
	push	OFFSET _ICAL_RDATE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2243
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2244
	mov	esi, esp
	lea	ecx, DWORD PTR _timestr$38456[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2245
	lea	eax, DWORD PTR _timestr$38456[ebp]
	push	eax
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _time$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2246
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2247
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _timestr$38456[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@writeZoneP:
; Line 2248
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ; icu_56::VTimeZone::endZoneProps
; Line 2249
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
$LN5@writeZoneP:
; Line 2252
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@writeZoneP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	3
$LN11@writeZoneP:
	DD	1
	DD	$LN10@writeZoneP
$LN10@writeZoneP:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN8@writeZoneP
$LN8@writeZoneP:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _timestr$38456[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeZonePropsByTime@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNCAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByTime
PUBLIC	?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::appendUNTIL
PUBLIC	?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginRRULE
PUBLIC	__$ArrayPad$
PUBLIC	?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOM
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dstr$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_month$ = 28						; size = 4
_dayOfMonth$ = 32					; size = 4
_startTime$ = 36					; size = 8
_untilTime$ = 44					; size = 8
_status$ = 52						; size = 4
?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByDOM, COMDAT
; _this$ = ecx
; Line 2261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@writeZoneP@2
; Line 2263
	jmp	$LN6@writeZoneP@2
$LN5@writeZoneP@2:
; Line 2265
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginZoneProps
; Line 2266
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@writeZoneP@2
; Line 2267
	jmp	$LN6@writeZoneP@2
$LN4@writeZoneP@2:
; Line 2269
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginRRULE
; Line 2270
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@writeZoneP@2
; Line 2271
	jmp	$LN6@writeZoneP@2
$LN3@writeZoneP@2:
; Line 2273
	push	OFFSET _ICAL_BYMONTHDAY
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2274
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2275
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2276
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dayOfMonth$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 2277
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2278
	fld	QWORD PTR _untilTime$[ebp]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@writeZoneP@2
; Line 2279
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dstr$[ebp]
	push	ecx
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _untilTime$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::appendUNTIL
; Line 2280
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@writeZoneP@2
; Line 2281
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@writeZoneP@2
$LN1@writeZoneP@2:
; Line 2284
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2285
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ; icu_56::VTimeZone::endZoneProps
; Line 2286
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@writeZoneP@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@writeZoneP@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
	npad	3
$LN12@writeZoneP@2:
	DD	1
	DD	$LN11@writeZoneP@2
$LN11@writeZoneP@2:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN9@writeZoneP@2
$LN9@writeZoneP@2:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByDOM
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dstr$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_month$ = 28						; size = 4
_weekInMonth$ = 32					; size = 4
_dayOfWeek$ = 36					; size = 4
_startTime$ = 40					; size = 8
_untilTime$ = 48					; size = 8
_status$ = 56						; size = 4
?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByDOW, COMDAT
; _this$ = ecx
; Line 2295
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2296
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@writeZoneP@3
; Line 2297
	jmp	$LN6@writeZoneP@3
$LN5@writeZoneP@3:
; Line 2299
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginZoneProps
; Line 2300
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@writeZoneP@3
; Line 2301
	jmp	$LN6@writeZoneP@3
$LN4@writeZoneP@3:
; Line 2303
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginRRULE
; Line 2304
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@writeZoneP@3
; Line 2305
	jmp	$LN6@writeZoneP@3
$LN3@writeZoneP@3:
; Line 2307
	push	OFFSET _ICAL_BYDAY
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2308
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2309
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2310
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _weekInMonth$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 2311
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2312
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	sub	eax, 1
	imul	eax, 6
	add	eax, OFFSET _ICAL_DOW_NAMES
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2314
	fld	QWORD PTR _untilTime$[ebp]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@writeZoneP@3
; Line 2315
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dstr$[ebp]
	push	ecx
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _untilTime$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::appendUNTIL
; Line 2316
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@writeZoneP@3
; Line 2317
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@writeZoneP@3
$LN1@writeZoneP@3:
; Line 2320
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2321
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ; icu_56::VTimeZone::endZoneProps
; Line 2322
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@writeZoneP@3:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@writeZoneP@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
$LN12@writeZoneP@3:
	DD	1
	DD	$LN11@writeZoneP@3
$LN11@writeZoneP@3:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN9@writeZoneP@3
$LN9@writeZoneP@3:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByDOW
PUBLIC	?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub
PUBLIC	?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv193 = -280						; size = 4
tv166 = -280						; size = 4
_nextMonth$38528 = -80					; size = 4
_nextMonthDays$38527 = -68				; size = 4
_prevMonth$38523 = -56					; size = 4
_prevMonthDays$38522 = -44				; size = 4
_currentMonthDays$38520 = -32				; size = 4
_startDay$38519 = -20					; size = 4
_this$ = -8						; size = 4
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_month$ = 28						; size = 4
_dayOfMonth$ = 32					; size = 4
_dayOfWeek$ = 36					; size = 4
_startTime$ = 40					; size = 8
_untilTime$ = 48					; size = 8
_status$ = 56						; size = 4
?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM, COMDAT
; _this$ = ecx
; Line 2331
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2332
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@writeZoneP@4
; Line 2333
	jmp	$LN15@writeZoneP@4
$LN14@writeZoneP@4:
; Line 2336
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	edx, 1
	jne	SHORT $LN13@writeZoneP@4
; Line 2339
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	add	eax, 6
	cdq
	mov	ecx, 7
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _toOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zonename$[ebp]
	push	edx
	movzx	eax, BYTE PTR _isDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2340
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@writeZoneP@4
; Line 2341
	jmp	$LN15@writeZoneP@4
$LN12@writeZoneP@4:
; Line 2342
	jmp	$LN8@writeZoneP@4
$LN13@writeZoneP@4:
; Line 2343
	cmp	DWORD PTR _month$[ebp], 1
	je	$LN10@writeZoneP@4
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	cmp	edx, 6
	jne	SHORT $LN10@writeZoneP@4
; Line 2346
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[edx*4]
	sub	eax, DWORD PTR _dayOfMonth$[ebp]
	add	eax, 1
	cdq
	mov	ecx, 7
	idiv	ecx
	imul	eax, -1
	push	eax
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _toOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zonename$[ebp]
	push	edx
	movzx	eax, BYTE PTR _isDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2347
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@writeZoneP@4
; Line 2348
	jmp	$LN15@writeZoneP@4
$LN9@writeZoneP@4:
; Line 2350
	jmp	$LN8@writeZoneP@4
$LN10@writeZoneP@4:
; Line 2352
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginZoneProps
; Line 2353
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@writeZoneP@4
; Line 2354
	jmp	$LN15@writeZoneP@4
$LN7@writeZoneP@4:
; Line 2357
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	mov	DWORD PTR _startDay$38519[ebp], eax
; Line 2358
	mov	DWORD PTR _currentMonthDays$38520[ebp], 7
; Line 2360
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	jg	$LN6@writeZoneP@4
; Line 2362
	mov	eax, 1
	sub	eax, DWORD PTR _dayOfMonth$[ebp]
	mov	DWORD PTR _prevMonthDays$38522[ebp], eax
; Line 2363
	mov	eax, DWORD PTR _currentMonthDays$38520[ebp]
	sub	eax, DWORD PTR _prevMonthDays$38522[ebp]
	mov	DWORD PTR _currentMonthDays$38520[ebp], eax
; Line 2365
	mov	eax, DWORD PTR _month$[ebp]
	sub	eax, 1
	jns	SHORT $LN17@writeZoneP@4
	mov	DWORD PTR tv166[ebp], 11		; 0000000bH
	jmp	SHORT $LN18@writeZoneP@4
$LN17@writeZoneP@4:
	mov	ecx, DWORD PTR _month$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv166[ebp], ecx
$LN18@writeZoneP@4:
	mov	edx, DWORD PTR tv166[ebp]
	mov	DWORD PTR _prevMonth$38523[ebp], edx
; Line 2371
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _prevMonthDays$38522[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prevMonthDays$38522[ebp]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _prevMonth$38523[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub
; Line 2372
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@writeZoneP@4
; Line 2373
	jmp	$LN15@writeZoneP@4
$LN5@writeZoneP@4:
; Line 2377
	mov	DWORD PTR _startDay$38519[ebp], 1
	jmp	$LN2@writeZoneP@4
$LN6@writeZoneP@4:
; Line 2378
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	add	eax, 6
	mov	ecx, DWORD PTR _month$[ebp]
	cmp	eax, DWORD PTR _MONTHLENGTH[ecx*4]
	jle	$LN2@writeZoneP@4
; Line 2381
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	add	eax, 6
	mov	ecx, DWORD PTR _month$[ebp]
	sub	eax, DWORD PTR _MONTHLENGTH[ecx*4]
	mov	DWORD PTR _nextMonthDays$38527[ebp], eax
; Line 2382
	mov	eax, DWORD PTR _currentMonthDays$38520[ebp]
	sub	eax, DWORD PTR _nextMonthDays$38527[ebp]
	mov	DWORD PTR _currentMonthDays$38520[ebp], eax
; Line 2384
	mov	eax, DWORD PTR _month$[ebp]
	add	eax, 1
	cmp	eax, 11					; 0000000bH
	jle	SHORT $LN19@writeZoneP@4
	mov	DWORD PTR tv193[ebp], 0
	jmp	SHORT $LN20@writeZoneP@4
$LN19@writeZoneP@4:
	mov	ecx, DWORD PTR _month$[ebp]
	add	ecx, 1
	mov	DWORD PTR tv193[ebp], ecx
$LN20@writeZoneP@4:
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR _nextMonth$38528[ebp], edx
; Line 2387
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _nextMonthDays$38527[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _nextMonth$38528[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub
; Line 2388
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@writeZoneP@4
; Line 2389
	jmp	SHORT $LN15@writeZoneP@4
$LN2@writeZoneP@4:
; Line 2393
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _currentMonthDays$38520[ebp]
	push	edx
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startDay$38519[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub
; Line 2394
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@writeZoneP@4
; Line 2395
	jmp	SHORT $LN15@writeZoneP@4
$LN1@writeZoneP@4:
; Line 2397
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ; icu_56::VTimeZone::endZoneProps
$LN8@writeZoneP@4:
$LN15@writeZoneP@4:
; Line 2399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$38548 = -132						; size = 4
_dstr$ = -120						; size = 64
_isFeb$ = -45						; size = 1
_startDayNum$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_month$ = 12						; size = 4
_dayOfMonth$ = 16					; size = 4
_dayOfWeek$ = 20					; size = 4
_numDays$ = 24						; size = 4
_untilTime$ = 28					; size = 8
_fromOffset$ = 36					; size = 4
_status$ = 40						; size = 4
?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub, COMDAT
; _this$ = ecx
; Line 2407
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2409
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@writeZoneP@5
; Line 2410
	jmp	$LN9@writeZoneP@5
$LN8@writeZoneP@5:
; Line 2412
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	mov	DWORD PTR _startDayNum$[ebp], eax
; Line 2413
	cmp	DWORD PTR _month$[ebp], 1
	sete	al
	mov	BYTE PTR _isFeb$[ebp], al
; Line 2414
	cmp	DWORD PTR _dayOfMonth$[ebp], 0
	jge	SHORT $LN7@writeZoneP@5
	movsx	eax, BYTE PTR _isFeb$[ebp]
	test	eax, eax
	jne	SHORT $LN7@writeZoneP@5
; Line 2416
	mov	eax, DWORD PTR _month$[ebp]
	mov	ecx, DWORD PTR _MONTHLENGTH[eax*4]
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	lea	eax, DWORD PTR [ecx+edx+1]
	mov	DWORD PTR _startDayNum$[ebp], eax
$LN7@writeZoneP@5:
; Line 2418
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z ; icu_56::VTimeZone::beginRRULE
; Line 2419
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@writeZoneP@5
; Line 2420
	jmp	$LN9@writeZoneP@5
$LN6@writeZoneP@5:
; Line 2422
	push	OFFSET _ICAL_BYDAY
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2423
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2424
	mov	eax, DWORD PTR _dayOfWeek$[ebp]
	sub	eax, 1
	imul	eax, 6
	add	eax, OFFSET _ICAL_DOW_NAMES
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2425
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2426
	push	OFFSET _ICAL_BYMONTHDAY
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2427
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2429
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2430
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _startDayNum$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 2431
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2432
	mov	DWORD PTR _i$38548[ebp], 1
	jmp	SHORT $LN5@writeZoneP@5
$LN4@writeZoneP@5:
	mov	eax, DWORD PTR _i$38548[ebp]
	add	eax, 1
	mov	DWORD PTR _i$38548[ebp], eax
$LN5@writeZoneP@5:
	mov	eax, DWORD PTR _i$38548[ebp]
	cmp	eax, DWORD PTR _numDays$[ebp]
	jge	SHORT $LN3@writeZoneP@5
; Line 2433
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2434
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2435
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _startDayNum$[ebp]
	add	ecx, DWORD PTR _i$38548[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 2436
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2437
	jmp	SHORT $LN4@writeZoneP@5
$LN3@writeZoneP@5:
; Line 2439
	fld	QWORD PTR _untilTime$[ebp]
	fld	QWORD PTR __real@43846a3eddf8cd80
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@writeZoneP@5
; Line 2440
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dstr$[ebp]
	push	ecx
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _untilTime$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::VTimeZone::appendUNTIL
; Line 2441
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@writeZoneP@5
; Line 2442
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN9@writeZoneP@5
$LN1@writeZoneP@5:
; Line 2445
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2446
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@writeZoneP@5:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@writeZoneP@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN15@writeZoneP@5:
	DD	1
	DD	$LN14@writeZoneP@5
$LN14@writeZoneP@5:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN12@writeZoneP@5
$LN12@writeZoneP@5:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeZonePropsByDOW_GEQ_DOM_sub@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HHHHNHAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub
PUBLIC	?writeZonePropsByDOW_LEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_LEQ_DOM
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeZonePropsByDOW_LEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_month$ = 28						; size = 4
_dayOfMonth$ = 32					; size = 4
_dayOfWeek$ = 36					; size = 4
_startTime$ = 40					; size = 8
_untilTime$ = 48					; size = 8
_status$ = 56						; size = 4
?writeZonePropsByDOW_LEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeZonePropsByDOW_LEQ_DOM, COMDAT
; _this$ = ecx
; Line 2455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2456
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@writeZoneP@6
; Line 2457
	jmp	$LN8@writeZoneP@6
$LN7@writeZoneP@6:
; Line 2460
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN6@writeZoneP@6
; Line 2463
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _toOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zonename$[ebp]
	push	edx
	movzx	eax, BYTE PTR _isDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
	jmp	$LN1@writeZoneP@6
$LN6@writeZoneP@6:
; Line 2464
	cmp	DWORD PTR _month$[ebp], 1
	je	SHORT $LN4@writeZoneP@6
	mov	eax, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[eax*4]
	sub	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@writeZoneP@6
; Line 2467
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	mov	eax, DWORD PTR _MONTHLENGTH[edx*4]
	sub	eax, DWORD PTR _dayOfMonth$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	add	eax, 1
	imul	eax, -1
	push	eax
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	eax, DWORD PTR _toOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _zonename$[ebp]
	push	edx
	movzx	eax, BYTE PTR _isDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
	jmp	$LN1@writeZoneP@6
$LN4@writeZoneP@6:
; Line 2468
	cmp	DWORD PTR _month$[ebp], 1
	jne	SHORT $LN2@writeZoneP@6
	cmp	DWORD PTR _dayOfMonth$[ebp], 29		; 0000001dH
	jne	SHORT $LN2@writeZoneP@6
; Line 2471
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	push	-1
	push	1
	mov	edx, DWORD PTR _toOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _fromOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _zonename$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _isDst$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2472
	jmp	SHORT $LN1@writeZoneP@6
$LN2@writeZoneP@6:
; Line 2475
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _untilTime$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dayOfWeek$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dayOfMonth$[ebp]
	sub	edx, 6
	push	edx
	mov	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM
$LN1@writeZoneP@6:
$LN8@writeZoneP@6:
; Line 2477
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
?writeZonePropsByDOW_LEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeZonePropsByDOW_LEQ_DOM
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ:PROC ; icu_56::DateTimeRule::getRuleMillisInDay
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z$0
__ehfuncinfo$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv246 = -368						; size = 4
tv243 = -368						; size = 4
tv230 = -368						; size = 4
tv143 = -368						; size = 4
$T46309 = -360						; size = 4
$T46310 = -348						; size = 4
_name$ = -144						; size = 64
_toOffset$ = -72					; size = 4
_timeInDay$ = -60					; size = 4
_dtrule$ = -48						; size = 4
_modifiedRule$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_rule$ = 16						; size = 4
_fromRawOffset$ = 20					; size = 4
_fromDSTSavings$ = 24					; size = 4
_startTime$ = 28					; size = 8
_status$ = 36						; size = 4
?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::writeFinalRule, COMDAT
; _this$ = ecx
; Line 2485
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2486
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@writeFinal
; Line 2487
	jmp	$LN13@writeFinal
$LN12@writeFinal:
; Line 2489
	mov	BYTE PTR _modifiedRule$[ebp], 1
; Line 2490
	mov	eax, DWORD PTR _fromDSTSavings$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromRawOffset$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	push	eax
	call	?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z ; icu_56::toWallTimeRule
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dtrule$[ebp], eax
; Line 2491
	cmp	DWORD PTR _dtrule$[ebp], 0
	jne	SHORT $LN11@writeFinal
; Line 2492
	mov	BYTE PTR _modifiedRule$[ebp], 0
; Line 2493
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRule@AnnualTimeZoneRule@icu_56@@QBEPBVDateTimeRule@2@XZ ; icu_56::AnnualTimeZoneRule::getRule
	mov	DWORD PTR _dtrule$[ebp], eax
$LN11@writeFinal:
; Line 2500
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMillisInDay
	mov	DWORD PTR _timeInDay$[ebp], eax
; Line 2501
	cmp	DWORD PTR _timeInDay$[ebp], 0
	jge	SHORT $LN10@writeFinal
; Line 2502
	xor	eax, eax
	sub	eax, DWORD PTR _timeInDay$[ebp]
	mov	DWORD PTR tv243[ebp], eax
	fild	DWORD PTR tv243[ebp]
	fadd	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR _startTime$[ebp]
	jmp	SHORT $LN8@writeFinal
$LN10@writeFinal:
; Line 2503
	cmp	DWORD PTR _timeInDay$[ebp], 86400000	; 05265c00H
	jl	SHORT $LN8@writeFinal
; Line 2504
	mov	eax, DWORD PTR _timeInDay$[ebp]
	sub	eax, 86399999				; 05265bffH
	mov	DWORD PTR tv246[ebp], eax
	fild	DWORD PTR tv246[ebp]
	fsubr	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR _startTime$[ebp]
$LN8@writeFinal:
; Line 2507
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRawOffset@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getRawOffset
	mov	esi, eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDSTSavings@TimeZoneRule@icu_56@@QBEHXZ ; icu_56::TimeZoneRule::getDSTSavings
	add	esi, eax
	mov	DWORD PTR _toOffset$[ebp], esi
; Line 2508
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2509
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getName@TimeZoneRule@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::TimeZoneRule::getName
; Line 2510
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	mov	DWORD PTR tv143[ebp], eax
	cmp	DWORD PTR tv143[ebp], 3
	ja	$LN6@writeFinal
	mov	eax, DWORD PTR tv143[ebp]
	jmp	DWORD PTR $LN22@writeFinal[eax*4]
$LN5@writeFinal:
; Line 2513
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRawOffset$[ebp]
	add	edx, DWORD PTR _fromDSTSavings$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOM
; Line 2514
	jmp	$LN6@writeFinal
$LN4@writeFinal:
; Line 2517
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRawOffset$[ebp]
	add	edx, DWORD PTR _fromDSTSavings$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW
; Line 2518
	jmp	$LN6@writeFinal
$LN3@writeFinal:
; Line 2521
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRawOffset$[ebp]
	add	edx, DWORD PTR _fromDSTSavings$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_GEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_GEQ_DOM
; Line 2522
	jmp	SHORT $LN6@writeFinal
$LN2@writeFinal:
; Line 2525
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@43846a3eddf8cd80
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR _startTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	push	eax
	mov	ecx, DWORD PTR _dtrule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromRawOffset$[ebp]
	add	edx, DWORD PTR _fromDSTSavings$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeZonePropsByDOW_LEQ_DOM@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHHHHNNAAW4UErrorCode@@@Z ; icu_56::VTimeZone::writeZonePropsByDOW_LEQ_DOM
$LN6@writeFinal:
; Line 2528
	movsx	eax, BYTE PTR _modifiedRule$[ebp]
	test	eax, eax
	je	SHORT $LN16@writeFinal
; Line 2529
	mov	eax, DWORD PTR _dtrule$[ebp]
	mov	DWORD PTR $T46310[ebp], eax
	mov	ecx, DWORD PTR $T46310[ebp]
	mov	DWORD PTR $T46309[ebp], ecx
	cmp	DWORD PTR $T46309[ebp], 0
	je	SHORT $LN15@writeFinal
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46309[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46309[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv230[ebp], eax
	jmp	SHORT $LN16@writeFinal
$LN15@writeFinal:
	mov	DWORD PTR tv230[ebp], 0
$LN16@writeFinal:
; Line 2531
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@writeFinal:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@writeFinal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN21@writeFinal:
	DD	1
	DD	$LN20@writeFinal
$LN20@writeFinal:
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN18@writeFinal
$LN18@writeFinal:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
	npad	3
$LN22@writeFinal:
	DD	$LN5@writeFinal
	DD	$LN4@writeFinal
	DD	$LN3@writeFinal
	DD	$LN2@writeFinal
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?writeFinalRule@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CPBVAnnualTimeZoneRule@2@HHNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::writeFinalRule
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z$1
__ehfuncinfo$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z
_TEXT	SEGMENT
tv179 = -352						; size = 4
tv164 = -352						; size = 4
tv147 = -352						; size = 4
tv139 = -352						; size = 4
$T46330 = -344						; size = 4
$T46331 = -332						; size = 4
$T46334 = -320						; size = 4
$T46335 = -308						; size = 4
_modifiedRule$ = -104					; size = 4
_wim$37476 = -92					; size = 4
_dshift$ = -80						; size = 4
_dtype$ = -68						; size = 4
_dow$ = -56						; size = 4
_dom$ = -44						; size = 4
_month$ = -32						; size = 4
_wallt$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rule$ = 8						; size = 4
_rawOffset$ = 12					; size = 4
_dstSavings$ = 16					; size = 4
?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z PROC ; icu_56::toWallTimeRule, COMDAT
; Line 804
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 805
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	test	eax, eax
	jne	SHORT $LN20@toWallTime
; Line 806
	xor	eax, eax
	jmp	$LN21@toWallTime
$LN20@toWallTime:
; Line 808
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRuleMillisInDay@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMillisInDay
	mov	DWORD PTR _wallt$[ebp], eax
; Line 809
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	cmp	eax, 2
	jne	SHORT $LN19@toWallTime
; Line 810
	mov	eax, DWORD PTR _rawOffset$[ebp]
	add	eax, DWORD PTR _dstSavings$[ebp]
	add	eax, DWORD PTR _wallt$[ebp]
	mov	DWORD PTR _wallt$[ebp], eax
	jmp	SHORT $LN18@toWallTime
$LN19@toWallTime:
; Line 811
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getTimeRuleType@DateTimeRule@icu_56@@QBE?AW4TimeRuleType@12@XZ ; icu_56::DateTimeRule::getTimeRuleType
	cmp	eax, 1
	jne	SHORT $LN18@toWallTime
; Line 812
	mov	eax, DWORD PTR _wallt$[ebp]
	add	eax, DWORD PTR _dstSavings$[ebp]
	mov	DWORD PTR _wallt$[ebp], eax
$LN18@toWallTime:
; Line 815
	mov	DWORD PTR _month$[ebp], -1
	mov	DWORD PTR _dom$[ebp], 0
	mov	DWORD PTR _dow$[ebp], 0
; Line 817
	mov	DWORD PTR _dshift$[ebp], 0
; Line 818
	cmp	DWORD PTR _wallt$[ebp], 0
	jge	SHORT $LN16@toWallTime
; Line 819
	mov	DWORD PTR _dshift$[ebp], -1
; Line 820
	mov	eax, DWORD PTR _wallt$[ebp]
	add	eax, 86400000				; 05265c00H
	mov	DWORD PTR _wallt$[ebp], eax
	jmp	SHORT $LN15@toWallTime
$LN16@toWallTime:
; Line 821
	cmp	DWORD PTR _wallt$[ebp], 86400000	; 05265c00H
	jl	SHORT $LN15@toWallTime
; Line 822
	mov	DWORD PTR _dshift$[ebp], 1
; Line 823
	mov	eax, DWORD PTR _wallt$[ebp]
	sub	eax, 86400000				; 05265c00H
	mov	DWORD PTR _wallt$[ebp], eax
$LN15@toWallTime:
; Line 826
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRuleMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleMonth
	mov	DWORD PTR _month$[ebp], eax
; Line 827
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRuleDayOfMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfMonth
	mov	DWORD PTR _dom$[ebp], eax
; Line 828
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRuleDayOfWeek@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleDayOfWeek
	mov	DWORD PTR _dow$[ebp], eax
; Line 829
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getDateRuleType@DateTimeRule@icu_56@@QBE?AW4DateRuleType@12@XZ ; icu_56::DateTimeRule::getDateRuleType
	mov	DWORD PTR _dtype$[ebp], eax
; Line 831
	cmp	DWORD PTR _dshift$[ebp], 0
	je	$LN13@toWallTime
; Line 832
	cmp	DWORD PTR _dtype$[ebp], 1
	jne	SHORT $LN12@toWallTime
; Line 834
	mov	ecx, DWORD PTR _rule$[ebp]
	call	?getRuleWeekInMonth@DateTimeRule@icu_56@@QBEHXZ ; icu_56::DateTimeRule::getRuleWeekInMonth
	mov	DWORD PTR _wim$37476[ebp], eax
; Line 835
	cmp	DWORD PTR _wim$37476[ebp], 0
	jle	SHORT $LN11@toWallTime
; Line 836
	mov	DWORD PTR _dtype$[ebp], 2
; Line 837
	mov	eax, DWORD PTR _wim$37476[ebp]
	sub	eax, 1
	imul	eax, 7
	add	eax, 1
	mov	DWORD PTR _dom$[ebp], eax
; Line 838
	jmp	SHORT $LN12@toWallTime
$LN11@toWallTime:
; Line 839
	mov	DWORD PTR _dtype$[ebp], 3
; Line 840
	mov	eax, DWORD PTR _wim$37476[ebp]
	add	eax, 1
	imul	eax, 7
	mov	ecx, DWORD PTR _month$[ebp]
	add	eax, DWORD PTR _MONTHLENGTH[ecx*4]
	mov	DWORD PTR _dom$[ebp], eax
$LN12@toWallTime:
; Line 844
	mov	eax, DWORD PTR _dom$[ebp]
	add	eax, DWORD PTR _dshift$[ebp]
	mov	DWORD PTR _dom$[ebp], eax
; Line 845
	jne	SHORT $LN9@toWallTime
; Line 846
	mov	eax, DWORD PTR _month$[ebp]
	sub	eax, 1
	mov	DWORD PTR _month$[ebp], eax
; Line 847
	jns	SHORT $LN23@toWallTime
	mov	DWORD PTR tv139[ebp], 11		; 0000000bH
	jmp	SHORT $LN24@toWallTime
$LN23@toWallTime:
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR tv139[ebp], eax
$LN24@toWallTime:
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR _month$[ebp], ecx
; Line 848
	mov	eax, DWORD PTR _month$[ebp]
	mov	ecx, DWORD PTR _MONTHLENGTH[eax*4]
	mov	DWORD PTR _dom$[ebp], ecx
	jmp	SHORT $LN8@toWallTime
$LN9@toWallTime:
; Line 849
	mov	eax, DWORD PTR _month$[ebp]
	mov	ecx, DWORD PTR _dom$[ebp]
	cmp	ecx, DWORD PTR _MONTHLENGTH[eax*4]
	jle	SHORT $LN8@toWallTime
; Line 850
	mov	eax, DWORD PTR _month$[ebp]
	add	eax, 1
	mov	DWORD PTR _month$[ebp], eax
; Line 851
	cmp	DWORD PTR _month$[ebp], 11		; 0000000bH
	jle	SHORT $LN25@toWallTime
	mov	DWORD PTR tv147[ebp], 0
	jmp	SHORT $LN26@toWallTime
$LN25@toWallTime:
	mov	eax, DWORD PTR _month$[ebp]
	mov	DWORD PTR tv147[ebp], eax
$LN26@toWallTime:
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR _month$[ebp], ecx
; Line 852
	mov	DWORD PTR _dom$[ebp], 1
$LN8@toWallTime:
; Line 854
	cmp	DWORD PTR _dtype$[ebp], 0
	je	SHORT $LN13@toWallTime
; Line 856
	mov	eax, DWORD PTR _dow$[ebp]
	add	eax, DWORD PTR _dshift$[ebp]
	mov	DWORD PTR _dow$[ebp], eax
; Line 857
	cmp	DWORD PTR _dow$[ebp], 1
	jge	SHORT $LN5@toWallTime
; Line 858
	mov	DWORD PTR _dow$[ebp], 7
	jmp	SHORT $LN13@toWallTime
$LN5@toWallTime:
; Line 859
	cmp	DWORD PTR _dow$[ebp], 7
	jle	SHORT $LN13@toWallTime
; Line 860
	mov	DWORD PTR _dow$[ebp], 1
$LN13@toWallTime:
; Line 866
	cmp	DWORD PTR _dtype$[ebp], 0
	jne	SHORT $LN2@toWallTime
; Line 867
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46331[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T46331[ebp], 0
	je	SHORT $LN27@toWallTime
	push	0
	mov	eax, DWORD PTR _wallt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46331[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN28@toWallTime
$LN27@toWallTime:
	mov	DWORD PTR tv164[ebp], 0
$LN28@toWallTime:
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T46330[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46330[ebp]
	mov	DWORD PTR _modifiedRule$[ebp], ecx
; Line 868
	jmp	$LN1@toWallTime
$LN2@toWallTime:
; Line 870
	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46335[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T46335[ebp], 0
	je	SHORT $LN29@toWallTime
	push	0
	mov	eax, DWORD PTR _wallt$[ebp]
	push	eax
	cmp	DWORD PTR _dtype$[ebp], 2
	sete	cl
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR _dow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _month$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T46335[ebp]
	call	??0DateTimeRule@icu_56@@QAE@HHHCHW4TimeRuleType@01@@Z ; icu_56::DateTimeRule::DateTimeRule
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN30@toWallTime
$LN29@toWallTime:
	mov	DWORD PTR tv179[ebp], 0
$LN30@toWallTime:
	mov	eax, DWORD PTR tv179[ebp]
	mov	DWORD PTR $T46334[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T46334[ebp]
	mov	DWORD PTR _modifiedRule$[ebp], ecx
$LN1@toWallTime:
; Line 872
	mov	eax, DWORD PTR _modifiedRule$[ebp]
$LN21@toWallTime:
; Line 873
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T46331[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T46335[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toWallTimeRule@icu_56@@YAPAVDateTimeRule@1@PBV21@HH@Z ENDP ; icu_56::toWallTimeRule
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z$0
__ehfuncinfo$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dstr$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_zonename$ = 16						; size = 4
_fromOffset$ = 20					; size = 4
_toOffset$ = 24						; size = 4
_startTime$ = 28					; size = 8
_status$ = 36						; size = 4
?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::beginZoneProps, COMDAT
; _this$ = ecx
; Line 2538
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2539
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@beginZoneP
; Line 2540
	jmp	$LN4@beginZoneP
$LN3@beginZoneP:
; Line 2542
	push	OFFSET _ICAL_BEGIN
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2543
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2544
	movsx	eax, BYTE PTR _isDst$[ebp]
	test	eax, eax
	je	SHORT $LN2@beginZoneP
; Line 2545
	push	OFFSET _ICAL_DAYLIGHT
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2546
	jmp	SHORT $LN1@beginZoneP
$LN2@beginZoneP:
; Line 2547
	push	OFFSET _ICAL_STANDARD
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN1@beginZoneP:
; Line 2549
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2551
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2554
	push	OFFSET _ICAL_TZOFFSETTO
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2555
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2556
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toOffset$[ebp]
	push	ecx
	call	?millisToOffset@icu_56@@YAXHAAVUnicodeString@1@@Z ; icu_56::millisToOffset
	add	esp, 8
; Line 2557
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2558
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2561
	push	OFFSET _ICAL_TZOFFSETFROM
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2562
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2563
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromOffset$[ebp]
	push	ecx
	call	?millisToOffset@icu_56@@YAXHAAVUnicodeString@1@@Z ; icu_56::millisToOffset
	add	esp, 8
; Line 2564
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2565
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2568
	push	OFFSET _ICAL_TZNAME
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2569
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2570
	mov	eax, DWORD PTR _zonename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2571
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2574
	push	OFFSET _ICAL_DTSTART
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2575
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2576
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	fild	DWORD PTR _fromOffset$[ebp]
	fadd	QWORD PTR _startTime$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?getDateTimeString@icu_56@@YAAAVUnicodeString@1@NAAV21@@Z ; icu_56::getDateTimeString
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2577
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2578
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@beginZoneP:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@beginZoneP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN10@beginZoneP:
	DD	1
	DD	$LN9@beginZoneP
$LN9@beginZoneP:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN7@beginZoneP
$LN7@beginZoneP:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?beginZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CABVUnicodeString@2@HHNAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::beginZoneProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?millisToOffset@icu_56@@YAXHAAVUnicodeString@1@@Z
_TEXT	SEGMENT
_t$ = -44						; size = 4
_sec$ = -32						; size = 4
_min$ = -20						; size = 4
_hour$ = -8						; size = 4
_millis$ = 8						; size = 4
_str$ = 12						; size = 4
?millisToOffset@icu_56@@YAXHAAVUnicodeString@1@@Z PROC	; icu_56::millisToOffset, COMDAT
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 336
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 337
	cmp	DWORD PTR _millis$[ebp], 0
	jl	SHORT $LN2@millisToOf
; Line 338
	mov	esi, esp
	push	43					; 0000002bH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 339
	jmp	SHORT $LN1@millisToOf
$LN2@millisToOf:
; Line 340
	mov	esi, esp
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 341
	mov	eax, DWORD PTR _millis$[ebp]
	neg	eax
	mov	DWORD PTR _millis$[ebp], eax
$LN1@millisToOf:
; Line 344
	mov	eax, DWORD PTR _millis$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _t$[ebp], eax
; Line 346
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _sec$[ebp], edx
; Line 347
	mov	eax, DWORD PTR _t$[ebp]
	sub	eax, DWORD PTR _sec$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _t$[ebp], eax
; Line 348
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _min$[ebp], edx
; Line 349
	mov	eax, DWORD PTR _t$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _hour$[ebp], eax
; Line 351
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _hour$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 352
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _min$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 353
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _sec$[ebp]
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?millisToOffset@icu_56@@YAXHAAVUnicodeString@1@@Z ENDP	; icu_56::millisToOffset
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_writer$ = 8						; size = 4
_isDst$ = 12						; size = 1
_status$ = 16						; size = 4
?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::endZoneProps, COMDAT
; _this$ = ecx
; Line 2584
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2585
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@endZonePro
; Line 2586
	jmp	SHORT $LN4@endZonePro
$LN3@endZonePro:
; Line 2589
	push	OFFSET _ICAL_END
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2590
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2591
	movsx	eax, BYTE PTR _isDst$[ebp]
	test	eax, eax
	je	SHORT $LN2@endZonePro
; Line 2592
	push	OFFSET _ICAL_DAYLIGHT
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2593
	jmp	SHORT $LN1@endZonePro
$LN2@endZonePro:
; Line 2594
	push	OFFSET _ICAL_STANDARD
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN1@endZonePro:
; Line 2596
	push	OFFSET _ICAL_NEWLINE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
$LN4@endZonePro:
; Line 2597
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?endZoneProps@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@CAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::endZoneProps
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z$0
__ehfuncinfo$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dstr$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_writer$ = 8						; size = 4
_month$ = 12						; size = 4
_status$ = 16						; size = 4
?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::beginRRULE, COMDAT
; _this$ = ecx
; Line 2603
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2604
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@beginRRULE
; Line 2605
	jmp	$LN2@beginRRULE
$LN1@beginRRULE:
; Line 2607
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2608
	push	OFFSET _ICAL_RRULE
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2609
	push	58					; 0000003aH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2610
	push	OFFSET _ICAL_FREQ
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2611
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2612
	push	OFFSET _ICAL_YEARLY
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2613
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2614
	push	OFFSET _ICAL_BYMONTH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2615
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2616
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _month$[ebp]
	add	ecx, 1
	push	ecx
	call	?appendAsciiDigits@icu_56@@YAAAVUnicodeString@1@HEAAV21@@Z ; icu_56::appendAsciiDigits
	add	esp, 12					; 0000000cH
; Line 2617
	lea	eax, DWORD PTR _dstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
; Line 2618
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2619
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@beginRRULE:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@beginRRULE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@beginRRULE:
	DD	1
	DD	$LN7@beginRRULE
$LN7@beginRRULE:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN5@beginRRULE
$LN5@beginRRULE:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _dstr$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?beginRRULE@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@HAAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::beginRRULE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_writer$ = 8						; size = 4
_until$ = 12						; size = 4
_status$ = 16						; size = 4
?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::VTimeZone::appendUNTIL, COMDAT
; _this$ = ecx
; Line 2625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2626
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@appendUNTI
; Line 2627
	jmp	SHORT $LN3@appendUNTI
$LN2@appendUNTI:
; Line 2629
	mov	esi, esp
	mov	ecx, DWORD PTR _until$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN3@appendUNTI
; Line 2630
	push	59					; 0000003bH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2631
	push	OFFSET _ICAL_UNTIL
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXPB_W@Z	; icu_56::VTZWriter::write
; Line 2632
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEX_W@Z	; icu_56::VTZWriter::write
; Line 2633
	mov	eax, DWORD PTR _until$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	call	?write@VTZWriter@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::VTZWriter::write
$LN3@appendUNTI:
; Line 2635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?appendUNTIL@VTimeZone@icu_56@@ABEXAAVVTZWriter@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::VTimeZone::appendUNTIL
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\digitlst.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
?gDecimal@?1??getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ@4DA DB 01H DUP (?) ; `icu_56::DigitList::getStrtodDecimalSeparator'::`2'::gDecimal
?gDecimal@?1??getDouble@DigitList@icu_56@@QBENXZ@4DA DB 01H DUP (?) ; `icu_56::DigitList::getDouble'::`2'::gDecimal
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T79853 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T79853[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T79853[ebp]
	or	ecx, 1
	mov	DWORD PTR $T79853[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T36097 = -312						; size = 64
_i$36092 = -45						; size = 1
_sym$36090 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$36090[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$36090[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$36092[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$36092[ebp]
	add	al, 1
	mov	BYTE PTR _i$36092[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$36092[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$36090[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$36090[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$36090[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36097[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$36092[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T36097[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36097[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T79875 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T79875[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T79875[ebp]
	or	ecx, 1
	mov	DWORD PTR $T79875[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??8DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator==
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	??0DigitInterval@icu_56@@QAE@XZ			; icu_56::DigitInterval::DigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitInterval@icu_56@@QAE@XZ PROC			; icu_56::DigitInterval::DigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitinterval.h
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitInterval@icu_56@@QAE@XZ ENDP			; icu_56::DigitInterval::DigitInterval
_TEXT	ENDS
PUBLIC	?clear@DigitInterval@icu_56@@QAEXXZ		; icu_56::DigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@DigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@DigitInterval@icu_56@@QAEXXZ PROC		; icu_56::DigitInterval::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@DigitInterval@icu_56@@QAEXXZ ENDP		; icu_56::DigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@DigitInterval@icu_56@@QBECABV12@@Z	; icu_56::DigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitInterval@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitInterval::equals, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv68[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitInterval@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitInterval::equals
_TEXT	ENDS
PUBLIC	?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_smallest$ = 8						; size = 4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	xor	eax, eax
	cmp	DWORD PTR _smallest$[ebp], 0
	setge	al
	sub	eax, 1
	and	eax, DWORD PTR _smallest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_largest$ = 8						; size = 4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	xor	eax, eax
	cmp	DWORD PTR _largest$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _largest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getIntDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getIntDigitCount, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getIntDigitCount
_TEXT	ENDS
PUBLIC	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getFracDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getFracDigitCount, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -2147483648		; 80000000H
	jne	SHORT $LN3@getFracDig
	mov	DWORD PTR tv68[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@getFracDig
$LN3@getFracDig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	neg	edx
	mov	DWORD PTR tv68[ebp], edx
$LN4@getFracDig:
	mov	eax, DWORD PTR tv68[ebp]
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getFracDigitCount
_TEXT	ENDS
PUBLIC	?length@DigitInterval@icu_56@@QBEHXZ		; icu_56::DigitInterval::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@DigitInterval@icu_56@@QBEHXZ PROC		; icu_56::DigitInterval::length, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+4]
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@DigitInterval@icu_56@@QBEHXZ ENDP		; icu_56::DigitInterval::length
_TEXT	ENDS
PUBLIC	?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitInterval::operator=
_TEXT	ENDS
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
PUBLIC	??0DigitList@icu_56@@QAE@XZ			; icu_56::DigitList::DigitList
EXTRN	_uprv_decContextSetRounding_56:PROC
EXTRN	_uprv_decContextDefault_56:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitlst.cpp
xdata$x	SEGMENT
__unwindtable$??0DigitList@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitList@icu_56@@QAE@XZ$0
__ehfuncinfo$??0DigitList@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitList@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DigitList@icu_56@@QAE@XZ PROC			; icu_56::DigitList::DigitList, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitList@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 69
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_uprv_decContextDefault_56
	add	esp, 8
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
; Line 71
	push	3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_uprv_decContextSetRounding_56
	add	esp, 8
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
; Line 77
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 78
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitList@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
__ehhandler$??0DigitList@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitList@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitList@icu_56@@QAE@XZ ENDP			; icu_56::DigitList::DigitList
PUBLIC	??1DigitList@icu_56@@QAE@XZ			; icu_56::DigitList::~DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DigitList@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DigitList@icu_56@@QAE@XZ PROC			; icu_56::DigitList::~DigitList, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DigitList@icu_56@@QAE@XZ ENDP			; icu_56::DigitList::~DigitList
_TEXT	ENDS
PUBLIC	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::DigitList::operator=
PUBLIC	??0DigitList@icu_56@@QAE@ABV01@@Z		; icu_56::DigitList::DigitList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitList@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitList@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0DigitList@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitList@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitList@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0DigitList@icu_56@@QAE@ABV01@@Z PROC			; icu_56::DigitList::DigitList, COMDAT
; _this$ = ecx
; Line 90
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitList@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 92
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
; Line 93
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitList@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
__ehhandler$??0DigitList@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitList@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitList@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::DigitList::DigitList
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	__imp_??1Mutex@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z:PROC
EXTRN	_uprv_decNumberCopy_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitList@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_mutex$72323 = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4DigitList@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitList::operator=, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	je	$LN5@operator@2
; Line 104
	push	1
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _other$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 106
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	cmp	esi, eax
	jle	SHORT $LN4@operator@2
; Line 107
	push	0
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN4@operator@2:
; Line 111
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 112
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_uprv_decNumberCopy_56
	add	esp, 8
; Line 118
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _mutex$72323[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+104], 1
	jne	SHORT $LN3@operator@2
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	fld	QWORD PTR [ecx+96]
	fstp	QWORD PTR [eax+96]
	jmp	SHORT $LN1@operator@2
$LN3@operator@2:
; Line 122
	mov	eax, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [eax+104], 2
	jne	SHORT $LN1@operator@2
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+96], edx
	mov	ecx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+100], ecx
$LN1@operator@2:
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax+104], edx
; Line 126
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72323[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@operator@2:
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
; Line 129
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN11@operator@2:
	DD	1
	DD	$LN10@operator@2
$LN10@operator@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@operator@2
$LN9@operator@2:
	DB	109					; 0000006dH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
??4DigitList@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitList::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uprv_decNumberCompare_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv79 = -277						; size = 1
_result$ = -77						; size = 1
_c$ = -68						; size = 28
_n$ = -32						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_that$ = 8						; size = 4
??8DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator==, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN1@operator@3
; Line 138
	mov	al, 1
	jmp	SHORT $LN2@operator@3
$LN1@operator@3:
; Line 142
	push	0
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	call	_uprv_decContextDefault_56
	add	esp, 8
; Line 143
	mov	DWORD PTR _c$[ebp], 1
; Line 144
	mov	DWORD PTR _c$[ebp+16], 0
; Line 146
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	lea	edx, DWORD PTR _n$[ebp]
	push	edx
	call	_uprv_decNumberCompare_56
	add	esp, 16					; 00000010H
; Line 147
	movzx	eax, BYTE PTR _n$[ebp+9]
	test	eax, eax
	jne	SHORT $LN4@operator@3
	cmp	DWORD PTR _n$[ebp], 1
	jne	SHORT $LN4@operator@3
	movzx	ecx, BYTE PTR _n$[ebp+8]
	and	ecx, 112				; 00000070H
	jne	SHORT $LN4@operator@3
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
	mov	BYTE PTR tv79[ebp], 0
$LN5@operator@3:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR _result$[ebp], dl
; Line 148
	mov	al, BYTE PTR _result$[ebp]
$LN2@operator@3:
; Line 149
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@operator@3:
	DD	2
	DD	$LN8@operator@3
$LN8@operator@3:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator@3
	DD	-68					; ffffffbcH
	DD	28					; 0000001cH
	DD	$LN7@operator@3
$LN7@operator@3:
	DB	99					; 00000063H
	DB	0
$LN6@operator@3:
	DB	110					; 0000006eH
	DB	0
??8DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator==
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?compare@DigitList@icu_56@@QAEHABV12@@Z		; icu_56::DigitList::compare
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@DigitList@icu_56@@QAEHABV12@@Z
_TEXT	SEGMENT
_savedDigits$ = -44					; size = 4
_result$ = -32						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_other$ = 8						; size = 4
?compare@DigitList@icu_56@@QAEHABV12@@Z PROC		; icu_56::DigitList::compare, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _savedDigits$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_uprv_decNumberCompare_56
	add	esp, 16					; 00000010H
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedDigits$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 163
	movzx	eax, BYTE PTR _result$[ebp+9]
	test	eax, eax
	jne	SHORT $LN6@compare
	cmp	DWORD PTR _result$[ebp], 1
	jne	SHORT $LN6@compare
	movzx	eax, BYTE PTR _result$[ebp+8]
	and	eax, 112				; 00000070H
	jne	SHORT $LN6@compare
; Line 164
	xor	eax, eax
	jmp	SHORT $LN7@compare
	jmp	SHORT $LN7@compare
$LN6@compare:
; Line 165
	movzx	eax, BYTE PTR _result$[ebp+8]
	and	eax, 112				; 00000070H
	je	SHORT $LN4@compare
; Line 166
	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN7@compare
	jmp	SHORT $LN7@compare
$LN4@compare:
; Line 167
	movzx	eax, BYTE PTR _result$[ebp+8]
	and	eax, 128				; 00000080H
	je	SHORT $LN2@compare
; Line 168
	or	eax, -1
	jmp	SHORT $LN7@compare
; Line 169
	jmp	SHORT $LN7@compare
$LN2@compare:
; Line 170
	mov	eax, 1
$LN7@compare:
; Line 172
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@compare
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@compare:
	DD	1
	DD	$LN10@compare
$LN10@compare:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN9@compare
$LN9@compare:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?compare@DigitList@icu_56@@QAEHABV12@@Z ENDP		; icu_56::DigitList::compare
_TEXT	ENDS
PUBLIC	?reduce@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::reduce
EXTRN	_uprv_decNumberReduce_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reduce@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?reduce@DigitList@icu_56@@QAEXXZ PROC			; icu_56::DigitList::reduce, COMDAT
; _this$ = ecx
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberReduce_56
	add	esp, 12					; 0000000cH
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reduce@DigitList@icu_56@@QAEXXZ ENDP			; icu_56::DigitList::reduce
_TEXT	ENDS
PUBLIC	?trim@DigitList@icu_56@@QAEXXZ			; icu_56::DigitList::trim
EXTRN	_uprv_decNumberTrim_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?trim@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?trim@DigitList@icu_56@@QAEXXZ PROC			; icu_56::DigitList::trim, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberTrim_56
	add	esp, 4
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?trim@DigitList@icu_56@@QAEXXZ ENDP			; icu_56::DigitList::trim
_TEXT	ENDS
PUBLIC	?clear@DigitList@icu_56@@QAEXXZ			; icu_56::DigitList::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@DigitList@icu_56@@QAEXXZ PROC			; icu_56::DigitList::clear, COMDAT
; _this$ = ecx
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
; Line 197
	push	3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_uprv_decContextSetRounding_56
	add	esp, 8
; Line 198
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 199
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@DigitList@icu_56@@QAEXXZ ENDP			; icu_56::DigitList::clear
_TEXT	ENDS
PUBLIC	?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ; icu_56::DigitList::setRoundingMode
EXTRN	_uprv_decContextGetRounding_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z
_TEXT	SEGMENT
tv64 = -220						; size = 4
_r$ = -20						; size = 4
_this$ = -8						; size = 4
_m$ = 8							; size = 4
?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z PROC ; icu_56::DigitList::setRoundingMode, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 257
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 7
	ja	SHORT $LN1@setRoundin
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN14@setRoundin[ecx*4]
$LN9@setRoundin:
; Line 258
	mov	DWORD PTR _r$[ebp], 0
	jmp	SHORT $LN10@setRoundin
$LN8@setRoundin:
; Line 259
	mov	DWORD PTR _r$[ebp], 6
	jmp	SHORT $LN10@setRoundin
$LN7@setRoundin:
; Line 260
	mov	DWORD PTR _r$[ebp], 5
	jmp	SHORT $LN10@setRoundin
$LN6@setRoundin:
; Line 261
	mov	DWORD PTR _r$[ebp], 1
	jmp	SHORT $LN10@setRoundin
$LN5@setRoundin:
; Line 262
	mov	DWORD PTR _r$[ebp], 3
	jmp	SHORT $LN10@setRoundin
$LN4@setRoundin:
; Line 263
	mov	DWORD PTR _r$[ebp], 4
	jmp	SHORT $LN10@setRoundin
$LN3@setRoundin:
; Line 264
	mov	DWORD PTR _r$[ebp], 2
	jmp	SHORT $LN10@setRoundin
$LN2@setRoundin:
; Line 265
	mov	DWORD PTR _r$[ebp], 3
	jmp	SHORT $LN10@setRoundin
$LN1@setRoundin:
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_uprv_decContextGetRounding_56
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
$LN10@setRoundin:
; Line 271
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_uprv_decContextSetRounding_56
	add	esp, 8
; Line 273
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN14@setRoundin:
	DD	$LN9@setRoundin
	DD	$LN8@setRoundin
	DD	$LN7@setRoundin
	DD	$LN6@setRoundin
	DD	$LN5@setRoundin
	DD	$LN4@setRoundin
	DD	$LN3@setRoundin
	DD	$LN2@setRoundin
?setRoundingMode@DigitList@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ENDP ; icu_56::DigitList::setRoundingMode
_TEXT	ENDS
PUBLIC	?setPositive@DigitList@icu_56@@QAEXC@Z		; icu_56::DigitList::setPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPositive@DigitList@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 1
?setPositive@DigitList@icu_56@@QAEXC@Z PROC		; icu_56::DigitList::setPositive, COMDAT
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	movsx	eax, BYTE PTR _s$[ebp]
	test	eax, eax
	je	SHORT $LN2@setPositiv
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, -129				; ffffff7fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR [ecx+8], dl
; Line 282
	jmp	SHORT $LN1@setPositiv
$LN2@setPositiv:
; Line 283
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR [ecx+8], dl
$LN1@setPositiv:
; Line 285
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 286
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPositive@DigitList@icu_56@@QAEXC@Z ENDP		; icu_56::DigitList::setPositive
_TEXT	ENDS
PUBLIC	??_C@_1BO@DCJBGLJE@?$AAd?$AA?9?$AA1?$AA?$DM?$AA?5?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@BJGAHGFL@?$AAd?$AA?9?$AA1?$AA?$DO?$AA?9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FG@EKJHPOJE@?$AA?$CI?$AAf?$AAD?$AAe?$AAc?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?9?$AA?$DO?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA0?$AAx?$AA4?$AA0?$AA?$HM?$AA0?$AAx?$AA2?$AA0?$AA?$HM?$AA0@ ; `string'
PUBLIC	??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA ; `icu_56::DigitList::setDecimalAt'::`2'::__LINE__Var
PUBLIC	?setDecimalAt@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::setDecimalAt
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1BO@DCJBGLJE@?$AAd?$AA?9?$AA1?$AA?$DM?$AA?5?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@DCJBGLJE@?$AAd?$AA?9?$AA1?$AA?$DM?$AA?5?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@ DB 'd'
	DB	00H, '-', 00H, '1', 00H, '<', 00H, ' ', 00H, '9', 00H, '9', 00H
	DB	'9', 00H, '9', 00H, '9', 00H, '9', 00H, '9', 00H, '9', 00H, '9'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@BJGAHGFL@?$AAd?$AA?9?$AA1?$AA?$DO?$AA?9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@BJGAHGFL@?$AAd?$AA?9?$AA1?$AA?$DO?$AA?9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@ DB 'd'
	DB	00H, '-', 00H, '1', 00H, '>', 00H, '-', 00H, '9', 00H, '9', 00H
	DB	'9', 00H, '9', 00H, '9', 00H, '9', 00H, '9', 00H, '9', 00H, '9'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@EKJHPOJE@?$AA?$CI?$AAf?$AAD?$AAe?$AAc?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?9?$AA?$DO?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA0?$AAx?$AA4?$AA0?$AA?$HM?$AA0?$AAx?$AA2?$AA0?$AA?$HM?$AA0@
CONST	SEGMENT
??_C@_1FG@EKJHPOJE@?$AA?$CI?$AAf?$AAD?$AAe?$AAc?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?9?$AA?$DO?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA0?$AAx?$AA4?$AA0?$AA?$HM?$AA0?$AAx?$AA2?$AA0?$AA?$HM?$AA0@ DB '('
	DB	00H, 'f', 00H, 'D', 00H, 'e', 00H, 'c', 00H, 'N', 00H, 'u', 00H
	DB	'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'b'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, ' ', 00H, '&', 00H, ' ', 00H
	DB	'(', 00H, '0', 00H, 'x', 00H, '4', 00H, '0', 00H, '|', 00H, '0'
	DB	00H, 'x', 00H, '2', 00H, '0', 00H, '|', 00H, '0', 00H, 'x', 00H
	DB	'1', 00H, '0', 00H, ')', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'd', 00H
	DB	'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'l', 00H, 's', 00H, 't'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA DD 0122H ; `icu_56::DigitList::setDecimalAt'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?setDecimalAt@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_adjustedDigits$ = -20					; size = 4
_this$ = -8						; size = 4
_d$ = 8							; size = 4
?setDecimalAt@DigitList@icu_56@@QAEXH@Z PROC		; icu_56::DigitList::setDecimalAt, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 291
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN4@setDecimal
	mov	eax, DWORD PTR ?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FG@EKJHPOJE@?$AA?$CI?$AAf?$AAD?$AAe?$AAc?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?9?$AA?$DO?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA0?$AAx?$AA4?$AA0?$AA?$HM?$AA0?$AAx?$AA2?$AA0?$AA?$HM?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@setDecimal:
; Line 292
	mov	eax, DWORD PTR _d$[ebp]
	sub	eax, 1
	cmp	eax, -999999999				; c4653601H
	jg	SHORT $LN5@setDecimal
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@BJGAHGFL@?$AAd?$AA?9?$AA1?$AA?$DO?$AA?9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@setDecimal:
; Line 293
	mov	eax, DWORD PTR _d$[ebp]
	sub	eax, 1
	cmp	eax, 999999999				; 3b9ac9ffH
	jl	SHORT $LN6@setDecimal
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setDecimalAt@DigitList@icu_56@@QAEXH@Z@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BO@DCJBGLJE@?$AAd?$AA?9?$AA1?$AA?$DM?$AA?5?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA9?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setDecimal:
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _adjustedDigits$[ebp], edx
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN1@setDecimal
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN1@setDecimal
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	jne	SHORT $LN1@setDecimal
; Line 297
	mov	DWORD PTR _adjustedDigits$[ebp], 0
$LN1@setDecimal:
; Line 299
	mov	eax, DWORD PTR _d$[ebp]
	sub	eax, DWORD PTR _adjustedDigits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setDecimalAt@DigitList@icu_56@@QAEXH@Z ENDP		; icu_56::DigitList::setDecimalAt
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??getDecimalAt@DigitList@icu_56@@QAEHXZ@4JA ; `icu_56::DigitList::getDecimalAt'::`2'::__LINE__Var
PUBLIC	?getDecimalAt@DigitList@icu_56@@QAEHXZ		; icu_56::DigitList::getDecimalAt
;	COMDAT ?__LINE__Var@?1??getDecimalAt@DigitList@icu_56@@QAEHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getDecimalAt@DigitList@icu_56@@QAEHXZ@4JA DD 0130H ; `icu_56::DigitList::getDecimalAt'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getDecimalAt@DigitList@icu_56@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDecimalAt@DigitList@icu_56@@QAEHXZ PROC		; icu_56::DigitList::getDecimalAt, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN6@getDecimal
	mov	eax, DWORD PTR ?__LINE__Var@?1??getDecimalAt@DigitList@icu_56@@QAEHXZ@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FG@EKJHPOJE@?$AA?$CI?$AAf?$AAD?$AAe?$AAc?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?9?$AA?$DO?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA0?$AAx?$AA4?$AA0?$AA?$HM?$AA0?$AAx?$AA2?$AA0?$AA?$HM?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getDecimal:
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN1@getDecimal
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN1@getDecimal
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN2@getDecimal
$LN1@getDecimal:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN3@getDecimal
$LN2@getDecimal:
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN4@getDecimal
$LN3@getDecimal:
; Line 309
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, DWORD PTR [eax]
	mov	eax, ecx
$LN4@getDecimal:
; Line 310
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDecimalAt@DigitList@icu_56@@QAEHXZ ENDP		; icu_56::DigitList::getDecimalAt
_TEXT	ENDS
PUBLIC	??_C@_1CK@IAJJLIHK@?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?4?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??setCount@DigitList@icu_56@@QAEXH@Z@4JA ; `icu_56::DigitList::setCount'::`2'::__LINE__Var
PUBLIC	?setCount@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::setCount
;	COMDAT ??_C@_1CK@IAJJLIHK@?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?4?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@IAJJLIHK@?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?4?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$AA@ DB 'c'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'f', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, '.'
	DB	00H, 'd', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??setCount@DigitList@icu_56@@QAEXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??setCount@DigitList@icu_56@@QAEXH@Z@4JA DD 0139H ; `icu_56::DigitList::setCount'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?setCount@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?setCount@DigitList@icu_56@@QAEXH@Z PROC		; icu_56::DigitList::setCount, COMDAT
; _this$ = ecx
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN4@setCount
	mov	edx, DWORD PTR ?__LINE__Var@?1??setCount@DigitList@icu_56@@QAEXH@Z@4JA
	add	edx, 1
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CK@IAJJLIHK@?$AAc?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?4?$AAd?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@setCount:
; Line 315
	cmp	DWORD PTR _c$[ebp], 0
	jne	SHORT $LN1@setCount
; Line 318
	mov	DWORD PTR _c$[ebp], 1
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR [ecx+9], 0
$LN1@setCount:
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setCount@DigitList@icu_56@@QAEXH@Z ENDP		; icu_56::DigitList::setCount
_TEXT	ENDS
PUBLIC	?getCount@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::getCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCount@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCount@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::getCount, COMDAT
; _this$ = ecx
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN2@getCount
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN2@getCount
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	jne	SHORT $LN2@getCount
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN2@getCount
; Line 330
	xor	eax, eax
	jmp	SHORT $LN3@getCount
; Line 331
	jmp	SHORT $LN3@getCount
$LN2@getCount:
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
$LN3@getCount:
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCount@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::getCount
_TEXT	ENDS
PUBLIC	??_C@_1CC@INIKOOMG@?$AAv?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??setDigit@DigitList@icu_56@@QAEXHD@Z@4JA ; `icu_56::DigitList::setDigit'::`2'::__LINE__Var
PUBLIC	?setDigit@DigitList@icu_56@@QAEXHD@Z		; icu_56::DigitList::setDigit
;	COMDAT ??_C@_1CC@INIKOOMG@?$AAv?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@INIKOOMG@?$AAv?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@ DB 'v'
	DB	00H, '>', 00H, '=', 00H, '''', 00H, '0', 00H, '''', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'v', 00H, '<', 00H, '=', 00H, ''''
	DB	00H, '9', 00H, '''', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ DB 'i', 00H
	DB	'<', 00H, 'c', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??setDigit@DigitList@icu_56@@QAEXHD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??setDigit@DigitList@icu_56@@QAEXHD@Z@4JA DD 0151H ; `icu_56::DigitList::setDigit'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?setDigit@DigitList@icu_56@@QAEXHD@Z
_TEXT	SEGMENT
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_v$ = 12						; size = 1
?setDigit@DigitList@icu_56@@QAEXHD@Z PROC		; icu_56::DigitList::setDigit, COMDAT
; _this$ = ecx
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _count$[ebp], edx
; Line 339
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jl	SHORT $LN3@setDigit
	mov	ecx, DWORD PTR ?__LINE__Var@?1??setDigit@DigitList@icu_56@@QAEXHD@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@setDigit:
; Line 340
	movsx	eax, BYTE PTR _v$[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN4@setDigit
	movsx	ecx, BYTE PTR _v$[ebp]
	cmp	ecx, 57					; 00000039H
	jle	SHORT $LN5@setDigit
$LN4@setDigit:
	mov	edx, DWORD PTR ?__LINE__Var@?1??setDigit@DigitList@icu_56@@QAEXHD@Z@4JA
	add	edx, 3
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@INIKOOMG@?$AAv?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAv?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@setDigit:
; Line 341
	movsx	eax, BYTE PTR _v$[ebp]
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _v$[ebp], al
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR _v$[ebp]
	mov	BYTE PTR [ecx+edx+8], al
; Line 343
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setDigit@DigitList@icu_56@@QAEXHD@Z ENDP		; icu_56::DigitList::setDigit
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??getDigit@DigitList@icu_56@@QAEDH@Z@4JA ; `icu_56::DigitList::getDigit'::`2'::__LINE__Var
PUBLIC	?getDigit@DigitList@icu_56@@QAEDH@Z		; icu_56::DigitList::getDigit
;	COMDAT ?__LINE__Var@?1??getDigit@DigitList@icu_56@@QAEDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getDigit@DigitList@icu_56@@QAEDH@Z@4JA DD 015bH ; `icu_56::DigitList::getDigit'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getDigit@DigitList@icu_56@@QAEDH@Z
_TEXT	SEGMENT
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getDigit@DigitList@icu_56@@QAEDH@Z PROC		; icu_56::DigitList::getDigit, COMDAT
; _this$ = ecx
; Line 347
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 348
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _count$[ebp], edx
; Line 349
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jl	SHORT $LN3@getDigit
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getDigit@DigitList@icu_56@@QAEDH@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getDigit:
; Line 350
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [ecx+edx+8]
	add	eax, 48					; 00000030H
; Line 351
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDigit@DigitList@icu_56@@QAEDH@Z ENDP		; icu_56::DigitList::getDigit
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??getDigitValue@DigitList@icu_56@@QAEEH@Z@4JA ; `icu_56::DigitList::getDigitValue'::`2'::__LINE__Var
PUBLIC	?getDigitValue@DigitList@icu_56@@QAEEH@Z	; icu_56::DigitList::getDigitValue
;	COMDAT ?__LINE__Var@?1??getDigitValue@DigitList@icu_56@@QAEEH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getDigitValue@DigitList@icu_56@@QAEEH@Z@4JA DD 0163H ; `icu_56::DigitList::getDigitValue'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getDigitValue@DigitList@icu_56@@QAEEH@Z
_TEXT	SEGMENT
_count$ = -20						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?getDigitValue@DigitList@icu_56@@QAEEH@Z PROC		; icu_56::DigitList::getDigitValue, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _count$[ebp], edx
; Line 357
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jl	SHORT $LN3@getDigitVa
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getDigitValue@DigitList@icu_56@@QAEEH@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BA@DLGOMFHK@?$AAi?$AA?$DM?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getDigitVa:
; Line 358
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [ecx+edx+8]
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDigitValue@DigitList@icu_56@@QAEEH@Z ENDP		; icu_56::DigitList::getDigitValue
_TEXT	ENDS
PUBLIC	??_C@_1DC@EOAAEPGI@?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??append@DigitList@icu_56@@QAEXD@Z@4JA ; `icu_56::DigitList::append'::`2'::__LINE__Var
PUBLIC	?append@DigitList@icu_56@@QAEXD@Z		; icu_56::DigitList::append
;	COMDAT ??_C@_1DC@EOAAEPGI@?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@EOAAEPGI@?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@ DB 'd'
	DB	00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, '>', 00H, '=', 00H
	DB	'''', 00H, '0', 00H, '''', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'd', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, '<', 00H
	DB	'=', 00H, '''', 00H, '9', 00H, '''', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??append@DigitList@icu_56@@QAEXD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??append@DigitList@icu_56@@QAEXD@Z@4JA DD 0173H ; `icu_56::DigitList::append'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?append@DigitList@icu_56@@QAEXD@Z
_TEXT	SEGMENT
_i$72469 = -32						; size = 4
_nDigits$72467 = -20					; size = 4
_this$ = -8						; size = 4
_digit$ = 8						; size = 1
?append@DigitList@icu_56@@QAEXD@Z PROC			; icu_56::DigitList::append, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 372
	movsx	eax, BYTE PTR _digit$[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN9@append
	movsx	ecx, BYTE PTR _digit$[ebp]
	cmp	ecx, 57					; 00000039H
	jle	SHORT $LN10@append
$LN9@append:
	mov	edx, DWORD PTR ?__LINE__Var@?1??append@DigitList@icu_56@@QAEXD@Z@4JA
	add	edx, 1
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DC@EOAAEPGI@?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DO?$AA?$DN?$AA?8?$AA0?$AA?8?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAg?$AAi?$AAt?$AA?$DM?$AA?$DN?$AA?8?$AA9?$AA?8?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@append:
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN6@append
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN6@append
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	jne	SHORT $LN6@append
; Line 379
	movsx	eax, BYTE PTR _digit$[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	BYTE PTR [edx+9], al
; Line 380
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx], 1
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+4], edx
; Line 382
	jmp	$LN5@append
$LN6@append:
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _nDigits$72467[ebp], edx
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nDigits$72467[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN5@append
; Line 386
	mov	eax, DWORD PTR _nDigits$72467[ebp]
	mov	DWORD PTR _i$72469[ebp], eax
	jmp	SHORT $LN3@append
$LN2@append:
	mov	eax, DWORD PTR _i$72469[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$72469[ebp], eax
$LN3@append:
	cmp	DWORD PTR _i$72469[ebp], 0
	jle	SHORT $LN1@append
; Line 387
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	edx, DWORD PTR _i$72469[ebp]
	mov	esi, DWORD PTR _i$72469[ebp]
	mov	cl, BYTE PTR [ecx+esi+8]
	mov	BYTE PTR [eax+edx+9], cl
; Line 388
	jmp	SHORT $LN2@append
$LN1@append:
; Line 389
	movsx	eax, BYTE PTR _digit$[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	BYTE PTR [edx+9], al
; Line 390
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx], edx
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+4], edx
$LN5@append:
; Line 397
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 398
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@DigitList@icu_56@@QAEXD@Z ENDP			; icu_56::DigitList::append
_TEXT	ENDS
PUBLIC	??_C@_06FINPMJPC@?$CF?$CL1?41f?$AA@		; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ ; icu_56::DigitList::getStrtodDecimalSeparator
EXTRN	__imp__sprintf:PROC
;	COMDAT ??_C@_06FINPMJPC@?$CF?$CL1?41f?$AA@
CONST	SEGMENT
??_C@_06FINPMJPC@?$CF?$CL1?41f?$AA@ DB '%+1.1f', 00H	; `string'
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ
_TEXT	SEGMENT
_rep$72480 = -52					; size = 19
_mutex$72478 = -24					; size = 4
_result$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
?getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ PROC	; icu_56::DigitList::getStrtodDecimalSeparator, COMDAT
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 405
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _mutex$72478[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 406
	mov	al, BYTE PTR ?gDecimal@?1??getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ@4DA
	mov	BYTE PTR _result$[ebp], al
; Line 407
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	jne	SHORT $LN1@getStrtodD
; Line 413
	mov	esi, esp
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_06FINPMJPC@?$CF?$CL1?41f?$AA@
	lea	eax, DWORD PTR _rep$72480[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 414
	mov	al, BYTE PTR _rep$72480[ebp+2]
	mov	BYTE PTR _result$[ebp], al
; Line 415
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR ?gDecimal@?1??getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ@4DA, al
$LN1@getStrtodD:
; Line 417
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72478[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 418
	mov	al, BYTE PTR _result$[ebp]
; Line 419
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getStrtodD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@getStrtodD:
	DD	2
	DD	$LN7@getStrtodD
$LN7@getStrtodD:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@getStrtodD
	DD	-52					; ffffffccH
	DD	19					; 00000013H
	DD	$LN6@getStrtodD
$LN6@getStrtodD:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
$LN5@getStrtodD:
	DB	109					; 0000006dH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?getStrtodDecimalSeparator@DigitList@icu_56@@SADXZ ENDP	; icu_56::DigitList::getStrtodDecimalSeparator
_TEXT	ENDS
PUBLIC	??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,33>::~MaybeStackArray<char,33>
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	??_C@_1EK@FDIIEIOF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AA?$CG?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAD?$AAB?$AAL?$AA_?$AAD?$AAI?$AAG?$AAI?$AAT@ ; `string'
PUBLIC	?__LINE__Var@?1??getDouble@DigitList@icu_56@@QBENXZ@4JA ; `icu_56::DigitList::getDouble'::`2'::__LINE__Var
PUBLIC	??A?$MaybeStackArray@D$0CB@@icu_56@@QAEAADH@Z	; icu_56::MaybeStackArray<char,33>::operator[]
PUBLIC	?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,33>::getAlias
PUBLIC	?round@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::round
PUBLIC	??0?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ	; icu_56::MaybeStackArray<char,33>::MaybeStackArray<char,33>
PUBLIC	__real@bff0000000000000
PUBLIC	?isZero@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isZero
PUBLIC	__$ArrayPad$
PUBLIC	?getDouble@DigitList@icu_56@@QBENXZ		; icu_56::DigitList::getDouble
EXTRN	__imp__strtod:PROC
EXTRN	_strlen:PROC
EXTRN	_uprv_decNumberToString_56:PROC
EXTRN	__imp_?max@?$numeric_limits@N@std@@SANXZ:PROC
EXTRN	__imp_?infinity@?$numeric_limits@N@std@@SANXZ:PROC
;	COMDAT ??_C@_1EK@FDIIEIOF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AA?$CG?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAD?$AAB?$AAL?$AA_?$AAD?$AAI?$AAG?$AAI?$AAT@
CONST	SEGMENT
??_C@_1EK@FDIIEIOF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AA?$CG?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAD?$AAB?$AAL?$AA_?$AAD?$AAI?$AAG?$AAI?$AAT@ DB ':'
	DB	00H, ':', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, '(', 00H, '&', 00H, 's', 00H, '[', 00H, '0'
	DB	00H, ']', 00H, ')', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'M', 00H
	DB	'A', 00H, 'X', 00H, '_', 00H, 'D', 00H, 'B', 00H, 'L', 00H, '_'
	DB	00H, 'D', 00H, 'I', 00H, 'G', 00H, 'I', 00H, 'T', 00H, 'S', 00H
	DB	'+', 00H, '1', 00H, '8', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getDouble@DigitList@icu_56@@QBENXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getDouble@DigitList@icu_56@@QBENXZ@4JA DD 01b0H ; `icu_56::DigitList::getDouble'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getDouble@DigitList@icu_56@@QBENXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$3
__ehfuncinfo$?getDouble@DigitList@icu_56@@QBENXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getDouble@DigitList@icu_56@@QBENXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getDouble@DigitList@icu_56@@QBENXZ
_TEXT	SEGMENT
$T80152 = -536						; size = 8
$T80153 = -520						; size = 8
_nonConstThis$72560 = -312				; size = 4
_mutex$72559 = -300					; size = 4
_end$72558 = -288					; size = 4
_decimalPt$72556 = -276					; size = 4
_numToConvert$72550 = -264				; size = 112
_s$72548 = -144						; size = 44
_tDouble$ = -92						; size = 8
_rep$72496 = -76					; size = 19
_mutex$72488 = -48					; size = 4
_decimalSeparator$ = -33				; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getDouble@DigitList@icu_56@@QBENXZ PROC		; icu_56::DigitList::getDouble, COMDAT
; _this$ = ecx
; Line 432
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getDouble@DigitList@icu_56@@QBENXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 436
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _mutex$72488[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 1
	jne	SHORT $LN16@getDouble
; Line 438
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+96]
	fstp	QWORD PTR $T80152[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72488[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T80152[ebp]
	jmp	$LN17@getDouble
	jmp	SHORT $LN14@getDouble
$LN16@getDouble:
; Line 439
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 2
	jne	SHORT $LN14@getDouble
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+96]
	fstp	QWORD PTR $T80153[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72488[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fld	QWORD PTR $T80153[ebp]
	jmp	$LN17@getDouble
$LN14@getDouble:
; Line 442
	mov	al, BYTE PTR ?gDecimal@?1??getDouble@DigitList@icu_56@@QBENXZ@4DA
	mov	BYTE PTR _decimalSeparator$[ebp], al
; Line 443
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72488[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 445
	movsx	eax, BYTE PTR _decimalSeparator$[ebp]
	test	eax, eax
	jne	SHORT $LN13@getDouble
; Line 451
	mov	esi, esp
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_06FINPMJPC@?$CF?$CL1?41f?$AA@
	lea	eax, DWORD PTR _rep$72496[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 452
	mov	al, BYTE PTR _rep$72496[ebp+2]
	mov	BYTE PTR _decimalSeparator$[ebp], al
$LN13@getDouble:
; Line 455
	fldz
	fstp	QWORD PTR _tDouble$[ebp]
; Line 456
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@getDouble
; Line 457
	fldz
	fstp	QWORD PTR _tDouble$[ebp]
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	je	SHORT $LN11@getDouble
; Line 459
	fld	QWORD PTR _tDouble$[ebp]
	fdiv	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR _tDouble$[ebp]
$LN11@getDouble:
; Line 460
	jmp	$LN5@getDouble
$LN12@getDouble:
; Line 461
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInfinite@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isInfinite
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN9@getDouble
; Line 462
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN8@getDouble
; Line 463
	mov	esi, esp
	call	DWORD PTR __imp_?infinity@?$numeric_limits@N@std@@SANXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _tDouble$[ebp]
; Line 464
	jmp	SHORT $LN7@getDouble
$LN8@getDouble:
; Line 465
	mov	esi, esp
	call	DWORD PTR __imp_?max@?$numeric_limits@N@std@@SANXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _tDouble$[ebp]
$LN7@getDouble:
; Line 467
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isPositive@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isPositive
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN6@getDouble
; Line 468
	fld	QWORD PTR _tDouble$[ebp]
	fchs
	fstp	QWORD PTR _tDouble$[ebp]
$LN6@getDouble:
; Line 470
	jmp	$LN5@getDouble
$LN9@getDouble:
; Line 471
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	??0?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,33>::MaybeStackArray<char,33>
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCount@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getCount
	cmp	eax, 18					; 00000012H
	jle	SHORT $LN4@getDouble
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _numToConvert$72550[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 481
	lea	ecx, DWORD PTR _numToConvert$72550[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 482
	push	18					; 00000012H
	lea	ecx, DWORD PTR _numToConvert$72550[ebp]
	call	?round@DigitList@icu_56@@QAEXH@Z	; icu_56::DigitList::round
; Line 483
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,33>::getAlias
	push	eax
	mov	eax, DWORD PTR _numToConvert$72550[ebp+28]
	push	eax
	call	_uprv_decNumberToString_56
	add	esp, 8
; Line 485
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _numToConvert$72550[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	jmp	SHORT $LN3@getDouble
$LN4@getDouble:
; Line 486
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,33>::getAlias
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberToString_56
	add	esp, 8
$LN3@getDouble:
; Line 488
	push	0
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	??A?$MaybeStackArray@D$0CB@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackArray<char,33>::operator[]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 33					; 00000021H
	jb	SHORT $LN19@getDouble
	mov	eax, DWORD PTR ?__LINE__Var@?1??getDouble@DigitList@icu_56@@QBENXZ@4JA
	add	eax, 56					; 00000038H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EK@FDIIEIOF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AA?$CG?$AAs?$AA?$FL?$AA0?$AA?$FN?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAM?$AAA?$AAX?$AA_?$AAD?$AAB?$AAL?$AA_?$AAD?$AAI?$AAG?$AAI?$AAT@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@getDouble:
; Line 490
	movsx	eax, BYTE PTR _decimalSeparator$[ebp]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN1@getDouble
; Line 491
	push	46					; 0000002eH
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,33>::getAlias
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _decimalPt$72556[ebp], eax
; Line 492
	cmp	DWORD PTR _decimalPt$72556[ebp], 0
	je	SHORT $LN1@getDouble
; Line 493
	mov	eax, DWORD PTR _decimalPt$72556[ebp]
	mov	cl, BYTE PTR _decimalSeparator$[ebp]
	mov	BYTE PTR [eax], cl
$LN1@getDouble:
; Line 496
	mov	DWORD PTR _end$72558[ebp], 0
; Line 497
	mov	esi, esp
	lea	eax, DWORD PTR _end$72558[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ; icu_56::MaybeStackArray<char,33>::getAlias
	push	eax
	call	DWORD PTR __imp__strtod
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	QWORD PTR _tDouble$[ebp]
; Line 498
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$72548[ebp]
	call	??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,33>::~MaybeStackArray<char,33>
$LN5@getDouble:
; Line 500
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _mutex$72559[ebp]
	call	DWORD PTR __imp_??0Mutex@icu_56@@QAE@PAUUMutex@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 501
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _nonConstThis$72560[ebp], eax
; Line 502
	sub	esp, 8
	fld	QWORD PTR _tDouble$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _nonConstThis$72560[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 503
	mov	al, BYTE PTR _decimalSeparator$[ebp]
	mov	BYTE PTR ?gDecimal@?1??getDouble@DigitList@icu_56@@QBENXZ@4DA, al
; Line 504
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72559[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 505
	fld	QWORD PTR _tDouble$[ebp]
$LN17@getDouble:
; Line 506
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@getDouble
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@getDouble:
	DD	6
	DD	$LN31@getDouble
$LN31@getDouble:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN24@getDouble
	DD	-76					; ffffffb4H
	DD	19					; 00000013H
	DD	$LN25@getDouble
	DD	-144					; ffffff70H
	DD	44					; 0000002cH
	DD	$LN26@getDouble
	DD	-264					; fffffef8H
	DD	112					; 00000070H
	DD	$LN27@getDouble
	DD	-288					; fffffee0H
	DD	4
	DD	$LN28@getDouble
	DD	-300					; fffffed4H
	DD	4
	DD	$LN29@getDouble
$LN29@getDouble:
	DB	109					; 0000006dH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN28@getDouble:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN27@getDouble:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN26@getDouble:
	DB	115					; 00000073H
	DB	0
$LN25@getDouble:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
$LN24@getDouble:
	DB	109					; 0000006dH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72488[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$1:
	lea	ecx, DWORD PTR _s$72548[ebp]
	jmp	??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ ; icu_56::MaybeStackArray<char,33>::~MaybeStackArray<char,33>
__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$2:
	lea	ecx, DWORD PTR _numToConvert$72550[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?getDouble@DigitList@icu_56@@QBENXZ$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _mutex$72559[ebp]
	call	DWORD PTR __imp_??1Mutex@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getDouble@DigitList@icu_56@@QBENXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getDouble@DigitList@icu_56@@QBENXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getDouble@DigitList@icu_56@@QBENXZ ENDP		; icu_56::DigitList::getDouble
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
PUBLIC	?getUpperExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getUpperExponent
PUBLIC	__$ArrayPad$
PUBLIC	?getLong@DigitList@icu_56@@QAEHXZ		; icu_56::DigitList::getLong
EXTRN	_uprv_decNumberToInt32_56:PROC
EXTRN	_uprv_decNumberQuantize_56:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitlst.cpp
xdata$x	SEGMENT
__unwindtable$?getLong@DigitList@icu_56@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getLong@DigitList@icu_56@@QAEHXZ$0
__ehfuncinfo$?getLong@DigitList@icu_56@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getLong@DigitList@icu_56@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getLong@DigitList@icu_56@@QAEHXZ
_TEXT	SEGMENT
_zero$72569 = -276					; size = 112
_copy$72568 = -156					; size = 112
_result$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getLong@DigitList@icu_56@@QAEHXZ PROC			; icu_56::DigitList::getLong, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getLong@DigitList@icu_56@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	DWORD PTR _result$[ebp], 0
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	cmp	eax, 10					; 0000000aH
	jle	SHORT $LN3@getLong
; Line 519
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN4@getLong
$LN3@getLong:
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@getLong
; Line 524
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _copy$72568[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 525
	lea	ecx, DWORD PTR _zero$72569[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _zero$72569[ebp+28]
	push	ecx
	mov	edx, DWORD PTR _copy$72568[ebp+28]
	push	edx
	mov	eax, DWORD PTR _copy$72568[ebp+28]
	push	eax
	call	_uprv_decNumberQuantize_56
	add	esp, 16					; 00000010H
; Line 527
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$72568[ebp+28]
	push	ecx
	call	_uprv_decNumberToInt32_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 528
	lea	ecx, DWORD PTR _zero$72569[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _copy$72568[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	jmp	SHORT $LN1@getLong
$LN2@getLong:
; Line 529
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_uprv_decNumberToInt32_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
$LN1@getLong:
; Line 531
	mov	eax, DWORD PTR _result$[ebp]
$LN4@getLong:
; Line 532
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@getLong
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@getLong:
	DD	2
	DD	$LN11@getLong
$LN11@getLong:
	DD	-156					; ffffff64H
	DD	112					; 00000070H
	DD	$LN8@getLong
	DD	-276					; fffffeecH
	DD	112					; 00000070H
	DD	$LN9@getLong
$LN9@getLong:
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	0
$LN8@getLong:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getLong@DigitList@icu_56@@QAEHXZ$0:
	lea	ecx, DWORD PTR _copy$72568[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?getLong@DigitList@icu_56@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-476]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getLong@DigitList@icu_56@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getLong@DigitList@icu_56@@QAEHXZ ENDP			; icu_56::DigitList::getLong
PUBLIC	?getInt64@DigitList@icu_56@@QAE_JXZ		; icu_56::DigitList::getInt64
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@DigitList@icu_56@@QAE_JXZ
_TEXT	SEGMENT
tv84 = -288						; size = 4
_svalue$ = -88						; size = 8
_v$72583 = -72						; size = 4
_digitIndex$72582 = -60					; size = 4
_i$72578 = -48						; size = 4
_value$ = -36						; size = 8
_numIntDigits$ = -20					; size = 4
_this$ = -8						; size = 4
?getInt64@DigitList@icu_56@@QAE_JXZ PROC		; icu_56::DigitList::getInt64, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 2
	jne	SHORT $LN10@getInt64
; Line 541
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+96]
	mov	edx, DWORD PTR [ecx+100]
	jmp	$LN11@getInt64
$LN10@getInt64:
; Line 547
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	cmp	eax, 19					; 00000013H
	jle	SHORT $LN9@getInt64
; Line 549
	xor	eax, eax
	xor	edx, edx
	jmp	$LN11@getInt64
$LN9@getInt64:
; Line 561
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	mov	DWORD PTR _numIntDigits$[ebp], eax
; Line 562
	mov	DWORD PTR _value$[ebp], 0
	mov	DWORD PTR _value$[ebp+4], 0
; Line 563
	mov	DWORD PTR _i$72578[ebp], 0
	jmp	SHORT $LN8@getInt64
$LN7@getInt64:
	mov	eax, DWORD PTR _i$72578[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72578[ebp], eax
$LN8@getInt64:
	mov	eax, DWORD PTR _i$72578[ebp]
	cmp	eax, DWORD PTR _numIntDigits$[ebp]
	jge	SHORT $LN6@getInt64
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _i$72578[ebp]
	sub	edx, 1
	mov	DWORD PTR _digitIndex$72582[ebp], edx
; Line 567
	js	SHORT $LN13@getInt64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _digitIndex$72582[ebp]
	movzx	eax, BYTE PTR [ecx+edx+9]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN14@getInt64
$LN13@getInt64:
	mov	DWORD PTR tv84[ebp], 0
$LN14@getInt64:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _v$72583[ebp], ecx
; Line 568
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _value$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _v$72583[ebp]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _value$[ebp], ecx
	mov	DWORD PTR _value$[ebp+4], esi
; Line 569
	jmp	SHORT $LN7@getInt64
$LN6@getInt64:
; Line 571
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	je	SHORT $LN5@getInt64
; Line 572
	mov	eax, DWORD PTR _value$[ebp]
	not	eax
	mov	ecx, DWORD PTR _value$[ebp+4]
	not	ecx
	mov	DWORD PTR _value$[ebp], eax
	mov	DWORD PTR _value$[ebp+4], ecx
; Line 573
	mov	eax, DWORD PTR _value$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _value$[ebp+4]
	adc	ecx, 0
	mov	DWORD PTR _value$[ebp], eax
	mov	DWORD PTR _value$[ebp+4], ecx
$LN5@getInt64:
; Line 575
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _svalue$[ebp], eax
	mov	ecx, DWORD PTR _value$[ebp+4]
	mov	DWORD PTR _svalue$[ebp+4], ecx
; Line 580
	cmp	DWORD PTR _numIntDigits$[ebp], 19	; 00000013H
	jne	SHORT $LN4@getInt64
; Line 582
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	je	SHORT $LN1@getInt64
	cmp	DWORD PTR _svalue$[ebp+4], 0
	jg	SHORT $LN2@getInt64
	jl	SHORT $LN1@getInt64
	cmp	DWORD PTR _svalue$[ebp], 0
	ja	SHORT $LN2@getInt64
$LN1@getInt64:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	jne	SHORT $LN4@getInt64
	cmp	DWORD PTR _svalue$[ebp+4], 0
	jg	SHORT $LN4@getInt64
	jl	SHORT $LN2@getInt64
	cmp	DWORD PTR _svalue$[ebp], 0
	jae	SHORT $LN4@getInt64
$LN2@getInt64:
; Line 583
	mov	DWORD PTR _svalue$[ebp], 0
	mov	DWORD PTR _svalue$[ebp+4], 0
$LN4@getInt64:
; Line 587
	mov	eax, DWORD PTR _svalue$[ebp]
	mov	edx, DWORD PTR _svalue$[ebp+4]
$LN11@getInt64:
; Line 588
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@DigitList@icu_56@@QAE_JXZ ENDP		; icu_56::DigitList::getInt64
_TEXT	ENDS
PUBLIC	??_C@_1FA@HABFCLIA@?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CM@BCJNILJF@?$AAc?$AAa?$AAp?$AAa?$AAc?$AAi?$AAt?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??getDecimal@DigitList@icu_56@@QAEXAAVCharString@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::DigitList::getDecimal'::`2'::__LINE__Var
PUBLIC	?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::DigitList::getDecimal
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?getAppendBuffer@CharString@icu_56@@QAEPADHHAAHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?clear@CharString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT ??_C@_1FA@HABFCLIA@?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa@
CONST	SEGMENT
??_C@_1FA@HABFCLIA@?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa@ DB '('
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, '3', 00H, '2', 00H, '_', 00H
	DB	't', 00H, ')', 00H, ':', 00H, ':', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H, 'b', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')', 00H, ' '
	DB	00H, '<', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x', 00H
	DB	'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@BCJNILJF@?$AAc?$AAa?$AAp?$AAa?$AAc?$AAi?$AAt?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@BCJNILJF@?$AAc?$AAa?$AAp?$AAa?$AAc?$AAi?$AAt?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@ DB 'c'
	DB	00H, 'a', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'i', 00H, 't', 00H
	DB	'y', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a'
	DB	00H, 'x', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??getDecimal@DigitList@icu_56@@QAEXAAVCharString@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??getDecimal@DigitList@icu_56@@QAEXAAVCharString@3@AAW4UErrorCode@@@Z@4JA DD 0254H ; `icu_56::DigitList::getDecimal'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_buffer$ = -44						; size = 4
_capacity$ = -32					; size = 4
_maxLength$ = -20					; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_status$ = 12						; size = 4
?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DigitList::getDecimal, COMDAT
; _this$ = ecx
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 597
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@getDecimal@2
; Line 598
	jmp	$LN3@getDecimal@2
$LN2@getDecimal@2:
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	add	edx, 14					; 0000000eH
	mov	DWORD PTR _maxLength$[ebp], edx
; Line 604
	mov	DWORD PTR _capacity$[ebp], 0
; Line 605
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _maxLength$[ebp]
	push	edx
	mov	edi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?clear@CharString@icu_56@@QAEAAV12@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?getAppendBuffer@CharString@icu_56@@QAEPADHHAAHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer$[ebp], eax
; Line 606
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDecimal@2
; Line 607
	jmp	$LN3@getDecimal@2
$LN1@getDecimal@2:
; Line 609
	mov	eax, DWORD PTR _capacity$[ebp]
	cmp	eax, DWORD PTR _maxLength$[ebp]
	jge	SHORT $LN5@getDecimal@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getDecimal@DigitList@icu_56@@QAEXAAVCharString@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 13					; 0000000dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CM@BCJNILJF@?$AAc?$AAa?$AAp?$AAa?$AAc?$AAi?$AAt?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAm?$AAa?$AAx?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@getDecimal@2:
; Line 610
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_uprv_decNumberToString_56
	add	esp, 8
; Line 611
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, DWORD PTR _maxLength$[ebp]
	jle	SHORT $LN6@getDecimal@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??getDecimal@DigitList@icu_56@@QAEXAAVCharString@3@AAW4UErrorCode@@@Z@4JA
	add	ecx, 15					; 0000000fH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1FA@HABFCLIA@?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAm?$AAa@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getDecimal@2:
; Line 612
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getDecimal@2:
; Line 613
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@getDecimal@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@getDecimal@2:
	DD	1
	DD	$LN8@getDecimal@2
$LN8@getDecimal@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@getDecimal@2
$LN7@getDecimal@2:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
?getDecimal@DigitList@icu_56@@QAEXAAVCharString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::getDecimal
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_0L@KLDLBCKA@2147483647?$AA@		; `string'
PUBLIC	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
PUBLIC	??_C@_0M@LKGPKDPK@?92147483648?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?fitsIntoLong@DigitList@icu_56@@QAECC@Z		; icu_56::DigitList::fitsIntoLong
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_0L@KLDLBCKA@2147483647?$AA@
; File d:\mozilla\intl\icu\source\i18n\digitlst.cpp
CONST	SEGMENT
??_C@_0L@KLDLBCKA@2147483647?$AA@ DB '2147483647', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKGPKDPK@?92147483648?$AA@
CONST	SEGMENT
??_C@_0M@LKGPKDPK@?92147483648?$AA@ DB '-2147483648', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?fitsIntoLong@DigitList@icu_56@@QAECC@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fitsIntoLong@DigitList@icu_56@@QAECC@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?fitsIntoLong@DigitList@icu_56@@QAECC@Z$1
__ehfuncinfo$?fitsIntoLong@DigitList@icu_56@@QAECC@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?fitsIntoLong@DigitList@icu_56@@QAECC@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?fitsIntoLong@DigitList@icu_56@@QAECC@Z
_TEXT	SEGMENT
$T80211 = -548						; size = 8
$T80212 = -529						; size = 1
$T80213 = -520						; size = 8
$T80214 = -501						; size = 1
$T80215 = -489						; size = 1
$T80216 = -477						; size = 1
_max32$ = -276						; size = 112
_min32$ = -156						; size = 112
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ignoreNegativeZero$ = 8				; size = 1
?fitsIntoLong@DigitList@icu_56@@QAECC@Z PROC		; icu_56::DigitList::fitsIntoLong, COMDAT
; _this$ = ecx
; Line 621
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fitsIntoLong@DigitList@icu_56@@QAECC@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 540				; 0000021cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-552]
	mov	ecx, 135				; 00000087H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN7@fitsIntoLo
; Line 624
	xor	al, al
	jmp	$LN8@fitsIntoLo
$LN7@fitsIntoLo:
; Line 626
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberTrim_56
	add	esp, 4
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+4], 0
	jge	SHORT $LN6@fitsIntoLo
; Line 629
	xor	al, al
	jmp	$LN8@fitsIntoLo
$LN6@fitsIntoLo:
; Line 632
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN5@fitsIntoLo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN5@fitsIntoLo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	jne	SHORT $LN5@fitsIntoLo
	movsx	eax, BYTE PTR _ignoreNegativeZero$[ebp]
	test	eax, eax
	jne	SHORT $LN5@fitsIntoLo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	je	SHORT $LN5@fitsIntoLo
; Line 634
	xor	al, al
	jmp	$LN8@fitsIntoLo
$LN5@fitsIntoLo:
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN4@fitsIntoLo
; Line 640
	mov	al, 1
	jmp	$LN8@fitsIntoLo
$LN4@fitsIntoLo:
; Line 645
	mov	DWORD PTR _status$[ebp], 0
; Line 646
	lea	ecx, DWORD PTR _min32$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	push	OFFSET ??_C@_0M@LKGPKDPK@?92147483648?$AA@
	lea	ecx, DWORD PTR $T80211[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	0
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80211[ebp]
	push	ecx
	lea	ecx, DWORD PTR _min32$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 647
	lea	eax, DWORD PTR _min32$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@DigitList@icu_56@@QAEHABV12@@Z	; icu_56::DigitList::compare
	test	eax, eax
	jge	SHORT $LN3@fitsIntoLo
; Line 648
	mov	BYTE PTR $T80212[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80212[ebp]
	jmp	$LN8@fitsIntoLo
$LN3@fitsIntoLo:
; Line 650
	lea	ecx, DWORD PTR _max32$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	push	OFFSET ??_C@_0L@KLDLBCKA@2147483647?$AA@
	lea	ecx, DWORD PTR $T80213[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	0
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80213[ebp]
	push	ecx
	lea	ecx, DWORD PTR _max32$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 651
	lea	eax, DWORD PTR _max32$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@DigitList@icu_56@@QAEHABV12@@Z	; icu_56::DigitList::compare
	test	eax, eax
	jle	SHORT $LN2@fitsIntoLo
; Line 652
	mov	BYTE PTR $T80214[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80214[ebp]
	jmp	SHORT $LN8@fitsIntoLo
$LN2@fitsIntoLo:
; Line 654
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@fitsIntoLo
; Line 655
	mov	BYTE PTR $T80215[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80215[ebp]
	jmp	SHORT $LN8@fitsIntoLo
$LN1@fitsIntoLo:
; Line 657
	mov	BYTE PTR $T80216[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min32$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80216[ebp]
$LN8@fitsIntoLo:
; Line 658
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@fitsIntoLo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 552				; 00000228H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN17@fitsIntoLo:
	DD	3
	DD	$LN16@fitsIntoLo
$LN16@fitsIntoLo:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN12@fitsIntoLo
	DD	-156					; ffffff64H
	DD	112					; 00000070H
	DD	$LN13@fitsIntoLo
	DD	-276					; fffffeecH
	DD	112					; 00000070H
	DD	$LN14@fitsIntoLo
$LN14@fitsIntoLo:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	51					; 00000033H
	DB	50					; 00000032H
	DB	0
$LN13@fitsIntoLo:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	51					; 00000033H
	DB	50					; 00000032H
	DB	0
$LN12@fitsIntoLo:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?fitsIntoLong@DigitList@icu_56@@QAECC@Z$0:
	lea	ecx, DWORD PTR _min32$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?fitsIntoLong@DigitList@icu_56@@QAECC@Z$1:
	lea	ecx, DWORD PTR _max32$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?fitsIntoLong@DigitList@icu_56@@QAECC@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-556]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fitsIntoLong@DigitList@icu_56@@QAECC@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?fitsIntoLong@DigitList@icu_56@@QAECC@Z ENDP		; icu_56::DigitList::fitsIntoLong
PUBLIC	??_C@_0BE@EMNEAFKL@9223372036854775807?$AA@	; `string'
PUBLIC	??_C@_0BF@LKIEOMOJ@?99223372036854775808?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?fitsIntoInt64@DigitList@icu_56@@QAECC@Z	; icu_56::DigitList::fitsIntoInt64
;	COMDAT ??_C@_0BE@EMNEAFKL@9223372036854775807?$AA@
CONST	SEGMENT
??_C@_0BE@EMNEAFKL@9223372036854775807?$AA@ DB '9223372036854775807', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LKIEOMOJ@?99223372036854775808?$AA@
CONST	SEGMENT
??_C@_0BF@LKIEOMOJ@?99223372036854775808?$AA@ DB '-9223372036854775808', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z$1
__ehfuncinfo$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?fitsIntoInt64@DigitList@icu_56@@QAECC@Z
_TEXT	SEGMENT
$T80233 = -548						; size = 8
$T80234 = -529						; size = 1
$T80235 = -520						; size = 8
$T80236 = -501						; size = 1
$T80237 = -489						; size = 1
$T80238 = -477						; size = 1
_max64$ = -276						; size = 112
_min64$ = -156						; size = 112
_status$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ignoreNegativeZero$ = 8				; size = 1
?fitsIntoInt64@DigitList@icu_56@@QAECC@Z PROC		; icu_56::DigitList::fitsIntoInt64, COMDAT
; _this$ = ecx
; Line 668
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 540				; 0000021cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-552]
	mov	ecx, 135				; 00000087H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	je	SHORT $LN7@fitsIntoIn
; Line 671
	xor	al, al
	jmp	$LN8@fitsIntoIn
$LN7@fitsIntoIn:
; Line 673
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberTrim_56
	add	esp, 4
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+4], 0
	jge	SHORT $LN6@fitsIntoIn
; Line 676
	xor	al, al
	jmp	$LN8@fitsIntoIn
$LN6@fitsIntoIn:
; Line 679
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN5@fitsIntoIn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN5@fitsIntoIn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 112				; 00000070H
	jne	SHORT $LN5@fitsIntoIn
	movsx	eax, BYTE PTR _ignoreNegativeZero$[ebp]
	test	eax, eax
	jne	SHORT $LN5@fitsIntoIn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	je	SHORT $LN5@fitsIntoIn
; Line 681
	xor	al, al
	jmp	$LN8@fitsIntoIn
$LN5@fitsIntoIn:
; Line 683
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	cmp	eax, 19					; 00000013H
	jge	SHORT $LN4@fitsIntoIn
; Line 687
	mov	al, 1
	jmp	$LN8@fitsIntoIn
$LN4@fitsIntoIn:
; Line 692
	mov	DWORD PTR _status$[ebp], 0
; Line 693
	lea	ecx, DWORD PTR _min64$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	push	OFFSET ??_C@_0BF@LKIEOMOJ@?99223372036854775808?$AA@
	lea	ecx, DWORD PTR $T80233[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	0
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80233[ebp]
	push	ecx
	lea	ecx, DWORD PTR _min64$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 694
	lea	eax, DWORD PTR _min64$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@DigitList@icu_56@@QAEHABV12@@Z	; icu_56::DigitList::compare
	test	eax, eax
	jge	SHORT $LN3@fitsIntoIn
; Line 695
	mov	BYTE PTR $T80234[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80234[ebp]
	jmp	$LN8@fitsIntoIn
$LN3@fitsIntoIn:
; Line 697
	lea	ecx, DWORD PTR _max64$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	push	OFFSET ??_C@_0BE@EMNEAFKL@9223372036854775807?$AA@
	lea	ecx, DWORD PTR $T80235[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	0
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T80235[ebp]
	push	ecx
	lea	ecx, DWORD PTR _max64$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 698
	lea	eax, DWORD PTR _max64$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@DigitList@icu_56@@QAEHABV12@@Z	; icu_56::DigitList::compare
	test	eax, eax
	jle	SHORT $LN2@fitsIntoIn
; Line 699
	mov	BYTE PTR $T80236[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80236[ebp]
	jmp	SHORT $LN8@fitsIntoIn
$LN2@fitsIntoIn:
; Line 701
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@fitsIntoIn
; Line 702
	mov	BYTE PTR $T80237[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80237[ebp]
	jmp	SHORT $LN8@fitsIntoIn
$LN1@fitsIntoIn:
; Line 704
	mov	BYTE PTR $T80238[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _max64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _min64$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	al, BYTE PTR $T80238[ebp]
$LN8@fitsIntoIn:
; Line 705
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@fitsIntoIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 552				; 00000228H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN17@fitsIntoIn:
	DD	3
	DD	$LN16@fitsIntoIn
$LN16@fitsIntoIn:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN12@fitsIntoIn
	DD	-156					; ffffff64H
	DD	112					; 00000070H
	DD	$LN13@fitsIntoIn
	DD	-276					; fffffeecH
	DD	112					; 00000070H
	DD	$LN14@fitsIntoIn
$LN14@fitsIntoIn:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN13@fitsIntoIn:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN12@fitsIntoIn:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z$0:
	lea	ecx, DWORD PTR _min64$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z$1:
	lea	ecx, DWORD PTR _max64$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-556]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fitsIntoInt64@DigitList@icu_56@@QAECC@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?fitsIntoInt64@DigitList@icu_56@@QAECC@Z ENDP		; icu_56::DigitList::fitsIntoInt64
PUBLIC	?set@DigitList@icu_56@@QAEX_J@Z			; icu_56::DigitList::set
PUBLIC	?set@DigitList@icu_56@@QAEXH@Z			; icu_56::DigitList::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_source$ = 8						; size = 4
?set@DigitList@icu_56@@QAEXH@Z PROC			; icu_56::DigitList::set, COMDAT
; _this$ = ecx
; Line 712
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 713
	mov	eax, DWORD PTR _source$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@DigitList@icu_56@@QAEX_J@Z		; icu_56::DigitList::set
; Line 714
	fild	DWORD PTR _source$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 715
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?set@DigitList@icu_56@@QAEXH@Z ENDP			; icu_56::DigitList::set
_TEXT	ENDS
PUBLIC	??_C@_1DK@BBDELKPF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??set@DigitList@icu_56@@QAEX_J@Z@4JA ; `icu_56::DigitList::set'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	_uprv_decNumberFromString_56:PROC
;	COMDAT ??_C@_1DK@BBDELKPF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@BBDELKPF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?$AA@ DB ':'
	DB	00H, ':', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, '(', 00H, 's', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??set@DigitList@icu_56@@QAEX_J@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??set@DigitList@icu_56@@QAEX_J@Z@4JA DD 02d3H ; `icu_56::DigitList::set'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?set@DigitList@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
_str$ = -44						; size = 21
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_source$ = 8						; size = 8
?set@DigitList@icu_56@@QAEX_J@Z PROC			; icu_56::DigitList::set, COMDAT
; _this$ = ecx
; Line 723
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 725
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	call	?formatBase10@icu_56@@YAH_JPAD@Z	; icu_56::formatBase10
	add	esp, 12					; 0000000cH
; Line 726
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 21					; 00000015H
	jb	SHORT $LN3@set
	mov	ecx, DWORD PTR ?__LINE__Var@?1??set@DigitList@icu_56@@QAEX_J@Z@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DK@BBDELKPF@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAs?$AAt?$AAr?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@set:
; Line 728
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_uprv_decNumberFromString_56
	add	esp, 12					; 0000000cH
; Line 729
	fild	QWORD PTR _source$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 730
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN6@set:
	DD	1
	DD	$LN5@set
$LN5@set:
	DD	-44					; ffffffd4H
	DD	21					; 00000015H
	DD	$LN4@set
$LN4@set:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?set@DigitList@icu_56@@QAEX_J@Z ENDP			; icu_56::DigitList::set
_TEXT	ENDS
PUBLIC	??_C@_1BK@KDFMMPOE@?$AAd?$AAe?$AAs?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??formatBase10@icu_56@@YAH_JPAD@Z@4JA@2f57b92b ; `icu_56::formatBase10'::`2'::__LINE__Var
EXTRN	__imp__memmove:PROC
EXTRN	__alldiv:PROC
EXTRN	__allrem:PROC
;	COMDAT ??_C@_1BK@KDFMMPOE@?$AAd?$AAe?$AAs?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@KDFMMPOE@?$AAd?$AAe?$AAs?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'd'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'I', 00H, 'd', 00H, 'x', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??formatBase10@icu_56@@YAH_JPAD@Z@4JA@2f57b92b
_DATA	SEGMENT
?__LINE__Var@?1??formatBase10@icu_56@@YAH_JPAD@Z@4JA@2f57b92b DD 0d2H ; `icu_56::formatBase10'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?formatBase10@icu_56@@YAH_JPAD@Z
_TEXT	SEGMENT
_length$ = -48						; size = 4
_n$ = -36						; size = 8
_destIdx$ = -20						; size = 4
_MAX_IDX$ = -8						; size = 4
_number$ = 8						; size = 8
_outputStr$ = 16					; size = 4
?formatBase10@icu_56@@YAH_JPAD@Z PROC			; icu_56::formatBase10, COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 215
	mov	DWORD PTR _MAX_IDX$[ebp], 21		; 00000015H
; Line 216
	mov	DWORD PTR _destIdx$[ebp], 21		; 00000015H
; Line 217
	mov	eax, DWORD PTR _destIdx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destIdx$[ebp], eax
	mov	ecx, DWORD PTR _outputStr$[ebp]
	add	ecx, DWORD PTR _destIdx$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 219
	mov	eax, DWORD PTR _number$[ebp]
	mov	DWORD PTR _n$[ebp], eax
	mov	ecx, DWORD PTR _number$[ebp+4]
	mov	DWORD PTR _n$[ebp+4], ecx
; Line 220
	cmp	DWORD PTR _number$[ebp+4], 0
	jg	SHORT $LN4@formatBase
	jl	SHORT $LN9@formatBase
	cmp	DWORD PTR _number$[ebp], 0
	jae	SHORT $LN4@formatBase
$LN9@formatBase:
; Line 221
	mov	eax, DWORD PTR _destIdx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destIdx$[ebp], eax
	push	0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _n$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	__allrem
	neg	eax
	adc	edx, 0
	neg	edx
	add	eax, 48					; 00000030H
	adc	edx, 0
	mov	ecx, DWORD PTR _outputStr$[ebp]
	add	ecx, DWORD PTR _destIdx$[ebp]
	mov	BYTE PTR [ecx], al
; Line 222
	push	-1
	push	-10					; fffffff6H
	mov	eax, DWORD PTR _n$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _n$[ebp], eax
	mov	DWORD PTR _n$[ebp+4], edx
$LN4@formatBase:
; Line 225
	mov	eax, DWORD PTR _destIdx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destIdx$[ebp], eax
	push	0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _n$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	call	__allrem
	add	eax, 48					; 00000030H
	adc	edx, 0
	mov	ecx, DWORD PTR _outputStr$[ebp]
	add	ecx, DWORD PTR _destIdx$[ebp]
	mov	BYTE PTR [ecx], al
; Line 226
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _n$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	call	__alldiv
	mov	DWORD PTR _n$[ebp], eax
	mov	DWORD PTR _n$[ebp+4], edx
; Line 227
	cmp	DWORD PTR _n$[ebp+4], 0
	jg	SHORT $LN4@formatBase
	jl	SHORT $LN2@formatBase
	cmp	DWORD PTR _n$[ebp], 0
	ja	SHORT $LN4@formatBase
$LN2@formatBase:
; Line 229
	cmp	DWORD PTR _number$[ebp+4], 0
	jg	SHORT $LN1@formatBase
	jl	SHORT $LN11@formatBase
	cmp	DWORD PTR _number$[ebp], 0
	jae	SHORT $LN1@formatBase
$LN11@formatBase:
; Line 230
	mov	eax, DWORD PTR _destIdx$[ebp]
	sub	eax, 1
	mov	DWORD PTR _destIdx$[ebp], eax
	mov	ecx, DWORD PTR _outputStr$[ebp]
	add	ecx, DWORD PTR _destIdx$[ebp]
	mov	BYTE PTR [ecx], 45			; 0000002dH
$LN1@formatBase:
; Line 234
	cmp	DWORD PTR _destIdx$[ebp], 0
	jge	SHORT $LN8@formatBase
	mov	eax, DWORD PTR ?__LINE__Var@?1??formatBase10@icu_56@@YAH_JPAD@Z@4JA@2f57b92b
	add	eax, 24					; 00000018H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1BK@KDFMMPOE@?$AAd?$AAe?$AAs?$AAt?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@formatBase:
; Line 235
	mov	eax, 21					; 00000015H
	sub	eax, DWORD PTR _destIdx$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 236
	push	1
	mov	eax, DWORD PTR _outputStr$[ebp]
	add	eax, 21					; 00000015H
	sub	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outputStr$[ebp]
	add	edx, 21					; 00000015H
	sub	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _outputStr$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 238
	mov	eax, DWORD PTR _length$[ebp]
; Line 239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?formatBase10@icu_56@@YAH_JPAD@Z ENDP			; icu_56::formatBase10
_TEXT	ENDS
PUBLIC	?setInteger@DigitList@icu_56@@QAEX_J@Z		; icu_56::DigitList::setInteger
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setInteger@DigitList@icu_56@@QAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_source$ = 8						; size = 8
?setInteger@DigitList@icu_56@@QAEX_J@Z PROC		; icu_56::DigitList::setInteger, COMDAT
; _this$ = ecx
; Line 737
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 738
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 739
	mov	eax, DWORD PTR _source$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ; icu_56::DigitList::internalSetInt64
; Line 740
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setInteger@DigitList@icu_56@@QAEX_J@Z ENDP		; icu_56::DigitList::setInteger
_TEXT	ENDS
EXTRN	__imp_?data@StringPiece@icu_56@@QBEPBDXZ:PROC
EXTRN	__imp_?length@StringPiece@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z
_TEXT	SEGMENT
_t$72680 = -32						; size = 4
_numDigits$72678 = -20					; size = 4
_this$ = -8						; size = 4
_source$ = 8						; size = 4
_status$ = 12						; size = 4
___formal$ = 16						; size = 4
?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z PROC ; icu_56::DigitList::set, COMDAT
; _this$ = ecx
; Line 753
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 754
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@set@2
; Line 755
	jmp	$LN5@set@2
$LN4@set@2:
; Line 786
	mov	esi, esp
	mov	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_?length@StringPiece@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numDigits$72678[ebp], eax
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numDigits$72678[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN3@set@2
; Line 789
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	push	eax
	mov	eax, DWORD PTR _numDigits$72678[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
	mov	DWORD PTR _t$72680[ebp], eax
; Line 790
	cmp	DWORD PTR _t$72680[ebp], 0
	jne	SHORT $LN2@set@2
; Line 791
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 792
	jmp	SHORT $LN5@set@2
$LN2@set@2:
; Line 794
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$72680[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 795
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numDigits$72678[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@set@2:
; Line 798
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 799
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_?data@StringPiece@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_uprv_decNumberFromString_56
	add	esp, 12					; 0000000cH
; Line 800
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	and	ecx, 1
	je	SHORT $LN1@set@2
; Line 801
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65808			; 00010110H
$LN1@set@2:
; Line 804
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
$LN5@set@2:
; Line 805
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ENDP ; icu_56::DigitList::set
_TEXT	ENDS
PUBLIC	??_C@_1DK@LDJCKIDC@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??set@DigitList@icu_56@@QAEXN@Z@4JA ; `icu_56::DigitList::set'::`2'::__LINE__Var
PUBLIC	??_C@_06GDIBNGKA@?$CF?$CL1?4?$CKe?$AA@		; `string'
PUBLIC	??_C@_03OJHLLCGB@inf?$AA@			; `string'
PUBLIC	??_C@_04DHEMHBNF@?9inf?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?set@DigitList@icu_56@@QAEXN@Z			; icu_56::DigitList::set
EXTRN	_strcpy:PROC
EXTRN	_uprv_isNegativeInfinity_56:PROC
EXTRN	_uprv_isInfinite_56:PROC
;	COMDAT ??_C@_1DK@LDJCKIDC@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@LDJCKIDC@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?$AA@ DB ':'
	DB	00H, ':', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, '(', 00H, 'r', 00H, 'e', 00H, 'p', 00H, ')'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'r', 00H, 'e', 00H, 'p'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??set@DigitList@icu_56@@QAEXN@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??set@DigitList@icu_56@@QAEXN@Z@4JA DD 032eH ; `icu_56::DigitList::set'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06GDIBNGKA@?$CF?$CL1?4?$CKe?$AA@
CONST	SEGMENT
??_C@_06GDIBNGKA@?$CF?$CL1?4?$CKe?$AA@ DB '%+1.*e', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OJHLLCGB@inf?$AA@
CONST	SEGMENT
??_C@_03OJHLLCGB@inf?$AA@ DB 'inf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DHEMHBNF@?9inf?$AA@
CONST	SEGMENT
??_C@_04DHEMHBNF@?9inf?$AA@ DB '-inf', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?set@DigitList@icu_56@@QAEXN@Z
_TEXT	SEGMENT
_decimalSeparator$ = -60				; size = 4
_rep$ = -48						; size = 27
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_source$ = 8						; size = 8
?set@DigitList@icu_56@@QAEXN@Z PROC			; icu_56::DigitList::set, COMDAT
; _this$ = ecx
; Line 814
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 822
	sub	esp, 8
	fld	QWORD PTR _source$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_isInfinite_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@set@3
; Line 823
	sub	esp, 8
	fld	QWORD PTR _source$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_isNegativeInfinity_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@set@3
; Line 824
	push	OFFSET ??_C@_04DHEMHBNF@?9inf?$AA@
	lea	eax, DWORD PTR _rep$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 825
	jmp	SHORT $LN3@set@3
$LN4@set@3:
; Line 826
	push	OFFSET ??_C@_03OJHLLCGB@inf?$AA@
	lea	eax, DWORD PTR _rep$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN3@set@3:
; Line 828
	jmp	SHORT $LN2@set@3
$LN5@set@3:
; Line 829
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _source$[ebp]
	fstp	QWORD PTR [esp]
	push	14					; 0000000eH
	push	OFFSET ??_C@_06GDIBNGKA@?$CF?$CL1?4?$CKe?$AA@
	lea	eax, DWORD PTR _rep$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@set@3:
; Line 831
	lea	eax, DWORD PTR _rep$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 27					; 0000001bH
	jb	SHORT $LN8@set@3
	mov	ecx, DWORD PTR ?__LINE__Var@?1??set@DigitList@icu_56@@QAEXN@Z@4JA
	add	ecx, 17					; 00000011H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@KILIOGMG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DK@LDJCKIDC@?$AA?3?$AA?3?$AA?5?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAr?$AAe?$AAp?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@set@3:
; Line 836
	push	44					; 0000002cH
	lea	eax, DWORD PTR _rep$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _decimalSeparator$[ebp], eax
; Line 837
	cmp	DWORD PTR _decimalSeparator$[ebp], 0
	je	SHORT $LN1@set@3
; Line 838
	mov	eax, DWORD PTR _decimalSeparator$[ebp]
	mov	BYTE PTR [eax], 46			; 0000002eH
$LN1@set@3:
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rep$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_uprv_decNumberFromString_56
	add	esp, 12					; 0000000cH
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberTrim_56
	add	esp, 4
; Line 844
	sub	esp, 8
	fld	QWORD PTR _source$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalSetDouble@DigitList@icu_56@@AAEXN@Z ; icu_56::DigitList::internalSetDouble
; Line 845
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@set@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN11@set@3:
	DD	1
	DD	$LN10@set@3
$LN10@set@3:
	DD	-48					; ffffffd0H
	DD	27					; 0000001bH
	DD	$LN9@set@3
$LN9@set@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
?set@DigitList@icu_56@@QAEXN@Z ENDP			; icu_56::DigitList::set
_TEXT	ENDS
PUBLIC	?ensureCapacity@DigitList@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::DigitList::ensureCapacity
PUBLIC	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
EXTRN	_uprv_decNumberMultiply_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_requiredDigits$72708 = -32				; size = 4
_requiredDigits$ = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_status$ = 12						; size = 4
?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z PROC ; icu_56::DigitList::mult, COMDAT
; _this$ = ecx
; Line 856
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 857
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@mult
; Line 858
	jmp	$LN3@mult
$LN2@mult:
; Line 860
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 861
	mov	ecx, DWORD PTR _this$[ebp]
	call	?digits@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::digits
	mov	esi, eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?digits@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::digits
	add	esi, eax
	mov	DWORD PTR _requiredDigits$[ebp], esi
; Line 862
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _requiredDigits$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN1@mult
; Line 863
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 864
	mov	ecx, DWORD PTR _this$[ebp]
	call	?digits@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::digits
	mov	esi, eax
	mov	ecx, DWORD PTR _other$[ebp]
	call	?digits@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::digits
	add	esi, eax
	mov	DWORD PTR _requiredDigits$72708[ebp], esi
; Line 865
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _requiredDigits$72708[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureCapacity@DigitList@icu_56@@QAEXHAAW4UErrorCode@@@Z ; icu_56::DigitList::ensureCapacity
$LN1@mult:
; Line 867
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_uprv_decNumberMultiply_56
	add	esp, 16					; 00000010H
; Line 868
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
$LN3@mult:
; Line 869
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::mult
_TEXT	ENDS
PUBLIC	?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::div
EXTRN	_uprv_decNumberDivide_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
_status$ = 12						; size = 4
?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z PROC ; icu_56::DigitList::div, COMDAT
; _this$ = ecx
; Line 880
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 881
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@div
; Line 882
	jmp	SHORT $LN2@div
$LN1@div:
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_uprv_decNumberDivide_56
	add	esp, 16					; 00000010H
; Line 885
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
$LN2@div:
; Line 886
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::div
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ensureCapacity@DigitList@icu_56@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_newBuffer$72724 = -20					; size = 4
_this$ = -8						; size = 4
_requestedCapacity$ = 8					; size = 4
_status$ = 12						; size = 4
?ensureCapacity@DigitList@icu_56@@QAEXHAAW4UErrorCode@@@Z PROC ; icu_56::DigitList::ensureCapacity, COMDAT
; _this$ = ecx
; Line 895
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 896
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@ensureCapa
; Line 897
	jmp	SHORT $LN6@ensureCapa
$LN5@ensureCapa:
; Line 899
	cmp	DWORD PTR _requestedCapacity$[ebp], 0
	jg	SHORT $LN4@ensureCapa
; Line 900
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 901
	jmp	SHORT $LN6@ensureCapa
$LN4@ensureCapa:
; Line 903
	cmp	DWORD PTR _requestedCapacity$[ebp], 999999999 ; 3b9ac9ffH
	jle	SHORT $LN3@ensureCapa
; Line 907
	mov	DWORD PTR _requestedCapacity$[ebp], 999999999 ; 3b9ac9ffH
$LN3@ensureCapa:
; Line 909
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _requestedCapacity$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN6@ensureCapa
; Line 910
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
	push	eax
	mov	eax, DWORD PTR _requestedCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
	mov	DWORD PTR _newBuffer$72724[ebp], eax
; Line 911
	cmp	DWORD PTR _newBuffer$72724[ebp], 0
	jne	SHORT $LN1@ensureCapa
; Line 912
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 913
	jmp	SHORT $LN6@ensureCapa
$LN1@ensureCapa:
; Line 915
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _requestedCapacity$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 916
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newBuffer$72724[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN6@ensureCapa:
; Line 918
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ensureCapacity@DigitList@icu_56@@QAEXHAAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::ensureCapacity
_TEXT	ENDS
EXTRN	_uprv_decNumberPlus_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?round@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_savedDigits$ = -20					; size = 4
_this$ = -8						; size = 4
_maximumDigits$ = 8					; size = 4
?round@DigitList@icu_56@@QAEXH@Z PROC			; icu_56::DigitList::round, COMDAT
; _this$ = ecx
; Line 929
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 931
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _maximumDigits$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN1@round
; Line 932
	jmp	SHORT $LN2@round
$LN1@round:
; Line 934
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _savedDigits$[ebp], ecx
; Line 935
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _maximumDigits$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 936
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberPlus_56
	add	esp, 12					; 0000000cH
; Line 937
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _savedDigits$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberTrim_56
	add	esp, 4
; Line 939
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 940
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
$LN2@round:
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?round@DigitList@icu_56@@QAEXH@Z ENDP			; icu_56::DigitList::round
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?roundFixedPoint@DigitList@icu_56@@QAEXH@Z	; icu_56::DigitList::roundFixedPoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roundFixedPoint@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_scale$ = -32						; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_maximumFractionDigits$ = 8				; size = 4
?roundFixedPoint@DigitList@icu_56@@QAEXH@Z PROC		; icu_56::DigitList::roundFixedPoint, COMDAT
; _this$ = ecx
; Line 945
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 947
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _maximumFractionDigits$[ebp]
	neg	edx
	cmp	DWORD PTR [ecx+4], edx
	jl	SHORT $LN1@roundFixed
; Line 948
	jmp	SHORT $LN2@roundFixed
$LN1@roundFixed:
; Line 951
	lea	eax, DWORD PTR _scale$[ebp]
	push	eax
	call	_uprv_decNumberZero_56
	add	esp, 4
; Line 952
	mov	eax, DWORD PTR _maximumFractionDigits$[ebp]
	neg	eax
	mov	DWORD PTR _scale$[ebp+4], eax
; Line 953
	mov	BYTE PTR _scale$[ebp+9], 1
; Line 955
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_uprv_decNumberQuantize_56
	add	esp, 16					; 00000010H
; Line 956
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 957
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
$LN2@roundFixed:
; Line 958
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@roundFixed
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN6@roundFixed:
	DD	1
	DD	$LN5@roundFixed
$LN5@roundFixed:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN4@roundFixed
$LN4@roundFixed:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?roundFixedPoint@DigitList@icu_56@@QAEXH@Z ENDP		; icu_56::DigitList::roundFixedPoint
_TEXT	ENDS
PUBLIC	?toIntegralValue@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::toIntegralValue
EXTRN	_uprv_decNumberToIntegralValue_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toIntegralValue@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toIntegralValue@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::toIntegralValue, COMDAT
; _this$ = ecx
; Line 963
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 964
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberToIntegralValue_56
	add	esp, 12					; 0000000cH
; Line 965
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?toIntegralValue@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::toIntegralValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isZero@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
tv77 = -205						; size = 1
_this$ = -8						; size = 4
?isZero@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isZero, COMDAT
; _this$ = ecx
; Line 971
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 972
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+9]
	test	edx, edx
	jne	SHORT $LN3@isZero
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN3@isZero
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 112				; 00000070H
	jne	SHORT $LN3@isZero
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN4@isZero
$LN3@isZero:
	mov	BYTE PTR tv77[ebp], 0
$LN4@isZero:
	mov	al, BYTE PTR tv77[ebp]
; Line 973
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isZero@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isZero
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getUpperExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUpperExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getUpperExponent, COMDAT
; _this$ = ecx
; Line 977
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 978
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
; Line 979
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUpperExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getUpperExponent
_TEXT	ENDS
PUBLIC	?getSmallestInterval@DigitList@icu_56@@QBEAAVDigitInterval@2@AAV32@@Z ; icu_56::DigitList::getSmallestInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSmallestInterval@DigitList@icu_56@@QBEAAVDigitInterval@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getSmallestInterval@DigitList@icu_56@@QBEAAVDigitInterval@2@AAV32@@Z PROC ; icu_56::DigitList::getSmallestInterval, COMDAT
; _this$ = ecx
; Line 982
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 983
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setLeastSignificantInclusive
; Line 984
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setMostSignificantExclusive
; Line 985
	mov	eax, DWORD PTR _result$[ebp]
; Line 986
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getSmallestInterval@DigitList@icu_56@@QBEAAVDigitInterval@2@AAV32@@Z ENDP ; icu_56::DigitList::getSmallestInterval
_TEXT	ENDS
PUBLIC	?getDigitByExponent@DigitList@icu_56@@QBEEH@Z	; icu_56::DigitList::getDigitByExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitByExponent@DigitList@icu_56@@QBEEH@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_exponent$ = 8						; size = 4
?getDigitByExponent@DigitList@icu_56@@QBEEH@Z PROC	; icu_56::DigitList::getDigitByExponent, COMDAT
; _this$ = ecx
; Line 989
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 990
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _exponent$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _idx$[ebp], edx
; Line 991
	js	SHORT $LN1@getDigitBy
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _idx$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN2@getDigitBy
$LN1@getDigitBy:
; Line 992
	xor	al, al
	jmp	SHORT $LN3@getDigitBy
$LN2@getDigitBy:
; Line 994
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _idx$[ebp]
	mov	al, BYTE PTR [ecx+edx+9]
$LN3@getDigitBy:
; Line 995
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getDigitByExponent@DigitList@icu_56@@QBEEH@Z ENDP	; icu_56::DigitList::getDigitByExponent
_TEXT	ENDS
PUBLIC	?appendDigitsTo@DigitList@icu_56@@QBEXAAVCharString@2@AAW4UErrorCode@@@Z ; icu_56::DigitList::appendDigitsTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendDigitsTo@DigitList@icu_56@@QBEXAAVCharString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_status$ = 12						; size = 4
?appendDigitsTo@DigitList@icu_56@@QBEXAAVCharString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DigitList::appendDigitsTo, COMDAT
; _this$ = ecx
; Line 998
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 999
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 9
	push	edx
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1000
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?appendDigitsTo@DigitList@icu_56@@QBEXAAVCharString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::appendDigitsTo
_TEXT	ENDS
PUBLIC	?roundAtExponent@DigitList@icu_56@@QAEXHH@Z	; icu_56::DigitList::roundAtExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?roundAtExponent@DigitList@icu_56@@QAEXHH@Z
_TEXT	SEGMENT
_digits$ = -32						; size = 4
_minExponent$72770 = -20				; size = 4
_this$ = -8						; size = 4
_exponent$ = 8						; size = 4
_maxSigDigits$ = 12					; size = 4
?roundAtExponent@DigitList@icu_56@@QAEXHH@Z PROC	; icu_56::DigitList::roundAtExponent, COMDAT
; _this$ = ecx
; Line 1003
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1004
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _maxSigDigits$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN5@roundAtExp
; Line 1006
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	sub	eax, DWORD PTR _maxSigDigits$[ebp]
	mov	DWORD PTR _minExponent$72770[ebp], eax
; Line 1007
	mov	eax, DWORD PTR _exponent$[ebp]
	cmp	eax, DWORD PTR _minExponent$72770[ebp]
	jge	SHORT $LN5@roundAtExp
; Line 1008
	mov	eax, DWORD PTR _minExponent$72770[ebp]
	mov	DWORD PTR _exponent$[ebp], eax
$LN5@roundAtExp:
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _exponent$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jg	SHORT $LN3@roundAtExp
; Line 1012
	jmp	SHORT $LN6@roundAtExp
$LN3@roundAtExp:
; Line 1014
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	sub	eax, DWORD PTR _exponent$[ebp]
	mov	DWORD PTR _digits$[ebp], eax
; Line 1015
	cmp	DWORD PTR _digits$[ebp], 0
	jle	SHORT $LN2@roundAtExp
; Line 1016
	mov	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?round@DigitList@icu_56@@QAEXH@Z	; icu_56::DigitList::round
; Line 1017
	jmp	SHORT $LN6@roundAtExp
$LN2@roundAtExp:
; Line 1018
	mov	eax, DWORD PTR _exponent$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?roundFixedPoint@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::roundFixedPoint
$LN6@roundAtExp:
; Line 1020
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?roundAtExponent@DigitList@icu_56@@QAEXHH@Z ENDP	; icu_56::DigitList::roundAtExponent
_TEXT	ENDS
PUBLIC	?quantize@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::quantize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?quantize@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_quantity$ = 8						; size = 4
_status$ = 12						; size = 4
?quantize@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z PROC ; icu_56::DigitList::quantize, COMDAT
; _this$ = ecx
; Line 1023
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1024
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@quantize
; Line 1025
	jmp	SHORT $LN2@quantize
$LN1@quantize:
; Line 1027
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _quantity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::div
; Line 1028
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?roundAtExponent@DigitList@icu_56@@QAEXHH@Z ; icu_56::DigitList::roundAtExponent
; Line 1029
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _quantity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
; Line 1030
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reduce@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::reduce
$LN2@quantize:
; Line 1031
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?quantize@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ENDP ; icu_56::DigitList::quantize
_TEXT	ENDS
PUBLIC	?getScientificExponent@DigitList@icu_56@@QBEHHH@Z ; icu_56::DigitList::getScientificExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getScientificExponent@DigitList@icu_56@@QBEHHH@Z
_TEXT	SEGMENT
_minAdjustment$72793 = -56				; size = 4
_maxAdjustment$72791 = -44				; size = 4
_exponent$ = -32					; size = 4
_intDigitCount$ = -20					; size = 4
_this$ = -8						; size = 4
_minIntDigitCount$ = 8					; size = 4
_exponentMultiplier$ = 12				; size = 4
?getScientificExponent@DigitList@icu_56@@QBEHHH@Z PROC	; icu_56::DigitList::getScientificExponent, COMDAT
; _this$ = ecx
; Line 1035
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1037
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@getScienti
; Line 1038
	xor	eax, eax
	jmp	SHORT $LN4@getScienti
$LN3@getScienti:
; Line 1040
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUpperExponent@DigitList@icu_56@@QBEHXZ ; icu_56::DigitList::getUpperExponent
	mov	DWORD PTR _intDigitCount$[ebp], eax
; Line 1042
	mov	eax, DWORD PTR _intDigitCount$[ebp]
	cmp	eax, DWORD PTR _minIntDigitCount$[ebp]
	jl	SHORT $LN2@getScienti
; Line 1043
	mov	eax, DWORD PTR _intDigitCount$[ebp]
	sub	eax, DWORD PTR _minIntDigitCount$[ebp]
	mov	DWORD PTR _maxAdjustment$72791[ebp], eax
; Line 1044
	mov	eax, DWORD PTR _maxAdjustment$72791[ebp]
	cdq
	idiv	DWORD PTR _exponentMultiplier$[ebp]
	imul	eax, DWORD PTR _exponentMultiplier$[ebp]
	mov	DWORD PTR _exponent$[ebp], eax
; Line 1045
	jmp	SHORT $LN1@getScienti
$LN2@getScienti:
; Line 1046
	mov	eax, DWORD PTR _minIntDigitCount$[ebp]
	sub	eax, DWORD PTR _intDigitCount$[ebp]
	mov	DWORD PTR _minAdjustment$72793[ebp], eax
; Line 1047
	mov	eax, DWORD PTR _exponentMultiplier$[ebp]
	mov	ecx, DWORD PTR _minAdjustment$72793[ebp]
	lea	eax, DWORD PTR [ecx+eax-1]
	cdq
	idiv	DWORD PTR _exponentMultiplier$[ebp]
	mov	edx, DWORD PTR _exponentMultiplier$[ebp]
	neg	edx
	imul	eax, edx
	mov	DWORD PTR _exponent$[ebp], eax
$LN1@getScienti:
; Line 1049
	mov	eax, DWORD PTR _exponent$[ebp]
$LN4@getScienti:
; Line 1050
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getScientificExponent@DigitList@icu_56@@QBEHHH@Z ENDP	; icu_56::DigitList::getScientificExponent
_TEXT	ENDS
PUBLIC	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z	; icu_56::DigitList::shiftDecimalRight
PUBLIC	?toScientific@DigitList@icu_56@@QAEHHH@Z	; icu_56::DigitList::toScientific
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toScientific@DigitList@icu_56@@QAEHHH@Z
_TEXT	SEGMENT
_exponent$ = -20					; size = 4
_this$ = -8						; size = 4
_minIntDigitCount$ = 8					; size = 4
_exponentMultiplier$ = 12				; size = 4
?toScientific@DigitList@icu_56@@QAEHHH@Z PROC		; icu_56::DigitList::toScientific, COMDAT
; _this$ = ecx
; Line 1054
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1056
	mov	eax, DWORD PTR _exponentMultiplier$[ebp]
	push	eax
	mov	ecx, DWORD PTR _minIntDigitCount$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getScientificExponent@DigitList@icu_56@@QBEHHH@Z ; icu_56::DigitList::getScientificExponent
	mov	DWORD PTR _exponent$[ebp], eax
; Line 1057
	mov	eax, DWORD PTR _exponent$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ; icu_56::DigitList::shiftDecimalRight
; Line 1058
	mov	eax, DWORD PTR _exponent$[ebp]
; Line 1059
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?toScientific@DigitList@icu_56@@QAEHHH@Z ENDP		; icu_56::DigitList::toScientific
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z PROC	; icu_56::DigitList::shiftDecimalRight, COMDAT
; _this$ = ecx
; Line 1062
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1063
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+4], edx
; Line 1064
	mov	ecx, DWORD PTR _this$[ebp]
	call	?internalClear@DigitList@icu_56@@AAEXXZ	; icu_56::DigitList::internalClear
; Line 1065
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?shiftDecimalRight@DigitList@icu_56@@QAEXH@Z ENDP	; icu_56::DigitList::shiftDecimalRight
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set@4
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set@4
$LN3@set@4:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set@4:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
_TEXT	ENDS
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
_TEXT	ENDS
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,33>::MaybeStackArray<char,33>, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 33			; 00000021H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,33>::MaybeStackArray<char,33>
_TEXT	ENDS
PUBLIC	?releaseArray@?$MaybeStackArray@D$0CB@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,33>::releaseArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ PROC		; icu_56::MaybeStackArray<char,33>::~MaybeStackArray<char,33>, COMDAT
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseArray@?$MaybeStackArray@D$0CB@@icu_56@@AAEXXZ ; icu_56::MaybeStackArray<char,33>::releaseArray
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackArray@D$0CB@@icu_56@@QAE@XZ ENDP		; icu_56::MaybeStackArray<char,33>::~MaybeStackArray<char,33>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackArray<char,33>::getAlias, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackArray@D$0CB@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackArray<char,33>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$MaybeStackArray@D$0CB@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackArray@D$0CB@@icu_56@@QAEAADH@Z PROC	; icu_56::MaybeStackArray<char,33>::operator[], COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackArray@D$0CB@@icu_56@@QAEAADH@Z ENDP	; icu_56::MaybeStackArray<char,33>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?releaseArray@?$MaybeStackArray@D$0CB@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseArray@?$MaybeStackArray@D$0CB@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackArray<char,33>::releaseArray, COMDAT
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseArr
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseArr:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseArray@?$MaybeStackArray@D$0CB@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackArray<char,33>::releaseArray
_TEXT	ENDS
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$76971 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$76971[ebp], eax
; Line 597
	cmp	DWORD PTR _p$76971[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$76971[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$76971[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$76971[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
_TEXT	ENDS
END

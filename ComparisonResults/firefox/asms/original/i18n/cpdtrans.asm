; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\cpdtrans.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB ; icu_56::CompoundTransliterator::PASS_STRING
_BSS	SEGMENT
?classID@?1??getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::CompoundTransliterator::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_COLON_COLON DW	03aH
	DW	03aH
	DW	00H
	ORG $+2
?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB DW 025H ; icu_56::CompoundTransliterator::PASS_STRING
	DW	050H
	DW	061H
	DW	073H
	DW	073H
	DW	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ PROC ; icu_56::Transliterator::getMaximumContextLength, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\translit.h
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1314
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 1315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ENDP ; icu_56::Transliterator::getMaximumContextLength
_TEXT	ENDS
PUBLIC	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::setID, COMDAT
; _this$ = ecx
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	esi, esp
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1320
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::setID
_TEXT	ENDS
PUBLIC	?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ; icu_56::Transliterator::integerToken
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_i$ = 8							; size = 4
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z PROC ; icu_56::Transliterator::integerToken, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1327
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1328
	mov	eax, DWORD PTR _t$[ebp]
; Line 1329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@integerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@integerTok:
	DD	1
	DD	$LN4@integerTok
$LN4@integerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@integerTok
$LN3@integerTok:
	DB	116					; 00000074H
	DB	0
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ENDP ; icu_56::Transliterator::integerToken
_TEXT	ENDS
PUBLIC	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_p$ = 8							; size = 4
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z PROC ; icu_56::Transliterator::pointerToken, COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1333
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1334
	mov	eax, DWORD PTR _t$[ebp]
; Line 1335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pointerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pointerTok:
	DD	1
	DD	$LN4@pointerTok
$LN4@pointerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@pointerTok
$LN3@pointerTok:
	DB	116					; 00000074H
	DB	0
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ENDP ; icu_56::Transliterator::pointerToken
_TEXT	ENDS
PUBLIC	??1CompoundTransliterator@icu_56@@UAE@XZ	; icu_56::CompoundTransliterator::~CompoundTransliterator
PUBLIC	??_GCompoundTransliterator@icu_56@@UAEPAXI@Z	; icu_56::CompoundTransliterator::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCompoundTransliterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCompoundTransliterator@icu_56@@UAEPAXI@Z PROC	; icu_56::CompoundTransliterator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CompoundTransliterator@icu_56@@UAE@XZ ; icu_56::CompoundTransliterator::~CompoundTransliterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCompoundTransliterator@icu_56@@UAEPAXI@Z ENDP	; icu_56::CompoundTransliterator::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_ECompoundTransliterator@icu_56@@UAEPAXI@Z	; icu_56::CompoundTransliterator::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECompoundTransliterator@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECompoundTransliterator@icu_56@@UAEPAXI@Z PROC	; icu_56::CompoundTransliterator::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CompoundTransliterator@icu_56@@UAE@XZ ; icu_56::CompoundTransliterator::~CompoundTransliterator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CompoundTransliterator@icu_56@@UAE@XZ ; icu_56::CompoundTransliterator::~CompoundTransliterator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECompoundTransliterator@icu_56@@UAEPAXI@Z ENDP	; icu_56::CompoundTransliterator::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ ; icu_56::CompoundTransliterator::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ PROC ; icu_56::CompoundTransliterator::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\cpdtrans.cpp
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ ENDP ; icu_56::CompoundTransliterator::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ ; icu_56::CompoundTransliterator::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ PROC ; icu_56::CompoundTransliterator::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@CompoundTransliterator@icu_56@@SAPAXXZ ; icu_56::CompoundTransliterator::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ ENDP ; icu_56::CompoundTransliterator::getDynamicClassID
_TEXT	ENDS
PUBLIC	?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::setTransliterators
PUBLIC	??_7CompoundTransliterator@icu_56@@6B@		; icu_56::CompoundTransliterator::`vftable'
PUBLIC	?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::joinIDs
PUBLIC	__$ArrayPad$
PUBLIC	??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	??_R4CompoundTransliterator@icu_56@@6B@		; icu_56::CompoundTransliterator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCompoundTransliterator@icu_56@@@8	; icu_56::CompoundTransliterator `RTTI Type Descriptor'
PUBLIC	??_R3CompoundTransliterator@icu_56@@8		; icu_56::CompoundTransliterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CompoundTransliterator@icu_56@@8		; icu_56::CompoundTransliterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CompoundTransliterator@icu_56@@8	; icu_56::CompoundTransliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Transliterator@icu_56@@8		; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTransliterator@icu_56@@@8		; icu_56::Transliterator `RTTI Type Descriptor'
PUBLIC	??_R3Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Transliterator@icu_56@@8			; icu_56::Transliterator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ ; icu_56::CompoundTransliterator::clone
PUBLIC	?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ; icu_56::CompoundTransliterator::handleTransliterate
PUBLIC	?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::CompoundTransliterator::toRules
PUBLIC	?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z ; icu_56::CompoundTransliterator::handleGetSourceSet
PUBLIC	?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::CompoundTransliterator::getTargetSet
PUBLIC	?getCount@CompoundTransliterator@icu_56@@UBEHXZ	; icu_56::CompoundTransliterator::getCount
PUBLIC	?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::getTransliterator
EXTRN	??1Transliterator@icu_56@@UAE@XZ:PROC		; icu_56::Transliterator::~Transliterator
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z:PROC ; icu_56::Transliterator::Transliterator
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z:PROC ; icu_56::Transliterator::transliterate
EXTRN	?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z:PROC ; icu_56::Transliterator::finishTransliteration
EXTRN	?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z:PROC ; icu_56::Transliterator::filteredTransliterate
EXTRN	?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z:PROC ; icu_56::Transliterator::filteredTransliterate
EXTRN	?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ:PROC ; icu_56::Transliterator::getID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R2Transliterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Transliterator@icu_56@@8 ; icu_56::Transliterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R3Transliterator@icu_56@@8 DD 00H			; icu_56::Transliterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Transliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Transliterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Transliterator@icu_56@@8 DD FLAT:??_R0?AVTransliterator@icu_56@@@8 ; icu_56::Transliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Transliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CompoundTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CompoundTransliterator@icu_56@@8 DD FLAT:??_R0?AVCompoundTransliterator@icu_56@@@8 ; icu_56::CompoundTransliterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CompoundTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CompoundTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R2CompoundTransliterator@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CompoundTransliterator@icu_56@@8 ; icu_56::CompoundTransliterator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Transliterator@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CompoundTransliterator@icu_56@@8
rdata$r	SEGMENT
??_R3CompoundTransliterator@icu_56@@8 DD 00H		; icu_56::CompoundTransliterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CompoundTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCompoundTransliterator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCompoundTransliterator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CompoundTransliterator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCompoundTransliterator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CompoundTransliterator@icu_56@@6B@
rdata$r	SEGMENT
??_R4CompoundTransliterator@icu_56@@6B@ DD 00H		; icu_56::CompoundTransliterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCompoundTransliterator@icu_56@@@8
	DD	FLAT:??_R3CompoundTransliterator@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CompoundTransliterator@icu_56@@6B@
CONST	SEGMENT
??_7CompoundTransliterator@icu_56@@6B@ DD FLAT:??_R4CompoundTransliterator@icu_56@@6B@ ; icu_56::CompoundTransliterator::`vftable'
	DD	FLAT:??_ECompoundTransliterator@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@CompoundTransliterator@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@HAAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@@Z
	DD	FLAT:?transliterate@Transliterator@icu_56@@UBEHAAVReplaceable@2@HH@Z
	DD	FLAT:?finishTransliteration@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@@Z
	DD	FLAT:?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@EBEXAAVReplaceable@2@AAUUTransPosition@@CC@Z
	DD	FLAT:?filteredTransliterate@Transliterator@icu_56@@UBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
	DD	FLAT:?getID@Transliterator@icu_56@@UBEABVUnicodeString@2@XZ
	DD	FLAT:?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z
	DD	FLAT:?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
	DD	FLAT:?getCount@CompoundTransliterator@icu_56@@UBEHXZ
	DD	FLAT:?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1
__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z
_TEXT	SEGMENT
tv128 = -300						; size = 4
tv130 = -296						; size = 4
$T36950 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_transliterators$ = 8					; size = 4
_transliteratorCount$ = 12				; size = 4
_adoptedFilter$ = 16					; size = 4
??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _adoptedFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _transliteratorCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _transliterators$[ebp]
	push	edx
	lea	eax, DWORD PTR $T36950[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::joinIDs
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T36950[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 55
	mov	eax, DWORD PTR _transliteratorCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _transliterators$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::setTransliterators
; Line 56
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36950[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@QAE@QBQAVTransliterator@1@HPAVUnicodeFilter@1@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
PUBLIC	??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_direction$ = 12					; size = 4
_adoptedFilter$ = 16					; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _adoptedFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 74
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _direction$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 75
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@W4UTransDirection@@PAVUnicodeFilter@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
___formal$ = 12						; size = 4
_status$ = 16						; size = 4
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 84
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 85
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
PUBLIC	??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_newID$ = 8						; size = 4
_list$ = 12						; size = 4
_adoptedFilter$ = 16					; size = 4
_anonymousRBTs$ = 20					; size = 4
___formal$ = 24						; size = 4
_status$ = 28						; size = 4
??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _adoptedFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _anonymousRBTs$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 100
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 101
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@AAE@ABVUnicodeString@1@AAVUVector@1@PAVUnicodeFilter@1@HAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	__$ArrayPad$
PUBLIC	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -300						; size = 4
tv128 = -296						; size = 4
$T36980 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
___formal$ = 12						; size = 4
_status$ = 16						; size = 4
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	esi, esp
	lea	ecx, DWORD PTR $T36980[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T36980[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 116
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 118
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36980[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	__$ArrayPad$
PUBLIC	??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -300						; size = 4
tv128 = -296						; size = 4
$T36988 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
_anonymousRBTs$ = 12					; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	esi, esp
	lea	ecx, DWORD PTR $T36988[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABVUnicodeString@1@PAVUnicodeFilter@1@@Z ; icu_56::Transliterator::Transliterator
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T36988[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _anonymousRBTs$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 127
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 128
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T36988[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@AAE@AAVUVector@1@HAAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	__$ArrayPad$
EXTRN	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z:PROC ; icu_56::Transliterator::adoptFilter
EXTRN	?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z:PROC ; icu_56::TransliteratorIDParser::instantiateList
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
EXTRN	?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z:PROC ; icu_56::TransliteratorIDParser::parseCompoundID
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$1
__ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -364						; size = 4
$T43974 = -356						; size = 4
$T43975 = -344						; size = 4
_regenID$ = -140					; size = 64
_compoundFilter$ = -68					; size = 4
_list$ = -56						; size = 24
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_id$ = 8						; size = 4
_direction$ = 12					; size = 4
_fixReverseID$ = 16					; size = 1
_status$ = 20						; size = 4
?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::init, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@init
; Line 153
	jmp	$LN4@init
$LN3@init:
; Line 156
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 157
	mov	DWORD PTR _compoundFilter$[ebp], 0
; Line 158
	mov	esi, esp
	lea	ecx, DWORD PTR _regenID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 160
	lea	eax, DWORD PTR _compoundFilter$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	lea	edx, DWORD PTR _regenID$[ebp]
	push	edx
	mov	eax, DWORD PTR _direction$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	?parseCompoundID@TransliteratorIDParser@icu_56@@SACABVUnicodeString@2@HAAV32@AAVUVector@2@AAPAVUnicodeSet@2@@Z ; icu_56::TransliteratorIDParser::parseCompoundID
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	jne	$LN2@init
; Line 161
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 65569			; 00010021H
; Line 162
	mov	eax, DWORD PTR _compoundFilter$[ebp]
	mov	DWORD PTR $T43975[ebp], eax
	mov	ecx, DWORD PTR $T43975[ebp]
	mov	DWORD PTR $T43974[ebp], ecx
	cmp	DWORD PTR $T43974[ebp], 0
	je	SHORT $LN6@init
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43974[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43974[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN7@init
$LN6@init:
	mov	DWORD PTR tv93[ebp], 0
$LN7@init:
; Line 163
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _regenID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@init
$LN2@init:
; Line 166
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	?instantiateList@TransliteratorIDParser@icu_56@@SAXAAVUVector@2@AAW4UErrorCode@@@Z ; icu_56::TransliteratorIDParser::instantiateList
	add	esp, 8
; Line 168
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _fixReverseID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _direction$[ebp]
	push	edx
	lea	eax, DWORD PTR _list$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ; icu_56::CompoundTransliterator::init
; Line 170
	cmp	DWORD PTR _compoundFilter$[ebp], 0
	je	SHORT $LN1@init
; Line 171
	mov	eax, DWORD PTR _compoundFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
$LN1@init:
; Line 173
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _regenID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@init:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN15@init:
	DD	3
	DD	$LN14@init
$LN14@init:
	DD	-56					; ffffffc8H
	DD	24					; 00000018H
	DD	$LN10@init
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN11@init
	DD	-140					; ffffff74H
	DD	64					; 00000040H
	DD	$LN12@init
$LN12@init:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN11@init:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@init:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _regenID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@CompoundTransliterator@icu_56@@AAEXABVUnicodeString@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::computeMaximumContextLength
PUBLIC	__$ArrayPad$
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\cpdtrans.cpp
xdata$x	SEGMENT
__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0
__ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -320						; size = 4
_newID$37025 = -120					; size = 64
_j$37022 = -48						; size = 4
_i$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_list$ = 8						; size = 4
_direction$ = 12					; size = 4
_fixReverseID$ = 16					; size = 1
_status$ = 20						; size = 4
?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z PROC ; icu_56::CompoundTransliterator::init, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@init@2
; Line 196
	mov	esi, esp
	mov	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 197
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], eax
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN12@init@2
; Line 200
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 201
	jmp	$LN13@init@2
$LN12@init@2:
; Line 205
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN9@init@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN10@init@2
$LN9@init@2:
; Line 207
	jmp	$LN13@init@2
$LN10@init@2:
; Line 213
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@init@2
$LN7@init@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@init@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN6@init@2
; Line 214
	cmp	DWORD PTR _direction$[ebp], 0
	jne	SHORT $LN15@init@2
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN16@init@2
$LN15@init@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	sub	edx, 1
	sub	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv91[ebp], edx
$LN16@init@2:
	mov	eax, DWORD PTR tv91[ebp]
	mov	DWORD PTR _j$37022[ebp], eax
; Line 215
	mov	esi, esp
	mov	eax, DWORD PTR _j$37022[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 216
	jmp	SHORT $LN7@init@2
$LN6@init@2:
; Line 220
	cmp	DWORD PTR _direction$[ebp], 1
	jne	$LN5@init@2
	movsx	eax, BYTE PTR _fixReverseID$[ebp]
	test	eax, eax
	je	$LN5@init@2
; Line 221
	mov	esi, esp
	lea	ecx, DWORD PTR _newID$37025[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 222
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@init@2
$LN3@init@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@init@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN2@init@2
; Line 223
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN1@init@2
; Line 224
	mov	esi, esp
	push	59					; 0000003bH
	lea	ecx, DWORD PTR _newID$37025[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@init@2:
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _newID$37025[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	jmp	SHORT $LN3@init@2
$LN2@init@2:
; Line 228
	lea	eax, DWORD PTR _newID$37025[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
; Line 229
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _newID$37025[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@init@2:
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::computeMaximumContextLength
$LN13@init@2:
; Line 232
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@init@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN21@init@2:
	DD	1
	DD	$LN20@init@2
$LN20@init@2:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN18@init@2
$LN18@init@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _newID$37025[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@CompoundTransliterator@icu_56@@AAEXAAVUVector@2@W4UTransDirection@@CAAW4UErrorCode@@@Z ENDP ; icu_56::CompoundTransliterator::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\cpdtrans.cpp
xdata$x	SEGMENT
__unwindtable$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$0
__ehfuncinfo$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z
_TEXT	SEGMENT
$T44015 = -312						; size = 4
_i$37037 = -108						; size = 4
_id$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_transliterators$ = 12					; size = 4
_transCount$ = 16					; size = 4
?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z PROC ; icu_56::CompoundTransliterator::joinIDs, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T44015[ebp], 0
; Line 241
	mov	esi, esp
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 242
	mov	DWORD PTR _i$37037[ebp], 0
	jmp	SHORT $LN4@joinIDs
$LN3@joinIDs:
	mov	eax, DWORD PTR _i$37037[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37037[ebp], eax
$LN4@joinIDs:
	mov	eax, DWORD PTR _i$37037[ebp]
	cmp	eax, DWORD PTR _transCount$[ebp]
	jge	SHORT $LN2@joinIDs
; Line 243
	cmp	DWORD PTR _i$37037[ebp], 0
	jle	SHORT $LN1@joinIDs
; Line 244
	mov	esi, esp
	push	59					; 0000003bH
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@joinIDs:
; Line 246
	mov	eax, DWORD PTR _i$37037[ebp]
	mov	ecx, DWORD PTR _transliterators$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$37037[ebp]
	mov	ecx, DWORD PTR _transliterators$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 247
	jmp	SHORT $LN3@joinIDs
$LN2@joinIDs:
; Line 248
	mov	esi, esp
	lea	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T44015[ebp]
	or	ecx, 1
	mov	DWORD PTR $T44015[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 249
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@joinIDs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN13@joinIDs:
	DD	1
	DD	$LN12@joinIDs
$LN12@joinIDs:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN10@joinIDs
$LN10@joinIDs:
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _id$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z$1:
	mov	eax, DWORD PTR $T44015[ebp]
	and	eax, 1
	je	$LN9@joinIDs
	and	DWORD PTR $T44015[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN9@joinIDs:
	ret	0
__ehhandler$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z ENDP ; icu_56::CompoundTransliterator::joinIDs
PUBLIC	??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z ; icu_56::CompoundTransliterator::operator=
PUBLIC	??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z	; icu_56::CompoundTransliterator::CompoundTransliterator
EXTRN	??0Transliterator@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::Transliterator::Transliterator
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z PROC	; icu_56::CompoundTransliterator::CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 255
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Transliterator@icu_56@@IAE@ABV01@@Z	; icu_56::Transliterator::Transliterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], -1
; Line 256
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z ; icu_56::CompoundTransliterator::operator=
; Line 257
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::CompoundTransliterator::CompoundTransliterator
PUBLIC	?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::freeTransliterators
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CompoundTransliterator@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CompoundTransliterator@icu_56@@UAE@XZ$0
__ehfuncinfo$??1CompoundTransliterator@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CompoundTransliterator@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CompoundTransliterator@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CompoundTransliterator@icu_56@@UAE@XZ PROC		; icu_56::CompoundTransliterator::~CompoundTransliterator, COMDAT
; _this$ = ecx
; Line 262
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CompoundTransliterator@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CompoundTransliterator@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 263
	mov	ecx, DWORD PTR _this$[ebp]
	call	?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::freeTransliterators
; Line 264
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CompoundTransliterator@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Transliterator@icu_56@@UAE@XZ	; icu_56::Transliterator::~Transliterator
__ehhandler$??1CompoundTransliterator@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CompoundTransliterator@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CompoundTransliterator@icu_56@@UAE@XZ ENDP		; icu_56::CompoundTransliterator::~CompoundTransliterator
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv82 = -244						; size = 4
$T44046 = -236						; size = 4
$T44047 = -224						; size = 4
_i$37054 = -20						; size = 4
_this$ = -8						; size = 4
?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ PROC ; icu_56::CompoundTransliterator::freeTransliterators, COMDAT
; _this$ = ecx
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	$LN4@freeTransl
; Line 268
	mov	DWORD PTR _i$37054[ebp], 0
	jmp	SHORT $LN3@freeTransl
$LN2@freeTransl:
	mov	eax, DWORD PTR _i$37054[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37054[ebp], eax
$LN3@freeTransl:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37054[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN1@freeTransl
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37054[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T44047[ebp], eax
	mov	ecx, DWORD PTR $T44047[ebp]
	mov	DWORD PTR $T44046[ebp], ecx
	cmp	DWORD PTR $T44046[ebp], 0
	je	SHORT $LN7@freeTransl
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44046[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44046[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN8@freeTransl
$LN7@freeTransl:
	mov	DWORD PTR tv82[ebp], 0
$LN8@freeTransl:
; Line 270
	jmp	SHORT $LN2@freeTransl
$LN1@freeTransl:
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN4@freeTransl:
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ ENDP ; icu_56::CompoundTransliterator::freeTransliterators
_TEXT	ENDS
EXTRN	??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z:PROC ; icu_56::Transliterator::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv92 = -268						; size = 4
$T44052 = -260						; size = 4
$T44053 = -248						; size = 4
_n$37082 = -44						; size = 4
_failed$ = -29						; size = 1
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 4
??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z PROC ; icu_56::CompoundTransliterator::operator=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Transliterator@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::Transliterator::operator=
; Line 284
	mov	DWORD PTR _i$[ebp], 0
; Line 285
	mov	BYTE PTR _failed$[ebp], 0
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	$LN15@operator
; Line 287
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@operator
$LN13@operator:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN14@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN15@operator
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T44053[ebp], eax
	mov	ecx, DWORD PTR $T44053[ebp]
	mov	DWORD PTR $T44052[ebp], ecx
	cmp	DWORD PTR $T44052[ebp], 0
	je	SHORT $LN18@operator
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44052[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44052[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN19@operator
$LN18@operator:
	mov	DWORD PTR tv92[ebp], 0
$LN19@operator:
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 290
	jmp	SHORT $LN13@operator
$LN15@operator:
; Line 292
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [ecx+80]
	jle	SHORT $LN11@operator
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN10@operator
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN10@operator:
; Line 296
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	shl	ecx, 2
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], eax
$LN11@operator:
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
; Line 299
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN9@operator
; Line 300
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN9@operator
; Line 301
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 302
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	jne	SHORT $LN5@operator
; Line 303
	mov	BYTE PTR _failed$[ebp], 1
; Line 304
	jmp	SHORT $LN9@operator
$LN5@operator:
; Line 306
	jmp	SHORT $LN7@operator
$LN9@operator:
; Line 310
	movsx	eax, BYTE PTR _failed$[ebp]
	test	eax, eax
	je	SHORT $LN4@operator
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN4@operator
; Line 312
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$37082[ebp], eax
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _n$37082[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$37082[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _n$37082[ebp], 0
	jl	SHORT $LN4@operator
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _n$37082[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _n$37082[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
; Line 315
	jmp	SHORT $LN2@operator
$LN4@operator:
; Line 317
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
; Line 319
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CompoundTransliterator@icu_56@@AAEAAV01@ABV01@@Z ENDP ; icu_56::CompoundTransliterator::operator=
_TEXT	ENDS
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0
__ehfuncinfo$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T44058 = -236						; size = 4
$T44059 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ PROC ; icu_56::CompoundTransliterator::clone, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 325
	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44059[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T44059[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44059[ebp]
	call	??0CompoundTransliterator@icu_56@@QAE@ABV01@@Z ; icu_56::CompoundTransliterator::CompoundTransliterator
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T44058[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T44058[ebp]
; Line 326
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T44059[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@CompoundTransliterator@icu_56@@UBEPAVTransliterator@2@XZ ENDP ; icu_56::CompoundTransliterator::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCount@CompoundTransliterator@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCount@CompoundTransliterator@icu_56@@UBEHXZ PROC	; icu_56::CompoundTransliterator::getCount, COMDAT
; _this$ = ecx
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+80]
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCount@CompoundTransliterator@icu_56@@UBEHXZ ENDP	; icu_56::CompoundTransliterator::getCount
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z PROC ; icu_56::CompoundTransliterator::getTransliterator, COMDAT
; _this$ = ecx
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 343
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getTransliterator@CompoundTransliterator@icu_56@@UBEABVTransliterator@2@H@Z ENDP ; icu_56::CompoundTransliterator::getTransliterator
_TEXT	ENDS
PUBLIC	?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::adoptTransliterators
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z
_TEXT	SEGMENT
_n$37118 = -56						; size = 4
_failed$ = -41						; size = 1
_i$ = -32						; size = 4
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_transliterators$ = 8					; size = 4
_transCount$ = 12					; size = 4
?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z PROC ; icu_56::CompoundTransliterator::setTransliterators, COMDAT
; _this$ = ecx
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 347
	mov	eax, DWORD PTR _transCount$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _a$[ebp], eax
; Line 348
	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN9@setTransli
; Line 349
	jmp	$LN10@setTransli
$LN9@setTransli:
; Line 351
	mov	DWORD PTR _i$[ebp], 0
; Line 352
	mov	BYTE PTR _failed$[ebp], 0
; Line 353
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@setTransli
$LN7@setTransli:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@setTransli:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _transCount$[ebp]
	jge	SHORT $LN6@setTransli
; Line 354
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _transliterators$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _transliterators$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 355
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN5@setTransli
; Line 356
	mov	BYTE PTR _failed$[ebp], 1
; Line 357
	jmp	SHORT $LN6@setTransli
$LN5@setTransli:
; Line 359
	jmp	SHORT $LN7@setTransli
$LN6@setTransli:
; Line 360
	movsx	eax, BYTE PTR _failed$[ebp]
	test	eax, eax
	je	SHORT $LN4@setTransli
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN4@setTransli
; Line 362
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$37118[ebp], eax
	jmp	SHORT $LN3@setTransli
$LN2@setTransli:
	mov	eax, DWORD PTR _n$37118[ebp]
	sub	eax, 1
	mov	DWORD PTR _n$37118[ebp], eax
$LN3@setTransli:
	cmp	DWORD PTR _n$37118[ebp], 0
	jl	SHORT $LN1@setTransli
; Line 363
	mov	eax, DWORD PTR _n$37118[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_uprv_free_56
	add	esp, 4
; Line 364
	mov	eax, DWORD PTR _n$37118[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 365
	jmp	SHORT $LN2@setTransli
$LN1@setTransli:
; Line 366
	jmp	SHORT $LN10@setTransli
$LN4@setTransli:
; Line 368
	mov	eax, DWORD PTR _transCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::adoptTransliterators
$LN10@setTransli:
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setTransliterators@CompoundTransliterator@icu_56@@QAEXQBQAVTransliterator@2@H@Z ENDP ; icu_56::CompoundTransliterator::setTransliterators
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z$0
__ehfuncinfo$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z
_TEXT	SEGMENT
tv84 = -300						; size = 4
tv85 = -296						; size = 4
$T37127 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_adoptedTransliterators$ = 8				; size = 4
_transCount$ = 12					; size = 4
?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z PROC ; icu_56::CompoundTransliterator::adoptTransliterators, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	ecx, DWORD PTR _this$[ebp]
	call	?freeTransliterators@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::freeTransliterators
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _adoptedTransliterators$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _transCount$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 378
	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ ; icu_56::CompoundTransliterator::computeMaximumContextLength
; Line 379
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	lea	ecx, DWORD PTR $T37127[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?joinIDs@CompoundTransliterator@icu_56@@AAE?AVUnicodeString@2@QBQAVTransliterator@2@H@Z ; icu_56::CompoundTransliterator::joinIDs
	mov	DWORD PTR tv85[ebp], eax
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv84[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37127[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 380
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37127[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?adoptTransliterators@CompoundTransliterator@icu_56@@QAEXQAPAVTransliterator@2@H@Z ENDP ; icu_56::CompoundTransliterator::adoptTransliterators
PUBLIC	??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::Transliterator::toRules
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ:PROC ; icu_56::Transliterator::getFilter
;	COMDAT ??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@ DB ':'
	DB	00H, ':', 00H, 'N', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ';', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$3
__ehfuncinfo$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
_TEXT	SEGMENT
tv257 = -536						; size = 4
tv263 = -532						; size = 4
tv255 = -528						; size = 4
tv260 = -524						; size = 4
tv95 = -524						; size = 4
$T37148 = -516						; size = 64
$T37149 = -444						; size = 64
_rule$37144 = -180					; size = 64
_i$37140 = -108						; size = 4
_pat$37139 = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rulesSource$ = 8					; size = 4
_escapeUnprintable$ = 12				; size = 1
?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z PROC ; icu_56::CompoundTransliterator::toRules, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 400
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 401
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 1
	jl	$LN9@toRules
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ ; icu_56::Transliterator::getFilter
	test	eax, eax
	je	$LN9@toRules
; Line 404
	mov	esi, esp
	lea	ecx, DWORD PTR _pat$37139[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 405
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getFilter@Transliterator@icu_56@@QBEPBVUnicodeFilter@2@XZ ; icu_56::Transliterator::getFilter
	add	eax, 4
	mov	DWORD PTR tv95[ebp], eax
	mov	esi, esp
	push	59					; 0000003bH
	mov	edi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pat$37139[ebp]
	push	ecx
	mov	edx, DWORD PTR tv95[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv95[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	edi, esp
	push	eax
	mov	ebx, esp
	push	2
	push	OFFSET _COLON_COLON
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 406
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pat$37139[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@toRules:
; Line 407
	mov	DWORD PTR _i$37140[ebp], 0
	jmp	SHORT $LN8@toRules
$LN7@toRules:
	mov	eax, DWORD PTR _i$37140[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37140[ebp], eax
$LN8@toRules:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37140[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	$LN6@toRules
; Line 408
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$37144[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 414
	mov	esi, esp
	push	5
	push	OFFSET ?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB ; icu_56::CompoundTransliterator::PASS_STRING
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37140[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@toRules
; Line 415
	mov	esi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rule$37144[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	eax, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 1
	jle	$LN4@toRules
	cmp	DWORD PTR _i$37140[ebp], 0
	jle	$LN4@toRules
	mov	esi, esp
	push	5
	push	OFFSET ?PASS_STRING@CompoundTransliterator@icu_56@@2QB_WB ; icu_56::CompoundTransliterator::PASS_STRING
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37140[ebp]
	mov	eax, DWORD PTR [ecx+edx*4-4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4-4]
	mov	edx, DWORD PTR [eax]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@toRules
; Line 417
	mov	esi, esp
	lea	eax, DWORD PTR _rule$37144[ebp]
	push	eax
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1BA@HJGEPKAN@?$AA?3?$AA?3?$AAN?$AAu?$AAl?$AAl?$AA?$DL?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T37148[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv260[ebp], eax
	mov	ecx, DWORD PTR tv260[ebp]
	mov	DWORD PTR tv255[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv255[ebp]
	push	edx
	lea	eax, DWORD PTR $T37149[ebp]
	push	eax
	call	DWORD PTR __imp_??Hicu_56@@YA?AVUnicodeString@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv263[ebp], eax
	mov	ecx, DWORD PTR tv263[ebp]
	mov	DWORD PTR tv257[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv257[ebp]
	push	edx
	lea	ecx, DWORD PTR _rule$37144[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T37149[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T37148[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@toRules:
; Line 423
	jmp	$LN3@toRules
$LN5@toRules:
	mov	esi, esp
	push	59					; 0000003bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37140[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax]
	mov	edi, esp
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN2@toRules
; Line 424
	mov	esi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rule$37144[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	eax, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 427
	jmp	SHORT $LN3@toRules
$LN2@toRules:
; Line 428
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rule$37144[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR _i$37140[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4]
	call	?toRules@Transliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ; icu_56::Transliterator::toRules
$LN3@toRules:
; Line 430
	push	10					; 0000000aH
	mov	eax, DWORD PTR _rulesSource$[ebp]
	push	eax
	call	?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z ; icu_56::_smartAppend
	add	esp, 8
; Line 431
	mov	esi, esp
	lea	eax, DWORD PTR _rule$37144[ebp]
	push	eax
	mov	ecx, DWORD PTR _rulesSource$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 432
	push	59					; 0000003bH
	mov	eax, DWORD PTR _rulesSource$[ebp]
	push	eax
	call	?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z ; icu_56::_smartAppend
	add	esp, 8
; Line 433
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$37144[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN7@toRules
$LN6@toRules:
; Line 434
	mov	eax, DWORD PTR _rulesSource$[ebp]
; Line 435
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@toRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN20@toRules:
	DD	2
	DD	$LN19@toRules
$LN19@toRules:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN16@toRules
	DD	-180					; ffffff4cH
	DD	64					; 00000040H
	DD	$LN17@toRules
$LN17@toRules:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN16@toRules:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pat$37139[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _rule$37144[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37148[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T37149[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?toRules@CompoundTransliterator@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z ENDP ; icu_56::CompoundTransliterator::toRules
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_c$ = 12						; size = 2
?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z PROC	; icu_56::_smartAppend, COMDAT
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 387
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@smartAppen
	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	eax, ecx
	je	SHORT $LN2@smartAppen
; Line 388
	mov	esi, esp
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@smartAppen:
; Line 390
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_smartAppend@icu_56@@YAXAAVUnicodeString@1@_W@Z ENDP	; icu_56::_smartAppend
_TEXT	ENDS
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
EXTRN	?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z:PROC ; icu_56::Transliterator::getSourceSet
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z$0
__ehfuncinfo$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z
_TEXT	SEGMENT
_i$37159 = -92						; size = 4
_set$ = -80						; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z PROC ; icu_56::CompoundTransliterator::handleGetSourceSet, COMDAT
; _this$ = ecx
; Line 440
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 441
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 442
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 443
	mov	DWORD PTR _i$37159[ebp], 0
	jmp	SHORT $LN4@handleGetS
$LN3@handleGetS:
	mov	eax, DWORD PTR _i$37159[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37159[ebp], eax
$LN4@handleGetS:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37159[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN2@handleGetS
; Line 444
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR _i$37159[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	call	?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::Transliterator::getSourceSet
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@handleGetS
; Line 454
	jmp	SHORT $LN2@handleGetS
$LN1@handleGetS:
; Line 456
	jmp	SHORT $LN3@handleGetS
$LN2@handleGetS:
; Line 457
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@handleGetS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN11@handleGetS:
	DD	1
	DD	$LN10@handleGetS
$LN10@handleGetS:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN8@handleGetS
$LN8@handleGetS:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?handleGetSourceSet@CompoundTransliterator@icu_56@@MBEXAAVUnicodeSet@2@@Z ENDP ; icu_56::CompoundTransliterator::handleGetSourceSet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z$0
__ehfuncinfo$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
_TEXT	SEGMENT
$T44118 = -296						; size = 4
_i$37169 = -92						; size = 4
_set$ = -80						; size = 52
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z PROC ; icu_56::CompoundTransliterator::getTargetSet, COMDAT
; _this$ = ecx
; Line 462
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 463
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 464
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 465
	mov	DWORD PTR _i$37169[ebp], 0
	jmp	SHORT $LN3@getTargetS
$LN2@getTargetS:
	mov	eax, DWORD PTR _i$37169[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37169[ebp], eax
$LN3@getTargetS:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37169[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN1@getTargetS
; Line 467
	mov	esi, esp
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR _i$37169[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	edx, DWORD PTR _i$37169[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 468
	jmp	SHORT $LN2@getTargetS
$LN1@getTargetS:
; Line 469
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T44118[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T44118[ebp]
; Line 470
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@getTargetS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN10@getTargetS:
	DD	1
	DD	$LN9@getTargetS
$LN9@getTargetS:
	DD	-80					; ffffffb0H
	DD	52					; 00000034H
	DD	$LN7@getTargetS
$LN7@getTargetS:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getTargetSet@CompoundTransliterator@icu_56@@UBEAAVUnicodeSet@2@AAV32@@Z ENDP ; icu_56::CompoundTransliterator::getTargetSet
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z
_TEXT	SEGMENT
_limit$37188 = -68					; size = 4
_i$37184 = -56						; size = 4
_delta$ = -44						; size = 4
_compoundStart$ = -32					; size = 4
_compoundLimit$ = -20					; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_index$ = 12						; size = 4
_incremental$ = 16					; size = 1
?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z PROC ; icu_56::CompoundTransliterator::handleTransliterate, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 1
	jge	SHORT $LN7@handleTran
; Line 533
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
; Line 534
	jmp	$LN8@handleTran
$LN7@handleTran:
; Line 541
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _compoundLimit$[ebp], ecx
; Line 545
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _compoundStart$[ebp], ecx
; Line 547
	mov	DWORD PTR _delta$[ebp], 0
; Line 551
	mov	DWORD PTR _i$37184[ebp], 0
	jmp	SHORT $LN6@handleTran
$LN5@handleTran:
	mov	eax, DWORD PTR _i$37184[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37184[ebp], eax
$LN6@handleTran:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37184[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	$LN4@handleTran
; Line 552
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _compoundStart$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 553
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _limit$37188[ebp], ecx
; Line 555
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@handleTran
; Line 557
	jmp	SHORT $LN4@handleTran
$LN3@handleTran:
; Line 560
	mov	esi, esp
	movzx	eax, BYTE PTR _incremental$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37184[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _i$37184[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 569
	movsx	eax, BYTE PTR _incremental$[ebp]
	test	eax, eax
	jne	SHORT $LN2@handleTran
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN2@handleTran
; Line 571
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
$LN2@handleTran:
; Line 575
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _limit$37188[ebp]
	add	ecx, DWORD PTR _delta$[ebp]
	mov	DWORD PTR _delta$[ebp], ecx
; Line 577
	movsx	eax, BYTE PTR _incremental$[ebp]
	test	eax, eax
	je	SHORT $LN1@handleTran
; Line 583
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
$LN1@handleTran:
; Line 585
	jmp	$LN5@handleTran
$LN4@handleTran:
; Line 587
	mov	eax, DWORD PTR _compoundLimit$[ebp]
	add	eax, DWORD PTR _delta$[ebp]
	mov	DWORD PTR _compoundLimit$[ebp], eax
; Line 592
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _compoundLimit$[ebp]
	mov	DWORD PTR [eax+12], ecx
$LN8@handleTran:
; Line 593
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?handleTransliterate@CompoundTransliterator@icu_56@@MBEXAAVReplaceable@2@AAUUTransPosition@@C@Z ENDP ; icu_56::CompoundTransliterator::handleTransliterate
_TEXT	ENDS
EXTRN	?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z:PROC ; icu_56::Transliterator::setMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ
_TEXT	SEGMENT
_len$37201 = -44					; size = 4
_i$37197 = -32						; size = 4
_max$ = -20						; size = 4
_this$ = -8						; size = 4
?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ PROC ; icu_56::CompoundTransliterator::computeMaximumContextLength, COMDAT
; _this$ = ecx
; Line 599
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	DWORD PTR _max$[ebp], 0
; Line 601
	mov	DWORD PTR _i$37197[ebp], 0
	jmp	SHORT $LN4@computeMax
$LN3@computeMax:
	mov	eax, DWORD PTR _i$37197[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37197[ebp], eax
$LN4@computeMax:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$37197[ebp]
	cmp	ecx, DWORD PTR [eax+80]
	jge	SHORT $LN2@computeMax
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _i$37197[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
	mov	DWORD PTR _len$37201[ebp], eax
; Line 603
	mov	eax, DWORD PTR _len$37201[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN1@computeMax
; Line 604
	mov	eax, DWORD PTR _len$37201[ebp]
	mov	DWORD PTR _max$[ebp], eax
$LN1@computeMax:
; Line 606
	jmp	SHORT $LN3@computeMax
$LN2@computeMax:
; Line 607
	mov	eax, DWORD PTR _max$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMaximumContextLength@Transliterator@icu_56@@IAEXH@Z ; icu_56::Transliterator::setMaximumContextLength
; Line 608
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?computeMaximumContextLength@CompoundTransliterator@icu_56@@AAEXXZ ENDP ; icu_56::CompoundTransliterator::computeMaximumContextLength
_TEXT	ENDS
END

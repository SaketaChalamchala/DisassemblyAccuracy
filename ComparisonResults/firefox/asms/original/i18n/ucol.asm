; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\ucol.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?TERMINATOR_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::TERMINATOR_BYTE
PUBLIC	?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
PUBLIC	?BEFORE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::BEFORE_WEIGHT16
PUBLIC	?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::MERGE_SEPARATOR_BYTE
PUBLIC	?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
PUBLIC	?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB	; icu_56::Collation::MERGE_SEPARATOR_CE32
PUBLIC	?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
PUBLIC	?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
PUBLIC	?COMMON_BYTE@Collation@icu_56@@2EB		; icu_56::Collation::COMMON_BYTE
PUBLIC	?COMMON_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::COMMON_WEIGHT16
PUBLIC	?COMMON_SECONDARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SECONDARY_CE
PUBLIC	?COMMON_TERTIARY_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_TERTIARY_CE
PUBLIC	?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB	; icu_56::Collation::COMMON_SEC_AND_TER_CE
PUBLIC	?SECONDARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::SECONDARY_MASK
PUBLIC	?CASE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::CASE_MASK
PUBLIC	?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_AND_CASE_MASK
PUBLIC	?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_TERTIARY_MASK
PUBLIC	?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB	; icu_56::Collation::ONLY_SEC_TER_MASK
PUBLIC	?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_TERTIARY_MASK
PUBLIC	?QUATERNARY_MASK@Collation@icu_56@@2IB		; icu_56::Collation::QUATERNARY_MASK
PUBLIC	?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB	; icu_56::Collation::CASE_AND_QUATERNARY_MASK
PUBLIC	?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
PUBLIC	?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
PUBLIC	?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::TRAIL_WEIGHT_BYTE
PUBLIC	?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB	; icu_56::Collation::FIRST_TRAILING_PRIMARY
PUBLIC	?MAX_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::MAX_PRIMARY
PUBLIC	?MAX_REGULAR_CE32@Collation@icu_56@@2IB		; icu_56::Collation::MAX_REGULAR_CE32
PUBLIC	?FFFD_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_PRIMARY
PUBLIC	?FFFD_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FFFD_CE32
PUBLIC	?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
PUBLIC	?FALLBACK_CE32@Collation@icu_56@@2IB		; icu_56::Collation::FALLBACK_CE32
PUBLIC	?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
PUBLIC	?UNASSIGNED_CE32@Collation@icu_56@@2IB		; icu_56::Collation::UNASSIGNED_CE32
PUBLIC	?NO_CE32@Collation@icu_56@@2IB			; icu_56::Collation::NO_CE32
PUBLIC	?NO_CE_PRIMARY@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_PRIMARY
PUBLIC	?NO_CE_WEIGHT16@Collation@icu_56@@2IB		; icu_56::Collation::NO_CE_WEIGHT16
PUBLIC	?NO_CE@Collation@icu_56@@2_JB			; icu_56::Collation::NO_CE
PUBLIC	?NO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::NO_LEVEL_FLAG
PUBLIC	?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::PRIMARY_LEVEL_FLAG
PUBLIC	?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::SECONDARY_LEVEL_FLAG
PUBLIC	?CASE_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::CASE_LEVEL_FLAG
PUBLIC	?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::TERTIARY_LEVEL_FLAG
PUBLIC	?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
PUBLIC	?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
PUBLIC	?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB		; icu_56::Collation::ZERO_LEVEL_FLAG
PUBLIC	?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB	; icu_56::Collation::MAX_EXPANSION_LENGTH
PUBLIC	?MAX_INDEX@Collation@icu_56@@2HB		; icu_56::Collation::MAX_INDEX
PUBLIC	?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
PUBLIC	?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_NEXT_CCC
PUBLIC	?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB	; icu_56::Collation::CONTRACT_TRAILING_CCC
PUBLIC	?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
PUBLIC	?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_UNASSIGNED
PUBLIC	?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB	; icu_56::Collation::LEAD_ALL_FALLBACK
PUBLIC	?LEAD_MIXED@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_MIXED
PUBLIC	?LEAD_TYPE_MASK@Collation@icu_56@@2IB		; icu_56::Collation::LEAD_TYPE_MASK
CONST	SEGMENT
?_NUL@?4??ucol_getRules_56@@9@4_WB DW 00H		; `ucol_getRules_56'::`5'::_NUL
CONST	ENDS
;	COMDAT ?LEAD_TYPE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_TYPE_MASK@Collation@icu_56@@2IB DD 0300H		; icu_56::Collation::LEAD_TYPE_MASK
CONST	ENDS
;	COMDAT ?LEAD_MIXED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_MIXED@Collation@icu_56@@2IB DD 0200H		; icu_56::Collation::LEAD_MIXED
CONST	ENDS
;	COMDAT ?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_FALLBACK@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::LEAD_ALL_FALLBACK
CONST	ENDS
;	COMDAT ?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB
CONST	SEGMENT
?LEAD_ALL_UNASSIGNED@Collation@icu_56@@2IB DD 00H	; icu_56::Collation::LEAD_ALL_UNASSIGNED
CONST	ENDS
;	COMDAT ?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB
CONST	SEGMENT
?HANGUL_NO_SPECIAL_JAMO@Collation@icu_56@@2IB DD 0100H	; icu_56::Collation::HANGUL_NO_SPECIAL_JAMO
CONST	ENDS
;	COMDAT ?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_TRAILING_CCC@Collation@icu_56@@2IB DD 0400H	; icu_56::Collation::CONTRACT_TRAILING_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_NEXT_CCC@Collation@icu_56@@2IB DD 0200H	; icu_56::Collation::CONTRACT_NEXT_CCC
CONST	ENDS
;	COMDAT ?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB
CONST	SEGMENT
?CONTRACT_SINGLE_CP_NO_MATCH@Collation@icu_56@@2IB DD 0100H ; icu_56::Collation::CONTRACT_SINGLE_CP_NO_MATCH
CONST	ENDS
;	COMDAT ?MAX_INDEX@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_INDEX@Collation@icu_56@@2HB DD 07ffffH		; icu_56::Collation::MAX_INDEX
CONST	ENDS
;	COMDAT ?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB
CONST	SEGMENT
?MAX_EXPANSION_LENGTH@Collation@icu_56@@2HB DD 01fH	; icu_56::Collation::MAX_EXPANSION_LENGTH
CONST	ENDS
;	COMDAT ?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?ZERO_LEVEL_FLAG@Collation@icu_56@@2IB DD 080H		; icu_56::Collation::ZERO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?IDENTICAL_LEVEL_FLAG@Collation@icu_56@@2IB DD 040H	; icu_56::Collation::IDENTICAL_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 020H	; icu_56::Collation::QUATERNARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?TERTIARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 010H	; icu_56::Collation::TERTIARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?CASE_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_LEVEL_FLAG@Collation@icu_56@@2IB DD 08H		; icu_56::Collation::CASE_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 04H	; icu_56::Collation::SECONDARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?PRIMARY_LEVEL_FLAG@Collation@icu_56@@2IB DD 02H	; icu_56::Collation::PRIMARY_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_LEVEL_FLAG@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_LEVEL_FLAG@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_LEVEL_FLAG
CONST	ENDS
;	COMDAT ?NO_CE@Collation@icu_56@@2_JB
CONST	SEGMENT
?NO_CE@Collation@icu_56@@2_JB DQ 0000000101000100H	; icu_56::Collation::NO_CE
CONST	ENDS
;	COMDAT ?NO_CE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::NO_CE_WEIGHT16
CONST	ENDS
;	COMDAT ?NO_CE_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE_PRIMARY@Collation@icu_56@@2IB DD 01H		; icu_56::Collation::NO_CE_PRIMARY
CONST	ENDS
;	COMDAT ?NO_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?NO_CE32@Collation@icu_56@@2IB DD 01H			; icu_56::Collation::NO_CE32
CONST	ENDS
;	COMDAT ?UNASSIGNED_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?UNASSIGNED_CE32@Collation@icu_56@@2IB DD 0ffffffffH	; icu_56::Collation::UNASSIGNED_CE32
CONST	ENDS
;	COMDAT ?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LONG_PRIMARY_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c1H ; icu_56::Collation::LONG_PRIMARY_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FALLBACK_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FALLBACK_CE32@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::FALLBACK_CE32
CONST	ENDS
;	COMDAT ?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?SPECIAL_CE32_LOW_BYTE@Collation@icu_56@@2EB DB 0c0H	; icu_56::Collation::SPECIAL_CE32_LOW_BYTE
CONST	ENDS
;	COMDAT ?FFFD_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_CE32@Collation@icu_56@@2IB DD 0fffd0505H		; icu_56::Collation::FFFD_CE32
CONST	ENDS
;	COMDAT ?FFFD_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FFFD_PRIMARY@Collation@icu_56@@2IB DD 0fffd0000H	; icu_56::Collation::FFFD_PRIMARY
CONST	ENDS
;	COMDAT ?MAX_REGULAR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_REGULAR_CE32@Collation@icu_56@@2IB DD 0ffff0505H	; icu_56::Collation::MAX_REGULAR_CE32
CONST	ENDS
;	COMDAT ?MAX_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MAX_PRIMARY@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::MAX_PRIMARY
CONST	ENDS
;	COMDAT ?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_TRAILING_PRIMARY@Collation@icu_56@@2IB DD 0ff020200H ; icu_56::Collation::FIRST_TRAILING_PRIMARY
CONST	ENDS
;	COMDAT ?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TRAIL_WEIGHT_BYTE@Collation@icu_56@@2EB DB 0ffH	; icu_56::Collation::TRAIL_WEIGHT_BYTE
CONST	ENDS
;	COMDAT ?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?FIRST_UNASSIGNED_PRIMARY@Collation@icu_56@@2IB DD 0fe040200H ; icu_56::Collation::FIRST_UNASSIGNED_PRIMARY
CONST	ENDS
;	COMDAT ?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?UNASSIGNED_IMPLICIT_BYTE@Collation@icu_56@@2EB DB 0feH	; icu_56::Collation::UNASSIGNED_IMPLICIT_BYTE
CONST	ENDS
;	COMDAT ?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0c0H ; icu_56::Collation::CASE_AND_QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?QUATERNARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?QUATERNARY_MASK@Collation@icu_56@@2IB DD 0c0H		; icu_56::Collation::QUATERNARY_MASK
CONST	ENDS
;	COMDAT ?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_AND_TERTIARY_MASK@Collation@icu_56@@2IB DD 0ff3fH	; icu_56::Collation::CASE_AND_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_SEC_TER_MASK@Collation@icu_56@@2IB DD 0ffff3f3fH	; icu_56::Collation::ONLY_SEC_TER_MASK
CONST	ENDS
;	COMDAT ?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?ONLY_TERTIARY_MASK@Collation@icu_56@@2IB DD 03f3fH	; icu_56::Collation::ONLY_TERTIARY_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_AND_CASE_MASK@Collation@icu_56@@2IB DD 0ffffc000H ; icu_56::Collation::SECONDARY_AND_CASE_MASK
CONST	ENDS
;	COMDAT ?CASE_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?CASE_MASK@Collation@icu_56@@2IB DD 0c000H		; icu_56::Collation::CASE_MASK
CONST	ENDS
;	COMDAT ?SECONDARY_MASK@Collation@icu_56@@2IB
CONST	SEGMENT
?SECONDARY_MASK@Collation@icu_56@@2IB DD 0ffff0000H	; icu_56::Collation::SECONDARY_MASK
CONST	ENDS
;	COMDAT ?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SEC_AND_TER_CE@Collation@icu_56@@2IB DD 05000500H ; icu_56::Collation::COMMON_SEC_AND_TER_CE
CONST	ENDS
;	COMDAT ?COMMON_TERTIARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_TERTIARY_CE@Collation@icu_56@@2IB DD 0500H	; icu_56::Collation::COMMON_TERTIARY_CE
CONST	ENDS
;	COMDAT ?COMMON_SECONDARY_CE@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_SECONDARY_CE@Collation@icu_56@@2IB DD 05000000H	; icu_56::Collation::COMMON_SECONDARY_CE
CONST	ENDS
;	COMDAT ?COMMON_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?COMMON_WEIGHT16@Collation@icu_56@@2IB DD 0500H		; icu_56::Collation::COMMON_WEIGHT16
CONST	ENDS
;	COMDAT ?COMMON_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?COMMON_BYTE@Collation@icu_56@@2EB DB 05H		; icu_56::Collation::COMMON_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_HIGH_BYTE@Collation@icu_56@@2EB DB 0ffH ; icu_56::Collation::PRIMARY_COMPRESSION_HIGH_BYTE
CONST	ENDS
;	COMDAT ?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?PRIMARY_COMPRESSION_LOW_BYTE@Collation@icu_56@@2EB DB 03H ; icu_56::Collation::PRIMARY_COMPRESSION_LOW_BYTE
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_CE32@Collation@icu_56@@2IB DD 02000505H ; icu_56::Collation::MERGE_SEPARATOR_CE32
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB
CONST	SEGMENT
?MERGE_SEPARATOR_PRIMARY@Collation@icu_56@@2IB DD 02000000H ; icu_56::Collation::MERGE_SEPARATOR_PRIMARY
CONST	ENDS
;	COMDAT ?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?MERGE_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 02H	; icu_56::Collation::MERGE_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?BEFORE_WEIGHT16@Collation@icu_56@@2IB
CONST	SEGMENT
?BEFORE_WEIGHT16@Collation@icu_56@@2IB DD 0100H		; icu_56::Collation::BEFORE_WEIGHT16
CONST	ENDS
;	COMDAT ?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?LEVEL_SEPARATOR_BYTE@Collation@icu_56@@2EB DB 01H	; icu_56::Collation::LEVEL_SEPARATOR_BYTE
CONST	ENDS
;	COMDAT ?TERMINATOR_BYTE@Collation@icu_56@@2EB
CONST	SEGMENT
?TERMINATOR_BYTE@Collation@icu_56@@2EB DB 00H		; icu_56::Collation::TERMINATOR_BYTE
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coll.h
; Line 1161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1162
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1163
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::Collator::fromUCollator, COMDAT
; Line 1165
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1166
	mov	eax, DWORD PTR _uc$[ebp]
; Line 1167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::Collator::fromUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1169
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
; Line 1171
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ; icu_56::Collator::toUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ PROC	; icu_56::Collator::toUCollator, COMDAT
; _this$ = ecx
; Line 1173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1174
	mov	eax, DWORD PTR _this$[ebp]
; Line 1175
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollator@Collator@icu_56@@QBEPBUUCollator@@XZ ENDP	; icu_56::Collator::toUCollator
_TEXT	ENDS
PUBLIC	??_7CollatorFactory@icu_56@@6B@			; icu_56::CollatorFactory::`vftable'
PUBLIC	??0CollatorFactory@icu_56@@QAE@XZ		; icu_56::CollatorFactory::CollatorFactory
PUBLIC	??_R4CollatorFactory@icu_56@@6B@		; icu_56::CollatorFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCollatorFactory@icu_56@@@8		; icu_56::CollatorFactory `RTTI Type Descriptor'
PUBLIC	??_R3CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CollatorFactory@icu_56@@8			; icu_56::CollatorFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CollatorFactory@icu_56@@8		; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ECollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	?visible@CollatorFactory@icu_56@@UBECXZ:PROC	; icu_56::CollatorFactory::visible
EXTRN	__purecall:PROC
EXTRN	?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z:PROC ; icu_56::CollatorFactory::getDisplayName
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CollatorFactory@icu_56@@8 DD FLAT:??_R0?AVCollatorFactory@icu_56@@@8 ; icu_56::CollatorFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R2CollatorFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@CollatorFactory@icu_56@@8 ; icu_56::CollatorFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3CollatorFactory@icu_56@@8
rdata$r	SEGMENT
??_R3CollatorFactory@icu_56@@8 DD 00H			; icu_56::CollatorFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollatorFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVCollatorFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollatorFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollatorFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CollatorFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4CollatorFactory@icu_56@@6B@ DD 00H			; icu_56::CollatorFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCollatorFactory@icu_56@@@8
	DD	FLAT:??_R3CollatorFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7CollatorFactory@icu_56@@6B@
CONST	SEGMENT
??_7CollatorFactory@icu_56@@6B@ DD FLAT:??_R4CollatorFactory@icu_56@@6B@ ; icu_56::CollatorFactory::`vftable'
	DD	FLAT:??_ECollatorFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@CollatorFactory@icu_56@@UBECXZ
	DD	FLAT:__purecall
	DD	FLAT:?getDisplayName@CollatorFactory@icu_56@@UAEAAVUnicodeString@2@ABVLocale@2@0AAV32@@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0CollatorFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CollatorFactory@icu_56@@QAE@XZ PROC			; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CollatorFactory@icu_56@@QAE@XZ ENDP			; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??0CollatorFactory@icu_56@@QAE@ABV01@@Z		; icu_56::CollatorFactory::CollatorFactory
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CollatorFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CollatorFactory::CollatorFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CollatorFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollatorFactory@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CollatorFactory::CollatorFactory
_TEXT	ENDS
PUBLIC	??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CollatorFactory::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CollatorFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollatorFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CollatorFactory::operator=
_TEXT	ENDS
PUBLIC	??_GCollatorFactory@icu_56@@UAEPAXI@Z		; icu_56::CollatorFactory::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1CollatorFactory@icu_56@@UAE@XZ:PROC		; icu_56::CollatorFactory::~CollatorFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_ECollatorFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ECollatorFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::CollatorFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CollatorFactory@icu_56@@UAE@XZ ; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollatorFactory@icu_56@@UAE@XZ	; icu_56::CollatorFactory::~CollatorFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollatorFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::CollatorFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_R0?AVCollator@icu_56@@@8			; icu_56::Collator `RTTI Type Descriptor'
PUBLIC	??_R0?AVRuleBasedCollator@icu_56@@@8		; icu_56::RuleBasedCollator `RTTI Type Descriptor'
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVCollator@icu_56@@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\tblcoll.h
_DATA	SEGMENT
??_R0?AVCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Collator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCollator@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVRuleBasedCollator@icu_56@@@8
_DATA	SEGMENT
??_R0?AVRuleBasedCollator@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::RuleBasedCollator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRuleBasedCollator@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPAV12@PAUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z PROC ; icu_56::RuleBasedCollator::rbcFromUCollator, COMDAT
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 782
	push	0
	push	OFFSET ??_R0?AVRuleBasedCollator@icu_56@@@8
	push	OFFSET ??_R0?AVCollator@icu_56@@@8
	mov	eax, DWORD PTR _uc$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	push	0
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ENDP ; icu_56::RuleBasedCollator::rbcFromUCollator
_TEXT	ENDS
PUBLIC	?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeDefault, COMDAT
; _this$ = ecx
; Line 836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 837
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 838
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeDefault@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeDefault
_TEXT	ENDS
PUBLIC	?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ; icu_56::RuleBasedCollator::setAttributeExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z PROC ; icu_56::RuleBasedCollator::setAttributeExplicitly, COMDAT
; _this$ = ecx
; Line 839
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	eax, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 841
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setAttributeExplicitly@RuleBasedCollator@icu_56@@AAEXH@Z ENDP ; icu_56::RuleBasedCollator::setAttributeExplicitly
_TEXT	ENDS
PUBLIC	?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute$ = 8						; size = 4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z PROC ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly, COMDAT
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 844
	mov	eax, 1
	mov	ecx, DWORD PTR _attribute$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+224]
	setne	al
; Line 845
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?attributeHasBeenSetExplicitly@RuleBasedCollator@icu_56@@ABECH@Z ENDP ; icu_56::RuleBasedCollator::attributeHasBeenSetExplicitly
_TEXT	ENDS
PUBLIC	?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z ; icu_56::CollationElementIterator::fromUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z PROC ; icu_56::CollationElementIterator::fromUCollationElements, COMDAT
; File d:\mozilla\intl\icu\source\i18n\unicode\coleitr.h
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 289
	mov	eax, DWORD PTR _uc$[ebp]
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollationElements@CollationElementIterator@icu_56@@SAPAV12@PAUUCollationElements@@@Z ENDP ; icu_56::CollationElementIterator::fromUCollationElements
_TEXT	ENDS
PUBLIC	?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z ; icu_56::CollationElementIterator::fromUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z
_TEXT	SEGMENT
_uc$ = 8						; size = 4
?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z PROC ; icu_56::CollationElementIterator::fromUCollationElements, COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 293
	mov	eax, DWORD PTR _uc$[ebp]
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUCollationElements@CollationElementIterator@icu_56@@SAPBV12@PBUUCollationElements@@@Z ENDP ; icu_56::CollationElementIterator::fromUCollationElements
_TEXT	ENDS
PUBLIC	?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ ; icu_56::CollationElementIterator::toUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ PROC ; icu_56::CollationElementIterator::toUCollationElements, COMDAT
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollationElements@CollationElementIterator@icu_56@@QAEPAUUCollationElements@@XZ ENDP ; icu_56::CollationElementIterator::toUCollationElements
_TEXT	ENDS
PUBLIC	?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ ; icu_56::CollationElementIterator::toUCollationElements
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ PROC ; icu_56::CollationElementIterator::toUCollationElements, COMDAT
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
; Line 302
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUCollationElements@CollationElementIterator@icu_56@@QBEPBUUCollationElements@@XZ ENDP ; icu_56::CollationElementIterator::toUCollationElements
_TEXT	ENDS
PUBLIC	?normalizeDir@CollationElementIterator@icu_56@@ABECXZ ; icu_56::CollationElementIterator::normalizeDir
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?normalizeDir@CollationElementIterator@icu_56@@ABECXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?normalizeDir@CollationElementIterator@icu_56@@ABECXZ PROC ; icu_56::CollationElementIterator::normalizeDir, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 1
	jne	SHORT $LN3@normalizeD
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@normalizeD
$LN3@normalizeD:
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+16]
	mov	DWORD PTR tv69[ebp], eax
$LN4@normalizeD:
	mov	al, BYTE PTR tv69[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?normalizeDir@CollationElementIterator@icu_56@@ABECXZ ENDP ; icu_56::CollationElementIterator::normalizeDir
_TEXT	ENDS
PUBLIC	?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::primaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::primaryOrder, COMDAT
; Line 381
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 382
	mov	eax, DWORD PTR _order$[ebp]
	sar	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
; Line 383
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::primaryOrder
_TEXT	ENDS
PUBLIC	?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::secondaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::secondaryOrder, COMDAT
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 387
	mov	eax, DWORD PTR _order$[ebp]
	sar	eax, 8
	and	eax, 255				; 000000ffH
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?secondaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::secondaryOrder
_TEXT	ENDS
PUBLIC	?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z ; icu_56::CollationElementIterator::tertiaryOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z PROC ; icu_56::CollationElementIterator::tertiaryOrder, COMDAT
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 392
	mov	eax, DWORD PTR _order$[ebp]
	and	eax, 255				; 000000ffH
; Line 393
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tertiaryOrder@CollationElementIterator@icu_56@@SAHH@Z ENDP ; icu_56::CollationElementIterator::tertiaryOrder
_TEXT	ENDS
PUBLIC	?isIgnorable@CollationElementIterator@icu_56@@SACH@Z ; icu_56::CollationElementIterator::isIgnorable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isIgnorable@CollationElementIterator@icu_56@@SACH@Z
_TEXT	SEGMENT
_order$ = 8						; size = 4
?isIgnorable@CollationElementIterator@icu_56@@SACH@Z PROC ; icu_56::CollationElementIterator::isIgnorable, COMDAT
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 397
	mov	eax, DWORD PTR _order$[ebp]
	and	eax, -65536				; ffff0000H
	sete	al
; Line 398
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isIgnorable@CollationElementIterator@icu_56@@SACH@Z ENDP ; icu_56::CollationElementIterator::isIgnorable
_TEXT	ENDS
PUBLIC	?isAssignedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isAssignedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isAssignedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_ce32$ = 8						; size = 4
?isAssignedCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isAssignedCE32, COMDAT
; File d:\mozilla\intl\icu\source\i18n\collation.h
; Line 275
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 276
	cmp	DWORD PTR _ce32$[ebp], 192		; 000000c0H
	je	SHORT $LN3@isAssigned
	cmp	DWORD PTR _ce32$[ebp], -1
	je	SHORT $LN3@isAssigned
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isAssigned
$LN3@isAssigned:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isAssigned:
	mov	al, BYTE PTR tv66[ebp]
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isAssignedCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isAssignedCE32
_TEXT	ENDS
PUBLIC	?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongPrimaryCE32, COMDAT
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _p$[ebp]
	or	eax, 193				; 000000c1H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ; icu_56::Collation::primaryFromLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z PROC ; icu_56::Collation::primaryFromLongPrimaryCE32, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?primaryFromLongPrimaryCE32@Collation@icu_56@@SAII@Z ENDP ; icu_56::Collation::primaryFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongPrimaryCE32
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongPrimaryCE32, COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongPrimaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z	; icu_56::Collation::makeLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z
_TEXT	SEGMENT
_lower32$ = 8						; size = 4
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z PROC	; icu_56::Collation::makeLongSecondaryCE32, COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 319
	mov	eax, DWORD PTR _lower32$[ebp]
	or	eax, 192				; 000000c0H
	or	eax, 2
; Line 320
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeLongSecondaryCE32@Collation@icu_56@@SAII@Z ENDP	; icu_56::Collation::makeLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ; icu_56::Collation::ceFromLongSecondaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromLongSecondaryCE32, COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -256				; ffffff00H
	xor	edx, edx
; Line 323
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromLongSecondaryCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromLongSecondaryCE32
_TEXT	ENDS
PUBLIC	?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ; icu_56::Collation::makeCE32FromTagIndexAndLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
_length$ = 16						; size = 4
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z PROC ; icu_56::Collation::makeCE32FromTagIndexAndLength, COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	mov	ecx, DWORD PTR _length$[ebp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 328
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagIndexAndLength@Collation@icu_56@@SAIHHH@Z ENDP ; icu_56::Collation::makeCE32FromTagIndexAndLength
_TEXT	ENDS
PUBLIC	?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ; icu_56::Collation::makeCE32FromTagAndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_index$ = 12						; size = 4
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z PROC	; icu_56::Collation::makeCE32FromTagAndIndex, COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 13					; 0000000dH
	or	eax, 192				; 000000c0H
	or	eax, DWORD PTR _tag$[ebp]
; Line 332
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE32FromTagAndIndex@Collation@icu_56@@SAIHH@Z ENDP	; icu_56::Collation::makeCE32FromTagAndIndex
_TEXT	ENDS
PUBLIC	?isSpecialCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isSpecialCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSpecialCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isSpecialCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isSpecialCE32, COMDAT
; Line 334
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 192				; 000000c0H
	setae	al
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpecialCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isSpecialCE32
_TEXT	ENDS
PUBLIC	?tagFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::tagFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tagFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?tagFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::tagFromCE32, COMDAT
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 339
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 15					; 0000000fH
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?tagFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::tagFromCE32
_TEXT	ENDS
PUBLIC	?hasCE32Tag@Collation@icu_56@@SACIH@Z		; icu_56::Collation::hasCE32Tag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasCE32Tag@Collation@icu_56@@SACIH@Z
_TEXT	SEGMENT
tv71 = -193						; size = 1
_ce32$ = 8						; size = 4
_tag$ = 12						; size = 4
?hasCE32Tag@Collation@icu_56@@SACIH@Z PROC		; icu_56::Collation::hasCE32Tag, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@hasCE32Tag
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, DWORD PTR _tag$[ebp]
	jne	SHORT $LN3@hasCE32Tag
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@hasCE32Tag
$LN3@hasCE32Tag:
	mov	BYTE PTR tv71[ebp], 0
$LN4@hasCE32Tag:
	mov	al, BYTE PTR tv71[ebp]
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasCE32Tag@Collation@icu_56@@SACIH@Z ENDP		; icu_56::Collation::hasCE32Tag
_TEXT	ENDS
PUBLIC	?isLongPrimaryCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isLongPrimaryCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLongPrimaryCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isLongPrimaryCE32, COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	push	1
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLongPrimaryCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isLongPrimaryCE32
_TEXT	ENDS
PUBLIC	?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSimpleOrLongCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSimpleOrLongCE32, COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 353
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSimpleOr
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSimpleOr
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSimpleOr
	mov	BYTE PTR tv74[ebp], 0
	jmp	SHORT $LN4@isSimpleOr
$LN3@isSimpleOr:
	mov	BYTE PTR tv74[ebp], 1
$LN4@isSimpleOr:
	mov	al, BYTE PTR tv74[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSimpleOrLongCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSimpleOrLongCE32
_TEXT	ENDS
PUBLIC	?isSelfContainedCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSelfContainedCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isSelfContainedCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv77 = -193						; size = 1
_ce32$ = 8						; size = 4
?isSelfContainedCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isSelfContainedCE32, COMDAT
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isSelfCont
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@isSelfCont
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN3@isSelfCont
	mov	ecx, DWORD PTR _ce32$[ebp]
	push	ecx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN3@isSelfCont
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@isSelfCont
$LN3@isSelfCont:
	mov	BYTE PTR tv77[ebp], 1
$LN4@isSelfCont:
	mov	al, BYTE PTR tv77[ebp]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isSelfContainedCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isSelfContainedCE32
_TEXT	ENDS
PUBLIC	?isPrefixCE32@Collation@icu_56@@SACI@Z		; icu_56::Collation::isPrefixCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPrefixCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isPrefixCE32@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::isPrefixCE32, COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	push	8
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPrefixCE32@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::isPrefixCE32
_TEXT	ENDS
PUBLIC	?isContractionCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isContractionCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isContractionCE32@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?isContractionCE32@Collation@icu_56@@SACI@Z PROC	; icu_56::Collation::isContractionCE32, COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	push	9
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?hasCE32Tag@Collation@icu_56@@SACIH@Z	; icu_56::Collation::hasCE32Tag
	add	esp, 8
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isContractionCE32@Collation@icu_56@@SACI@Z ENDP	; icu_56::Collation::isContractionCE32
_TEXT	ENDS
PUBLIC	?ce32HasContext@Collation@icu_56@@SACI@Z	; icu_56::Collation::ce32HasContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ce32HasContext@Collation@icu_56@@SACI@Z
_TEXT	SEGMENT
tv74 = -193						; size = 1
_ce32$ = 8						; size = 4
?ce32HasContext@Collation@icu_56@@SACI@Z PROC		; icu_56::Collation::ce32HasContext, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 377
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?isSpecialCE32@Collation@icu_56@@SACI@Z	; icu_56::Collation::isSpecialCE32
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ce32HasCon
	mov	edx, DWORD PTR _ce32$[ebp]
	push	edx
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 8
	je	SHORT $LN3@ce32HasCon
	mov	eax, DWORD PTR _ce32$[ebp]
	push	eax
	call	?tagFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::tagFromCE32
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN4@ce32HasCon
$LN3@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN5@ce32HasCon
$LN4@ce32HasCon:
	mov	BYTE PTR tv74[ebp], 0
$LN5@ce32HasCon:
	mov	al, BYTE PTR tv74[ebp]
; Line 378
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ce32HasContext@Collation@icu_56@@SACI@Z ENDP		; icu_56::Collation::ce32HasContext
_TEXT	ENDS
PUBLIC	?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE0FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE0FromCE32, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 385
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -16777216				; ff000000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83886080				; 05000000H
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 386
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE0FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE0FromCE32
_TEXT	ENDS
PUBLIC	?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::latinCE1FromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::latinCE1FromCE32, COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 65280				; 0000ff00H
	shl	eax, 16					; 00000010H
	or	eax, 1280				; 00000500H
	xor	edx, edx
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?latinCE1FromCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::latinCE1FromCE32
_TEXT	ENDS
PUBLIC	?indexFromCE32@Collation@icu_56@@SAHI@Z		; icu_56::Collation::indexFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?indexFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?indexFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::indexFromCE32, COMDAT
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 400
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 13					; 0000000dH
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?indexFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::indexFromCE32
_TEXT	ENDS
PUBLIC	?lengthFromCE32@Collation@icu_56@@SAHI@Z	; icu_56::Collation::lengthFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lengthFromCE32@Collation@icu_56@@SAHI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?lengthFromCE32@Collation@icu_56@@SAHI@Z PROC		; icu_56::Collation::lengthFromCE32, COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 31					; 0000001fH
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lengthFromCE32@Collation@icu_56@@SAHI@Z ENDP		; icu_56::Collation::lengthFromCE32
_TEXT	ENDS
PUBLIC	?digitFromCE32@Collation@icu_56@@SADI@Z		; icu_56::Collation::digitFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digitFromCE32@Collation@icu_56@@SADI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?digitFromCE32@Collation@icu_56@@SADI@Z PROC		; icu_56::Collation::digitFromCE32, COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	mov	eax, DWORD PTR _ce32$[ebp]
	shr	eax, 8
	and	eax, 15					; 0000000fH
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digitFromCE32@Collation@icu_56@@SADI@Z ENDP		; icu_56::Collation::digitFromCE32
_TEXT	ENDS
PUBLIC	?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::ceFromSimpleCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_ce32$ = 8						; size = 4
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z PROC	; icu_56::Collation::ceFromSimpleCE32, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromSimpleCE32@Collation@icu_56@@SA_JI@Z ENDP	; icu_56::Collation::ceFromSimpleCE32
_TEXT	ENDS
PUBLIC	?ceFromCE32@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::ceFromCE32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceFromCE32@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_tertiary$ = -8						; size = 4
_ce32$ = 8						; size = 4
?ceFromCE32@Collation@icu_56@@SA_JI@Z PROC		; icu_56::Collation::ceFromCE32, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _tertiary$[ebp], eax
; Line 427
	cmp	DWORD PTR _tertiary$[ebp], 192		; 000000c0H
	jae	SHORT $LN4@ceFromCE32
; Line 429
	mov	eax, DWORD PTR _ce32$[ebp]
	and	eax, -65536				; ffff0000H
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _ce32$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _tertiary$[ebp]
	shl	ecx, 8
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	jmp	SHORT $LN5@ceFromCE32
; Line 430
	jmp	SHORT $LN5@ceFromCE32
$LN4@ceFromCE32:
; Line 431
	mov	eax, DWORD PTR _ce32$[ebp]
	sub	eax, DWORD PTR _tertiary$[ebp]
	mov	DWORD PTR _ce32$[ebp], eax
; Line 432
	mov	eax, DWORD PTR _tertiary$[ebp]
	and	eax, 15					; 0000000fH
	cmp	eax, 1
	jne	SHORT $LN2@ceFromCE32
; Line 434
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
	jmp	SHORT $LN5@ceFromCE32
; Line 435
	jmp	SHORT $LN5@ceFromCE32
$LN2@ceFromCE32:
; Line 438
	mov	eax, DWORD PTR _ce32$[ebp]
	xor	edx, edx
$LN5@ceFromCE32:
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceFromCE32@Collation@icu_56@@SA_JI@Z ENDP		; icu_56::Collation::ceFromCE32
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JI@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?makeCE@Collation@icu_56@@SA_JI@Z PROC			; icu_56::Collation::makeCE, COMDAT
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	or	eax, 83887360				; 05000500H
; Line 446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JI@Z ENDP			; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?makeCE@Collation@icu_56@@SA_JIIII@Z		; icu_56::Collation::makeCE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?makeCE@Collation@icu_56@@SA_JIIII@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_s$ = 12						; size = 4
_t$ = 16						; size = 4
_q$ = 20						; size = 4
?makeCE@Collation@icu_56@@SA_JIIII@Z PROC		; icu_56::Collation::makeCE, COMDAT
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 452
	mov	eax, DWORD PTR _p$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 16					; 00000010H
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _t$[ebp]
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
	mov	ecx, DWORD PTR _q$[ebp]
	shl	ecx, 6
	xor	esi, esi
	or	eax, ecx
	or	edx, esi
; Line 453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeCE@Collation@icu_56@@SA_JIIII@Z ENDP		; icu_56::Collation::makeCE
_TEXT	ENDS
PUBLIC	?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ; icu_56::Collation::unassignedCEFromCodePoint
EXTRN	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z:PROC ; icu_56::Collation::unassignedPrimaryFromCodePoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z PROC ; icu_56::Collation::unassignedCEFromCodePoint, COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 488
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?unassignedPrimaryFromCodePoint@Collation@icu_56@@SAIH@Z ; icu_56::Collation::unassignedPrimaryFromCodePoint
	add	esp, 4
	push	eax
	call	?makeCE@Collation@icu_56@@SA_JI@Z	; icu_56::Collation::makeCE
	add	esp, 4
; Line 489
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unassignedCEFromCodePoint@Collation@icu_56@@SA_JH@Z ENDP ; icu_56::Collation::unassignedCEFromCodePoint
_TEXT	ENDS
PUBLIC	??4Collation@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Collation::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Collation@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Collation::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Collation@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Collation::operator=
_TEXT	ENDS
PUBLIC	_ucol_openBinary_56
EXTRN	??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedCollator::RuleBasedCollator
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_openBinary_56
_TEXT	SEGMENT
tv128 = -256						; size = 4
tv81 = -256						; size = 4
$T46236 = -248						; size = 4
$T46237 = -236						; size = 4
$T46240 = -224						; size = 4
$T46241 = -212						; size = 4
_coll$ = -8						; size = 4
_bin$ = 8						; size = 4
_length$ = 12						; size = 4
_base$ = 16						; size = 4
_status$ = 20						; size = 4
_ucol_openBinary_56 PROC				; COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucol.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucol_openB
	xor	eax, eax
	jmp	$LN4@ucol_openB
$LN3@ucol_openB:
; Line 48
	mov	esi, esp
	push	232					; 000000e8H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46237[ebp], eax
	cmp	DWORD PTR $T46237[ebp], 0
	je	SHORT $LN6@ucol_openB
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _bin$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T46237[ebp]
	call	??0RuleBasedCollator@icu_56@@QAE@PBEHPBV01@AAW4UErrorCode@@@Z ; icu_56::RuleBasedCollator::RuleBasedCollator
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@ucol_openB
$LN6@ucol_openB:
	mov	DWORD PTR tv81[ebp], 0
$LN7@ucol_openB:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T46236[ebp], ecx
	mov	edx, DWORD PTR $T46236[ebp]
	mov	DWORD PTR _coll$[ebp], edx
; Line 49
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_openB
; Line 50
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 51
	xor	eax, eax
	jmp	SHORT $LN4@ucol_openB
$LN2@ucol_openB:
; Line 53
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_openB
; Line 54
	mov	eax, DWORD PTR _coll$[ebp]
	mov	DWORD PTR $T46241[ebp], eax
	mov	ecx, DWORD PTR $T46241[ebp]
	mov	DWORD PTR $T46240[ebp], ecx
	cmp	DWORD PTR $T46240[ebp], 0
	je	SHORT $LN8@ucol_openB
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46240[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46240[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN9@ucol_openB
$LN8@ucol_openB:
	mov	DWORD PTR tv128[ebp], 0
$LN9@ucol_openB:
; Line 55
	xor	eax, eax
	jmp	SHORT $LN4@ucol_openB
$LN1@ucol_openB:
; Line 57
	mov	ecx, DWORD PTR _coll$[ebp]
	call	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
$LN4@ucol_openB:
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_openBinary_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	_ucol_cloneBinary_56
EXTRN	?cloneBinary@RuleBasedCollator@icu_56@@QBEHPAEHAAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedCollator::cloneBinary
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_cloneBinary_56
_TEXT	SEGMENT
_rbc$ = -8						; size = 4
_coll$ = 8						; size = 4
_buffer$ = 12						; size = 4
_capacity$ = 16						; size = 4
_status$ = 20						; size = 4
_ucol_cloneBinary_56 PROC				; COMDAT
; File d:\mozilla\intl\icu\source\i18n\ucol.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucol_clone
; Line 66
	xor	eax, eax
	jmp	SHORT $LN3@ucol_clone
$LN2@ucol_clone:
; Line 68
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	mov	DWORD PTR _rbc$[ebp], eax
; Line 69
	cmp	DWORD PTR _rbc$[ebp], 0
	jne	SHORT $LN1@ucol_clone
	cmp	DWORD PTR _coll$[ebp], 0
	je	SHORT $LN1@ucol_clone
; Line 70
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 71
	xor	eax, eax
	jmp	SHORT $LN3@ucol_clone
$LN1@ucol_clone:
; Line 73
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _rbc$[ebp]
	call	?cloneBinary@RuleBasedCollator@icu_56@@QBEHPAEHAAW4UErrorCode@@@Z ; icu_56::RuleBasedCollator::cloneBinary
$LN3@ucol_clone:
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_cloneBinary_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_safeClone_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_safeClone_56
_TEXT	SEGMENT
tv75 = -220						; size = 4
_newColl$ = -20						; size = 4
_inputSize$39047 = -8					; size = 4
_coll$ = 8						; size = 4
___formal$ = 12						; size = 4
_pBufferSize$ = 16					; size = 4
_status$ = 20						; size = 4
_ucol_safeClone_56 PROC					; COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN6@ucol_safeC
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@ucol_safeC
$LN6@ucol_safeC:
; Line 80
	xor	eax, eax
	jmp	$LN8@ucol_safeC
$LN7@ucol_safeC:
; Line 82
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN5@ucol_safeC
; Line 83
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 84
	xor	eax, eax
	jmp	SHORT $LN8@ucol_safeC
$LN5@ucol_safeC:
; Line 86
	cmp	DWORD PTR _pBufferSize$[ebp], 0
	je	SHORT $LN4@ucol_safeC
; Line 87
	mov	eax, DWORD PTR _pBufferSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _inputSize$39047[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _pBufferSize$[ebp]
	mov	DWORD PTR [eax], 1
; Line 89
	cmp	DWORD PTR _inputSize$39047[ebp], 0
	jne	SHORT $LN4@ucol_safeC
; Line 90
	xor	eax, eax
	jmp	SHORT $LN8@ucol_safeC
$LN4@ucol_safeC:
; Line 93
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _newColl$[ebp], eax
; Line 94
	cmp	DWORD PTR _newColl$[ebp], 0
	jne	SHORT $LN2@ucol_safeC
; Line 95
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 96
	jmp	SHORT $LN1@ucol_safeC
$LN2@ucol_safeC:
; Line 97
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -126			; ffffff82H
$LN1@ucol_safeC:
; Line 99
	mov	ecx, DWORD PTR _newColl$[ebp]
	call	?toUCollator@Collator@icu_56@@QAEPAUUCollator@@XZ ; icu_56::Collator::toUCollator
$LN8@ucol_safeC:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_safeClone_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_close_56
_TEXT	SEGMENT
tv77 = -220						; size = 4
$T46252 = -212						; size = 4
$T46253 = -200						; size = 4
_coll$ = 8						; size = 4
_ucol_close_56 PROC					; COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	cmp	DWORD PTR _coll$[ebp], 0
	je	SHORT $LN2@ucol_close
; Line 108
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR $T46253[ebp], eax
	mov	ecx, DWORD PTR $T46253[ebp]
	mov	DWORD PTR $T46252[ebp], ecx
	cmp	DWORD PTR $T46252[ebp], 0
	je	SHORT $LN4@ucol_close
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46252[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46252[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN2@ucol_close
$LN4@ucol_close:
	mov	DWORD PTR tv77[ebp], 0
$LN2@ucol_close:
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_close_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_mergeSortkeys_56
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_mergeSortkeys_56
_TEXT	SEGMENT
tv149 = -232						; size = 4
_b$39083 = -29						; size = 1
_p$ = -20						; size = 4
_destLength$ = -8					; size = 4
_src1$ = 8						; size = 4
_src1Length$ = 12					; size = 4
_src2$ = 16						; size = 4
_src2Length$ = 20					; size = 4
_dest$ = 24						; size = 4
_destCapacity$ = 28					; size = 4
_ucol_mergeSortkeys_56 PROC				; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 121
	cmp	DWORD PTR _src1$[ebp], 0
	je	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src1Length$[ebp], -1
	jl	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src1Length$[ebp], 0
	je	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src1Length$[ebp], 0
	jle	SHORT $LN17@ucol_merge
	mov	eax, DWORD PTR _src1$[ebp]
	add	eax, DWORD PTR _src1Length$[ebp]
	movzx	ecx, BYTE PTR [eax-1]
	test	ecx, ecx
	jne	SHORT $LN18@ucol_merge
$LN17@ucol_merge:
	cmp	DWORD PTR _src2$[ebp], 0
	je	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src2Length$[ebp], -1
	jl	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src2Length$[ebp], 0
	je	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _src2Length$[ebp], 0
	jle	SHORT $LN16@ucol_merge
	mov	eax, DWORD PTR _src2$[ebp]
	add	eax, DWORD PTR _src2Length$[ebp]
	movzx	ecx, BYTE PTR [eax-1]
	test	ecx, ecx
	jne	SHORT $LN18@ucol_merge
$LN16@ucol_merge:
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jl	SHORT $LN18@ucol_merge
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN19@ucol_merge
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN19@ucol_merge
$LN18@ucol_merge:
; Line 123
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN15@ucol_merge
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN15@ucol_merge
; Line 124
	mov	eax, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [eax], 0
$LN15@ucol_merge:
; Line 126
	xor	eax, eax
	jmp	$LN20@ucol_merge
$LN19@ucol_merge:
; Line 130
	cmp	DWORD PTR _src1Length$[ebp], 0
	jge	SHORT $LN14@ucol_merge
; Line 131
	mov	eax, DWORD PTR _src1$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _src1Length$[ebp], eax
$LN14@ucol_merge:
; Line 133
	cmp	DWORD PTR _src2Length$[ebp], 0
	jge	SHORT $LN13@ucol_merge
; Line 134
	mov	eax, DWORD PTR _src2$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _src2Length$[ebp], eax
$LN13@ucol_merge:
; Line 137
	mov	eax, DWORD PTR _src1Length$[ebp]
	add	eax, DWORD PTR _src2Length$[ebp]
	mov	DWORD PTR _destLength$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _destLength$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jle	SHORT $LN12@ucol_merge
; Line 140
	mov	eax, DWORD PTR _destLength$[ebp]
	jmp	$LN20@ucol_merge
$LN12@ucol_merge:
; Line 144
	mov	eax, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN9@ucol_merge:
; Line 148
	mov	eax, DWORD PTR _src1$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$39083[ebp], cl
	movzx	edx, BYTE PTR _b$39083[ebp]
	cmp	edx, 2
	jl	SHORT $LN8@ucol_merge
; Line 149
	mov	eax, DWORD PTR _src1$[ebp]
	add	eax, 1
	mov	DWORD PTR _src1$[ebp], eax
; Line 150
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _b$39083[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 151
	jmp	SHORT $LN9@ucol_merge
$LN8@ucol_merge:
; Line 154
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 2
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
$LN7@ucol_merge:
; Line 157
	mov	eax, DWORD PTR _src2$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$39083[ebp], cl
	movzx	edx, BYTE PTR _b$39083[ebp]
	cmp	edx, 2
	jl	SHORT $LN6@ucol_merge
; Line 158
	mov	eax, DWORD PTR _src2$[ebp]
	add	eax, 1
	mov	DWORD PTR _src2$[ebp], eax
; Line 159
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _b$39083[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 160
	jmp	SHORT $LN7@ucol_merge
$LN6@ucol_merge:
; Line 163
	mov	eax, DWORD PTR _src1$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN5@ucol_merge
	mov	eax, DWORD PTR _src2$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN5@ucol_merge
; Line 164
	mov	eax, DWORD PTR _src1$[ebp]
	add	eax, 1
	mov	DWORD PTR _src1$[ebp], eax
; Line 165
	mov	eax, DWORD PTR _src2$[ebp]
	add	eax, 1
	mov	DWORD PTR _src2$[ebp], eax
; Line 166
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 1
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
; Line 167
	jmp	SHORT $LN4@ucol_merge
$LN5@ucol_merge:
; Line 168
	jmp	SHORT $LN10@ucol_merge
$LN4@ucol_merge:
; Line 170
	jmp	$LN9@ucol_merge
$LN10@ucol_merge:
; Line 177
	mov	eax, DWORD PTR _src1$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@ucol_merge
; Line 179
	mov	eax, DWORD PTR _src1$[ebp]
	mov	DWORD PTR _src2$[ebp], eax
$LN2@ucol_merge:
; Line 182
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _src2$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
	mov	eax, DWORD PTR _src2$[ebp]
	add	eax, 1
	mov	DWORD PTR _src2$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN22@ucol_merge
	mov	DWORD PTR tv149[ebp], 1
	jmp	SHORT $LN23@ucol_merge
$LN22@ucol_merge:
	mov	DWORD PTR tv149[ebp], 0
$LN23@ucol_merge:
	cmp	DWORD PTR tv149[ebp], 0
	je	SHORT $LN1@ucol_merge
	jmp	SHORT $LN2@ucol_merge
$LN1@ucol_merge:
; Line 185
	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _dest$[ebp]
$LN20@ucol_merge:
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_mergeSortkeys_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getSortKey_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getSortKey_56
_TEXT	SEGMENT
tv68 = -208						; size = 4
_keySize$ = -8						; size = 4
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_result$ = 20						; size = 4
_resultLength$ = 24					; size = 4
_ucol_getSortKey_56 PROC				; COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 202
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _resultLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	eax, DWORD PTR _sourceLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _keySize$[ebp], eax
; Line 206
	mov	eax, DWORD PTR _keySize$[ebp]
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getSortKey_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_nextSortKeyPart_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_nextSortKeyPart_56
_TEXT	SEGMENT
tv72 = -208						; size = 4
_i$ = -8						; size = 4
_coll$ = 8						; size = 4
_iter$ = 12						; size = 4
_state$ = 16						; size = 4
_dest$ = 20						; size = 4
_count$ = 24						; size = 4
_status$ = 28						; size = 4
_ucol_nextSortKeyPart_56 PROC				; COMDAT
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN1@ucol_nextS
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucol_nextS
$LN1@ucol_nextS:
; Line 218
	xor	eax, eax
	jmp	SHORT $LN3@ucol_nextS
$LN2@ucol_nextS:
; Line 225
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iter$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _i$[ebp], eax
; Line 231
	mov	eax, DWORD PTR _i$[ebp]
$LN3@ucol_nextS:
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_nextSortKeyPart_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getBound_56
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getBound_56
_TEXT	SEGMENT
tv90 = -208						; size = 4
_sourceIndex$ = -8					; size = 4
_source$ = 8						; size = 4
_sourceLength$ = 12					; size = 4
_boundType$ = 16					; size = 4
_noOfLevels$ = 20					; size = 4
_result$ = 24						; size = 4
_resultLength$ = 28					; size = 4
_status$ = 32						; size = 4
_ucol_getBound_56 PROC					; COMDAT
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 247
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN17@ucol_getBo
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@ucol_getBo
$LN17@ucol_getBo:
; Line 248
	xor	eax, eax
	jmp	$LN19@ucol_getBo
$LN18@ucol_getBo:
; Line 250
	cmp	DWORD PTR _source$[ebp], 0
	jne	SHORT $LN16@ucol_getBo
; Line 251
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 252
	xor	eax, eax
	jmp	$LN19@ucol_getBo
$LN16@ucol_getBo:
; Line 255
	mov	DWORD PTR _sourceIndex$[ebp], 0
$LN15@ucol_getBo:
; Line 258
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _sourceIndex$[ebp], eax
; Line 259
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN14@ucol_getBo
; Line 260
	mov	eax, DWORD PTR _noOfLevels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _noOfLevels$[ebp], eax
$LN14@ucol_getBo:
; Line 263
	cmp	DWORD PTR _noOfLevels$[ebp], 0
	jbe	SHORT $LN13@ucol_getBo
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN15@ucol_getBo
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	cmp	eax, DWORD PTR _sourceLength$[ebp]
	jl	SHORT $LN15@ucol_getBo
$LN13@ucol_getBo:
; Line 266
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN9@ucol_getBo
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	cmp	eax, DWORD PTR _sourceLength$[ebp]
	jne	SHORT $LN10@ucol_getBo
$LN9@ucol_getBo:
	cmp	DWORD PTR _noOfLevels$[ebp], 0
	jbe	SHORT $LN10@ucol_getBo
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], -123			; ffffff85H
$LN10@ucol_getBo:
; Line 275
	cmp	DWORD PTR _result$[ebp], 0
	je	$LN8@ucol_getBo
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	add	eax, DWORD PTR _boundType$[ebp]
	cmp	DWORD PTR _resultLength$[ebp], eax
	jl	$LN8@ucol_getBo
; Line 276
	push	1
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 277
	mov	eax, DWORD PTR _boundType$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	cmp	DWORD PTR tv90[ebp], 0
	je	SHORT $LN5@ucol_getBo
	cmp	DWORD PTR tv90[ebp], 1
	je	SHORT $LN4@ucol_getBo
	cmp	DWORD PTR tv90[ebp], 2
	je	SHORT $LN3@ucol_getBo
	jmp	SHORT $LN2@ucol_getBo
$LN5@ucol_getBo:
; Line 280
	jmp	SHORT $LN6@ucol_getBo
$LN4@ucol_getBo:
; Line 283
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	mov	BYTE PTR [eax], 2
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sourceIndex$[ebp], ecx
; Line 284
	jmp	SHORT $LN6@ucol_getBo
$LN3@ucol_getBo:
; Line 287
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sourceIndex$[ebp], ecx
; Line 288
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sourceIndex$[ebp], ecx
; Line 289
	jmp	SHORT $LN6@ucol_getBo
$LN2@ucol_getBo:
; Line 291
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 292
	xor	eax, eax
	jmp	SHORT $LN19@ucol_getBo
$LN6@ucol_getBo:
; Line 294
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, DWORD PTR _sourceIndex$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sourceIndex$[ebp], ecx
; Line 296
	mov	eax, DWORD PTR _sourceIndex$[ebp]
	jmp	SHORT $LN19@ucol_getBo
; Line 297
	jmp	SHORT $LN19@ucol_getBo
$LN8@ucol_getBo:
; Line 298
	mov	eax, DWORD PTR _boundType$[ebp]
	mov	ecx, DWORD PTR _sourceIndex$[ebp]
	lea	eax, DWORD PTR [ecx+eax+1]
$LN19@ucol_getBo:
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getBound_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_setMaxVariable_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_setMaxVariable_56
_TEXT	SEGMENT
tv71 = -196						; size = 4
_coll$ = 8						; size = 4
_group$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
_ucol_setMaxVariable_56 PROC				; COMDAT
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 304
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_setMa
	jmp	SHORT $LN2@ucol_setMa
$LN1@ucol_setMa:
; Line 305
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _pErrorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _group$[ebp]
	push	edx
	mov	eax, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ucol_setMa:
; Line 306
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_setMaxVariable_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getMaxVariable_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getMaxVariable_56
_TEXT	SEGMENT
tv67 = -196						; size = 4
_coll$ = 8						; size = 4
_ucol_getMaxVariable_56 PROC				; COMDAT
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 310
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv67[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 311
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getMaxVariable_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_setVariableTop_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_setVariableTop_56
_TEXT	SEGMENT
tv72 = -196						; size = 4
_coll$ = 8						; size = 4
_varTop$ = 12						; size = 4
_len$ = 16						; size = 4
_status$ = 20						; size = 4
_ucol_setVariableTop_56 PROC				; COMDAT
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 315
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucol_setVa
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_setVa
$LN1@ucol_setVa:
; Line 316
	xor	eax, eax
	jmp	SHORT $LN3@ucol_setVa
$LN2@ucol_setVa:
; Line 318
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _varTop$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_setVa:
; Line 319
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_setVariableTop_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getVariableTop_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getVariableTop_56
_TEXT	SEGMENT
tv72 = -196						; size = 4
_coll$ = 8						; size = 4
_status$ = 12						; size = 4
_ucol_getVariableTop_56 PROC				; COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 322
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucol_getVa
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_getVa
$LN1@ucol_getVa:
; Line 323
	xor	eax, eax
	jmp	SHORT $LN3@ucol_getVa
$LN2@ucol_getVa:
; Line 325
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_getVa:
; Line 326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getVariableTop_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_restoreVariableTop_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_restoreVariableTop_56
_TEXT	SEGMENT
tv72 = -196						; size = 4
_coll$ = 8						; size = 4
_varTop$ = 12						; size = 4
_status$ = 16						; size = 4
_ucol_restoreVariableTop_56 PROC			; COMDAT
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 330
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucol_resto
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_resto
$LN1@ucol_resto:
; Line 331
	jmp	SHORT $LN3@ucol_resto
$LN2@ucol_resto:
; Line 333
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _varTop$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_resto:
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_restoreVariableTop_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_setAttribute_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_setAttribute_56
_TEXT	SEGMENT
tv72 = -196						; size = 4
_coll$ = 8						; size = 4
_attr$ = 12						; size = 4
_value$ = 16						; size = 4
_status$ = 20						; size = 4
_ucol_setAttribute_56 PROC				; COMDAT
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 338
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucol_setAt
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_setAt
$LN1@ucol_setAt:
; Line 339
	jmp	SHORT $LN3@ucol_setAt
$LN2@ucol_setAt:
; Line 342
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _attr$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_setAt:
; Line 343
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_setAttribute_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getAttribute_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getAttribute_56
_TEXT	SEGMENT
tv72 = -196						; size = 4
_coll$ = 8						; size = 4
_attr$ = 12						; size = 4
_status$ = 16						; size = 4
_ucol_getAttribute_56 PROC				; COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ucol_getAt
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_getAt
$LN1@ucol_getAt:
; Line 348
	or	eax, -1
	jmp	SHORT $LN3@ucol_getAt
$LN2@ucol_getAt:
; Line 351
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _attr$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_getAt:
; Line 352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getAttribute_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_setStrength_56
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_setStrength_56
_TEXT	SEGMENT
_status$ = -8						; size = 4
_coll$ = 8						; size = 4
_strength$ = 12						; size = 4
_ucol_setStrength_56 PROC				; COMDAT
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	DWORD PTR _status$[ebp], 0
; Line 359
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strength$[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _coll$[ebp]
	push	edx
	call	_ucol_setAttribute_56
	add	esp, 16					; 00000010H
; Line 360
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ucol_setSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@ucol_setSt:
	DD	1
	DD	$LN4@ucol_setSt
$LN4@ucol_setSt:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ucol_setSt
$LN3@ucol_setSt:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucol_setStrength_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getStrength_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getStrength_56
_TEXT	SEGMENT
_status$ = -8						; size = 4
_coll$ = 8						; size = 4
_ucol_getStrength_56 PROC				; COMDAT
; Line 364
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 365
	mov	DWORD PTR _status$[ebp], 0
; Line 366
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _coll$[ebp]
	push	ecx
	call	_ucol_getAttribute_56
	add	esp, 12					; 0000000cH
; Line 367
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ucol_getSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@ucol_getSt:
	DD	1
	DD	$LN4@ucol_getSt
$LN4@ucol_getSt:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@ucol_getSt
$LN3@ucol_getSt:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucol_getStrength_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getReorderCodes_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getReorderCodes_56
_TEXT	SEGMENT
tv71 = -196						; size = 4
_coll$ = 8						; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_status$ = 20						; size = 4
_ucol_getReorderCodes_56 PROC				; COMDAT
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 374
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_getRe
; Line 375
	xor	eax, eax
	jmp	SHORT $LN2@ucol_getRe
$LN1@ucol_getRe:
; Line 378
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ucol_getRe:
; Line 379
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getReorderCodes_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_setReorderCodes_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_setReorderCodes_56
_TEXT	SEGMENT
tv71 = -196						; size = 4
_coll$ = 8						; size = 4
_reorderCodes$ = 12					; size = 4
_reorderCodesLength$ = 16				; size = 4
_status$ = 20						; size = 4
_ucol_setReorderCodes_56 PROC				; COMDAT
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 386
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_setRe
; Line 387
	jmp	SHORT $LN2@ucol_setRe
$LN1@ucol_setRe:
; Line 390
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPAV12@PAUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _reorderCodesLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _reorderCodes$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ucol_setRe:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_setReorderCodes_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getEquivalentReorderCodes_56
EXTRN	?getEquivalentReorderCodes@Collator@icu_56@@SAHHPAHHAAW4UErrorCode@@@Z:PROC ; icu_56::Collator::getEquivalentReorderCodes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getEquivalentReorderCodes_56
_TEXT	SEGMENT
_reorderCode$ = 8					; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_pErrorCode$ = 20					; size = 4
_ucol_getEquivalentReorderCodes_56 PROC			; COMDAT
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 398
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _reorderCode$[ebp]
	push	eax
	call	?getEquivalentReorderCodes@Collator@icu_56@@SAHHPAHHAAW4UErrorCode@@@Z ; icu_56::Collator::getEquivalentReorderCodes
	add	esp, 16					; 00000010H
; Line 399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getEquivalentReorderCodes_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getVersion_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getVersion_56
_TEXT	SEGMENT
tv67 = -196						; size = 4
_coll$ = 8						; size = 4
_versionInfo$ = 12					; size = 4
_ucol_getVersion_56 PROC				; COMDAT
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 405
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv67[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _versionInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv67[ebp]
	mov	edx, DWORD PTR [eax+84]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getVersion_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_strcollIter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_strcollIter_56
_TEXT	SEGMENT
tv75 = -208						; size = 4
_result$ = -8						; size = 4
_coll$ = 8						; size = 4
_sIter$ = 12						; size = 4
_tIter$ = 16						; size = 4
_status$ = 20						; size = 4
_ucol_strcollIter_56 PROC				; COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 414
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@ucol_strco
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@ucol_strco
$LN3@ucol_strco:
; Line 415
	xor	eax, eax
	jmp	SHORT $LN5@ucol_strco
$LN4@ucol_strco:
; Line 421
	cmp	DWORD PTR _sIter$[ebp], 0
	je	SHORT $LN1@ucol_strco
	cmp	DWORD PTR _tIter$[ebp], 0
	je	SHORT $LN1@ucol_strco
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN2@ucol_strco
$LN1@ucol_strco:
; Line 422
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 424
	xor	eax, eax
	jmp	SHORT $LN5@ucol_strco
$LN2@ucol_strco:
; Line 427
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tIter$[ebp]
	push	edx
	mov	eax, DWORD PTR _sIter$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 430
	mov	eax, DWORD PTR _result$[ebp]
$LN5@ucol_strco:
; Line 431
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_strcollIter_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_strcoll_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_strcoll_56
_TEXT	SEGMENT
tv68 = -220						; size = 4
_returnVal$ = -20					; size = 4
_status$ = -8						; size = 4
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_target$ = 20						; size = 4
_targetLength$ = 24					; size = 4
_ucol_strcoll_56 PROC					; COMDAT
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 451
	mov	DWORD PTR _status$[ebp], 0
; Line 453
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _returnVal$[ebp], eax
; Line 455
	mov	eax, DWORD PTR _returnVal$[ebp]
; Line 456
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ucol_strco@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@ucol_strco@2:
	DD	1
	DD	$LN5@ucol_strco@2
$LN5@ucol_strco@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@ucol_strco@2
$LN4@ucol_strco@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_ucol_strcoll_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_strcollUTF8_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_strcollUTF8_56
_TEXT	SEGMENT
tv72 = -208						; size = 4
_returnVal$ = -8					; size = 4
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_target$ = 20						; size = 4
_targetLength$ = 24					; size = 4
_status$ = 28						; size = 4
_ucol_strcollUTF8_56 PROC				; COMDAT
; Line 466
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 474
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_strco@3
; Line 477
	xor	eax, eax
	jmp	SHORT $LN3@ucol_strco@3
$LN1@ucol_strco@3:
; Line 481
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _targetLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourceLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _returnVal$[ebp], eax
; Line 483
	mov	eax, DWORD PTR _returnVal$[ebp]
$LN3@ucol_strco@3:
; Line 484
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_strcollUTF8_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_greater_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_greater_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_target$ = 20						; size = 4
_targetLength$ = 24					; size = 4
_ucol_greater_56 PROC					; COMDAT
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 496
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coll$[ebp]
	push	ecx
	call	_ucol_strcoll_56
	add	esp, 20					; 00000014H
	cmp	eax, 1
	sete	al
; Line 497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_greater_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_greaterOrEqual_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_greaterOrEqual_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_target$ = 20						; size = 4
_targetLength$ = 24					; size = 4
_ucol_greaterOrEqual_56 PROC				; COMDAT
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 508
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coll$[ebp]
	push	ecx
	call	_ucol_strcoll_56
	add	esp, 20					; 00000014H
	cmp	eax, -1
	setne	al
; Line 509
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_greaterOrEqual_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_equal_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_equal_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_source$ = 12						; size = 4
_sourceLength$ = 16					; size = 4
_target$ = 20						; size = 4
_targetLength$ = 24					; size = 4
_ucol_equal_56 PROC					; COMDAT
; Line 518
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 520
	mov	eax, DWORD PTR _targetLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sourceLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _coll$[ebp]
	push	ecx
	call	_ucol_strcoll_56
	add	esp, 20					; 00000014H
	test	eax, eax
	sete	al
; Line 521
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_equal_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getUCAVersion_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getUCAVersion_56
_TEXT	SEGMENT
_v$39284 = -20						; size = 4
_c$ = -8						; size = 4
_coll$ = 8						; size = 4
_info$ = 12						; size = 4
_ucol_getUCAVersion_56 PROC				; COMDAT
; Line 524
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 525
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR _c$[ebp], eax
; Line 526
	cmp	DWORD PTR _c$[ebp], 0
	je	SHORT $LN2@ucol_getUC
; Line 528
	mov	esi, esp
	lea	eax, DWORD PTR _v$39284[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 535
	movzx	eax, BYTE PTR _v$39284[ebp+1]
	sar	eax, 3
	mov	ecx, DWORD PTR _info$[ebp]
	mov	BYTE PTR [ecx], al
; Line 536
	movzx	eax, BYTE PTR _v$39284[ebp+1]
	and	eax, 7
	mov	ecx, DWORD PTR _info$[ebp]
	mov	BYTE PTR [ecx+1], al
; Line 537
	movzx	eax, BYTE PTR _v$39284[ebp+2]
	sar	eax, 6
	mov	ecx, DWORD PTR _info$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 538
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+3], 0
$LN2@ucol_getUC:
; Line 540
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ucol_getUC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@ucol_getUC:
	DD	1
	DD	$LN5@ucol_getUC
$LN5@ucol_getUC:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@ucol_getUC
$LN4@ucol_getUC:
	DB	118					; 00000076H
	DB	0
_ucol_getUCAVersion_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EO@HOHPAKGK@?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAg?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?$FL?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1FC@NPPFANGN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??ucol_getRules_56@@9@4JA	; `ucol_getRules_56'::`2'::__LINE__Var
PUBLIC	_ucol_getRules_56
EXTRN	__imp___wassert:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	?getRules@RuleBasedCollator@icu_56@@QBEABVUnicodeString@2@XZ:PROC ; icu_56::RuleBasedCollator::getRules
;	COMDAT ??_C@_1EO@HOHPAKGK@?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAg?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?$FL?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1EO@HOHPAKGK@?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAg?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?$FL?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ@ DB 'r'
	DB	00H, 'u', 00H, 'l', 00H, 'e', 00H, 's', 00H, '.', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, '(', 00H, ')', 00H, '[', 00H, 'r', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '.', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, ']', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@NPPFANGN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FC@NPPFANGN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'u', 00H
	DB	'c', 00H, 'o', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??ucol_getRules_56@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??ucol_getRules_56@@9@4JA DD 021fH	; `ucol_getRules_56'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _ucol_getRules_56
_TEXT	SEGMENT
_rules$39292 = -20					; size = 4
_rbc$ = -8						; size = 4
_coll$ = 8						; size = 4
_length$ = 12						; size = 4
_ucol_getRules_56 PROC					; COMDAT
; Line 543
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 544
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	mov	DWORD PTR _rbc$[ebp], eax
; Line 546
	cmp	DWORD PTR _rbc$[ebp], 0
	jne	SHORT $LN1@ucol_getRu
	cmp	DWORD PTR _coll$[ebp], 0
	jne	$LN2@ucol_getRu
$LN1@ucol_getRu:
; Line 547
	mov	ecx, DWORD PTR _rbc$[ebp]
	call	?getRules@RuleBasedCollator@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::RuleBasedCollator::getRules
	mov	DWORD PTR _rules$39292[ebp], eax
; Line 548
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$39292[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _rules$39292[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	eax, WORD PTR [esi+eax*2]
	test	eax, eax
	je	SHORT $LN5@ucol_getRu
	mov	ecx, DWORD PTR ?__LINE__Var@?1??ucol_getRules_56@@9@4JA
	add	ecx, 5
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FC@NPPFANGN@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EO@HOHPAKGK@?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAg?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CJ?$AA?$FL?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@ucol_getRu:
; Line 549
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$39292[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 550
	mov	esi, esp
	mov	ecx, DWORD PTR _rules$39292[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@ucol_getRu
$LN2@ucol_getRu:
; Line 553
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], 0
; Line 554
	mov	eax, OFFSET ?_NUL@?4??ucol_getRules_56@@9@4_WB
$LN3@ucol_getRu:
; Line 555
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getRules_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucol_getRulesEx_56
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:PROC
EXTRN	?getRules@RuleBasedCollator@icu_56@@QBEXW4UColRuleOption@@AAVUnicodeString@2@@Z:PROC ; icu_56::RuleBasedCollator::getRules
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getRulesEx_56
_TEXT	SEGMENT
$T46326 = -312						; size = 4
$T46327 = -300						; size = 4
_errorCode$39310 = -96					; size = 4
_rbc$ = -84						; size = 4
_rules$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_coll$ = 8						; size = 4
_delta$ = 12						; size = 4
_buffer$ = 16						; size = 4
_bufferLen$ = 20					; size = 4
_ucol_getRulesEx_56 PROC				; COMDAT
; Line 558
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 559
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 560
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	mov	DWORD PTR _rbc$[ebp], eax
; Line 561
	cmp	DWORD PTR _rbc$[ebp], 0
	jne	SHORT $LN3@ucol_getRu@2
	cmp	DWORD PTR _coll$[ebp], 0
	jne	SHORT $LN4@ucol_getRu@2
$LN3@ucol_getRu@2:
; Line 562
	lea	eax, DWORD PTR _rules$[ebp]
	push	eax
	mov	ecx, DWORD PTR _delta$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rbc$[ebp]
	call	?getRules@RuleBasedCollator@icu_56@@QBEXW4UColRuleOption@@AAVUnicodeString@2@@Z ; icu_56::RuleBasedCollator::getRules
$LN4@ucol_getRu@2:
; Line 564
	cmp	DWORD PTR _buffer$[ebp], 0
	je	SHORT $LN2@ucol_getRu@2
	cmp	DWORD PTR _bufferLen$[ebp], 0
	jle	SHORT $LN2@ucol_getRu@2
; Line 565
	mov	DWORD PTR _errorCode$39310[ebp], 0
; Line 566
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$39310[ebp]
	push	eax
	mov	ecx, DWORD PTR _bufferLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46326[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46326[ebp]
	jmp	SHORT $LN5@ucol_getRu@2
; Line 567
	jmp	SHORT $LN1@ucol_getRu@2
$LN2@ucol_getRu@2:
; Line 568
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T46327[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T46327[ebp]
	jmp	SHORT $LN5@ucol_getRu@2
$LN1@ucol_getRu@2:
; Line 570
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@ucol_getRu@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ucol_getRu@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@ucol_getRu@2:
	DD	2
	DD	$LN9@ucol_getRu@2
$LN9@ucol_getRu@2:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN7@ucol_getRu@2
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN8@ucol_getRu@2
$LN8@ucol_getRu@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN7@ucol_getRu@2:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_ucol_getRulesEx_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getLocaleByType_56
PUBLIC	_ucol_getLocale_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getLocale_56
_TEXT	SEGMENT
_coll$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
_ucol_getLocale_56 PROC					; COMDAT
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 574
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _coll$[ebp]
	push	edx
	call	_ucol_getLocaleByType_56
	add	esp, 12					; 0000000cH
; Line 575
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getLocale_56 ENDP
_TEXT	ENDS
EXTRN	?internalGetLocaleID@RuleBasedCollator@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z:PROC ; icu_56::RuleBasedCollator::internalGetLocaleID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getLocaleByType_56
_TEXT	SEGMENT
_rbc$ = -20						; size = 4
_result$ = -8						; size = 4
_coll$ = 8						; size = 4
_type$ = 12						; size = 4
_status$ = 16						; size = 4
_ucol_getLocaleByType_56 PROC				; COMDAT
; Line 578
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 579
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@ucol_getLo
; Line 580
	xor	eax, eax
	jmp	SHORT $LN4@ucol_getLo
$LN3@ucol_getLo:
; Line 586
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?rbcFromUCollator@RuleBasedCollator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::RuleBasedCollator::rbcFromUCollator
	add	esp, 4
	mov	DWORD PTR _rbc$[ebp], eax
; Line 587
	cmp	DWORD PTR _rbc$[ebp], 0
	jne	SHORT $LN2@ucol_getLo
	cmp	DWORD PTR _coll$[ebp], 0
	je	SHORT $LN2@ucol_getLo
; Line 588
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 589
	mov	DWORD PTR _result$[ebp], 0
; Line 590
	jmp	SHORT $LN1@ucol_getLo
$LN2@ucol_getLo:
; Line 591
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _rbc$[ebp]
	call	?internalGetLocaleID@RuleBasedCollator@icu_56@@QBEPBDW4ULocDataLocaleType@@AAW4UErrorCode@@@Z ; icu_56::RuleBasedCollator::internalGetLocaleID
	mov	DWORD PTR _result$[ebp], eax
$LN1@ucol_getLo:
; Line 596
	mov	eax, DWORD PTR _result$[ebp]
$LN4@ucol_getLo:
; Line 597
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getLocaleByType_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_getTailoredSet_56
EXTRN	__imp_?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_getTailoredSet_56
_TEXT	SEGMENT
tv90 = -232						; size = 4
tv71 = -232						; size = 4
$T46340 = -224						; size = 4
$T46341 = -212						; size = 4
_set$ = -8						; size = 4
_coll$ = 8						; size = 4
_status$ = 12						; size = 4
_ucol_getTailoredSet_56 PROC				; COMDAT
; Line 600
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 601
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucol_getTa
; Line 602
	xor	eax, eax
	jmp	$LN3@ucol_getTa
$LN2@ucol_getTa:
; Line 604
	mov	eax, DWORD PTR _coll$[ebp]
	push	eax
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+120]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _set$[ebp], eax
; Line 605
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@ucol_getTa
; Line 606
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR $T46341[ebp], eax
	mov	ecx, DWORD PTR $T46341[ebp]
	mov	DWORD PTR $T46340[ebp], ecx
	cmp	DWORD PTR $T46340[ebp], 0
	je	SHORT $LN5@ucol_getTa
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T46340[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T46340[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@ucol_getTa
$LN5@ucol_getTa:
	mov	DWORD PTR tv90[ebp], 0
$LN6@ucol_getTa:
; Line 607
	xor	eax, eax
	jmp	SHORT $LN3@ucol_getTa
$LN1@ucol_getTa:
; Line 609
	mov	esi, esp
	mov	ecx, DWORD PTR _set$[ebp]
	call	DWORD PTR __imp_?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucol_getTa:
; Line 610
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_getTailoredSet_56 ENDP
_TEXT	ENDS
PUBLIC	_ucol_equals_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucol_equals_56
_TEXT	SEGMENT
tv77 = -197						; size = 1
tv68 = -196						; size = 4
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_ucol_equals_56 PROC					; COMDAT
; Line 613
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 615
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _target$[ebp]
	je	SHORT $LN3@ucol_equal
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	call	?fromUCollator@Collator@icu_56@@SAPBV12@PBUUCollator@@@Z ; icu_56::Collator::fromUCollator
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@ucol_equal
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN4@ucol_equal
$LN3@ucol_equal:
	mov	BYTE PTR tv77[ebp], 1
$LN4@ucol_equal:
	mov	al, BYTE PTR tv77[ebp]
; Line 616
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucol_equals_56 ENDP
_TEXT	ENDS
END

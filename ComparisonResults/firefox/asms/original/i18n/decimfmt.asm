; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\decimfmt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?kDoubleIntegerDigits@DecimalFormat@icu_56@@1HB	; icu_56::DecimalFormat::kDoubleIntegerDigits
PUBLIC	?kDoubleFractionDigits@DecimalFormat@icu_56@@1HB ; icu_56::DecimalFormat::kDoubleFractionDigits
PUBLIC	?kMaxScientificIntegerDigits@DecimalFormat@icu_56@@1HB ; icu_56::DecimalFormat::kMaxScientificIntegerDigits
PUBLIC	?fgNumberPatterns@DecimalFormat@icu_56@@2QBDB	; icu_56::DecimalFormat::fgNumberPatterns
_BSS	SEGMENT
?classID@?1??getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::DecimalFormat::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
?kDoubleIntegerDigits@DecimalFormat@icu_56@@1HB DD 0135H ; icu_56::DecimalFormat::kDoubleIntegerDigits
?kDoubleFractionDigits@DecimalFormat@icu_56@@1HB DD 0154H ; icu_56::DecimalFormat::kDoubleFractionDigits
?kMaxScientificIntegerDigits@DecimalFormat@icu_56@@1HB DD 08H ; icu_56::DecimalFormat::kMaxScientificIntegerDigits
?fgNumberPatterns@DecimalFormat@icu_56@@2QBDB DB 'NumberPatterns', 00H ; icu_56::DecimalFormat::fgNumberPatterns
	ORG $+1
_fgNumberElements DB 'NumberElements', 00H
	ORG $+1
_fgLatn	DB	'latn', 00H
	ORG $+3
_fgPatterns DB	'patterns', 00H
	ORG $+3
_fgDecimalFormat DB 'decimalFormat', 00H
	ORG $+2
_fgCurrencyFormat DB 'currencyFormat', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z	; icu_56::CurrencyPluralInfo::operator!=
EXTRN	??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z:PROC	; icu_56::CurrencyPluralInfo::operator==
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_info$ = 8						; size = 4
??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z PROC		; icu_56::CurrencyPluralInfo::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currpinf.h
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8CurrencyPluralInfo@icu_56@@QBECABV01@@Z ; icu_56::CurrencyPluralInfo::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9CurrencyPluralInfo@icu_56@@QBECABV01@@Z ENDP		; icu_56::CurrencyPluralInfo::operator!=
_TEXT	ENDS
PUBLIC	??9Formattable@icu_56@@QBECABV01@@Z		; icu_56::Formattable::operator!=
EXTRN	??8Formattable@icu_56@@QBECABV01@@Z:PROC	; icu_56::Formattable::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Formattable@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Formattable@icu_56@@QBECABV01@@Z PROC		; icu_56::Formattable::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 196
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Formattable@icu_56@@QBECABV01@@Z	; icu_56::Formattable::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Formattable@icu_56@@QBECABV01@@Z ENDP		; icu_56::Formattable::operator!=
_TEXT	ENDS
PUBLIC	?getDouble@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDouble
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDouble@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDouble@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDouble, COMDAT
; _this$ = ecx
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDouble@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDouble
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHXZ		; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@Formattable@icu_56@@QBEHXZ PROC		; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@Formattable@icu_56@@QBEHXZ ENDP		; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?getInt64@Formattable@icu_56@@QBE_JXZ		; icu_56::Formattable::getInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInt64@Formattable@icu_56@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInt64@Formattable@icu_56@@QBE_JXZ PROC		; icu_56::Formattable::getInt64, COMDAT
; _this$ = ecx
; Line 343
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInt64@Formattable@icu_56@@QBE_JXZ ENDP		; icu_56::Formattable::getInt64
_TEXT	ENDS
PUBLIC	?getDate@Formattable@icu_56@@QBENXZ		; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDate@Formattable@icu_56@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDate@Formattable@icu_56@@QBENXZ PROC		; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDate@Formattable@icu_56@@QBENXZ ENDP		; icu_56::Formattable::getDate
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::Formattable::getString
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _result$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getString@Formattable@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z	; icu_56::Formattable::getArray
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z PROC	; icu_56::Formattable::getArray, COMDAT
; _this$ = ecx
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getArray@Formattable@icu_56@@QBEPBV12@AAH@Z ENDP	; icu_56::Formattable::getArray
_TEXT	ENDS
PUBLIC	??AFormattable@icu_56@@QAEAAV01@H@Z		; icu_56::Formattable::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??AFormattable@icu_56@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??AFormattable@icu_56@@QAEAAV01@H@Z PROC		; icu_56::Formattable::operator[], COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AFormattable@icu_56@@QAEAAV01@H@Z ENDP		; icu_56::Formattable::operator[]
_TEXT	ENDS
PUBLIC	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ PROC ; icu_56::Formattable::getDigitList, COMDAT
; _this$ = ecx
; Line 654
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ENDP ; icu_56::Formattable::getDigitList
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDate
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getDate, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN2@getDate
; Line 717
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getDate
; Line 718
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
$LN1@getDate:
; Line 720
	fldz
	jmp	SHORT $LN3@getDate
$LN2@getDate:
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+8]
$LN3@getDate:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDate@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getDate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fmtable.h
; Line 725
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 727
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ; icu_56::Formattable::getString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ PROC ; icu_56::Formattable::getString, COMDAT
; _this$ = ecx
; Line 729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getString@Formattable@icu_56@@QAEAAVUnicodeString@2@XZ ENDP ; icu_56::Formattable::getString
_TEXT	ENDS
PUBLIC	?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
EXTRN	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z PROC ; icu_56::Formattable::getLong, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLong@Formattable@icu_56@@QBEHAAW4UErrorCode@@@Z ; icu_56::Formattable::getLong
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLong@Formattable@icu_56@@QBEHPAW4UErrorCode@@@Z ENDP ; icu_56::Formattable::getLong
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QAEPAPAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ	; icu_56::Formattable::toUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ PROC	; icu_56::Formattable::toUFormattable, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
; Line 745
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toUFormattable@Formattable@icu_56@@QBEPBQAXXZ ENDP	; icu_56::Formattable::toUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPAV12@PAPAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ; icu_56::Formattable::fromUFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z PROC ; icu_56::Formattable::fromUFormattable, COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 752
	mov	eax, DWORD PTR _fmt$[ebp]
; Line 753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fromUFormattable@Formattable@icu_56@@SAPBV12@PBQAX@Z ENDP ; icu_56::Formattable::fromUFormattable
_TEXT	ENDS
PUBLIC	??_7FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`vftable'
PUBLIC	??0FieldPosition@icu_56@@QAE@XZ			; icu_56::FieldPosition::FieldPosition
PUBLIC	??_R4FieldPosition@icu_56@@6B@			; icu_56::FieldPosition::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFieldPosition@icu_56@@@8		; icu_56::FieldPosition `RTTI Type Descriptor'
PUBLIC	??_R3FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FieldPosition@icu_56@@8			; icu_56::FieldPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FieldPosition@icu_56@@8		; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`vector deleting destructor'
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ:PROC ; icu_56::FieldPosition::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\fieldpos.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FieldPosition@icu_56@@8 DD FLAT:??_R0?AVFieldPosition@icu_56@@@8 ; icu_56::FieldPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R2FieldPosition@icu_56@@8 DD FLAT:??_R1A@?0A@EA@FieldPosition@icu_56@@8 ; icu_56::FieldPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3FieldPosition@icu_56@@8
rdata$r	SEGMENT
??_R3FieldPosition@icu_56@@8 DD 00H			; icu_56::FieldPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFieldPosition@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFieldPosition@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::FieldPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFieldPosition@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FieldPosition@icu_56@@6B@
rdata$r	SEGMENT
??_R4FieldPosition@icu_56@@6B@ DD 00H			; icu_56::FieldPosition::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFieldPosition@icu_56@@@8
	DD	FLAT:??_R3FieldPosition@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7FieldPosition@icu_56@@6B@
CONST	SEGMENT
??_7FieldPosition@icu_56@@6B@ DD FLAT:??_R4FieldPosition@icu_56@@6B@ ; icu_56::FieldPosition::`vftable'
	DD	FLAT:??_EFieldPosition@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@FieldPosition@icu_56@@UBEPAXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0FieldPosition@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FieldPosition@icu_56@@QAE@XZ PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FieldPosition@icu_56@@QAE@XZ ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@H@Z		; icu_56::FieldPosition::FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_field$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@H@Z PROC			; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@H@Z ENDP			; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	??0FieldPosition@icu_56@@QAE@ABV01@@Z		; icu_56::FieldPosition::FieldPosition
EXTRN	__imp_??0UObject@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FieldPosition@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0FieldPosition@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FieldPosition::FieldPosition, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FieldPosition@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FieldPosition@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FieldPosition::FieldPosition
_TEXT	ENDS
PUBLIC	?getField@FieldPosition@icu_56@@QBEHXZ		; icu_56::FieldPosition::getField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getField@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getField@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getField, COMDAT
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getField@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getField
_TEXT	ENDS
PUBLIC	?getBeginIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBeginIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ PROC	; icu_56::FieldPosition::getBeginIndex, COMDAT
; _this$ = ecx
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getBeginIndex@FieldPosition@icu_56@@QBEHXZ ENDP	; icu_56::FieldPosition::getBeginIndex
_TEXT	ENDS
PUBLIC	?getEndIndex@FieldPosition@icu_56@@QBEHXZ	; icu_56::FieldPosition::getEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEndIndex@FieldPosition@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEndIndex@FieldPosition@icu_56@@QBEHXZ PROC		; icu_56::FieldPosition::getEndIndex, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getEndIndex@FieldPosition@icu_56@@QBEHXZ ENDP		; icu_56::FieldPosition::getEndIndex
_TEXT	ENDS
PUBLIC	?setField@FieldPosition@icu_56@@QAEXH@Z		; icu_56::FieldPosition::setField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setField@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_f$ = 8							; size = 4
?setField@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setField, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setField@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setField
_TEXT	ENDS
PUBLIC	?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setBeginIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bi$ = 8						; size = 4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z PROC	; icu_56::FieldPosition::setBeginIndex, COMDAT
; _this$ = ecx
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setBeginIndex@FieldPosition@icu_56@@QAEXH@Z ENDP	; icu_56::FieldPosition::setBeginIndex
_TEXT	ENDS
PUBLIC	?setEndIndex@FieldPosition@icu_56@@QAEXH@Z	; icu_56::FieldPosition::setEndIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setEndIndex@FieldPosition@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ei$ = 8						; size = 4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z PROC		; icu_56::FieldPosition::setEndIndex, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ei$[ebp]
	mov	DWORD PTR [eax+12], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setEndIndex@FieldPosition@icu_56@@QAEXH@Z ENDP		; icu_56::FieldPosition::setEndIndex
_TEXT	ENDS
PUBLIC	??_GFieldPosition@icu_56@@UAEPAXI@Z		; icu_56::FieldPosition::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1FieldPosition@icu_56@@UAE@XZ:PROC		; icu_56::FieldPosition::~FieldPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EFieldPosition@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EFieldPosition@icu_56@@UAEPAXI@Z PROC		; icu_56::FieldPosition::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1FieldPosition@icu_56@@UAE@XZ	; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FieldPosition@icu_56@@UAE@XZ		; icu_56::FieldPosition::~FieldPosition
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EFieldPosition@icu_56@@UAEPAXI@Z ENDP		; icu_56::FieldPosition::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FieldPosition::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FieldPosition::operator=, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPosition@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FieldPosition::operator=
_TEXT	ENDS
PUBLIC	??8FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??8FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator==, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv73[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator==
_TEXT	ENDS
PUBLIC	??9FieldPosition@icu_56@@QBECABV01@@Z		; icu_56::FieldPosition::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPosition@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??9FieldPosition@icu_56@@QBECABV01@@Z PROC		; icu_56::FieldPosition::operator!=, COMDAT
; _this$ = ecx
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 283
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPosition@icu_56@@QBECABV01@@Z	; icu_56::FieldPosition::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPosition@icu_56@@QBECABV01@@Z ENDP		; icu_56::FieldPosition::operator!=
_TEXT	ENDS
PUBLIC	??9FieldPositionIterator@icu_56@@QBECABV01@@Z	; icu_56::FieldPositionIterator::operator!=
EXTRN	??8FieldPositionIterator@icu_56@@QBECABV01@@Z:PROC ; icu_56::FieldPositionIterator::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9FieldPositionIterator@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z PROC	; icu_56::FieldPositionIterator::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\fpositer.h
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8FieldPositionIterator@icu_56@@QBECABV01@@Z ; icu_56::FieldPositionIterator::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9FieldPositionIterator@icu_56@@QBECABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator!=
_TEXT	ENDS
PUBLIC	??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::FieldPositionIterator::operator=
EXTRN	__imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FieldPositionIterator::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FieldPositionIterator@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FieldPositionIterator::operator=
_TEXT	ENDS
PUBLIC	??9Format@icu_56@@QBECABV01@@Z			; icu_56::Format::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9Format@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9Format@icu_56@@QBECABV01@@Z PROC			; icu_56::Format::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\format.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9Format@icu_56@@QBECABV01@@Z ENDP			; icu_56::Format::operator!=
_TEXT	ENDS
PUBLIC	??9PluralRules@icu_56@@QBECABV01@@Z		; icu_56::PluralRules::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9PluralRules@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9PluralRules@icu_56@@QBECABV01@@Z PROC		; icu_56::PluralRules::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\plurrule.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9PluralRules@icu_56@@QBECABV01@@Z ENDP		; icu_56::PluralRules::operator!=
_TEXT	ENDS
PUBLIC	??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::NumberingSystem::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S1$37247 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberingSystem::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+68], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+72]
	mov	BYTE PTR [eax+72], dl
	mov	DWORD PTR _$S1$37247[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S1$37247[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$37247[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S1$37247[ebp], 9
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$37247[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$37247[ebp]
	mov	dl, BYTE PTR [ecx+73]
	mov	BYTE PTR [eax+73], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberingSystem@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberingSystem::operator=
_TEXT	ENDS
PUBLIC	??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FixedDecimal::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::FixedDecimal::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 12					; 0000000cH
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4FixedDecimal@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::FixedDecimal::operator=
_TEXT	ENDS
PUBLIC	??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
PUBLIC	??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
PUBLIC	??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@StringEnumeration@icu_56@@8	; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVStringEnumeration@icu_56@@@8		; icu_56::StringEnumeration `RTTI Type Descriptor'
PUBLIC	??_R3StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringEnumeration@icu_56@@8		; icu_56::StringEnumeration::`RTTI Base Class Array'
PUBLIC	??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
EXTRN	__imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
EXTRN	?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:PROC ; icu_56::StringEnumeration::clone
EXTRN	?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::count
EXTRN	?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::next
EXTRN	?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::unext
EXTRN	?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::StringEnumeration::snext
EXTRN	?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z:PROC ; icu_56::PluralAvailableLocalesEnumeration::reset
EXTRN	??8StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator==
EXTRN	??9StringEnumeration@icu_56@@UBECABV01@@Z:PROC	; icu_56::StringEnumeration::operator!=
;	COMDAT ??_R2StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2StringEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8 ; icu_56::StringEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3StringEnumeration@icu_56@@8 DD 00H			; icu_56::StringEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVStringEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::StringEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@StringEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringEnumeration@icu_56@@8 DD FLAT:??_R0?AVStringEnumeration@icu_56@@@8 ; icu_56::StringEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R2PluralAvailableLocalesEnumeration@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PluralAvailableLocalesEnumeration@icu_56@@8 ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringEnumeration@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	SEGMENT
??_R3PluralAvailableLocalesEnumeration@icu_56@@8 DD 00H	; icu_56::PluralAvailableLocalesEnumeration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PluralAvailableLocalesEnumeration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPluralAvailableLocalesEnumeration@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@
rdata$r	SEGMENT
??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ DD 00H ; icu_56::PluralAvailableLocalesEnumeration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPluralAvailableLocalesEnumeration@icu_56@@@8
	DD	FLAT:??_R3PluralAvailableLocalesEnumeration@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
CONST	SEGMENT
??_7PluralAvailableLocalesEnumeration@icu_56@@6B@ DD FLAT:??_R4PluralAvailableLocalesEnumeration@icu_56@@6B@ ; icu_56::PluralAvailableLocalesEnumeration::`vftable'
	DD	FLAT:??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@StringEnumeration@icu_56@@UBEPAV12@XZ
	DD	FLAT:?count@PluralAvailableLocalesEnumeration@icu_56@@UBEHAAW4UErrorCode@@@Z
	DD	FLAT:?next@PluralAvailableLocalesEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z
	DD	FLAT:?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z
	DD	FLAT:?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?reset@PluralAvailableLocalesEnumeration@icu_56@@UAEXAAW4UErrorCode@@@Z
	DD	FLAT:??8StringEnumeration@icu_56@@UBECABV01@@Z
	DD	FLAT:??9StringEnumeration@icu_56@@UBECABV01@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0StringEnumeration@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PluralAvailableLocalesEnumeration@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAvailableLocalesEnumeration@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration
_TEXT	ENDS
PUBLIC	??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralAvailableLocalesEnumeration::operator=
EXTRN	__imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR [eax+112], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+116], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAvailableLocalesEnumeration@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::operator=
_TEXT	ENDS
PUBLIC	??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
EXTRN	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ:PROC ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z PROC ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	120					; 00000078H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAvailableLocalesEnumeration@icu_56@@UAE@XZ ; icu_56::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPluralAvailableLocalesEnumeration@icu_56@@UAEPAXI@Z ENDP ; icu_56::PluralAvailableLocalesEnumeration::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z	; icu_56::DecimalFormatSymbols::operator!=
EXTRN	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z PROC	; icu_56::DecimalFormatSymbols::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\dcfmtsym.h
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DecimalFormatSymbols@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatSymbols::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DecimalFormatSymbols@icu_56@@QBECABV01@@Z ENDP	; icu_56::DecimalFormatSymbols::operator!=
_TEXT	ENDS
PUBLIC	?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol, COMDAT
; _this$ = ecx
; Line 362
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2768]
; Line 364
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomCurrencySymbol
_TEXT	ENDS
PUBLIC	?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2769]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isCustomIntlCurrencySymbol@DecimalFormatSymbols@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatSymbols::isCustomIntlCurrencySymbol
_TEXT	ENDS
PUBLIC	?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getSymbol
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
$T53488 = -224						; size = 4
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_symbol$ = 12						; size = 4
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getSymbol, COMDAT
; _this$ = ecx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T53488[ebp], 0
; Line 437
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getSymbol
; Line 438
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 439
	jmp	SHORT $LN1@getSymbol
$LN2@getSymbol:
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getSymbol:
; Line 442
	mov	esi, esp
	mov	eax, DWORD PTR _strPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T53488[ebp]
	or	ecx, 1
	mov	DWORD PTR $T53488[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 443
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getSymbol@DecimalFormatSymbols@icu_56@@QBE?AVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getSymbol
_TEXT	ENDS
PUBLIC	?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ; icu_56::DecimalFormatSymbols::getConstSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z
_TEXT	SEGMENT
_strPtr$ = -20						; size = 4
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z PROC ; icu_56::DecimalFormatSymbols::getConstSymbol, COMDAT
; _this$ = ecx
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN2@getConstSy
; Line 451
	mov	eax, DWORD PTR _symbol$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _strPtr$[ebp], edx
; Line 452
	jmp	SHORT $LN1@getConstSy
$LN2@getConstSy:
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1796				; 00000704H
	mov	DWORD PTR _strPtr$[ebp], eax
$LN1@getConstSy:
; Line 455
	mov	eax, DWORD PTR _strPtr$[ebp]
; Line 456
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getConstSymbol@DecimalFormatSymbols@icu_56@@QBEABVUnicodeString@2@W4ENumberFormatSymbol@12@@Z ENDP ; icu_56::DecimalFormatSymbols::getConstSymbol
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ; icu_56::DecimalFormatSymbols::setSymbol
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@H@Z:PROC
EXTRN	_u_charDigitValue_56:PROC
EXTRN	__imp_?char32At@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0
__ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
_TEXT	SEGMENT
tv138 = -324						; size = 4
tv139 = -320						; size = 4
$T40338 = -312						; size = 64
_i$40333 = -45						; size = 1
_sym$40331 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_symbol$ = 8						; size = 4
_value$ = 12						; size = 4
_propogateDigits$ = 16					; size = 1
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z PROC ; icu_56::DecimalFormatSymbols::setSymbol, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	cmp	DWORD PTR _symbol$[ebp], 8
	jne	SHORT $LN9@setSymbol
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2768], 1
	jmp	SHORT $LN8@setSymbol
$LN9@setSymbol:
; Line 468
	cmp	DWORD PTR _symbol$[ebp], 9
	jne	SHORT $LN8@setSymbol
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+2769], 1
$LN8@setSymbol:
; Line 471
	cmp	DWORD PTR _symbol$[ebp], 28		; 0000001cH
	jge	SHORT $LN6@setSymbol
; Line 472
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbol$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@setSymbol:
; Line 477
	movsx	eax, BYTE PTR _propogateDigits$[ebp]
	test	eax, eax
	je	$LN10@setSymbol
	cmp	DWORD PTR _symbol$[ebp], 4
	jne	$LN10@setSymbol
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN10@setSymbol
; Line 478
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sym$40331[ebp], eax
; Line 479
	mov	eax, DWORD PTR _sym$40331[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	jne	$LN10@setSymbol
; Line 480
	mov	BYTE PTR _i$40333[ebp], 1
	jmp	SHORT $LN3@setSymbol
$LN2@setSymbol:
	mov	al, BYTE PTR _i$40333[ebp]
	add	al, 1
	mov	BYTE PTR _i$40333[ebp], al
$LN3@setSymbol:
	movsx	eax, BYTE PTR _i$40333[ebp]
	cmp	eax, 9
	jg	$LN10@setSymbol
; Line 481
	mov	eax, DWORD PTR _sym$40331[ebp]
	add	eax, 1
	mov	DWORD PTR _sym$40331[ebp], eax
; Line 482
	mov	esi, esp
	mov	eax, DWORD PTR _sym$40331[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40338[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	movsx	eax, BYTE PTR _i$40333[ebp]
	add	eax, 17					; 00000011H
	shl	eax, 6
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+4]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T40338[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	jmp	$LN2@setSymbol
$LN10@setSymbol:
; Line 486
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T40338[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setSymbol@DecimalFormatSymbols@icu_56@@QAEXW4ENumberFormatSymbol@12@ABVUnicodeString@2@C@Z ENDP ; icu_56::DecimalFormatSymbols::setSymbol
PUBLIC	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
EXTRN	__imp_??0Locale@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ
_TEXT	SEGMENT
$T53510 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ PROC ; icu_56::DecimalFormatSymbols::getLocale, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T53510[ebp], 0
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1860				; 00000744H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0Locale@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T53510[ebp]
	or	ecx, 1
	mov	DWORD PTR $T53510[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ENDP ; icu_56::DecimalFormatSymbols::getLocale
_TEXT	ENDS
PUBLIC	?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ; icu_56::DecimalFormatSymbols::getCurrencyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ PROC ; icu_56::DecimalFormatSymbols::getCurrencyPattern, COMDAT
; _this$ = ecx
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2380]
; Line 499
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPattern@DecimalFormatSymbols@icu_56@@QBEPB_WXZ ENDP ; icu_56::DecimalFormatSymbols::getCurrencyPattern
_TEXT	ENDS
PUBLIC	?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ; icu_56::Measure::getNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ PROC	; icu_56::Measure::getNumber, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\measure.h
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getNumber@Measure@icu_56@@QBEABVFormattable@2@XZ ENDP	; icu_56::Measure::getNumber
_TEXT	ENDS
PUBLIC	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ	; icu_56::Measure::getUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ PROC	; icu_56::Measure::getUnit, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ENDP	; icu_56::Measure::getUnit
_TEXT	ENDS
PUBLIC	??_7MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`vftable'
PUBLIC	??0MeasureUnit@icu_56@@QAE@XZ			; icu_56::MeasureUnit::MeasureUnit
PUBLIC	??_R4MeasureUnit@icu_56@@6B@			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeasureUnit@icu_56@@@8			; icu_56::MeasureUnit `RTTI Type Descriptor'
PUBLIC	??_R3MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MeasureUnit@icu_56@@8			; icu_56::MeasureUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MeasureUnit@icu_56@@8		; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`vector deleting destructor'
EXTRN	?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ:PROC ; icu_56::MeasureUnit::getDynamicClassID
EXTRN	?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ:PROC ; icu_56::MeasureUnit::clone
EXTRN	??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z:PROC	; icu_56::MeasureUnit::operator==
;	COMDAT ??_R1A@?0A@EA@MeasureUnit@icu_56@@8
; File d:\mozilla\intl\icu\source\i18n\unicode\measunit.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MeasureUnit@icu_56@@8 DD FLAT:??_R0?AVMeasureUnit@icu_56@@@8 ; icu_56::MeasureUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R2MeasureUnit@icu_56@@8 DD FLAT:??_R1A@?0A@EA@MeasureUnit@icu_56@@8 ; icu_56::MeasureUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3MeasureUnit@icu_56@@8
rdata$r	SEGMENT
??_R3MeasureUnit@icu_56@@8 DD 00H			; icu_56::MeasureUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMeasureUnit@icu_56@@@8
_DATA	SEGMENT
??_R0?AVMeasureUnit@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::MeasureUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeasureUnit@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MeasureUnit@icu_56@@6B@
rdata$r	SEGMENT
??_R4MeasureUnit@icu_56@@6B@ DD 00H			; icu_56::MeasureUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeasureUnit@icu_56@@@8
	DD	FLAT:??_R3MeasureUnit@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7MeasureUnit@icu_56@@6B@
CONST	SEGMENT
??_7MeasureUnit@icu_56@@6B@ DD FLAT:??_R4MeasureUnit@icu_56@@6B@ ; icu_56::MeasureUnit::`vftable'
	DD	FLAT:??_EMeasureUnit@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@MeasureUnit@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@MeasureUnit@icu_56@@UBEPAVUObject@2@XZ
	DD	FLAT:??8MeasureUnit@icu_56@@UBECABVUObject@1@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0MeasureUnit@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MeasureUnit@icu_56@@QAE@XZ PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MeasureUnit@icu_56@@QAE@XZ ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z	; icu_56::MeasureUnit::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z PROC		; icu_56::MeasureUnit::operator!=, COMDAT
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	al
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9MeasureUnit@icu_56@@QBECABVUObject@1@@Z ENDP		; icu_56::MeasureUnit::operator!=
_TEXT	ENDS
PUBLIC	??0MeasureUnit@icu_56@@AAE@HH@Z			; icu_56::MeasureUnit::MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MeasureUnit@icu_56@@AAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_typeId$ = 8						; size = 4
_subTypeId$ = 12					; size = 4
??0MeasureUnit@icu_56@@AAE@HH@Z PROC			; icu_56::MeasureUnit::MeasureUnit, COMDAT
; _this$ = ecx
; Line 1275
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MeasureUnit@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _typeId$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subTypeId$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 1277
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0MeasureUnit@icu_56@@AAE@HH@Z ENDP			; icu_56::MeasureUnit::MeasureUnit
_TEXT	ENDS
PUBLIC	??_GMeasureUnit@icu_56@@UAEPAXI@Z		; icu_56::MeasureUnit::`scalar deleting destructor'
EXTRN	??1MeasureUnit@icu_56@@UAE@XZ:PROC		; icu_56::MeasureUnit::~MeasureUnit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EMeasureUnit@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EMeasureUnit@icu_56@@UAEPAXI@Z PROC			; icu_56::MeasureUnit::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@3
	push	OFFSET ??1MeasureUnit@icu_56@@UAE@XZ	; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@3
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@3
$LN3@vector@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MeasureUnit@icu_56@@UAE@XZ		; icu_56::MeasureUnit::~MeasureUnit
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@3
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@3:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMeasureUnit@icu_56@@UAEPAXI@Z ENDP			; icu_56::MeasureUnit::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ	; icu_56::CurrencyUnit::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyUnit::getISOCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\currunit.h
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyUnit::getISOCurrency
_TEXT	ENDS
PUBLIC	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ PROC ; icu_56::CurrencyAmount::getCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\curramt.h
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnit@Measure@icu_56@@QBEABVMeasureUnit@2@XZ ; icu_56::Measure::getUnit
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ENDP ; icu_56::CurrencyAmount::getCurrency
_TEXT	ENDS
PUBLIC	?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ; icu_56::CurrencyAmount::getISOCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ PROC	; icu_56::CurrencyAmount::getISOCurrency, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@CurrencyAmount@icu_56@@QBEABVCurrencyUnit@2@XZ ; icu_56::CurrencyAmount::getCurrency
	mov	ecx, eax
	call	?getISOCurrency@CurrencyUnit@icu_56@@QBEPB_WXZ ; icu_56::CurrencyUnit::getISOCurrency
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getISOCurrency@CurrencyAmount@icu_56@@QBEPB_WXZ ENDP	; icu_56::CurrencyAmount::getISOCurrency
_TEXT	ENDS
PUBLIC	??_7NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`vftable'
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@XZ		; icu_56::NumberFormatFactory::NumberFormatFactory
PUBLIC	??_R4NumberFormatFactory@icu_56@@6B@		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNumberFormatFactory@icu_56@@@8		; icu_56::NumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormatFactory@icu_56@@8		; icu_56::NumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8	; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ENumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8 ; icu_56::NumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormatFactory@icu_56@@8 DD 00H		; icu_56::NumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4NumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4NumberFormatFactory@icu_56@@6B@ DD 00H		; icu_56::NumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3NumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7NumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7NumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4NumberFormatFactory@icu_56@@6B@ ; icu_56::NumberFormatFactory::`vftable'
	DD	FLAT:??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@XZ PROC		; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NumberFormatFactory@icu_56@@QAE@XZ ENDP		; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z	; icu_56::NumberFormatFactory::NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::NumberFormatFactory::NumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::NumberFormatFactory
_TEXT	ENDS
PUBLIC	??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::NumberFormatFactory::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::NumberFormatFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UObject@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4NumberFormatFactory@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::NumberFormatFactory::operator=
_TEXT	ENDS
PUBLIC	??_GNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::NumberFormatFactory::`scalar deleting destructor'
EXTRN	??1NumberFormatFactory@icu_56@@UAE@XZ:PROC	; icu_56::NumberFormatFactory::~NumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ENumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z PROC		; icu_56::NumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@4
	push	OFFSET ??1NumberFormatFactory@icu_56@@UAE@XZ ; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@4
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@4
$LN3@vector@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@4
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@4:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@4:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ENumberFormatFactory@icu_56@@UAEPAXI@Z ENDP		; icu_56::NumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_7SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`vftable'
PUBLIC	??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_R4SimpleNumberFormatFactory@icu_56@@6B@	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSimpleNumberFormatFactory@icu_56@@@8	; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
PUBLIC	??_R3SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleNumberFormatFactory@icu_56@@8	; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
EXTRN	?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ:PROC ; icu_56::SimpleNumberFormatFactory::visible
EXTRN	?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z:PROC ; icu_56::SimpleNumberFormatFactory::getSupportedIDs
;	COMDAT ??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R2SimpleNumberFormatFactory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@SimpleNumberFormatFactory@icu_56@@8 ; icu_56::SimpleNumberFormatFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormatFactory@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	SEGMENT
??_R3SimpleNumberFormatFactory@icu_56@@8 DD 00H		; icu_56::SimpleNumberFormatFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVSimpleNumberFormatFactory@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::SimpleNumberFormatFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleNumberFormatFactory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SimpleNumberFormatFactory@icu_56@@6B@
rdata$r	SEGMENT
??_R4SimpleNumberFormatFactory@icu_56@@6B@ DD 00H	; icu_56::SimpleNumberFormatFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSimpleNumberFormatFactory@icu_56@@@8
	DD	FLAT:??_R3SimpleNumberFormatFactory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7SimpleNumberFormatFactory@icu_56@@6B@
CONST	SEGMENT
??_7SimpleNumberFormatFactory@icu_56@@6B@ DD FLAT:??_R4SimpleNumberFormatFactory@icu_56@@6B@ ; icu_56::SimpleNumberFormatFactory::`vftable'
	DD	FLAT:??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?visible@SimpleNumberFormatFactory@icu_56@@UBECXZ
	DD	FLAT:?getSupportedIDs@SimpleNumberFormatFactory@icu_56@@UBEPBVUnicodeString@2@AAHAAW4UErrorCode@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z PROC	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormatFactory@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SimpleNumberFormatFactory@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormatFactory@icu_56@@UAE@XZ	; icu_56::NumberFormatFactory::~NumberFormatFactory
__ehhandler$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SimpleNumberFormatFactory@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::SimpleNumberFormatFactory::SimpleNumberFormatFactory
PUBLIC	??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
EXTRN	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ:PROC ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z PROC	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@5
	push	OFFSET ??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	72					; 00000048H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@5
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@5
$LN3@vector@5:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SimpleNumberFormatFactory@icu_56@@UAE@XZ ; icu_56::SimpleNumberFormatFactory::~SimpleNumberFormatFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@5
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@5:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@5:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ESimpleNumberFormatFactory@icu_56@@UAEPAXI@Z ENDP	; icu_56::SimpleNumberFormatFactory::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ	; icu_56::NumberFormat::isParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ PROC	; icu_56::NumberFormat::isParseIntegerOnly, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\numfmt.h
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1171
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+340]
; Line 1172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ENDP	; icu_56::NumberFormat::isParseIntegerOnly
_TEXT	ENDS
PUBLIC	?isLenient@NumberFormat@icu_56@@UBECXZ		; icu_56::NumberFormat::isLenient
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLenient@NumberFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isLenient@NumberFormat@icu_56@@UBECXZ PROC		; icu_56::NumberFormat::isLenient, COMDAT
; _this$ = ecx
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1177
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+341]
; Line 1178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isLenient@NumberFormat@icu_56@@UBECXZ ENDP		; icu_56::NumberFormat::isLenient
_TEXT	ENDS
PUBLIC	??1DecimalFormat@icu_56@@UAE@XZ			; icu_56::DecimalFormat::~DecimalFormat
PUBLIC	??_GDecimalFormat@icu_56@@UAEPAXI@Z		; icu_56::DecimalFormat::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDecimalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDecimalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::DecimalFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DecimalFormat@icu_56@@UAE@XZ		; icu_56::DecimalFormat::~DecimalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDecimalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::DecimalFormat::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EDecimalFormat@icu_56@@UAEPAXI@Z		; icu_56::DecimalFormat::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EDecimalFormat@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EDecimalFormat@icu_56@@UAEPAXI@Z PROC		; icu_56::DecimalFormat::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@6
	push	OFFSET ??1DecimalFormat@icu_56@@UAE@XZ	; icu_56::DecimalFormat::~DecimalFormat
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	388					; 00000184H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@6
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@6
$LN3@vector@6:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DecimalFormat@icu_56@@UAE@XZ		; icu_56::DecimalFormat::~DecimalFormat
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@6
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@6:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@6:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EDecimalFormat@icu_56@@UAEPAXI@Z ENDP		; icu_56::DecimalFormat::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??9DigitList@icu_56@@QBECABV01@@Z		; icu_56::DigitList::operator!=
EXTRN	??8DigitList@icu_56@@QBECABV01@@Z:PROC		; icu_56::DigitList::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9DigitList@icu_56@@QBECABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??9DigitList@icu_56@@QBECABV01@@Z PROC			; icu_56::DigitList::operator!=, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitlst.h
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9DigitList@icu_56@@QBECABV01@@Z ENDP			; icu_56::DigitList::operator!=
_TEXT	ENDS
PUBLIC	?isNaN@DigitList@icu_56@@QBECXZ			; icu_56::DigitList::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@DigitList@icu_56@@QBECXZ PROC			; icu_56::DigitList::isNaN, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 48					; 00000030H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@DigitList@icu_56@@QBECXZ ENDP			; icu_56::DigitList::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isInfinite, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 64					; 00000040H
	setne	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isInfinite
_TEXT	ENDS
PUBLIC	?setToZero@DigitList@icu_56@@QAEXXZ		; icu_56::DigitList::setToZero
EXTRN	_uprv_decNumberZero_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setToZero@DigitList@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setToZero@DigitList@icu_56@@QAEXXZ PROC		; icu_56::DigitList::setToZero, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_uprv_decNumberZero_56
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?setToZero@DigitList@icu_56@@QAEXXZ ENDP		; icu_56::DigitList::setToZero
_TEXT	ENDS
PUBLIC	?digits@DigitList@icu_56@@QBEHXZ		; icu_56::DigitList::digits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?digits@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?digits@DigitList@icu_56@@QBEHXZ PROC			; icu_56::DigitList::digits, COMDAT
; _this$ = ecx
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?digits@DigitList@icu_56@@QBEHXZ ENDP			; icu_56::DigitList::digits
_TEXT	ENDS
PUBLIC	?isPositive@DigitList@icu_56@@QBECXZ		; icu_56::DigitList::isPositive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isPositive@DigitList@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isPositive@DigitList@icu_56@@QBECXZ PROC		; icu_56::DigitList::isPositive, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR [ecx+8]
	and	edx, 128				; 00000080H
	neg	edx
	sbb	edx, edx
	neg	edx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPositive@DigitList@icu_56@@QBECXZ ENDP		; icu_56::DigitList::isPositive
_TEXT	ENDS
PUBLIC	?getLowerExponent@DigitList@icu_56@@QBEHXZ	; icu_56::DigitList::getLowerExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLowerExponent@DigitList@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLowerExponent@DigitList@icu_56@@QBEHXZ PROC		; icu_56::DigitList::getLowerExponent, COMDAT
; _this$ = ecx
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLowerExponent@DigitList@icu_56@@QBEHXZ ENDP		; icu_56::DigitList::getLowerExponent
_TEXT	ENDS
PUBLIC	??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z	; icu_56::DigitList::operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_onStack$ = 12						; size = 4
___formal$ = 16						; size = 4
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z PROC	; icu_56::DigitList::operator new, COMDAT
; Line 503
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _onStack$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2DigitList@icu_56@@SAPAXIPAXW4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator new
_TEXT	ENDS
PUBLIC	??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z	; icu_56::DigitList::operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z PROC	; icu_56::DigitList::operator delete, COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3DigitList@icu_56@@SAXPAX0W4EStackMode@1@@Z ENDP	; icu_56::DigitList::operator delete
_TEXT	ENDS
PUBLIC	?internalSetDouble@DigitList@icu_56@@AAEXN@Z	; icu_56::DigitList::internalSetDouble
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetDouble@DigitList@icu_56@@AAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z PROC	; icu_56::DigitList::internalSetDouble, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 1
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _d$[ebp]
	fstp	QWORD PTR [eax+96]
; Line 515
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetDouble@DigitList@icu_56@@AAEXN@Z ENDP	; icu_56::DigitList::internalSetDouble
_TEXT	ENDS
PUBLIC	?internalSetInt64@DigitList@icu_56@@AAEX_J@Z	; icu_56::DigitList::internalSetInt64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalSetInt64@DigitList@icu_56@@AAEX_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = 8							; size = 8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z PROC	; icu_56::DigitList::internalSetInt64, COMDAT
; _this$ = ecx
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 2
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	edx, DWORD PTR _d$[ebp+4]
	mov	DWORD PTR [eax+100], edx
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?internalSetInt64@DigitList@icu_56@@AAEX_J@Z ENDP	; icu_56::DigitList::internalSetInt64
_TEXT	ENDS
PUBLIC	?internalClear@DigitList@icu_56@@AAEXXZ		; icu_56::DigitList::internalClear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?internalClear@DigitList@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?internalClear@DigitList@icu_56@@AAEXXZ PROC		; icu_56::DigitList::internalClear, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 522
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?internalClear@DigitList@icu_56@@AAEXXZ ENDP		; icu_56::DigitList::internalClear
_TEXT	ENDS
PUBLIC	?countChar32@DigitAffix@icu_56@@QBEHXZ		; icu_56::DigitAffix::countChar32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@DigitAffix@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@DigitAffix@icu_56@@QBEHXZ PROC		; icu_56::DigitAffix::countChar32, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitaffix.h
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@DigitAffix@icu_56@@QBEHXZ ENDP		; icu_56::DigitAffix::countChar32
_TEXT	ENDS
PUBLIC	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::DigitAffix::toString, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::DigitAffix::toString
_TEXT	ENDS
PUBLIC	?equals@DigitAffix@icu_56@@QBECABV12@@Z		; icu_56::DigitAffix::equals
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitAffix::equals, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	esi, esp
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals
$LN3@equals:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals:
	mov	al, BYTE PTR tv76[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitAffix::equals
_TEXT	ENDS
PUBLIC	??1DigitAffix@icu_56@@QAE@XZ			; icu_56::DigitAffix::~DigitAffix
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffix@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0
__ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DigitAffix@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffix@icu_56@@QAE@XZ PROC			; icu_56::DigitAffix::~DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffix@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DigitAffix@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffix@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffix@icu_56@@QAE@XZ ENDP			; icu_56::DigitAffix::~DigitAffix
PUBLIC	??0DigitAffix@icu_56@@QAE@ABV01@@Z		; icu_56::DigitAffix::DigitAffix
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffix@icu_56@@QAE@ABV01@@Z PROC			; icu_56::DigitAffix::DigitAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffix@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DigitAffix@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffix@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffix@icu_56@@QAE@ABV01@@Z ENDP			; icu_56::DigitAffix::DigitAffix
PUBLIC	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::DigitAffix::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitAffix::operator=
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\pluralaffix.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z	; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherVariant$ = 8					; size = 4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z PROC	; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP	; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
PUBLIC	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralAffix::getOtherVariant, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralAffix::getOtherVariant
_TEXT	ENDS
PUBLIC	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
PUBLIC	?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z	; icu_56::PluralAffix::eq
PUBLIC	?equals@PluralAffix@icu_56@@QBECABV12@@Z	; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@PluralAffix@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@PluralAffix@icu_56@@QBECABV12@@Z PROC		; icu_56::PluralAffix::equals, COMDAT
; _this$ = ecx
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	push	OFFSET ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ; icu_56::PluralAffix::eq
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ; icu_56::PluralMap<icu_56::DigitAffix>::equals
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@PluralAffix@icu_56@@QBECABV12@@Z ENDP		; icu_56::PluralAffix::equals
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z PROC	; icu_56::PluralAffix::eq, COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	call	?equals@DigitAffix@icu_56@@QBECABV12@@Z	; icu_56::DigitAffix::equals
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@PluralAffix@icu_56@@CACABVDigitAffix@2@0@Z ENDP	; icu_56::PluralAffix::eq
_TEXT	ENDS
PUBLIC	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	??1PluralAffix@icu_56@@QAE@XZ			; icu_56::PluralAffix::~PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1PluralAffix@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PluralAffix@icu_56@@QAE@XZ PROC			; icu_56::PluralAffix::~PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PluralAffix@icu_56@@QAE@XZ ENDP			; icu_56::PluralAffix::~PluralAffix
_TEXT	ENDS
PUBLIC	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??0PluralAffix@icu_56@@QAE@ABV01@@Z		; icu_56::PluralAffix::PluralAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PluralAffix@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PluralAffix@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PluralAffix::PluralAffix, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0PluralAffix@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PluralAffix::PluralAffix
_TEXT	ENDS
PUBLIC	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
PUBLIC	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PluralAffix::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PluralAffix::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PluralAffix::operator=
_TEXT	ENDS
PUBLIC	?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::CurrencyAffixInfo::getSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::CurrencyAffixInfo::getSymbol, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\affixpatternparser.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getSymbol@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getSymbol
_TEXT	ENDS
PUBLIC	?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::CurrencyAffixInfo::getISO
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::CurrencyAffixInfo::getISO, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getISO@CurrencyAffixInfo@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getISO
_TEXT	ENDS
PUBLIC	?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ ; icu_56::CurrencyAffixInfo::getLong
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ PROC ; icu_56::CurrencyAffixInfo::getLong, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLong@CurrencyAffixInfo@icu_56@@QBEABVPluralAffix@2@XZ ENDP ; icu_56::CurrencyAffixInfo::getLong
_TEXT	ENDS
PUBLIC	?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_symbol$ = 8						; size = 4
?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::CurrencyAffixInfo::setSymbol, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	esi, esp
	mov	eax, DWORD PTR _symbol$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+280], 0
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSymbol@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::CurrencyAffixInfo::setSymbol
_TEXT	ENDS
PUBLIC	?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::CurrencyAffixInfo::setISO
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iso$ = 8						; size = 4
?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z PROC ; icu_56::CurrencyAffixInfo::setISO, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	esi, esp
	mov	eax, DWORD PTR _iso$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+280], 0
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setISO@CurrencyAffixInfo@icu_56@@QAEXABVUnicodeString@2@@Z ENDP ; icu_56::CurrencyAffixInfo::setISO
_TEXT	ENDS
PUBLIC	?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z	; icu_56::CurrencyAffixInfo::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv88 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z PROC	; icu_56::CurrencyAffixInfo::equals, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@2
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@2
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+280]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+280]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@2
	mov	BYTE PTR tv88[ebp], 1
	jmp	SHORT $LN4@equals@2
$LN3@equals@2:
	mov	BYTE PTR tv88[ebp], 0
$LN4@equals@2:
	mov	al, BYTE PTR tv88[ebp]
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@CurrencyAffixInfo@icu_56@@QBECABV12@@Z ENDP	; icu_56::CurrencyAffixInfo::equals
_TEXT	ENDS
PUBLIC	?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ	; icu_56::CurrencyAffixInfo::isDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ PROC	; icu_56::CurrencyAffixInfo::isDefault, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+280]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isDefault@CurrencyAffixInfo@icu_56@@QBECXZ ENDP	; icu_56::CurrencyAffixInfo::isDefault
_TEXT	ENDS
PUBLIC	??1CurrencyAffixInfo@icu_56@@QAE@XZ		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CurrencyAffixInfo@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$1
__ehfuncinfo$??1CurrencyAffixInfo@icu_56@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1CurrencyAffixInfo@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CurrencyAffixInfo@icu_56@@QAE@XZ PROC		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1CurrencyAffixInfo@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1CurrencyAffixInfo@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CurrencyAffixInfo@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CurrencyAffixInfo@icu_56@@QAE@XZ ENDP		; icu_56::CurrencyAffixInfo::~CurrencyAffixInfo
PUBLIC	??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z	; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z PROC		; icu_56::CurrencyAffixInfo::CurrencyAffixInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+280]
	mov	BYTE PTR [eax+280], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CurrencyAffixInfo@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::CurrencyAffixInfo::CurrencyAffixInfo
PUBLIC	??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::CurrencyAffixInfo::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::CurrencyAffixInfo::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+280]
	mov	BYTE PTR [eax+280], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CurrencyAffixInfo@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::CurrencyAffixInfo::operator=
_TEXT	ENDS
PUBLIC	??0AffixPattern@icu_56@@QAE@XZ			; icu_56::AffixPattern::AffixPattern
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPattern@icu_56@@QAE@XZ$0
__ehfuncinfo$??0AffixPattern@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AffixPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0AffixPattern@icu_56@@QAE@XZ PROC			; icu_56::AffixPattern::AffixPattern, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+129], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+130], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 143
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPattern@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPattern@icu_56@@QAE@XZ ENDP			; icu_56::AffixPattern::AffixPattern
PUBLIC	?usesCurrency@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesCurrency@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesCurrency@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesCurrency, COMDAT
; _this$ = ecx
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+128]
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesCurrency@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesCurrency
_TEXT	ENDS
PUBLIC	?usesPercent@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesPercent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesPercent@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesPercent@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesPercent, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+129]
; Line 191
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesPercent@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesPercent
_TEXT	ENDS
PUBLIC	?usesPermill@AffixPattern@icu_56@@QBECXZ	; icu_56::AffixPattern::usesPermill
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usesPermill@AffixPattern@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?usesPermill@AffixPattern@icu_56@@QBECXZ PROC		; icu_56::AffixPattern::usesPermill, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+130]
; Line 195
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?usesPermill@AffixPattern@icu_56@@QBECXZ ENDP		; icu_56::AffixPattern::usesPermill
_TEXT	ENDS
PUBLIC	?countChar32@AffixPattern@icu_56@@QBEHXZ	; icu_56::AffixPattern::countChar32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32@AffixPattern@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32@AffixPattern@icu_56@@QBEHXZ PROC		; icu_56::AffixPattern::countChar32, COMDAT
; _this$ = ecx
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+132]
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32@AffixPattern@icu_56@@QBEHXZ ENDP		; icu_56::AffixPattern::countChar32
_TEXT	ENDS
PUBLIC	?equals@AffixPattern@icu_56@@QBECABV12@@Z	; icu_56::AffixPattern::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@AffixPattern@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv94 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@AffixPattern@icu_56@@QBECABV12@@Z PROC		; icu_56::AffixPattern::equals, COMDAT
; _this$ = ecx
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 278
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@3
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@3
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+128]
	mov	eax, DWORD PTR _other$[ebp]
	movsx	ecx, BYTE PTR [eax+128]
	cmp	edx, ecx
	jne	SHORT $LN3@equals@3
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+129]
	mov	ecx, DWORD PTR _other$[ebp]
	movsx	edx, BYTE PTR [ecx+129]
	cmp	eax, edx
	jne	SHORT $LN3@equals@3
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+130]
	mov	edx, DWORD PTR _other$[ebp]
	movsx	eax, BYTE PTR [edx+130]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [ecx+132]
	cmp	eax, DWORD PTR [edx+132]
	jne	SHORT $LN3@equals@3
	mov	BYTE PTR tv94[ebp], 1
	jmp	SHORT $LN4@equals@3
$LN3@equals@3:
	mov	BYTE PTR tv94[ebp], 0
$LN4@equals@3:
	mov	al, BYTE PTR tv94[ebp]
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@AffixPattern@icu_56@@QBECABV12@@Z ENDP		; icu_56::AffixPattern::equals
_TEXT	ENDS
PUBLIC	??1AffixPattern@icu_56@@QAE@XZ			; icu_56::AffixPattern::~AffixPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AffixPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AffixPattern@icu_56@@QAE@XZ$0
__ehfuncinfo$??1AffixPattern@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AffixPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AffixPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AffixPattern@icu_56@@QAE@XZ PROC			; icu_56::AffixPattern::~AffixPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AffixPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AffixPattern@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1AffixPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AffixPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AffixPattern@icu_56@@QAE@XZ ENDP			; icu_56::AffixPattern::~AffixPattern
PUBLIC	??0AffixPattern@icu_56@@QAE@ABV01@@Z		; icu_56::AffixPattern::AffixPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPattern@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPattern@icu_56@@QAE@ABV01@@Z$0
__ehfuncinfo$??0AffixPattern@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPattern@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0AffixPattern@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AffixPattern::AffixPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+128], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+129]
	mov	BYTE PTR [eax+129], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+130]
	mov	BYTE PTR [eax+130], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPattern@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPattern@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPattern@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPattern@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AffixPattern::AffixPattern
PUBLIC	??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::AffixPattern::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::AffixPattern::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+128], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+129]
	mov	BYTE PTR [eax+129], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+130]
	mov	BYTE PTR [eax+130], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax+132], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4AffixPattern@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::AffixPattern::operator=
_TEXT	ENDS
PUBLIC	??0AffixPatternIterator@icu_56@@QAE@XZ		; icu_56::AffixPatternIterator::AffixPatternIterator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0AffixPatternIterator@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0AffixPatternIterator@icu_56@@QAE@XZ PROC		; icu_56::AffixPatternIterator::AffixPatternIterator, COMDAT
; _this$ = ecx
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0AffixPatternIterator@icu_56@@QAE@XZ ENDP		; icu_56::AffixPatternIterator::AffixPatternIterator
_TEXT	ENDS
PUBLIC	?equals@AffixPatternParser@icu_56@@QBECABV12@@Z	; icu_56::AffixPatternParser::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@AffixPatternParser@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv90 = -205						; size = 1
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?equals@AffixPatternParser@icu_56@@QBECABV12@@Z PROC	; icu_56::AffixPatternParser::equals, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	mov	esi, esp
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@4
	mov	edx, DWORD PTR _other$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@4
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@4
	mov	eax, DWORD PTR _other$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@4
	mov	BYTE PTR tv90[ebp], 1
	jmp	SHORT $LN4@equals@4
$LN3@equals@4:
	mov	BYTE PTR tv90[ebp], 0
$LN4@equals@4:
	mov	al, BYTE PTR tv90[ebp]
; Line 388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@AffixPatternParser@icu_56@@QBECABV12@@Z ENDP	; icu_56::AffixPatternParser::equals
_TEXT	ENDS
PUBLIC	??1AffixPatternParser@icu_56@@QAE@XZ		; icu_56::AffixPatternParser::~AffixPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AffixPatternParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$2
__ehfuncinfo$??1AffixPatternParser@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1AffixPatternParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AffixPatternParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AffixPatternParser@icu_56@@QAE@XZ PROC		; icu_56::AffixPatternParser::~AffixPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AffixPatternParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternParser@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1AffixPatternParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AffixPatternParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AffixPatternParser@icu_56@@QAE@XZ ENDP		; icu_56::AffixPatternParser::~AffixPatternParser
PUBLIC	??0AffixPatternParser@icu_56@@QAE@ABV01@@Z	; icu_56::AffixPatternParser::AffixPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0AffixPatternParser@icu_56@@QAE@ABV01@@Z PROC		; icu_56::AffixPatternParser::AffixPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPatternParser@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPatternParser@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::AffixPatternParser::AffixPatternParser
PUBLIC	??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::AffixPatternParser::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::AffixPatternParser::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 128				; 00000080H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4AffixPatternParser@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::AffixPatternParser::operator=
_TEXT	ENDS
PUBLIC	??0DigitAffixesAndPadding@icu_56@@QAE@XZ	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\digitaffixesandpadding.h
xdata$x	SEGMENT
__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$2
__ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffixesAndPadding@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0DigitAffixesAndPadding@icu_56@@QAE@XZ PROC		; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??0PluralAffix@icu_56@@QAE@XZ		; icu_56::PluralAffix::PluralAffix
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+608], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+612], 42			; 0000002aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+616], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffixesAndPadding@icu_56@@QAE@XZ ENDP		; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
PUBLIC	?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z ; icu_56::DigitAffixesAndPadding::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv131 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z PROC ; icu_56::DigitAffixesAndPadding::equals, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@5
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 152				; 00000098H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	eax, al
	test	eax, eax
	je	$LN3@equals@5
	mov	ecx, DWORD PTR _rhs$[ebp]
	add	ecx, 304				; 00000130H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@5
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	?equals@PluralAffix@icu_56@@QBECABV12@@Z ; icu_56::PluralAffix::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+608]
	cmp	ecx, DWORD PTR [eax+608]
	jne	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+616]
	cmp	ecx, DWORD PTR [eax+616]
	jne	SHORT $LN3@equals@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+612]
	cmp	ecx, DWORD PTR [eax+612]
	jne	SHORT $LN3@equals@5
	mov	BYTE PTR tv131[ebp], 1
	jmp	SHORT $LN4@equals@5
$LN3@equals@5:
	mov	BYTE PTR tv131[ebp], 0
$LN4@equals@5:
	mov	al, BYTE PTR tv131[ebp]
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitAffixesAndPadding@icu_56@@QBECABV12@@Z ENDP ; icu_56::DigitAffixesAndPadding::equals
_TEXT	ENDS
PUBLIC	??1DigitAffixesAndPadding@icu_56@@QAE@XZ	; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DigitAffixesAndPadding@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$2
__ehfuncinfo$??1DigitAffixesAndPadding@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitAffixesAndPadding@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitAffixesAndPadding@icu_56@@QAE@XZ PROC		; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PluralAffix@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitAffixesAndPadding@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??1DigitAffixesAndPadding@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitAffixesAndPadding@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitAffixesAndPadding@icu_56@@QAE@XZ ENDP		; icu_56::DigitAffixesAndPadding::~DigitAffixesAndPadding
PUBLIC	??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$2
__ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z PROC	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 304				; 00000130H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??0PluralAffix@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+608]
	mov	DWORD PTR [eax+608], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+612]
	mov	DWORD PTR [eax+612], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+616]
	mov	DWORD PTR [eax+616], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	jmp	??1PluralAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitAffixesAndPadding@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::DigitAffixesAndPadding::DigitAffixesAndPadding
PUBLIC	??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitAffixesAndPadding::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::DigitAffixesAndPadding::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 304				; 00000130H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	??4PluralAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+608]
	mov	DWORD PTR [eax+608], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+612]
	mov	DWORD PTR [eax+612], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+616]
	mov	DWORD PTR [eax+616], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitAffixesAndPadding@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::DigitAffixesAndPadding::operator=
_TEXT	ENDS
PUBLIC	??0DigitFormatterOptions@icu_56@@QAE@XZ		; icu_56::DigitFormatterOptions::DigitFormatterOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitFormatterOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitFormatterOptions@icu_56@@QAE@XZ PROC		; icu_56::DigitFormatterOptions::DigitFormatterOptions, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitformatter.h
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitFormatterOptions@icu_56@@QAE@XZ ENDP		; icu_56::DigitFormatterOptions::DigitFormatterOptions
_TEXT	ENDS
PUBLIC	?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z PROC	; icu_56::DigitFormatterOptions::equals, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ENDP	; icu_56::DigitFormatterOptions::equals
_TEXT	ENDS
PUBLIC	?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ ; icu_56::DigitFormatterOptions::isFastFormattable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ PROC ; icu_56::DigitFormatterOptions::isFastFormattable, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	sete	al
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isFastFormattable@DigitFormatterOptions@icu_56@@QBECXZ ENDP ; icu_56::DigitFormatterOptions::isFastFormattable
_TEXT	ENDS
PUBLIC	??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitFormatterOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DigitFormatterOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DigitFormatterOptions::operator=
_TEXT	ENDS
PUBLIC	??0DigitFormatterIntOptions@icu_56@@QAE@XZ	; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitFormatterIntOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitFormatterIntOptions@icu_56@@QAE@XZ PROC		; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitFormatterIntOptions@icu_56@@QAE@XZ ENDP		; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
_TEXT	ENDS
PUBLIC	?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterIntOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z PROC ; icu_56::DigitFormatterIntOptions::equals, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	sete	al
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ENDP ; icu_56::DigitFormatterIntOptions::equals
_TEXT	ENDS
PUBLIC	??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DigitFormatterIntOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::DigitFormatterIntOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatterIntOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::DigitFormatterIntOptions::operator=
_TEXT	ENDS
PUBLIC	?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::SciFormatterOptions::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv76 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z PROC	; icu_56::SciFormatterOptions::equals, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@DigitFormatterOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterOptions::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@6
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?equals@DigitFormatterIntOptions@icu_56@@QBECABV12@@Z ; icu_56::DigitFormatterIntOptions::equals
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@6
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN4@equals@6
$LN3@equals@6:
	mov	BYTE PTR tv76[ebp], 0
$LN4@equals@6:
	mov	al, BYTE PTR tv76[ebp]
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@SciFormatterOptions@icu_56@@QBECABV12@@Z ENDP	; icu_56::SciFormatterOptions::equals
_TEXT	ENDS
PUBLIC	??0SciFormatterOptions@icu_56@@QAE@XZ		; icu_56::SciFormatterOptions::SciFormatterOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SciFormatterOptions@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SciFormatterOptions@icu_56@@QAE@XZ PROC		; icu_56::SciFormatterOptions::SciFormatterOptions, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitFormatterOptions@icu_56@@QAE@XZ	; icu_56::DigitFormatterOptions::DigitFormatterOptions
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	??0DigitFormatterIntOptions@icu_56@@QAE@XZ ; icu_56::DigitFormatterIntOptions::DigitFormatterIntOptions
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SciFormatterOptions@icu_56@@QAE@XZ ENDP		; icu_56::SciFormatterOptions::SciFormatterOptions
_TEXT	ENDS
PUBLIC	??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::SciFormatterOptions::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::SciFormatterOptions::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SciFormatterOptions@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::SciFormatterOptions::operator=
_TEXT	ENDS
PUBLIC	?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitFormatter::formatNaN
EXTRN	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z:PROC ; icu_56::DigitAffix::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
_appendTo$ = 12						; size = 4
?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z PROC ; icu_56::DigitFormatter::formatNaN, COMDAT
; _this$ = ecx
; Line 246
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _appendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitAffix::format
; Line 248
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?formatNaN@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ENDP ; icu_56::DigitFormatter::formatNaN
_TEXT	ENDS
PUBLIC	?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ ; icu_56::DigitFormatter::countChar32ForNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ PROC	; icu_56::DigitFormatter::countChar32ForNaN, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	ecx, eax
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32ForNaN@DigitFormatter@icu_56@@ABEHXZ ENDP	; icu_56::DigitFormatter::countChar32ForNaN
_TEXT	ENDS
PUBLIC	?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitFormatter::formatInfinity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
_appendTo$ = 12						; size = 4
?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z PROC ; icu_56::DigitFormatter::formatInfinity, COMDAT
; _this$ = ecx
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 257
	mov	eax, DWORD PTR _appendTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	?format@DigitAffix@icu_56@@QBEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ; icu_56::DigitAffix::format
; Line 258
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?formatInfinity@DigitFormatter@icu_56@@ABEAAVUnicodeString@2@AAVFieldPositionHandler@2@AAV32@@Z ENDP ; icu_56::DigitFormatter::formatInfinity
_TEXT	ENDS
PUBLIC	?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ ; icu_56::DigitFormatter::countChar32ForInfinity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ PROC ; icu_56::DigitFormatter::countChar32ForInfinity, COMDAT
; _this$ = ecx
; Line 260
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 261
	mov	esi, esp
	push	2147483647				; 7fffffffH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	ecx, eax
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChar32ForInfinity@DigitFormatter@icu_56@@ABEHXZ ENDP ; icu_56::DigitFormatter::countChar32ForInfinity
_TEXT	ENDS
PUBLIC	??1DigitFormatter@icu_56@@QAE@XZ		; icu_56::DigitFormatter::~DigitFormatter
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DigitFormatter@icu_56@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1DigitFormatter@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DigitFormatter@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DigitFormatter@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DigitFormatter@icu_56@@QAE@XZ PROC			; icu_56::DigitFormatter::~DigitFormatter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DigitFormatter@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??1DigitFormatter@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??1DigitFormatter@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DigitFormatter@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DigitFormatter@icu_56@@QAE@XZ ENDP			; icu_56::DigitFormatter::~DigitFormatter
PUBLIC	??0DigitFormatter@icu_56@@QAE@ABV01@@Z		; icu_56::DigitFormatter::DigitFormatter
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DigitFormatter@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DigitFormatter@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DigitFormatter@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DigitFormatter@icu_56@@QAE@ABV01@@Z PROC		; icu_56::DigitFormatter::DigitFormatter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 10					; 0000000aH
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 40					; 00000028H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 104				; 00000068H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 168				; 000000a8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 232				; 000000e8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+552]
	mov	BYTE PTR [eax+552], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 556				; 0000022cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??0DigitFormatter@icu_56@@QAE@ABV01@@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0DigitFormatter@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DigitFormatter@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DigitFormatter@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::DigitFormatter::DigitFormatter
PUBLIC	??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitFormatter::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S3$43131 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::DigitFormatter::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _$S3$43131[ebp], 0
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
	mov	eax, DWORD PTR _$S3$43131[ebp]
	add	eax, 1
	mov	DWORD PTR _$S3$43131[ebp], eax
$LN3@operator@3:
	cmp	DWORD PTR _$S3$43131[ebp], 10		; 0000000aH
	jae	SHORT $LN1@operator@3
	mov	eax, DWORD PTR _$S3$43131[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S3$43131[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN2@operator@3
$LN1@operator@3:
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 40					; 00000028H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 104				; 00000068H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 168				; 000000a8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 232				; 000000e8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 424				; 000001a8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+552]
	mov	BYTE PTR [eax+552], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 556				; 0000022cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 556				; 0000022cH
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitFormatter@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::DigitFormatter::operator=
_TEXT	ENDS
PUBLIC	??0DigitGrouping@icu_56@@QAE@XZ			; icu_56::DigitGrouping::DigitGrouping
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitGrouping@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitGrouping@icu_56@@QAE@XZ PROC			; icu_56::DigitGrouping::DigitGrouping, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitgrouping.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitGrouping@icu_56@@QAE@XZ ENDP			; icu_56::DigitGrouping::DigitGrouping
_TEXT	ENDS
PUBLIC	?equals@DigitGrouping@icu_56@@QBECABV12@@Z	; icu_56::DigitGrouping::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitGrouping@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv71 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitGrouping@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitGrouping::equals, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@equals@7
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN4@equals@7
$LN3@equals@7:
	mov	BYTE PTR tv71[ebp], 0
$LN4@equals@7:
	mov	al, BYTE PTR tv71[ebp]
; Line 39
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitGrouping@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitGrouping::equals
_TEXT	ENDS
PUBLIC	?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ	; icu_56::DigitGrouping::isGroupingUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ PROC	; icu_56::DigitGrouping::isGroupingUsed, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isGroupingUsed@DigitGrouping@icu_56@@QBECXZ ENDP	; icu_56::DigitGrouping::isGroupingUsed
_TEXT	ENDS
PUBLIC	??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitGrouping::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitGrouping::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitGrouping@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitGrouping::operator=
_TEXT	ENDS
PUBLIC	??0DigitInterval@icu_56@@QAE@XZ			; icu_56::DigitInterval::DigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DigitInterval@icu_56@@QAE@XZ PROC			; icu_56::DigitInterval::DigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\digitinterval.h
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DigitInterval@icu_56@@QAE@XZ ENDP			; icu_56::DigitInterval::DigitInterval
_TEXT	ENDS
PUBLIC	?clear@DigitInterval@icu_56@@QAEXXZ		; icu_56::DigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@DigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@DigitInterval@icu_56@@QAEXXZ PROC		; icu_56::DigitInterval::clear, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -2147483648		; 80000000H
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@DigitInterval@icu_56@@QAEXXZ ENDP		; icu_56::DigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@DigitInterval@icu_56@@QBECABV12@@Z	; icu_56::DigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@DigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@DigitInterval@icu_56@@QBECABV12@@Z PROC		; icu_56::DigitInterval::equals, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@8
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals@8
$LN3@equals@8:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals@8:
	mov	al, BYTE PTR tv68[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@DigitInterval@icu_56@@QBECABV12@@Z ENDP		; icu_56::DigitInterval::equals
_TEXT	ENDS
PUBLIC	?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_smallest$ = 8						; size = 4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	xor	eax, eax
	cmp	DWORD PTR _smallest$[ebp], 0
	setge	al
	sub	eax, 1
	and	eax, DWORD PTR _smallest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setLeastSignificantInclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ; icu_56::DigitInterval::setMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_largest$ = 8						; size = 4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z PROC ; icu_56::DigitInterval::setMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	xor	eax, eax
	cmp	DWORD PTR _largest$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _largest$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMostSignificantExclusive@DigitInterval@icu_56@@QAEXH@Z ENDP ; icu_56::DigitInterval::setMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getMostSignificantExclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getMostSignificantExclusive, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMostSignificantExclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getMostSignificantExclusive
_TEXT	ENDS
PUBLIC	?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getIntDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getIntDigitCount, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getIntDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getIntDigitCount
_TEXT	ENDS
PUBLIC	?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ	; icu_56::DigitInterval::getFracDigitCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ PROC	; icu_56::DigitInterval::getFracDigitCount, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -2147483648		; 80000000H
	jne	SHORT $LN3@getFracDig
	mov	DWORD PTR tv68[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@getFracDig
$LN3@getFracDig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	neg	edx
	mov	DWORD PTR tv68[ebp], edx
$LN4@getFracDig:
	mov	eax, DWORD PTR tv68[ebp]
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFracDigitCount@DigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::DigitInterval::getFracDigitCount
_TEXT	ENDS
PUBLIC	?length@DigitInterval@icu_56@@QBEHXZ		; icu_56::DigitInterval::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@DigitInterval@icu_56@@QBEHXZ PROC		; icu_56::DigitInterval::length, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+4]
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@DigitInterval@icu_56@@QBEHXZ ENDP		; icu_56::DigitInterval::length
_TEXT	ENDS
PUBLIC	?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ; icu_56::DigitInterval::getLeastSignificantInclusive
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ PROC ; icu_56::DigitInterval::getLeastSignificantInclusive, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLeastSignificantInclusive@DigitInterval@icu_56@@QBEHXZ ENDP ; icu_56::DigitInterval::getLeastSignificantInclusive
_TEXT	ENDS
PUBLIC	??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4DigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DigitInterval::operator=
_TEXT	ENDS
PUBLIC	??0SignificantDigitInterval@icu_56@@QAE@XZ	; icu_56::SignificantDigitInterval::SignificantDigitInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SignificantDigitInterval@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SignificantDigitInterval@icu_56@@QAE@XZ PROC		; icu_56::SignificantDigitInterval::SignificantDigitInterval, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\significantdigitinterval.h
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SignificantDigitInterval@icu_56@@QAE@XZ ENDP		; icu_56::SignificantDigitInterval::SignificantDigitInterval
_TEXT	ENDS
PUBLIC	?clear@SignificantDigitInterval@icu_56@@QAEXXZ	; icu_56::SignificantDigitInterval::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@SignificantDigitInterval@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@SignificantDigitInterval@icu_56@@QAEXXZ PROC	; icu_56::SignificantDigitInterval::clear, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2147483647		; 7fffffffH
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@SignificantDigitInterval@icu_56@@QAEXXZ ENDP	; icu_56::SignificantDigitInterval::clear
_TEXT	ENDS
PUBLIC	?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ; icu_56::SignificantDigitInterval::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z PROC ; icu_56::SignificantDigitInterval::equals, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@equals@9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@equals@9
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@equals@9
$LN3@equals@9:
	mov	BYTE PTR tv68[ebp], 0
$LN4@equals@9:
	mov	al, BYTE PTR tv68[ebp]
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ENDP ; icu_56::SignificantDigitInterval::equals
_TEXT	ENDS
PUBLIC	?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z PROC	; icu_56::SignificantDigitInterval::setMax, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	cmp	DWORD PTR _count$[ebp], 0
	jg	SHORT $LN3@setMax
	mov	DWORD PTR tv65[ebp], 2147483647		; 7fffffffH
	jmp	SHORT $LN4@setMax
$LN3@setMax:
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
$LN4@setMax:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR [ecx], edx
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMax@SignificantDigitInterval@icu_56@@QAEXH@Z ENDP	; icu_56::SignificantDigitInterval::setMax
_TEXT	ENDS
PUBLIC	?getMax@SignificantDigitInterval@icu_56@@QBEHXZ	; icu_56::SignificantDigitInterval::getMax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMax@SignificantDigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMax@SignificantDigitInterval@icu_56@@QBEHXZ PROC	; icu_56::SignificantDigitInterval::getMax, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMax@SignificantDigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::SignificantDigitInterval::getMax
_TEXT	ENDS
PUBLIC	?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ; icu_56::SignificantDigitInterval::setMin
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z PROC	; icu_56::SignificantDigitInterval::setMin, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	xor	eax, eax
	cmp	DWORD PTR _count$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMin@SignificantDigitInterval@icu_56@@QAEXH@Z ENDP	; icu_56::SignificantDigitInterval::setMin
_TEXT	ENDS
PUBLIC	?getMin@SignificantDigitInterval@icu_56@@QBEHXZ	; icu_56::SignificantDigitInterval::getMin
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMin@SignificantDigitInterval@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMin@SignificantDigitInterval@icu_56@@QBEHXZ PROC	; icu_56::SignificantDigitInterval::getMin, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMin@SignificantDigitInterval@icu_56@@QBEHXZ ENDP	; icu_56::SignificantDigitInterval::getMin
_TEXT	ENDS
PUBLIC	?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ ; icu_56::SignificantDigitInterval::isNoConstraints
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ
_TEXT	SEGMENT
tv67 = -205						; size = 1
_this$ = -8						; size = 4
?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ PROC ; icu_56::SignificantDigitInterval::isNoConstraints, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@isNoConstr
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 2147483647		; 7fffffffH
	jne	SHORT $LN3@isNoConstr
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@isNoConstr
$LN3@isNoConstr:
	mov	BYTE PTR tv67[ebp], 0
$LN4@isNoConstr:
	mov	al, BYTE PTR tv67[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNoConstraints@SignificantDigitInterval@icu_56@@QBECXZ ENDP ; icu_56::SignificantDigitInterval::isNoConstraints
_TEXT	ENDS
PUBLIC	??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::SignificantDigitInterval::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::SignificantDigitInterval::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SignificantDigitInterval@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::SignificantDigitInterval::operator=
_TEXT	ENDS
PUBLIC	?equals@FixedPrecision@icu_56@@QBECABV12@@Z	; icu_56::FixedPrecision::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@FixedPrecision@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv135 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@FixedPrecision@icu_56@@QBECABV12@@Z PROC	; icu_56::FixedPrecision::equals, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\precision.h
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@DigitInterval@icu_56@@QBECABV12@@Z ; icu_56::DigitInterval::equals
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@equals@10
	mov	edx, DWORD PTR _rhs$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?equals@DigitInterval@icu_56@@QBECABV12@@Z ; icu_56::DigitInterval::equals
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@equals@10
	mov	ecx, DWORD PTR _rhs$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?equals@SignificantDigitInterval@icu_56@@QBECABV12@@Z ; icu_56::SignificantDigitInterval::equals
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@equals@10
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??8DigitList@icu_56@@QBECABV01@@Z	; icu_56::DigitList::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@10
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [edx+136]
	mov	ecx, DWORD PTR _rhs$[ebp]
	movsx	edx, BYTE PTR [ecx+136]
	cmp	eax, edx
	jne	SHORT $LN3@equals@10
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	mov	edx, DWORD PTR _rhs$[ebp]
	movsx	eax, BYTE PTR [edx+137]
	cmp	ecx, eax
	jne	SHORT $LN3@equals@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+140]
	cmp	eax, DWORD PTR [edx+140]
	jne	SHORT $LN3@equals@10
	mov	BYTE PTR tv135[ebp], 1
	jmp	SHORT $LN4@equals@10
$LN3@equals@10:
	mov	BYTE PTR tv135[ebp], 0
$LN4@equals@10:
	mov	al, BYTE PTR tv135[ebp]
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@FixedPrecision@icu_56@@QBECABV12@@Z ENDP	; icu_56::FixedPrecision::equals
_TEXT	ENDS
PUBLIC	??1FixedPrecision@icu_56@@QAE@XZ		; icu_56::FixedPrecision::~FixedPrecision
EXTRN	??1DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::~DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1FixedPrecision@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FixedPrecision@icu_56@@QAE@XZ PROC			; icu_56::FixedPrecision::~FixedPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FixedPrecision@icu_56@@QAE@XZ ENDP			; icu_56::FixedPrecision::~FixedPrecision
_TEXT	ENDS
PUBLIC	??0FixedPrecision@icu_56@@QAE@ABV01@@Z		; icu_56::FixedPrecision::FixedPrecision
EXTRN	??0DigitList@icu_56@@QAE@ABV01@@Z:PROC		; icu_56::DigitList::DigitList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FixedPrecision@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0FixedPrecision@icu_56@@QAE@ABV01@@Z PROC		; icu_56::FixedPrecision::FixedPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR [eax+140], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0FixedPrecision@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::FixedPrecision::FixedPrecision
_TEXT	ENDS
PUBLIC	??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::FixedPrecision::operator=
EXTRN	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z:PROC	; icu_56::DigitList::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::FixedPrecision::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+136]
	mov	BYTE PTR [eax+136], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+137]
	mov	BYTE PTR [eax+137], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR [eax+140], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::FixedPrecision::operator=
_TEXT	ENDS
PUBLIC	?equals@ScientificPrecision@icu_56@@QBECABV12@@Z ; icu_56::ScientificPrecision::equals
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equals@ScientificPrecision@icu_56@@QBECABV12@@Z
_TEXT	SEGMENT
tv72 = -205						; size = 1
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
?equals@ScientificPrecision@icu_56@@QBECABV12@@Z PROC	; icu_56::ScientificPrecision::equals, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 271
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equals@FixedPrecision@icu_56@@QBECABV12@@Z ; icu_56::FixedPrecision::equals
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@equals@11
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	cmp	ecx, DWORD PTR [eax+144]
	jne	SHORT $LN3@equals@11
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN4@equals@11
$LN3@equals@11:
	mov	BYTE PTR tv72[ebp], 0
$LN4@equals@11:
	mov	al, BYTE PTR tv72[ebp]
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?equals@ScientificPrecision@icu_56@@QBECABV12@@Z ENDP	; icu_56::ScientificPrecision::equals
_TEXT	ENDS
PUBLIC	??1ScientificPrecision@icu_56@@QAE@XZ		; icu_56::ScientificPrecision::~ScientificPrecision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ScientificPrecision@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ScientificPrecision@icu_56@@QAE@XZ PROC		; icu_56::ScientificPrecision::~ScientificPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FixedPrecision@icu_56@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScientificPrecision@icu_56@@QAE@XZ ENDP		; icu_56::ScientificPrecision::~ScientificPrecision
_TEXT	ENDS
PUBLIC	??0ScientificPrecision@icu_56@@QAE@ABV01@@Z	; icu_56::ScientificPrecision::ScientificPrecision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ScientificPrecision@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0ScientificPrecision@icu_56@@QAE@ABV01@@Z PROC	; icu_56::ScientificPrecision::ScientificPrecision, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FixedPrecision@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR [eax+144], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScientificPrecision@icu_56@@QAE@ABV01@@Z ENDP	; icu_56::ScientificPrecision::ScientificPrecision
_TEXT	ENDS
PUBLIC	??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::ScientificPrecision::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::ScientificPrecision::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4FixedPrecision@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR [eax+144], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScientificPrecision@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::ScientificPrecision::operator=
_TEXT	ENDS
PUBLIC	??0VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::VisibleDigits
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\i18n\visibledigits.h
xdata$x	SEGMENT
__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigits@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::VisibleDigits, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0DigitInterval@icu_56@@QAE@XZ		; icu_56::DigitInterval::DigitInterval
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [eax+88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+96], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigits@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0VisibleDigits@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigits@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::VisibleDigits
PUBLIC	?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ; icu_56::VisibleDigits::getInterval
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ PROC ; icu_56::VisibleDigits::getInterval, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInterval@VisibleDigits@icu_56@@QBEABVDigitInterval@2@XZ ENDP ; icu_56::VisibleDigits::getInterval
_TEXT	ENDS
PUBLIC	??1VisibleDigits@icu_56@@QAE@XZ			; icu_56::VisibleDigits::~VisibleDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VisibleDigits@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VisibleDigits@icu_56@@QAE@XZ PROC			; icu_56::VisibleDigits::~VisibleDigits, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1VisibleDigits@icu_56@@QAE@XZ ENDP			; icu_56::VisibleDigits::~VisibleDigits
_TEXT	ENDS
PUBLIC	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0VisibleDigits@icu_56@@QAE@XZ		; icu_56::VisibleDigits::VisibleDigits
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
PUBLIC	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getMantissa, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getMantissa
_TEXT	ENDS
PUBLIC	?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ PROC ; icu_56::VisibleDigitsWithExponent::getExponent, COMDAT
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+208]
	test	ecx, ecx
	je	SHORT $LN3@getExponen
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@getExponen
$LN3@getExponen:
	mov	DWORD PTR tv68[ebp], 0
$LN4@getExponen:
	mov	eax, DWORD PTR tv68[ebp]
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getExponent@VisibleDigitsWithExponent@icu_56@@QBEPBVVisibleDigits@2@XZ ENDP ; icu_56::VisibleDigitsWithExponent::getExponent
_TEXT	ENDS
PUBLIC	?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ	; icu_56::VisibleDigitsWithExponent::clear
EXTRN	?clear@VisibleDigits@icu_56@@AAEXXZ:PROC	; icu_56::VisibleDigits::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ PROC	; icu_56::VisibleDigitsWithExponent::clear, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?clear@VisibleDigits@icu_56@@AAEXXZ	; icu_56::VisibleDigits::clear
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+208], 0
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@VisibleDigitsWithExponent@icu_56@@QAEXXZ ENDP	; icu_56::VisibleDigitsWithExponent::clear
_TEXT	ENDS
PUBLIC	?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isNegative
EXTRN	?isNegative@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNegative
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isNegative, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNegative@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isNegative
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNegative@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isNegative
_TEXT	ENDS
PUBLIC	?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ	; icu_56::VisibleDigitsWithExponent::isNaN
EXTRN	?isNaN@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isNaN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC	; icu_56::VisibleDigitsWithExponent::isNaN, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isNaN@VisibleDigits@icu_56@@QBECXZ	; icu_56::VisibleDigits::isNaN
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isNaN@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP	; icu_56::VisibleDigitsWithExponent::isNaN
_TEXT	ENDS
PUBLIC	?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ; icu_56::VisibleDigitsWithExponent::isInfinite
EXTRN	?isInfinite@VisibleDigits@icu_56@@QBECXZ:PROC	; icu_56::VisibleDigits::isInfinite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ PROC ; icu_56::VisibleDigitsWithExponent::isInfinite, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInfinite@VisibleDigits@icu_56@@QBECXZ ; icu_56::VisibleDigits::isInfinite
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isInfinite@VisibleDigitsWithExponent@icu_56@@QBECXZ ENDP ; icu_56::VisibleDigitsWithExponent::isInfinite
_TEXT	ENDS
PUBLIC	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0
__ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ PROC	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VisibleDigits@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisibleDigits@icu_56@@QAE@XZ
__ehhandler$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1VisibleDigitsWithExponent@icu_56@@QAE@XZ ENDP	; icu_56::VisibleDigitsWithExponent::~VisibleDigitsWithExponent
PUBLIC	?getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ	; icu_56::DecimalFormat::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ PROC	; icu_56::DecimalFormat::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ ENDP	; icu_56::DecimalFormat::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@DecimalFormat@icu_56@@UBEPAXXZ ; icu_56::DecimalFormat::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@DecimalFormat@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@DecimalFormat@icu_56@@UBEPAXXZ PROC	; icu_56::DecimalFormat::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@DecimalFormat@icu_56@@SAPAXXZ ; icu_56::DecimalFormat::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@DecimalFormat@icu_56@@UBEPAXXZ ENDP	; icu_56::DecimalFormat::getDynamicClassID
_TEXT	ENDS
PUBLIC	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
PUBLIC	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
PUBLIC	?init@DecimalFormat@icu_56@@AAEXXZ		; icu_56::DecimalFormat::init
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
PUBLIC	??_7DecimalFormat@icu_56@@6B@			; icu_56::DecimalFormat::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z	; icu_56::DecimalFormat::DecimalFormat
PUBLIC	??_R4DecimalFormat@icu_56@@6B@			; icu_56::DecimalFormat::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDecimalFormat@icu_56@@@8		; icu_56::DecimalFormat `RTTI Type Descriptor'
PUBLIC	??_R3DecimalFormat@icu_56@@8			; icu_56::DecimalFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DecimalFormat@icu_56@@8			; icu_56::DecimalFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DecimalFormat@icu_56@@8		; icu_56::DecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@NumberFormat@icu_56@@8		; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNumberFormat@icu_56@@@8			; icu_56::NumberFormat `RTTI Type Descriptor'
PUBLIC	??_R3NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NumberFormat@icu_56@@8			; icu_56::NumberFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Format@icu_56@@8			; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFormat@icu_56@@@8			; icu_56::Format `RTTI Type Descriptor'
PUBLIC	??_R3Format@icu_56@@8				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Format@icu_56@@8				; icu_56::Format::`RTTI Base Class Array'
PUBLIC	??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z	; icu_56::DecimalFormat::operator==
PUBLIC	?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ	; icu_56::DecimalFormat::clone
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ; icu_56::DecimalFormat::format
PUBLIC	?parse@DecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ; icu_56::DecimalFormat::parse
PUBLIC	?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z ; icu_56::DecimalFormat::parseCurrency
PUBLIC	?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setParseIntegerOnly
PUBLIC	?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z	; icu_56::DecimalFormat::setGroupingUsed
PUBLIC	?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setMaximumIntegerDigits
PUBLIC	?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setMinimumIntegerDigits
PUBLIC	?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setMaximumFractionDigits
PUBLIC	?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setMinimumFractionDigits
PUBLIC	?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setCurrency
PUBLIC	?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setContext
PUBLIC	?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::getEffectiveCurrency
PUBLIC	?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setAttribute
PUBLIC	?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::getAttribute
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::format
PUBLIC	?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ ; icu_56::DecimalFormat::getDecimalFormatSymbols
PUBLIC	?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::adoptDecimalFormatSymbols
PUBLIC	?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::setDecimalFormatSymbols
PUBLIC	?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ ; icu_56::DecimalFormat::getCurrencyPluralInfo
PUBLIC	?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z ; icu_56::DecimalFormat::adoptCurrencyPluralInfo
PUBLIC	?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z ; icu_56::DecimalFormat::setCurrencyPluralInfo
PUBLIC	?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormat::setPositivePrefix
PUBLIC	?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormat::setNegativePrefix
PUBLIC	?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormat::setPositiveSuffix
PUBLIC	?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormat::setNegativeSuffix
PUBLIC	?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z	; icu_56::DecimalFormat::setMultiplier
PUBLIC	?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ ; icu_56::DecimalFormat::getRoundingIncrement
PUBLIC	?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z ; icu_56::DecimalFormat::setRoundingIncrement
PUBLIC	?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ ; icu_56::DecimalFormat::getRoundingMode
PUBLIC	?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z ; icu_56::DecimalFormat::setRoundingMode
PUBLIC	?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ	; icu_56::DecimalFormat::getFormatWidth
PUBLIC	?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z	; icu_56::DecimalFormat::setFormatWidth
PUBLIC	?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ ; icu_56::DecimalFormat::getPadCharacterString
PUBLIC	?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormat::setPadCharacter
PUBLIC	?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ ; icu_56::DecimalFormat::getPadPosition
PUBLIC	?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z ; icu_56::DecimalFormat::setPadPosition
PUBLIC	?isScientificNotation@DecimalFormat@icu_56@@UBECXZ ; icu_56::DecimalFormat::isScientificNotation
PUBLIC	?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setScientificNotation
PUBLIC	?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ ; icu_56::DecimalFormat::getMinimumExponentDigits
PUBLIC	?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setMinimumExponentDigits
PUBLIC	?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ ; icu_56::DecimalFormat::isExponentSignAlwaysShown
PUBLIC	?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setExponentSignAlwaysShown
PUBLIC	?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z	; icu_56::DecimalFormat::setGroupingSize
PUBLIC	?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setSecondaryGroupingSize
PUBLIC	?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z ; icu_56::DecimalFormat::setMinimumGroupingDigits
PUBLIC	?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setDecimalSeparatorAlwaysShown
PUBLIC	?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z ; icu_56::DecimalFormat::setDecimalPatternMatchRequired
PUBLIC	?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::toPattern
PUBLIC	?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::toLocalizedPattern
PUBLIC	?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::applyPattern
PUBLIC	?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::applyPattern
PUBLIC	?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::applyLocalizedPattern
PUBLIC	?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::applyLocalizedPattern
PUBLIC	?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z	; icu_56::DecimalFormat::setCurrency
EXTRN	??1NumberFormat@icu_56@@UAE@XZ:PROC		; icu_56::NumberFormat::~NumberFormat
EXTRN	??0NumberFormat@icu_56@@IAE@XZ:PROC		; icu_56::NumberFormat::NumberFormat
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::format
EXTRN	?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z:PROC ; icu_56::NumberFormat::parseObject
EXTRN	?parse@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::parse
EXTRN	?setLenient@NumberFormat@icu_56@@UAEXC@Z:PROC	; icu_56::NumberFormat::setLenient
EXTRN	?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::getContext
;	COMDAT ??_R2Format@icu_56@@8
rdata$r	SEGMENT
??_R2Format@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Format@icu_56@@8 ; icu_56::Format::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Format@icu_56@@8
rdata$r	SEGMENT
??_R3Format@icu_56@@8 DD 00H				; icu_56::Format::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::Format `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Format@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Format@icu_56@@8 DD FLAT:??_R0?AVFormat@icu_56@@@8 ; icu_56::Format::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Format@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R2NumberFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8 ; icu_56::NumberFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R3NumberFormat@icu_56@@8 DD 00H			; icu_56::NumberFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNumberFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVNumberFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::NumberFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNumberFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@NumberFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NumberFormat@icu_56@@8 DD FLAT:??_R0?AVNumberFormat@icu_56@@@8 ; icu_56::NumberFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NumberFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DecimalFormat@icu_56@@8 DD FLAT:??_R0?AVDecimalFormat@icu_56@@@8 ; icu_56::DecimalFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R2DecimalFormat@icu_56@@8 DD FLAT:??_R1A@?0A@EA@DecimalFormat@icu_56@@8 ; icu_56::DecimalFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NumberFormat@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@Format@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3DecimalFormat@icu_56@@8
rdata$r	SEGMENT
??_R3DecimalFormat@icu_56@@8 DD 00H			; icu_56::DecimalFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2DecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDecimalFormat@icu_56@@@8
_DATA	SEGMENT
??_R0?AVDecimalFormat@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::DecimalFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDecimalFormat@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DecimalFormat@icu_56@@6B@
rdata$r	SEGMENT
??_R4DecimalFormat@icu_56@@6B@ DD 00H			; icu_56::DecimalFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDecimalFormat@icu_56@@@8
	DD	FLAT:??_R3DecimalFormat@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7DecimalFormat@icu_56@@6B@
CONST	SEGMENT
??_7DecimalFormat@icu_56@@6B@ DD FLAT:??_R4DecimalFormat@icu_56@@6B@ ; icu_56::DecimalFormat::`vftable'
	DD	FLAT:??_EDecimalFormat@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@DecimalFormat@icu_56@@UBEPAXXZ
	DD	FLAT:??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z
	DD	FLAT:?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@NumberFormat@icu_56@@UBEAAVUnicodeString@2@ABVFormattable@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parseObject@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
	DD	FLAT:?parse@NumberFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAW4UErrorCode@@@Z
	DD	FLAT:?parse@DecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
	DD	FLAT:?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	DD	FLAT:?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setLenient@NumberFormat@icu_56@@UAEXC@Z
	DD	FLAT:?isLenient@NumberFormat@icu_56@@UBECXZ
	DD	FLAT:?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z
	DD	FLAT:?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z
	DD	FLAT:?getContext@NumberFormat@icu_56@@UBE?AW4UDisplayContext@@W4UDisplayContextType@@AAW4UErrorCode@@@Z
	DD	FLAT:?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z
	DD	FLAT:?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z
	DD	FLAT:?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
	DD	FLAT:?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
	DD	FLAT:?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ
	DD	FLAT:?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z
	DD	FLAT:?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	DD	FLAT:?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ
	DD	FLAT:?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z
	DD	FLAT:?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z
	DD	FLAT:?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ
	DD	FLAT:?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z
	DD	FLAT:?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ
	DD	FLAT:?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z
	DD	FLAT:?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ
	DD	FLAT:?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ
	DD	FLAT:?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
	DD	FLAT:?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ
	DD	FLAT:?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z
	DD	FLAT:?isScientificNotation@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ
	DD	FLAT:?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z
	DD	FLAT:?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z
	DD	FLAT:?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
	DD	FLAT:?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
	DD	FLAT:?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	FLAT:?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	FLAT:?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	FLAT:?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z PROC	; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 251
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 253
	push	0
	push	0
	lea	eax, DWORD PTR _parseError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 254
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DecimalFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@DecimalFor:
	DD	1
	DD	$LN7@DecimalFor
$LN7@DecimalFor:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN5@DecimalFor
$LN5@DecimalFor:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@AAW4UErrorCode@@@Z ENDP	; icu_56::DecimalFormat::DecimalFormat
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 262
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 264
	push	0
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 265
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DecimalFor@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@DecimalFor@2:
	DD	1
	DD	$LN7@DecimalFor@2
$LN7@DecimalFor@2:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN5@DecimalFor@2
$LN5@DecimalFor@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::DecimalFormat
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_symbolsToAdopt$ = 12					; size = 4
_status$ = 16						; size = 4
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 277
	cmp	DWORD PTR _symbolsToAdopt$[ebp], 0
	jne	SHORT $LN1@DecimalFor@3
; Line 278
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@DecimalFor@3:
; Line 279
	mov	eax, DWORD PTR _symbolsToAdopt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseError$[ebp]
	push	edx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 280
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DecimalFor@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN9@DecimalFor@3:
	DD	1
	DD	$LN8@DecimalFor@3
$LN8@DecimalFor@3:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN6@DecimalFor@3
$LN6@DecimalFor@3:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::DecimalFormat
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_symbolsToAdopt$ = 12					; size = 4
_parseErr$ = 16						; size = 4
_status$ = 20						; size = 4
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 285
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 286
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 287
	cmp	DWORD PTR _symbolsToAdopt$[ebp], 0
	jne	SHORT $LN1@DecimalFor@4
; Line 288
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@DecimalFor@4:
; Line 289
	mov	eax, DWORD PTR _symbolsToAdopt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parseErr$[ebp]
	push	edx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 290
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::DecimalFormat
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$2
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv95 = -328						; size = 4
$T54054 = -320						; size = 4
$T54055 = -308						; size = 4
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_symbols$ = 12						; size = 4
_status$ = 16						; size = 4
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 302
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54055[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T54055[ebp], 0
	je	SHORT $LN3@DecimalFor@5
	mov	eax, DWORD PTR _symbols$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54055[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN4@DecimalFor@5
$LN3@DecimalFor@5:
	mov	DWORD PTR tv95[ebp], 0
$LN4@DecimalFor@5:
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T54054[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T54054[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 303
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DecimalFor@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN11@DecimalFor@5:
	DD	1
	DD	$LN10@DecimalFor@5
$LN10@DecimalFor@5:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN8@DecimalFor@5
$LN8@DecimalFor@5:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	mov	eax, DWORD PTR $T54055[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@ABVDecimalFormatSymbols@1@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::DecimalFormat
PUBLIC	__$ArrayPad$
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::DecimalFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_parseError$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_symbolsToAdopt$ = 12					; size = 4
_style$ = 16						; size = 4
_status$ = 20						; size = 4
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 313
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@XZ		; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 314
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 315
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _style$[ebp]
	mov	DWORD PTR [eax+368], ecx
; Line 317
	mov	eax, DWORD PTR _symbolsToAdopt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseError$[ebp]
	push	edx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormat::construct
; Line 318
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DecimalFor@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN8@DecimalFor@6:
	DD	1
	DD	$LN7@DecimalFor@6
$LN7@DecimalFor@6:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN5@DecimalFor@6
$LN5@DecimalFor@6:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@W4UNumberFormatStyle@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::DecimalFormat
PUBLIC	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@DecimalFormat@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@DecimalFormat@icu_56@@AAEXXZ PROC			; icu_56::DecimalFormat::init, COMDAT
; _this$ = ecx
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 328
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
; Line 329
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 1
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+376], 0
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+380], 2
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 0
; Line 337
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
; Line 338
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@DecimalFormat@icu_56@@AAEXXZ ENDP			; icu_56::DecimalFormat::init
_TEXT	ENDS
PUBLIC	?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setupCurrencyAffixPatterns
PUBLIC	??_C@_1M@LLEPKCPL@?$AAo?$AAt?$AAh?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	?orphan@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEPAVDecimalFormatSymbols@2@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::orphan
PUBLIC	?getAlias@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBEPAVDecimalFormatSymbols@2@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::getAlias
PUBLIC	??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
PUBLIC	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
PUBLIC	??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
PUBLIC	?adoptInstead@?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::adoptInstead
PUBLIC	?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::isNull
PUBLIC	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
PUBLIC	??0?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::LocalPointer<icu_56::DecimalFormatSymbols>
PUBLIC	__$ArrayPad$
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::applyPatternFavorCurrencyPrecision
EXTRN	?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z:PROC ; icu_56::CurrencyPluralInfo::getCurrencyPluralPattern
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_??1Locale@icu_56@@UAE@XZ:PROC
EXTRN	??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
EXTRN	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::DecimalFormatImpl
EXTRN	_ures_close_56:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:PROC
EXTRN	_strcmp:PROC
EXTRN	_ures_getStringByKeyWithFallback_56:PROC
EXTRN	?getName@NumberingSystem@icu_56@@QBEPBDXZ:PROC	; icu_56::NumberingSystem::getName
EXTRN	_ures_getByKeyWithFallback_56:PROC
EXTRN	_ures_open_56:PROC
EXTRN	__imp_?getName@Locale@icu_56@@QBEPBDXZ:PROC
EXTRN	?createInstance@NumberingSystem@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberingSystem::createInstance
EXTRN	?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatStaticSets::getStaticSets
EXTRN	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
EXTRN	__imp_?getDefault@Locale@icu_56@@SAABV12@XZ:PROC
;	COMDAT ??_C@_1M@LLEPKCPL@?$AAo?$AAt?$AAh?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1M@LLEPKCPL@?$AAo?$AAt?$AAh?$AAe?$AAr?$AA?$AA@ DB 'o', 00H, 't', 00H
	DB	'h', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$9
	DD	0aH
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$10
	DD	05H
	DD	FLAT:__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv341 = -1076						; size = 4
tv299 = -1076						; size = 4
tv381 = -1072						; size = 4
tv375 = -1072						; size = 4
tv368 = -1072						; size = 4
tv406 = -1068						; size = 4
tv400 = -1068						; size = 4
tv396 = -1068						; size = 4
tv258 = -1068						; size = 4
tv91 = -1068						; size = 4
$T44241 = -1060						; size = 204
$T44248 = -848						; size = 64
$T44254 = -776						; size = 204
$T54089 = -564						; size = 4
$T54090 = -552						; size = 4
$T54093 = -540						; size = 4
$T54094 = -528						; size = 4
$T54097 = -516						; size = 4
$T54098 = -504						; size = 4
$T54101 = -492						; size = 4
$T54102 = -480						; size = 4
$T54112 = -468						; size = 4
_currencyPluralPatternForOther$ = -264			; size = 64
_patternUsed$ = -192					; size = 4
_resStr$44227 = -180					; size = 4
_resource$44226 = -168					; size = 4
_top$44225 = -156					; size = 4
_len$44224 = -144					; size = 4
_ns$44222 = -132					; size = 4
_nsStatus$44133 = -120					; size = 4
_str$ = -108						; size = 64
_adoptedSymbols$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
_parseErr$ = 12						; size = 4
_pattern$ = 16						; size = 4
_symbolsToAdopt$ = 20					; size = 4
?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z PROC ; icu_56::DecimalFormat::construct, COMDAT
; _this$ = ecx
; Line 350
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1064				; 00000428H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1076]
	mov	ecx, 266				; 0000010aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T54112[ebp], 0
; Line 351
	mov	eax, DWORD PTR _symbolsToAdopt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??0?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::LocalPointer<icu_56::DecimalFormatSymbols>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 352
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN19@construct
; Line 353
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN19@construct:
; Line 355
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::isNull
	movsx	eax, al
	test	eax, eax
	je	$LN18@construct
; Line 358
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54090[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T54090[ebp], 0
	je	SHORT $LN22@construct
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR $T54090[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN23@construct
$LN22@construct:
	mov	DWORD PTR tv91[ebp], 0
$LN23@construct:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T54089[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T54089[ebp]
	push	edx
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	?adoptInstead@?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::adoptInstead
; Line 359
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::isNull
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN17@construct
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@construct
; Line 360
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN17@construct:
; Line 362
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@construct
; Line 363
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN18@construct:
; Line 366
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatStaticSets::getStaticSets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+384], eax
; Line 367
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@construct
; Line 368
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN15@construct:
; Line 371
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 374
	cmp	DWORD PTR _pattern$[ebp], 0
	jne	$LN14@construct
; Line 376
	mov	DWORD PTR _nsStatus$44133[ebp], 0
; Line 378
	lea	eax, DWORD PTR _nsStatus$44133[ebp]
	push	eax
	call	?createInstance@NumberingSystem@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::NumberingSystem::createInstance
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _ns$44222[ebp]
	call	??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 379
	mov	eax, DWORD PTR _nsStatus$44133[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@construct
; Line 380
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _nsStatus$44133[ebp]
	mov	DWORD PTR [eax], ecx
; Line 381
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ns$44222[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN13@construct:
; Line 384
	mov	DWORD PTR _len$44224[ebp], 0
; Line 385
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp_?getDefault@Locale@icu_56@@SAABV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _top$44225[ebp], eax
; Line 387
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _fgNumberElements
	mov	ecx, DWORD PTR _top$44225[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 388
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$44226[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ns$44222[ebp]
	call	??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
	mov	ecx, eax
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 389
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$44226[ebp]
	push	ecx
	push	OFFSET _fgPatterns
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 390
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$44224[ebp]
	push	ecx
	push	OFFSET _fgDecimalFormat
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resStr$44227[ebp], eax
; Line 391
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	$LN12@construct
	lea	ecx, DWORD PTR _ns$44222[ebp]
	call	??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
	mov	ecx, eax
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	push	OFFSET _fgLatn
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN12@construct
; Line 392
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 393
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$44226[ebp]
	push	ecx
	push	OFFSET _fgNumberElements
	mov	edx, DWORD PTR _top$44225[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 394
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$44226[ebp]
	push	ecx
	push	OFFSET _fgLatn
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 395
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$44226[ebp]
	push	ecx
	push	OFFSET _fgPatterns
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$44226[ebp], eax
; Line 396
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$44224[ebp]
	push	ecx
	push	OFFSET _fgDecimalFormat
	mov	edx, DWORD PTR _resource$44226[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resStr$44227[ebp], eax
$LN12@construct:
; Line 398
	mov	esi, esp
	mov	eax, DWORD PTR _len$44224[ebp]
	push	eax
	mov	ecx, DWORD PTR _resStr$44227[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 399
	lea	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR _pattern$[ebp], eax
; Line 400
	mov	eax, DWORD PTR _resource$44226[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 401
	mov	eax, DWORD PTR _top$44225[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 402
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ns$44222[ebp]
	call	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
$LN14@construct:
; Line 404
	mov	esi, esp
	push	2664					; 00000a68H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54094[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T54094[ebp], 0
	je	SHORT $LN24@construct
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseErr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	?getAlias@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBEPAVDecimalFormatSymbols@2@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::getAlias
	push	eax
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54094[ebp]
	call	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABVUnicodeString@1@PAVDecimalFormatSymbols@1@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::DecimalFormatImpl
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN25@construct
$LN24@construct:
	mov	DWORD PTR tv258[ebp], 0
$LN25@construct:
	mov	ecx, DWORD PTR tv258[ebp]
	mov	DWORD PTR $T54093[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T54093[ebp]
	mov	DWORD PTR [edx+360], eax
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	je	SHORT $LN11@construct
; Line 406
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	?orphan@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEPAVDecimalFormatSymbols@2@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::orphan
	jmp	SHORT $LN10@construct
$LN11@construct:
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@construct
; Line 408
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN10@construct:
; Line 410
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@construct
; Line 411
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN8@construct:
; Line 414
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@construct
; Line 416
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN7@construct:
; Line 420
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 422
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 11			; 0000000bH
	jne	$LN6@construct
; Line 423
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54098[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T54098[ebp], 0
	je	SHORT $LN26@construct
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44241[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv396[ebp], eax
	mov	ecx, DWORD PTR tv396[ebp]
	mov	DWORD PTR tv368[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR $T54112[ebp]
	or	edx, 1
	mov	DWORD PTR $T54112[ebp], edx
	mov	eax, DWORD PTR tv368[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54098[ebp]
	call	??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
	mov	DWORD PTR tv299[ebp], eax
	jmp	SHORT $LN27@construct
$LN26@construct:
	mov	DWORD PTR tv299[ebp], 0
$LN27@construct:
	mov	ecx, DWORD PTR tv299[ebp]
	mov	DWORD PTR $T54097[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T54097[ebp]
	mov	DWORD PTR [edx+376], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T54112[ebp]
	and	ecx, 1
	je	SHORT $LN39@construct
	and	DWORD PTR $T54112[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T44241[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@construct:
; Line 424
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@construct
; Line 425
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	$LN20@construct
$LN5@construct:
; Line 435
	lea	eax, DWORD PTR _currencyPluralPatternForOther$[ebp]
	push	eax
	mov	esi, esp
	push	5
	push	OFFSET ??_C@_1M@LLEPKCPL@?$AAo?$AAt?$AAh?$AAe?$AAr?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T44248[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv400[ebp], eax
	mov	ecx, DWORD PTR tv400[ebp]
	mov	DWORD PTR tv375[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv375[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	call	?getCurrencyPluralPattern@CurrencyPluralInfo@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@@Z ; icu_56::CurrencyPluralInfo::getCurrencyPluralPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T44248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 438
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?applyPatternFavorCurrencyPrecision@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPatternFavorCurrencyPrecision
; Line 439
	lea	eax, DWORD PTR _currencyPluralPatternForOther$[ebp]
	mov	DWORD PTR _patternUsed$[ebp], eax
; Line 441
	jmp	SHORT $LN4@construct
$LN6@construct:
; Line 442
	mov	eax, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR _patternUsed$[ebp], eax
$LN4@construct:
; Line 445
	mov	esi, esp
	push	164					; 000000a4H
	mov	ecx, DWORD PTR _patternUsed$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	$LN3@construct
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+376], 0
	jne	$LN2@construct
; Line 449
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54102[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T54102[ebp], 0
	je	SHORT $LN28@construct
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44254[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv406[ebp], eax
	mov	ecx, DWORD PTR tv406[ebp]
	mov	DWORD PTR tv381[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR $T54112[ebp]
	or	edx, 2
	mov	DWORD PTR $T54112[ebp], edx
	mov	eax, DWORD PTR tv381[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54102[ebp]
	call	??0CurrencyPluralInfo@icu_56@@QAE@ABVLocale@1@AAW4UErrorCode@@@Z ; icu_56::CurrencyPluralInfo::CurrencyPluralInfo
	mov	DWORD PTR tv341[ebp], eax
	jmp	SHORT $LN29@construct
$LN28@construct:
	mov	DWORD PTR tv341[ebp], 0
$LN29@construct:
	mov	ecx, DWORD PTR tv341[ebp]
	mov	DWORD PTR $T54101[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T54101[ebp]
	mov	DWORD PTR [edx+376], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T54112[ebp]
	and	ecx, 2
	je	SHORT $LN44@construct
	and	DWORD PTR $T54112[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T44254[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN44@construct:
; Line 450
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@construct
; Line 451
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
	jmp	SHORT $LN20@construct
$LN2@construct:
; Line 455
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setupCurrencyAffixPatterns
$LN3@construct:
; Line 457
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	call	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
$LN20@construct:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN53@construct
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1076				; 00000434H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN53@construct:
	DD	6
	DD	$LN52@construct
$LN52@construct:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN45@construct
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN46@construct
	DD	-120					; ffffff88H
	DD	4
	DD	$LN47@construct
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN48@construct
	DD	-144					; ffffff70H
	DD	4
	DD	$LN49@construct
	DD	-264					; fffffef8H
	DD	64					; 00000040H
	DD	$LN50@construct
$LN50@construct:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN49@construct:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN48@construct:
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN47@construct:
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN46@construct:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN45@construct:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$0:
	lea	ecx, DWORD PTR _adoptedSymbols$[ebp]
	jmp	??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T54090[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$3:
	lea	ecx, DWORD PTR _ns$44222[ebp]
	jmp	??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$4:
	mov	esi, esp
	mov	eax, DWORD PTR $T54094[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPluralPatternForOther$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$6:
	mov	esi, esp
	mov	eax, DWORD PTR $T54098[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$7:
	mov	eax, DWORD PTR $T54112[ebp]
	and	eax, 1
	je	$LN38@construct
	and	DWORD PTR $T54112[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T44241[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN38@construct:
	ret	0
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44248[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$9:
	mov	esi, esp
	mov	eax, DWORD PTR $T54102[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z$10:
	mov	eax, DWORD PTR $T54112[ebp]
	and	eax, 2
	je	$LN43@construct
	and	DWORD PTR $T54112[ebp], -3		; fffffffdH
	mov	esi, esp
	lea	ecx, DWORD PTR $T44254[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN43@construct:
	ret	0
__ehhandler$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1080]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@AAUUParseError@@PBVUnicodeString@2@PAVDecimalFormatSymbols@2@@Z ENDP ; icu_56::DecimalFormat::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@ ; `string'
PUBLIC	??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency
PUBLIC	?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initHashForAffixPattern
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z:PROC
EXTRN	__imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberingSystem::createInstance
;	COMDAT ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
CONST	SEGMENT
??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@ DB 'd', 00H
	DB	'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$15
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv350 = -1840						; size = 4
tv347 = -1840						; size = 4
tv341 = -1840						; size = 4
tv338 = -1840						; size = 4
tv374 = -1836						; size = 4
tv368 = -1836						; size = 4
tv361 = -1836						; size = 4
tv357 = -1836						; size = 4
tv332 = -1836						; size = 4
tv236 = -1836						; size = 4
tv194 = -1836						; size = 4
$T44285 = -1828						; size = 204
$T44290 = -1616						; size = 204
$T44302 = -1404						; size = 64
$T44309 = -1332						; size = 64
$T54140 = -1260						; size = 4
$T54141 = -1248						; size = 4
$T54144 = -1236						; size = 4
$T54145 = -1224						; size = 4
$T54148 = -1212						; size = 4
$T54149 = -1200						; size = 4
_affixPtn$44329 = -996					; size = 4
_posSuffix$44328 = -984					; size = 64
_posPrefix$44327 = -912					; size = 64
_negSuffix$44326 = -840					; size = 64
_negPrefix$44325 = -768					; size = 64
_key$44322 = -696					; size = 4
_keyTok$44321 = -684					; size = 4
_value$44319 = -672					; size = 4
_valueTok$44318 = -660					; size = 4
_pluralPatternSet$ = -648				; size = 56
_pos$ = -584						; size = 4
_element$ = -572					; size = 4
_pluralPtn$ = -560					; size = 4
_affixPtn$44303 = -548					; size = 4
_posSuffix$44301 = -536					; size = 64
_posPrefix$44300 = -464					; size = 64
_negSuffix$44299 = -392					; size = 64
_negPrefix$44298 = -320					; size = 64
_patResStr$ = -248					; size = 4
_patLen$ = -236						; size = 4
_numElements$ = -224					; size = 4
_resource$ = -212					; size = 4
_error$ = -200						; size = 4
_currencyPattern$ = -188				; size = 64
_ns$ = -116						; size = 4
_parseErr$ = -104					; size = 72
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::setupCurrencyAffixPatterns, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1828				; 00000724H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1840]
	mov	ecx, 457				; 000001c9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 490
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@setupCurre
; Line 491
	jmp	$LN9@setupCurre
$LN8@setupCurre:
; Line 494
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initHashForAffixPattern
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+372], eax
; Line 495
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@setupCurre
; Line 496
	jmp	$LN9@setupCurre
$LN7@setupCurre:
; Line 499
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44285[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv357[ebp], eax
	mov	ecx, DWORD PTR tv357[ebp]
	mov	DWORD PTR tv338[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv338[ebp]
	push	edx
	call	?createInstance@NumberingSystem@icu_56@@SAPAV12@ABVLocale@2@AAW4UErrorCode@@@Z ; icu_56::NumberingSystem::createInstance
	add	esp, 8
	mov	DWORD PTR _ns$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T44285[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 500
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@setupCurre
; Line 501
	jmp	$LN9@setupCurre
$LN6@setupCurre:
; Line 507
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 508
	mov	DWORD PTR _error$[ebp], 0
; Line 510
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44290[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+696]
	call	?getLocale@DecimalFormatSymbols@icu_56@@QBE?AVLocale@2@XZ ; icu_56::DecimalFormatSymbols::getLocale
	mov	DWORD PTR tv361[ebp], eax
	mov	ecx, DWORD PTR tv361[ebp]
	mov	DWORD PTR tv341[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv341[ebp]
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _resource$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T44290[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 511
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	OFFSET _fgNumberElements
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _numElements$[ebp], eax
; Line 512
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ns$[ebp]
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	mov	edx, DWORD PTR _numElements$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$[ebp], eax
; Line 513
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	push	OFFSET _fgPatterns
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$[ebp], eax
; Line 514
	mov	DWORD PTR _patLen$[ebp], 0
; Line 515
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLen$[ebp]
	push	ecx
	push	OFFSET _fgCurrencyFormat
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _patResStr$[ebp], eax
; Line 516
	cmp	DWORD PTR _error$[ebp], 2
	jne	$LN5@setupCurre
	push	OFFSET _fgLatn
	mov	ecx, DWORD PTR _ns$[ebp]
	call	?getName@NumberingSystem@icu_56@@QBEPBDXZ ; icu_56::NumberingSystem::getName
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN5@setupCurre
; Line 517
	mov	DWORD PTR _error$[ebp], 0
; Line 518
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	push	OFFSET _fgLatn
	mov	edx, DWORD PTR _numElements$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$[ebp], eax
; Line 519
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	push	OFFSET _fgPatterns
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _resource$[ebp], eax
; Line 520
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patLen$[ebp]
	push	ecx
	push	OFFSET _fgCurrencyFormat
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getStringByKeyWithFallback_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _patResStr$[ebp], eax
$LN5@setupCurre:
; Line 522
	mov	eax, DWORD PTR _numElements$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 523
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 524
	mov	eax, DWORD PTR _ns$[ebp]
	mov	DWORD PTR $T54141[ebp], eax
	mov	ecx, DWORD PTR $T54141[ebp]
	mov	DWORD PTR $T54140[ebp], ecx
	cmp	DWORD PTR $T54140[ebp], 0
	je	SHORT $LN11@setupCurre
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T54140[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T54140[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv194[ebp], eax
	jmp	SHORT $LN12@setupCurre
$LN11@setupCurre:
	mov	DWORD PTR tv194[ebp], 0
$LN12@setupCurre:
; Line 526
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@setupCurre
; Line 527
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44298[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 528
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44299[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 529
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44300[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 530
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44301[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 533
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _posSuffix$44301[ebp]
	push	ecx
	lea	edx, DWORD PTR _posPrefix$44300[ebp]
	push	edx
	lea	eax, DWORD PTR _negSuffix$44299[ebp]
	push	eax
	lea	ecx, DWORD PTR _negPrefix$44298[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseErr$[ebp]
	push	edx
	mov	esi, esp
	mov	eax, DWORD PTR _patLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patResStr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T44302[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv368[ebp], eax
	mov	edx, DWORD PTR tv368[ebp]
	mov	DWORD PTR tv347[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv347[ebp]
	push	eax
	call	?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z ; icu_56::applyPatternWithNoSideEffects
	add	esp, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T44302[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 539
	mov	esi, esp
	push	260					; 00000104H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54145[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T54145[ebp], 0
	je	SHORT $LN13@setupCurre
	push	0
	lea	eax, DWORD PTR _posSuffix$44301[ebp]
	push	eax
	lea	ecx, DWORD PTR _posPrefix$44300[ebp]
	push	ecx
	lea	edx, DWORD PTR _negSuffix$44299[ebp]
	push	edx
	lea	eax, DWORD PTR _negPrefix$44298[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54145[ebp]
	call	??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency
	mov	DWORD PTR tv236[ebp], eax
	jmp	SHORT $LN14@setupCurre
$LN13@setupCurre:
	mov	DWORD PTR tv236[ebp], 0
$LN14@setupCurre:
	mov	ecx, DWORD PTR tv236[ebp]
	mov	DWORD PTR $T54144[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR $T54144[ebp]
	mov	DWORD PTR _affixPtn$44303[ebp], edx
; Line 540
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPtn$44303[ebp]
	push	ecx
	mov	edi, esp
	push	7
	push	OFFSET ??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T44309[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv374[ebp], eax
	mov	edx, DWORD PTR tv374[ebp]
	mov	DWORD PTR tv350[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv350[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+372]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T44309[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 541
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44301[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44300[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44299[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44298[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@setupCurre:
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pluralPtn$[ebp], edx
; Line 545
	mov	DWORD PTR _element$[ebp], 0
; Line 546
	mov	DWORD PTR _pos$[ebp], -1
; Line 547
	mov	esi, esp
	lea	ecx, DWORD PTR _pluralPatternSet$[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
$LN3@setupCurre:
; Line 548
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pluralPtn$[ebp]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN2@setupCurre
; Line 549
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$44318[ebp], ecx
; Line 550
	mov	eax, DWORD PTR _valueTok$44318[ebp]
	mov	DWORD PTR _value$44319[ebp], eax
; Line 551
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _keyTok$44321[ebp], ecx
; Line 552
	mov	eax, DWORD PTR _keyTok$44321[ebp]
	mov	DWORD PTR _key$44322[ebp], eax
; Line 553
	mov	esi, esp
	mov	eax, DWORD PTR _value$44319[ebp]
	push	eax
	lea	ecx, DWORD PTR _pluralPatternSet$[ebp]
	call	DWORD PTR __imp_?geti@Hashtable@icu_56@@QBEHABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	$LN1@setupCurre
; Line 554
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44325[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 555
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44326[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
; Line 556
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44327[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; Line 557
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44328[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 558
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _value$44319[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pluralPatternSet$[ebp]
	call	DWORD PTR __imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 561
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _posSuffix$44328[ebp]
	push	ecx
	lea	edx, DWORD PTR _posPrefix$44327[ebp]
	push	edx
	lea	eax, DWORD PTR _negSuffix$44326[ebp]
	push	eax
	lea	ecx, DWORD PTR _negPrefix$44325[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseErr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$44319[ebp]
	push	eax
	call	?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z ; icu_56::applyPatternWithNoSideEffects
	add	esp, 28					; 0000001cH
; Line 567
	mov	esi, esp
	push	260					; 00000104H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54149[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	cmp	DWORD PTR $T54149[ebp], 0
	je	SHORT $LN15@setupCurre
	push	1
	lea	eax, DWORD PTR _posSuffix$44328[ebp]
	push	eax
	lea	ecx, DWORD PTR _posPrefix$44327[ebp]
	push	ecx
	lea	edx, DWORD PTR _negSuffix$44326[ebp]
	push	edx
	lea	eax, DWORD PTR _negPrefix$44325[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54149[ebp]
	call	??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency
	mov	DWORD PTR tv332[ebp], eax
	jmp	SHORT $LN16@setupCurre
$LN15@setupCurre:
	mov	DWORD PTR tv332[ebp], 0
$LN16@setupCurre:
	mov	ecx, DWORD PTR tv332[ebp]
	mov	DWORD PTR $T54148[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR $T54148[ebp]
	mov	DWORD PTR _affixPtn$44329[ebp], edx
; Line 568
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPtn$44329[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$44322[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 569
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44328[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44327[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44326[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44325[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setupCurre:
; Line 570
	jmp	$LN3@setupCurre
$LN2@setupCurre:
; Line 571
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _pluralPatternSet$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@setupCurre:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN51@setupCurre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1840				; 00000730H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN51@setupCurre:
	DD	16					; 00000010H
	DD	$LN50@setupCurre
$LN50@setupCurre:
	DD	-104					; ffffff98H
	DD	72					; 00000048H
	DD	$LN33@setupCurre
	DD	-188					; ffffff44H
	DD	64					; 00000040H
	DD	$LN34@setupCurre
	DD	-200					; ffffff38H
	DD	4
	DD	$LN35@setupCurre
	DD	-236					; ffffff14H
	DD	4
	DD	$LN36@setupCurre
	DD	-320					; fffffec0H
	DD	64					; 00000040H
	DD	$LN37@setupCurre
	DD	-392					; fffffe78H
	DD	64					; 00000040H
	DD	$LN38@setupCurre
	DD	-464					; fffffe30H
	DD	64					; 00000040H
	DD	$LN39@setupCurre
	DD	-536					; fffffde8H
	DD	64					; 00000040H
	DD	$LN40@setupCurre
	DD	-584					; fffffdb8H
	DD	4
	DD	$LN41@setupCurre
	DD	-648					; fffffd78H
	DD	56					; 00000038H
	DD	$LN42@setupCurre
	DD	-660					; fffffd6cH
	DD	4
	DD	$LN43@setupCurre
	DD	-684					; fffffd54H
	DD	4
	DD	$LN44@setupCurre
	DD	-768					; fffffd00H
	DD	64					; 00000040H
	DD	$LN45@setupCurre
	DD	-840					; fffffcb8H
	DD	64					; 00000040H
	DD	$LN46@setupCurre
	DD	-912					; fffffc70H
	DD	64					; 00000040H
	DD	$LN47@setupCurre
	DD	-984					; fffffc28H
	DD	64					; 00000040H
	DD	$LN48@setupCurre
$LN48@setupCurre:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN47@setupCurre:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN46@setupCurre:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN45@setupCurre:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN44@setupCurre:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN43@setupCurre:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN42@setupCurre:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN41@setupCurre:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN40@setupCurre:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN39@setupCurre:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN38@setupCurre:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN37@setupCurre:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN36@setupCurre:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN35@setupCurre:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN34@setupCurre:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN33@setupCurre:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44285[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _currencyPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44290[ebp]
	call	DWORD PTR __imp_??1Locale@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44298[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44299[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44300[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44301[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44302[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	mov	eax, DWORD PTR $T54145[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T44309[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR _pluralPatternSet$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR _negPrefix$44325[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR _negSuffix$44326[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR _posPrefix$44327[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR _posSuffix$44328[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z$15:
	mov	esi, esp
	mov	eax, DWORD PTR $T54149[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1844]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::setupCurrencyAffixPatterns
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$3
__ehfuncinfo$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_negPrefix$ = 8						; size = 4
_negSuffix$ = 12					; size = 4
_posPrefix$ = 16					; size = 4
_posSuffix$ = 20					; size = 4
_type$ = 24						; size = 1
??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z PROC ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency, COMDAT
; _this$ = ecx
; Line 110
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 115
	mov	esi, esp
	mov	eax, DWORD PTR _negPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR _negSuffix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 117
	mov	esi, esp
	mov	eax, DWORD PTR _posPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _posSuffix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _type$[ebp]
	mov	BYTE PTR [eax+256], cl
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z ENDP ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency
PUBLIC	??1DecimalFormatPatternParser@icu_56@@QAE@XZ	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser
PUBLIC	??1DecimalFormatPattern@icu_56@@QAE@XZ		; icu_56::DecimalFormatPattern::~DecimalFormatPattern
PUBLIC	__$ArrayPad$
EXTRN	?applyPatternWithoutExpandAffix@DecimalFormatPatternParser@icu_56@@QAEXABVUnicodeString@2@AAUDecimalFormatPattern@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatPatternParser::applyPatternWithoutExpandAffix
EXTRN	??0DecimalFormatPattern@icu_56@@QAE@XZ:PROC	; icu_56::DecimalFormatPattern::DecimalFormatPattern
EXTRN	??0DecimalFormatPatternParser@icu_56@@QAE@XZ:PROC ; icu_56::DecimalFormatPatternParser::DecimalFormatPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z$1
__ehfuncinfo$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_out$ = -1676						; size = 1000
_patternParser$ = -668					; size = 648
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_negPrefix$ = 16					; size = 4
_negSuffix$ = 20					; size = 4
_posPrefix$ = 24					; size = 4
_posSuffix$ = 28					; size = 4
_status$ = 32						; size = 4
?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z PROC ; icu_56::applyPatternWithNoSideEffects, COMDAT
; Line 467
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1860				; 00000744H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1872]
	mov	ecx, 465				; 000001d1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 468
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@applyPatte
; Line 470
	jmp	$LN3@applyPatte
$LN2@applyPatte:
; Line 472
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??0DecimalFormatPatternParser@icu_56@@QAE@XZ ; icu_56::DecimalFormatPatternParser::DecimalFormatPatternParser
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 473
	lea	ecx, DWORD PTR _out$[ebp]
	call	??0DecimalFormatPattern@icu_56@@QAE@XZ	; icu_56::DecimalFormatPattern::DecimalFormatPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 478
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	lea	edx, DWORD PTR _out$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	?applyPatternWithoutExpandAffix@DecimalFormatPatternParser@icu_56@@QAEXABVUnicodeString@2@AAUDecimalFormatPattern@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatPatternParser::applyPatternWithoutExpandAffix
; Line 479
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@applyPatte
; Line 480
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	jmp	$LN3@applyPatte
$LN1@applyPatte:
; Line 482
	mov	esi, esp
	lea	eax, DWORD PTR _out$[ebp+192]
	push	eax
	mov	ecx, DWORD PTR _negPrefix$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	mov	esi, esp
	lea	eax, DWORD PTR _out$[ebp+256]
	push	eax
	mov	ecx, DWORD PTR _negSuffix$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 484
	mov	esi, esp
	lea	eax, DWORD PTR _out$[ebp+320]
	push	eax
	mov	ecx, DWORD PTR _posPrefix$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 485
	mov	esi, esp
	lea	eax, DWORD PTR _out$[ebp+384]
	push	eax
	mov	ecx, DWORD PTR _posSuffix$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _out$[ebp]
	call	??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _patternParser$[ebp]
	call	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
$LN3@applyPatte:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@applyPatte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1872				; 00000750H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@applyPatte:
	DD	2
	DD	$LN10@applyPatte
$LN10@applyPatte:
	DD	-668					; fffffd64H
	DD	648					; 00000288H
	DD	$LN7@applyPatte
	DD	-1676					; fffff974H
	DD	1000					; 000003e8H
	DD	$LN8@applyPatte
$LN8@applyPatte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN7@applyPatte:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _patternParser$[ebp]
	jmp	??1DecimalFormatPatternParser@icu_56@@QAE@XZ
__unwindfunclet$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _out$[ebp]
	jmp	??1DecimalFormatPattern@icu_56@@QAE@XZ
__ehhandler$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1876]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?applyPatternWithNoSideEffects@icu_56@@YAXABVUnicodeString@1@AAUUParseError@@AAV21@222AAW4UErrorCode@@@Z ENDP ; icu_56::applyPatternWithNoSideEffects
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DecimalFormatPatternParser@icu_56@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DecimalFormatPatternParser@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$8
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormatPatternParser@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormatPatternParser@icu_56@@QAE@XZ PROC	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPatternParser@icu_56@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 520				; 00000208H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1DecimalFormatPatternParser@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormatPatternParser@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormatPatternParser@icu_56@@QAE@XZ ENDP	; icu_56::DecimalFormatPatternParser::~DecimalFormatPatternParser
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DecimalFormatPattern@icu_56@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1DecimalFormatPattern@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1DecimalFormatPattern@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormatPattern@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormatPattern@icu_56@@QAE@XZ PROC		; icu_56::DecimalFormatPattern::~DecimalFormatPattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormatPattern@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 856				; 00000358H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 720				; 000002d0H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	call	??1AffixPattern@icu_56@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 448				; 000001c0H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 584				; 00000248H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__unwindfunclet$??1DecimalFormatPattern@icu_56@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 720				; 000002d0H
	jmp	??1AffixPattern@icu_56@@QAE@XZ
__ehhandler$??1DecimalFormatPattern@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormatPattern@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormatPattern@icu_56@@QAE@XZ ENDP		; icu_56::DecimalFormatPattern::~DecimalFormatPattern
PUBLIC	?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ ; icu_56::DecimalFormat::deleteHashForAffixPattern
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DecimalFormat@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DecimalFormat@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DecimalFormat@icu_56@@UAE@XZ$1
__ehfuncinfo$??1DecimalFormat@icu_56@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1DecimalFormat@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DecimalFormat@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv132 = -268						; size = 4
tv88 = -268						; size = 4
$T54256 = -260						; size = 4
$T54257 = -248						; size = 4
$T54260 = -236						; size = 4
$T54261 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DecimalFormat@icu_56@@UAE@XZ PROC			; icu_56::DecimalFormat::~DecimalFormat, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DecimalFormat@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 578
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ ; icu_56::DecimalFormat::deleteHashForAffixPattern
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	mov	DWORD PTR $T54257[ebp], ecx
	mov	edx, DWORD PTR $T54257[ebp]
	mov	DWORD PTR $T54256[ebp], edx
	cmp	DWORD PTR $T54256[ebp], 0
	je	SHORT $LN3@DecimalFor@7
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T54256[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T54256[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN4@DecimalFor@7
$LN3@DecimalFor@7:
	mov	DWORD PTR tv88[ebp], 0
$LN4@DecimalFor@7:
; Line 580
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	DWORD PTR $T54261[ebp], ecx
	mov	edx, DWORD PTR $T54261[ebp]
	mov	DWORD PTR $T54260[ebp], edx
	cmp	DWORD PTR $T54260[ebp], 0
	je	SHORT $LN5@DecimalFor@7
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T54260[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T54260[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN1@DecimalFor@7
$LN5@DecimalFor@7:
	mov	DWORD PTR tv132[ebp], 0
$LN1@DecimalFor@7:
; Line 581
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DecimalFormat@icu_56@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??1DecimalFormat@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??1DecimalFormat@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DecimalFormat@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DecimalFormat@icu_56@@UAE@XZ ENDP			; icu_56::DecimalFormat::~DecimalFormat
PUBLIC	??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DecimalFormat::operator=
PUBLIC	??0DecimalFormat@icu_56@@QAE@ABV01@@Z		; icu_56::DecimalFormat::DecimalFormat
EXTRN	??0NumberFormat@icu_56@@IAE@ABV01@@Z:PROC	; icu_56::NumberFormat::NumberFormat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DecimalFormat@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DecimalFormat@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0DecimalFormat@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
??0DecimalFormat@icu_56@@QAE@ABV01@@Z PROC		; icu_56::DecimalFormat::DecimalFormat, COMDAT
; _this$ = ecx
; Line 587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DecimalFormat@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0NumberFormat@icu_56@@IAE@ABV01@@Z	; icu_56::NumberFormat::NumberFormat
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DecimalFormat@icu_56@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 588
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@DecimalFormat@icu_56@@AAEXXZ	; icu_56::DecimalFormat::init
; Line 589
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z ; icu_56::DecimalFormat::operator=
; Line 590
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1NumberFormat@icu_56@@UAE@XZ		; icu_56::NumberFormat::~NumberFormat
__unwindfunclet$??0DecimalFormat@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	jmp	??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
__ehhandler$??0DecimalFormat@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DecimalFormat@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DecimalFormat@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::DecimalFormat::DecimalFormat
PUBLIC	?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::copyHashForAffixPattern
EXTRN	?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::assign
EXTRN	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::DecimalFormatImpl
EXTRN	??4NumberFormat@icu_56@@IAEAAV01@ABV01@@Z:PROC	; icu_56::NumberFormat::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv93 = -268						; size = 4
$T54284 = -260						; size = 4
$T54285 = -248						; size = 4
_status$44367 = -44					; size = 4
_status$44354 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_rhs$ = 8						; size = 4
??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::DecimalFormat::operator=, COMDAT
; _this$ = ecx
; Line 607
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _rhs$[ebp]
	je	$LN4@operator@4
; Line 609
	mov	DWORD PTR _status$44354[ebp], 0
; Line 610
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4NumberFormat@icu_56@@IAEAAV01@ABV01@@Z ; icu_56::NumberFormat::operator=
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+360], 0
	jne	$LN3@operator@4
; Line 612
	mov	esi, esp
	push	2664					; 00000a68H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54285[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T54285[ebp], 0
	je	SHORT $LN7@operator@4
	lea	eax, DWORD PTR _status$44354[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54285[ebp]
	call	??0DecimalFormatImpl@icu_56@@QAE@PAVNumberFormat@1@ABV01@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::DecimalFormatImpl
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN8@operator@4
$LN7@operator@4:
	mov	DWORD PTR tv93[ebp], 0
$LN8@operator@4:
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T54284[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T54284[ebp]
	mov	DWORD PTR [edx+360], eax
; Line 613
	jmp	SHORT $LN2@operator@4
$LN3@operator@4:
; Line 614
	lea	eax, DWORD PTR _status$44354[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?assign@DecimalFormatImpl@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::assign
$LN2@operator@4:
; Line 616
	lea	eax, DWORD PTR _status$44354[ebp]
	push	eax
	call	?getStaticSets@DecimalFormatStaticSets@icu_56@@SAPBV12@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatStaticSets::getStaticSets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+384], eax
; Line 617
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+368]
	mov	DWORD PTR [eax+368], edx
; Line 618
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 376				; 00000178H
	push	edx
	call	??$_clone_ptr@VCurrencyPluralInfo@icu_56@@@icu_56@@YAXPAPAVCurrencyPluralInfo@0@PBV10@@Z ; icu_56::_clone_ptr<icu_56::CurrencyPluralInfo>
	add	esp, 8
; Line 619
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ ; icu_56::DecimalFormat::deleteHashForAffixPattern
; Line 620
	mov	eax, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [eax+372], 0
	je	SHORT $LN4@operator@4
; Line 621
	mov	DWORD PTR _status$44367[ebp], 0
; Line 622
	lea	eax, DWORD PTR _status$44367[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initHashForAffixPattern
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+372], eax
; Line 624
	lea	eax, DWORD PTR _status$44367[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	push	edx
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::copyHashForAffixPattern
$LN4@operator@4:
; Line 628
	mov	eax, DWORD PTR _this$[ebp]
; Line 629
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@operator@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@operator@4:
	DD	2
	DD	$LN13@operator@4
$LN13@operator@4:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN10@operator@4
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN11@operator@4
$LN11@operator@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN10@operator@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T54285[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4DecimalFormat@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::DecimalFormat::operator=
PUBLIC	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
EXTRN	??8DecimalFormatImpl@icu_56@@QBECABV01@@Z:PROC	; icu_56::DecimalFormatImpl::operator==
EXTRN	??8NumberFormat@icu_56@@UBECABVFormat@1@@Z:PROC	; icu_56::NumberFormat::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z
_TEXT	SEGMENT
tv128 = -217						; size = 1
_other$ = -20						; size = 4
_this$ = -8						; size = 4
_that$ = 8						; size = 4
??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z PROC	; icu_56::DecimalFormat::operator==, COMDAT
; _this$ = ecx
; Line 635
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 636
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _that$[ebp]
	jne	SHORT $LN1@operator@5
; Line 637
	mov	al, 1
	jmp	SHORT $LN2@operator@5
$LN1@operator@5:
; Line 640
	mov	eax, DWORD PTR _that$[ebp]
	mov	DWORD PTR _other$[ebp], eax
; Line 645
	mov	eax, DWORD PTR _that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8NumberFormat@icu_56@@UBECABVFormat@1@@Z ; icu_56::NumberFormat::operator==
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
	mov	esi, eax
	mov	ecx, DWORD PTR _other$[ebp]
	add	ecx, 364				; 0000016cH
	call	?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
	cmp	esi, eax
	jne	SHORT $LN4@operator@5
	mov	edx, DWORD PTR _other$[ebp]
	mov	eax, DWORD PTR [edx+360]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	??8DecimalFormatImpl@icu_56@@QBECABV01@@Z ; icu_56::DecimalFormatImpl::operator==
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@operator@5
	mov	BYTE PTR tv128[ebp], 1
	jmp	SHORT $LN5@operator@5
$LN4@operator@5:
	mov	BYTE PTR tv128[ebp], 0
$LN5@operator@5:
	mov	al, BYTE PTR tv128[ebp]
$LN2@operator@5:
; Line 647
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8DecimalFormat@icu_56@@UBECABVFormat@1@@Z ENDP	; icu_56::DecimalFormat::operator==
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ$0
__ehfuncinfo$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T54305 = -236						; size = 4
$T54306 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ PROC	; icu_56::DecimalFormat::clone, COMDAT
; _this$ = ecx
; Line 653
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 654
	mov	esi, esp
	push	388					; 00000184H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54306[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T54306[ebp], 0
	je	SHORT $LN3@clone
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54306[ebp]
	call	??0DecimalFormat@icu_56@@QAE@ABV01@@Z	; icu_56::DecimalFormat::DecimalFormat
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@clone
$LN3@clone:
	mov	DWORD PTR tv75[ebp], 0
$LN4@clone:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T54305[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T54305[ebp]
; Line 655
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T54306[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@DecimalFormat@icu_56@@UBEPAVFormat@2@XZ ENDP	; icu_56::DecimalFormat::clone
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::getFixedDecimal
EXTRN	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z:PROC ; icu_56::FixedDecimal::FixedDecimal
EXTRN	??0FixedDecimal@icu_56@@QAE@XZ:PROC		; icu_56::FixedDecimal::FixedDecimal
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z$0
__ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 8
_status$ = 20						; size = 4
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::getFixedDecimal, COMDAT
; _this$ = ecx
; Line 659
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 432				; 000001b0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 660
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 661
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
; Line 662
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getFixedDe
; Line 663
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@XZ		; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@getFixedDe
$LN1@getFixedDe:
; Line 665
	lea	ecx, DWORD PTR _digits$[ebp]
	call	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@getFixedDe:
; Line 666
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getFixedDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN8@getFixedDe:
	DD	1
	DD	$LN7@getFixedDe
$LN7@getFixedDe:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN5@getFixedDe
$LN5@getFixedDe:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@NAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::getFixedDecimal
EXTRN	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_digits$ = 16						; size = 4
_status$ = 20						; size = 4
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 673
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Line 674
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
_TEXT	ENDS
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::getFixedDecimal
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
_status$ = 16						; size = 4
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::getFixedDecimal, COMDAT
; _this$ = ecx
; Line 677
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 432				; 000001b0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 678
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 679
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
; Line 680
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getFixedDe@2
; Line 681
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@XZ		; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@getFixedDe@2
$LN1@getFixedDe@2:
; Line 683
	lea	ecx, DWORD PTR _digits$[ebp]
	call	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@getFixedDe@2:
; Line 684
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getFixedDe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN8@getFixedDe@2:
	DD	1
	DD	$LN7@getFixedDe@2
$LN7@getFixedDe@2:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN5@getFixedDe@2
$LN5@getFixedDe@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@ABVFormattable@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::getFixedDecimal
PUBLIC	__$ArrayPad$
EXTRN	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
EXTRN	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z:PROC ; icu_56::Formattable::getDouble
EXTRN	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ:PROC ; icu_56::Formattable::getType
EXTRN	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
EXTRN	?isNumeric@Formattable@icu_56@@QBECXZ:PROC	; icu_56::Formattable::isNumeric
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T54347 = -372						; size = 4
_type$ = -168						; size = 4
_dlCopy$44418 = -156					; size = 112
_dl$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_number$ = 8						; size = 4
_digits$ = 12						; size = 4
_status$ = 16						; size = 4
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 690
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 691
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@initVisibl
; Line 692
	mov	eax, DWORD PTR _digits$[ebp]
	jmp	$LN6@initVisibl
$LN5@initVisibl:
; Line 694
	mov	ecx, DWORD PTR _number$[ebp]
	call	?isNumeric@Formattable@icu_56@@QBECXZ	; icu_56::Formattable::isNumeric
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@initVisibl
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 696
	mov	eax, DWORD PTR _digits$[ebp]
	jmp	$LN6@initVisibl
$LN4@initVisibl:
; Line 699
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getDigitList@Formattable@icu_56@@QBEPAVDigitList@2@XZ ; icu_56::Formattable::getDigitList
	mov	DWORD PTR _dl$[ebp], eax
; Line 700
	cmp	DWORD PTR _dl$[ebp], 0
	je	SHORT $LN3@initVisibl
; Line 701
	mov	eax, DWORD PTR _dl$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dlCopy$44418[ebp]
	call	??0DigitList@icu_56@@QAE@ABV01@@Z	; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dlCopy$44418[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
	mov	DWORD PTR $T54347[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dlCopy$44418[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	eax, DWORD PTR $T54347[ebp]
	jmp	SHORT $LN6@initVisibl
$LN3@initVisibl:
; Line 706
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getType@Formattable@icu_56@@QBE?AW4Type@12@XZ ; icu_56::Formattable::getType
	mov	DWORD PTR _type$[ebp], eax
; Line 707
	cmp	DWORD PTR _type$[ebp], 1
	je	SHORT $LN1@initVisibl
	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN2@initVisibl
$LN1@initVisibl:
; Line 709
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getDouble@Formattable@icu_56@@QBENAAW4UErrorCode@@@Z ; icu_56::Formattable::getDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@NAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
	jmp	SHORT $LN6@initVisibl
$LN2@initVisibl:
; Line 712
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _number$[ebp]
	call	?getInt64@Formattable@icu_56@@QBE_JXZ	; icu_56::Formattable::getInt64
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@_JAAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
$LN6@initVisibl:
; Line 713
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@initVisibl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN12@initVisibl:
	DD	1
	DD	$LN11@initVisibl
$LN11@initVisibl:
	DD	-156					; ffffff64H
	DD	112					; 00000070H
	DD	$LN9@initVisibl
$LN9@initVisibl:
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _dlCopy$44418[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-380]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@ABVFormattable@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
PUBLIC	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
PUBLIC	__$ArrayPad$
PUBLIC	?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::getFixedDecimal
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_digits$ = -248						; size = 216
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_number$ = 12						; size = 4
_status$ = 16						; size = 4
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::getFixedDecimal, COMDAT
; _this$ = ecx
; Line 720
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 432				; 000001b0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 721
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??0VisibleDigitsWithExponent@icu_56@@QAE@XZ ; icu_56::VisibleDigitsWithExponent::VisibleDigitsWithExponent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 722
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
; Line 723
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@getFixedDe@3
; Line 724
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@XZ		; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@getFixedDe@3
$LN1@getFixedDe@3:
; Line 726
	lea	ecx, DWORD PTR _digits$[ebp]
	call	?getMantissa@VisibleDigitsWithExponent@icu_56@@QBEABVVisibleDigits@2@XZ ; icu_56::VisibleDigitsWithExponent::getMantissa
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0FixedDecimal@icu_56@@QAE@ABVVisibleDigits@1@@Z ; icu_56::FixedDecimal::FixedDecimal
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _digits$[ebp]
	call	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@getFixedDe@3:
; Line 727
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getFixedDe@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN8@getFixedDe@3:
	DD	1
	DD	$LN7@getFixedDe@3
$LN7@getFixedDe@3:
	DD	-248					; ffffff08H
	DD	216					; 000000d8H
	DD	$LN5@getFixedDe@3
$LN5@getFixedDe@3:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _digits$[ebp]
	jmp	??1VisibleDigitsWithExponent@icu_56@@QAE@XZ
__ehhandler$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-448]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFixedDecimal@DecimalFormat@icu_56@@QBE?AVFixedDecimal@2@AAVDigitList@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::getFixedDecimal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_digits$ = 12						; size = 4
_status$ = 16						; size = 4
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::initVisibleDigitsWithExponent, COMDAT
; _this$ = ecx
; Line 733
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?initVisibleDigitsWithExponent@DecimalFormatImpl@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::initVisibleDigitsWithExponent
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initVisibleDigitsWithExponent@DecimalFormat@icu_56@@QBEAAVVisibleDigitsWithExponent@2@AAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::initVisibleDigitsWithExponent
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_fieldPosition$ = 16					; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 745
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 746
	mov	DWORD PTR _status$[ebp], 0
; Line 747
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 748
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@format
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@format:
	DD	1
	DD	$LN4@format
$LN4@format:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@format
$LN3@format:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::DecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_fieldPosition$ = 16					; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 756
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 757
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 764
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 765
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 766
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@HAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_fieldPosition$ = 20					; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 775
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 776
	mov	DWORD PTR _status$[ebp], 0
; Line 777
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 778
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@format@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN5@format@2:
	DD	1
	DD	$LN4@format@2
$LN4@format@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@format@2
$LN3@format@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::DecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_fieldPosition$ = 20					; size = 4
_status$ = 24						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 785
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 786
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 787
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_posIter$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 794
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 795
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 796
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@_JAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z
_TEXT	SEGMENT
_status$ = -20						; size = 4
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_fieldPosition$ = 20					; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 804
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 805
	mov	DWORD PTR _status$[ebp], 0
; Line 806
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 807
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@format@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN5@format@3:
	DD	1
	DD	$LN4@format@3
$LN4@format@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@format@3
$LN3@format@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@@Z ENDP ; icu_56::DecimalFormat::format
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_fieldPosition$ = 20					; size = 4
_status$ = 24						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 814
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 815
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 816
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 8
_appendTo$ = 16						; size = 4
_posIter$ = 20						; size = 4
_status$ = 24						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 823
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 824
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	sub	esp, 8
	fld	QWORD PTR _number$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 825
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@NAAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_toAppendTo$ = 12					; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 835
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 836
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _toAppendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 837
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVStringPiece@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 845
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 846
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 853
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 854
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 855
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVDigitList@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_posIter$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 861
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 862
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _posIter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 863
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@PAVFieldPositionIterator@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
EXTRN	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_appendTo$ = 12						; size = 4
_pos$ = 16						; size = 4
_status$ = 20						; size = 4
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::format, COMDAT
; _this$ = ecx
; Line 870
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 871
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _appendTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?format@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::format
; Line 872
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?format@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@ABVVisibleDigitsWithExponent@2@AAV32@AAVFieldPosition@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::format
_TEXT	ENDS
PUBLIC	?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::_round
EXTRN	?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::round
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_number$ = 8						; size = 4
_adjustedNum$ = 12					; size = 4
_isNegative$ = 16					; size = 4
_status$ = 20						; size = 4
?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::_round, COMDAT
; _this$ = ecx
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 876
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedNum$[ebp]
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
; Line 877
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _adjustedNum$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?round@DecimalFormatImpl@icu_56@@QBEAAVDigitList@2@AAV32@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::round
; Line 878
	mov	ecx, DWORD PTR _adjustedNum$[ebp]
	call	?isPositive@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isPositive
	movsx	eax, al
	test	eax, eax
	sete	cl
	mov	edx, DWORD PTR _isNegative$[ebp]
	mov	BYTE PTR [edx], cl
; Line 879
	mov	eax, DWORD PTR _adjustedNum$[ebp]
; Line 880
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_round@DecimalFormat@icu_56@@IBEAAVDigitList@2@ABV32@AAV32@AACAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::_round
_TEXT	ENDS
PUBLIC	?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z ; icu_56::DecimalFormat::parse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parse@DecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_result$ = 12						; size = 4
_parsePosition$ = 16					; size = 4
?parse@DecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z PROC ; icu_56::DecimalFormat::parse, COMDAT
; _this$ = ecx
; Line 885
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 886
	push	0
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z ; icu_56::DecimalFormat::parse
; Line 887
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parse@DecimalFormat@icu_56@@UBEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@@Z ENDP ; icu_56::DecimalFormat::parse
_TEXT	ENDS
PUBLIC	??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>
PUBLIC	?orphan@?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAEPAVCurrencyAmount@2@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::orphan
PUBLIC	??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::CurrencyAmount>::LocalPointer<icu_56::CurrencyAmount>
PUBLIC	__$ArrayPad$
EXTRN	??1Formattable@icu_56@@UAE@XZ:PROC		; icu_56::Formattable::~Formattable
EXTRN	__imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	??0CurrencyAmount@icu_56@@QAE@ABVFormattable@1@PB_WAAW4UErrorCode@@@Z:PROC ; icu_56::CurrencyAmount::CurrencyAmount
EXTRN	__imp_?getIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	??0Formattable@icu_56@@QAE@XZ:PROC		; icu_56::Formattable::Formattable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$2
__ehfuncinfo$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
_TEXT	SEGMENT
tv93 = -556						; size = 4
$T54417 = -548						; size = 4
$T54418 = -536						; size = 4
$T54421 = -524						; size = 4
$T54422 = -512						; size = 4
_currAmt$44652 = -308					; size = 4
_ec$44559 = -296					; size = 4
_curbuf$ = -284						; size = 8
_start$ = -268						; size = 4
_parseResult$ = -256					; size = 224
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z PROC ; icu_56::DecimalFormat::parseCurrency, COMDAT
; _this$ = ecx
; Line 890
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 891
	lea	ecx, DWORD PTR _parseResult$[ebp]
	call	??0Formattable@icu_56@@QAE@XZ		; icu_56::Formattable::Formattable
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 892
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _start$[ebp], eax
; Line 893
	xor	eax, eax
	mov	DWORD PTR _curbuf$[ebp], eax
	mov	DWORD PTR _curbuf$[ebp+4], eax
; Line 894
	lea	eax, DWORD PTR _curbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z ; icu_56::DecimalFormat::parse
; Line 895
	mov	esi, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _start$[ebp]
	je	$LN3@parseCurre
; Line 896
	mov	DWORD PTR _ec$44559[ebp], 0
; Line 897
	mov	esi, esp
	push	240					; 000000f0H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54418[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T54418[ebp], 0
	je	SHORT $LN6@parseCurre
	lea	eax, DWORD PTR _ec$44559[ebp]
	push	eax
	lea	ecx, DWORD PTR _curbuf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _parseResult$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T54418[ebp]
	call	??0CurrencyAmount@icu_56@@QAE@ABVFormattable@1@PB_WAAW4UErrorCode@@@Z ; icu_56::CurrencyAmount::CurrencyAmount
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN7@parseCurre
$LN6@parseCurre:
	mov	DWORD PTR tv93[ebp], 0
$LN7@parseCurre:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T54417[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ec$44559[ebp]
	push	ecx
	mov	edx, DWORD PTR $T54417[ebp]
	push	edx
	lea	ecx, DWORD PTR _currAmt$44652[ebp]
	call	??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<icu_56::CurrencyAmount>::LocalPointer<icu_56::CurrencyAmount>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 898
	mov	eax, DWORD PTR _ec$44559[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@parseCurre
; Line 899
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 900
	jmp	SHORT $LN1@parseCurre
$LN2@parseCurre:
; Line 901
	lea	ecx, DWORD PTR _currAmt$44652[ebp]
	call	?orphan@?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAEPAVCurrencyAmount@2@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::orphan
	mov	DWORD PTR $T54421[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _currAmt$44652[ebp]
	call	??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parseResult$[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR $T54421[ebp]
	jmp	SHORT $LN4@parseCurre
$LN1@parseCurre:
; Line 903
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _currAmt$44652[ebp]
	call	??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>
$LN3@parseCurre:
; Line 904
	mov	DWORD PTR $T54422[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _parseResult$[ebp]
	call	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
	mov	eax, DWORD PTR $T54422[ebp]
$LN4@parseCurre:
; Line 905
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@parseCurre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN17@parseCurre:
	DD	4
	DD	$LN16@parseCurre
$LN16@parseCurre:
	DD	-256					; ffffff00H
	DD	224					; 000000e0H
	DD	$LN11@parseCurre
	DD	-284					; fffffee4H
	DD	8
	DD	$LN12@parseCurre
	DD	-296					; fffffed8H
	DD	4
	DD	$LN13@parseCurre
	DD	-308					; fffffeccH
	DD	4
	DD	$LN14@parseCurre
$LN14@parseCurre:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	0
$LN13@parseCurre:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN12@parseCurre:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN11@parseCurre:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$0:
	lea	ecx, DWORD PTR _parseResult$[ebp]
	jmp	??1Formattable@icu_56@@UAE@XZ		; icu_56::Formattable::~Formattable
__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T54418[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z$2:
	lea	ecx, DWORD PTR _currAmt$44652[ebp]
	jmp	??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>
__ehhandler$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseCurrency@DecimalFormat@icu_56@@UBEPAVCurrencyAmount@2@ABVUnicodeString@2@AAVParsePosition@2@@Z ENDP ; icu_56::DecimalFormat::parseCurrency
PUBLIC	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
PUBLIC	?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::parseForCurrency
PUBLIC	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
PUBLIC	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
PUBLIC	__$ArrayPad$
EXTRN	?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z:PROC ; icu_56::Formattable::adoptDigitList
EXTRN	?setPositive@DigitList@icu_56@@QAEXC@Z:PROC	; icu_56::DigitList::setPositive
EXTRN	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitList::mult
EXTRN	?set@DigitList@icu_56@@QAEXH@Z:PROC		; icu_56::DigitList::set
EXTRN	??0DigitList@icu_56@@QAE@XZ:PROC		; icu_56::DigitList::DigitList
EXTRN	?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z:PROC ; icu_56::DigitList::div
EXTRN	?isZero@DigitList@icu_56@@QBECXZ:PROC		; icu_56::DigitList::isZero
EXTRN	_uprv_getInfinity_56:PROC
EXTRN	?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ:PROC ; icu_56::Formattable::getInternalDigitList
EXTRN	?setDouble@Formattable@icu_56@@QAEXN@Z:PROC	; icu_56::Formattable::setDouble
EXTRN	_uprv_getNaN_56:PROC
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z:PROC ; icu_56::DecimalFormatImpl::getConstSymbol
EXTRN	?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ:PROC ; icu_56::DecimalFormatImpl::getOldFormatWidth
EXTRN	?setLong@Formattable@icu_56@@QAEXH@Z:PROC	; icu_56::Formattable::setLong
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z$0
__ehfuncinfo$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z
_TEXT	SEGMENT
tv242 = -532						; size = 8
tv149 = -528						; size = 4
_ec$44707 = -328					; size = 4
_i$44703 = -316						; size = 4
_ec$44701 = -304					; size = 4
_i$44697 = -292						; size = 4
_ten$44694 = -280					; size = 112
_ec$44692 = -160					; size = 4
_inf$44689 = -148					; size = 8
_digits$ = -132						; size = 4
_status$ = -117						; size = 1
_nanLen$ = -108						; size = 4
_nan$ = -96						; size = 4
_formatWidth$ = -84					; size = 4
_ci$44668 = -72						; size = 4
_i$ = -60						; size = 4
_backup$ = -48						; size = 4
_startIdx$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_result$ = 12						; size = 4
_parsePosition$ = 16					; size = 4
_currency$ = 20						; size = 4
?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z PROC ; icu_56::DecimalFormat::parse, COMDAT
; _this$ = ecx
; Line 924
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-532]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 926
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _backup$[ebp], eax
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _startIdx$[ebp], eax
	mov	ecx, DWORD PTR _startIdx$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
; Line 930
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setLong@Formattable@icu_56@@QAEXH@Z	; icu_56::Formattable::setLong
; Line 931
	cmp	DWORD PTR _currency$[ebp], 0
	je	SHORT $LN25@parse
; Line 932
	mov	DWORD PTR _ci$44668[ebp], 0
	jmp	SHORT $LN27@parse
$LN26@parse:
	mov	eax, DWORD PTR _ci$44668[ebp]
	add	eax, 1
	mov	DWORD PTR _ci$44668[ebp], eax
$LN27@parse:
	cmp	DWORD PTR _ci$44668[ebp], 4
	jge	SHORT $LN25@parse
; Line 933
	xor	eax, eax
	mov	ecx, DWORD PTR _ci$44668[ebp]
	mov	edx, DWORD PTR _currency$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 934
	jmp	SHORT $LN26@parse
$LN25@parse:
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::getOldFormatWidth
	mov	DWORD PTR _formatWidth$[ebp], eax
; Line 943
	cmp	DWORD PTR _formatWidth$[ebp], 0
	jle	SHORT $LN24@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 0
	je	SHORT $LN23@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 1
	jne	SHORT $LN24@parse
$LN23@parse:
; Line 944
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _i$[ebp], eax
$LN24@parse:
; Line 947
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN22@parse
; Line 949
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
	add	esp, 8
	mov	DWORD PTR _backup$[ebp], eax
	mov	edx, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _i$[ebp], edx
$LN22@parse:
; Line 953
	push	15					; 0000000fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _nan$[ebp], eax
; Line 955
	mov	esi, esp
	mov	eax, DWORD PTR _nan$[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _nan$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN31@parse
	mov	DWORD PTR tv149[ebp], 0
	jmp	SHORT $LN32@parse
$LN31@parse:
	mov	esi, esp
	mov	ecx, DWORD PTR _nan$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv149[ebp], eax
$LN32@parse:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR _nanLen$[ebp], eax
; Line 956
	cmp	DWORD PTR _nanLen$[ebp], 0
	je	SHORT $LN21@parse
; Line 957
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _nanLen$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 958
	cmp	DWORD PTR _formatWidth$[ebp], 0
	jle	SHORT $LN20@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 2
	je	SHORT $LN19@parse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 3
	jne	SHORT $LN20@parse
$LN19@parse:
; Line 959
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _i$[ebp], eax
$LN20@parse:
; Line 961
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 962
	call	_uprv_getNaN_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 963
	jmp	$LN29@parse
$LN21@parse:
; Line 967
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 968
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 973
	mov	ecx, DWORD PTR _result$[ebp]
	call	?getInternalDigitList@Formattable@icu_56@@QAEPAVDigitList@2@XZ ; icu_56::Formattable::getInternalDigitList
	mov	DWORD PTR _digits$[ebp], eax
; Line 974
	cmp	DWORD PTR _digits$[ebp], 0
	jne	SHORT $LN18@parse
; Line 975
	jmp	$LN29@parse
$LN18@parse:
; Line 978
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	je	SHORT $LN17@parse
; Line 980
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _digits$[ebp]
	push	edx
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::parseForCurrency
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN16@parse
; Line 981
	jmp	$LN29@parse
$LN16@parse:
; Line 983
	jmp	$LN14@parse
$LN17@parse:
; Line 990
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _digits$[ebp]
	push	edx
	mov	eax, DWORD PTR _parsePosition$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 2196				; 00000894H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	add	ecx, 2044				; 000007fcH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2500				; 000009c4H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 2348				; 0000092cH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN14@parse
; Line 992
	mov	esi, esp
	mov	eax, DWORD PTR _startIdx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 993
	jmp	$LN29@parse
$LN14@parse:
; Line 998
	movsx	eax, BYTE PTR _status$[ebp]
	test	eax, eax
	je	SHORT $LN13@parse
; Line 999
	call	_uprv_getInfinity_56
	fstp	QWORD PTR _inf$44689[ebp]
; Line 1000
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isPositive@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isPositive
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN33@parse
	fld	QWORD PTR _inf$44689[ebp]
	fstp	QWORD PTR tv242[ebp]
	jmp	SHORT $LN34@parse
$LN33@parse:
	fld	QWORD PTR _inf$44689[ebp]
	fchs
	fstp	QWORD PTR tv242[ebp]
$LN34@parse:
	sub	esp, 8
	fld	QWORD PTR tv242[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _result$[ebp]
	call	?setDouble@Formattable@icu_56@@QAEXN@Z	; icu_56::Formattable::setDouble
; Line 1004
	jmp	$LN12@parse
$LN13@parse:
; Line 1006
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 8
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@parse
; Line 1007
	mov	DWORD PTR _ec$44692[ebp], 0
; Line 1008
	lea	eax, DWORD PTR _ec$44692[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::div
$LN11@parse:
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+120], 0
	je	$LN10@parse
; Line 1012
	lea	ecx, DWORD PTR _ten$44694[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1013
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _ten$44694[ebp]
	call	?set@DigitList@icu_56@@QAEXH@Z		; icu_56::DigitList::set
; Line 1014
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+120], 0
	jle	SHORT $LN9@parse
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR _i$44697[ebp], edx
	jmp	SHORT $LN8@parse
$LN7@parse:
	mov	eax, DWORD PTR _i$44697[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$44697[ebp], eax
$LN8@parse:
	cmp	DWORD PTR _i$44697[ebp], 0
	jle	SHORT $LN6@parse
; Line 1016
	mov	DWORD PTR _ec$44701[ebp], 0
; Line 1017
	lea	eax, DWORD PTR _ec$44701[ebp]
	push	eax
	lea	ecx, DWORD PTR _ten$44694[ebp]
	push	ecx
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?div@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::div
; Line 1018
	jmp	SHORT $LN7@parse
$LN6@parse:
	jmp	SHORT $LN2@parse
$LN9@parse:
; Line 1020
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR _i$44703[ebp], edx
	jmp	SHORT $LN4@parse
$LN3@parse:
	mov	eax, DWORD PTR _i$44703[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44703[ebp], eax
$LN4@parse:
	cmp	DWORD PTR _i$44703[ebp], 0
	jge	SHORT $LN2@parse
; Line 1021
	mov	DWORD PTR _ec$44707[ebp], 0
; Line 1022
	lea	eax, DWORD PTR _ec$44707[ebp]
	push	eax
	lea	ecx, DWORD PTR _ten$44694[ebp]
	push	ecx
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?mult@DigitList@icu_56@@QAEXABV12@AAW4UErrorCode@@@Z ; icu_56::DigitList::mult
; Line 1023
	jmp	SHORT $LN3@parse
$LN2@parse:
; Line 1025
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ten$44694[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
$LN10@parse:
; Line 1030
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isZero@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isZero
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@parse
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?isPositive@DigitList@icu_56@@QBECXZ	; icu_56::DigitList::isPositive
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@parse
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isParseIntegerOnly
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@parse
; Line 1031
	push	1
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?setPositive@DigitList@icu_56@@QAEXC@Z	; icu_56::DigitList::setPositive
$LN1@parse:
; Line 1033
	mov	eax, DWORD PTR _digits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?adoptDigitList@Formattable@icu_56@@QAEXPAVDigitList@2@@Z ; icu_56::Formattable::adoptDigitList
$LN12@parse:
$LN29@parse:
; Line 1035
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@parse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 532				; 00000214H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN43@parse:
	DD	5
	DD	$LN42@parse
$LN42@parse:
	DD	-117					; ffffff8bH
	DD	1
	DD	$LN36@parse
	DD	-160					; ffffff60H
	DD	4
	DD	$LN37@parse
	DD	-280					; fffffee8H
	DD	112					; 00000070H
	DD	$LN38@parse
	DD	-304					; fffffed0H
	DD	4
	DD	$LN39@parse
	DD	-328					; fffffeb8H
	DD	4
	DD	$LN40@parse
$LN40@parse:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN39@parse:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN38@parse:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN37@parse:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN36@parse:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z$0:
	lea	ecx, DWORD PTR _ten$44694[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-536]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@DecimalFormat@icu_56@@ABEXABVUnicodeString@2@AAVFormattable@2@AAVParsePosition@2@PA_W@Z ENDP ; icu_56::DecimalFormat::parse
PUBLIC	__$ArrayPad$
EXTRN	__imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_??1ParsePosition@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0ParsePosition@icu_56@@QAE@H@Z:PROC
EXTRN	?toString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::AffixPattern::toString
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
_TEXT	SEGMENT
tv324 = -1136						; size = 4
tv225 = -1136						; size = 4
$T54466 = -1125						; size = 1
_i$44762 = -924						; size = 4
_result$ = -909						; size = 1
_tmpDigitList_2$ = -900					; size = 112
_tmpPos_2$ = -780					; size = 12
_tmpStatus_2$ = -757					; size = 1
_i$44751 = -748						; size = 4
_result$44748 = -733					; size = 1
_tmpDigitList$44747 = -724				; size = 112
_tmpPos$44746 = -604					; size = 12
_tmpStatus$44745 = -581					; size = 1
_affixPtn$44743 = -572					; size = 4
_valueTok$44742 = -560					; size = 4
_element$ = -548					; size = 4
_pos$ = -536						; size = 4
_i$44732 = -524						; size = 4
_found$ = -509						; size = 1
_tmpDigitList$ = -500					; size = 112
_tmpPos$ = -380						; size = 12
_tmpStatus$ = -357					; size = 1
_maxErrorPos$ = -348					; size = 4
_maxPosIndex$ = -336					; size = 4
_origPos$ = -324					; size = 4
_negativeSuffix$ = -312					; size = 64
_negativePrefix$ = -240					; size = 64
_positiveSuffix$ = -168					; size = 64
_positivePrefix$ = -96					; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_parsePosition$ = 12					; size = 4
_digits$ = 16						; size = 4
_status$ = 20						; size = 4
_currency$ = 24						; size = 4
?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z PROC ; icu_56::DecimalFormat::parseForCurrency, COMDAT
; _this$ = ecx
; Line 1044
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1124				; 00000464H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1136]
	mov	ecx, 281				; 00000119H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1045
	mov	esi, esp
	lea	ecx, DWORD PTR _positivePrefix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1046
	mov	esi, esp
	lea	ecx, DWORD PTR _positiveSuffix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1047
	mov	esi, esp
	lea	ecx, DWORD PTR _negativePrefix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1048
	mov	esi, esp
	lea	ecx, DWORD PTR _negativeSuffix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1049
	lea	eax, DWORD PTR _positivePrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 152				; 00000098H
	call	?toString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toString
; Line 1050
	lea	eax, DWORD PTR _positiveSuffix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 424				; 000001a8H
	call	?toString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toString
; Line 1051
	lea	eax, DWORD PTR _negativePrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 288				; 00000120H
	call	?toString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toString
; Line 1052
	lea	eax, DWORD PTR _negativeSuffix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 560				; 00000230H
	call	?toString@AffixPattern@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::AffixPattern::toString
; Line 1054
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _origPos$[ebp], eax
; Line 1055
	mov	eax, DWORD PTR _origPos$[ebp]
	mov	DWORD PTR _maxPosIndex$[ebp], eax
; Line 1056
	mov	DWORD PTR _maxErrorPos$[ebp], -1
; Line 1062
	mov	esi, esp
	mov	eax, DWORD PTR _origPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1063
	lea	ecx, DWORD PTR _tmpDigitList$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1065
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+368], 11			; 0000000bH
	jne	SHORT $LN24@parseForCu
; Line 1070
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpStatus$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmpDigitList$[ebp]
	push	edx
	lea	eax, DWORD PTR _tmpPos$[ebp]
	push	eax
	push	1
	push	1
	lea	ecx, DWORD PTR _positiveSuffix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _positivePrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR _negativeSuffix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _negativePrefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
	mov	BYTE PTR _found$[ebp], al
; Line 1071
	jmp	SHORT $LN23@parseForCu
$LN24@parseForCu:
; Line 1076
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpStatus$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmpDigitList$[ebp]
	push	edx
	lea	eax, DWORD PTR _tmpPos$[ebp]
	push	eax
	push	0
	push	1
	lea	ecx, DWORD PTR _positiveSuffix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _positivePrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR _negativeSuffix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _negativePrefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
	mov	BYTE PTR _found$[ebp], al
$LN23@parseForCu:
; Line 1078
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	je	$LN22@parseForCu
; Line 1079
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _maxPosIndex$[ebp]
	jle	SHORT $LN21@parseForCu
; Line 1080
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _maxPosIndex$[ebp], eax
; Line 1081
	mov	DWORD PTR _i$44732[ebp], 0
	jmp	SHORT $LN20@parseForCu
$LN19@parseForCu:
	mov	eax, DWORD PTR _i$44732[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44732[ebp], eax
$LN20@parseForCu:
	cmp	DWORD PTR _i$44732[ebp], 1
	jge	SHORT $LN18@parseForCu
; Line 1082
	mov	eax, DWORD PTR _status$[ebp]
	add	eax, DWORD PTR _i$44732[ebp]
	mov	ecx, DWORD PTR _i$44732[ebp]
	mov	dl, BYTE PTR _tmpStatus$[ebp+ecx]
	mov	BYTE PTR [eax], dl
; Line 1083
	jmp	SHORT $LN19@parseForCu
$LN18@parseForCu:
; Line 1084
	lea	eax, DWORD PTR _tmpDigitList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
$LN21@parseForCu:
; Line 1086
	jmp	SHORT $LN17@parseForCu
$LN22@parseForCu:
; Line 1087
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _maxErrorPos$[ebp], eax
$LN17@parseForCu:
; Line 1091
	mov	DWORD PTR _pos$[ebp], -1
; Line 1092
	mov	DWORD PTR _element$[ebp], 0
$LN16@parseForCu:
; Line 1093
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+372]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN15@parseForCu
; Line 1094
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$44742[ebp], ecx
; Line 1095
	mov	eax, DWORD PTR _valueTok$44742[ebp]
	mov	DWORD PTR _affixPtn$44743[ebp], eax
; Line 1097
	mov	esi, esp
	mov	eax, DWORD PTR _origPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1098
	lea	ecx, DWORD PTR _tmpDigitList$44747[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1111
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpStatus$44745[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmpDigitList$44747[ebp]
	push	edx
	lea	eax, DWORD PTR _tmpPos$44746[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPtn$44743[ebp]
	movzx	edx, BYTE PTR [ecx+256]
	push	edx
	push	1
	mov	eax, DWORD PTR _affixPtn$44743[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	mov	ecx, DWORD PTR _affixPtn$44743[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	mov	edx, DWORD PTR _affixPtn$44743[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _affixPtn$44743[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
	mov	BYTE PTR _result$44748[ebp], al
; Line 1112
	movsx	eax, BYTE PTR _result$44748[ebp]
	test	eax, eax
	je	$LN14@parseForCu
; Line 1113
	mov	BYTE PTR _found$[ebp], 1
; Line 1114
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _maxPosIndex$[ebp]
	jle	SHORT $LN13@parseForCu
; Line 1115
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _maxPosIndex$[ebp], eax
; Line 1116
	mov	DWORD PTR _i$44751[ebp], 0
	jmp	SHORT $LN12@parseForCu
$LN11@parseForCu:
	mov	eax, DWORD PTR _i$44751[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44751[ebp], eax
$LN12@parseForCu:
	cmp	DWORD PTR _i$44751[ebp], 1
	jge	SHORT $LN10@parseForCu
; Line 1117
	mov	eax, DWORD PTR _status$[ebp]
	add	eax, DWORD PTR _i$44751[ebp]
	mov	ecx, DWORD PTR _i$44751[ebp]
	mov	dl, BYTE PTR _tmpStatus$44745[ebp+ecx]
	mov	BYTE PTR [eax], dl
; Line 1118
	jmp	SHORT $LN11@parseForCu
$LN10@parseForCu:
; Line 1119
	lea	eax, DWORD PTR _tmpDigitList$44747[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
$LN13@parseForCu:
; Line 1121
	jmp	SHORT $LN9@parseForCu
$LN14@parseForCu:
; Line 1123
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _maxErrorPos$[ebp]
	jle	SHORT $LN27@parseForCu
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv225[ebp], eax
	jmp	SHORT $LN28@parseForCu
$LN27@parseForCu:
	mov	eax, DWORD PTR _maxErrorPos$[ebp]
	mov	DWORD PTR tv225[ebp], eax
$LN28@parseForCu:
	mov	ecx, DWORD PTR tv225[ebp]
	mov	DWORD PTR _maxErrorPos$[ebp], ecx
$LN9@parseForCu:
; Line 1125
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _tmpDigitList$44747[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@parseForCu
$LN15@parseForCu:
; Line 1141
	mov	esi, esp
	mov	eax, DWORD PTR _origPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 1142
	lea	ecx, DWORD PTR _tmpDigitList_2$[ebp]
	call	??0DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 1152
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpStatus_2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tmpDigitList_2$[ebp]
	push	edx
	lea	eax, DWORD PTR _tmpPos_2$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 2196				; 00000894H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	add	ecx, 2044				; 000007fcH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2500				; 000009c4H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	add	ecx, 2348				; 0000092cH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	push	eax
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ; icu_56::DecimalFormat::subparse
	mov	BYTE PTR _result$[ebp], al
; Line 1153
	movsx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	je	$LN8@parseForCu
; Line 1154
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _maxPosIndex$[ebp]
	jle	SHORT $LN7@parseForCu
; Line 1155
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _maxPosIndex$[ebp], eax
; Line 1156
	mov	DWORD PTR _i$44762[ebp], 0
	jmp	SHORT $LN6@parseForCu
$LN5@parseForCu:
	mov	eax, DWORD PTR _i$44762[ebp]
	add	eax, 1
	mov	DWORD PTR _i$44762[ebp], eax
$LN6@parseForCu:
	cmp	DWORD PTR _i$44762[ebp], 1
	jge	SHORT $LN4@parseForCu
; Line 1157
	mov	eax, DWORD PTR _status$[ebp]
	add	eax, DWORD PTR _i$44762[ebp]
	mov	ecx, DWORD PTR _i$44762[ebp]
	mov	dl, BYTE PTR _tmpStatus_2$[ebp+ecx]
	mov	BYTE PTR [eax], dl
; Line 1158
	jmp	SHORT $LN5@parseForCu
$LN4@parseForCu:
; Line 1159
	lea	eax, DWORD PTR _tmpDigitList_2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	call	??4DigitList@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::DigitList::operator=
$LN7@parseForCu:
; Line 1161
	mov	BYTE PTR _found$[ebp], 1
; Line 1162
	jmp	SHORT $LN3@parseForCu
$LN8@parseForCu:
; Line 1164
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _maxErrorPos$[ebp]
	jle	SHORT $LN29@parseForCu
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_?getErrorIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv324[ebp], eax
	jmp	SHORT $LN30@parseForCu
$LN29@parseForCu:
	mov	eax, DWORD PTR _maxErrorPos$[ebp]
	mov	DWORD PTR tv324[ebp], eax
$LN30@parseForCu:
	mov	ecx, DWORD PTR tv324[ebp]
	mov	DWORD PTR _maxErrorPos$[ebp], ecx
$LN3@parseForCu:
; Line 1167
	movsx	eax, BYTE PTR _found$[ebp]
	test	eax, eax
	jne	SHORT $LN2@parseForCu
; Line 1169
	mov	esi, esp
	mov	eax, DWORD PTR _maxErrorPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1170
	jmp	SHORT $LN1@parseForCu
$LN2@parseForCu:
; Line 1171
	mov	esi, esp
	mov	eax, DWORD PTR _maxPosIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1172
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@parseForCu:
; Line 1174
	mov	al, BYTE PTR _found$[ebp]
	mov	BYTE PTR $T54466[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _tmpDigitList_2$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _tmpDigitList$[ebp]
	call	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _negativeSuffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _negativePrefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _positiveSuffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _positivePrefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54466[ebp]
; Line 1175
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN58@parseForCu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1136				; 00000470H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN58@parseForCu:
	DD	15					; 0000000fH
	DD	$LN57@parseForCu
$LN57@parseForCu:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN41@parseForCu
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN42@parseForCu
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN43@parseForCu
	DD	-312					; fffffec8H
	DD	64					; 00000040H
	DD	$LN44@parseForCu
	DD	-357					; fffffe9bH
	DD	1
	DD	$LN45@parseForCu
	DD	-380					; fffffe84H
	DD	12					; 0000000cH
	DD	$LN46@parseForCu
	DD	-500					; fffffe0cH
	DD	112					; 00000070H
	DD	$LN47@parseForCu
	DD	-536					; fffffde8H
	DD	4
	DD	$LN48@parseForCu
	DD	-560					; fffffdd0H
	DD	4
	DD	$LN49@parseForCu
	DD	-581					; fffffdbbH
	DD	1
	DD	$LN50@parseForCu
	DD	-604					; fffffda4H
	DD	12					; 0000000cH
	DD	$LN51@parseForCu
	DD	-724					; fffffd2cH
	DD	112					; 00000070H
	DD	$LN52@parseForCu
	DD	-757					; fffffd0bH
	DD	1
	DD	$LN53@parseForCu
	DD	-780					; fffffcf4H
	DD	12					; 0000000cH
	DD	$LN54@parseForCu
	DD	-900					; fffffc7cH
	DD	112					; 00000070H
	DD	$LN55@parseForCu
$LN55@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	50					; 00000032H
	DB	0
$LN54@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	50					; 00000032H
	DB	0
$LN53@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	50					; 00000032H
	DB	0
$LN52@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN51@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN50@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN49@parseForCu:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN48@parseForCu:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN47@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN46@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN45@parseForCu:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN44@parseForCu:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN43@parseForCu:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN42@parseForCu:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN41@parseForCu:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _positivePrefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _positiveSuffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _negativePrefix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _negativeSuffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$5:
	lea	ecx, DWORD PTR _tmpDigitList$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos$44746[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$7:
	lea	ecx, DWORD PTR _tmpDigitList$44747[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _tmpPos_2$[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$9:
	lea	ecx, DWORD PTR _tmpDigitList_2$[ebp]
	jmp	??1DigitList@icu_56@@QAE@XZ		; icu_56::DigitList::~DigitList
__ehhandler$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseForCurrency@DecimalFormat@icu_56@@ABECABVUnicodeString@2@AAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ENDP ; icu_56::DecimalFormat::parseForCurrency
PUBLIC	?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::isDecimalPatternMatchRequired
PUBLIC	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
PUBLIC	?matchDecimal@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H@Z ; icu_56::DecimalFormat::matchDecimal
PUBLIC	?matchGrouping@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H0H@Z ; icu_56::DecimalFormat::matchGrouping
PUBLIC	??_C@_08KEBCLIFP@Infinity?$AA@			; `string'
PUBLIC	?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ; icu_56::DecimalFormat::compareAffix
PUBLIC	__$ArrayPad$
EXTRN	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z:PROC ; icu_56::DigitList::set
EXTRN	__imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEHH@Z:PROC
EXTRN	__imp_??AUnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z:PROC
EXTRN	?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z:PROC ; icu_56::DecimalFormatStaticSets::getSimilarDecimals
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp_?clear@CharString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	_u_isdigit_56:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ:PROC ; icu_56::DecimalFormatImpl::isParseFastpath
EXTRN	?isGroupingUsed@NumberFormat@icu_56@@QBECXZ:PROC ; icu_56::NumberFormat::isGroupingUsed
;	COMDAT ??_C@_08KEBCLIFP@Infinity?$AA@
CONST	SEGMENT
??_C@_08KEBCLIFP@Infinity?$AA@ DB 'Infinity', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$1
__ehfuncinfo$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
_TEXT	SEGMENT
tv750 = -1152						; size = 4
tv751 = -1148						; size = 4
tv394 = -1148						; size = 4
tv374 = -1148						; size = 4
tv185 = -1148						; size = 4
tv771 = -1145						; size = 1
$T54505 = -1137						; size = 1
$T54508 = -1128						; size = 8
$T54511 = -1109						; size = 1
$T54512 = -1097						; size = 1
$T54513 = -1085						; size = 1
$T54514 = -1073						; size = 1
$T54522 = -1061						; size = 1
$T54523 = -1049						; size = 1
$T54524 = -1040						; size = 8
$T54525 = -1021						; size = 1
$T54526 = -1009						; size = 1
$T54527 = -997						; size = 1
_negSuffixMatch$44967 = -796				; size = 4
_posSuffixMatch$44966 = -784				; size = 4
_sawExponentDigit$44941 = -769				; size = 1
_exponentSign$44936 = -757				; size = 1
_pos$44935 = -748					; size = 4
_tmp$44933 = -736					; size = 4
_ch$44895 = -724					; size = 4
_integerDigitCount$44891 = -712				; size = 4
_digitCount$44890 = -700				; size = 4
_groupingSet$44885 = -688				; size = 4
_decimalSet$44884 = -676				; size = 4
_digit$44883 = -664					; size = 4
_backup$44882 = -652					; size = 4
_sawDigit$44881 = -637					; size = 1
_sawGroupingChar$44880 = -628				; size = 4
_sawGrouping$44879 = -613				; size = 1
_sawDecimalChar$44878 = -604				; size = 4
_sawDecimal$44877 = -589				; size = 1
_decimalCharLength$44875 = -580				; size = 4
_decimalStringLength$44874 = -568			; size = 4
_decimalChar$44873 = -556				; size = 4
_decimalString$44870 = -544				; size = 4
_gs2$44869 = -532					; size = 4
_digitStart$44868 = -520				; size = 4
_lastGroup$44867 = -508					; size = 4
_strictFail$44866 = -493				; size = 1
_infLen$44861 = -484					; size = 4
_inf$44860 = -472					; size = 4
_negMatch$44846 = -460					; size = 4
_posMatch$44845 = -448					; size = 4
_formatWidth$44843 = -436				; size = 4
_formatPattern$ = -424					; size = 64
_digit$44821 = -352					; size = 4
_decimalCount$44809 = -340				; size = 4
_lookForGroup$44808 = -328				; size = 4
_intOnly$44807 = -313					; size = 1
_decimalChar$44806 = -304				; size = 4
_decimalString$44805 = -292				; size = 4
_ch$44804 = -280					; size = 4
_digitCount$44803 = -268				; size = 4
_l$44802 = -256						; size = 4
_j$44801 = -244						; size = 4
_fastParseOk$ = -229					; size = 1
_groupingUsed$ = -217					; size = 1
_groupingCharLength$ = -208				; size = 4
_groupingStringLength$ = -196				; size = 4
_groupingChar$ = -184					; size = 4
_groupingString$ = -172					; size = 4
_zero$ = -160						; size = 4
_strictParse$ = -145					; size = 1
_textLength$ = -136					; size = 4
_oldStart$ = -124					; size = 4
_position$ = -112					; size = 4
_parsedNum$ = -100					; size = 56
_err$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
_negPrefix$ = 12					; size = 4
_negSuffix$ = 16					; size = 4
_posPrefix$ = 20					; size = 4
_posSuffix$ = 24					; size = 4
_complexCurrencyParsing$ = 28				; size = 1
_type$ = 32						; size = 1
_parsePosition$ = 36					; size = 4
_digits$ = 40						; size = 4
_status$ = 44						; size = 4
_currency$ = 48						; size = 4
?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z PROC ; icu_56::DecimalFormat::subparse, COMDAT
; _this$ = ecx
; Line 1208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1140				; 00000474H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1152]
	mov	ecx, 285				; 0000011dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1212
	mov	DWORD PTR _err$[ebp], 0
; Line 1213
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1214
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?setToZero@DigitList@icu_56@@QAEXXZ	; icu_56::DigitList::setToZero
; Line 1216
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _position$[ebp], eax
; Line 1217
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR _oldStart$[ebp], eax
; Line 1218
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textLength$[ebp], eax
; Line 1219
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	sete	dl
	mov	BYTE PTR _strictParse$[ebp], dl
; Line 1220
	mov	esi, esp
	push	0
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	ecx, eax
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _zero$[ebp], eax
; Line 1223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	neg	edx
	sbb	edx, edx
	and	edx, 16					; 00000010H
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _groupingString$[ebp], eax
; Line 1224
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _groupingString$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _groupingChar$[ebp], eax
; Line 1225
	mov	esi, esp
	mov	ecx, DWORD PTR _groupingString$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _groupingStringLength$[ebp], eax
; Line 1226
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _groupingChar$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _groupingCharLength$[ebp], ecx
; Line 1227
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isGroupingUsed@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isGroupingUsed
	mov	BYTE PTR _groupingUsed$[ebp], al
; Line 1240
	mov	BYTE PTR _fastParseOk$[ebp], 0
; Line 1249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?isParseFastpath@DecimalFormatImpl@icu_56@@ABECXZ ; icu_56::DecimalFormatImpl::isParseFastpath
	movsx	ecx, al
	test	ecx, ecx
	je	$LN96@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	jne	$LN96@subparse
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN96@subparse
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 32					; 00000020H
	jge	$LN96@subparse
	cmp	DWORD PTR _posPrefix$[ebp], 0
	je	SHORT $LN123@subparse
	mov	esi, esp
	mov	ecx, DWORD PTR _posPrefix$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN96@subparse
$LN123@subparse:
	cmp	DWORD PTR _posSuffix$[ebp], 0
	je	SHORT $LN122@subparse
	mov	esi, esp
	mov	ecx, DWORD PTR _posSuffix$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN96@subparse
$LN122@subparse:
	mov	eax, 1
	test	eax, eax
	je	$LN96@subparse
; Line 1250
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR _j$44801[ebp], eax
; Line 1251
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _l$44802[ebp], eax
; Line 1252
	mov	DWORD PTR _digitCount$44803[ebp], 0
; Line 1253
	mov	esi, esp
	mov	eax, DWORD PTR _j$44801[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$44804[ebp], eax
; Line 1254
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _decimalString$44805[ebp], eax
; Line 1255
	mov	DWORD PTR _decimalChar$44806[ebp], 0
; Line 1256
	mov	BYTE PTR _intOnly$44807[ebp], 0
; Line 1257
	movsx	eax, BYTE PTR _groupingUsed$[ebp]
	test	eax, eax
	je	SHORT $LN127@subparse
	movsx	ecx, BYTE PTR _intOnly$44807[ebp]
	test	ecx, ecx
	je	SHORT $LN127@subparse
	movsx	edx, BYTE PTR _strictParse$[ebp]
	test	edx, edx
	je	SHORT $LN127@subparse
	mov	eax, DWORD PTR _groupingChar$[ebp]
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN128@subparse
$LN127@subparse:
	mov	DWORD PTR tv185[ebp], 0
$LN128@subparse:
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR _lookForGroup$44808[ebp], ecx
; Line 1259
	mov	esi, esp
	push	3
	push	0
	mov	ecx, DWORD PTR _decimalString$44805[ebp]
	call	DWORD PTR __imp_?countChar32@UnicodeString@icu_56@@QBEHHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decimalCount$44809[ebp], eax
; Line 1260
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isParseIntegerOnly
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN121@subparse
; Line 1261
	mov	DWORD PTR _decimalChar$44806[ebp], 0
; Line 1262
	mov	BYTE PTR _intOnly$44807[ebp], 1
	jmp	SHORT $LN120@subparse
$LN121@subparse:
; Line 1263
	cmp	DWORD PTR _decimalCount$44809[ebp], 1
	jne	SHORT $LN119@subparse
; Line 1264
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _decimalString$44805[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decimalChar$44806[ebp], eax
	jmp	SHORT $LN120@subparse
$LN119@subparse:
; Line 1265
	cmp	DWORD PTR _decimalCount$44809[ebp], 0
	jne	SHORT $LN117@subparse
; Line 1266
	mov	DWORD PTR _decimalChar$44806[ebp], 0
; Line 1267
	jmp	SHORT $LN120@subparse
$LN117@subparse:
; Line 1268
	mov	eax, DWORD PTR _l$44802[ebp]
	add	eax, 1
	mov	DWORD PTR _j$44801[ebp], eax
$LN120@subparse:
; Line 1277
	cmp	DWORD PTR _ch$44804[ebp], 45		; 0000002dH
	jne	SHORT $LN115@subparse
; Line 1278
	mov	eax, DWORD PTR _l$44802[ebp]
	add	eax, 1
	mov	DWORD PTR _j$44801[ebp], eax
; Line 1285
	jmp	SHORT $LN113@subparse
$LN115@subparse:
; Line 1286
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	43					; 0000002bH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN113@subparse:
; Line 1288
	mov	eax, DWORD PTR _j$44801[ebp]
	cmp	eax, DWORD PTR _l$44802[ebp]
	jge	$LN112@subparse
; Line 1289
	mov	eax, DWORD PTR _ch$44804[ebp]
	sub	eax, DWORD PTR _zero$[ebp]
	mov	DWORD PTR _digit$44821[ebp], eax
; Line 1290
	js	SHORT $LN111@subparse
	cmp	DWORD PTR _digit$44821[ebp], 9
	jg	SHORT $LN111@subparse
; Line 1291
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digit$44821[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1292
	cmp	DWORD PTR _digitCount$44803[ebp], 0
	jg	SHORT $LN109@subparse
	cmp	DWORD PTR _digit$44821[ebp], 0
	jne	SHORT $LN109@subparse
	mov	eax, DWORD PTR _l$44802[ebp]
	sub	eax, 1
	cmp	DWORD PTR _j$44801[ebp], eax
	jne	SHORT $LN110@subparse
$LN109@subparse:
; Line 1293
	mov	eax, DWORD PTR _digitCount$44803[ebp]
	add	eax, 1
	mov	DWORD PTR _digitCount$44803[ebp], eax
$LN110@subparse:
; Line 1294
	jmp	$LN108@subparse
$LN111@subparse:
; Line 1295
	cmp	DWORD PTR _ch$44804[ebp], 0
	jne	SHORT $LN107@subparse
; Line 1296
	mov	DWORD PTR _digitCount$44803[ebp], -1
; Line 1297
	jmp	$LN112@subparse
	jmp	SHORT $LN108@subparse
$LN107@subparse:
; Line 1298
	mov	eax, DWORD PTR _ch$44804[ebp]
	cmp	eax, DWORD PTR _decimalChar$44806[ebp]
	jne	SHORT $LN105@subparse
; Line 1299
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	46					; 0000002eH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1300
	mov	DWORD PTR _decimalChar$44806[ebp], 0
	jmp	SHORT $LN108@subparse
$LN105@subparse:
; Line 1302
	mov	eax, DWORD PTR _ch$44804[ebp]
	cmp	eax, DWORD PTR _lookForGroup$44808[ebp]
	jne	SHORT $LN103@subparse
	jmp	SHORT $LN108@subparse
$LN103@subparse:
; Line 1304
	movsx	eax, BYTE PTR _intOnly$44807[ebp]
	test	eax, eax
	je	SHORT $LN101@subparse
	cmp	DWORD PTR _lookForGroup$44808[ebp], 0
	je	SHORT $LN101@subparse
	mov	eax, DWORD PTR _ch$44804[ebp]
	push	eax
	call	_u_isdigit_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN101@subparse
; Line 1306
	jmp	SHORT $LN108@subparse
$LN101@subparse:
; Line 1307
	mov	DWORD PTR _digitCount$44803[ebp], -1
; Line 1308
	jmp	SHORT $LN112@subparse
$LN108@subparse:
; Line 1310
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ch$44804[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _j$44801[ebp]
	mov	DWORD PTR _j$44801[ebp], ecx
; Line 1311
	mov	esi, esp
	mov	eax, DWORD PTR _j$44801[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$44804[ebp], eax
; Line 1312
	jmp	$LN113@subparse
$LN112@subparse:
; Line 1315
	mov	eax, DWORD PTR _j$44801[ebp]
	cmp	eax, DWORD PTR _l$44802[ebp]
	je	SHORT $LN98@subparse
	movsx	eax, BYTE PTR _intOnly$44807[ebp]
	test	eax, eax
	je	SHORT $LN99@subparse
$LN98@subparse:
	cmp	DWORD PTR _digitCount$44803[ebp], 0
	jle	SHORT $LN99@subparse
; Line 1316
	mov	BYTE PTR _fastParseOk$[ebp], 1
; Line 1324
	mov	eax, DWORD PTR _j$44801[ebp]
	mov	DWORD PTR _position$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1325
	mov	eax, DWORD PTR _status$[ebp]
	mov	BYTE PTR [eax], 0
; Line 1327
	jmp	SHORT $LN96@subparse
$LN99@subparse:
; Line 1332
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?clear@CharString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN96@subparse:
; Line 1344
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1345
	mov	esi, esp
	lea	eax, DWORD PTR _formatPattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1351
	movsx	eax, BYTE PTR _fastParseOk$[ebp]
	test	eax, eax
	jne	$LN95@subparse
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+380], 1
	je	$LN95@subparse
; Line 1353
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getOldFormatWidth@DecimalFormatImpl@icu_56@@ABEHXZ ; icu_56::DecimalFormatImpl::getOldFormatWidth
	mov	DWORD PTR _formatWidth$44843[ebp], eax
; Line 1355
	cmp	DWORD PTR _formatWidth$44843[ebp], 0
	jle	SHORT $LN94@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 0
	jne	SHORT $LN94@subparse
; Line 1356
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _position$[ebp], eax
$LN94@subparse:
; Line 1360
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _complexCurrencyParsing$[ebp]
	push	edx
	mov	eax, DWORD PTR _posPrefix$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ; icu_56::DecimalFormat::compareAffix
	mov	DWORD PTR _posMatch$44845[ebp], eax
; Line 1361
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _complexCurrencyParsing$[ebp]
	push	edx
	mov	eax, DWORD PTR _negPrefix$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ; icu_56::DecimalFormat::compareAffix
	mov	DWORD PTR _negMatch$44846[ebp], eax
; Line 1362
	cmp	DWORD PTR _posMatch$44845[ebp], 0
	jl	SHORT $LN93@subparse
	cmp	DWORD PTR _negMatch$44846[ebp], 0
	jl	SHORT $LN93@subparse
; Line 1363
	mov	eax, DWORD PTR _posMatch$44845[ebp]
	cmp	eax, DWORD PTR _negMatch$44846[ebp]
	jle	SHORT $LN92@subparse
; Line 1364
	mov	DWORD PTR _negMatch$44846[ebp], -1
	jmp	SHORT $LN93@subparse
$LN92@subparse:
; Line 1365
	mov	eax, DWORD PTR _negMatch$44846[ebp]
	cmp	eax, DWORD PTR _posMatch$44845[ebp]
	jle	SHORT $LN93@subparse
; Line 1366
	mov	DWORD PTR _posMatch$44845[ebp], -1
$LN93@subparse:
; Line 1369
	cmp	DWORD PTR _posMatch$44845[ebp], 0
	jl	SHORT $LN89@subparse
; Line 1370
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _posMatch$44845[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1371
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	43					; 0000002bH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN88@subparse
$LN89@subparse:
; Line 1372
	cmp	DWORD PTR _negMatch$44846[ebp], 0
	jl	SHORT $LN87@subparse
; Line 1373
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _negMatch$44846[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1374
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	45					; 0000002dH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN88@subparse
$LN87@subparse:
; Line 1375
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN85@subparse
; Line 1376
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1377
	mov	BYTE PTR $T54505[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54505[ebp]
	jmp	$LN125@subparse
; Line 1378
	jmp	SHORT $LN88@subparse
$LN85@subparse:
; Line 1380
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	43					; 0000002bH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN88@subparse:
; Line 1384
	cmp	DWORD PTR _formatWidth$44843[ebp], 0
	jle	SHORT $LN83@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 1
	jne	SHORT $LN83@subparse
; Line 1385
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _position$[ebp], eax
$LN83@subparse:
; Line 1388
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	jne	SHORT $LN82@subparse
; Line 1389
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
	add	esp, 8
	mov	DWORD PTR _position$[ebp], eax
$LN82@subparse:
; Line 1393
	push	14					; 0000000eH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _inf$44860[ebp], eax
; Line 1395
	mov	esi, esp
	mov	eax, DWORD PTR _inf$44860[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _inf$44860[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN129@subparse
	mov	DWORD PTR tv374[ebp], 0
	jmp	SHORT $LN130@subparse
$LN129@subparse:
	mov	esi, esp
	mov	ecx, DWORD PTR _inf$44860[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv374[ebp], eax
$LN130@subparse:
	mov	eax, DWORD PTR tv374[ebp]
	mov	DWORD PTR _infLen$44861[ebp], eax
; Line 1396
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _infLen$44861[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1397
	cmp	DWORD PTR _infLen$44861[ebp], 0
	setne	al
	mov	ecx, DWORD PTR _status$[ebp]
	mov	BYTE PTR [ecx], al
; Line 1399
	cmp	DWORD PTR _infLen$44861[ebp], 0
	je	SHORT $LN81@subparse
; Line 1400
	mov	esi, esp
	push	OFFSET ??_C@_08KEBCLIFP@Infinity?$AA@
	lea	ecx, DWORD PTR $T54508[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T54508[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1401
	jmp	$LN80@subparse
$LN81@subparse:
; Line 1410
	mov	BYTE PTR _strictFail$44866[ebp], 0
; Line 1411
	mov	DWORD PTR _lastGroup$44867[ebp], -1
; Line 1412
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR _digitStart$44868[ebp], eax
; Line 1413
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+1412], 0
	jne	SHORT $LN131@subparse
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+1408]
	mov	DWORD PTR tv394[ebp], ecx
	jmp	SHORT $LN132@subparse
$LN131@subparse:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+360]
	mov	ecx, DWORD PTR [eax+1412]
	mov	DWORD PTR tv394[ebp], ecx
$LN132@subparse:
	mov	edx, DWORD PTR tv394[ebp]
	mov	DWORD PTR _gs2$44869[ebp], edx
; Line 1416
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	je	SHORT $LN79@subparse
; Line 1417
	push	10					; 0000000aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _decimalString$44870[ebp], eax
; Line 1418
	jmp	SHORT $LN78@subparse
$LN79@subparse:
; Line 1419
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _decimalString$44870[ebp], eax
$LN78@subparse:
; Line 1421
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _decimalString$44870[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decimalChar$44873[ebp], eax
; Line 1422
	mov	esi, esp
	mov	ecx, DWORD PTR _decimalString$44870[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decimalStringLength$44874[ebp], eax
; Line 1423
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _decimalChar$44873[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _decimalCharLength$44875[ebp], ecx
; Line 1425
	mov	BYTE PTR _sawDecimal$44877[ebp], 0
; Line 1426
	mov	DWORD PTR _sawDecimalChar$44878[ebp], 65535 ; 0000ffffH
; Line 1427
	mov	BYTE PTR _sawGrouping$44879[ebp], 0
; Line 1428
	mov	DWORD PTR _sawGroupingChar$44880[ebp], 65535 ; 0000ffffH
; Line 1429
	mov	BYTE PTR _sawDigit$44881[ebp], 0
; Line 1430
	mov	DWORD PTR _backup$44882[ebp], -1
; Line 1434
	mov	DWORD PTR _decimalSet$44884[ebp], 0
; Line 1435
	mov	DWORD PTR _groupingSet$44885[ebp], 0
; Line 1437
	mov	eax, DWORD PTR _decimalCharLength$44875[ebp]
	cmp	eax, DWORD PTR _decimalStringLength$44874[ebp]
	jne	SHORT $LN77@subparse
; Line 1438
	movzx	eax, BYTE PTR _strictParse$[ebp]
	push	eax
	mov	ecx, DWORD PTR _decimalChar$44873[ebp]
	push	ecx
	call	?getSimilarDecimals@DecimalFormatStaticSets@icu_56@@SAPBVUnicodeSet@2@HC@Z ; icu_56::DecimalFormatStaticSets::getSimilarDecimals
	add	esp, 8
	mov	DWORD PTR _decimalSet$44884[ebp], eax
$LN77@subparse:
; Line 1441
	mov	eax, DWORD PTR _groupingCharLength$[ebp]
	cmp	eax, DWORD PTR _groupingStringLength$[ebp]
	jne	SHORT $LN76@subparse
; Line 1442
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN75@subparse
; Line 1443
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _groupingSet$44885[ebp], edx
; Line 1444
	jmp	SHORT $LN76@subparse
$LN75@subparse:
; Line 1445
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _groupingSet$44885[ebp], edx
$LN76@subparse:
; Line 1455
	mov	DWORD PTR _digitCount$44890[ebp], 0
; Line 1456
	mov	DWORD PTR _integerDigitCount$44891[ebp], 0
$LN73@subparse:
; Line 1458
	mov	eax, DWORD PTR _position$[ebp]
	cmp	eax, DWORD PTR _textLength$[ebp]
	jge	$LN72@subparse
; Line 1460
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$44895[ebp], eax
; Line 1473
	mov	eax, DWORD PTR _ch$44895[ebp]
	sub	eax, DWORD PTR _zero$[ebp]
	mov	DWORD PTR _digit$44883[ebp], eax
; Line 1474
	js	SHORT $LN70@subparse
	cmp	DWORD PTR _digit$44883[ebp], 9
	jle	SHORT $LN71@subparse
$LN70@subparse:
; Line 1476
	mov	eax, DWORD PTR _ch$44895[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	mov	DWORD PTR _digit$44883[ebp], eax
$LN71@subparse:
; Line 1481
	cmp	DWORD PTR _digit$44883[ebp], 0
	jl	SHORT $LN68@subparse
	cmp	DWORD PTR _digit$44883[ebp], 9
	jle	$LN69@subparse
$LN68@subparse:
	mov	eax, DWORD PTR _zero$[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	test	eax, eax
	je	$LN69@subparse
; Line 1482
	mov	DWORD PTR _digit$44883[ebp], 0
; Line 1483
	mov	esi, esp
	push	0
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	ecx, eax
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _ch$44895[ebp]
	jne	SHORT $LN67@subparse
; Line 1484
	jmp	$LN72@subparse
$LN67@subparse:
; Line 1486
	mov	DWORD PTR _digit$44883[ebp], 1
	jmp	SHORT $LN66@subparse
$LN65@subparse:
	mov	eax, DWORD PTR _digit$44883[ebp]
	add	eax, 1
	mov	DWORD PTR _digit$44883[ebp], eax
$LN66@subparse:
	cmp	DWORD PTR _digit$44883[ebp], 10		; 0000000aH
	jge	SHORT $LN69@subparse
; Line 1487
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _digit$44883[ebp]
	add	eax, 17					; 00000011H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	ecx, eax
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _ch$44895[ebp]
	jne	SHORT $LN63@subparse
; Line 1488
	jmp	SHORT $LN69@subparse
$LN63@subparse:
; Line 1490
	jmp	SHORT $LN65@subparse
$LN69@subparse:
; Line 1493
	cmp	DWORD PTR _digit$44883[ebp], 0
	jl	$LN62@subparse
	cmp	DWORD PTR _digit$44883[ebp], 9
	jg	$LN62@subparse
; Line 1495
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN61@subparse
	cmp	DWORD PTR _backup$44882[ebp], -1
	je	SHORT $LN61@subparse
; Line 1502
	cmp	DWORD PTR _lastGroup$44867[ebp], -1
	je	SHORT $LN58@subparse
	mov	eax, DWORD PTR _backup$44882[ebp]
	sub	eax, DWORD PTR _lastGroup$44867[ebp]
	sub	eax, 1
	cmp	eax, DWORD PTR _gs2$44869[ebp]
	jne	SHORT $LN59@subparse
$LN58@subparse:
	cmp	DWORD PTR _lastGroup$44867[ebp], -1
	jne	SHORT $LN60@subparse
	mov	eax, DWORD PTR _position$[ebp]
	sub	eax, DWORD PTR _digitStart$44868[ebp]
	sub	eax, 1
	cmp	eax, DWORD PTR _gs2$44869[ebp]
	jle	SHORT $LN60@subparse
$LN59@subparse:
; Line 1503
	mov	BYTE PTR _strictFail$44866[ebp], 1
; Line 1504
	jmp	$LN72@subparse
$LN60@subparse:
; Line 1507
	mov	eax, DWORD PTR _backup$44882[ebp]
	mov	DWORD PTR _lastGroup$44867[ebp], eax
$LN61@subparse:
; Line 1511
	mov	DWORD PTR _backup$44882[ebp], -1
; Line 1512
	mov	BYTE PTR _sawDigit$44881[ebp], 1
; Line 1515
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digit$44883[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1518
	cmp	DWORD PTR _digit$44883[ebp], 0
	jg	SHORT $LN56@subparse
	cmp	DWORD PTR _digitCount$44890[ebp], 0
	jg	SHORT $LN56@subparse
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	je	SHORT $LN57@subparse
$LN56@subparse:
; Line 1519
	mov	eax, DWORD PTR _digitCount$44890[ebp]
	add	eax, 1
	mov	DWORD PTR _digitCount$44890[ebp], eax
; Line 1522
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	jne	SHORT $LN57@subparse
; Line 1523
	mov	eax, DWORD PTR _integerDigitCount$44891[ebp]
	add	eax, 1
	mov	DWORD PTR _integerDigitCount$44891[ebp], eax
$LN57@subparse:
; Line 1527
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ch$44895[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR _position$[ebp], ecx
; Line 1529
	jmp	$LN54@subparse
$LN62@subparse:
; Line 1532
	cmp	DWORD PTR _groupingStringLength$[ebp], 0
	jle	$LN53@subparse
	mov	eax, DWORD PTR _ch$44895[ebp]
	push	eax
	mov	ecx, DWORD PTR _decimalSet$44884[ebp]
	push	ecx
	mov	edx, DWORD PTR _decimalChar$44873[ebp]
	push	edx
	mov	eax, DWORD PTR _groupingSet$44885[ebp]
	push	eax
	mov	ecx, DWORD PTR _sawGroupingChar$44880[ebp]
	push	ecx
	movzx	edx, BYTE PTR _sawGrouping$44879[ebp]
	push	edx
	mov	eax, DWORD PTR _groupingChar$[ebp]
	push	eax
	call	?matchGrouping@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H0H@Z ; icu_56::DecimalFormat::matchGrouping
	add	esp, 28					; 0000001cH
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN53@subparse
	movsx	eax, BYTE PTR _groupingUsed$[ebp]
	test	eax, eax
	je	SHORT $LN53@subparse
; Line 1534
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	je	SHORT $LN52@subparse
; Line 1535
	jmp	$LN72@subparse
$LN52@subparse:
; Line 1538
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN51@subparse
; Line 1539
	movsx	eax, BYTE PTR _sawDigit$44881[ebp]
	test	eax, eax
	je	SHORT $LN49@subparse
	cmp	DWORD PTR _backup$44882[ebp], -1
	je	SHORT $LN51@subparse
$LN49@subparse:
; Line 1541
	mov	BYTE PTR _strictFail$44866[ebp], 1
; Line 1542
	jmp	$LN72@subparse
$LN51@subparse:
; Line 1549
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR _backup$44882[ebp], eax
; Line 1550
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _groupingStringLength$[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1551
	mov	BYTE PTR _sawGrouping$44879[ebp], 1
; Line 1553
	mov	eax, DWORD PTR _ch$44895[ebp]
	mov	DWORD PTR _sawGroupingChar$44880[ebp], eax
	jmp	$LN54@subparse
$LN53@subparse:
; Line 1555
	mov	eax, DWORD PTR _ch$44895[ebp]
	push	eax
	mov	ecx, DWORD PTR _decimalSet$44884[ebp]
	push	ecx
	mov	edx, DWORD PTR _sawDecimalChar$44878[ebp]
	push	edx
	movzx	eax, BYTE PTR _sawDecimal$44877[ebp]
	push	eax
	mov	ecx, DWORD PTR _decimalChar$44873[ebp]
	push	ecx
	call	?matchDecimal@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H@Z ; icu_56::DecimalFormat::matchDecimal
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	$LN47@subparse
; Line 1557
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN46@subparse
; Line 1559
	cmp	DWORD PTR _backup$44882[ebp], -1
	jne	SHORT $LN44@subparse
	cmp	DWORD PTR _lastGroup$44867[ebp], -1
	je	SHORT $LN46@subparse
	mov	eax, DWORD PTR _position$[ebp]
	sub	eax, DWORD PTR _lastGroup$44867[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	ecx, DWORD PTR [edx+1408]
	add	ecx, 1
	cmp	eax, ecx
	je	SHORT $LN46@subparse
$LN44@subparse:
; Line 1560
	mov	BYTE PTR _strictFail$44866[ebp], 1
; Line 1561
	jmp	$LN72@subparse
$LN46@subparse:
; Line 1567
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isParseIntegerOnly
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN42@subparse
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	je	SHORT $LN43@subparse
$LN42@subparse:
; Line 1568
	jmp	$LN72@subparse
$LN43@subparse:
; Line 1571
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	46					; 0000002eH
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1572
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _decimalStringLength$44874[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1573
	mov	BYTE PTR _sawDecimal$44877[ebp], 1
; Line 1575
	mov	eax, DWORD PTR _ch$44895[ebp]
	mov	DWORD PTR _sawDecimalChar$44878[ebp], eax
; Line 1578
	jmp	$LN54@subparse
$LN47@subparse:
; Line 1581
	push	4097					; 00001001H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
	test	eax, eax
	je	SHORT $LN39@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN40@subparse
$LN39@subparse:
; Line 1583
	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _tmp$44933[ebp], eax
; Line 1585
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _tmp$44933[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	$LN38@subparse
; Line 1588
	mov	esi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR _pos$44935[ebp], eax
; Line 1589
	mov	BYTE PTR _exponentSign$44936[ebp], 43	; 0000002bH
; Line 1591
	mov	eax, DWORD PTR _pos$44935[ebp]
	cmp	eax, DWORD PTR _textLength$[ebp]
	jge	$LN37@subparse
; Line 1593
	push	7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _tmp$44933[ebp], eax
; Line 1594
	mov	esi, esp
	mov	eax, DWORD PTR _tmp$44933[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pos$44935[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN36@subparse
; Line 1596
	mov	esi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _pos$44935[ebp]
	mov	DWORD PTR _pos$44935[ebp], eax
; Line 1598
	jmp	SHORT $LN37@subparse
$LN36@subparse:
; Line 1599
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _tmp$44933[ebp], eax
; Line 1600
	mov	esi, esp
	mov	eax, DWORD PTR _tmp$44933[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pos$44935[ebp]
	push	ecx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN37@subparse
; Line 1602
	mov	BYTE PTR _exponentSign$44936[ebp], 45	; 0000002dH
; Line 1603
	mov	esi, esp
	mov	ecx, DWORD PTR _tmp$44933[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _pos$44935[ebp]
	mov	DWORD PTR _pos$44935[ebp], eax
$LN37@subparse:
; Line 1608
	mov	BYTE PTR _sawExponentDigit$44941[ebp], 0
$LN33@subparse:
; Line 1609
	mov	eax, DWORD PTR _pos$44935[ebp]
	cmp	eax, DWORD PTR _textLength$[ebp]
	jge	$LN32@subparse
; Line 1610
	mov	esi, esp
	mov	eax, DWORD PTR _pos$44935[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??AUnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	mov	DWORD PTR _ch$44895[ebp], ecx
; Line 1611
	mov	eax, DWORD PTR _ch$44895[ebp]
	sub	eax, DWORD PTR _zero$[ebp]
	mov	DWORD PTR _digit$44883[ebp], eax
; Line 1613
	js	SHORT $LN30@subparse
	cmp	DWORD PTR _digit$44883[ebp], 9
	jle	SHORT $LN31@subparse
$LN30@subparse:
; Line 1614
	mov	eax, DWORD PTR _ch$44895[ebp]
	push	eax
	call	_u_charDigitValue_56
	add	esp, 4
	mov	DWORD PTR _digit$44883[ebp], eax
$LN31@subparse:
; Line 1616
	cmp	DWORD PTR _digit$44883[ebp], 0
	jl	$LN29@subparse
	cmp	DWORD PTR _digit$44883[ebp], 9
	jg	SHORT $LN29@subparse
; Line 1617
	movsx	eax, BYTE PTR _sawExponentDigit$44941[ebp]
	test	eax, eax
	jne	SHORT $LN28@subparse
; Line 1618
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	69					; 00000045H
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1619
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _exponentSign$44936[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1620
	mov	BYTE PTR _sawExponentDigit$44941[ebp], 1
$LN28@subparse:
; Line 1622
	mov	eax, DWORD PTR _pos$44935[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$44935[ebp], eax
; Line 1623
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digit$44883[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1624
	jmp	SHORT $LN27@subparse
$LN29@subparse:
; Line 1625
	jmp	SHORT $LN32@subparse
$LN27@subparse:
; Line 1627
	jmp	$LN33@subparse
$LN32@subparse:
; Line 1629
	movsx	eax, BYTE PTR _sawExponentDigit$44941[ebp]
	test	eax, eax
	je	SHORT $LN26@subparse
; Line 1630
	mov	eax, DWORD PTR _pos$44935[ebp]
	mov	DWORD PTR _position$[ebp], eax
$LN26@subparse:
; Line 1633
	jmp	SHORT $LN72@subparse
; Line 1634
	jmp	SHORT $LN25@subparse
$LN38@subparse:
; Line 1635
	jmp	SHORT $LN72@subparse
$LN25@subparse:
; Line 1637
	jmp	SHORT $LN54@subparse
$LN40@subparse:
; Line 1638
	jmp	SHORT $LN72@subparse
$LN54@subparse:
; Line 1641
	jmp	$LN73@subparse
$LN72@subparse:
; Line 1644
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	jne	$LN23@subparse
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::isDecimalPatternMatchRequired
	movsx	eax, al
	test	eax, eax
	je	$LN23@subparse
; Line 1646
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN23@subparse
; Line 1648
	mov	esi, esp
	mov	eax, DWORD PTR _oldStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1649
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1651
	mov	BYTE PTR $T54511[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54511[ebp]
	jmp	$LN125@subparse
$LN23@subparse:
; Line 1655
	cmp	DWORD PTR _backup$44882[ebp], -1
	je	SHORT $LN21@subparse
; Line 1657
	mov	eax, DWORD PTR _backup$44882[ebp]
	mov	DWORD PTR _position$[ebp], eax
$LN21@subparse:
; Line 1660
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN20@subparse
	movsx	eax, BYTE PTR _sawDecimal$44877[ebp]
	test	eax, eax
	jne	SHORT $LN20@subparse
; Line 1661
	cmp	DWORD PTR _lastGroup$44867[ebp], -1
	je	SHORT $LN20@subparse
	mov	eax, DWORD PTR _position$[ebp]
	sub	eax, DWORD PTR _lastGroup$44867[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	ecx, DWORD PTR [edx+1408]
	add	ecx, 1
	cmp	eax, ecx
	je	SHORT $LN20@subparse
; Line 1662
	mov	BYTE PTR _strictFail$44866[ebp], 1
$LN20@subparse:
; Line 1666
	movsx	eax, BYTE PTR _strictFail$44866[ebp]
	test	eax, eax
	je	SHORT $LN18@subparse
; Line 1669
	mov	esi, esp
	mov	eax, DWORD PTR _oldStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1670
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1672
	mov	BYTE PTR $T54512[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54512[ebp]
	jmp	$LN125@subparse
$LN18@subparse:
; Line 1681
	movsx	eax, BYTE PTR _sawDigit$44881[ebp]
	test	eax, eax
	jne	SHORT $LN80@subparse
	cmp	DWORD PTR _digitCount$44890[ebp], 0
	jne	SHORT $LN80@subparse
; Line 1686
	mov	esi, esp
	mov	eax, DWORD PTR _oldStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1687
	mov	esi, esp
	mov	eax, DWORD PTR _oldStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1688
	mov	BYTE PTR $T54513[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54513[ebp]
	jmp	$LN125@subparse
$LN80@subparse:
; Line 1693
	cmp	DWORD PTR _formatWidth$44843[ebp], 0
	jle	SHORT $LN16@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 2
	jne	SHORT $LN16@subparse
; Line 1694
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _position$[ebp], eax
$LN16@subparse:
; Line 1697
	mov	DWORD PTR _posSuffixMatch$44966[ebp], -1
	mov	DWORD PTR _negSuffixMatch$44967[ebp], -1
; Line 1700
	cmp	DWORD PTR _posMatch$44845[ebp], 0
	jge	SHORT $LN14@subparse
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	jne	SHORT $LN15@subparse
	cmp	DWORD PTR _negMatch$44846[ebp], 0
	jge	SHORT $LN15@subparse
$LN14@subparse:
; Line 1701
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _complexCurrencyParsing$[ebp]
	push	edx
	mov	eax, DWORD PTR _posSuffix$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ; icu_56::DecimalFormat::compareAffix
	mov	DWORD PTR _posSuffixMatch$44966[ebp], eax
$LN15@subparse:
; Line 1703
	cmp	DWORD PTR _negMatch$44846[ebp], 0
	jl	SHORT $LN13@subparse
; Line 1704
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _complexCurrencyParsing$[ebp]
	push	edx
	mov	eax, DWORD PTR _negSuffix$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _position$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ; icu_56::DecimalFormat::compareAffix
	mov	DWORD PTR _negSuffixMatch$44967[ebp], eax
$LN13@subparse:
; Line 1706
	cmp	DWORD PTR _posSuffixMatch$44966[ebp], 0
	jl	SHORT $LN12@subparse
	cmp	DWORD PTR _negSuffixMatch$44967[ebp], 0
	jl	SHORT $LN12@subparse
; Line 1707
	mov	eax, DWORD PTR _posSuffixMatch$44966[ebp]
	cmp	eax, DWORD PTR _negSuffixMatch$44967[ebp]
	jle	SHORT $LN11@subparse
; Line 1708
	mov	DWORD PTR _negSuffixMatch$44967[ebp], -1
	jmp	SHORT $LN12@subparse
$LN11@subparse:
; Line 1709
	mov	eax, DWORD PTR _negSuffixMatch$44967[ebp]
	cmp	eax, DWORD PTR _posSuffixMatch$44966[ebp]
	jle	SHORT $LN12@subparse
; Line 1710
	mov	DWORD PTR _posSuffixMatch$44966[ebp], -1
$LN12@subparse:
; Line 1715
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	je	SHORT $LN8@subparse
	xor	eax, eax
	cmp	DWORD PTR _posSuffixMatch$44966[ebp], 0
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _negSuffixMatch$44967[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN8@subparse
; Line 1716
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1718
	mov	BYTE PTR $T54514[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54514[ebp]
	jmp	$LN125@subparse
$LN8@subparse:
; Line 1721
	cmp	DWORD PTR _posSuffixMatch$44966[ebp], 0
	jl	SHORT $LN135@subparse
	mov	eax, DWORD PTR _posSuffixMatch$44966[ebp]
	mov	DWORD PTR tv751[ebp], eax
	jmp	SHORT $LN136@subparse
$LN135@subparse:
	cmp	DWORD PTR _negSuffixMatch$44967[ebp], 0
	jl	SHORT $LN133@subparse
	mov	ecx, DWORD PTR _negSuffixMatch$44967[ebp]
	mov	DWORD PTR tv750[ebp], ecx
	jmp	SHORT $LN134@subparse
$LN133@subparse:
	mov	DWORD PTR tv750[ebp], 0
$LN134@subparse:
	mov	edx, DWORD PTR tv750[ebp]
	mov	DWORD PTR tv751[ebp], edx
$LN136@subparse:
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR tv751[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1724
	cmp	DWORD PTR _formatWidth$44843[ebp], 0
	jle	SHORT $LN7@subparse
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+2652], 3
	jne	SHORT $LN7@subparse
; Line 1725
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPadding
	mov	DWORD PTR _position$[ebp], eax
$LN7@subparse:
; Line 1728
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1730
	cmp	DWORD PTR _posSuffixMatch$44966[ebp], 0
	jge	SHORT $LN138@subparse
	movsx	eax, BYTE PTR _strictParse$[ebp]
	test	eax, eax
	jne	SHORT $LN137@subparse
	cmp	DWORD PTR _negMatch$44846[ebp], 0
	jge	SHORT $LN137@subparse
	cmp	DWORD PTR _negSuffixMatch$44967[ebp], 0
	jl	SHORT $LN138@subparse
$LN137@subparse:
	mov	BYTE PTR tv771[ebp], 45			; 0000002dH
	jmp	SHORT $LN139@subparse
$LN138@subparse:
	mov	BYTE PTR tv771[ebp], 43			; 0000002bH
$LN139@subparse:
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	cl, BYTE PTR tv771[ebp]
	mov	BYTE PTR [eax], cl
$LN95@subparse:
; Line 1735
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _oldStart$[ebp]
	jne	SHORT $LN6@subparse
; Line 1740
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1741
	mov	BYTE PTR $T54522[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54522[ebp]
	jmp	$LN125@subparse
	jmp	$LN5@subparse
$LN6@subparse:
; Line 1744
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+380], 1
	jne	SHORT $LN5@subparse
	mov	esi, esp
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _textLength$[ebp]
	je	SHORT $LN5@subparse
; Line 1749
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1750
	mov	BYTE PTR $T54523[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54523[ebp]
	jmp	$LN125@subparse
$LN5@subparse:
; Line 1759
	push	0
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR $T54524[ebp]
	push	ecx
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _digits$[ebp]
	call	?set@DigitList@icu_56@@QAEXABVStringPiece@2@AAW4UErrorCode@@I@Z ; icu_56::DigitList::set
; Line 1761
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@subparse
; Line 1765
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1766
	mov	BYTE PTR $T54525[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54525[ebp]
	jmp	$LN125@subparse
$LN3@subparse:
; Line 1770
	movsx	eax, BYTE PTR _fastParseOk$[ebp]
	test	eax, eax
	je	$LN2@subparse
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::isDecimalPatternMatchRequired
	movsx	eax, al
	test	eax, eax
	je	$LN2@subparse
; Line 1772
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@subparse
; Line 1774
	mov	esi, esp
	mov	eax, DWORD PTR _oldStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1775
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parsePosition$[ebp]
	call	DWORD PTR __imp_?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1777
	mov	BYTE PTR $T54526[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54526[ebp]
	jmp	SHORT $LN125@subparse
$LN2@subparse:
; Line 1782
	mov	BYTE PTR $T54527[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T54527[ebp]
$LN125@subparse:
; Line 1783
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN147@subparse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1152				; 00000480H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
	npad	3
$LN147@subparse:
	DD	3
	DD	$LN146@subparse
$LN146@subparse:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN142@subparse
	DD	-100					; ffffff9cH
	DD	56					; 00000038H
	DD	$LN143@subparse
	DD	-424					; fffffe58H
	DD	64					; 00000040H
	DD	$LN144@subparse
$LN144@subparse:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
$LN143@subparse:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN142@subparse:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _parsedNum$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _formatPattern$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?subparse@DecimalFormat@icu_56@@ABECABVUnicodeString@2@PBV32@111CCAAVParsePosition@2@AAVDigitList@2@PACPA_W@Z ENDP ; icu_56::DecimalFormat::subparse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_padLen$ = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_position$ = 12						; size = 4
?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z PROC ; icu_56::DecimalFormat::skipPadding, COMDAT
; _this$ = ecx
; Line 1790
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1791
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	edx, 65535				; 0000ffffH
	cmp	edx, DWORD PTR [ecx+2656]
	sbb	eax, eax
	neg	eax
	add	eax, 1
	mov	DWORD PTR _padLen$[ebp], eax
$LN2@skipPaddin:
; Line 1793
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _position$[ebp], eax
	jge	SHORT $LN1@skipPaddin
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	cmp	eax, DWORD PTR [edx+2656]
	jne	SHORT $LN1@skipPaddin
; Line 1794
	mov	eax, DWORD PTR _position$[ebp]
	add	eax, DWORD PTR _padLen$[ebp]
	mov	DWORD PTR _position$[ebp], eax
; Line 1795
	jmp	SHORT $LN2@skipPaddin
$LN1@skipPaddin:
; Line 1796
	mov	eax, DWORD PTR _position$[ebp]
; Line 1797
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?skipPadding@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@H@Z ENDP ; icu_56::DecimalFormat::skipPadding
_TEXT	ENDS
PUBLIC	?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z ; icu_56::DecimalFormat::compareSimpleAffix
PUBLIC	?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z ; icu_56::DecimalFormat::compareComplexAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z
_TEXT	SEGMENT
_patternToCompare$ = -20				; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
_isNegative$ = 16					; size = 1
_isPrefix$ = 20						; size = 1
_affixPat$ = 24						; size = 4
_complexCurrencyParsing$ = 28				; size = 1
_type$ = 32						; size = 1
_currency$ = 36						; size = 4
?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z PROC ; icu_56::DecimalFormat::compareAffix, COMDAT
; _this$ = ecx
; Line 1825
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1828
	cmp	DWORD PTR _currency$[ebp], 0
	jne	SHORT $LN8@compareAff
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	je	SHORT $LN9@compareAff
	movsx	eax, BYTE PTR _complexCurrencyParsing$[ebp]
	test	eax, eax
	je	SHORT $LN9@compareAff
$LN8@compareAff:
; Line 1830
	cmp	DWORD PTR _affixPat$[ebp], 0
	je	SHORT $LN9@compareAff
; Line 1831
	mov	eax, DWORD PTR _currency$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z ; icu_56::DecimalFormat::compareComplexAffix
	jmp	$LN10@compareAff
$LN9@compareAff:
; Line 1835
	movsx	eax, BYTE PTR _isNegative$[ebp]
	test	eax, eax
	je	SHORT $LN6@compareAff
; Line 1836
	movsx	eax, BYTE PTR _isPrefix$[ebp]
	test	eax, eax
	je	SHORT $LN5@compareAff
; Line 1837
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2348				; 0000092cH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	DWORD PTR _patternToCompare$[ebp], eax
; Line 1839
	jmp	SHORT $LN4@compareAff
$LN5@compareAff:
; Line 1840
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2500				; 000009c4H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	DWORD PTR _patternToCompare$[ebp], eax
$LN4@compareAff:
; Line 1843
	jmp	SHORT $LN3@compareAff
$LN6@compareAff:
; Line 1844
	movsx	eax, BYTE PTR _isPrefix$[ebp]
	test	eax, eax
	je	SHORT $LN2@compareAff
; Line 1845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2044				; 000007fcH
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	DWORD PTR _patternToCompare$[ebp], eax
; Line 1847
	jmp	SHORT $LN3@compareAff
$LN2@compareAff:
; Line 1848
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	add	ecx, 2196				; 00000894H
	call	?getOtherVariant@PluralAffix@icu_56@@QBEABVDigitAffix@2@XZ ; icu_56::PluralAffix::getOtherVariant
	mov	ecx, eax
	call	?toString@DigitAffix@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::DigitAffix::toString
	mov	DWORD PTR _patternToCompare$[ebp], eax
$LN3@compareAff:
; Line 1851
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternToCompare$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z ; icu_56::DecimalFormat::compareSimpleAffix
$LN10@compareAff:
; Line 1852
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?compareAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@HCCPBV32@CCPA_W@Z ENDP ; icu_56::DecimalFormat::compareAffix
_TEXT	ENDS
PUBLIC	??_C@_1CC@LFELAPIO@?$AAf?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ ; `string'
PUBLIC	?__LINE__Var@?1??equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z@4JA ; `icu_56::DecimalFormat::equalWithSignCompatibility'::`2'::__LINE__Var
PUBLIC	?equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z ; icu_56::DecimalFormat::equalWithSignCompatibility
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1CC@LFELAPIO@?$AAf?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LFELAPIO@?$AAf?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, 's', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 'i', 00H, '1', 00H, '8', 00H, 'n', 00H, '\', 00H, 'd', 00H
	DB	'e', 00H, 'c', 00H, 'i', 00H, 'm', 00H, 'f', 00H, 'm', 00H, 't'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z@4JA DD 073eH ; `icu_56::DecimalFormat::equalWithSignCompatibility'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z
_TEXT	SEGMENT
tv152 = -229						; size = 1
_plusSigns$ = -32					; size = 4
_minusSigns$ = -20					; size = 4
_this$ = -8						; size = 4
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
?equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z PROC ; icu_56::DecimalFormat::equalWithSignCompatibility, COMDAT
; _this$ = ecx
; Line 1854
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1855
	mov	eax, DWORD PTR _lhs$[ebp]
	cmp	eax, DWORD PTR _rhs$[ebp]
	jne	SHORT $LN1@equalWithS
; Line 1856
	mov	al, 1
	jmp	$LN2@equalWithS
$LN1@equalWithS:
; Line 1858
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+384], 0
	jne	SHORT $LN4@equalWithS
	mov	ecx, DWORD PTR ?__LINE__Var@?1??equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@LFELAPIO@?$AAf?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@equalWithS:
; Line 1859
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _minusSigns$[ebp], edx
; Line 1860
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _plusSigns$[ebp], edx
; Line 1862
	mov	esi, esp
	mov	eax, DWORD PTR _lhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _minusSigns$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _minusSigns$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@equalWithS
	mov	esi, esp
	mov	edx, DWORD PTR _rhs$[ebp]
	push	edx
	mov	eax, DWORD PTR _minusSigns$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _minusSigns$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@equalWithS
$LN5@equalWithS:
	mov	esi, esp
	mov	edx, DWORD PTR _lhs$[ebp]
	push	edx
	mov	eax, DWORD PTR _plusSigns$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _plusSigns$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@equalWithS
	mov	esi, esp
	mov	edx, DWORD PTR _rhs$[ebp]
	push	edx
	mov	eax, DWORD PTR _plusSigns$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _plusSigns$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@equalWithS
$LN6@equalWithS:
	mov	BYTE PTR tv152[ebp], 0
	jmp	SHORT $LN8@equalWithS
$LN7@equalWithS:
	mov	BYTE PTR tv152[ebp], 1
$LN8@equalWithS:
	mov	al, BYTE PTR tv152[ebp]
$LN2@equalWithS:
; Line 1863
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z ENDP ; icu_56::DecimalFormat::equalWithSignCompatibility
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?trimMarksFromAffix@DecimalFormat@icu_56@@CAAAVUnicodeString@2@ABV32@AAV32@@Z ; icu_56::DecimalFormat::trimMarksFromAffix
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?trimMarksFromAffix@DecimalFormat@icu_56@@CAAAVUnicodeString@2@ABV32@AAV32@@Z
_TEXT	SEGMENT
tv89 = -332						; size = 4
$T54555 = -324						; size = 4
_c$45046 = -120						; size = 2
_trimLen$ = -108					; size = 4
_affixPos$ = -96					; size = 4
_affixLen$ = -84					; size = 4
_trimBuf$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_affix$ = 8						; size = 4
_trimmedAffix$ = 12					; size = 4
?trimMarksFromAffix@DecimalFormat@icu_56@@CAAAVUnicodeString@2@ABV32@AAV32@@Z PROC ; icu_56::DecimalFormat::trimMarksFromAffix, COMDAT
; Line 1869
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1871
	mov	esi, esp
	mov	ecx, DWORD PTR _affix$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _affixLen$[ebp], eax
; Line 1872
	mov	DWORD PTR _trimLen$[ebp], 0
; Line 1874
	mov	DWORD PTR _affixPos$[ebp], 0
	jmp	SHORT $LN6@trimMarksF
$LN5@trimMarksF:
	mov	eax, DWORD PTR _affixPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _affixPos$[ebp], eax
$LN6@trimMarksF:
	mov	eax, DWORD PTR _affixPos$[ebp]
	cmp	eax, DWORD PTR _affixLen$[ebp]
	jge	SHORT $LN4@trimMarksF
; Line 1875
	mov	esi, esp
	mov	eax, DWORD PTR _affixPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affix$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$45046[ebp], ax
; Line 1876
	movzx	eax, WORD PTR _c$45046[ebp]
	cmp	eax, 8206				; 0000200eH
	je	SHORT $LN3@trimMarksF
	movzx	eax, WORD PTR _c$45046[ebp]
	cmp	eax, 8207				; 0000200fH
	je	SHORT $LN3@trimMarksF
	movzx	eax, WORD PTR _c$45046[ebp]
	cmp	eax, 1564				; 0000061cH
	je	SHORT $LN3@trimMarksF
; Line 1877
	cmp	DWORD PTR _trimLen$[ebp], 32		; 00000020H
	jge	SHORT $LN2@trimMarksF
; Line 1878
	mov	eax, DWORD PTR _trimLen$[ebp]
	mov	cx, WORD PTR _c$45046[ebp]
	mov	WORD PTR _trimBuf$[ebp+eax*2], cx
	mov	edx, DWORD PTR _trimLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _trimLen$[ebp], edx
; Line 1879
	jmp	SHORT $LN3@trimMarksF
$LN2@trimMarksF:
; Line 1880
	mov	DWORD PTR _trimLen$[ebp], 0
; Line 1881
	jmp	SHORT $LN4@trimMarksF
$LN3@trimMarksF:
; Line 1884
	jmp	SHORT $LN5@trimMarksF
$LN4@trimMarksF:
; Line 1885
	cmp	DWORD PTR _trimLen$[ebp], 0
	jle	SHORT $LN9@trimMarksF
	mov	esi, esp
	mov	eax, DWORD PTR _trimLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimBuf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN10@trimMarksF
$LN9@trimMarksF:
	mov	esi, esp
	mov	edx, DWORD PTR _affix$[ebp]
	push	edx
	mov	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
$LN10@trimMarksF:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T54555[ebp], eax
	mov	eax, DWORD PTR $T54555[ebp]
; Line 1886
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@trimMarksF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@trimMarksF:
	DD	1
	DD	$LN12@trimMarksF
$LN12@trimMarksF:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN11@trimMarksF
$LN11@trimMarksF:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?trimMarksFromAffix@DecimalFormat@icu_56@@CAAAVUnicodeString@2@ABV32@AAV32@@Z ENDP ; icu_56::DecimalFormat::trimMarksFromAffix
_TEXT	ENDS
PUBLIC	?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpaceAndMarks
PUBLIC	?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPatternWhiteSpace
PUBLIC	?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipBidiMarks
PUBLIC	?__LINE__Var@?1??compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HC@Z@4JA ; `icu_56::DecimalFormat::compareSimpleAffix'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	__imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z:PROC
;	COMDAT ?__LINE__Var@?1??compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HC@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HC@Z@4JA DD 076dH ; `icu_56::DecimalFormat::compareSimpleAffix'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z$0
__ehfuncinfo$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z
_TEXT	SEGMENT
$T54565 = -636						; size = 4
$T54566 = -624						; size = 4
$T54567 = -612						; size = 4
$T54568 = -600						; size = 4
$T54569 = -588						; size = 4
$T54570 = -576						; size = 4
$T54571 = -564						; size = 4
$T54572 = -552						; size = 4
_ic$45129 = -348					; size = 4
_c$45128 = -336						; size = 4
_i$45122 = -324						; size = 4
_ic$45118 = -312					; size = 4
_match$45116 = -297					; size = 1
_ic$45107 = -288					; size = 4
_match$45103 = -273					; size = 1
_s$45099 = -264						; size = 4
_ic$45090 = -252					; size = 4
_literalMatch$45086 = -237				; size = 1
_len$45083 = -228					; size = 4
_c$45082 = -216						; size = 4
_i$45078 = -204						; size = 4
_ic$45074 = -192					; size = 4
_status$ = -180						; size = 4
_affixSet$ = -168					; size = 4
_affixCharLength$ = -156				; size = 4
_inputLength$ = -144					; size = 4
_affixLength$ = -132					; size = 4
_affixChar$ = -120					; size = 4
_trimmedAffix$ = -108					; size = 64
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_affix$ = 8						; size = 4
_input$ = 12						; size = 4
_pos$ = 16						; size = 4
_lenient$ = 20						; size = 1
?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z PROC ; icu_56::DecimalFormat::compareSimpleAffix, COMDAT
; _this$ = ecx
; Line 1901
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 628				; 00000274H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-640]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1902
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 1903
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1906
	lea	eax, DWORD PTR _trimmedAffix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affix$[ebp]
	push	ecx
	call	?trimMarksFromAffix@DecimalFormat@icu_56@@CAAAVUnicodeString@2@ABV32@AAV32@@Z ; icu_56::DecimalFormat::trimMarksFromAffix
	add	esp, 8
; Line 1907
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _affixChar$[ebp], eax
; Line 1908
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _affixLength$[ebp], eax
; Line 1909
	mov	esi, esp
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _inputLength$[ebp], eax
; Line 1910
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _affixChar$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _affixCharLength$[ebp], ecx
; Line 1912
	mov	DWORD PTR _status$[ebp], 0
; Line 1914
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+384], 0
	jne	SHORT $LN38@compareSim
	mov	ecx, DWORD PTR ?__LINE__Var@?1??compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HC@Z@4JA
	add	ecx, 13					; 0000000dH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CC@LFELAPIO@?$AAf?$AAS?$AAt?$AAa?$AAt?$AAi?$AAc?$AAS?$AAe?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN38@compareSim:
; Line 1916
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN35@compareSim
; Line 1917
	mov	DWORD PTR $T54565[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54565[ebp]
	jmp	$LN36@compareSim
$LN35@compareSim:
; Line 1919
	movsx	eax, BYTE PTR _lenient$[ebp]
	test	eax, eax
	jne	$LN34@compareSim
; Line 1920
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _affixSet$[ebp], edx
; Line 1925
	mov	eax, DWORD PTR _affixCharLength$[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jne	$LN33@compareSim
	mov	esi, esp
	mov	eax, DWORD PTR _affixChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN33@compareSim
; Line 1926
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ic$45074[ebp], eax
; Line 1927
	mov	esi, esp
	mov	eax, DWORD PTR _ic$45074[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN33@compareSim
; Line 1928
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ic$45074[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 1929
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipBidiMarks
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 1930
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR $T54566[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54566[ebp]
	jmp	$LN36@compareSim
$LN33@compareSim:
; Line 1934
	mov	DWORD PTR _i$45078[ebp], 0
$LN31@compareSim:
	mov	eax, DWORD PTR _i$45078[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jge	$LN30@compareSim
; Line 1935
	mov	esi, esp
	mov	eax, DWORD PTR _i$45078[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45082[ebp], eax
; Line 1936
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45082[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _len$45083[ebp], ecx
; Line 1937
	mov	esi, esp
	mov	eax, DWORD PTR _c$45082[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN29@compareSim
; Line 1944
	mov	BYTE PTR _literalMatch$45086[ebp], 0
$LN28@compareSim:
; Line 1945
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _inputLength$[ebp]
	jge	$LN27@compareSim
; Line 1946
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ic$45090[ebp], eax
; Line 1947
	mov	eax, DWORD PTR _ic$45090[ebp]
	cmp	eax, DWORD PTR _c$45082[ebp]
	jne	$LN26@compareSim
; Line 1948
	mov	BYTE PTR _literalMatch$45086[ebp], 1
; Line 1949
	mov	eax, DWORD PTR _i$45078[ebp]
	add	eax, DWORD PTR _len$45083[ebp]
	mov	DWORD PTR _i$45078[ebp], eax
; Line 1950
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR _len$45083[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 1951
	mov	eax, DWORD PTR _i$45078[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jne	SHORT $LN25@compareSim
; Line 1952
	jmp	$LN27@compareSim
$LN25@compareSim:
; Line 1954
	mov	esi, esp
	mov	eax, DWORD PTR _i$45078[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45082[ebp], eax
; Line 1955
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45082[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _len$45083[ebp], ecx
; Line 1956
	mov	esi, esp
	mov	eax, DWORD PTR _c$45082[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@compareSim
; Line 1957
	jmp	SHORT $LN27@compareSim
$LN24@compareSim:
; Line 1958
	jmp	SHORT $LN23@compareSim
$LN26@compareSim:
; Line 1959
	cmp	DWORD PTR _ic$45090[ebp], 8206		; 0000200eH
	je	SHORT $LN21@compareSim
	cmp	DWORD PTR _ic$45090[ebp], 8207		; 0000200fH
	je	SHORT $LN21@compareSim
	cmp	DWORD PTR _ic$45090[ebp], 1564		; 0000061cH
	jne	SHORT $LN22@compareSim
$LN21@compareSim:
; Line 1960
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1961
	jmp	SHORT $LN23@compareSim
$LN22@compareSim:
; Line 1962
	jmp	SHORT $LN27@compareSim
$LN23@compareSim:
; Line 1964
	jmp	$LN28@compareSim
$LN27@compareSim:
; Line 1967
	mov	eax, DWORD PTR _i$45078[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	push	ecx
	call	?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPatternWhiteSpace
	add	esp, 8
	mov	DWORD PTR _i$45078[ebp], eax
; Line 1972
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _s$45099[ebp], eax
; Line 1973
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 1974
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _s$45099[ebp]
	jne	SHORT $LN19@compareSim
	movsx	eax, BYTE PTR _literalMatch$45086[ebp]
	test	eax, eax
	jne	SHORT $LN19@compareSim
; Line 1975
	mov	DWORD PTR $T54567[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54567[ebp]
	jmp	$LN36@compareSim
$LN19@compareSim:
; Line 1981
	mov	eax, DWORD PTR _i$45078[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	push	ecx
	call	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
	add	esp, 8
	mov	DWORD PTR _i$45078[ebp], eax
; Line 1982
	jmp	$LN18@compareSim
$LN29@compareSim:
; Line 1983
	mov	BYTE PTR _match$45103[ebp], 0
$LN17@compareSim:
; Line 1984
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _inputLength$[ebp]
	jge	$LN16@compareSim
; Line 1985
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ic$45107[ebp], eax
; Line 1986
	movsx	eax, BYTE PTR _match$45103[ebp]
	test	eax, eax
	jne	SHORT $LN15@compareSim
	mov	eax, DWORD PTR _ic$45107[ebp]
	cmp	eax, DWORD PTR _c$45082[ebp]
	jne	SHORT $LN15@compareSim
; Line 1987
	mov	eax, DWORD PTR _i$45078[ebp]
	add	eax, DWORD PTR _len$45083[ebp]
	mov	DWORD PTR _i$45078[ebp], eax
; Line 1988
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR _len$45083[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 1989
	mov	BYTE PTR _match$45103[ebp], 1
	jmp	SHORT $LN14@compareSim
$LN15@compareSim:
; Line 1990
	cmp	DWORD PTR _ic$45107[ebp], 8206		; 0000200eH
	je	SHORT $LN12@compareSim
	cmp	DWORD PTR _ic$45107[ebp], 8207		; 0000200fH
	je	SHORT $LN12@compareSim
	cmp	DWORD PTR _ic$45107[ebp], 1564		; 0000061cH
	jne	SHORT $LN13@compareSim
$LN12@compareSim:
; Line 1991
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 1992
	jmp	SHORT $LN14@compareSim
$LN13@compareSim:
; Line 1993
	jmp	SHORT $LN16@compareSim
$LN14@compareSim:
; Line 1995
	jmp	$LN17@compareSim
$LN16@compareSim:
; Line 1996
	movsx	eax, BYTE PTR _match$45103[ebp]
	test	eax, eax
	jne	SHORT $LN18@compareSim
; Line 1997
	mov	DWORD PTR $T54568[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54568[ebp]
	jmp	$LN36@compareSim
$LN18@compareSim:
; Line 2000
	jmp	$LN31@compareSim
$LN30@compareSim:
	jmp	$LN9@compareSim
$LN34@compareSim:
; Line 2002
	mov	BYTE PTR _match$45116[ebp], 0
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _affixSet$[ebp], edx
; Line 2006
	mov	eax, DWORD PTR _affixCharLength$[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jne	$LN8@compareSim
	mov	esi, esp
	mov	eax, DWORD PTR _affixChar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN8@compareSim
; Line 2007
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpaceAndMarks
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 2008
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ic$45118[ebp], eax
; Line 2010
	mov	esi, esp
	mov	eax, DWORD PTR _ic$45118[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _affixSet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@compareSim
; Line 2011
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ic$45118[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 2012
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipBidiMarks
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 2013
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR $T54569[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54569[ebp]
	jmp	$LN36@compareSim
$LN8@compareSim:
; Line 2017
	mov	DWORD PTR _i$45122[ebp], 0
$LN6@compareSim:
	mov	eax, DWORD PTR _i$45122[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jge	$LN5@compareSim
; Line 2020
	mov	eax, DWORD PTR _i$45122[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	push	ecx
	call	?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpace
	add	esp, 8
	mov	DWORD PTR _i$45122[ebp], eax
; Line 2021
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipUWhiteSpaceAndMarks
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 2023
	mov	eax, DWORD PTR _i$45122[ebp]
	cmp	eax, DWORD PTR _affixLength$[ebp]
	jge	SHORT $LN3@compareSim
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _inputLength$[ebp]
	jl	SHORT $LN4@compareSim
$LN3@compareSim:
; Line 2024
	jmp	$LN5@compareSim
$LN4@compareSim:
; Line 2027
	mov	esi, esp
	mov	eax, DWORD PTR _i$45122[ebp]
	push	eax
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45128[ebp], eax
; Line 2028
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ic$45129[ebp], eax
; Line 2030
	mov	eax, DWORD PTR _c$45128[ebp]
	push	eax
	mov	ecx, DWORD PTR _ic$45129[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equalWithSignCompatibility@DecimalFormat@icu_56@@ABECHH@Z ; icu_56::DecimalFormat::equalWithSignCompatibility
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN2@compareSim
; Line 2031
	mov	DWORD PTR $T54570[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54570[ebp]
	jmp	$LN36@compareSim
$LN2@compareSim:
; Line 2034
	mov	BYTE PTR _match$45116[ebp], 1
; Line 2035
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45128[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$45122[ebp]
	mov	DWORD PTR _i$45122[ebp], ecx
; Line 2036
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ic$45129[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 2037
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipBidiMarks
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 2038
	jmp	$LN6@compareSim
$LN5@compareSim:
; Line 2040
	cmp	DWORD PTR _affixLength$[ebp], 0
	jle	SHORT $LN9@compareSim
	movsx	eax, BYTE PTR _match$45116[ebp]
	test	eax, eax
	jne	SHORT $LN9@compareSim
; Line 2041
	mov	DWORD PTR $T54571[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54571[ebp]
	jmp	SHORT $LN36@compareSim
$LN9@compareSim:
; Line 2044
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR $T54572[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T54572[ebp]
$LN36@compareSim:
; Line 2045
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@compareSim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 640				; 00000280H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN43@compareSim:
	DD	1
	DD	$LN42@compareSim
$LN42@compareSim:
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN40@compareSim
$LN40@compareSim:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _trimmedAffix$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-644]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compareSimpleAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HC@Z ENDP ; icu_56::DecimalFormat::compareSimpleAffix
EXTRN	__imp_?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_s$ = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z PROC ; icu_56::DecimalFormat::skipPatternWhiteSpace, COMDAT
; Line 2051
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2052
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _s$[ebp], eax
; Line 2053
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _pos$[ebp]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	DWORD PTR __imp_?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
; Line 2054
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ENDP ; icu_56::DecimalFormat::skipPatternWhiteSpace
_TEXT	ENDS
EXTRN	_u_isUWhiteSpace_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_c$45150 = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z PROC ; icu_56::DecimalFormat::skipUWhiteSpace, COMDAT
; Line 2060
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@skipUWhite:
; Line 2061
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _pos$[ebp], eax
	jge	SHORT $LN2@skipUWhite
; Line 2062
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45150[ebp], eax
; Line 2063
	mov	eax, DWORD PTR _c$45150[ebp]
	push	eax
	call	_u_isUWhiteSpace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@skipUWhite
; Line 2064
	jmp	SHORT $LN2@skipUWhite
$LN1@skipUWhite:
; Line 2066
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45150[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 2067
	jmp	SHORT $LN3@skipUWhite
$LN2@skipUWhite:
; Line 2068
	mov	eax, DWORD PTR _pos$[ebp]
; Line 2069
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipUWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ENDP ; icu_56::DecimalFormat::skipUWhiteSpace
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_c$45160 = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z PROC ; icu_56::DecimalFormat::skipUWhiteSpaceAndMarks, COMDAT
; Line 2075
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@skipUWhite@2:
; Line 2076
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _pos$[ebp], eax
	jge	SHORT $LN2@skipUWhite@2
; Line 2077
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45160[ebp], eax
; Line 2078
	mov	eax, DWORD PTR _c$45160[ebp]
	push	eax
	call	_u_isUWhiteSpace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@skipUWhite@2
	cmp	DWORD PTR _c$45160[ebp], 8206		; 0000200eH
	je	SHORT $LN1@skipUWhite@2
	cmp	DWORD PTR _c$45160[ebp], 8207		; 0000200fH
	je	SHORT $LN1@skipUWhite@2
	cmp	DWORD PTR _c$45160[ebp], 1564		; 0000061cH
	je	SHORT $LN1@skipUWhite@2
; Line 2079
	jmp	SHORT $LN2@skipUWhite@2
$LN1@skipUWhite@2:
; Line 2081
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45160[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 2082
	jmp	SHORT $LN3@skipUWhite@2
$LN2@skipUWhite@2:
; Line 2083
	mov	eax, DWORD PTR _pos$[ebp]
; Line 2084
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipUWhiteSpaceAndMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ENDP ; icu_56::DecimalFormat::skipUWhiteSpaceAndMarks
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z
_TEXT	SEGMENT
_c$45170 = -8						; size = 2
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z PROC ; icu_56::DecimalFormat::skipBidiMarks, COMDAT
; Line 2089
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@skipBidiMa:
; Line 2090
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _pos$[ebp], eax
	jge	SHORT $LN2@skipBidiMa
; Line 2091
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$45170[ebp], ax
; Line 2092
	movzx	eax, WORD PTR _c$45170[ebp]
	cmp	eax, 8206				; 0000200eH
	je	SHORT $LN1@skipBidiMa
	movzx	eax, WORD PTR _c$45170[ebp]
	cmp	eax, 8207				; 0000200fH
	je	SHORT $LN1@skipBidiMa
	movzx	eax, WORD PTR _c$45170[ebp]
	cmp	eax, 1564				; 0000061cH
	je	SHORT $LN1@skipBidiMa
; Line 2093
	jmp	SHORT $LN2@skipBidiMa
$LN1@skipBidiMa:
; Line 2095
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 2096
	jmp	SHORT $LN3@skipBidiMa
$LN2@skipBidiMa:
; Line 2097
	mov	eax, DWORD PTR _pos$[ebp]
; Line 2098
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?skipBidiMarks@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ENDP ; icu_56::DecimalFormat::skipBidiMarks
_TEXT	ENDS
PUBLIC	?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::DecimalFormat::match
PUBLIC	?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H0@Z ; icu_56::DecimalFormat::match
PUBLIC	??_C@_1CO@BMEHNNKI@?$AAi?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAf?$AAf?$AAi?$AAx?$AAP?$AAa?$AAt?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@GGNMCHEG@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAo?$AAn?$AAe?$AAt?$AAa?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?1??compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HCPA_W@Z@4JA ; `icu_56::DecimalFormat::compareComplexAffix'::`2'::__LINE__Var
PUBLIC	__$ArrayPad$
EXTRN	_u_strncmp_56:PROC
EXTRN	_u_strcpy_56:PROC
EXTRN	_uprv_parseCurrency_56:PROC
EXTRN	?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ:PROC ; icu_56::CurrencyPluralInfo::getLocale
;	COMDAT ??_C@_1CO@BMEHNNKI@?$AAi?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAf?$AAf?$AAi?$AAx?$AAP?$AAa?$AAt?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@BMEHNNKI@?$AAi?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAf?$AAf?$AAi?$AAx?$AAP?$AAa?$AAt?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'i'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'a', 00H, 'f', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, 'P', 00H, 'a', 00H, 't', 00H, '.'
	DB	00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	'(', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@GGNMCHEG@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAo?$AAn?$AAe?$AAt?$AAa?$AAr@
CONST	SEGMENT
??_C@_1EE@GGNMCHEG@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAo?$AAn?$AAe?$AAt?$AAa?$AAr@ DB 'c'
	DB	00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H
	DB	'y', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, '|', 00H, '|', 00H, ' ', 00H, 'f', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, '-', 00H, '>', 00H, 'f', 00H, 'M', 00H, 'o'
	DB	00H, 'n', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HCPA_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HCPA_W@Z@4JA DD 0845H ; `icu_56::DecimalFormat::compareComplexAffix'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z$0
__ehfuncinfo$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z
_TEXT	SEGMENT
tv131 = -372						; size = 4
tv150 = -369						; size = 1
tv139 = -369						; size = 1
_effectiveCurr$45215 = -172				; size = 8
_ec$45211 = -156					; size = 4
_curr$45210 = -144					; size = 8
_ppos$45209 = -128					; size = 12
_loc$45208 = -108					; size = 4
_plural$45205 = -93					; size = 1
_intl$45202 = -81					; size = 1
_affix$45195 = -72					; size = 4
_c$45188 = -60						; size = 4
_i$45184 = -48						; size = 4
_start$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_affixPat$ = 8						; size = 4
_text$ = 12						; size = 4
_pos$ = 16						; size = 4
_type$ = 20						; size = 1
_currency$ = 24						; size = 4
?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z PROC ; icu_56::DecimalFormat::compareComplexAffix, COMDAT
; _this$ = ecx
; Line 2117
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2118
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 2119
	cmp	DWORD PTR _currency$[ebp], 0
	jne	SHORT $LN25@compareCom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	jne	SHORT $LN25@compareCom
	mov	eax, DWORD PTR ?__LINE__Var@?1??compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HCPA_W@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1EE@GGNMCHEG@?$AAc?$AAu?$AAr?$AAr?$AAe?$AAn?$AAc?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAo?$AAn?$AAe?$AAt?$AAa?$AAr@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@compareCom:
; Line 2121
	mov	DWORD PTR _i$45184[ebp], 0
$LN22@compareCom:
; Line 2122
	mov	esi, esp
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$45184[ebp], eax
	jge	$LN21@compareCom
	cmp	DWORD PTR _pos$[ebp], 0
	jl	$LN21@compareCom
; Line 2123
	mov	esi, esp
	mov	eax, DWORD PTR _i$45184[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45188[ebp], eax
; Line 2124
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45188[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$45184[ebp]
	mov	DWORD PTR _i$45184[ebp], ecx
; Line 2126
	cmp	DWORD PTR _c$45188[ebp], 39		; 00000027H
	jne	$LN20@compareCom
; Line 2127
	mov	esi, esp
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$45184[ebp], eax
	jle	SHORT $LN26@compareCom
	mov	eax, DWORD PTR ?__LINE__Var@?1??compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@3@0HCPA_W@Z@4JA
	add	eax, 10					; 0000000aH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1CO@BMEHNNKI@?$AAi?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAf?$AAf?$AAi?$AAx?$AAP?$AAa?$AAt?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@compareCom:
; Line 2128
	mov	esi, esp
	mov	eax, DWORD PTR _i$45184[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$45188[ebp], eax
; Line 2129
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$45188[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$45184[ebp]
	mov	DWORD PTR _i$45184[ebp], ecx
; Line 2131
	mov	DWORD PTR _affix$45195[ebp], 0
; Line 2133
	mov	eax, DWORD PTR _c$45188[ebp]
	mov	DWORD PTR tv131[ebp], eax
	cmp	DWORD PTR tv131[ebp], 45		; 0000002dH
	jg	SHORT $LN31@compareCom
	cmp	DWORD PTR tv131[ebp], 45		; 0000002dH
	je	$LN4@compareCom
	cmp	DWORD PTR tv131[ebp], 37		; 00000025H
	je	$LN7@compareCom
	cmp	DWORD PTR tv131[ebp], 43		; 0000002bH
	je	$LN5@compareCom
	jmp	$LN18@compareCom
$LN31@compareCom:
	cmp	DWORD PTR tv131[ebp], 164		; 000000a4H
	je	SHORT $LN17@compareCom
	cmp	DWORD PTR tv131[ebp], 8240		; 00002030H
	je	$LN6@compareCom
	jmp	$LN18@compareCom
$LN17@compareCom:
; Line 2141
	mov	esi, esp
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$45184[ebp], eax
	jge	SHORT $LN27@compareCom
	mov	esi, esp
	mov	eax, DWORD PTR _i$45184[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 164				; 000000a4H
	jne	SHORT $LN27@compareCom
	mov	BYTE PTR tv139[ebp], 1
	jmp	SHORT $LN28@compareCom
$LN27@compareCom:
	mov	BYTE PTR tv139[ebp], 0
$LN28@compareCom:
	mov	cl, BYTE PTR tv139[ebp]
	mov	BYTE PTR _intl$45202[ebp], cl
; Line 2142
	movsx	eax, BYTE PTR _intl$45202[ebp]
	test	eax, eax
	je	SHORT $LN16@compareCom
; Line 2143
	mov	eax, DWORD PTR _i$45184[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45184[ebp], eax
$LN16@compareCom:
; Line 2146
	mov	esi, esp
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$45184[ebp], eax
	jge	SHORT $LN29@compareCom
	mov	esi, esp
	mov	eax, DWORD PTR _i$45184[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 164				; 000000a4H
	jne	SHORT $LN29@compareCom
	mov	BYTE PTR tv150[ebp], 1
	jmp	SHORT $LN30@compareCom
$LN29@compareCom:
	mov	BYTE PTR tv150[ebp], 0
$LN30@compareCom:
	mov	cl, BYTE PTR tv150[ebp]
	mov	BYTE PTR _plural$45205[ebp], cl
; Line 2147
	movsx	eax, BYTE PTR _plural$45205[ebp]
	test	eax, eax
	je	SHORT $LN15@compareCom
; Line 2148
	mov	eax, DWORD PTR _i$45184[ebp]
	add	eax, 1
	mov	DWORD PTR _i$45184[ebp], eax
; Line 2149
	mov	BYTE PTR _intl$45202[ebp], 0
$LN15@compareCom:
; Line 2155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	call	?getLocale@CurrencyPluralInfo@icu_56@@QBEABVLocale@2@XZ ; icu_56::CurrencyPluralInfo::getLocale
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?getName@Locale@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loc$45208[ebp], eax
; Line 2156
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_??0ParsePosition@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2158
	mov	DWORD PTR _ec$45211[ebp], 0
; Line 2160
	lea	eax, DWORD PTR _ec$45211[ebp]
	push	eax
	lea	ecx, DWORD PTR _curr$45210[ebp]
	push	ecx
	movzx	edx, BYTE PTR _type$[ebp]
	push	edx
	lea	eax, DWORD PTR _ppos$45209[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loc$45208[ebp]
	push	edx
	call	_uprv_parseCurrency_56
	add	esp, 24					; 00000018H
; Line 2163
	mov	eax, DWORD PTR _ec$45211[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN14@compareCom
	mov	esi, esp
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _pos$[ebp]
	je	$LN14@compareCom
; Line 2164
	cmp	DWORD PTR _currency$[ebp], 0
	je	SHORT $LN13@compareCom
; Line 2165
	lea	eax, DWORD PTR _curr$45210[ebp]
	push	eax
	mov	ecx, DWORD PTR _currency$[ebp]
	push	ecx
	call	_u_strcpy_56
	add	esp, 8
; Line 2166
	jmp	SHORT $LN12@compareCom
$LN13@compareCom:
; Line 2171
	mov	esi, esp
	lea	eax, DWORD PTR _ec$45211[ebp]
	push	eax
	lea	ecx, DWORD PTR _effectiveCurr$45215[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+132]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2172
	mov	eax, DWORD PTR _ec$45211[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@compareCom
	push	4
	lea	eax, DWORD PTR _effectiveCurr$45215[ebp]
	push	eax
	lea	ecx, DWORD PTR _curr$45210[ebp]
	push	ecx
	call	_u_strncmp_56
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN12@compareCom
$LN10@compareCom:
; Line 2173
	mov	DWORD PTR _pos$[ebp], -1
; Line 2174
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@compareCom
$LN12@compareCom:
; Line 2177
	mov	esi, esp
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_?getIndex@ParsePosition@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN9@compareCom
$LN14@compareCom:
; Line 2178
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@compareCom
; Line 2179
	mov	DWORD PTR _pos$[ebp], -1
$LN9@compareCom:
; Line 2181
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN22@compareCom
$LN7@compareCom:
; Line 2184
	push	3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _affix$45195[ebp], eax
; Line 2185
	jmp	SHORT $LN18@compareCom
$LN6@compareCom:
; Line 2187
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _affix$45195[ebp], eax
; Line 2188
	jmp	SHORT $LN18@compareCom
$LN5@compareCom:
; Line 2190
	push	7
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _affix$45195[ebp], eax
; Line 2191
	jmp	SHORT $LN18@compareCom
$LN4@compareCom:
; Line 2193
	push	6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _affix$45195[ebp], eax
$LN18@compareCom:
; Line 2200
	cmp	DWORD PTR _affix$45195[ebp], 0
	je	SHORT $LN20@compareCom
; Line 2201
	mov	eax, DWORD PTR _affix$45195[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	call	?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H0@Z ; icu_56::DecimalFormat::match
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$[ebp], eax
; Line 2202
	jmp	$LN22@compareCom
$LN20@compareCom:
; Line 2206
	mov	eax, DWORD PTR _c$45188[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	call	?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::DecimalFormat::match
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$[ebp], eax
; Line 2207
	mov	esi, esp
	mov	eax, DWORD PTR _c$45188[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@compareCom
; Line 2208
	mov	eax, DWORD PTR _i$45184[ebp]
	push	eax
	mov	ecx, DWORD PTR _affixPat$[ebp]
	push	ecx
	call	?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPatternWhiteSpace
	add	esp, 8
	mov	DWORD PTR _i$45184[ebp], eax
$LN1@compareCom:
; Line 2210
	jmp	$LN22@compareCom
$LN21@compareCom:
; Line 2211
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
; Line 2212
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@compareCom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN42@compareCom:
	DD	4
	DD	$LN41@compareCom
$LN41@compareCom:
	DD	-128					; ffffff80H
	DD	12					; 0000000cH
	DD	$LN36@compareCom
	DD	-144					; ffffff70H
	DD	8
	DD	$LN37@compareCom
	DD	-156					; ffffff64H
	DD	4
	DD	$LN38@compareCom
	DD	-172					; ffffff54H
	DD	8
	DD	$LN39@compareCom
$LN39@compareCom:
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN38@compareCom:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN37@compareCom:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN36@compareCom:
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _ppos$45209[ebp]
	call	DWORD PTR __imp_??1ParsePosition@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compareComplexAffix@DecimalFormat@icu_56@@ABEHABVUnicodeString@2@0HCPA_W@Z ENDP ; icu_56::DecimalFormat::compareComplexAffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z
_TEXT	SEGMENT
tv80 = -208						; size = 4
_s$45237 = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
_ch$ = 16						; size = 4
?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z PROC ; icu_56::DecimalFormat::match, COMDAT
; Line 2219
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2220
	mov	esi, esp
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@match
; Line 2223
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _s$45237[ebp], eax
; Line 2224
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPatternWhiteSpace
	add	esp, 8
	mov	DWORD PTR _pos$[ebp], eax
; Line 2225
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _s$45237[ebp]
	jne	SHORT $LN1@match
; Line 2226
	or	eax, -1
	jmp	SHORT $LN3@match
$LN1@match:
; Line 2228
	mov	eax, DWORD PTR _pos$[ebp]
	jmp	SHORT $LN3@match
$LN2@match:
; Line 2231
	cmp	DWORD PTR _pos$[ebp], 0
	jl	SHORT $LN5@match
	mov	esi, esp
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _ch$[ebp]
	jne	SHORT $LN5@match
	mov	ecx, 65535				; 0000ffffH
	cmp	ecx, DWORD PTR _ch$[ebp]
	sbb	edx, edx
	neg	edx
	add	edx, 1
	add	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN6@match
$LN5@match:
	mov	DWORD PTR tv80[ebp], -1
$LN6@match:
	mov	eax, DWORD PTR tv80[ebp]
$LN3@match:
; Line 2232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z ENDP ; icu_56::DecimalFormat::match
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H0@Z
_TEXT	SEGMENT
_ch$45249 = -20						; size = 4
_i$45245 = -8						; size = 4
_text$ = 8						; size = 4
_pos$ = 12						; size = 4
_str$ = 16						; size = 4
?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H0@Z PROC ; icu_56::DecimalFormat::match, COMDAT
; Line 2239
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2240
	mov	DWORD PTR _i$45245[ebp], 0
$LN3@match@2:
	mov	esi, esp
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$45245[ebp], eax
	jge	$LN2@match@2
	cmp	DWORD PTR _pos$[ebp], 0
	jl	SHORT $LN2@match@2
; Line 2241
	mov	esi, esp
	mov	eax, DWORD PTR _i$45245[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$45249[ebp], eax
; Line 2242
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _ch$45249[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _i$45245[ebp]
	mov	DWORD PTR _i$45245[ebp], ecx
; Line 2243
	mov	esi, esp
	mov	eax, DWORD PTR _ch$45249[ebp]
	push	eax
	call	DWORD PTR __imp_?isWhiteSpace@PatternProps@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@match@2
; Line 2244
	mov	eax, DWORD PTR _i$45245[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?skipPatternWhiteSpace@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H@Z ; icu_56::DecimalFormat::skipPatternWhiteSpace
	add	esp, 8
	mov	DWORD PTR _i$45245[ebp], eax
$LN1@match@2:
; Line 2246
	mov	eax, DWORD PTR _ch$45249[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	call	?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@HH@Z ; icu_56::DecimalFormat::match
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pos$[ebp], eax
; Line 2247
	jmp	$LN3@match@2
$LN2@match@2:
; Line 2248
	mov	eax, DWORD PTR _pos$[ebp]
; Line 2249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?match@DecimalFormat@icu_56@@CAHABVUnicodeString@2@H0@Z ENDP ; icu_56::DecimalFormat::match
_TEXT	ENDS
PUBLIC	?matchSymbol@DecimalFormat@icu_56@@CACABVUnicodeString@2@HH0PAVUnicodeSet@2@H@Z ; icu_56::DecimalFormat::matchSymbol
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?matchSymbol@DecimalFormat@icu_56@@CACABVUnicodeString@2@HH0PAVUnicodeSet@2@H@Z
_TEXT	SEGMENT
_text$ = 8						; size = 4
_position$ = 12						; size = 4
_length$ = 16						; size = 4
_symbol$ = 20						; size = 4
_sset$ = 24						; size = 4
_schar$ = 28						; size = 4
?matchSymbol@DecimalFormat@icu_56@@CACABVUnicodeString@2@HH0PAVUnicodeSet@2@H@Z PROC ; icu_56::DecimalFormat::matchSymbol, COMDAT
; Line 2253
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2254
	cmp	DWORD PTR _sset$[ebp], 0
	je	SHORT $LN1@matchSymbo
; Line 2255
	mov	esi, esp
	mov	eax, DWORD PTR _schar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@matchSymbo
$LN1@matchSymbo:
; Line 2258
	mov	esi, esp
	mov	eax, DWORD PTR _symbol$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _position$[ebp]
	push	edx
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECHHABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	sete	al
$LN2@matchSymbo:
; Line 2259
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matchSymbol@DecimalFormat@icu_56@@CACABVUnicodeString@2@HH0PAVUnicodeSet@2@H@Z ENDP ; icu_56::DecimalFormat::matchSymbol
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?matchDecimal@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H@Z
_TEXT	SEGMENT
_symbolChar$ = 8					; size = 4
_sawDecimal$ = 12					; size = 1
_sawDecimalChar$ = 16					; size = 4
_sset$ = 20						; size = 4
_schar$ = 24						; size = 4
?matchDecimal@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H@Z PROC ; icu_56::DecimalFormat::matchDecimal, COMDAT
; Line 2263
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2264
	movsx	eax, BYTE PTR _sawDecimal$[ebp]
	test	eax, eax
	je	SHORT $LN6@matchDecim
; Line 2265
	mov	eax, DWORD PTR _schar$[ebp]
	cmp	eax, DWORD PTR _sawDecimalChar$[ebp]
	sete	al
	jmp	SHORT $LN7@matchDecim
	jmp	SHORT $LN7@matchDecim
$LN6@matchDecim:
; Line 2266
	mov	eax, DWORD PTR _schar$[ebp]
	cmp	eax, DWORD PTR _symbolChar$[ebp]
	jne	SHORT $LN4@matchDecim
; Line 2267
	mov	al, 1
	jmp	SHORT $LN7@matchDecim
	jmp	SHORT $LN7@matchDecim
$LN4@matchDecim:
; Line 2268
	cmp	DWORD PTR _sset$[ebp], 0
	je	SHORT $LN2@matchDecim
; Line 2269
	mov	esi, esp
	mov	eax, DWORD PTR _schar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@matchDecim
; Line 2270
	jmp	SHORT $LN7@matchDecim
$LN2@matchDecim:
; Line 2271
	xor	al, al
$LN7@matchDecim:
; Line 2273
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matchDecimal@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H@Z ENDP ; icu_56::DecimalFormat::matchDecimal
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?matchGrouping@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H0H@Z
_TEXT	SEGMENT
tv93 = -193						; size = 1
_groupingChar$ = 8					; size = 4
_sawGrouping$ = 12					; size = 1
_sawGroupingChar$ = 16					; size = 4
_sset$ = 20						; size = 4
___formal$ = 24						; size = 4
_decimalSet$ = 28					; size = 4
_schar$ = 32						; size = 4
?matchGrouping@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H0H@Z PROC ; icu_56::DecimalFormat::matchGrouping, COMDAT
; Line 2279
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2280
	movsx	eax, BYTE PTR _sawGrouping$[ebp]
	test	eax, eax
	je	SHORT $LN6@matchGroup
; Line 2281
	mov	eax, DWORD PTR _schar$[ebp]
	cmp	eax, DWORD PTR _sawGroupingChar$[ebp]
	sete	al
	jmp	SHORT $LN7@matchGroup
	jmp	SHORT $LN7@matchGroup
$LN6@matchGroup:
; Line 2282
	mov	eax, DWORD PTR _schar$[ebp]
	cmp	eax, DWORD PTR _groupingChar$[ebp]
	jne	SHORT $LN4@matchGroup
; Line 2283
	mov	al, 1
	jmp	SHORT $LN7@matchGroup
	jmp	SHORT $LN7@matchGroup
$LN4@matchGroup:
; Line 2284
	cmp	DWORD PTR _sset$[ebp], 0
	je	SHORT $LN2@matchGroup
; Line 2286
	mov	esi, esp
	mov	eax, DWORD PTR _schar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sset$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@matchGroup
	cmp	DWORD PTR _decimalSet$[ebp], 0
	je	SHORT $LN9@matchGroup
	mov	esi, esp
	mov	edx, DWORD PTR _schar$[ebp]
	push	edx
	mov	eax, DWORD PTR _decimalSet$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _decimalSet$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@matchGroup
$LN9@matchGroup:
	mov	BYTE PTR tv93[ebp], 1
	jmp	SHORT $LN11@matchGroup
$LN10@matchGroup:
	mov	BYTE PTR tv93[ebp], 0
$LN11@matchGroup:
	mov	al, BYTE PTR tv93[ebp]
	jmp	SHORT $LN7@matchGroup
; Line 2287
	jmp	SHORT $LN7@matchGroup
$LN2@matchGroup:
; Line 2288
	xor	al, al
$LN7@matchGroup:
; Line 2290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?matchGrouping@DecimalFormat@icu_56@@CACHCHPBVUnicodeSet@2@H0H@Z ENDP ; icu_56::DecimalFormat::matchGrouping
_TEXT	ENDS
PUBLIC	?getDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QBEABVDecimalFormatSymbols@2@XZ ; icu_56::DecimalFormatImpl::getDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ PROC ; icu_56::DecimalFormat::getDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 2299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QBEABVDecimalFormatSymbols@2@XZ ; icu_56::DecimalFormatImpl::getDecimalFormatSymbols
; Line 2301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDecimalFormatSymbols@DecimalFormat@icu_56@@UBEPBVDecimalFormatSymbols@2@XZ ENDP ; icu_56::DecimalFormat::getDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QBEABVDecimalFormatSymbols@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QBEABVDecimalFormatSymbols@2@XZ PROC ; icu_56::DecimalFormatImpl::getDecimalFormatSymbols, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+696]
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QBEABVDecimalFormatSymbols@2@XZ ENDP ; icu_56::DecimalFormatImpl::getDecimalFormatSymbols
_TEXT	ENDS
EXTRN	?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z:PROC ; icu_56::DecimalFormatImpl::adoptDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_symbolsToAdopt$ = 8					; size = 4
?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z PROC ; icu_56::DecimalFormat::adoptDecimalFormatSymbols, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2308
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2309
	cmp	DWORD PTR _symbolsToAdopt$[ebp], 0
	jne	SHORT $LN1@adoptDecim
; Line 2310
	jmp	SHORT $LN2@adoptDecim
$LN1@adoptDecim:
; Line 2312
	mov	eax, DWORD PTR _symbolsToAdopt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?adoptDecimalFormatSymbols@DecimalFormatImpl@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::adoptDecimalFormatSymbols
$LN2@adoptDecim:
; Line 2313
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXPAVDecimalFormatSymbols@2@@Z ENDP ; icu_56::DecimalFormat::adoptDecimalFormatSymbols
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z$0
__ehfuncinfo$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T54640 = -236						; size = 4
$T54641 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_symbols$ = 8						; size = 4
?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z PROC ; icu_56::DecimalFormat::setDecimalFormatSymbols, COMDAT
; _this$ = ecx
; Line 2320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2321
	mov	esi, esp
	push	2772					; 00000ad4H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54641[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T54641[ebp], 0
	je	SHORT $LN3@setDecimal
	mov	eax, DWORD PTR _symbols$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T54641[ebp]
	call	??0DecimalFormatSymbols@icu_56@@QAE@ABV01@@Z ; icu_56::DecimalFormatSymbols::DecimalFormatSymbols
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@setDecimal
$LN3@setDecimal:
	mov	DWORD PTR tv75[ebp], 0
$LN4@setDecimal:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T54640[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	edx, DWORD PTR $T54640[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T54641[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setDecimalFormatSymbols@DecimalFormat@icu_56@@UAEXABVDecimalFormatSymbols@2@@Z ENDP ; icu_56::DecimalFormat::setDecimalFormatSymbols
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ PROC ; icu_56::DecimalFormat::getCurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 2327
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2328
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+376]
; Line 2329
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyPluralInfo@DecimalFormat@icu_56@@UBEPBVCurrencyPluralInfo@2@XZ ENDP ; icu_56::DecimalFormat::getCurrencyPluralInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T54655 = -236						; size = 4
$T54656 = -224						; size = 4
_status$45317 = -20					; size = 4
_this$ = -8						; size = 4
_toAdopt$ = 8						; size = 4
?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z PROC ; icu_56::DecimalFormat::adoptCurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 2334
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2335
	cmp	DWORD PTR _toAdopt$[ebp], 0
	je	$LN4@adoptCurre
; Line 2336
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	mov	DWORD PTR $T54656[ebp], ecx
	mov	edx, DWORD PTR $T54656[ebp]
	mov	DWORD PTR $T54655[ebp], edx
	cmp	DWORD PTR $T54655[ebp], 0
	je	SHORT $LN6@adoptCurre
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T54655[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T54655[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN7@adoptCurre
$LN6@adoptCurre:
	mov	DWORD PTR tv76[ebp], 0
$LN7@adoptCurre:
; Line 2337
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _toAdopt$[ebp]
	mov	DWORD PTR [eax+376], ecx
; Line 2339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	movsx	edx, BYTE PTR [ecx+708]
	test	edx, edx
	je	SHORT $LN4@adoptCurre
; Line 2340
	mov	DWORD PTR _status$45317[ebp], 0
; Line 2341
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+372], 0
	je	SHORT $LN1@adoptCurre
; Line 2342
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ ; icu_56::DecimalFormat::deleteHashForAffixPattern
$LN1@adoptCurre:
; Line 2344
	lea	eax, DWORD PTR _status$45317[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setupCurrencyAffixPatterns@DecimalFormat@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setupCurrencyAffixPatterns
$LN4@adoptCurre:
; Line 2347
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@adoptCurre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@adoptCurre:
	DD	1
	DD	$LN9@adoptCurre
$LN9@adoptCurre:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@adoptCurre
$LN8@adoptCurre:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?adoptCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXPAVCurrencyPluralInfo@2@@Z ENDP ; icu_56::DecimalFormat::adoptCurrencyPluralInfo
_TEXT	ENDS
EXTRN	?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ:PROC ; icu_56::CurrencyPluralInfo::clone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_info$ = 8						; size = 4
?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z PROC ; icu_56::DecimalFormat::setCurrencyPluralInfo, COMDAT
; _this$ = ecx
; Line 2351
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2352
	mov	ecx, DWORD PTR _info$[ebp]
	call	?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ ; icu_56::CurrencyPluralInfo::clone
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2353
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setCurrencyPluralInfo@DecimalFormat@icu_56@@UAEXABVCurrencyPluralInfo@2@@Z ENDP ; icu_56::DecimalFormat::setCurrencyPluralInfo
_TEXT	ENDS
PUBLIC	?getPositivePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::getPositivePrefix
EXTRN	?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormatImpl::getPositivePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPositivePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getPositivePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::getPositivePrefix, COMDAT
; _this$ = ecx
; Line 2361
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2362
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?getPositivePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getPositivePrefix
; Line 2363
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPositivePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::getPositivePrefix
_TEXT	ENDS
EXTRN	?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormatImpl::setPositivePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormat::setPositivePrefix, COMDAT
; _this$ = ecx
; Line 2370
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2371
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setPositivePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setPositivePrefix
; Line 2372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPositivePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormat::setPositivePrefix
_TEXT	ENDS
PUBLIC	?getNegativePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::getNegativePrefix
EXTRN	?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormatImpl::getNegativePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNegativePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getNegativePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::getNegativePrefix, COMDAT
; _this$ = ecx
; Line 2379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2380
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?getNegativePrefix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getNegativePrefix
; Line 2381
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getNegativePrefix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::getNegativePrefix
_TEXT	ENDS
EXTRN	?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormatImpl::setNegativePrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormat::setNegativePrefix, COMDAT
; _this$ = ecx
; Line 2388
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2389
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setNegativePrefix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setNegativePrefix
; Line 2390
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setNegativePrefix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormat::setNegativePrefix
_TEXT	ENDS
PUBLIC	?getPositiveSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::getPositiveSuffix
EXTRN	?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormatImpl::getPositiveSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPositiveSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getPositiveSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::getPositiveSuffix, COMDAT
; _this$ = ecx
; Line 2397
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2398
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?getPositiveSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getPositiveSuffix
; Line 2399
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPositiveSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::getPositiveSuffix
_TEXT	ENDS
EXTRN	?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormatImpl::setPositiveSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormat::setPositiveSuffix, COMDAT
; _this$ = ecx
; Line 2406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2407
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setPositiveSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setPositiveSuffix
; Line 2408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPositiveSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormat::setPositiveSuffix
_TEXT	ENDS
PUBLIC	?getNegativeSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormat::getNegativeSuffix
EXTRN	?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormatImpl::getNegativeSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getNegativeSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?getNegativeSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::getNegativeSuffix, COMDAT
; _this$ = ecx
; Line 2415
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2416
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?getNegativeSuffix@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::getNegativeSuffix
; Line 2417
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getNegativeSuffix@DecimalFormat@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::getNegativeSuffix
_TEXT	ENDS
EXTRN	?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z:PROC ; icu_56::DecimalFormatImpl::setNegativeSuffix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormat::setNegativeSuffix, COMDAT
; _this$ = ecx
; Line 2424
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2425
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setNegativeSuffix@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@@Z ; icu_56::DecimalFormatImpl::setNegativeSuffix
; Line 2426
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setNegativeSuffix@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormat::setNegativeSuffix
_TEXT	ENDS
PUBLIC	?getMultiplier@DecimalFormat@icu_56@@QBEHXZ	; icu_56::DecimalFormat::getMultiplier
EXTRN	?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ:PROC ; icu_56::DecimalFormatImpl::getMultiplier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMultiplier@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMultiplier@DecimalFormat@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormat::getMultiplier, COMDAT
; _this$ = ecx
; Line 2436
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2437
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getMultiplier@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMultiplier
; Line 2438
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMultiplier@DecimalFormat@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormat::getMultiplier
_TEXT	ENDS
EXTRN	?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z:PROC ; icu_56::DecimalFormatImpl::setMultiplier
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z PROC	; icu_56::DecimalFormat::setMultiplier, COMDAT
; _this$ = ecx
; Line 2444
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2445
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setMultiplier@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMultiplier
; Line 2446
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMultiplier@DecimalFormat@icu_56@@UAEXH@Z ENDP	; icu_56::DecimalFormat::setMultiplier
_TEXT	ENDS
EXTRN	?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ:PROC ; icu_56::DecimalFormatImpl::getRoundingIncrement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ PROC	; icu_56::DecimalFormat::getRoundingIncrement, COMDAT
; _this$ = ecx
; Line 2456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2457
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getRoundingIncrement@DecimalFormatImpl@icu_56@@QBENXZ ; icu_56::DecimalFormatImpl::getRoundingIncrement
; Line 2458
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getRoundingIncrement@DecimalFormat@icu_56@@UBENXZ ENDP	; icu_56::DecimalFormat::getRoundingIncrement
_TEXT	ENDS
EXTRN	?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z:PROC ; icu_56::DecimalFormatImpl::setRoundingIncrement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 8
?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z PROC ; icu_56::DecimalFormat::setRoundingIncrement, COMDAT
; _this$ = ecx
; Line 2469
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2470
	sub	esp, 8
	fld	QWORD PTR _newValue$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?setRoundingIncrement@DecimalFormatImpl@icu_56@@QAEXN@Z ; icu_56::DecimalFormatImpl::setRoundingIncrement
; Line 2471
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setRoundingIncrement@DecimalFormat@icu_56@@UAEXN@Z ENDP ; icu_56::DecimalFormat::setRoundingIncrement
_TEXT	ENDS
PUBLIC	?getRoundingMode@DecimalFormatImpl@icu_56@@QBE?AW4ERoundingMode@DecimalFormat@2@XZ ; icu_56::DecimalFormatImpl::getRoundingMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ PROC ; icu_56::DecimalFormat::getRoundingMode, COMDAT
; _this$ = ecx
; Line 2480
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2481
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getRoundingMode@DecimalFormatImpl@icu_56@@QBE?AW4ERoundingMode@DecimalFormat@2@XZ ; icu_56::DecimalFormatImpl::getRoundingMode
; Line 2482
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getRoundingMode@DecimalFormat@icu_56@@UBE?AW4ERoundingMode@12@XZ ENDP ; icu_56::DecimalFormat::getRoundingMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getRoundingMode@DecimalFormatImpl@icu_56@@QBE?AW4ERoundingMode@DecimalFormat@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getRoundingMode@DecimalFormatImpl@icu_56@@QBE?AW4ERoundingMode@DecimalFormat@2@XZ PROC ; icu_56::DecimalFormatImpl::getRoundingMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 246
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
; Line 248
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getRoundingMode@DecimalFormatImpl@icu_56@@QBE?AW4ERoundingMode@DecimalFormat@2@XZ ENDP ; icu_56::DecimalFormatImpl::getRoundingMode
_TEXT	ENDS
PUBLIC	?setRoundingMode@DecimalFormatImpl@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ; icu_56::DecimalFormatImpl::setRoundingMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_roundingMode$ = 8					; size = 4
?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z PROC ; icu_56::DecimalFormat::setRoundingMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2492
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2493
	mov	eax, DWORD PTR _roundingMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setRoundingMode@DecimalFormatImpl@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ; icu_56::DecimalFormatImpl::setRoundingMode
; Line 2494
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setRoundingMode@DecimalFormat@icu_56@@UAEXW4ERoundingMode@12@@Z ENDP ; icu_56::DecimalFormat::setRoundingMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setRoundingMode@DecimalFormatImpl@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mode$ = 8						; size = 4
?setRoundingMode@DecimalFormatImpl@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z PROC ; icu_56::DecimalFormatImpl::setRoundingMode, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 7
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+1392], cl
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+1396], ecx
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setRoundingMode@DecimalFormatImpl@icu_56@@QAEXW4ERoundingMode@DecimalFormat@2@@Z ENDP ; icu_56::DecimalFormatImpl::setRoundingMode
_TEXT	ENDS
PUBLIC	?getFormatWidth@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getFormatWidth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ PROC	; icu_56::DecimalFormat::getFormatWidth, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2505
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2506
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getFormatWidth@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getFormatWidth
; Line 2507
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFormatWidth@DecimalFormat@icu_56@@UBEHXZ ENDP	; icu_56::DecimalFormat::getFormatWidth
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getFormatWidth@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFormatWidth@DecimalFormatImpl@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormatImpl::getFormatWidth, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2660]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getFormatWidth@DecimalFormatImpl@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormatImpl::getFormatWidth
_TEXT	ENDS
PUBLIC	?setFormatWidth@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setFormatWidth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_formatWidth$ = -20					; size = 4
_this$ = -8						; size = 4
_width$ = 8						; size = 4
?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z PROC	; icu_56::DecimalFormat::setFormatWidth, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2521
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2522
	xor	eax, eax
	cmp	DWORD PTR _width$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _width$[ebp]
	mov	DWORD PTR _formatWidth$[ebp], eax
; Line 2523
	mov	eax, DWORD PTR _formatWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setFormatWidth@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setFormatWidth
; Line 2524
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setFormatWidth@DecimalFormat@icu_56@@UAEXH@Z ENDP	; icu_56::DecimalFormat::setFormatWidth
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setFormatWidth@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
?setFormatWidth@DecimalFormatImpl@icu_56@@QAEXH@Z PROC	; icu_56::DecimalFormatImpl::setFormatWidth, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+2660], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setFormatWidth@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP	; icu_56::DecimalFormatImpl::setFormatWidth
_TEXT	ENDS
PUBLIC	?getPadCharacter@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getPadCharacter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ
_TEXT	SEGMENT
$T54707 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ PROC ; icu_56::DecimalFormat::getPadCharacterString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2526
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T54707[ebp], 0
; Line 2527
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getPadCharacter@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getPadCharacter
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T54707[ebp]
	or	ecx, 1
	mov	DWORD PTR $T54707[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 2528
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPadCharacterString@DecimalFormat@icu_56@@UBE?AVUnicodeString@2@XZ ENDP ; icu_56::DecimalFormat::getPadCharacterString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPadCharacter@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPadCharacter@DecimalFormatImpl@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormatImpl::getPadCharacter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2656]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPadCharacter@DecimalFormatImpl@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormatImpl::getPadCharacter
_TEXT	ENDS
PUBLIC	?setPadCharacter@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setPadCharacter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_pad$ = -20						; size = 2
_this$ = -8						; size = 4
_padChar$ = 8						; size = 4
?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z PROC ; icu_56::DecimalFormat::setPadCharacter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2530
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2532
	mov	esi, esp
	mov	ecx, DWORD PTR _padChar$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN2@setPadChar
; Line 2533
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _padChar$[ebp]
	call	DWORD PTR __imp_?char32At@UnicodeString@icu_56@@QBEHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _pad$[ebp], ax
; Line 2535
	jmp	SHORT $LN1@setPadChar
$LN2@setPadChar:
; Line 2536
	mov	eax, 32					; 00000020H
	mov	WORD PTR _pad$[ebp], ax
$LN1@setPadChar:
; Line 2538
	movzx	eax, WORD PTR _pad$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setPadCharacter@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setPadCharacter
; Line 2539
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPadCharacter@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@@Z ENDP ; icu_56::DecimalFormat::setPadCharacter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setPadCharacter@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_c$ = 8							; size = 4
?setPadCharacter@DecimalFormatImpl@icu_56@@QAEXH@Z PROC	; icu_56::DecimalFormatImpl::setPadCharacter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [eax+2656], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setPadCharacter@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP	; icu_56::DecimalFormatImpl::setPadCharacter
_TEXT	ENDS
PUBLIC	?getPadPosition@DecimalFormatImpl@icu_56@@QBE?AW4EPadPosition@DigitAffixesAndPadding@2@XZ ; icu_56::DecimalFormatImpl::getPadPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ PROC ; icu_56::DecimalFormat::getPadPosition, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2575
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2576
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getPadPosition@DecimalFormatImpl@icu_56@@QBE?AW4EPadPosition@DigitAffixesAndPadding@2@XZ ; icu_56::DecimalFormatImpl::getPadPosition
	push	eax
	call	?fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@1@W42DigitAffixesAndPadding@1@@Z ; icu_56::fromPadPosition
	add	esp, 4
; Line 2577
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getPadPosition@DecimalFormat@icu_56@@UBE?AW4EPadPosition@12@XZ ENDP ; icu_56::DecimalFormat::getPadPosition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getPadPosition@DecimalFormatImpl@icu_56@@QBE?AW4EPadPosition@DigitAffixesAndPadding@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getPadPosition@DecimalFormatImpl@icu_56@@QBE?AW4EPadPosition@DigitAffixesAndPadding@2@XZ PROC ; icu_56::DecimalFormatImpl::getPadPosition, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2652]
; Line 291
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getPadPosition@DecimalFormatImpl@icu_56@@QBE?AW4EPadPosition@DigitAffixesAndPadding@2@XZ ENDP ; icu_56::DecimalFormatImpl::getPadPosition
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@2@W43DigitAffixesAndPadding@2@@Z@4JA@d2fe9d33 ; `icu_56::fromPadPosition'::`2'::__LINE__Var
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@2@W43DigitAffixesAndPadding@2@@Z@4JA@d2fe9d33
_DATA	SEGMENT
?__LINE__Var@?1??fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@2@W43DigitAffixesAndPadding@2@@Z@4JA@d2fe9d33 DD 09edH ; `icu_56::fromPadPosition'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@1@W42DigitAffixesAndPadding@1@@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_padPos$ = 8						; size = 4
?fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@1@W42DigitAffixesAndPadding@1@@Z PROC ; icu_56::fromPadPosition, COMDAT
; Line 2541
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2542
	mov	eax, DWORD PTR _padPos$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN1@fromPadPos
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN11@fromPadPos[ecx*4]
$LN5@fromPadPos:
; Line 2544
	xor	eax, eax
	jmp	SHORT $LN8@fromPadPos
$LN4@fromPadPos:
; Line 2546
	mov	eax, 1
	jmp	SHORT $LN8@fromPadPos
$LN3@fromPadPos:
; Line 2548
	mov	eax, 2
	jmp	SHORT $LN8@fromPadPos
$LN2@fromPadPos:
; Line 2550
	mov	eax, 3
	jmp	SHORT $LN8@fromPadPos
$LN1@fromPadPos:
; Line 2552
	xor	eax, eax
	jne	SHORT $LN6@fromPadPos
	mov	ecx, DWORD PTR ?__LINE__Var@?1??fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@2@W43DigitAffixesAndPadding@2@@Z@4JA@d2fe9d33
	add	ecx, 11					; 0000000bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@fromPadPos:
; Line 2555
	xor	eax, eax
$LN8@fromPadPos:
; Line 2556
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@fromPadPos:
	DD	$LN5@fromPadPos
	DD	$LN4@fromPadPos
	DD	$LN3@fromPadPos
	DD	$LN2@fromPadPos
?fromPadPosition@icu_56@@YA?AW4EPadPosition@DecimalFormat@1@W42DigitAffixesAndPadding@1@@Z ENDP ; icu_56::fromPadPosition
_TEXT	ENDS
PUBLIC	?setPadPosition@DecimalFormatImpl@icu_56@@QAEXW4EPadPosition@DigitAffixesAndPadding@2@@Z ; icu_56::DecimalFormatImpl::setPadPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_padPos$ = 8						; size = 4
?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z PROC ; icu_56::DecimalFormat::setPadPosition, COMDAT
; _this$ = ecx
; Line 2615
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2616
	mov	eax, DWORD PTR _padPos$[ebp]
	push	eax
	call	?toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@1@W42DecimalFormat@1@@Z ; icu_56::toPadPosition
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setPadPosition@DecimalFormatImpl@icu_56@@QAEXW4EPadPosition@DigitAffixesAndPadding@2@@Z ; icu_56::DecimalFormatImpl::setPadPosition
; Line 2617
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPadPosition@DecimalFormat@icu_56@@UAEXW4EPadPosition@12@@Z ENDP ; icu_56::DecimalFormat::setPadPosition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setPadPosition@DecimalFormatImpl@icu_56@@QAEXW4EPadPosition@DigitAffixesAndPadding@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
?setPadPosition@DecimalFormatImpl@icu_56@@QAEXW4EPadPosition@DigitAffixesAndPadding@2@@Z PROC ; icu_56::DecimalFormatImpl::setPadPosition, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+2652], ecx
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setPadPosition@DecimalFormatImpl@icu_56@@QAEXW4EPadPosition@DigitAffixesAndPadding@2@@Z ENDP ; icu_56::DecimalFormatImpl::setPadPosition
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@2@W43DecimalFormat@2@@Z@4JA@d2fe9d33 ; `icu_56::toPadPosition'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@2@W43DecimalFormat@2@@Z@4JA@d2fe9d33
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
_DATA	SEGMENT
?__LINE__Var@?1??toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@2@W43DecimalFormat@2@@Z@4JA@d2fe9d33 DD 0a13H ; `icu_56::toPadPosition'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@1@W42DecimalFormat@1@@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_padPos$ = 8						; size = 4
?toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@1@W42DecimalFormat@1@@Z PROC ; icu_56::toPadPosition, COMDAT
; Line 2579
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2580
	mov	eax, DWORD PTR _padPos$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN1@toPadPosit
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN11@toPadPosit[ecx*4]
$LN5@toPadPosit:
; Line 2582
	xor	eax, eax
	jmp	SHORT $LN8@toPadPosit
$LN4@toPadPosit:
; Line 2584
	mov	eax, 1
	jmp	SHORT $LN8@toPadPosit
$LN3@toPadPosit:
; Line 2586
	mov	eax, 2
	jmp	SHORT $LN8@toPadPosit
$LN2@toPadPosit:
; Line 2588
	mov	eax, 3
	jmp	SHORT $LN8@toPadPosit
$LN1@toPadPosit:
; Line 2590
	xor	eax, eax
	jne	SHORT $LN6@toPadPosit
	mov	ecx, DWORD PTR ?__LINE__Var@?1??toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@2@W43DecimalFormat@2@@Z@4JA@d2fe9d33
	add	ecx, 11					; 0000000bH
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@toPadPosit:
; Line 2593
	xor	eax, eax
$LN8@toPadPosit:
; Line 2594
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@toPadPosit:
	DD	$LN5@toPadPosit
	DD	$LN4@toPadPosit
	DD	$LN3@toPadPosit
	DD	$LN2@toPadPosit
?toPadPosition@icu_56@@YA?AW4EPadPosition@DigitAffixesAndPadding@1@W42DecimalFormat@1@@Z ENDP ; icu_56::toPadPosition
_TEXT	ENDS
PUBLIC	?isScientificNotation@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isScientificNotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isScientificNotation@DecimalFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isScientificNotation@DecimalFormat@icu_56@@UBECXZ PROC	; icu_56::DecimalFormat::isScientificNotation, COMDAT
; _this$ = ecx
; Line 2628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?isScientificNotation@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isScientificNotation
; Line 2630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isScientificNotation@DecimalFormat@icu_56@@UBECXZ ENDP	; icu_56::DecimalFormat::isScientificNotation
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isScientificNotation@DecimalFormatImpl@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isScientificNotation@DecimalFormatImpl@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatImpl::isScientificNotation, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+136]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isScientificNotation@DecimalFormatImpl@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatImpl::isScientificNotation
_TEXT	ENDS
EXTRN	?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z:PROC ; icu_56::DecimalFormatImpl::setScientificNotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_useScientific$ = 8					; size = 1
?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z PROC ; icu_56::DecimalFormat::setScientificNotation, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2642
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2643
	movzx	eax, BYTE PTR _useScientific$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setScientificNotation@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setScientificNotation
; Line 2644
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setScientificNotation@DecimalFormat@icu_56@@UAEXC@Z ENDP ; icu_56::DecimalFormat::setScientificNotation
_TEXT	ENDS
PUBLIC	?getMinimumExponentDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumExponentDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ PROC ; icu_56::DecimalFormat::getMinimumExponentDigits, COMDAT
; _this$ = ecx
; Line 2655
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2656
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getMinimumExponentDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumExponentDigits
; Line 2657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumExponentDigits@DecimalFormat@icu_56@@UBECXZ ENDP ; icu_56::DecimalFormat::getMinimumExponentDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMinimumExponentDigits@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumExponentDigits@DecimalFormatImpl@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormatImpl::getMinimumExponentDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 296
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1400]
; Line 297
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumExponentDigits@DecimalFormatImpl@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormatImpl::getMinimumExponentDigits
_TEXT	ENDS
PUBLIC	?setMinimumExponentDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMinimumExponentDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
tv67 = -220						; size = 4
_minExponentDigits$ = -20				; size = 4
_this$ = -8						; size = 4
_minExpDig$ = 8						; size = 1
?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z PROC ; icu_56::DecimalFormat::setMinimumExponentDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2670
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2671
	movsx	eax, BYTE PTR _minExpDig$[ebp]
	test	eax, eax
	jle	SHORT $LN3@setMinimum
	movsx	ecx, BYTE PTR _minExpDig$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN4@setMinimum
$LN3@setMinimum:
	mov	DWORD PTR tv67[ebp], 1
$LN4@setMinimum:
	movsx	edx, BYTE PTR tv67[ebp]
	mov	DWORD PTR _minExponentDigits$[ebp], edx
; Line 2672
	mov	eax, DWORD PTR _minExponentDigits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setMinimumExponentDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMinimumExponentDigits
; Line 2673
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumExponentDigits@DecimalFormat@icu_56@@UAEXC@Z ENDP ; icu_56::DecimalFormat::setMinimumExponentDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setMinimumExponentDigits@DecimalFormatImpl@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
?setMinimumExponentDigits@DecimalFormatImpl@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormatImpl::setMinimumExponentDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 299
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+1400], ecx
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumExponentDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormatImpl::setMinimumExponentDigits
_TEXT	ENDS
PUBLIC	?isExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isExponentSignAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ PROC ; icu_56::DecimalFormat::isExponentSignAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2686
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2687
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?isExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isExponentSignAlwaysShown
; Line 2688
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isExponentSignAlwaysShown@DecimalFormat@icu_56@@UBECXZ ENDP ; icu_56::DecimalFormat::isExponentSignAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatImpl::isExponentSignAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 302
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1421]
; Line 303
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatImpl::isExponentSignAlwaysShown
_TEXT	ENDS
PUBLIC	?setExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setExponentSignAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_expSignAlways$ = 8					; size = 1
?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z PROC ; icu_56::DecimalFormat::setExponentSignAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2702
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2703
	movzx	eax, BYTE PTR _expSignAlways$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setExponentSignAlwaysShown
; Line 2704
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setExponentSignAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z ENDP ; icu_56::DecimalFormat::setExponentSignAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 1
?setExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormatImpl::setExponentSignAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _x$[ebp]
	mov	BYTE PTR [eax+1421], cl
; Line 306
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setExponentSignAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormatImpl::setExponentSignAlwaysShown
_TEXT	ENDS
PUBLIC	?getGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getGroupingSize
PUBLIC	?getGroupingSize@DecimalFormat@icu_56@@QBEHXZ	; icu_56::DecimalFormat::getGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGroupingSize@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGroupingSize@DecimalFormat@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormat::getGroupingSize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2712
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2713
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getGroupingSize
; Line 2714
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGroupingSize@DecimalFormat@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormat::getGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ PROC	; icu_56::DecimalFormatImpl::getGroupingSize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ENDP	; icu_56::DecimalFormatImpl::getGroupingSize
_TEXT	ENDS
EXTRN	?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z:PROC ; icu_56::DecimalFormatImpl::setGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z PROC	; icu_56::DecimalFormat::setGroupingSize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2721
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2722
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setGroupingSize
; Line 2723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGroupingSize@DecimalFormat@icu_56@@UAEXH@Z ENDP	; icu_56::DecimalFormat::setGroupingSize
_TEXT	ENDS
PUBLIC	?getSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getSecondaryGroupingSize
PUBLIC	?getSecondaryGroupingSize@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getSecondaryGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSecondaryGroupingSize@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getSecondaryGroupingSize@DecimalFormat@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormat::getSecondaryGroupingSize, COMDAT
; _this$ = ecx
; Line 2729
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getSecondaryGroupingSize
; Line 2731
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getSecondaryGroupingSize@DecimalFormat@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormat::getSecondaryGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormatImpl::getSecondaryGroupingSize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 269
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+144]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormatImpl::getSecondaryGroupingSize
_TEXT	ENDS
EXTRN	?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z:PROC ; icu_56::DecimalFormatImpl::setSecondaryGroupingSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setSecondaryGroupingSize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2737
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2738
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setSecondaryGroupingSize@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setSecondaryGroupingSize
; Line 2739
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSecondaryGroupingSize@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setSecondaryGroupingSize
_TEXT	ENDS
PUBLIC	?getMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumGroupingDigits
PUBLIC	?getMinimumGroupingDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMinimumGroupingDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumGroupingDigits@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumGroupingDigits@DecimalFormat@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormat::getMinimumGroupingDigits, COMDAT
; _this$ = ecx
; Line 2745
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2746
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumGroupingDigits
; Line 2747
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumGroupingDigits@DecimalFormat@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormat::getMinimumGroupingDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormatImpl::getMinimumGroupingDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormatImpl::getMinimumGroupingDigits
_TEXT	ENDS
EXTRN	?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z:PROC ; icu_56::DecimalFormatImpl::setMinimumGroupingDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setMinimumGroupingDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2753
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2754
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setMinimumGroupingDigits@DecimalFormatImpl@icu_56@@QAEXH@Z ; icu_56::DecimalFormatImpl::setMinimumGroupingDigits
; Line 2755
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumGroupingDigits@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setMinimumGroupingDigits
_TEXT	ENDS
PUBLIC	?isDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isDecimalSeparatorAlwaysShown
PUBLIC	?isDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::isDecimalSeparatorAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@QBECXZ PROC ; icu_56::DecimalFormat::isDecimalSeparatorAlwaysShown, COMDAT
; _this$ = ecx
; Line 2762
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?isDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::isDecimalSeparatorAlwaysShown
; Line 2764
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormat::isDecimalSeparatorAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatImpl::isDecimalSeparatorAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1420]
; Line 309
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatImpl::isDecimalSeparatorAlwaysShown
_TEXT	ENDS
PUBLIC	?setDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setDecimalSeparatorAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z PROC ; icu_56::DecimalFormat::setDecimalSeparatorAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2771
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2772
	movzx	eax, BYTE PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setDecimalSeparatorAlwaysShown
; Line 2773
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@UAEXC@Z ENDP ; icu_56::DecimalFormat::setDecimalSeparatorAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 1
?setDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormatImpl::setDecimalSeparatorAlwaysShown, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _x$[ebp]
	mov	BYTE PTR [eax+1420], cl
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setDecimalSeparatorAlwaysShown@DecimalFormatImpl@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormatImpl::setDecimalSeparatorAlwaysShown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ PROC ; icu_56::DecimalFormat::isDecimalPatternMatchRequired, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2779
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2780
	push	4098					; 00001002H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
; Line 2781
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isDecimalPatternMatchRequired@DecimalFormat@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormat::isDecimalPatternMatchRequired
_TEXT	ENDS
PUBLIC	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z PROC ; icu_56::DecimalFormat::setDecimalPatternMatchRequired, COMDAT
; _this$ = ecx
; Line 2788
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2789
	movsx	eax, BYTE PTR _newValue$[ebp]
	push	eax
	push	4098					; 00001002H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Line 2790
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setDecimalPatternMatchRequired@DecimalFormat@icu_56@@UAEXC@Z ENDP ; icu_56::DecimalFormat::setDecimalPatternMatchRequired
_TEXT	ENDS
EXTRN	?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z:PROC ; icu_56::DecimalFormatImpl::toPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::toPattern, COMDAT
; _this$ = ecx
; Line 2798
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2799
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::toPattern
; Line 2800
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::toPattern
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_result$ = 8						; size = 4
?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z PROC ; icu_56::DecimalFormat::toLocalizedPattern, COMDAT
; _this$ = ecx
; Line 2807
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2810
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?toPattern@DecimalFormatImpl@icu_56@@QBEAAVUnicodeString@2@AAV32@@Z ; icu_56::DecimalFormatImpl::toPattern
; Line 2811
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toLocalizedPattern@DecimalFormat@icu_56@@UBEAAVUnicodeString@2@AAV32@@Z ENDP ; icu_56::DecimalFormat::toLocalizedPattern
_TEXT	ENDS
EXTRN	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::applyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::applyPattern, COMDAT
; _this$ = ecx
; Line 2817
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2818
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 2819
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::applyPattern
_TEXT	ENDS
EXTRN	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::applyPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_status$ = 16						; size = 4
?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::applyPattern, COMDAT
; _this$ = ecx
; Line 2827
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2828
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?applyPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyPattern
; Line 2829
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?applyPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::applyPattern
_TEXT	ENDS
EXTRN	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_status$ = 12						; size = 4
?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::applyLocalizedPattern, COMDAT
; _this$ = ecx
; Line 2834
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2835
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Line 2836
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::applyLocalizedPattern
_TEXT	ENDS
EXTRN	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
_parseError$ = 12					; size = 4
_status$ = 16						; size = 4
?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::applyLocalizedPattern, COMDAT
; _this$ = ecx
; Line 2844
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2845
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?applyLocalizedPattern@DecimalFormatImpl@icu_56@@QAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::applyLocalizedPattern
; Line 2846
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?applyLocalizedPattern@DecimalFormat@icu_56@@UAEXABVUnicodeString@2@AAUUParseError@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::applyLocalizedPattern
_TEXT	ENDS
PUBLIC	?_min@icu_56@@YAHHH@Z				; icu_56::_min
EXTRN	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ:PROC ; icu_56::DecimalFormatImpl::updatePrecision
EXTRN	?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumIntegerDigits
EXTRN	?gDefaultMaxIntegerDigits@NumberFormat@icu_56@@1HB:DWORD ; icu_56::NumberFormat::gDefaultMaxIntegerDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setMaximumIntegerDigits, COMDAT
; _this$ = ecx
; Line 2855
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2856
	mov	eax, DWORD PTR ?gDefaultMaxIntegerDigits@NumberFormat@icu_56@@1HB ; icu_56::NumberFormat::gDefaultMaxIntegerDigits
	push	eax
	mov	ecx, DWORD PTR _newValue$[ebp]
	push	ecx
	call	?_min@icu_56@@YAHHH@Z			; icu_56::_min
	add	esp, 8
	mov	DWORD PTR _newValue$[ebp], eax
; Line 2857
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMaximumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMaximumIntegerDigits
; Line 2858
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 2859
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMaximumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setMaximumIntegerDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_min@icu_56@@YAHHH@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?_min@icu_56@@YAHHH@Z PROC				; icu_56::_min, COMDAT
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN3@min
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@min
$LN3@min:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@min:
	mov	eax, DWORD PTR tv65[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_min@icu_56@@YAHHH@Z ENDP				; icu_56::_min
_TEXT	ENDS
EXTRN	?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumIntegerDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setMinimumIntegerDigits, COMDAT
; _this$ = ecx
; Line 2866
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2867
	push	309					; 00000135H
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	call	?_min@icu_56@@YAHHH@Z			; icu_56::_min
	add	esp, 8
	mov	DWORD PTR _newValue$[ebp], eax
; Line 2868
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMinimumIntegerDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMinimumIntegerDigits
; Line 2869
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 2870
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumIntegerDigits@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setMinimumIntegerDigits
_TEXT	ENDS
EXTRN	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMaximumFractionDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setMaximumFractionDigits, COMDAT
; _this$ = ecx
; Line 2877
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2878
	push	340					; 00000154H
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	call	?_min@icu_56@@YAHHH@Z			; icu_56::_min
	add	esp, 8
	mov	DWORD PTR _newValue$[ebp], eax
; Line 2879
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMaximumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMaximumFractionDigits
; Line 2880
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 2881
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMaximumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setMaximumFractionDigits
_TEXT	ENDS
EXTRN	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z:PROC ; icu_56::NumberFormat::setMinimumFractionDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 4
?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z PROC ; icu_56::DecimalFormat::setMinimumFractionDigits, COMDAT
; _this$ = ecx
; Line 2888
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2889
	push	340					; 00000154H
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	call	?_min@icu_56@@YAHHH@Z			; icu_56::_min
	add	esp, 8
	mov	DWORD PTR _newValue$[ebp], eax
; Line 2890
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMinimumFractionDigits@NumberFormat@icu_56@@UAEXH@Z ; icu_56::NumberFormat::setMinimumFractionDigits
; Line 2891
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?updatePrecision@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updatePrecision
; Line 2892
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumFractionDigits@DecimalFormat@icu_56@@UAEXH@Z ENDP ; icu_56::DecimalFormat::setMinimumFractionDigits
_TEXT	ENDS
PUBLIC	?getMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumSignificantDigits
PUBLIC	?getMinimumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMinimumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormat::getMinimumSignificantDigits, COMDAT
; _this$ = ecx
; Line 2894
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2895
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMinimumSignificantDigits
; Line 2896
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormat::getMinimumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormatImpl::getMinimumSignificantDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormatImpl::getMinimumSignificantDigits
_TEXT	ENDS
PUBLIC	?getMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMaximumSignificantDigits
PUBLIC	?getMaximumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMaximumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormat::getMaximumSignificantDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2898
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2899
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ; icu_56::DecimalFormatImpl::getMaximumSignificantDigits
; Line 2900
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormat::getMaximumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ PROC ; icu_56::DecimalFormatImpl::getMaximumSignificantDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+132]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumSignificantDigits@DecimalFormatImpl@icu_56@@QBEHXZ ENDP ; icu_56::DecimalFormatImpl::getMaximumSignificantDigits
_TEXT	ENDS
PUBLIC	?_max@icu_56@@YAHHH@Z				; icu_56::_max
PUBLIC	?setMinimumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ; icu_56::DecimalFormat::setMinimumSignificantDigits
EXTRN	?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z:PROC ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMinimumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_max$ = -20						; size = 4
_this$ = -8						; size = 4
_min$ = 8						; size = 4
?setMinimumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormat::setMinimumSignificantDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2902
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2903
	cmp	DWORD PTR _min$[ebp], 1
	jge	SHORT $LN1@setMinimum@2
; Line 2904
	mov	DWORD PTR _min$[ebp], 1
$LN1@setMinimum@2:
; Line 2907
	mov	eax, DWORD PTR _min$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	call	?_max@icu_56@@YAHHH@Z			; icu_56::_max
	add	esp, 8
	mov	DWORD PTR _max$[ebp], eax
; Line 2908
	mov	eax, DWORD PTR _max$[ebp]
	push	eax
	mov	ecx, DWORD PTR _min$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits
; Line 2909
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMinimumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormat::setMinimumSignificantDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_max@icu_56@@YAHHH@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?_max@icu_56@@YAHHH@Z PROC				; icu_56::_max, COMDAT
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN3@max
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@max
$LN3@max:
	mov	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@max:
	mov	eax, DWORD PTR tv65[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_max@icu_56@@YAHHH@Z ENDP				; icu_56::_max
_TEXT	ENDS
PUBLIC	??_C@_1DE@GLMFFEDH@?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAi?$AAn?$AAS?$AAi?$AAg?$AAD?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z@4JA ; `icu_56::DecimalFormat::setMaximumSignificantDigits'::`2'::__LINE__Var
PUBLIC	?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ; icu_56::DecimalFormat::setMaximumSignificantDigits
;	COMDAT ??_C@_1DE@GLMFFEDH@?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAi?$AAn?$AAS?$AAi?$AAg?$AAD?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@GLMFFEDH@?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAi?$AAn?$AAS?$AAi?$AAg?$AAD?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@ DB 'f'
	DB	00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l', 00H, '-', 00H, '>', 00H
	DB	'f', 00H, 'M', 00H, 'i', 00H, 'n', 00H, 'S', 00H, 'i', 00H, 'g'
	DB	00H, 'D', 00H, 'i', 00H, 'g', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z@4JA DD 0b5fH ; `icu_56::DecimalFormat::setMaximumSignificantDigits'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_min$ = -20						; size = 4
_this$ = -8						; size = 4
_max$ = 8						; size = 4
?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z PROC ; icu_56::DecimalFormat::setMaximumSignificantDigits, COMDAT
; _this$ = ecx
; Line 2911
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2912
	cmp	DWORD PTR _max$[ebp], 1
	jge	SHORT $LN1@setMaximum
; Line 2913
	mov	DWORD PTR _max$[ebp], 1
$LN1@setMaximum:
; Line 2916
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+128], 1
	jge	SHORT $LN4@setMaximum
	mov	edx, DWORD PTR ?__LINE__Var@?1??setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z@4JA
	add	edx, 5
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1FK@MACIEABC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAi?$AA1?$AA8?$AAn?$AA?2@
	push	OFFSET ??_C@_1DE@GLMFFEDH@?$AAf?$AAI?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAM?$AAi?$AAn?$AAS?$AAi?$AAg?$AAD?$AAi?$AAg?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@setMaximum:
; Line 2917
	mov	eax, DWORD PTR _max$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	call	?_min@icu_56@@YAHHH@Z			; icu_56::_min
	add	esp, 8
	mov	DWORD PTR _min$[ebp], eax
; Line 2918
	mov	eax, DWORD PTR _max$[ebp]
	push	eax
	mov	ecx, DWORD PTR _min$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?setMinMaxSignificantDigits@DecimalFormatImpl@icu_56@@QAEXHH@Z ; icu_56::DecimalFormatImpl::setMinMaxSignificantDigits
; Line 2919
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ENDP ; icu_56::DecimalFormat::setMaximumSignificantDigits
_TEXT	ENDS
PUBLIC	?areSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::areSignificantDigitsUsed
PUBLIC	?areSignificantDigitsUsed@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::areSignificantDigitsUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?areSignificantDigitsUsed@DecimalFormat@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?areSignificantDigitsUsed@DecimalFormat@icu_56@@QBECXZ PROC ; icu_56::DecimalFormat::areSignificantDigitsUsed, COMDAT
; _this$ = ecx
; Line 2921
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2922
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?areSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QBECXZ ; icu_56::DecimalFormatImpl::areSignificantDigitsUsed
; Line 2923
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?areSignificantDigitsUsed@DecimalFormat@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormat::areSignificantDigitsUsed
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?areSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?areSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QBECXZ PROC ; icu_56::DecimalFormatImpl::areSignificantDigitsUsed, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+137]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?areSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QBECXZ ENDP ; icu_56::DecimalFormatImpl::areSignificantDigitsUsed
_TEXT	ENDS
PUBLIC	?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z ; icu_56::DecimalFormat::setSignificantDigitsUsed
EXTRN	?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z:PROC ; icu_56::DecimalFormatImpl::setSignificantDigitsUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_useSignificantDigits$ = 8				; size = 1
?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormat::setSignificantDigitsUsed, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2925
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2926
	movzx	eax, BYTE PTR _useSignificantDigits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setSignificantDigitsUsed@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setSignificantDigitsUsed
; Line 2927
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormat::setSignificantDigitsUsed
_TEXT	ENDS
EXTRN	?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::updateCurrency
EXTRN	?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::setCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_theCurrency$ = 8					; size = 4
_ec$ = 12						; size = 4
?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::setCurrency, COMDAT
; _this$ = ecx
; Line 2929
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2931
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theCurrency$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCurrency@NumberFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z ; icu_56::NumberFormat::setCurrency
; Line 2932
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?updateCurrency@DecimalFormatImpl@icu_56@@QAEXAAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::updateCurrency
; Line 2933
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setCurrency@DecimalFormat@icu_56@@UAEXPB_WAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::setCurrency
_TEXT	ENDS
PUBLIC	?setCurrencyUsage@DecimalFormat@icu_56@@QAEXW4UCurrencyUsage@@PAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setCurrencyUsage
EXTRN	?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z:PROC ; icu_56::DecimalFormatImpl::setCurrencyUsage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setCurrencyUsage@DecimalFormat@icu_56@@QAEXW4UCurrencyUsage@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newContext$ = 8					; size = 4
_ec$ = 12						; size = 4
?setCurrencyUsage@DecimalFormat@icu_56@@QAEXW4UCurrencyUsage@@PAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::setCurrencyUsage, COMDAT
; _this$ = ecx
; Line 2935
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2936
	mov	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+360]
	call	?setCurrencyUsage@DecimalFormatImpl@icu_56@@QAEXW4UCurrencyUsage@@AAW4UErrorCode@@@Z ; icu_56::DecimalFormatImpl::setCurrencyUsage
; Line 2937
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setCurrencyUsage@DecimalFormat@icu_56@@QAEXW4UCurrencyUsage@@PAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::setCurrencyUsage
_TEXT	ENDS
PUBLIC	?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ ; icu_56::DecimalFormatImpl::getCurrencyUsage
PUBLIC	?getCurrencyUsage@DecimalFormat@icu_56@@QBE?AW4UCurrencyUsage@@XZ ; icu_56::DecimalFormat::getCurrencyUsage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrencyUsage@DecimalFormat@icu_56@@QBE?AW4UCurrencyUsage@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyUsage@DecimalFormat@icu_56@@QBE?AW4UCurrencyUsage@@XZ PROC ; icu_56::DecimalFormat::getCurrencyUsage, COMDAT
; _this$ = ecx
; Line 2939
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2940
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ ; icu_56::DecimalFormatImpl::getCurrencyUsage
; Line 2941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyUsage@DecimalFormat@icu_56@@QBE?AW4UCurrencyUsage@@XZ ENDP ; icu_56::DecimalFormat::getCurrencyUsage
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ PROC ; icu_56::DecimalFormatImpl::getCurrencyUsage, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+700]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ ENDP ; icu_56::DecimalFormatImpl::getCurrencyUsage
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z
_TEXT	SEGMENT
_ec$ = -20						; size = 4
_this$ = -8						; size = 4
_theCurrency$ = 8					; size = 4
?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z PROC	; icu_56::DecimalFormat::setCurrency, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 2944
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2945
	mov	DWORD PTR _ec$[ebp], 0
; Line 2946
	mov	esi, esp
	lea	eax, DWORD PTR _ec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _theCurrency$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+120]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2947
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setCurrenc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@setCurrenc:
	DD	1
	DD	$LN4@setCurrenc
$LN4@setCurrenc:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@setCurrenc
$LN3@setCurrenc:
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?setCurrency@DecimalFormat@icu_56@@UAEXPB_W@Z ENDP	; icu_56::DecimalFormat::setCurrency
_TEXT	ENDS
EXTRN	_u_strncpy_56:PROC
EXTRN	?getCurrency@NumberFormat@icu_56@@QBEPB_WXZ:PROC ; icu_56::NumberFormat::getCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_intl$45592 = -32					; size = 4
_c$ = -20						; size = 4
_this$ = -8						; size = 4
_result$ = 8						; size = 4
_ec$ = 12						; size = 4
?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::getEffectiveCurrency, COMDAT
; _this$ = ecx
; Line 2949
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2950
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	cmp	DWORD PTR [ecx+696], 0
	jne	SHORT $LN2@getEffecti
; Line 2951
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2952
	jmp	SHORT $LN3@getEffecti
$LN2@getEffecti:
; Line 2954
	mov	eax, DWORD PTR _ec$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2955
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCurrency@NumberFormat@icu_56@@QBEPB_WXZ ; icu_56::NumberFormat::getCurrency
	mov	DWORD PTR _c$[ebp], eax
; Line 2956
	mov	eax, DWORD PTR _c$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@getEffecti
; Line 2958
	push	9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getConstSymbol@DecimalFormatImpl@icu_56@@ABEABVUnicodeString@2@W4ENumberFormatSymbol@DecimalFormatSymbols@2@@Z ; icu_56::DecimalFormatImpl::getConstSymbol
	mov	DWORD PTR _intl$45592[ebp], eax
; Line 2959
	mov	esi, esp
	mov	ecx, DWORD PTR _intl$45592[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c$[ebp], eax
$LN1@getEffecti:
; Line 2961
	push	3
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_u_strncpy_56
	add	esp, 12					; 0000000cH
; Line 2962
	xor	eax, eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	WORD PTR [ecx+6], ax
$LN3@getEffecti:
; Line 2963
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getEffectiveCurrency@DecimalFormat@icu_56@@MBEXPA_WAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::getEffectiveCurrency
_TEXT	ENDS
PUBLIC	??_GHashtable@icu_56@@QAEPAXI@Z			; icu_56::Hashtable::`scalar deleting destructor'
EXTRN	__imp_?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv86 = -280						; size = 4
tv77 = -280						; size = 4
$T54849 = -272						; size = 4
$T54850 = -260						; size = 4
$T54853 = -248						; size = 4
$T54854 = -236						; size = 4
_hTable$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::initHashForAffixPattern, COMDAT
; _this$ = ecx
; Line 2966
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2967
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@initHashFo
; Line 2968
	xor	eax, eax
	jmp	$LN4@initHashFo
$LN3@initHashFo:
; Line 2971
	mov	esi, esp
	push	56					; 00000038H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54850[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T54850[ebp], 0
	je	SHORT $LN6@initHashFo
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR $T54850[ebp]
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@CAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@initHashFo
$LN6@initHashFo:
	mov	DWORD PTR tv77[ebp], 0
$LN7@initHashFo:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T54849[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T54849[ebp]
	mov	DWORD PTR _hTable$[ebp], edx
	cmp	DWORD PTR _hTable$[ebp], 0
	jne	SHORT $LN2@initHashFo
; Line 2972
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 2973
	xor	eax, eax
	jmp	SHORT $LN4@initHashFo
$LN2@initHashFo:
; Line 2975
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initHashFo
; Line 2976
	mov	eax, DWORD PTR _hTable$[ebp]
	mov	DWORD PTR $T54854[ebp], eax
	mov	ecx, DWORD PTR $T54854[ebp]
	mov	DWORD PTR $T54853[ebp], ecx
	cmp	DWORD PTR $T54853[ebp], 0
	je	SHORT $LN8@initHashFo
	push	1
	mov	ecx, DWORD PTR $T54853[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN9@initHashFo
$LN8@initHashFo:
	mov	DWORD PTR tv86[ebp], 0
$LN9@initHashFo:
; Line 2977
	xor	eax, eax
	jmp	SHORT $LN4@initHashFo
$LN1@initHashFo:
; Line 2979
	mov	esi, esp
	push	OFFSET _decimfmtAffixPatternValueComparator
	mov	ecx, DWORD PTR _hTable$[ebp]
	call	DWORD PTR __imp_?setValueComparator@Hashtable@icu_56@@QAEP6ACTUElement@@0@ZP6AC00@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2980
	mov	eax, DWORD PTR _hTable$[ebp]
$LN4@initHashFo:
; Line 2981
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T54850[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initHashForAffixPattern@DecimalFormat@icu_56@@AAEPAVHashtable@2@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::initHashForAffixPattern
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _decimfmtAffixPatternValueComparator
_TEXT	SEGMENT
tv95 = -217						; size = 1
_affix_2$ = -20						; size = 4
_affix_1$ = -8						; size = 4
_val1$ = 8						; size = 4
_val2$ = 12						; size = 4
_decimfmtAffixPatternValueComparator PROC		; COMDAT
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 179
	mov	eax, DWORD PTR _val1$[ebp]
	mov	DWORD PTR _affix_1$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _val2$[ebp]
	mov	DWORD PTR _affix_2$[ebp], eax
; Line 190
	mov	esi, esp
	mov	eax, DWORD PTR _affix_2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _affix_1$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN3@decimfmtAf@3
	mov	edx, DWORD PTR _affix_2$[ebp]
	add	edx, 64					; 00000040H
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR _affix_1$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@decimfmtAf@3
	mov	ecx, DWORD PTR _affix_2$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _affix_1$[ebp]
	add	ecx, 128				; 00000080H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@decimfmtAf@3
	mov	eax, DWORD PTR _affix_2$[ebp]
	add	eax, 192				; 000000c0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _affix_1$[ebp]
	add	ecx, 192				; 000000c0H
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@decimfmtAf@3
	mov	edx, DWORD PTR _affix_1$[ebp]
	movsx	eax, BYTE PTR [edx+256]
	mov	ecx, DWORD PTR _affix_2$[ebp]
	movsx	edx, BYTE PTR [ecx+256]
	cmp	eax, edx
	jne	SHORT $LN3@decimfmtAf@3
	mov	BYTE PTR tv95[ebp], 1
	jmp	SHORT $LN4@decimfmtAf@3
$LN3@decimfmtAf@3:
	mov	BYTE PTR tv95[ebp], 0
$LN4@decimfmtAf@3:
	mov	al, BYTE PTR tv95[ebp]
; Line 191
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_decimfmtAffixPatternValueComparator ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GHashtable@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GHashtable@icu_56@@QAEPAXI@Z PROC			; icu_56::Hashtable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GHashtable@icu_56@@QAEPAXI@Z ENDP			; icu_56::Hashtable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GAffixPatternsForCurrency@icu_56@@QAEPAXI@Z	; icu_56::AffixPatternsForCurrency::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ
_TEXT	SEGMENT
tv83 = -304						; size = 4
tv77 = -304						; size = 4
$T54872 = -296						; size = 4
$T54873 = -284						; size = 4
$T54876 = -272						; size = 4
$T54877 = -260						; size = 4
_value$45621 = -56					; size = 4
_valueTok$45620 = -44					; size = 4
_element$ = -32						; size = 4
_pos$ = -20						; size = 4
_this$ = -8						; size = 4
?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ PROC ; icu_56::DecimalFormat::deleteHashForAffixPattern, COMDAT
; _this$ = ecx
; Line 2985
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2986
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+372], 0
	jne	SHORT $LN3@deleteHash
; Line 2987
	jmp	$LN4@deleteHash
$LN3@deleteHash:
; Line 2989
	mov	DWORD PTR _pos$[ebp], -1
; Line 2990
	mov	DWORD PTR _element$[ebp], 0
$LN2@deleteHash:
; Line 2991
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+372]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN1@deleteHash
; Line 2992
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$45620[ebp], ecx
; Line 2993
	mov	eax, DWORD PTR _valueTok$45620[ebp]
	mov	DWORD PTR _value$45621[ebp], eax
; Line 2994
	mov	eax, DWORD PTR _value$45621[ebp]
	mov	DWORD PTR $T54873[ebp], eax
	mov	ecx, DWORD PTR $T54873[ebp]
	mov	DWORD PTR $T54872[ebp], ecx
	cmp	DWORD PTR $T54872[ebp], 0
	je	SHORT $LN6@deleteHash
	push	1
	mov	ecx, DWORD PTR $T54872[ebp]
	call	??_GAffixPatternsForCurrency@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@deleteHash
$LN6@deleteHash:
	mov	DWORD PTR tv77[ebp], 0
$LN7@deleteHash:
; Line 2995
	jmp	SHORT $LN2@deleteHash
$LN1@deleteHash:
; Line 2996
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	mov	DWORD PTR $T54877[ebp], ecx
	mov	edx, DWORD PTR $T54877[ebp]
	mov	DWORD PTR $T54876[ebp], edx
	cmp	DWORD PTR $T54876[ebp], 0
	je	SHORT $LN8@deleteHash
	push	1
	mov	ecx, DWORD PTR $T54876[ebp]
	call	??_GHashtable@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN9@deleteHash
$LN8@deleteHash:
	mov	DWORD PTR tv83[ebp], 0
$LN9@deleteHash:
; Line 2997
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0
$LN4@deleteHash:
; Line 2998
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@deleteHash
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@deleteHash:
	DD	2
	DD	$LN12@deleteHash
$LN12@deleteHash:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@deleteHash
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN11@deleteHash
$LN11@deleteHash:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN10@deleteHash:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?deleteHashForAffixPattern@DecimalFormat@icu_56@@AAEXXZ ENDP ; icu_56::DecimalFormat::deleteHashForAffixPattern
_TEXT	ENDS
PUBLIC	??1AffixPatternsForCurrency@icu_56@@QAE@XZ	; icu_56::AffixPatternsForCurrency::~AffixPatternsForCurrency
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GAffixPatternsForCurrency@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAffixPatternsForCurrency@icu_56@@QAEPAXI@Z PROC	; icu_56::AffixPatternsForCurrency::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AffixPatternsForCurrency@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAffixPatternsForCurrency@icu_56@@QAEPAXI@Z ENDP	; icu_56::AffixPatternsForCurrency::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AffixPatternsForCurrency@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$2
__ehfuncinfo$??1AffixPatternsForCurrency@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1AffixPatternsForCurrency@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1AffixPatternsForCurrency@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1AffixPatternsForCurrency@icu_56@@QAE@XZ PROC		; icu_56::AffixPatternsForCurrency::~AffixPatternsForCurrency, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AffixPatternsForCurrency@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 192				; 000000c0H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1AffixPatternsForCurrency@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1AffixPatternsForCurrency@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AffixPatternsForCurrency@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AffixPatternsForCurrency@icu_56@@QAE@XZ ENDP		; icu_56::AffixPatternsForCurrency::~AffixPatternsForCurrency
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv140 = -408						; size = 4
tv144 = -404						; size = 4
tv93 = -404						; size = 4
$T45657 = -396						; size = 64
$T54901 = -324						; size = 4
$T54902 = -312						; size = 4
_copy$45652 = -108					; size = 4
_value$45650 = -96					; size = 4
_valueTok$45649 = -84					; size = 4
_key$45647 = -72					; size = 4
_keyTok$45646 = -60					; size = 4
_element$ = -48						; size = 4
_pos$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_status$ = 16						; size = 4
?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::copyHashForAffixPattern, COMDAT
; _this$ = ecx
; Line 3004
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 3005
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@copyHashFo
; Line 3006
	jmp	$LN6@copyHashFo
$LN5@copyHashFo:
; Line 3008
	mov	DWORD PTR _pos$[ebp], -1
; Line 3009
	mov	DWORD PTR _element$[ebp], 0
; Line 3010
	cmp	DWORD PTR _source$[ebp], 0
	je	$LN6@copyHashFo
$LN3@copyHashFo:
; Line 3011
	mov	esi, esp
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	call	DWORD PTR __imp_?nextElement@Hashtable@icu_56@@QBEPBUUHashElement@@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN6@copyHashFo
; Line 3012
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _keyTok$45646[ebp], ecx
; Line 3013
	mov	eax, DWORD PTR _keyTok$45646[ebp]
	mov	DWORD PTR _key$45647[ebp], eax
; Line 3014
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _valueTok$45649[ebp], ecx
; Line 3015
	mov	eax, DWORD PTR _valueTok$45649[ebp]
	mov	DWORD PTR _value$45650[ebp], eax
; Line 3021
	mov	esi, esp
	push	260					; 00000104H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T54902[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T54902[ebp], 0
	je	SHORT $LN8@copyHashFo
	mov	eax, DWORD PTR _value$45650[ebp]
	movzx	ecx, BYTE PTR [eax+256]
	push	ecx
	mov	edx, DWORD PTR _value$45650[ebp]
	add	edx, 192				; 000000c0H
	push	edx
	mov	eax, DWORD PTR _value$45650[ebp]
	add	eax, 128				; 00000080H
	push	eax
	mov	ecx, DWORD PTR _value$45650[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR _value$45650[ebp]
	push	edx
	mov	ecx, DWORD PTR $T54902[ebp]
	call	??0AffixPatternsForCurrency@icu_56@@QAE@ABVUnicodeString@1@000C@Z ; icu_56::AffixPatternsForCurrency::AffixPatternsForCurrency
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN9@copyHashFo
$LN8@copyHashFo:
	mov	DWORD PTR tv93[ebp], 0
$LN9@copyHashFo:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T54901[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T54901[ebp]
	mov	DWORD PTR _copy$45652[ebp], ecx
; Line 3022
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$45652[ebp]
	push	ecx
	mov	edi, esp
	mov	edx, DWORD PTR _key$45647[ebp]
	push	edx
	lea	ecx, DWORD PTR $T45657[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_?put@Hashtable@icu_56@@QAEPAXABVUnicodeString@2@PAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T45657[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3023
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@copyHashFo
; Line 3024
	jmp	SHORT $LN6@copyHashFo
$LN1@copyHashFo:
; Line 3026
	jmp	$LN3@copyHashFo
$LN6@copyHashFo:
; Line 3028
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@copyHashFo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN17@copyHashFo:
	DD	3
	DD	$LN16@copyHashFo
$LN16@copyHashFo:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN12@copyHashFo
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN13@copyHashFo
	DD	-84					; ffffffacH
	DD	4
	DD	$LN14@copyHashFo
$LN14@copyHashFo:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN13@copyHashFo:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	0
$LN12@copyHashFo:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T54902[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T45657[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?copyHashForAffixPattern@DecimalFormat@icu_56@@AAEXPBVHashtable@2@PAV32@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::copyHashForAffixPattern
EXTRN	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ:PROC ; icu_56::DecimalFormatImpl::updateGrouping
EXTRN	?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z:PROC ; icu_56::NumberFormat::setGroupingUsed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z PROC	; icu_56::DecimalFormat::setGroupingUsed, COMDAT
; _this$ = ecx
; Line 3031
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3032
	movzx	eax, BYTE PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setGroupingUsed@NumberFormat@icu_56@@UAEXC@Z ; icu_56::NumberFormat::setGroupingUsed
; Line 3033
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?updateGrouping@DecimalFormatImpl@icu_56@@QAEXXZ ; icu_56::DecimalFormatImpl::updateGrouping
; Line 3034
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGroupingUsed@DecimalFormat@icu_56@@UAEXC@Z ENDP	; icu_56::DecimalFormat::setGroupingUsed
_TEXT	ENDS
EXTRN	?setParseIntegerOnly@NumberFormat@icu_56@@UAEXC@Z:PROC ; icu_56::NumberFormat::setParseIntegerOnly
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newValue$ = 8						; size = 1
?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z PROC	; icu_56::DecimalFormat::setParseIntegerOnly, COMDAT
; _this$ = ecx
; Line 3037
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3038
	movzx	eax, BYTE PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseIntegerOnly@NumberFormat@icu_56@@UAEXC@Z ; icu_56::NumberFormat::setParseIntegerOnly
; Line 3039
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setParseIntegerOnly@DecimalFormat@icu_56@@UAEXC@Z ENDP	; icu_56::DecimalFormat::setParseIntegerOnly
_TEXT	ENDS
EXTRN	?setContext@NumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z:PROC ; icu_56::NumberFormat::setContext
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
_status$ = 12						; size = 4
?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::setContext, COMDAT
; _this$ = ecx
; Line 3042
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3043
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setContext@NumberFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ; icu_56::NumberFormat::setContext
; Line 3044
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setContext@DecimalFormat@icu_56@@UAEXW4UDisplayContext@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::setContext
_TEXT	ENDS
PUBLIC	?setScale@DecimalFormatImpl@icu_56@@AAEXH@Z	; icu_56::DecimalFormatImpl::setScale
PUBLIC	?setFailIfMoreThanMaxDigits@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setFailIfMoreThanMaxDigits
PUBLIC	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
PUBLIC	?setParseAllInput@DecimalFormat@icu_56@@QAEXW4UNumberFormatAttributeValue@@@Z ; icu_56::DecimalFormat::setParseAllInput
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_attr$ = 8						; size = 4
_newValue$ = 12						; size = 4
_status$ = 16						; size = 4
?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::setAttribute, COMDAT
; _this$ = ecx
; Line 3048
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3049
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN31@setAttribu
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN32@setAttribu
$LN31@setAttribu:
; Line 3051
	mov	eax, DWORD PTR _attr$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 4098		; 00001002H
	jg	SHORT $LN34@setAttribu
	cmp	DWORD PTR tv68[ebp], 4096		; 00001000H
	jge	$LN8@setAttribu
	cmp	DWORD PTR tv68[ebp], 23			; 00000017H
	ja	$LN1@setAttribu
	mov	ecx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN35@setAttribu[ecx*4]
$LN34@setAttribu:
	jmp	$LN1@setAttribu
$LN28@setAttribu:
; Line 3053
	cmp	DWORD PTR _newValue$[ebp], 0
	setne	al
	mov	esi, esp
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3054
	jmp	$LN29@setAttribu
$LN27@setAttribu:
; Line 3057
	cmp	DWORD PTR _newValue$[ebp], 0
	setne	al
	mov	esi, esp
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+88]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3058
	jmp	$LN29@setAttribu
$LN26@setAttribu:
; Line 3061
	cmp	DWORD PTR _newValue$[ebp], 0
	setne	al
	mov	esi, esp
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3062
	jmp	$LN29@setAttribu
$LN25@setAttribu:
; Line 3065
	cmp	DWORD PTR _newValue$[ebp], 0
	setne	al
	mov	esi, esp
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3066
	jmp	$LN29@setAttribu
$LN24@setAttribu:
; Line 3069
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3070
	jmp	$LN29@setAttribu
$LN23@setAttribu:
; Line 3073
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3074
	jmp	$LN29@setAttribu
$LN22@setAttribu:
; Line 3077
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3078
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3079
	jmp	$LN29@setAttribu
$LN21@setAttribu:
; Line 3082
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3083
	jmp	$LN29@setAttribu
$LN20@setAttribu:
; Line 3086
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3087
	jmp	$LN29@setAttribu
$LN19@setAttribu:
; Line 3090
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3091
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3092
	jmp	$LN29@setAttribu
$LN18@setAttribu:
; Line 3095
	cmp	DWORD PTR _newValue$[ebp], 0
	setne	al
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setSignificantDigitsUsed@DecimalFormat@icu_56@@QAEXC@Z ; icu_56::DecimalFormat::setSignificantDigitsUsed
; Line 3096
	jmp	$LN29@setAttribu
$LN17@setAttribu:
; Line 3099
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMaximumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ; icu_56::DecimalFormat::setMaximumSignificantDigits
; Line 3100
	jmp	$LN29@setAttribu
$LN16@setAttribu:
; Line 3103
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setMinimumSignificantDigits@DecimalFormat@icu_56@@QAEXH@Z ; icu_56::DecimalFormat::setMinimumSignificantDigits
; Line 3104
	jmp	$LN29@setAttribu
$LN15@setAttribu:
; Line 3107
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3108
	jmp	$LN29@setAttribu
$LN14@setAttribu:
; Line 3111
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3112
	jmp	$LN29@setAttribu
$LN13@setAttribu:
; Line 3115
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3116
	jmp	$LN29@setAttribu
$LN12@setAttribu:
; Line 3119
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3120
	jmp	$LN29@setAttribu
$LN11@setAttribu:
; Line 3124
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3125
	jmp	$LN29@setAttribu
$LN10@setAttribu:
; Line 3128
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+264]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3129
	jmp	$LN29@setAttribu
$LN9@setAttribu:
; Line 3133
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setParseAllInput@DecimalFormat@icu_56@@QAEXW4UNumberFormatAttributeValue@@@Z ; icu_56::DecimalFormat::setParseAllInput
; Line 3134
	jmp	$LN29@setAttribu
$LN8@setAttribu:
; Line 3141
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@setAttribu
; Line 3142
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 3143
	jmp	SHORT $LN6@setAttribu
$LN7@setAttribu:
; Line 3144
	cmp	DWORD PTR _attr$[ebp], 4096		; 00001000H
	jne	SHORT $LN5@setAttribu
; Line 3145
	movzx	eax, BYTE PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setFailIfMoreThanMaxDigits@DecimalFormatImpl@icu_56@@QAEXC@Z ; icu_56::DecimalFormatImpl::setFailIfMoreThanMaxDigits
$LN5@setAttribu:
; Line 3147
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _attr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
$LN6@setAttribu:
; Line 3149
	jmp	SHORT $LN29@setAttribu
$LN4@setAttribu:
; Line 3152
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+360]
	call	?setScale@DecimalFormatImpl@icu_56@@AAEXH@Z ; icu_56::DecimalFormatImpl::setScale
; Line 3153
	jmp	SHORT $LN29@setAttribu
$LN3@setAttribu:
; Line 3156
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newValue$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setCurrencyUsage@DecimalFormat@icu_56@@QAEXW4UCurrencyUsage@@PAW4UErrorCode@@@Z ; icu_56::DecimalFormat::setCurrencyUsage
; Line 3157
	jmp	SHORT $LN29@setAttribu
$LN2@setAttribu:
; Line 3160
	mov	esi, esp
	mov	eax, DWORD PTR _newValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3161
	jmp	SHORT $LN29@setAttribu
$LN1@setAttribu:
; Line 3164
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
$LN29@setAttribu:
; Line 3167
	mov	eax, DWORD PTR _this$[ebp]
$LN32@setAttribu:
; Line 3168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN35@setAttribu:
	DD	$LN27@setAttribu
	DD	$LN26@setAttribu
	DD	$LN25@setAttribu
	DD	$LN24@setAttribu
	DD	$LN23@setAttribu
	DD	$LN22@setAttribu
	DD	$LN21@setAttribu
	DD	$LN20@setAttribu
	DD	$LN19@setAttribu
	DD	$LN15@setAttribu
	DD	$LN14@setAttribu
	DD	$LN13@setAttribu
	DD	$LN1@setAttribu
	DD	$LN12@setAttribu
	DD	$LN11@setAttribu
	DD	$LN10@setAttribu
	DD	$LN18@setAttribu
	DD	$LN16@setAttribu
	DD	$LN17@setAttribu
	DD	$LN28@setAttribu
	DD	$LN9@setAttribu
	DD	$LN4@setAttribu
	DD	$LN2@setAttribu
	DD	$LN3@setAttribu
?setAttribute@DecimalFormat@icu_56@@UAEAAV12@W4UNumberFormatAttribute@@HAAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::setAttribute
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setFailIfMoreThanMaxDigits@DecimalFormatImpl@icu_56@@QAEXC@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_b$ = 8							; size = 1
?setFailIfMoreThanMaxDigits@DecimalFormatImpl@icu_56@@QAEXC@Z PROC ; icu_56::DecimalFormatImpl::setFailIfMoreThanMaxDigits, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmtimpl.h
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+1393], cl
; Line 251
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setFailIfMoreThanMaxDigits@DecimalFormatImpl@icu_56@@QAEXC@Z ENDP ; icu_56::DecimalFormatImpl::setFailIfMoreThanMaxDigits
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setScale@DecimalFormatImpl@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?setScale@DecimalFormatImpl@icu_56@@AAEXH@Z PROC	; icu_56::DecimalFormatImpl::setScale, COMDAT
; _this$ = ecx
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+120], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setScale@DecimalFormatImpl@icu_56@@AAEXH@Z ENDP	; icu_56::DecimalFormatImpl::setScale
_TEXT	ENDS
PUBLIC	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
EXTRN	?getMinimumFractionDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMinimumFractionDigits
EXTRN	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMaximumFractionDigits
EXTRN	?getMinimumIntegerDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMinimumIntegerDigits
EXTRN	?getMaximumIntegerDigits@NumberFormat@icu_56@@QBEHXZ:PROC ; icu_56::NumberFormat::getMaximumIntegerDigits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
_attr$ = 8						; size = 4
_status$ = 12						; size = 4
?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z PROC ; icu_56::DecimalFormat::getAttribute, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 3171
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3172
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN27@getAttribu
	or	eax, -1
	jmp	$LN28@getAttribu
$LN27@getAttribu:
; Line 3173
	mov	eax, DWORD PTR _attr$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 4098		; 00001002H
	jg	SHORT $LN30@getAttribu
	cmp	DWORD PTR tv68[ebp], 4096		; 00001000H
	jge	$LN5@getAttribu
	cmp	DWORD PTR tv68[ebp], 23			; 00000017H
	ja	$LN1@getAttribu
	mov	ecx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN31@getAttribu[ecx*4]
$LN30@getAttribu:
	jmp	$LN1@getAttribu
$LN24@getAttribu:
; Line 3175
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	jmp	$LN28@getAttribu
$LN23@getAttribu:
; Line 3178
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isParseIntegerOnly@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isParseIntegerOnly
	movsx	eax, al
	jmp	$LN28@getAttribu
$LN22@getAttribu:
; Line 3181
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isGroupingUsed@NumberFormat@icu_56@@QBECXZ ; icu_56::NumberFormat::isGroupingUsed
	movsx	eax, al
	jmp	$LN28@getAttribu
$LN21@getAttribu:
; Line 3184
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDecimalSeparatorAlwaysShown@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::isDecimalSeparatorAlwaysShown
	movsx	eax, al
	jmp	$LN28@getAttribu
$LN20@getAttribu:
; Line 3187
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMaximumIntegerDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMaximumIntegerDigits
	jmp	$LN28@getAttribu
$LN19@getAttribu:
; Line 3190
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumIntegerDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumIntegerDigits
	jmp	$LN28@getAttribu
$LN18@getAttribu:
; Line 3194
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumIntegerDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumIntegerDigits
	jmp	$LN28@getAttribu
$LN17@getAttribu:
; Line 3197
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMaximumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMaximumFractionDigits
	jmp	$LN28@getAttribu
$LN16@getAttribu:
; Line 3200
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumFractionDigits
	jmp	$LN28@getAttribu
$LN15@getAttribu:
; Line 3204
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumFractionDigits@NumberFormat@icu_56@@QBEHXZ ; icu_56::NumberFormat::getMinimumFractionDigits
	jmp	$LN28@getAttribu
$LN14@getAttribu:
; Line 3207
	mov	ecx, DWORD PTR _this$[ebp]
	call	?areSignificantDigitsUsed@DecimalFormat@icu_56@@QBECXZ ; icu_56::DecimalFormat::areSignificantDigitsUsed
	movsx	eax, al
	jmp	$LN28@getAttribu
$LN13@getAttribu:
; Line 3210
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMaximumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMaximumSignificantDigits
	jmp	$LN28@getAttribu
$LN12@getAttribu:
; Line 3213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumSignificantDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMinimumSignificantDigits
	jmp	$LN28@getAttribu
$LN11@getAttribu:
; Line 3216
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMultiplier@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMultiplier
	jmp	$LN28@getAttribu
$LN10@getAttribu:
; Line 3219
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGroupingSize@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getGroupingSize
	jmp	$LN28@getAttribu
$LN9@getAttribu:
; Line 3222
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN28@getAttribu
$LN8@getAttribu:
; Line 3225
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+212]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN28@getAttribu
$LN7@getAttribu:
; Line 3228
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+228]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN28@getAttribu
$LN6@getAttribu:
; Line 3231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getSecondaryGroupingSize@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getSecondaryGroupingSize
	jmp	SHORT $LN28@getAttribu
$LN5@getAttribu:
; Line 3237
	mov	eax, DWORD PTR _attr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 364				; 0000016cH
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	jmp	SHORT $LN28@getAttribu
$LN4@getAttribu:
; Line 3240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	mov	eax, DWORD PTR [ecx+120]
	jmp	SHORT $LN28@getAttribu
$LN3@getAttribu:
; Line 3243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	call	?getCurrencyUsage@DecimalFormatImpl@icu_56@@QBE?AW4UCurrencyUsage@@XZ ; icu_56::DecimalFormatImpl::getCurrencyUsage
	jmp	SHORT $LN28@getAttribu
$LN2@getAttribu:
; Line 3246
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMinimumGroupingDigits@DecimalFormat@icu_56@@QBEHXZ ; icu_56::DecimalFormat::getMinimumGroupingDigits
	jmp	SHORT $LN28@getAttribu
$LN1@getAttribu:
; Line 3249
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 3253
	or	eax, -1
$LN28@getAttribu:
; Line 3254
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN31@getAttribu:
	DD	$LN23@getAttribu
	DD	$LN22@getAttribu
	DD	$LN21@getAttribu
	DD	$LN20@getAttribu
	DD	$LN19@getAttribu
	DD	$LN18@getAttribu
	DD	$LN17@getAttribu
	DD	$LN16@getAttribu
	DD	$LN15@getAttribu
	DD	$LN11@getAttribu
	DD	$LN10@getAttribu
	DD	$LN9@getAttribu
	DD	$LN1@getAttribu
	DD	$LN8@getAttribu
	DD	$LN7@getAttribu
	DD	$LN6@getAttribu
	DD	$LN14@getAttribu
	DD	$LN12@getAttribu
	DD	$LN13@getAttribu
	DD	$LN24@getAttribu
	DD	$LN1@getAttribu
	DD	$LN4@getAttribu
	DD	$LN2@getAttribu
	DD	$LN3@getAttribu
?getAttribute@DecimalFormat@icu_56@@UBEHW4UNumberFormatAttribute@@AAW4UErrorCode@@@Z ENDP ; icu_56::DecimalFormat::getAttribute
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setParseAllInput@DecimalFormat@icu_56@@QAEXW4UNumberFormatAttributeValue@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?setParseAllInput@DecimalFormat@icu_56@@QAEXW4UNumberFormatAttributeValue@@@Z PROC ; icu_56::DecimalFormat::setParseAllInput, COMDAT
; _this$ = ecx
; Line 3257
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+380], ecx
; Line 3259
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setParseAllInput@DecimalFormat@icu_56@@QAEXW4UNumberFormatAttributeValue@@@Z ENDP ; icu_56::DecimalFormat::setParseAllInput
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\enumset.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
_TEXT	ENDS
PUBLIC	??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAE@XZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::~EnumSet<enum UNumberFormatAttribute,4096,4099>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::clear
_TEXT	ENDS
PUBLIC	?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toAdd$ = 8						; size = 4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	eax, DWORD PTR _toAdd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?add@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::add
_TEXT	ENDS
PUBLIC	?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toRemove$ = 8						; size = 4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _toRemove$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?remove@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::remove
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?contains@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::contains
_TEXT	ENDS
PUBLIC	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
_toSet$ = 8						; size = 4
_v$ = 12						; size = 4
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@set
	mov	eax, DWORD PTR _toSet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@set
$LN3@set:
	mov	DWORD PTR tv73[ebp], 0
$LN4@set:
	mov	ecx, DWORD PTR _toSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	not	eax
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx]
	or	eax, DWORD PTR tv73[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?set@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEXW4UNumberFormatAttribute@@H@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::set
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _toCheck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEHW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::get
_TEXT	ENDS
PUBLIC	?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _toCheck$[ebp], 4096		; 00001000H
	jb	SHORT $LN3@isValidEnu
	cmp	DWORD PTR _toCheck$[ebp], 4099		; 00001003H
	jae	SHORT $LN3@isValidEnu
	mov	BYTE PTR tv66[ebp], 1
	jmp	SHORT $LN4@isValidEnu
$LN3@isValidEnu:
	mov	BYTE PTR tv66[ebp], 0
$LN4@isValidEnu:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidEnum@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidEnum
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z
_TEXT	SEGMENT
tv66 = -205						; size = 1
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN3@isValidVal
	cmp	DWORD PTR _v$[ebp], 1
	je	SHORT $LN3@isValidVal
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isValidVal
$LN3@isValidVal:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isValidVal:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isValidValue@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBECH@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::isValidValue
_TEXT	ENDS
PUBLIC	??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QAEABV01@ABV01@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAll@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@QBEIXZ ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::getAll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_toCheck$ = 8						; size = 4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z PROC ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _toCheck$[ebp]
	sub	ecx, 4096				; 00001000H
	mov	eax, 1
	shl	eax, cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?flag@?$EnumSet@W4UNumberFormatAttribute@@$0BAAA@$0BAAD@@icu_56@@ABEIW4UNumberFormatAttribute@@@Z ENDP ; icu_56::EnumSet<enum UNumberFormatAttribute,4096,4099>::flag
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
PUBLIC	??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAE@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::~MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity, COMDAT
; _this$ = ecx
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getCapacity@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEHXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getCapacity
_TEXT	ENDS
PUBLIC	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
_TEXT	ENDS
PUBLIC	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart, COMDAT
; _this$ = ecx
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAlias@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getAlias
	add	eax, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
_TEXT	ENDS
PUBLIC	?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getArrayLimit@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayLimit
_TEXT	ENDS
PUBLIC	??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPAUdecNumber@@XZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator decNumber *
_TEXT	ENDS
PUBLIC	??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[], COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getArrayStart@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QBEPADXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::getArrayStart
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEAADH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator[]
_TEXT	ENDS
PUBLIC	?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_otherMemory$ = 8					; size = 4
_otherCapacity$ = 12					; size = 4
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 530
	cmp	DWORD PTR _otherMemory$[ebp], 0
	je	SHORT $LN2@aliasInste
	cmp	DWORD PTR _otherCapacity$[ebp], 0
	jle	SHORT $LN2@aliasInste
; Line 531
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherMemory$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _otherCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN2@aliasInste:
; Line 536
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?aliasInstead@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEXPAUdecNumber@@H@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::aliasInstead
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory, COMDAT
; _this$ = ecx
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 568
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@releaseMem
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN2@releaseMem:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
_TEXT	ENDS
PUBLIC	??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==, COMDAT
; _this$ = ecx
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator==
_TEXT	ENDS
PUBLIC	??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=, COMDAT
; _this$ = ecx
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE_NABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator!=
_TEXT	ENDS
PUBLIC	??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAE@ABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::MaybeStackHeaderAndArray<decNumber,char,40>
_TEXT	ENDS
PUBLIC	??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=, COMDAT
; _this$ = ecx
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXABV01@@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::operator=
_TEXT	ENDS
PUBLIC	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
EXTRN	??0DigitAffix@icu_56@@QAE@XZ:PROC		; icu_56::DigitAffix::DigitAffix
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\common\pluralmap.h
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_otherVariant$ = 8					; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _otherVariant$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	call	?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABVDigitAffix@1@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv90 = -260						; size = 4
tv89 = -256						; size = 4
$T55020 = -248						; size = 4
$T55021 = -236						; size = 4
_i$47537 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 88
	mov	DWORD PTR _i$47537[ebp], 1
	jmp	SHORT $LN3@PluralMap
$LN2@PluralMap:
	mov	eax, DWORD PTR _i$47537[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47537[ebp], eax
$LN3@PluralMap:
	cmp	DWORD PTR _i$47537[ebp], 6
	jge	$LN4@PluralMap
; Line 90
	mov	eax, DWORD PTR _i$47537[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN8@PluralMap
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T55021[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T55021[ebp], 0
	je	SHORT $LN6@PluralMap
	mov	edx, DWORD PTR _i$47537[ebp]
	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+128]
	push	ecx
	mov	ecx, DWORD PTR $T55021[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN7@PluralMap
$LN6@PluralMap:
	mov	DWORD PTR tv89[ebp], 0
$LN7@PluralMap:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T55020[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T55020[ebp]
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@PluralMap
$LN8@PluralMap:
	mov	DWORD PTR tv90[ebp], 0
$LN9@PluralMap:
	mov	ecx, DWORD PTR _i$47537[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
; Line 91
	jmp	$LN2@PluralMap
$LN4@PluralMap:
; Line 92
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__unwindfunclet$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T55021[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::PluralMap<icu_56::DigitAffix>
PUBLIC	??_GDigitAffix@icu_56@@QAEPAXI@Z		; icu_56::DigitAffix::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv148 = -280						; size = 4
tv94 = -280						; size = 4
$T55036 = -272						; size = 4
$T55037 = -260						; size = 4
$T55040 = -248						; size = 4
$T55041 = -236						; size = 4
_i$47549 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_other$ = 8						; size = 4
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::operator=, COMDAT
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _other$[ebp]
	jne	SHORT $LN10@operator@6
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN11@operator@6
$LN10@operator@6:
; Line 98
	mov	DWORD PTR _i$47549[ebp], 0
	jmp	SHORT $LN9@operator@6
$LN8@operator@6:
	mov	eax, DWORD PTR _i$47549[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47549[ebp], eax
$LN9@operator@6:
	cmp	DWORD PTR _i$47549[ebp], 6
	jge	$LN7@operator@6
; Line 99
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator@6
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN6@operator@6
; Line 100
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	jmp	$LN5@operator@6
$LN6@operator@6:
; Line 101
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN4@operator@6
; Line 102
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T55037[ebp], edx
	mov	eax, DWORD PTR $T55037[ebp]
	mov	DWORD PTR $T55036[ebp], eax
	cmp	DWORD PTR $T55036[ebp], 0
	je	SHORT $LN13@operator@6
	push	1
	mov	ecx, DWORD PTR $T55036[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN14@operator@6
$LN13@operator@6:
	mov	DWORD PTR tv94[ebp], 0
$LN14@operator@6:
; Line 103
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
	jmp	$LN5@operator@6
$LN4@operator@6:
; Line 104
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN5@operator@6
; Line 105
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T55041[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T55041[ebp], 0
	je	SHORT $LN15@operator@6
	mov	eax, DWORD PTR _i$47549[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	ecx, DWORD PTR $T55041[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN16@operator@6
$LN15@operator@6:
	mov	DWORD PTR tv148[ebp], 0
$LN16@operator@6:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T55040[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _i$47549[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T55040[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
$LN5@operator@6:
; Line 109
	jmp	$LN8@operator@6
$LN7@operator@6:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
$LN11@operator@6:
; Line 111
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T55041[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEAAV01@ABV01@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv74 = -256						; size = 4
$T55053 = -248						; size = 4
$T55054 = -236						; size = 4
_i$47568 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ PROC	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>, COMDAT
; _this$ = ecx
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 114
	mov	DWORD PTR _i$47568[ebp], 1
	jmp	SHORT $LN3@PluralMap@2
$LN2@PluralMap@2:
	mov	eax, DWORD PTR _i$47568[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47568[ebp], eax
$LN3@PluralMap@2:
	cmp	DWORD PTR _i$47568[ebp], 6
	jge	SHORT $LN4@PluralMap@2
; Line 115
	mov	eax, DWORD PTR _i$47568[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T55054[ebp], edx
	mov	eax, DWORD PTR $T55054[ebp]
	mov	DWORD PTR $T55053[ebp], eax
	cmp	DWORD PTR $T55053[ebp], 0
	je	SHORT $LN6@PluralMap@2
	push	1
	mov	ecx, DWORD PTR $T55053[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN7@PluralMap@2
$LN6@PluralMap@2:
	mov	DWORD PTR tv74[ebp], 0
$LN7@PluralMap@2:
; Line 116
	jmp	SHORT $LN2@PluralMap@2
$LN4@PluralMap@2:
; Line 117
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAE@XZ ENDP	; icu_56::PluralMap<icu_56::DigitAffix>::~PluralMap<icu_56::DigitAffix>
PUBLIC	__$ArrayPad$
PUBLIC	?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ; icu_56::PluralMap<icu_56::DigitAffix>::clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0
__ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
_TEXT	SEGMENT
tv86 = -400						; size = 4
tv87 = -396						; size = 4
tv81 = -396						; size = 4
$T47577 = -388						; size = 128
$T55067 = -252						; size = 4
$T55068 = -240						; size = 4
_i$47578 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::clear, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-400]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	lea	ecx, DWORD PTR $T47577[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv86[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	??4DigitAffix@icu_56@@QAEAAV01@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T47577[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
; Line 124
	mov	DWORD PTR _i$47578[ebp], 1
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR _i$47578[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47578[ebp], eax
$LN3@clear:
	cmp	DWORD PTR _i$47578[ebp], 6
	jge	SHORT $LN4@clear
; Line 125
	mov	eax, DWORD PTR _i$47578[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T55068[ebp], edx
	mov	eax, DWORD PTR $T55068[ebp]
	mov	DWORD PTR $T55067[ebp], eax
	cmp	DWORD PTR $T55067[ebp], 0
	je	SHORT $LN6@clear
	push	1
	mov	ecx, DWORD PTR $T55067[ebp]
	call	??_GDigitAffix@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@clear
$LN6@clear:
	mov	DWORD PTR tv81[ebp], 0
$LN7@clear:
; Line 126
	mov	eax, DWORD PTR _i$47578[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 127
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 128
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 400				; 00000190H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T47577[ebp]
	jmp	??1DigitAffix@icu_56@@QAE@XZ
__ehhandler$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::clear
PUBLIC	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::next, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _idx$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
	jmp	SHORT $LN4@next
$LN3@next:
; Line 140
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN4@next:
	cmp	DWORD PTR _idx$[ebp], 6
	jge	SHORT $LN2@next
; Line 141
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN1@next
; Line 142
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 143
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	jmp	SHORT $LN5@next
$LN1@next:
; Line 145
	jmp	SHORT $LN3@next
$LN2@next:
; Line 146
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 147
	xor	eax, eax
$LN5@next:
; Line 148
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::next
_TEXT	ENDS
PUBLIC	?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_result$ = -20						; size = 4
_this$ = -8						; size = 4
_index$ = 8						; size = 4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable, COMDAT
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?next@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEPBVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::next
	mov	DWORD PTR _result$[ebp], eax
; Line 155
	mov	eax, DWORD PTR _result$[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@AAW4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::nextMutable
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getOther, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getOther@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@XZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getOther
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z
_TEXT	SEGMENT
_index$ = -20						; size = 4
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 173
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN1@get
	cmp	DWORD PTR _index$[ebp], 6
	jge	SHORT $LN1@get
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN2@get
$LN1@get:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	jmp	SHORT $LN3@get
$LN2@get:
; Line 176
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN3@get:
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@PBD@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
EXTRN	__imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::get, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	esi, esp
	mov	eax, DWORD PTR _category$[ebp]
	push	eax
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@ABVUnicodeString@2@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@W4Category@PluralMapBase@2@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::get
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBEABVDigitAffix@2@ABVUnicodeString@2@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::get
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
_TEXT	ENDS
PUBLIC	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_status$ = 12						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _category$[ebp]
	push	ecx
	call	DWORD PTR __imp_?toCategory@PluralMapBase@icu_56@@SA?AW4Category@12@PBD@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
_TEXT	ENDS
PUBLIC	?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _defaultValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _category$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getMutableWithDefault@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QAEPAVDigitAffix@2@W4Category@PluralMapBase@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutableWithDefault
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z
_TEXT	SEGMENT
_i$47619 = -20						; size = 4
_this$ = -8						; size = 4
_rhs$ = 8						; size = 4
_eqFunc$ = 12						; size = 4
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::equals, COMDAT
; _this$ = ecx
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	DWORD PTR _i$47619[ebp], 0
	jmp	SHORT $LN7@equals@12
$LN6@equals@12:
	mov	eax, DWORD PTR _i$47619[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47619[ebp], eax
$LN7@equals@12:
	cmp	DWORD PTR _i$47619[ebp], 6
	jge	SHORT $LN5@equals@12
; Line 241
	mov	eax, DWORD PTR _i$47619[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$47619[ebp]
	mov	esi, DWORD PTR _rhs$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
	cmp	eax, DWORD PTR [esi+edx*4+128]
	jne	SHORT $LN4@equals@12
; Line 242
	jmp	SHORT $LN6@equals@12
$LN4@equals@12:
; Line 244
	mov	eax, DWORD PTR _i$47619[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN2@equals@12
	mov	eax, DWORD PTR _i$47619[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN3@equals@12
$LN2@equals@12:
; Line 245
	xor	al, al
	jmp	SHORT $LN8@equals@12
$LN3@equals@12:
; Line 247
	mov	esi, esp
	mov	eax, DWORD PTR _i$47619[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$47619[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	call	DWORD PTR _eqFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN1@equals@12
; Line 248
	xor	al, al
	jmp	SHORT $LN8@equals@12
$LN1@equals@12:
; Line 250
	jmp	$LN6@equals@12
$LN5@equals@12:
; Line 251
	mov	al, 1
$LN8@equals@12:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equals@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@QBECABV12@P6ACABVDigitAffix@2@1@Z@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::equals
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -288						; size = 4
tv88 = -284						; size = 4
tv85 = -280						; size = 4
$T55100 = -272						; size = 4
$T55101 = -260						; size = 4
$T55104 = -248						; size = 4
$T55105 = -236						; size = 4
_index$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_category$ = 8						; size = 4
_defaultValue$ = 12					; size = 4
_status$ = 16						; size = 4
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z PROC ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable, COMDAT
; _this$ = ecx
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@getMutable
; Line 263
	xor	eax, eax
	jmp	$LN6@getMutable
$LN5@getMutable:
; Line 265
	mov	eax, DWORD PTR _category$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 266
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@getMutable
	cmp	DWORD PTR _index$[ebp], 6
	jl	SHORT $LN4@getMutable
$LN3@getMutable:
; Line 267
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 268
	xor	eax, eax
	jmp	$LN6@getMutable
$LN4@getMutable:
; Line 270
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	$LN2@getMutable
; Line 272
	cmp	DWORD PTR _defaultValue$[ebp], 0
	jne	SHORT $LN12@getMutable
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T55101[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T55101[ebp], 0
	je	SHORT $LN8@getMutable
	mov	ecx, DWORD PTR $T55101[ebp]
	call	??0DigitAffix@icu_56@@QAE@XZ		; icu_56::DigitAffix::DigitAffix
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN9@getMutable
$LN8@getMutable:
	mov	DWORD PTR tv85[ebp], 0
$LN9@getMutable:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T55100[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T55100[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	jmp	SHORT $LN13@getMutable
$LN12@getMutable:
	mov	esi, esp
	push	128					; 00000080H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T55105[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T55105[ebp], 0
	je	SHORT $LN10@getMutable
	mov	edx, DWORD PTR _defaultValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T55105[ebp]
	call	??0DigitAffix@icu_56@@QAE@ABV01@@Z
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN11@getMutable
$LN10@getMutable:
	mov	DWORD PTR tv93[ebp], 0
$LN11@getMutable:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T55104[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T55104[ebp]
	mov	DWORD PTR tv88[ebp], ecx
$LN13@getMutable:
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [eax+edx*4+128], ecx
$LN2@getMutable:
; Line 274
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN1@getMutable
; Line 275
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@getMutable:
; Line 277
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN6@getMutable:
; Line 278
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T55101[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T55105[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getMutable@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEPAVDigitAffix@2@W4Category@PluralMapBase@2@PBV32@AAW4UErrorCode@@@Z ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::getMutable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ
_TEXT	SEGMENT
_i$47647 = -20						; size = 4
_this$ = -8						; size = 4
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ PROC ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew, COMDAT
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 282
	mov	DWORD PTR _i$47647[ebp], 1
	jmp	SHORT $LN3@initialize
$LN2@initialize:
	mov	eax, DWORD PTR _i$47647[ebp]
	add	eax, 1
	mov	DWORD PTR _i$47647[ebp], eax
$LN3@initialize:
	cmp	DWORD PTR _i$47647[ebp], 6
	jge	SHORT $LN4@initialize
; Line 283
	mov	eax, DWORD PTR _i$47647[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
; Line 284
	jmp	SHORT $LN2@initialize
$LN4@initialize:
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?initializeNew@?$PluralMap@VDigitAffix@icu_56@@@icu_56@@AAEXXZ ENDP ; icu_56::PluralMap<icu_56::DigitAffix>::initializeNew
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::LocalPointerBase<icu_56::DecimalFormatSymbols>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z PROC ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::LocalPointer<icu_56::DecimalFormatSymbols>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::LocalPointerBase<icu_56::DecimalFormatSymbols>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ENDP ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::LocalPointer<icu_56::DecimalFormatSymbols>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::~LocalPointerBase<icu_56::DecimalFormatSymbols>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T55125 = -236						; size = 4
$T55126 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55126[ebp], ecx
	mov	edx, DWORD PTR $T55126[ebp]
	mov	DWORD PTR $T55125[ebp], edx
	cmp	DWORD PTR $T55125[ebp], 0
	je	SHORT $LN3@LocalPoint
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T55125[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T55125[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::~LocalPointerBase<icu_56::DecimalFormatSymbols>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::~LocalPointerBase<icu_56::DecimalFormatSymbols>
__ehhandler$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::~LocalPointer<icu_56::DecimalFormatSymbols>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptInstead@?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z
_TEXT	SEGMENT
tv79 = -232						; size = 4
$T55138 = -224						; size = 4
$T55139 = -212						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?adoptInstead@?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z PROC ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::adoptInstead, COMDAT
; _this$ = ecx
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55139[ebp], ecx
	mov	edx, DWORD PTR $T55139[ebp]
	mov	DWORD PTR $T55138[ebp], edx
	cmp	DWORD PTR $T55138[ebp], 0
	je	SHORT $LN3@adoptInste
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T55138[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T55138[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@adoptInste
$LN3@adoptInste:
	mov	DWORD PTR tv79[ebp], 0
$LN4@adoptInste:
; Line 287
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptInstead@?$LocalPointer@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEXPAVDecimalFormatSymbols@2@@Z ENDP ; icu_56::LocalPointer<icu_56::DecimalFormatSymbols>::adoptInstead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::isNull, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBEPAVDecimalFormatSymbols@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBEPAVDecimalFormatSymbols@2@XZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QBEPAVDecimalFormatSymbols@2@XZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?orphan@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEPAVDecimalFormatSymbols@2@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEPAVDecimalFormatSymbols@2@XZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAEPAVDecimalFormatSymbols@2@XZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::orphan
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z PROC ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ENDP ; icu_56::LocalPointer<icu_56::NumberingSystem>::LocalPointer<icu_56::NumberingSystem>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T55153 = -236						; size = 4
$T55154 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55154[ebp], ecx
	mov	edx, DWORD PTR $T55154[ebp]
	mov	DWORD PTR $T55153[ebp], edx
	cmp	DWORD PTR $T55153[ebp], 0
	je	SHORT $LN3@LocalPoint@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T55153[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T55153[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@2
$LN3@LocalPoint@2:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@2:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
__ehhandler$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::NumberingSystem>::~LocalPointer<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QBEPAVNumberingSystem@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::operator->
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>
PUBLIC	??0?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@@Z ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::LocalPointerBase<icu_56::CurrencyAmount>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<icu_56::CurrencyAmount>::LocalPointer<icu_56::CurrencyAmount>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@@Z ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::LocalPointerBase<icu_56::CurrencyAmount>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint@3
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint@3
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint@3:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>
__ehhandler$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<icu_56::CurrencyAmount>::LocalPointer<icu_56::CurrencyAmount>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T55177 = -236						; size = 4
$T55178 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55178[ebp], ecx
	mov	edx, DWORD PTR $T55178[ebp]
	mov	DWORD PTR $T55177[ebp], edx
	cmp	DWORD PTR $T55177[ebp], 0
	je	SHORT $LN3@LocalPoint@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T55177[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T55177[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@4
$LN3@LocalPoint@4:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@4:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>
__ehhandler$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::CurrencyAmount>::~LocalPointer<icu_56::CurrencyAmount>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphan@?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAEPAVCurrencyAmount@2@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAEPAVCurrencyAmount@2@XZ PROC ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAEPAVCurrencyAmount@2@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::orphan
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GDigitAffix@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDigitAffix@icu_56@@QAEPAXI@Z PROC			; icu_56::DigitAffix::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitAffix@icu_56@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDigitAffix@icu_56@@QAEPAXI@Z ENDP			; icu_56::DigitAffix::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::LocalPointerBase<icu_56::DecimalFormatSymbols>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@PAVDecimalFormatSymbols@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::LocalPointerBase<icu_56::DecimalFormatSymbols>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::~LocalPointerBase<icu_56::DecimalFormatSymbols>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VDecimalFormatSymbols@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::DecimalFormatSymbols>::~LocalPointerBase<icu_56::DecimalFormatSymbols>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@PAVNumberingSystem@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::LocalPointerBase<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VNumberingSystem@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::NumberingSystem>::~LocalPointerBase<icu_56::NumberingSystem>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::LocalPointerBase<icu_56::CurrencyAmount>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@PAVCurrencyAmount@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::LocalPointerBase<icu_56::CurrencyAmount>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VCurrencyAmount@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CurrencyAmount>::~LocalPointerBase<icu_56::CurrencyAmount>
_TEXT	ENDS
PUBLIC	?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z
_TEXT	SEGMENT
_p$50110 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 592
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jl	$LN8@resize
; Line 596
	mov	eax, DWORD PTR _newCapacity$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$50110[ebp], eax
; Line 597
	cmp	DWORD PTR _p$50110[ebp], 0
	je	$LN7@resize
; Line 598
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN6@resize
; Line 599
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN5@resize
$LN6@resize:
; Line 600
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN5@resize
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@resize
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@resize:
; Line 604
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN5@resize
; Line 605
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN5@resize:
; Line 608
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$50110[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	?releaseMemory@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@AAEXXZ ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::releaseMemory
; Line 610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$50110[ebp]
	mov	DWORD PTR [eax], ecx
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 612
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
$LN7@resize:
; Line 614
	mov	eax, DWORD PTR _p$50110[ebp]
	jmp	SHORT $LN9@resize
; Line 615
	jmp	SHORT $LN9@resize
$LN8@resize:
; Line 616
	xor	eax, eax
$LN9@resize:
; Line 618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::resize
_TEXT	ENDS
PUBLIC	?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_length$ = 8						; size = 4
_resultCapacity$ = 12					; size = 4
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z PROC ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone, COMDAT
; _this$ = ecx
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@orphanOrCl
; Line 625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 626
	jmp	SHORT $LN5@orphanOrCl
$LN6@orphanOrCl:
; Line 627
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@orphanOrCl
; Line 628
	mov	DWORD PTR _length$[ebp], 0
	jmp	SHORT $LN3@orphanOrCl
$LN4@orphanOrCl:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN3@orphanOrCl
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx
$LN3@orphanOrCl:
; Line 635
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 636
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@orphanOrCl
; Line 637
	xor	eax, eax
	jmp	SHORT $LN7@orphanOrCl
$LN1@orphanOrCl:
; Line 639
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@orphanOrCl:
; Line 641
	mov	eax, DWORD PTR _resultCapacity$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 642
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 40			; 00000028H
; Line 644
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 645
	mov	eax, DWORD PTR _p$[ebp]
$LN7@orphanOrCl:
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?orphanOrClone@?$MaybeStackHeaderAndArray@UdecNumber@@D$0CI@@icu_56@@QAEPAUdecNumber@@HAAH@Z ENDP ; icu_56::MaybeStackHeaderAndArray<decNumber,char,40>::orphanOrClone
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_clone_ptr@VCurrencyPluralInfo@icu_56@@@icu_56@@YAXPAPAVCurrencyPluralInfo@0@PBV10@@Z
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T55210 = -212						; size = 4
$T55211 = -200						; size = 4
_pdest$ = 8						; size = 4
_source$ = 12						; size = 4
??$_clone_ptr@VCurrencyPluralInfo@icu_56@@@icu_56@@YAXPAPAVCurrencyPluralInfo@0@PBV10@@Z PROC ; icu_56::_clone_ptr<icu_56::CurrencyPluralInfo>, COMDAT
; File d:\mozilla\intl\icu\source\i18n\decimfmt.cpp
; Line 596
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 597
	mov	eax, DWORD PTR _pdest$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T55211[ebp], ecx
	mov	edx, DWORD PTR $T55211[ebp]
	mov	DWORD PTR $T55210[ebp], edx
	cmp	DWORD PTR $T55210[ebp], 0
	je	SHORT $LN5@clone_ptr
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T55210[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T55210[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN6@clone_ptr
$LN5@clone_ptr:
	mov	DWORD PTR tv74[ebp], 0
$LN6@clone_ptr:
; Line 598
	cmp	DWORD PTR _source$[ebp], 0
	jne	SHORT $LN2@clone_ptr
; Line 599
	mov	eax, DWORD PTR _pdest$[ebp]
	mov	DWORD PTR [eax], 0
; Line 600
	jmp	SHORT $LN3@clone_ptr
$LN2@clone_ptr:
; Line 601
	mov	ecx, DWORD PTR _source$[ebp]
	call	?clone@CurrencyPluralInfo@icu_56@@QBEPAV12@XZ ; icu_56::CurrencyPluralInfo::clone
	mov	ecx, DWORD PTR _pdest$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@clone_ptr:
; Line 603
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_clone_ptr@VCurrencyPluralInfo@icu_56@@@icu_56@@YAXPAPAVCurrencyPluralInfo@0@PBV10@@Z ENDP ; icu_56::_clone_ptr<icu_56::CurrencyPluralInfo>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\i18n\utrans.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
EXTRN	_uenum_nextDefault_56:PROC
_BSS	SEGMENT
?classID@?1??getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::ReplaceableGlue::getStaticClassID'::`2'::classID
_BSS	ENDS
CONST	SEGMENT
_utransEnumeration DD 00H
	DD	00H
	DD	FLAT:_utrans_enum_close
	DD	FLAT:_utrans_enum_count
	DD	FLAT:_utrans_enum_unext
	DD	FLAT:_uenum_nextDefault_56
	DD	FLAT:_utrans_enum_reset
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\include\unicode\utypes.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??2@YAPAXI@Z PROC					; operator new, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 412
	mov	DWORD PTR _q$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 414
	mov	eax, DWORD PTR _q$[ebp]
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_q$ = -8						; size = 4
___formal$ = 8						; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	DWORD PTR _q$[ebp], 0
; Line 441
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 5
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ; icu_56::Transliterator::getMaximumContextLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ PROC ; icu_56::Transliterator::getMaximumContextLength, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\i18n\unicode\translit.h
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1314
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 1315
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getMaximumContextLength@Transliterator@icu_56@@QBEHXZ ENDP ; icu_56::Transliterator::getMaximumContextLength
_TEXT	ENDS
PUBLIC	?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ; icu_56::Transliterator::setID
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_id$ = 8						; size = 4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z PROC ; icu_56::Transliterator::setID, COMDAT
; _this$ = ecx
; Line 1317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	esi, esp
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1320
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setID@Transliterator@icu_56@@IAEXABVUnicodeString@2@@Z ENDP ; icu_56::Transliterator::setID
_TEXT	ENDS
PUBLIC	?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ; icu_56::Transliterator::integerToken
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_i$ = 8							; size = 4
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z PROC ; icu_56::Transliterator::integerToken, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1327
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1328
	mov	eax, DWORD PTR _t$[ebp]
; Line 1329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@integerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@integerTok:
	DD	1
	DD	$LN4@integerTok
$LN4@integerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@integerTok
$LN3@integerTok:
	DB	116					; 00000074H
	DB	0
?integerToken@Transliterator@icu_56@@SA?ATToken@12@H@Z ENDP ; icu_56::Transliterator::integerToken
_TEXT	ENDS
PUBLIC	?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ; icu_56::Transliterator::pointerToken
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_p$ = 8							; size = 4
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z PROC ; icu_56::Transliterator::pointerToken, COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1333
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _t$[ebp], eax
; Line 1334
	mov	eax, DWORD PTR _t$[ebp]
; Line 1335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@pointerTok
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@pointerTok:
	DD	1
	DD	$LN4@pointerTok
$LN4@pointerTok:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@pointerTok
$LN3@pointerTok:
	DB	116					; 00000074H
	DB	0
?pointerToken@Transliterator@icu_56@@SA?ATToken@12@PAX@Z ENDP ; icu_56::Transliterator::pointerToken
_TEXT	ENDS
PUBLIC	?getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ ; icu_56::ReplaceableGlue::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ PROC	; icu_56::ReplaceableGlue::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\i18n\utrans.cpp
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ ENDP	; icu_56::ReplaceableGlue::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@ReplaceableGlue@icu_56@@UBEPAXXZ ; icu_56::ReplaceableGlue::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@ReplaceableGlue@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@ReplaceableGlue@icu_56@@UBEPAXXZ PROC ; icu_56::ReplaceableGlue::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@ReplaceableGlue@icu_56@@SAPAXXZ ; icu_56::ReplaceableGlue::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@ReplaceableGlue@icu_56@@UBEPAXXZ ENDP ; icu_56::ReplaceableGlue::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_7ReplaceableGlue@icu_56@@6B@			; icu_56::ReplaceableGlue::`vftable'
PUBLIC	??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z ; icu_56::ReplaceableGlue::ReplaceableGlue
PUBLIC	??_R4ReplaceableGlue@icu_56@@6B@		; icu_56::ReplaceableGlue::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReplaceableGlue@icu_56@@@8		; icu_56::ReplaceableGlue `RTTI Type Descriptor'
PUBLIC	??_R3ReplaceableGlue@icu_56@@8			; icu_56::ReplaceableGlue::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReplaceableGlue@icu_56@@8			; icu_56::ReplaceableGlue::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReplaceableGlue@icu_56@@8		; icu_56::ReplaceableGlue::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?extractBetween@ReplaceableGlue@icu_56@@UBEXHHAAVUnicodeString@2@@Z ; icu_56::ReplaceableGlue::extractBetween
PUBLIC	?handleReplaceBetween@ReplaceableGlue@icu_56@@UAEXHHABVUnicodeString@2@@Z ; icu_56::ReplaceableGlue::handleReplaceBetween
PUBLIC	?copy@ReplaceableGlue@icu_56@@UAEXHHH@Z		; icu_56::ReplaceableGlue::copy
PUBLIC	?getLength@ReplaceableGlue@icu_56@@MBEHXZ	; icu_56::ReplaceableGlue::getLength
PUBLIC	?getCharAt@ReplaceableGlue@icu_56@@MBE_WH@Z	; icu_56::ReplaceableGlue::getCharAt
PUBLIC	?getChar32At@ReplaceableGlue@icu_56@@MBEHH@Z	; icu_56::ReplaceableGlue::getChar32At
EXTRN	__imp_??0Replaceable@icu_56@@IAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EReplaceableGlue@icu_56@@UAEPAXI@Z:PROC	; icu_56::ReplaceableGlue::`vector deleting destructor'
EXTRN	?hasMetaData@Replaceable@icu_56@@UBECXZ:PROC	; icu_56::Replaceable::hasMetaData
EXTRN	?clone@Replaceable@icu_56@@UBEPAV12@XZ:PROC	; icu_56::Replaceable::clone
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReplaceableGlue@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReplaceableGlue@icu_56@@8 DD FLAT:??_R0?AVReplaceableGlue@icu_56@@@8 ; icu_56::ReplaceableGlue::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReplaceableGlue@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ReplaceableGlue@icu_56@@8
rdata$r	SEGMENT
??_R2ReplaceableGlue@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ReplaceableGlue@icu_56@@8 ; icu_56::ReplaceableGlue::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ReplaceableGlue@icu_56@@8
rdata$r	SEGMENT
??_R3ReplaceableGlue@icu_56@@8 DD 00H			; icu_56::ReplaceableGlue::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ReplaceableGlue@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceableGlue@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceableGlue@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::ReplaceableGlue `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceableGlue@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReplaceableGlue@icu_56@@6B@
rdata$r	SEGMENT
??_R4ReplaceableGlue@icu_56@@6B@ DD 00H			; icu_56::ReplaceableGlue::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReplaceableGlue@icu_56@@@8
	DD	FLAT:??_R3ReplaceableGlue@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7ReplaceableGlue@icu_56@@6B@
CONST	SEGMENT
??_7ReplaceableGlue@icu_56@@6B@ DD FLAT:??_R4ReplaceableGlue@icu_56@@6B@ ; icu_56::ReplaceableGlue::`vftable'
	DD	FLAT:??_EReplaceableGlue@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@ReplaceableGlue@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@ReplaceableGlue@icu_56@@UBEXHHAAVUnicodeString@2@@Z
	DD	FLAT:?handleReplaceBetween@ReplaceableGlue@icu_56@@UAEXHHABVUnicodeString@2@@Z
	DD	FLAT:?copy@ReplaceableGlue@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@Replaceable@icu_56@@UBECXZ
	DD	FLAT:?clone@Replaceable@icu_56@@UBEPAV12@XZ
	DD	FLAT:?getLength@ReplaceableGlue@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@ReplaceableGlue@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@ReplaceableGlue@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_replaceable$ = 8					; size = 4
_funcCallback$ = 12					; size = 4
??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z PROC ; icu_56::ReplaceableGlue::ReplaceableGlue, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0Replaceable@icu_56@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceableGlue@icu_56@@6B@
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _replaceable$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _funcCallback$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z ENDP ; icu_56::ReplaceableGlue::ReplaceableGlue
_TEXT	ENDS
PUBLIC	??1ReplaceableGlue@icu_56@@UAE@XZ		; icu_56::ReplaceableGlue::~ReplaceableGlue
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GReplaceableGlue@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GReplaceableGlue@icu_56@@UAEPAXI@Z PROC		; icu_56::ReplaceableGlue::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReplaceableGlue@icu_56@@UAE@XZ	; icu_56::ReplaceableGlue::~ReplaceableGlue
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReplaceableGlue@icu_56@@UAEPAXI@Z ENDP		; icu_56::ReplaceableGlue::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1Replaceable@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ReplaceableGlue@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ReplaceableGlue@icu_56@@UAE@XZ PROC			; icu_56::ReplaceableGlue::~ReplaceableGlue, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReplaceableGlue@icu_56@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Replaceable@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ReplaceableGlue@icu_56@@UAE@XZ ENDP			; icu_56::ReplaceableGlue::~ReplaceableGlue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getLength@ReplaceableGlue@icu_56@@MBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLength@ReplaceableGlue@icu_56@@MBEHXZ PROC		; icu_56::ReplaceableGlue::getLength, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getLength@ReplaceableGlue@icu_56@@MBEHXZ ENDP		; icu_56::ReplaceableGlue::getLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getCharAt@ReplaceableGlue@icu_56@@MBE_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?getCharAt@ReplaceableGlue@icu_56@@MBE_WH@Z PROC	; icu_56::ReplaceableGlue::getCharAt, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getCharAt@ReplaceableGlue@icu_56@@MBE_WH@Z ENDP	; icu_56::ReplaceableGlue::getCharAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getChar32At@ReplaceableGlue@icu_56@@MBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_offset$ = 8						; size = 4
?getChar32At@ReplaceableGlue@icu_56@@MBEHH@Z PROC	; icu_56::ReplaceableGlue::getChar32At, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	esi, esp
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getChar32At@ReplaceableGlue@icu_56@@MBEHH@Z ENDP	; icu_56::ReplaceableGlue::getChar32At
_TEXT	ENDS
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleReplaceBetween@ReplaceableGlue@icu_56@@UAEXHHABVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_text$ = 16						; size = 4
?handleReplaceBetween@ReplaceableGlue@icu_56@@UAEXHHABVUnicodeString@2@@Z PROC ; icu_56::ReplaceableGlue::handleReplaceBetween, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	esi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?handleReplaceBetween@ReplaceableGlue@icu_56@@UAEXHHABVUnicodeString@2@@Z ENDP ; icu_56::ReplaceableGlue::handleReplaceBetween
_TEXT	ENDS
EXTRN	__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractBetween@ReplaceableGlue@icu_56@@UBEXHHAAVUnicodeString@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_target$ = 16						; size = 4
?extractBetween@ReplaceableGlue@icu_56@@UBEXHHAAVUnicodeString@2@@Z PROC ; icu_56::ReplaceableGlue::extractBetween, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extractBetween@ReplaceableGlue@icu_56@@UBEXHHAAVUnicodeString@2@@Z ENDP ; icu_56::ReplaceableGlue::extractBetween
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?copy@ReplaceableGlue@icu_56@@UAEXHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_limit$ = 12						; size = 4
_dest$ = 16						; size = 4
?copy@ReplaceableGlue@icu_56@@UAEXHHH@Z PROC		; icu_56::ReplaceableGlue::copy, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	esi, esp
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _limit$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 125
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?copy@ReplaceableGlue@icu_56@@UAEXHHH@Z ENDP		; icu_56::ReplaceableGlue::copy
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_openU_56
EXTRN	?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::createFromRules
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::createInstance
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_openU_56
_TEXT	SEGMENT
$T43900 = -488						; size = 4
$T43901 = -476						; size = 4
$T43902 = -464						; size = 4
$T43903 = -452						; size = 4
_trans$36873 = -248					; size = 4
_ruleStr$36872 = -236					; size = 64
_trans$36866 = -164					; size = 4
_ID$ = -152						; size = 64
_temp$ = -80						; size = 72
__$ArrayPad$ = -4					; size = 4
_id$ = 8						; size = 4
_idLength$ = 12						; size = 4
_dir$ = 16						; size = 4
_rules$ = 20						; size = 4
_rulesLength$ = 24					; size = 4
_parseError$ = 28					; size = 4
_status$ = 32						; size = 4
_utrans_openU_56 PROC					; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 140
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN7@utrans_ope
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@utrans_ope
$LN7@utrans_ope:
; Line 141
	xor	eax, eax
	jmp	$LN9@utrans_ope
$LN8@utrans_ope:
; Line 143
	cmp	DWORD PTR _id$[ebp], 0
	jne	SHORT $LN6@utrans_ope
; Line 144
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 145
	xor	eax, eax
	jmp	$LN9@utrans_ope
$LN6@utrans_ope:
; Line 149
	cmp	DWORD PTR _parseError$[ebp], 0
	jne	SHORT $LN5@utrans_ope
; Line 150
	lea	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _parseError$[ebp], eax
$LN5@utrans_ope:
; Line 153
	mov	esi, esp
	mov	eax, DWORD PTR _idLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	cmp	DWORD PTR _idLength$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 155
	cmp	DWORD PTR _rules$[ebp], 0
	jne	$LN4@utrans_ope
; Line 157
	mov	DWORD PTR _trans$36866[ebp], 0
; Line 159
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dir$[ebp]
	push	edx
	lea	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInstance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _trans$36866[ebp], eax
; Line 161
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@utrans_ope
; Line 162
	mov	DWORD PTR $T43900[ebp], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T43900[ebp]
	jmp	$LN9@utrans_ope
$LN3@utrans_ope:
; Line 164
	mov	eax, DWORD PTR _trans$36866[ebp]
	mov	DWORD PTR $T43901[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T43901[ebp]
	jmp	$LN9@utrans_ope
; Line 165
	jmp	$LN2@utrans_ope
$LN4@utrans_ope:
; Line 168
	mov	esi, esp
	mov	eax, DWORD PTR _rulesLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	push	ecx
	cmp	DWORD PTR _rulesLength$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _ruleStr$36872[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 170
	mov	DWORD PTR _trans$36873[ebp], 0
; Line 171
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dir$[ebp]
	push	edx
	lea	eax, DWORD PTR _ruleStr$36872[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createFromRules
	add	esp, 20					; 00000014H
	mov	DWORD PTR _trans$36873[ebp], eax
; Line 172
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@utrans_ope
; Line 173
	mov	DWORD PTR $T43902[ebp], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleStr$36872[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T43902[ebp]
	jmp	SHORT $LN9@utrans_ope
$LN1@utrans_ope:
; Line 176
	mov	eax, DWORD PTR _trans$36873[ebp]
	mov	DWORD PTR $T43903[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ruleStr$36872[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T43903[ebp]
	jmp	SHORT $LN9@utrans_ope
$LN2@utrans_ope:
; Line 178
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@utrans_ope:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@utrans_ope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@utrans_ope:
	DD	3
	DD	$LN14@utrans_ope
$LN14@utrans_ope:
	DD	-80					; ffffffb0H
	DD	72					; 00000048H
	DD	$LN11@utrans_ope
	DD	-152					; ffffff68H
	DD	64					; 00000040H
	DD	$LN12@utrans_ope
	DD	-236					; ffffff14H
	DD	64					; 00000040H
	DD	$LN13@utrans_ope
$LN13@utrans_ope:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN12@utrans_ope:
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN11@utrans_ope:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_utrans_openU_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_open_56
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_open_56
_TEXT	SEGMENT
$T43916 = -276						; size = 4
_ID$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_id$ = 8						; size = 4
_dir$ = 12						; size = 4
_rules$ = 16						; size = 4
_rulesLength$ = 20					; size = 4
_parseError$ = 24					; size = 4
_status$ = 28						; size = 4
_utrans_open_56 PROC					; COMDAT
; File d:\mozilla\intl\icu\source\i18n\utrans.cpp
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 187
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 190
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rulesLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _rules$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dir$[ebp]
	push	ecx
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_utrans_openU_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T43916[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T43916[ebp]
; Line 191
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@utrans_ope@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@utrans_ope@2:
	DD	1
	DD	$LN4@utrans_ope@2
$LN4@utrans_ope@2:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN3@utrans_ope@2
$LN3@utrans_ope@2:
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_utrans_open_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_openInverse_56
EXTRN	?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z:PROC ; icu_56::Transliterator::createInverse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_openInverse_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_trans$ = 8						; size = 4
_status$ = 12						; size = 4
_utrans_openInverse_56 PROC				; COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN1@utrans_ope@3
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@utrans_ope@3
$LN1@utrans_ope@3:
	xor	eax, eax
	jmp	SHORT $LN3@utrans_ope@3
$LN2@utrans_ope@3:
; Line 200
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	call	?createInverse@Transliterator@icu_56@@QBEPAV12@AAW4UErrorCode@@@Z ; icu_56::Transliterator::createInverse
	mov	DWORD PTR _result$[ebp], eax
; Line 202
	mov	eax, DWORD PTR _result$[ebp]
$LN3@utrans_ope@3:
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_openInverse_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_clone_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_clone_56
_TEXT	SEGMENT
_t$ = -8						; size = 4
_trans$ = 8						; size = 4
_status$ = 12						; size = 4
_utrans_clone_56 PROC					; COMDAT
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 209
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@utrans_clo
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@utrans_clo
$LN3@utrans_clo:
	xor	eax, eax
	jmp	SHORT $LN5@utrans_clo
$LN4@utrans_clo:
; Line 211
	cmp	DWORD PTR _trans$[ebp], 0
	jne	SHORT $LN2@utrans_clo
; Line 212
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 213
	xor	eax, eax
	jmp	SHORT $LN5@utrans_clo
$LN2@utrans_clo:
; Line 216
	mov	eax, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$[ebp], eax
; Line 217
	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN1@utrans_clo
; Line 218
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
$LN1@utrans_clo:
; Line 220
	mov	eax, DWORD PTR _t$[ebp]
$LN5@utrans_clo:
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_clone_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_close_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_close_56
_TEXT	SEGMENT
tv74 = -220						; size = 4
$T43926 = -212						; size = 4
$T43927 = -200						; size = 4
_trans$ = 8						; size = 4
_utrans_close_56 PROC					; COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 225
	mov	eax, DWORD PTR _trans$[ebp]
	mov	DWORD PTR $T43927[ebp], eax
	mov	ecx, DWORD PTR $T43927[ebp]
	mov	DWORD PTR $T43926[ebp], ecx
	cmp	DWORD PTR $T43926[ebp], 0
	je	SHORT $LN3@utrans_clo@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43926[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43926[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@utrans_clo@2
$LN3@utrans_clo@2:
	mov	DWORD PTR tv74[ebp], 0
$LN1@utrans_clo@2:
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_close_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_getUnicodeID_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_getUnicodeID_56
_TEXT	SEGMENT
_ID$ = -8						; size = 4
_trans$ = 8						; size = 4
_resultLength$ = 12					; size = 4
_utrans_getUnicodeID_56 PROC				; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ID$[ebp], eax
; Line 233
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@utrans_get
; Line 234
	mov	esi, esp
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@utrans_get:
; Line 236
	mov	esi, esp
	mov	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 237
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_getUnicodeID_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_getID_56
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_getID_56
_TEXT	SEGMENT
_trans$ = 8						; size = 4
_buf$ = 12						; size = 4
_bufCapacity$ = 16					; size = 4
_utrans_getID_56 PROC					; COMDAT
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 243
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _bufCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	push	0
	mov	edx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_getID_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_register_56
EXTRN	?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z:PROC ; icu_56::Transliterator::registerInstance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_register_56
_TEXT	SEGMENT
_adoptedTrans$ = 8					; size = 4
_status$ = 12						; size = 4
_utrans_register_56 PROC				; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 249
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN1@utrans_reg
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@utrans_reg
$LN1@utrans_reg:
	jmp	SHORT $LN3@utrans_reg
$LN2@utrans_reg:
; Line 251
	mov	eax, DWORD PTR _adoptedTrans$[ebp]
	push	eax
	call	?registerInstance@Transliterator@icu_56@@SAXPAV12@@Z ; icu_56::Transliterator::registerInstance
	add	esp, 4
$LN3@utrans_reg:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_register_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_unregisterID_56
EXTRN	?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z:PROC ; icu_56::Transliterator::unregister
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_unregisterID_56
_TEXT	SEGMENT
_ID$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_id$ = 8						; size = 4
_idLength$ = 12						; size = 4
_utrans_unregisterID_56 PROC				; COMDAT
; Line 255
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 256
	mov	esi, esp
	mov	eax, DWORD PTR _idLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	cmp	DWORD PTR _idLength$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 257
	lea	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z ; icu_56::Transliterator::unregister
	add	esp, 4
; Line 258
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@utrans_unr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@utrans_unr:
	DD	1
	DD	$LN4@utrans_unr
$LN4@utrans_unr:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN3@utrans_unr
$LN3@utrans_unr:
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_utrans_unregisterID_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_unregister_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_unregister_56
_TEXT	SEGMENT
_ID$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_id$ = 8						; size = 4
_utrans_unregister_56 PROC				; COMDAT
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 262
	mov	esi, esp
	push	0
	push	-1
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	lea	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?unregister@Transliterator@icu_56@@SAXABVUnicodeString@2@@Z ; icu_56::Transliterator::unregister
	add	esp, 4
; Line 264
	mov	esi, esp
	lea	ecx, DWORD PTR _ID$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@utrans_unr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@utrans_unr@2:
	DD	1
	DD	$LN4@utrans_unr@2
$LN4@utrans_unr@2:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN3@utrans_unr@2
$LN3@utrans_unr@2:
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_utrans_unregister_56 ENDP
_TEXT	ENDS
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`local vftable'
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_setFilter_56
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeSet@icu_56@@@8			; icu_56::UnicodeSet `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeSet@icu_56@@8			; icu_56::UnicodeSet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeSet@icu_56@@8		; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UnicodeFilter@icu_56@@8		; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFilter@icu_56@@@8		; icu_56::UnicodeFilter `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFilter@icu_56@@8			; icu_56::UnicodeFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8		; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUnicodeFunctor@icu_56@@@8		; icu_56::UnicodeFunctor `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeFunctor@icu_56@@8			; icu_56::UnicodeFunctor::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUnicodeMatcher@icu_56@@@8		; icu_56::UnicodeMatcher `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeMatcher@icu_56@@8			; icu_56::UnicodeMatcher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8		; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
PUBLIC	??_EUnicodeSet@icu_56@@W3AEPAXI@Z		; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z:PROC ; icu_56::Transliterator::adoptFilter
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	??_EUnicodeSet@icu_56@@UAEPAXI@Z:PROC		; icu_56::UnicodeSet::`vector deleting destructor'
EXTRN	?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeSet::getDynamicClassID
EXTRN	?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ:PROC ; icu_56::UnicodeSet::clone
EXTRN	?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:PROC ; icu_56::UnicodeFilter::toMatcher
EXTRN	?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:PROC ; icu_56::UnicodeFunctor::toReplacer
EXTRN	?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:PROC ; icu_56::UnicodeFilter::setData
EXTRN	?contains@UnicodeSet@icu_56@@UBECH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	??8UnicodeSet@icu_56@@UBECABV01@@Z:PROC		; icu_56::UnicodeSet::operator==
EXTRN	?hashCode@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::hashCode
EXTRN	?size@UnicodeSet@icu_56@@UBEHXZ:PROC		; icu_56::UnicodeSet::size
EXTRN	?isEmpty@UnicodeSet@icu_56@@UBECXZ:PROC		; icu_56::UnicodeSet::isEmpty
EXTRN	?contains@UnicodeSet@icu_56@@UBECHH@Z:PROC	; icu_56::UnicodeSet::contains
EXTRN	?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z:PROC ; icu_56::UnicodeSet::containsAll
EXTRN	?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::add
EXTRN	?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::addAll
EXTRN	?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::retainAll
EXTRN	?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::complementAll
EXTRN	?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:PROC ; icu_56::UnicodeSet::removeAll
EXTRN	?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::retain
EXTRN	?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC	; icu_56::UnicodeSet::remove
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z:PROC ; icu_56::UnicodeSet::complement
EXTRN	?complement@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::complement
EXTRN	?clear@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::clear
EXTRN	?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC ; icu_56::UnicodeSet::removeAllStrings
EXTRN	?getRangeCount@UnicodeSet@icu_56@@UBEHXZ:PROC	; icu_56::UnicodeSet::getRangeCount
EXTRN	?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeStart
EXTRN	?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z:PROC	; icu_56::UnicodeSet::getRangeEnd
EXTRN	?compact@UnicodeSet@icu_56@@UAEAAV12@XZ:PROC	; icu_56::UnicodeSet::compact
EXTRN	?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:PROC ; icu_56::UnicodeSet::matches
EXTRN	?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z:PROC ; icu_56::UnicodeSet::toPattern
EXTRN	?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z:PROC ; icu_56::UnicodeSet::matchesIndexValue
EXTRN	?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z:PROC ; icu_56::UnicodeSet::addMatchSetTo
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeMatcher@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeMatcher@icu_56@@8 DD 00H			; icu_56::UnicodeMatcher::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeMatcher@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeMatcher@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeMatcher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeMatcher@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UnicodeMatcher@icu_56@@8 DD FLAT:??_R0?AVUnicodeMatcher@icu_56@@@8 ; icu_56::UnicodeMatcher::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFunctor@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFunctor@icu_56@@8 DD 00H			; icu_56::UnicodeFunctor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFunctor@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFunctor@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFunctor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFunctor@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8 DD FLAT:??_R0?AVUnicodeFunctor@icu_56@@@8 ; icu_56::UnicodeFunctor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFunctor@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeFilter@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeFilter@icu_56@@8 DD 00H			; icu_56::UnicodeFilter::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeFilter@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeFilter@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeFilter@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeFilter@icu_56@@8 DD FLAT:??_R0?AVUnicodeFilter@icu_56@@@8 ; icu_56::UnicodeFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeFilter@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeSet@icu_56@@8 DD FLAT:??_R0?AVUnicodeSet@icu_56@@@8 ; icu_56::UnicodeSet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeSet@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeSet@icu_56@@8 ; icu_56::UnicodeSet::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UnicodeFilter@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UnicodeMatcher@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeSet@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeSet@icu_56@@8 DD 00H			; icu_56::UnicodeSet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeSet@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeSet@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeSet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeSet@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@
rdata$r	SEGMENT
??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD 00H	; icu_56::UnicodeSet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeSet@icu_56@@@8
	DD	FLAT:??_R3UnicodeSet@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@W3AEPAXI@Z
	DD	FLAT:?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z
	DD	FLAT:?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z
	DD	FLAT:?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z
	DD	FLAT:?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z
CONST	ENDS
;	COMDAT ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
CONST	SEGMENT
??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@ DD FLAT:??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@ ; icu_56::UnicodeSet::`local vftable'
	DD	FLAT:??_EUnicodeSet@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ
	DD	FLAT:?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ
	DD	FLAT:?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ
	DD	FLAT:?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ
	DD	FLAT:?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECH@Z
	DD	FLAT:??8UnicodeSet@icu_56@@UBECABV01@@Z
	DD	FLAT:?hashCode@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?size@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?isEmpty@UnicodeSet@icu_56@@UBECXZ
	DD	FLAT:?contains@UnicodeSet@icu_56@@UBECHH@Z
	DD	FLAT:?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z
	DD	FLAT:?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z
	DD	FLAT:?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z
	DD	FLAT:?complement@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?clear@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ
	DD	FLAT:?getRangeCount@UnicodeSet@icu_56@@UBEHXZ
	DD	FLAT:?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z
	DD	FLAT:?compact@UnicodeSet@icu_56@@UAEAAV12@XZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _utrans_setFilter_56
_TEXT	SEGMENT
tv140 = -332						; size = 4
tv89 = -332						; size = 4
$T43951 = -324						; size = 4
$T43952 = -312						; size = 4
$T43955 = -300						; size = 4
$T43956 = -288						; size = 4
_pat$36953 = -84					; size = 64
_filter$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_trans$ = 8						; size = 4
_filterPattern$ = 12					; size = 4
_filterPatternLen$ = 16					; size = 4
_status$ = 20						; size = 4
_utrans_setFilter_56 PROC				; COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 272
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN4@utrans_set
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@utrans_set
$LN4@utrans_set:
	jmp	$LN6@utrans_set
$LN5@utrans_set:
; Line 273
	mov	DWORD PTR _filter$[ebp], 0
; Line 274
	cmp	DWORD PTR _filterPattern$[ebp], 0
	je	$LN3@utrans_set
	mov	eax, DWORD PTR _filterPattern$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	$LN3@utrans_set
; Line 276
	mov	esi, esp
	mov	eax, DWORD PTR _filterPatternLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filterPattern$[ebp]
	push	ecx
	cmp	DWORD PTR _filterPatternLen$[ebp], 0
	setl	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _pat$36953[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 277
	mov	esi, esp
	push	52					; 00000034H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T43952[ebp], eax
	cmp	DWORD PTR $T43952[ebp], 0
	je	SHORT $LN8@utrans_set
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pat$36953[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T43952[ebp]
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABVUnicodeString@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T43952[ebp]
	mov	DWORD PTR [edx], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeFunctor@1@@
	mov	eax, DWORD PTR $T43952[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_SUnicodeSet@icu_56@@6BUnicodeMatcher@1@@
	mov	ecx, DWORD PTR $T43952[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	jmp	SHORT $LN9@utrans_set
$LN8@utrans_set:
	mov	DWORD PTR tv89[ebp], 0
$LN9@utrans_set:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T43951[ebp], edx
	mov	eax, DWORD PTR $T43951[ebp]
	mov	DWORD PTR _filter$[ebp], eax
; Line 279
	cmp	DWORD PTR _filter$[ebp], 0
	jne	SHORT $LN2@utrans_set
; Line 280
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 281
	mov	esi, esp
	lea	ecx, DWORD PTR _pat$36953[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN6@utrans_set
$LN2@utrans_set:
; Line 283
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@utrans_set
; Line 284
	mov	eax, DWORD PTR _filter$[ebp]
	mov	DWORD PTR $T43956[ebp], eax
	mov	ecx, DWORD PTR $T43956[ebp]
	mov	DWORD PTR $T43955[ebp], ecx
	cmp	DWORD PTR $T43955[ebp], 0
	je	SHORT $LN10@utrans_set
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T43955[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T43955[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN11@utrans_set
$LN10@utrans_set:
	mov	DWORD PTR tv140[ebp], 0
$LN11@utrans_set:
; Line 285
	mov	DWORD PTR _filter$[ebp], 0
$LN1@utrans_set:
; Line 287
	mov	esi, esp
	lea	ecx, DWORD PTR _pat$36953[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@utrans_set:
; Line 288
	mov	eax, DWORD PTR _filter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	call	?adoptFilter@Transliterator@icu_56@@QAEXPAVUnicodeFilter@2@@Z ; icu_56::Transliterator::adoptFilter
$LN6@utrans_set:
; Line 289
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@utrans_set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@utrans_set:
	DD	1
	DD	$LN13@utrans_set
$LN13@utrans_set:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN12@utrans_set
$LN12@utrans_set:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
_utrans_setFilter_56 ENDP
_TEXT	ENDS
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUnicodeSet@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUnicodeSet@icu_56@@UAEPAXI@Z PROC			; icu_56::UnicodeSet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUnicodeSet@icu_56@@UAEPAXI@Z ENDP			; icu_56::UnicodeSet::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_utrans_countAvailableIDs_56
EXTRN	?countAvailableIDs@Transliterator@icu_56@@SAHXZ:PROC ; icu_56::Transliterator::countAvailableIDs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_countAvailableIDs_56
_TEXT	SEGMENT
_utrans_countAvailableIDs_56 PROC			; COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 293
	call	?countAvailableIDs@Transliterator@icu_56@@SAHXZ ; icu_56::Transliterator::countAvailableIDs
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_countAvailableIDs_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_getAvailableID_56
EXTRN	?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z:PROC ; icu_56::Transliterator::getAvailableID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_getAvailableID_56
_TEXT	SEGMENT
_index$ = 8						; size = 4
_buf$ = 12						; size = 4
_bufCapacity$ = 16					; size = 4
_utrans_getAvailableID_56 PROC				; COMDAT
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 300
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _bufCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	push	0
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	call	?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z ; icu_56::Transliterator::getAvailableID
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_getAvailableID_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _utrans_enum_count
_TEXT	SEGMENT
_uenum$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_utrans_enum_count PROC					; COMDAT
; Line 312
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 313
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN1@utrans_enu
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@utrans_enu
$LN1@utrans_enu:
; Line 314
	xor	eax, eax
	jmp	SHORT $LN3@utrans_enu
$LN2@utrans_enu:
; Line 316
	mov	eax, DWORD PTR _uenum$[ebp]
	mov	eax, DWORD PTR [eax+32]
$LN3@utrans_enu:
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_enum_count ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _utrans_enum_unext
_TEXT	SEGMENT
_ID$37003 = -32						; size = 4
_index$ = -20						; size = 4
_ute$ = -8						; size = 4
_uenum$ = 8						; size = 4
_resultLength$ = 12					; size = 4
_pErrorCode$ = 16					; size = 4
_utrans_enum_unext PROC					; COMDAT
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 323
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN4@utrans_enu@2
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@utrans_enu@2
$LN4@utrans_enu@2:
; Line 324
	xor	eax, eax
	jmp	SHORT $LN6@utrans_enu@2
$LN5@utrans_enu@2:
; Line 327
	mov	eax, DWORD PTR _uenum$[ebp]
	mov	DWORD PTR _ute$[ebp], eax
; Line 328
	mov	eax, DWORD PTR _ute$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _index$[ebp], ecx
; Line 329
	mov	eax, DWORD PTR _ute$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+32]
	jge	SHORT $LN3@utrans_enu@2
; Line 330
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	?getAvailableID@Transliterator@icu_56@@SAABVUnicodeString@2@H@Z ; icu_56::Transliterator::getAvailableID
	add	esp, 4
	mov	DWORD PTR _ID$37003[ebp], eax
; Line 331
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _ute$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 332
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN2@utrans_enu@2
; Line 333
	mov	esi, esp
	mov	ecx, DWORD PTR _ID$37003[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@utrans_enu@2:
; Line 336
	mov	esi, esp
	mov	ecx, DWORD PTR _ID$37003[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@utrans_enu@2
$LN3@utrans_enu@2:
; Line 339
	cmp	DWORD PTR _resultLength$[ebp], 0
	je	SHORT $LN1@utrans_enu@2
; Line 340
	mov	eax, DWORD PTR _resultLength$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@utrans_enu@2:
; Line 342
	xor	eax, eax
$LN6@utrans_enu@2:
; Line 343
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_enum_unext ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _utrans_enum_reset
_TEXT	SEGMENT
_ute$ = -8						; size = 4
_uenum$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_utrans_enum_reset PROC					; COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN1@utrans_enu@3
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@utrans_enu@3
$LN1@utrans_enu@3:
; Line 348
	jmp	SHORT $LN3@utrans_enu@3
$LN2@utrans_enu@3:
; Line 351
	mov	eax, DWORD PTR _uenum$[ebp]
	mov	DWORD PTR _ute$[ebp], eax
; Line 352
	mov	eax, DWORD PTR _ute$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 353
	call	?countAvailableIDs@Transliterator@icu_56@@SAHXZ ; icu_56::Transliterator::countAvailableIDs
	mov	ecx, DWORD PTR _ute$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN3@utrans_enu@3:
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_enum_reset ENDP
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_enum_close
_TEXT	SEGMENT
_uenum$ = 8						; size = 4
_utrans_enum_close PROC					; COMDAT
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	eax, DWORD PTR _uenum$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_enum_close ENDP
_TEXT	ENDS
PUBLIC	_utrans_openIDs_56
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_openIDs_56
_TEXT	SEGMENT
_ute$ = -8						; size = 4
_pErrorCode$ = 8					; size = 4
_utrans_openIDs_56 PROC					; COMDAT
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 376
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN2@utrans_ope@4
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@utrans_ope@4
$LN2@utrans_ope@4:
; Line 377
	xor	eax, eax
	jmp	SHORT $LN4@utrans_ope@4
$LN3@utrans_ope@4:
; Line 380
	push	36					; 00000024H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _ute$[ebp], eax
; Line 381
	cmp	DWORD PTR _ute$[ebp], 0
	jne	SHORT $LN1@utrans_ope@4
; Line 382
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 383
	xor	eax, eax
	jmp	SHORT $LN4@utrans_ope@4
$LN1@utrans_ope@4:
; Line 386
	mov	ecx, 7
	mov	esi, OFFSET _utransEnumeration
	mov	edi, DWORD PTR _ute$[ebp]
	rep movsd
; Line 387
	mov	eax, DWORD PTR _ute$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 388
	call	?countAvailableIDs@Transliterator@icu_56@@SAHXZ ; icu_56::Transliterator::countAvailableIDs
	mov	ecx, DWORD PTR _ute$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 389
	mov	eax, DWORD PTR _ute$[ebp]
$LN4@utrans_ope@4:
; Line 390
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_openIDs_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_trans_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_trans_56
_TEXT	SEGMENT
_r$ = -16						; size = 12
_trans$ = 8						; size = 4
_rep$ = 12						; size = 4
_repFunc$ = 16						; size = 4
_start$ = 20						; size = 4
_limit$ = 24						; size = 4
_status$ = 28						; size = 4
_utrans_trans_56 PROC					; COMDAT
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 404
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@utrans_tra
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@utrans_tra
$LN3@utrans_tra:
	jmp	SHORT $LN5@utrans_tra
$LN4@utrans_tra:
; Line 406
	cmp	DWORD PTR _trans$[ebp], 0
	je	SHORT $LN1@utrans_tra
	cmp	DWORD PTR _rep$[ebp], 0
	je	SHORT $LN1@utrans_tra
	cmp	DWORD PTR _repFunc$[ebp], 0
	je	SHORT $LN1@utrans_tra
	cmp	DWORD PTR _limit$[ebp], 0
	jne	SHORT $LN2@utrans_tra
$LN1@utrans_tra:
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 408
	jmp	SHORT $LN5@utrans_tra
$LN2@utrans_tra:
; Line 411
	mov	eax, DWORD PTR _repFunc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rep$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _r$[ebp]
	call	??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z ; icu_56::ReplaceableGlue::ReplaceableGlue
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _limit$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 414
	lea	ecx, DWORD PTR _r$[ebp]
	call	??1ReplaceableGlue@icu_56@@UAE@XZ	; icu_56::ReplaceableGlue::~ReplaceableGlue
$LN5@utrans_tra:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@utrans_tra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@utrans_tra:
	DD	1
	DD	$LN8@utrans_tra
$LN8@utrans_tra:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN7@utrans_tra
$LN7@utrans_tra:
	DB	114					; 00000072H
	DB	0
_utrans_trans_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_transIncremental_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_transIncremental_56
_TEXT	SEGMENT
_r$ = -16						; size = 12
_trans$ = 8						; size = 4
_rep$ = 12						; size = 4
_repFunc$ = 16						; size = 4
_pos$ = 20						; size = 4
_status$ = 24						; size = 4
_utrans_transIncremental_56 PROC			; COMDAT
; Line 421
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 423
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN3@utrans_tra@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@utrans_tra@2
$LN3@utrans_tra@2:
	jmp	SHORT $LN5@utrans_tra@2
$LN4@utrans_tra@2:
; Line 425
	cmp	DWORD PTR _trans$[ebp], 0
	je	SHORT $LN1@utrans_tra@2
	cmp	DWORD PTR _rep$[ebp], 0
	je	SHORT $LN1@utrans_tra@2
	cmp	DWORD PTR _repFunc$[ebp], 0
	je	SHORT $LN1@utrans_tra@2
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN2@utrans_tra@2
$LN1@utrans_tra@2:
; Line 426
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 427
	jmp	SHORT $LN5@utrans_tra@2
$LN2@utrans_tra@2:
; Line 430
	mov	eax, DWORD PTR _repFunc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rep$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _r$[ebp]
	call	??0ReplaceableGlue@icu_56@@QAE@PAPAXPAUUReplaceableCallbacks@@@Z ; icu_56::ReplaceableGlue::ReplaceableGlue
; Line 432
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 433
	lea	ecx, DWORD PTR _r$[ebp]
	call	??1ReplaceableGlue@icu_56@@UAE@XZ	; icu_56::ReplaceableGlue::~ReplaceableGlue
$LN5@utrans_tra@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@utrans_tra@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@utrans_tra@2:
	DD	1
	DD	$LN8@utrans_tra@2
$LN8@utrans_tra@2:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN7@utrans_tra@2
$LN7@utrans_tra@2:
	DB	114					; 00000072H
	DB	0
_utrans_transIncremental_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_transUChars_56
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PA_WHH@Z:PROC
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_transUChars_56
_TEXT	SEGMENT
tv76 = -284						; size = 4
_str$ = -84						; size = 64
_textLen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_trans$ = 8						; size = 4
_text$ = 12						; size = 4
_textLength$ = 16					; size = 4
_textCapacity$ = 20					; size = 4
_start$ = 24						; size = 4
_limit$ = 28						; size = 4
_status$ = 32						; size = 4
_utrans_transUChars_56 PROC				; COMDAT
; Line 442
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 444
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN4@utrans_tra@3
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@utrans_tra@3
$LN4@utrans_tra@3:
	jmp	$LN6@utrans_tra@3
$LN5@utrans_tra@3:
; Line 446
	cmp	DWORD PTR _trans$[ebp], 0
	je	SHORT $LN2@utrans_tra@3
	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN2@utrans_tra@3
	cmp	DWORD PTR _limit$[ebp], 0
	jne	SHORT $LN3@utrans_tra@3
$LN2@utrans_tra@3:
; Line 447
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 448
	jmp	$LN6@utrans_tra@3
$LN3@utrans_tra@3:
; Line 452
	cmp	DWORD PTR _textLength$[ebp], 0
	je	SHORT $LN8@utrans_tra@3
	mov	eax, DWORD PTR _textLength$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN8@utrans_tra@3
	mov	ecx, DWORD PTR _textLength$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN9@utrans_tra@3
$LN8@utrans_tra@3:
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR tv76[ebp], eax
$LN9@utrans_tra@3:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _textLen$[ebp], ecx
; Line 454
	mov	esi, esp
	mov	eax, DWORD PTR _textCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PA_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 456
	mov	esi, esp
	mov	eax, DWORD PTR _limit$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 460
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textLen$[ebp], eax
; Line 461
	cmp	DWORD PTR _textLength$[ebp], 0
	je	SHORT $LN1@utrans_tra@3
; Line 462
	mov	eax, DWORD PTR _textLength$[ebp]
	mov	ecx, DWORD PTR _textLen$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@utrans_tra@3:
; Line 464
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@utrans_tra@3:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@utrans_tra@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@utrans_tra@3:
	DD	1
	DD	$LN11@utrans_tra@3
$LN11@utrans_tra@3:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN10@utrans_tra@3
$LN10@utrans_tra@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_utrans_transUChars_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_transIncrementalUChars_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_transIncrementalUChars_56
_TEXT	SEGMENT
tv76 = -284						; size = 4
_str$ = -84						; size = 64
_textLen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_trans$ = 8						; size = 4
_text$ = 12						; size = 4
_textLength$ = 16					; size = 4
_textCapacity$ = 20					; size = 4
_pos$ = 24						; size = 4
_status$ = 28						; size = 4
_utrans_transIncrementalUChars_56 PROC			; COMDAT
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 474
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN4@utrans_tra@4
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@utrans_tra@4
$LN4@utrans_tra@4:
	jmp	$LN6@utrans_tra@4
$LN5@utrans_tra@4:
; Line 476
	cmp	DWORD PTR _trans$[ebp], 0
	je	SHORT $LN2@utrans_tra@4
	cmp	DWORD PTR _text$[ebp], 0
	je	SHORT $LN2@utrans_tra@4
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN3@utrans_tra@4
$LN2@utrans_tra@4:
; Line 477
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 478
	jmp	$LN6@utrans_tra@4
$LN3@utrans_tra@4:
; Line 482
	cmp	DWORD PTR _textLength$[ebp], 0
	je	SHORT $LN8@utrans_tra@4
	mov	eax, DWORD PTR _textLength$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN8@utrans_tra@4
	mov	ecx, DWORD PTR _textLength$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN9@utrans_tra@4
$LN8@utrans_tra@4:
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR tv76[ebp], eax
$LN9@utrans_tra@4:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _textLen$[ebp], ecx
; Line 484
	mov	esi, esp
	mov	eax, DWORD PTR _textCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PA_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 490
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _textCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textLen$[ebp], eax
; Line 491
	cmp	DWORD PTR _textLength$[ebp], 0
	je	SHORT $LN1@utrans_tra@4
; Line 492
	mov	eax, DWORD PTR _textLength$[ebp]
	mov	ecx, DWORD PTR _textLen$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@utrans_tra@4:
; Line 494
	mov	esi, esp
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@utrans_tra@4:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@utrans_tra@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@utrans_tra@4:
	DD	1
	DD	$LN11@utrans_tra@4
$LN11@utrans_tra@4:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN10@utrans_tra@4
$LN10@utrans_tra@4:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_utrans_transIncrementalUChars_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_utrans_toRules_56
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PA_WHH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_toRules_56
_TEXT	SEGMENT
tv74 = -284						; size = 4
$T44009 = -276						; size = 4
_res$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_trans$ = 8						; size = 4
_escapeUnprintable$ = 12				; size = 1
_result$ = 16						; size = 4
_resultLength$ = 20					; size = 4
_status$ = 24						; size = 4
_utrans_toRules_56 PROC					; COMDAT
; Line 500
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 501
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@utrans_toR
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@utrans_toR
$LN2@utrans_toR:
	xor	eax, eax
	jmp	$LN4@utrans_toR
$LN3@utrans_toR:
; Line 502
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@utrans_toR
	xor	eax, eax
	cmp	DWORD PTR _resultLength$[ebp], 0
	setne	al
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN7@utrans_toR
$LN6@utrans_toR:
	xor	ecx, ecx
	cmp	DWORD PTR _resultLength$[ebp], 0
	setl	cl
	mov	DWORD PTR tv74[ebp], ecx
$LN7@utrans_toR:
	cmp	DWORD PTR tv74[ebp], 0
	je	SHORT $LN1@utrans_toR
; Line 503
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 504
	xor	eax, eax
	jmp	$LN4@utrans_toR
$LN1@utrans_toR:
; Line 507
	mov	esi, esp
	lea	ecx, DWORD PTR _res$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 508
	mov	esi, esp
	mov	eax, DWORD PTR _resultLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _res$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PA_WHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 509
	mov	esi, esp
	movzx	eax, BYTE PTR _escapeUnprintable$[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	push	ecx
	mov	edx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 510
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resultLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	lea	ecx, DWORD PTR _res$[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHPA_WHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T44009[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _res$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T44009[ebp]
$LN4@utrans_toR:
; Line 511
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@utrans_toR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@utrans_toR:
	DD	1
	DD	$LN9@utrans_toR
$LN9@utrans_toR:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN8@utrans_toR
$LN8@utrans_toR:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_utrans_toRules_56 ENDP
_TEXT	ENDS
PUBLIC	_utrans_getSourceSet_56
EXTRN	?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z:PROC ; icu_56::Transliterator::getSourceSet
EXTRN	_uset_openEmpty_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utrans_getSourceSet_56
_TEXT	SEGMENT
_trans$ = 8						; size = 4
_ignoreFilter$ = 12					; size = 1
_fillIn$ = 16						; size = 4
_status$ = 20						; size = 4
_utrans_getSourceSet_56 PROC				; COMDAT
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 518
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN4@utrans_get@2
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@utrans_get@2
$LN4@utrans_get@2:
	mov	eax, DWORD PTR _fillIn$[ebp]
	jmp	SHORT $LN6@utrans_get@2
$LN5@utrans_get@2:
; Line 520
	cmp	DWORD PTR _fillIn$[ebp], 0
	jne	SHORT $LN3@utrans_get@2
; Line 521
	call	_uset_openEmpty_56
	mov	DWORD PTR _fillIn$[ebp], eax
$LN3@utrans_get@2:
; Line 523
	movsx	eax, BYTE PTR _ignoreFilter$[ebp]
	test	eax, eax
	je	SHORT $LN2@utrans_get@2
; Line 524
	mov	esi, esp
	mov	eax, DWORD PTR _fillIn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _trans$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 525
	jmp	SHORT $LN1@utrans_get@2
$LN2@utrans_get@2:
; Line 526
	mov	eax, DWORD PTR _fillIn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _trans$[ebp]
	call	?getSourceSet@Transliterator@icu_56@@QBEAAVUnicodeSet@2@AAV32@@Z ; icu_56::Transliterator::getSourceSet
$LN1@utrans_get@2:
; Line 528
	mov	eax, DWORD PTR _fillIn$[ebp]
$LN6@utrans_get@2:
; Line 529
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utrans_getSourceSet_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_EUnicodeSet@icu_56@@W3AEPAXI@Z
_TEXT	SEGMENT
??_EUnicodeSet@icu_56@@W3AEPAXI@Z PROC			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_EUnicodeSet@icu_56@@UAEPAXI@Z
??_EUnicodeSet@icu_56@@W3AEPAXI@Z ENDP			; [thunk]:icu_56::UnicodeSet::`vector deleting destructor'
_TEXT	ENDS
END
